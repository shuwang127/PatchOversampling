TranslationUnitDecl 0x23f5ab25f48 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x23f5ab267e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x23f5ab264e0 '__int128'
|-TypedefDecl 0x23f5ab26850 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x23f5ab26500 'unsigned __int128'
|-TypedefDecl 0x23f5ab26b88 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x23f5ab26940 'struct __NSConstantString_tag'
|   `-Record 0x23f5ab268a8 '__NSConstantString_tag'
|-TypedefDecl 0x23f5ab26bf8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x23f5ab26120 'unsigned long long'
|-TypedefDecl 0x23f5ab26c90 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x23f5ab26c50 'char *'
|   `-BuiltinType 0x23f5ab25fe0 'char'
|-TypedefDecl 0x23f5ab26d00 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x23f5ab26c50 'char *'
|   `-BuiltinType 0x23f5ab25fe0 'char'
|-TypedefDecl 0x23f5ab26dc0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x23f5ab26120 'unsigned long long'
|-TypedefDecl 0x23f5ab26e30 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x23f5ab26c50 'char *'
|   `-BuiltinType 0x23f5ab25fe0 'char'
|-FunctionDecl 0x23f5c5ea460 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x23f5c5ea500 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x23f5c5ea570 <col:21> Implicit
|-FunctionDecl 0x23f5c5ea5c8 prev 0x23f5c5ea460 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x23f5c5ea2f0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x23f5c5ea6b8 <col:21> Inherited Implicit
|-TypedefDecl 0x23f5c5ea6f8 prev 0x23f5ab26bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x23f5ab26120 'unsigned long long'
|-TypedefDecl 0x23f5c5ea7a0 <line:503:1, col:16> col:16 rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x23f5c5ea770 'size_t' sugar
|   |-Typedef 0x23f5c5ea6f8 'size_t'
|   `-BuiltinType 0x23f5ab26120 'unsigned long long'
|-TypedefDecl 0x23f5c5ea810 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x23f5ab26080 'long long'
|-TypedefDecl 0x23f5c5ea880 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x23f5ab26080 'long long'
|-TypedefDecl 0x23f5c5ea8f0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x23f5ab260c0 'unsigned short'
|-TypedefDecl 0x23f5c5ea960 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x23f5ab260c0 'unsigned short'
|-TypedefDecl 0x23f5c5ea9d0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x23f5ab260c0 'unsigned short'
|-TypedefDecl 0x23f5c5eaa40 <line:563:1, col:13> col:13 errno_t 'int'
| `-BuiltinType 0x23f5ab26040 'int'
|-TypedefDecl 0x23f5c5eaab0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x23f5ab26060 'long'
|-TypedefDecl 0x23f5c5eab20 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x23f5ab26080 'long long'
|-TypedefDecl 0x23f5c5eabb0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x23f5c5eab80 '__time64_t' sugar
|   |-Typedef 0x23f5c5eab20 '__time64_t'
|   `-BuiltinType 0x23f5ab26080 'long long'
|-FunctionDecl 0x23f5c5ead28 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x23f5c5eaf48 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x23f5c624360 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x23f5c5eb088 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x23f5c5eb100 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x23f5c5eb178 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x23f5c5eb1f8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x23f5c624100 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x23f5c624440 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x23f5c624500 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x23f5c624670 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x23f5c624620 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x23f5c6245c0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x23f5c6244e0 'struct threadlocaleinfostruct'
|       `-Record 0x23f5c62f1b0 'threadlocaleinfostruct'
|-TypedefDecl 0x23f5c624780 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x23f5c624730 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x23f5c6246d0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x23f5c6245a0 'struct threadmbcinfostruct'
|       `-Record 0x23f5c624500 'threadmbcinfostruct'
|-RecordDecl 0x23f5c6247d8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x23f5c624890 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x23f5c624950 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23f5c6249e0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x23f5c624a70 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x23f5c624b28 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x23f5c624ad0 'struct localeinfo_struct' sugar
|   `-RecordType 0x23f5c624930 'struct localeinfo_struct'
|     `-Record 0x23f5c624890 'localeinfo_struct'
|-TypedefDecl 0x23f5c624c00 <line:2078:1, line:2082:21> col:21 _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x23f5c624bb0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x23f5c624ad0 'struct localeinfo_struct' sugar
|     `-RecordType 0x23f5c624930 'struct localeinfo_struct'
|       `-Record 0x23f5c624890 'localeinfo_struct'
|-RecordDecl 0x23f5c624c78 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x23f5c624d30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23f5c624da8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x23f5c624e68 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x23f5c624f00 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x23f5c624f70 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x23f5c625028 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x23f5c624fd0 'struct localerefcount' sugar
|   `-RecordType 0x23f5c624d10 'struct localerefcount'
|     `-Record 0x23f5c624c78 'localerefcount'
|-RecordDecl 0x23f5c62f1b0 prev 0x23f5c624440 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x23f5c62f230 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x23f5c62f2a8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x23f5c62f318 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x23f5c62f388 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x23f5c62f3f8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x23f5c62f5b8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x23f5c62f628 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x23f5c62f698 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x23f5c62f708 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x23f5c62f778 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x23f5c62f7e8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x23f5c62f840 parent 0x23f5ab25f48 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x23f5c62f9d0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x23f5c62fa40 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x23f5c62fab0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x23f5c62fb20 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x23f5c62fbc0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x23f5c62fc30 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x23f5c62fd40 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x23f5c62fe78 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x23f5c62ff28 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x23f5c62fed0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x23f5c6244e0 'struct threadlocaleinfostruct'
|     `-Record 0x23f5c62f1b0 'threadlocaleinfostruct'
|-FunctionDecl 0x23f5c628220 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x23f5c62ffa8 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x23f5c630020 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x23f5c6300a0 <col:98, col:107> col:107 _Line 'unsigned int'
|-TypedefDecl 0x23f5c628308 <D:\Microsoft Visual Studio 12.0\VC\include\signal.h:28:1, col:13> col:13 sig_atomic_t 'int'
| `-BuiltinType 0x23f5ab26040 'int'
|-FunctionDecl 0x23f5c6284c0 <line:88:1, col:45> col:25 __pxcptinfoptrs 'void **(void) __attribute__((cdecl))':'void **(void)' extern
|-FunctionDecl 0x23f5c628a40 <line:94:9, col:100> col:33 signal 'void (*(int, void (*)(int) __attribute__((cdecl))))(int) __attribute__((cdecl)) __attribute__((cdecl))'
| |-ParmVarDecl 0x23f5c628590 <col:45, col:49> col:49 _SigNum 'int'
| `-ParmVarDecl 0x23f5c6287c8 <col:67, col:83> col:83 _Func 'void (*)(int) __attribute__((cdecl))'
|-FunctionDecl 0x23f5c628c68 <line:97:9, col:43> col:21 raise 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x23f5c628b20 <col:32, col:36> col:36 _SigNum 'int'
|-FunctionDecl 0x23f5c628ed0 <.//openssl//file_jk/after\apps/apps.h:43:1, col:55> col:5 app_RAND_load_file 'int (const char *, int)'
| |-ParmVarDecl 0x23f5c628d40 <col:24, col:36> col:36 file 'const char *'
| `-ParmVarDecl 0x23f5c628dc0 <col:42, col:46> col:46 dont_warn 'int'
|-FunctionDecl 0x23f5c629090 <line:44:1, col:41> col:5 app_RAND_write_file 'int (const char *)'
| `-ParmVarDecl 0x23f5c628fb0 <col:25, col:37> col:37 file 'const char *'
|-FunctionDecl 0x23f5c639300 <line:48:1, col:36> col:6 used app_RAND_allow_write_file 'void (void)'
|-FunctionDecl 0x23f5c6394b0 <line:49:1, col:36> col:6 app_RAND_load_files 'long (char *)'
| `-ParmVarDecl 0x23f5c6393d0 <col:26, col:32> col:32 file 'char *'
|-VarDecl 0x23f5c639588 <line:54:1, col:14> col:14 default_config_file 'char *' extern
|-VarDecl 0x23f5c639620 <line:55:1, col:13> col:13 invalid bio_in 'int *' extern
|-VarDecl 0x23f5c6396a0 <line:56:1, col:13> col:13 invalid bio_out 'int *' extern
|-VarDecl 0x23f5c639720 <line:57:1, col:13> col:13 invalid bio_err 'int *' extern
|-FunctionDecl 0x23f5c639880 <line:58:1, col:27> col:6 invalid dup_bio_in 'int *(int)'
| `-ParmVarDecl 0x23f5c6397a0 <col:17, col:21> col:21 format 'int'
|-FunctionDecl 0x23f5c6399f0 <line:59:1, col:28> col:6 invalid dup_bio_out 'int *(int)'
| `-ParmVarDecl 0x23f5c639940 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x23f5c639b60 <line:60:1, col:28> col:6 invalid dup_bio_err 'int *(int)'
| `-ParmVarDecl 0x23f5c639ab0 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x23f5c639e50 <line:61:1, col:66> col:6 invalid bio_open_owner 'int *(const char *, int, int)'
| |-ParmVarDecl 0x23f5c639c20 <col:21, col:33> col:33 filename 'const char *'
| |-ParmVarDecl 0x23f5c639ca0 <col:43, col:47> col:47 format 'int'
| `-ParmVarDecl 0x23f5c639d20 <col:55, col:59> col:59 private 'int'
|-FunctionDecl 0x23f5c63a150 <line:62:1, col:66> col:6 invalid bio_open_default 'int *(const char *, char, int)'
| |-ParmVarDecl 0x23f5c639f20 <col:23, col:35> col:35 filename 'const char *'
| |-ParmVarDecl 0x23f5c639f98 <col:45, col:50> col:50 mode 'char'
| `-ParmVarDecl 0x23f5c63a018 <col:56, col:60> col:60 format 'int'
|-FunctionDecl 0x23f5c6323c8 <line:63:1, col:72> col:6 invalid bio_open_default_quiet 'int *(const char *, char, int)'
| |-ParmVarDecl 0x23f5c6321e0 <col:29, col:41> col:41 filename 'const char *'
| |-ParmVarDecl 0x23f5c632258 <col:51, col:56> col:56 mode 'char'
| `-ParmVarDecl 0x23f5c6322d8 <col:62, col:66> col:66 format 'int'
|-FunctionDecl 0x23f5c632580 <line:64:1, col:43> col:7 invalid app_load_config 'int *(const char *)'
| `-ParmVarDecl 0x23f5c632498 <col:23, col:35> col:35 filename 'const char *'
|-FunctionDecl 0x23f5c6326f0 <line:65:1, col:49> col:7 invalid app_load_config_quiet 'int *(const char *)'
| `-ParmVarDecl 0x23f5c632640 <col:29, col:41> col:41 filename 'const char *'
|-FunctionDecl 0x23f5c632880 <line:66:1, col:40> col:5 invalid app_load_modules 'int (const int *)'
| `-ParmVarDecl 0x23f5c6327b0 <col:22, col:34> col:34 invalid config 'const int *'
|-FunctionDecl 0x23f5c632a08 <line:67:1, col:23> col:6 invalid unbuffer 'void (int *)'
| `-ParmVarDecl 0x23f5c632940 <col:15, col:21> col:21 invalid fp 'int *'
|-FunctionDecl 0x23f5c632b58 <line:68:1, col:27> col:6 invalid wait_for_async 'void (int *)'
| `-ParmVarDecl 0x23f5c632ac8 <col:21, col:26> col:26 invalid s 'int *'
|-FunctionDecl 0x23f5c632cd8 <line:73:1, col:52> col:6 invalid corrupt_signature 'void (const int *)'
| `-ParmVarDecl 0x23f5c632c18 <col:24, col:43> col:43 invalid signature 'const int *'
|-FunctionDecl 0x23f5c633010 <line:74:1, line:75:28> line:74:5 invalid set_cert_times 'int (int *, const char *, const char *, int)'
| |-ParmVarDecl 0x23f5c632d98 <col:20, col:26> col:26 invalid x 'int *'
| |-ParmVarDecl 0x23f5c632e18 <col:29, col:41> col:41 startdate 'const char *'
| |-ParmVarDecl 0x23f5c632e98 <col:52, col:64> col:64 enddate 'const char *'
| `-ParmVarDecl 0x23f5c632f18 <line:75:20, col:24> col:24 days 'int'
|-VarDecl 0x23f5c633148 <line:291:1, col:32> col:19 OPT_HELP_STR 'const char []' extern
|-VarDecl 0x23f5c636240 <line:292:1, col:32> col:19 OPT_MORE_STR 'const char []' extern
|-RecordDecl 0x23f5c6362c0 <line:293:9, line:304:1> line:293:16 struct options_st definition
| |-FieldDecl 0x23f5c636398 <line:294:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x23f5c636408 <line:295:5, col:9> col:9 retval 'int'
| |-FieldDecl 0x23f5c636478 <line:302:5, col:9> col:9 valtype 'int'
| `-FieldDecl 0x23f5c6364e8 <line:303:5, col:17> col:17 helpstr 'const char *'
|-TypedefDecl 0x23f5c636598 <line:293:1, line:304:3> col:3 referenced OPTIONS 'struct options_st':'struct options_st'
| `-ElaboratedType 0x23f5c636540 'struct options_st' sugar
|   `-RecordType 0x23f5c636360 'struct options_st'
|     `-Record 0x23f5c6362c0 'options_st'
|-RecordDecl 0x23f5c636608 <line:311:9, line:314:1> line:311:16 struct string_int_pair_st definition
| |-FieldDecl 0x23f5c6366d8 <line:312:5, col:17> col:17 name 'const char *'
| `-FieldDecl 0x23f5c636748 <line:313:5, col:9> col:9 retval 'int'
|-TypedefDecl 0x23f5c6367f8 <line:311:1, line:314:3> col:3 referenced OPT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x23f5c6367a0 'struct string_int_pair_st' sugar
|   `-RecordType 0x23f5c6366a0 'struct string_int_pair_st'
|     `-Record 0x23f5c636608 'string_int_pair_st'
|-TypedefDecl 0x23f5c636870 <line:311:1, line:314:13> col:13 STRINT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x23f5c6367a0 'struct string_int_pair_st' sugar
|   `-RecordType 0x23f5c6366a0 'struct string_int_pair_st'
|     `-Record 0x23f5c636608 'string_int_pair_st'
|-FunctionDecl 0x23f5c6369e0 <line:334:1, col:37> col:7 opt_progname 'char *(const char *)'
| `-ParmVarDecl 0x23f5c636900 <col:20, col:32> col:32 argv0 'const char *'
|-FunctionDecl 0x23f5c636b70 <line:335:1, col:23> col:7 opt_getprog 'char *(void)'
|-FunctionDecl 0x23f5c636f30 <line:336:1, col:52> col:7 opt_init 'char *(int, char **, const OPTIONS *)'
| |-ParmVarDecl 0x23f5c636c40 <col:16, col:20> col:20 ac 'int'
| |-ParmVarDecl 0x23f5c636cc0 <col:24, col:31> col:31 av 'char **'
| `-ParmVarDecl 0x23f5c636db8 <col:35, col:51> col:51 o 'const OPTIONS *'
|-FunctionDecl 0x23f5c6370d0 <line:337:1, col:18> col:5 opt_next 'int (void)'
|-FunctionDecl 0x23f5c63b420 <line:338:1, col:63> col:5 opt_format 'int (const char *, unsigned long, int *)'
| |-ParmVarDecl 0x23f5c6371a0 <col:16, col:28> col:28 s 'const char *'
| |-ParmVarDecl 0x23f5c63b270 <col:31, col:45> col:45 flags 'unsigned long'
| `-ParmVarDecl 0x23f5c63b2f0 <col:52, col:57> col:57 result 'int *'
|-FunctionDecl 0x23f5c63b690 <line:339:1, col:41> col:5 opt_int 'int (const char *, int *)'
| |-ParmVarDecl 0x23f5c63b508 <col:13, col:25> col:25 arg 'const char *'
| `-ParmVarDecl 0x23f5c63b588 <col:30, col:35> col:35 result 'int *'
|-FunctionDecl 0x23f5c63b930 <line:340:1, col:53> col:5 opt_ulong 'int (const char *, unsigned long *)'
| |-ParmVarDecl 0x23f5c63b770 <col:15, col:27> col:27 arg 'const char *'
| `-ParmVarDecl 0x23f5c63b820 <col:32, col:47> col:47 result 'unsigned long *'
|-FunctionDecl 0x23f5c63bbd0 <line:341:1, col:43> col:5 opt_long 'int (const char *, long *)'
| |-ParmVarDecl 0x23f5c63ba10 <col:14, col:26> col:26 arg 'const char *'
| `-ParmVarDecl 0x23f5c63bac0 <col:31, col:37> col:37 result 'long *'
|-FunctionDecl 0x23f5c63bfa0 <line:352:1, col:66> col:5 opt_pair 'int (const char *, const OPT_PAIR *, int *)'
| |-ParmVarDecl 0x23f5c63bcb0 <col:14, col:26> col:26 arg 'const char *'
| |-ParmVarDecl 0x23f5c63bda8 <col:31, col:48> col:48 pairs 'const OPT_PAIR *'
| `-ParmVarDecl 0x23f5c63be28 <col:55, col:60> col:60 result 'int *'
|-FunctionDecl 0x23f5c63c280 <line:353:1, col:60> col:5 invalid opt_cipher 'int (const char *, const int **)'
| |-ParmVarDecl 0x23f5c63c088 <col:16, col:28> col:28 name 'const char *'
| `-ParmVarDecl 0x23f5c63c138 <col:34, col:53> col:53 invalid cipherp 'const int **'
|-FunctionDecl 0x23f5c63c470 <line:354:1, col:48> col:5 invalid opt_md 'int (const char *, const int **)'
| |-ParmVarDecl 0x23f5c63c348 <col:12, col:24> col:24 name 'const char *'
| `-ParmVarDecl 0x23f5c63c3d0 <col:30, col:45> col:45 invalid mdp 'const int **'
|-FunctionDecl 0x23f5c63c5c0 <line:355:1, col:19> col:7 opt_arg 'char *(void)'
|-FunctionDecl 0x23f5c63c718 <line:356:1, col:20> col:7 opt_flag 'char *(void)'
|-FunctionDecl 0x23f5c63c870 <line:357:1, col:23> col:7 opt_unknown 'char *(void)'
|-FunctionDecl 0x23f5c63c9c8 <line:358:1, col:21> col:7 opt_reset 'char *(void)'
|-FunctionDecl 0x23f5c63cb50 <line:359:1, col:21> col:8 opt_rest 'char **(void)'
|-FunctionDecl 0x23f5c63cca8 <line:360:1, col:22> col:5 opt_num_rest 'int (void)'
|-FunctionDecl 0x23f5c63ced0 <line:361:1, col:45> col:5 invalid opt_verify 'int (int, int *)'
| |-ParmVarDecl 0x23f5c63cd78 <col:16, col:20> col:20 i 'int'
| `-ParmVarDecl 0x23f5c63cdf8 <col:23, col:42> col:42 invalid vpm 'int *'
|-FunctionDecl 0x23f5c63d098 <line:362:1, col:35> col:6 opt_help 'void (const OPTIONS *)'
| `-ParmVarDecl 0x23f5c63cf90 <col:15, col:31> col:31 list 'const OPTIONS *'
|-FunctionDecl 0x23f5c6352a0 <line:363:1, col:56> col:5 opt_format_error 'int (const char *, unsigned long)'
| |-ParmVarDecl 0x23f5c63d170 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x23f5c63d1f0 <col:37, col:51> col:51 flags 'unsigned long'
|-RecordDecl 0x23f5c635368 <line:365:9, line:369:1> line:365:16 struct args_st definition
| |-FieldDecl 0x23f5c635438 <line:366:5, col:9> col:9 size 'int'
| |-FieldDecl 0x23f5c6354a8 <line:367:5, col:9> col:9 argc 'int'
| `-FieldDecl 0x23f5c635518 <line:368:5, col:12> col:12 argv 'char **'
|-TypedefDecl 0x23f5c6355c8 <line:365:1, line:369:3> col:3 referenced ARGS 'struct args_st':'struct args_st'
| `-ElaboratedType 0x23f5c635570 'struct args_st' sugar
|   `-RecordType 0x23f5c635400 'struct args_st'
|     `-Record 0x23f5c635368 'args_st'
|-FunctionDecl 0x23f5c635890 <line:376:1, col:41> col:8 copy_argv 'char **(int *, char **)'
| |-ParmVarDecl 0x23f5c635650 <col:18, col:23> col:23 argc 'int *'
| `-ParmVarDecl 0x23f5c635740 <col:29, col:40> col:35 argv 'char **':'char **'
|-FunctionDecl 0x23f5c635bd8 <line:381:1, col:45> col:6 win32_utf8argv 'void (int *, char ***)'
| |-ParmVarDecl 0x23f5c635970 <col:21, col:26> col:26 argc 'int *'
| `-ParmVarDecl 0x23f5c635a90 <col:32, col:44> col:39 argv 'char ***':'char ***'
|-RecordDecl 0x23f5c635ca0 <line:385:9, line:388:1> line:385:16 struct pw_cb_data definition
| |-FieldDecl 0x23f5c635da0 <line:386:5, col:17> col:17 password 'const void *'
| `-FieldDecl 0x23f5c635e10 <line:387:5, col:17> col:17 prompt_info 'const char *'
|-TypedefDecl 0x23f5c635ec8 <line:385:1, line:388:3> col:3 referenced PW_CB_DATA 'struct pw_cb_data':'struct pw_cb_data'
| `-ElaboratedType 0x23f5c635e70 'struct pw_cb_data' sugar
|   `-RecordType 0x23f5c635d40 'struct pw_cb_data'
|     `-Record 0x23f5c635ca0 'pw_cb_data'
|-FunctionDecl 0x23f5c663e80 <line:390:1, col:77> col:5 password_callback 'int (char *, int, int, PW_CB_DATA *)'
| |-ParmVarDecl 0x23f5c635f50 <col:23, col:29> col:29 buf 'char *'
| |-ParmVarDecl 0x23f5c635fd0 <col:34, col:38> col:38 bufsiz 'int'
| |-ParmVarDecl 0x23f5c636050 <col:46, col:50> col:50 verify 'int'
| `-ParmVarDecl 0x23f5c636148 <col:58, col:70> col:70 cb_data 'PW_CB_DATA *'
|-FunctionDecl 0x23f5c663ff8 <line:392:1, col:25> col:5 setup_ui_method 'int (void)'
|-FunctionDecl 0x23f5c664148 <line:393:1, col:28> col:6 destroy_ui_method 'void (void)'
|-FunctionDecl 0x23f5c664450 <line:395:1, col:37> col:5 chopup_args 'int (ARGS *, char *)'
| |-ParmVarDecl 0x23f5c664288 <col:17, col:23> col:23 arg 'ARGS *'
| `-ParmVarDecl 0x23f5c664308 <col:28, col:34> col:34 buf 'char *'
|-FunctionDecl 0x23f5c664868 <line:401:1, line:402:43> line:401:6 invalid print_bignum_var 'void (int *, const int *, const char *, int, unsigned char *)'
| |-ParmVarDecl 0x23f5c664530 <col:23, <invalid sloc>> col:28 invalid 'int *'
| |-ParmVarDecl 0x23f5c6645b0 <col:30, <invalid sloc>> col:44 invalid 'const int *'
| |-ParmVarDecl 0x23f5c664630 <col:46, col:56> col:57 'const char *'
| |-ParmVarDecl 0x23f5c6646b0 <line:402:23> col:26 'int'
| `-ParmVarDecl 0x23f5c664760 <col:28, col:42> col:43 'unsigned char *'
|-FunctionDecl 0x23f5c664bb8 <line:403:1, col:65> col:6 invalid print_array 'void (int *, const char *, int, const unsigned char *)'
| |-ParmVarDecl 0x23f5c664948 <col:18, <invalid sloc>> col:23 invalid 'int *'
| |-ParmVarDecl 0x23f5c6649c8 <col:25, col:36> col:37 'const char *'
| |-ParmVarDecl 0x23f5c664a48 <col:39> col:42 'int'
| `-ParmVarDecl 0x23f5c664ac8 <col:44, col:64> col:65 'const unsigned char *'
|-FunctionDecl 0x23f5c665e50 <line:404:1, col:54> col:5 set_cert_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x23f5c664c90 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x23f5c664d10 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x23f5c666080 <line:405:1, col:54> col:5 set_name_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x23f5c665f30 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x23f5c665fb0 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x23f5c6662f0 <line:406:1, col:49> col:5 set_ext_copy 'int (int *, const char *)'
| |-ParmVarDecl 0x23f5c666160 <col:18, col:23> col:23 copy_type 'int *'
| `-ParmVarDecl 0x23f5c6661e0 <col:34, col:46> col:46 arg 'const char *'
|-FunctionDecl 0x23f5c6665c0 <line:407:1, col:58> col:5 invalid copy_extensions 'int (int *, int *, int)'
| |-ParmVarDecl 0x23f5c6663d0 <col:21, col:27> col:27 invalid x 'int *'
| |-ParmVarDecl 0x23f5c666450 <col:30, col:40> col:40 invalid req 'int *'
| `-ParmVarDecl 0x23f5c6664d0 <col:45, col:49> col:49 copy_type 'int'
|-FunctionDecl 0x23f5c666970 <line:408:1, col:78> col:5 app_passwd 'int (const char *, const char *, char **, char **)'
| |-ParmVarDecl 0x23f5c666690 <col:16, col:28> col:28 arg1 'const char *'
| |-ParmVarDecl 0x23f5c666710 <col:34, col:46> col:46 arg2 'const char *'
| |-ParmVarDecl 0x23f5c666790 <col:52, col:59> col:59 pass1 'char **'
| `-ParmVarDecl 0x23f5c666810 <col:66, col:73> col:73 pass2 'char **'
|-FunctionDecl 0x23f5c666b30 <line:409:1, col:31> col:5 invalid add_oid_section 'int (int *)'
| `-ParmVarDecl 0x23f5c666a60 <col:21, col:27> col:27 invalid conf 'int *'
|-FunctionDecl 0x23f5c66ae90 <line:410:1, col:71> col:7 invalid load_cert 'int *(const char *, int, const char *)'
| |-ParmVarDecl 0x23f5c666bf0 <col:17, col:29> col:29 file 'const char *'
| |-ParmVarDecl 0x23f5c666c70 <col:35, col:39> col:39 format 'int'
| `-ParmVarDecl 0x23f5c666cf0 <col:47, col:59> col:59 cert_descrip 'const char *'
|-FunctionDecl 0x23f5c66b0f0 <line:411:1, col:50> col:11 invalid load_crl 'int *(const char *, int)'
| |-ParmVarDecl 0x23f5c66af60 <col:20, col:32> col:32 infile 'const char *'
| `-ParmVarDecl 0x23f5c66afe0 <col:40, col:44> col:44 format 'int'
|-FunctionDecl 0x23f5c66b550 <line:412:1, line:413:72> line:412:11 invalid load_key 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x23f5c66b1b8 <col:20, col:32> col:32 file 'const char *'
| |-ParmVarDecl 0x23f5c66b238 <col:38, col:42> col:42 format 'int'
| |-ParmVarDecl 0x23f5c66b2b8 <col:50, col:54> col:54 maybe_stdin 'int'
| |-ParmVarDecl 0x23f5c66b338 <line:413:20, col:32> col:32 pass 'const char *'
| |-ParmVarDecl 0x23f5c66b3b8 <col:38, col:46> col:46 invalid e 'int *'
| `-ParmVarDecl 0x23f5c66b438 <col:49, col:61> col:61 key_descrip 'const char *'
|-FunctionDecl 0x23f5c66b978 <line:414:1, line:415:75> line:414:11 invalid load_pubkey 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x23f5c66b638 <col:23, col:35> col:35 file 'const char *'
| |-ParmVarDecl 0x23f5c66b6b8 <col:41, col:45> col:45 format 'int'
| |-ParmVarDecl 0x23f5c66b738 <col:53, col:57> col:57 maybe_stdin 'int'
| |-ParmVarDecl 0x23f5c66b7b8 <line:415:23, col:35> col:35 pass 'const char *'
| |-ParmVarDecl 0x23f5c66b838 <col:41, col:49> col:49 invalid e 'int *'
| `-ParmVarDecl 0x23f5c66b8b8 <col:52, col:64> col:64 key_descrip 'const char *'
|-FunctionDecl 0x23f5c66bca0 <line:416:1, line:417:58> line:416:5 invalid load_certs 'int (const char *, int (*)())'
| |-ParmVarDecl 0x23f5c66ba60 <col:16, col:28> col:28 file 'const char *'
| `-ParmVarDecl 0x23f5c66bb80 <col:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x23f5c669ea0 <line:418:1, line:419:57> line:418:5 invalid load_crls 'int (const char *, int (*)())'
| |-ParmVarDecl 0x23f5c66bd68 <col:15, col:27> col:27 file 'const char *'
| `-ParmVarDecl 0x23f5c669e00 <col:33, <invalid sloc>> col:33 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x23f5c66a240 <line:420:1, line:421:52> line:420:13 invalid setup_verify 'int *(const char *, const char *, int, int)'
| |-ParmVarDecl 0x23f5c669f68 <col:26, col:38> col:38 CAfile 'const char *'
| |-ParmVarDecl 0x23f5c669fe8 <col:46, col:58> col:58 CApath 'const char *'
| |-ParmVarDecl 0x23f5c66a068 <line:421:26, col:30> col:30 noCAfile 'int'
| `-ParmVarDecl 0x23f5c66a0e8 <col:40, col:44> col:44 noCApath 'int'
|-FunctionDecl 0x23f5c66a620 <line:422:1, line:424:49> line:422:12 invalid ctx_set_verify_locations 'int (int *, const char *, const char *, int, int)'
| |-ParmVarDecl 0x23f5c66a318 <col:37, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x23f5c66a398 <col:51, col:63> col:63 CAfile 'const char *'
| |-ParmVarDecl 0x23f5c66a418 <line:423:37, col:49> col:49 CApath 'const char *'
| |-ParmVarDecl 0x23f5c66a498 <col:57, col:61> col:61 noCAfile 'int'
| `-ParmVarDecl 0x23f5c66a518 <line:424:37, col:41> col:41 noCApath 'int'
|-FunctionDecl 0x23f5c66a820 <line:433:1, col:66> col:12 invalid ctx_set_ctlog_list_file 'int (int *, const char *)'
| |-ParmVarDecl 0x23f5c66a700 <col:36, col:45> col:45 invalid ctx 'int *'
| `-ParmVarDecl 0x23f5c66a780 <col:50, col:62> col:62 path 'const char *'
|-FunctionDecl 0x23f5c66aa38 <line:437:1, col:51> col:9 invalid setup_engine 'int *(const char *, int)'
| |-ParmVarDecl 0x23f5c66a8e8 <col:22, col:34> col:34 engine 'const char *'
| `-ParmVarDecl 0x23f5c66a968 <col:42, col:46> col:46 debug 'int'
|-FunctionDecl 0x23f5c66ab90 <line:438:1, col:30> col:6 invalid release_engine 'void (int *)'
| `-ParmVarDecl 0x23f5c66ab00 <col:21, col:29> col:29 invalid e 'int *'
|-FunctionDecl 0x23f5c66c0b0 <line:441:1, line:445:49> line:441:16 invalid process_responder 'int *(int *, const char *, const char *, const char *, int, int (*)())'
| |-ParmVarDecl 0x23f5c66ac50 <col:34, col:48> col:48 invalid req 'int *'
| |-ParmVarDecl 0x23f5c66acd0 <line:442:34, col:46> col:46 host 'const char *'
| |-ParmVarDecl 0x23f5c66ad50 <col:52, col:64> col:64 path 'const char *'
| |-ParmVarDecl 0x23f5c66be20 <line:443:34, col:46> col:46 port 'const char *'
| |-ParmVarDecl 0x23f5c66bea0 <col:52, col:56> col:56 use_ssl 'int'
| `-ParmVarDecl 0x23f5c66bf30 <line:444:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x23f5c66c4e0 <line:449:1, line:450:66> line:449:5 invalid unpack_revinfo 'int (int **, int *, int **, int **, const char *)'
| |-ParmVarDecl 0x23f5c66c1c8 <col:20, col:32> col:32 invalid prevtm 'int **'
| |-ParmVarDecl 0x23f5c66c248 <col:40, col:45> col:45 preason 'int *'
| |-ParmVarDecl 0x23f5c66c2d0 <col:54, col:68> col:68 invalid phold 'int **'
| |-ParmVarDecl 0x23f5c66c358 <line:450:20, col:43> col:43 invalid pinvtm 'int **'
| `-ParmVarDecl 0x23f5c66c3d8 <col:51, col:63> col:63 str 'const char *'
|-RecordDecl 0x23f5c66c5a8 <line:465:9, line:467:1> line:465:16 struct db_attr_st definition
| `-FieldDecl 0x23f5c66c678 <line:466:5, col:9> col:9 unique_subject 'int'
|-TypedefDecl 0x23f5c66c728 <line:465:1, line:467:3> col:3 referenced DB_ATTR 'struct db_attr_st':'struct db_attr_st'
| `-ElaboratedType 0x23f5c66c6d0 'struct db_attr_st' sugar
|   `-RecordType 0x23f5c66c640 'struct db_attr_st'
|     `-Record 0x23f5c66c5a8 'db_attr_st'
|-RecordDecl 0x23f5c66c798 <line:468:9, line:471:1> line:468:16 invalid struct ca_db_st definition
| |-FieldDecl 0x23f5c66c880 <line:469:5, col:13> col:13 attributes 'DB_ATTR':'struct db_attr_st'
| `-FieldDecl 0x23f5c66c8f0 <line:470:5, col:13> col:13 invalid db 'int *'
|-TypedefDecl 0x23f5c66c9f8 <line:468:1, line:471:3> col:3 referenced CA_DB 'struct ca_db_st':'struct ca_db_st'
| `-ElaboratedType 0x23f5c66c9a0 'struct ca_db_st' sugar
|   `-RecordType 0x23f5c66c830 'struct ca_db_st'
|     `-Record 0x23f5c66c798 'ca_db_st'
|-FunctionDecl 0x23f5c66cc10 <line:473:1, col:42> col:7 app_malloc 'void *(int, const char *)'
| |-ParmVarDecl 0x23f5c66ca80 <col:18, col:22> col:22 sz 'int'
| `-ParmVarDecl 0x23f5c66cb00 <col:26, col:38> col:38 what 'const char *'
|-FunctionDecl 0x23f5c66df30 <line:474:1, col:77> col:9 invalid load_serial 'int *(const char *, int, int **)'
| |-ParmVarDecl 0x23f5c66ccf0 <col:21, col:33> col:33 serialfile 'const char *'
| |-ParmVarDecl 0x23f5c66cd70 <col:45, col:49> col:49 create 'int'
| `-ParmVarDecl 0x23f5c66de40 <col:57, col:72> col:72 invalid retai 'int **'
|-FunctionDecl 0x23f5c66e280 <line:475:1, line:476:37> line:475:5 invalid save_serial 'int (const char *, const char *, const int *, int **)'
| |-ParmVarDecl 0x23f5c66e000 <col:17, col:29> col:29 serialfile 'const char *'
| |-ParmVarDecl 0x23f5c66e080 <col:41, col:53> col:53 suffix 'const char *'
| |-ParmVarDecl 0x23f5c66e100 <col:61, col:75> col:75 invalid serial 'const int *'
| `-ParmVarDecl 0x23f5c66e188 <line:476:17, col:32> col:32 invalid retai 'int **'
|-FunctionDecl 0x23f5c66e590 <line:477:1, line:478:41> line:477:5 rotate_serial 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x23f5c66e358 <col:19, col:31> col:31 serialfile 'const char *'
| |-ParmVarDecl 0x23f5c66e3d8 <col:43, col:55> col:55 new_suffix 'const char *'
| `-ParmVarDecl 0x23f5c66e458 <line:478:19, col:31> col:31 old_suffix 'const char *'
|-FunctionDecl 0x23f5c66e7d0 <line:479:1, col:44> col:5 invalid rand_serial 'int (int *, int *)'
| |-ParmVarDecl 0x23f5c66e678 <col:17, col:25> col:25 invalid b 'int *'
| `-ParmVarDecl 0x23f5c66e6f8 <col:28, col:42> col:42 invalid ai 'int *'
|-FunctionDecl 0x23f5c66eb28 <line:480:1, col:54> col:8 load_index 'CA_DB *(const char *, DB_ATTR *)'
| |-ParmVarDecl 0x23f5c66e8b8 <col:19, col:31> col:31 dbfile 'const char *'
| `-ParmVarDecl 0x23f5c66e988 <col:39, col:48> col:48 dbattr 'DB_ATTR *'
|-FunctionDecl 0x23f5c66ed10 <line:481:1, col:26> col:5 index_index 'int (CA_DB *)'
| `-ParmVarDecl 0x23f5c66ec00 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x23f5c667040 <line:482:1, col:65> col:5 save_index 'int (const char *, const char *, CA_DB *)'
| |-ParmVarDecl 0x23f5c666dd0 <col:16, col:28> col:28 dbfile 'const char *'
| |-ParmVarDecl 0x23f5c666e50 <col:36, col:48> col:48 suffix 'const char *'
| `-ParmVarDecl 0x23f5c666ec8 <col:56, col:63> col:63 db 'CA_DB *'
|-FunctionDecl 0x23f5c667318 <line:483:1, line:484:40> line:483:5 rotate_index 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x23f5c667128 <col:18, col:30> col:30 dbfile 'const char *'
| |-ParmVarDecl 0x23f5c6671a8 <col:38, col:50> col:50 new_suffix 'const char *'
| `-ParmVarDecl 0x23f5c667228 <line:484:18, col:30> col:30 old_suffix 'const char *'
|-FunctionDecl 0x23f5c667508 <line:485:1, col:26> col:6 free_index 'void (CA_DB *)'
| `-ParmVarDecl 0x23f5c6673f8 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x23f5c667740 <line:489:1, col:70> col:5 invalid index_name_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x23f5c6675e0 <col:20, col:43> col:43 invalid a 'const int *'
| `-ParmVarDecl 0x23f5c667660 <col:46, col:69> col:69 invalid b 'const int *'
|-FunctionDecl 0x23f5c667958 <line:490:1, col:41> col:5 parse_yesno 'int (const char *, int)'
| |-ParmVarDecl 0x23f5c667808 <col:17, col:29> col:29 str 'const char *'
| `-ParmVarDecl 0x23f5c667888 <col:34, col:38> col:38 def 'int'
|-FunctionDecl 0x23f5c667c70 <line:492:1, col:65> col:12 invalid parse_name 'int *(const char *, long, int)'
| |-ParmVarDecl 0x23f5c667a38 <col:23, col:35> col:35 str 'const char *'
| |-ParmVarDecl 0x23f5c667ab8 <col:40, col:45> col:45 chtype 'long'
| `-ParmVarDecl 0x23f5c667b38 <col:53, col:57> col:57 multirdn 'int'
|-FunctionDecl 0x23f5c66f050 <line:493:1, line:494:52> line:493:5 invalid args_verify 'int (char ***, int *, int *, int **)'
| |-ParmVarDecl 0x23f5c667d48 <col:17, col:25> col:25 pargs 'char ***'
| |-ParmVarDecl 0x23f5c66ee50 <col:32, col:37> col:37 pargc 'int *'
| |-ParmVarDecl 0x23f5c66eed0 <line:494:17, col:22> col:22 badarg 'int *'
| `-ParmVarDecl 0x23f5c66ef58 <col:30, col:50> col:50 invalid pm 'int **'
|-FunctionDecl 0x23f5c66f1b8 <line:495:1, col:40> col:6 invalid policies_print 'void (int *)'
| `-ParmVarDecl 0x23f5c66f128 <col:21, col:37> col:37 invalid ctx 'int *'
|-FunctionDecl 0x23f5c66f490 <line:496:1, col:56> col:5 invalid bio_to_mem 'int (unsigned char **, int, int *)'
| |-ParmVarDecl 0x23f5c66f2a8 <col:16, col:32> col:32 out 'unsigned char **'
| |-ParmVarDecl 0x23f5c66f328 <col:37, col:41> col:41 maxlen 'int'
| `-ParmVarDecl 0x23f5c66f3a8 <col:49, col:54> col:54 invalid in 'int *'
|-FunctionDecl 0x23f5c66f680 <line:497:1, col:58> col:5 invalid pkey_ctrl_string 'int (int *, const char *)'
| |-ParmVarDecl 0x23f5c66f560 <col:22, col:36> col:36 invalid ctx 'int *'
| `-ParmVarDecl 0x23f5c66f5e0 <col:41, col:53> col:53 value 'const char *'
|-FunctionDecl 0x23f5c66f9d0 <line:498:1, line:499:62> line:498:5 invalid init_gen_str 'int (int **, const char *, int *, int)'
| |-ParmVarDecl 0x23f5c66f750 <col:18, col:33> col:33 invalid pctx 'int **'
| |-ParmVarDecl 0x23f5c66f7d0 <line:499:18, col:30> col:30 algname 'const char *'
| |-ParmVarDecl 0x23f5c66f850 <col:39, col:47> col:47 invalid e 'int *'
| `-ParmVarDecl 0x23f5c66f8d0 <col:50, col:54> col:54 do_param 'int'
|-FunctionDecl 0x23f5c66fd80 <line:500:1, line:501:51> line:500:5 invalid do_X509_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x23f5c66faa8 <col:18, col:24> col:24 invalid x 'int *'
| |-ParmVarDecl 0x23f5c66fb28 <col:27, col:37> col:37 invalid pkey 'int *'
| |-ParmVarDecl 0x23f5c66fba8 <col:43, col:57> col:57 invalid md 'const int *'
| `-ParmVarDecl 0x23f5c66fc38 <line:501:18, <invalid sloc>> col:18 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x23f5c668038 <line:502:1, line:503:55> line:502:5 invalid do_X509_REQ_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x23f5c667df8 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x23f5c667e78 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x23f5c667ef8 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x23f5c667f88 <line:503:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x23f5c668350 <line:504:1, line:505:55> line:504:5 invalid do_X509_CRL_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x23f5c668110 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x23f5c668190 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x23f5c668210 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x23f5c6682a0 <line:505:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-VarDecl 0x23f5c668428 <line:507:1, col:14> col:14 psk_key 'char *' extern
|-FunctionDecl 0x23f5c6686e0 <line:510:1, col:64> col:16 next_protos_parse 'unsigned char *(size_t *, const char *)'
| |-ParmVarDecl 0x23f5c668518 <col:34, col:42> col:42 outlen 'size_t *'
| `-ParmVarDecl 0x23f5c668598 <col:50, col:62> col:62 in 'const char *'
|-FunctionDecl 0x23f5c668ac8 <line:512:1, line:514:67> line:512:6 invalid print_cert_checks 'void (int *, int *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x23f5c6687c0 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x23f5c668840 <col:34, col:40> col:40 invalid x 'int *'
| |-ParmVarDecl 0x23f5c6688c0 <line:513:24, col:36> col:36 checkhost 'const char *'
| |-ParmVarDecl 0x23f5c668940 <line:514:24, col:36> col:36 checkemail 'const char *'
| `-ParmVarDecl 0x23f5c6689c0 <col:48, col:60> col:60 checkip 'const char *'
|-FunctionDecl 0x23f5c668c38 <line:516:1, col:45> col:6 invalid store_setup_crl_download 'void (int *)'
| `-ParmVarDecl 0x23f5c668ba8 <col:31, col:43> col:43 invalid st 'int *'
|-FunctionDecl 0x23f5c674eb0 <line:551:1, col:27> col:5 app_isdir 'int (const char *)'
| `-ParmVarDecl 0x23f5c668cf8 <col:15, col:26> col:27 'const char *'
|-FunctionDecl 0x23f5c6750c0 <line:552:1, col:38> col:5 app_access 'int (const char *, int)'
| |-ParmVarDecl 0x23f5c674f88 <col:16, col:27> col:28 'const char *'
| `-ParmVarDecl 0x23f5c675008 <col:30, col:34> col:34 flag 'int'
|-FunctionDecl 0x23f5c675228 <line:553:1, col:22> col:5 fileno_stdin 'int (void)'
|-FunctionDecl 0x23f5c675380 <line:554:1, col:23> col:5 fileno_stdout 'int (void)'
|-FunctionDecl 0x23f5c6755b0 <line:555:1, col:31> col:5 raw_read_stdin 'int (void *, int)'
| |-ParmVarDecl 0x23f5c675450 <col:20, col:25> col:26 'void *'
| `-ParmVarDecl 0x23f5c6754d0 <col:28> col:31 'int'
|-FunctionDecl 0x23f5c6757f0 <line:556:1, col:39> col:5 raw_write_stdout 'int (const void *, int)'
| |-ParmVarDecl 0x23f5c675690 <col:22, col:33> col:34 'const void *'
| `-ParmVarDecl 0x23f5c675710 <col:36> col:39 'int'
|-FunctionDecl 0x23f5c675a60 <line:560:1, col:45> col:8 app_tminterval 'double (int, int)'
| |-ParmVarDecl 0x23f5c6758d0 <col:23, col:27> col:27 stop 'int'
| `-ParmVarDecl 0x23f5c675950 <col:33, col:37> col:37 usertime 'int'
|-RecordDecl 0x23f5c675b28 <line:562:9, line:567:1> line:562:16 struct verify_options_st definition
| |-FieldDecl 0x23f5c675bf8 <line:563:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x23f5c675c68 <line:564:5, col:9> col:9 quiet 'int'
| |-FieldDecl 0x23f5c675cd8 <line:565:5, col:9> col:9 error 'int'
| `-FieldDecl 0x23f5c675d48 <line:566:5, col:9> col:9 return_error 'int'
|-TypedefDecl 0x23f5c675df8 <line:562:1, line:567:3> col:3 referenced VERIFY_CB_ARGS 'struct verify_options_st':'struct verify_options_st'
| `-ElaboratedType 0x23f5c675da0 'struct verify_options_st' sugar
|   `-RecordType 0x23f5c675bc0 'struct verify_options_st'
|     `-Record 0x23f5c675b28 'verify_options_st'
|-VarDecl 0x23f5c673ea0 <line:569:1, col:23> col:23 verify_args 'VERIFY_CB_ARGS':'struct verify_options_st' extern
|-VarDecl 0x23f5c673f38 <.//openssl//file_jk/after\apps\app_rand.c:14:1, col:21> col:12 used seeded 'int' static cinit
| `-IntegerLiteral 0x23f5c673fa0 <col:21> 'int' 0
|-VarDecl 0x23f5c673ff8 <line:15:1, col:24> col:12 used egdsocket 'int' static cinit
| `-IntegerLiteral 0x23f5c674060 <col:24> 'int' 0
|-FunctionDecl 0x23f5c674208 prev 0x23f5c628ed0 <line:17:1, line:54:1> line:17:5 app_RAND_load_file 'int (const char *, int)'
| |-ParmVarDecl 0x23f5c6740b8 <col:24, col:36> col:36 used file 'const char *'
| |-ParmVarDecl 0x23f5c674138 <col:42, col:46> col:46 used dont_warn 'int'
| `-CompoundStmt 0x23f5c6723f0 <line:18:1, line:54:1>
|   |-DeclStmt 0x23f5c674358 <line:19:5, col:43>
|   | `-VarDecl 0x23f5c6742d0 <col:5, col:9> col:9 used consider_randfile 'int'
|   |-DeclStmt 0x23f5c674470 <line:20:5, col:21>
|   | `-VarDecl 0x23f5c674408 <col:5, col:20> col:10 used buffer 'char [200]'
|   |-IfStmt 0x23f5c6749c8 <line:22:5, line:32:5> has_else
|   | |-OpaqueValueExpr 0x23f5c6749b0 <<invalid sloc>> '_Bool'
|   | |-BinaryOperator 0x23f5c6746e8 <line:23:9, col:53> 'const char *' '='
|   | | |-DeclRefExpr 0x23f5c6744a8 <col:9> 'const char *' lvalue ParmVar 0x23f5c6740b8 'file' 'const char *'
|   | | `-ImplicitCastExpr 0x23f5c6746d0 <col:16, col:53> 'const char *' <IntegralToPointer>
|   | |   `-CallExpr 0x23f5c674688 <col:16, col:53> 'int'
|   | |     |-ImplicitCastExpr 0x23f5c674670 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x23f5c6745b8 <col:16> 'int ()' Function 0x23f5c6744f0 'RAND_file_name' 'int ()'
|   | |     |-ImplicitCastExpr 0x23f5c6746b8 <col:31> 'char *' <ArrayToPointerDecay>
|   | |     | `-DeclRefExpr 0x23f5c6745d8 <col:31> 'char [200]' lvalue Var 0x23f5c674408 'buffer' 'char [200]'
|   | |     `-UnaryExprOrTypeTraitExpr 0x23f5c674650 <col:39, col:52> 'unsigned long long' sizeof
|   | |       `-ParenExpr 0x23f5c674630 <col:45, col:52> 'char [200]' lvalue
|   | |         `-DeclRefExpr 0x23f5c674610 <col:46> 'char [200]' lvalue Var 0x23f5c674408 'buffer' 'char [200]' non_odr_use_unevaluated
|   | `-IfStmt 0x23f5c674998 <line:25:10, line:32:5>
|   |   |-BinaryOperator 0x23f5c6748b8 <line:25:14, col:31> 'int' '>'
|   |   | |-CallExpr 0x23f5c674850 <col:14, col:27> 'int'
|   |   | | |-ImplicitCastExpr 0x23f5c674838 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x23f5c6747f8 <col:14> 'int ()' Function 0x23f5c674730 'RAND_egd' 'int ()'
|   |   | | `-ImplicitCastExpr 0x23f5c674878 <col:23> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23f5c674818 <col:23> 'const char *' lvalue ParmVar 0x23f5c6740b8 'file' 'const char *'
|   |   | `-IntegerLiteral 0x23f5c674890 <col:31> 'int' 0
|   |   `-CompoundStmt 0x23f5c674978 <col:34, line:32:5>
|   |     |-BinaryOperator 0x23f5c674920 <line:30:9, col:21> 'int' '='
|   |     | |-DeclRefExpr 0x23f5c6748d8 <col:9> 'int' lvalue Var 0x23f5c673ff8 'egdsocket' 'int'
|   |     | `-IntegerLiteral 0x23f5c6748f8 <col:21> 'int' 1
|   |     `-ReturnStmt 0x23f5c674968 <line:31:9, col:16>
|   |       `-IntegerLiteral 0x23f5c674940 <col:16> 'int' 1
|   |-IfStmt 0x23f5c672338 <line:34:5, line:51:5>
|   | |-OpaqueValueExpr 0x23f5c672320 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x23f5c672308 <line:34:52, line:51:5>
|   |   `-IfStmt 0x23f5c6722f0 <line:35:9, line:50:9>
|   |     |-BinaryOperator 0x23f5c674d68 <line:35:13, col:30> 'int' '=='
|   |     | |-CallExpr 0x23f5c674d20 <col:13, col:25> 'int'
|   |     | | `-ImplicitCastExpr 0x23f5c674d08 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | |   `-DeclRefExpr 0x23f5c674ce8 <col:13> 'int ()' Function 0x23f5c674c20 'RAND_status' 'int ()'
|   |     | `-IntegerLiteral 0x23f5c674d40 <col:30> 'int' 0
|   |     `-CompoundStmt 0x23f5c6722d0 <col:33, line:50:9>
|   |       |-IfStmt 0x23f5c672280 <line:36:13, line:48:13>
|   |       | |-UnaryOperator 0x23f5c674dc0 <line:36:17, col:18> 'int' prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x23f5c674da8 <col:18> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x23f5c674d88 <col:18> 'int' lvalue ParmVar 0x23f5c674138 'dont_warn' 'int'
|   |       | `-CompoundStmt 0x23f5c672268 <col:29, line:48:13>
|   |       |   `-IfStmt 0x23f5c672250 <line:41:17, line:47:17>
|   |       |     |-ImplicitCastExpr 0x23f5c6720b0 <line:41:21> 'int' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x23f5c672078 <col:21> 'int' lvalue Var 0x23f5c6742d0 'consider_randfile' 'int'
|   |       |     `-CompoundStmt 0x23f5c672240 <col:40, line:47:17>
|   |       `-ReturnStmt 0x23f5c6722c0 <line:49:13, col:20>
|   |         `-IntegerLiteral 0x23f5c672298 <col:20> 'int' 0
|   |-BinaryOperator 0x23f5c672398 <line:52:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x23f5c672350 <col:5> 'int' lvalue Var 0x23f5c673f38 'seeded' 'int'
|   | `-IntegerLiteral 0x23f5c672370 <col:14> 'int' 1
|   `-ReturnStmt 0x23f5c6723e0 <line:53:5, col:12>
|     `-IntegerLiteral 0x23f5c6723b8 <col:12> 'int' 1
|-FunctionDecl 0x23f5c6724f8 prev 0x23f5c6394b0 <line:56:1, line:89:1> line:56:6 app_RAND_load_files 'long (char *)'
| |-ParmVarDecl 0x23f5c672448 <col:26, col:32> col:32 used name 'char *'
| `-CompoundStmt 0x23f5c6785f0 <line:57:1, line:89:1>
|   |-DeclStmt 0x23f5c6726b8 <line:58:5, col:16>
|   | |-VarDecl 0x23f5c6725b8 <col:5, col:11> col:11 used p 'char *'
|   | `-VarDecl 0x23f5c672638 <col:5, col:15> col:15 used n 'char *'
|   |-DeclStmt 0x23f5c672750 <line:59:5, col:13>
|   | `-VarDecl 0x23f5c6726e8 <col:5, col:9> col:9 used last 'int'
|   |-DeclStmt 0x23f5c672828 <line:60:5, col:17>
|   | `-VarDecl 0x23f5c672780 <col:5, col:16> col:10 used tot 'long' cinit
|   |   `-ImplicitCastExpr 0x23f5c672810 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x23f5c6727e8 <col:16> 'int' 0
|   |-DeclStmt 0x23f5c6728c0 <line:62:5, col:12>
|   | `-VarDecl 0x23f5c672858 <col:5, col:9> col:9 used egd 'int'
|   |-ForStmt 0x23f5c678420 <line:65:5, line:85:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x23f5c6783c8 <line:65:14, line:85:5>
|   |   |-BinaryOperator 0x23f5c672938 <line:66:9, col:16> 'int' '='
|   |   | |-DeclRefExpr 0x23f5c6728d8 <col:9> 'int' lvalue Var 0x23f5c6726e8 'last' 'int'
|   |   | `-IntegerLiteral 0x23f5c672910 <col:16> 'int' 0
|   |   |-IfStmt 0x23f5c672c98 <line:68:9, line:69:20>
|   |   | |-BinaryOperator 0x23f5c672c10 <line:68:13, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x23f5c672bf8 <col:13, col:14> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x23f5c672be0 <col:13, col:14> 'char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x23f5c672bb0 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x23f5c672b98 <col:14> 'char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x23f5c672b78 <col:14> 'char *' lvalue Var 0x23f5c6725b8 'p' 'char *'
|   |   | | `-CharacterLiteral 0x23f5c672bc8 <col:19> 'int' 0
|   |   | `-BinaryOperator 0x23f5c672c78 <line:69:13, col:20> 'int' '='
|   |   |   |-DeclRefExpr 0x23f5c672c30 <col:13> 'int' lvalue Var 0x23f5c6726e8 'last' 'int'
|   |   |   `-IntegerLiteral 0x23f5c672c50 <col:20> 'int' 1
|   |   |-BinaryOperator 0x23f5c672d30 <line:70:9, col:14> 'char' '='
|   |   | |-UnaryOperator 0x23f5c672ce8 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x23f5c672cd0 <col:10> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x23f5c672cb0 <col:10> 'char *' lvalue Var 0x23f5c6725b8 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x23f5c672d18 <col:14> 'char' <IntegralCast>
|   |   |   `-CharacterLiteral 0x23f5c672d00 <col:14> 'int' 0
|   |   |-BinaryOperator 0x23f5c672dc0 <line:71:9, col:13> 'char *' '='
|   |   | |-DeclRefExpr 0x23f5c672d50 <col:9> 'char *' lvalue Var 0x23f5c672638 'n' 'char *'
|   |   | `-ImplicitCastExpr 0x23f5c672da8 <col:13> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x23f5c672d88 <col:13> 'char *' lvalue ParmVar 0x23f5c672448 'name' 'char *'
|   |   |-BinaryOperator 0x23f5c677ee0 <line:72:9, col:20> 'char *' '='
|   |   | |-DeclRefExpr 0x23f5c672de0 <col:9> 'char *' lvalue ParmVar 0x23f5c672448 'name' 'char *'
|   |   | `-BinaryOperator 0x23f5c672e60 <col:16, col:20> 'char *' '+'
|   |   |   |-ImplicitCastExpr 0x23f5c672e48 <col:16> 'char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x23f5c672e00 <col:16> 'char *' lvalue Var 0x23f5c6725b8 'p' 'char *'
|   |   |   `-IntegerLiteral 0x23f5c672e20 <col:20> 'int' 1
|   |   |-IfStmt 0x23f5c677fc0 <line:73:9, line:74:13>
|   |   | |-BinaryOperator 0x23f5c677f98 <line:73:13, col:19> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x23f5c677f80 <col:13, col:14> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x23f5c677f68 <col:13, col:14> 'char' <LValueToRValue>
|   |   | | |   `-UnaryOperator 0x23f5c677f38 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | | |     `-ImplicitCastExpr 0x23f5c677f20 <col:14> 'char *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x23f5c677f00 <col:14> 'char *' lvalue Var 0x23f5c672638 'n' 'char *'
|   |   | | `-CharacterLiteral 0x23f5c677f50 <col:19> 'int' 0
|   |   | `-BreakStmt 0x23f5c677fb8 <line:74:13>
|   |   |-BinaryOperator 0x23f5c6780a8 <line:77:9, col:25> 'int' '='
|   |   | |-DeclRefExpr 0x23f5c677fd8 <col:9> 'int' lvalue Var 0x23f5c672858 'egd' 'int'
|   |   | `-CallExpr 0x23f5c678068 <col:15, col:25> 'int'
|   |   |   |-ImplicitCastExpr 0x23f5c678050 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x23f5c678010 <col:15> 'int ()' Function 0x23f5c674730 'RAND_egd' 'int ()'
|   |   |   `-ImplicitCastExpr 0x23f5c678090 <col:24> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x23f5c678030 <col:24> 'char *' lvalue Var 0x23f5c672638 'n' 'char *'
|   |   |-IfStmt 0x23f5c678348 <line:78:9, line:82:40> has_else
|   |   | |-BinaryOperator 0x23f5c678128 <line:78:13, col:19> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x23f5c678110 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x23f5c6780c8 <col:13> 'int' lvalue Var 0x23f5c672858 'egd' 'int'
|   |   | | `-IntegerLiteral 0x23f5c6780e8 <col:19> 'int' 0
|   |   | |-CompoundAssignOperator 0x23f5c6781d0 <line:79:13, col:20> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   | | |-DeclRefExpr 0x23f5c678148 <col:13> 'long' lvalue Var 0x23f5c672780 'tot' 'long'
|   |   | | `-ImplicitCastExpr 0x23f5c6781b8 <col:20> 'long' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x23f5c6781a0 <col:20> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x23f5c678180 <col:20> 'int' lvalue Var 0x23f5c672858 'egd' 'int'
|   |   | `-CompoundAssignOperator 0x23f5c678318 <line:82:13, col:40> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |   |-DeclRefExpr 0x23f5c678200 <col:13> 'long' lvalue Var 0x23f5c672780 'tot' 'long'
|   |   |   `-ImplicitCastExpr 0x23f5c678300 <col:20, col:40> 'long' <IntegralCast>
|   |   |     `-CallExpr 0x23f5c6782b8 <col:20, col:40> 'int'
|   |   |       |-ImplicitCastExpr 0x23f5c6782a0 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x23f5c678220 <col:20> 'int ()' Function 0x23f5c674a38 'RAND_load_file' 'int ()'
|   |   |       |-ImplicitCastExpr 0x23f5c6782e8 <col:35> 'char *' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x23f5c678240 <col:35> 'char *' lvalue Var 0x23f5c672638 'n' 'char *'
|   |   |       `-UnaryOperator 0x23f5c678288 <col:38, col:39> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x23f5c678260 <col:39> 'int' 1
|   |   `-IfStmt 0x23f5c6783b0 <line:83:9, line:84:13>
|   |     |-ImplicitCastExpr 0x23f5c678390 <line:83:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x23f5c678370 <col:13> 'int' lvalue Var 0x23f5c6726e8 'last' 'int'
|   |     `-BreakStmt 0x23f5c6783a8 <line:84:13>
|   |-IfStmt 0x23f5c678570 <line:86:5, line:87:35>
|   | |-BinaryOperator 0x23f5c6784d0 <line:86:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x23f5c6784a0 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23f5c678458 <col:9> 'long' lvalue Var 0x23f5c672780 'tot' 'long'
|   | | `-ImplicitCastExpr 0x23f5c6784b8 <col:15> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x23f5c678478 <col:15> 'int' 512
|   | `-CallExpr 0x23f5c678550 <line:87:9, col:35> 'void'
|   |   `-ImplicitCastExpr 0x23f5c678538 <col:9> 'void (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x23f5c6784f0 <col:9> 'void (void)' Function 0x23f5c639300 'app_RAND_allow_write_file' 'void (void)'
|   `-ReturnStmt 0x23f5c6785e0 <line:88:5, col:16>
|     `-ImplicitCastExpr 0x23f5c6785c8 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x23f5c6785a8 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x23f5c678588 <col:13> 'long' lvalue Var 0x23f5c672780 'tot' 'long'
|-FunctionDecl 0x23f5c678700 prev 0x23f5c629090 <line:91:1, line:110:1> line:91:5 app_RAND_write_file 'int (const char *)'
| |-ParmVarDecl 0x23f5c678650 <col:25, col:37> col:37 used file 'const char *'
| `-CompoundStmt 0x23f5c678e48 <line:92:1, line:110:1>
|   |-DeclStmt 0x23f5c678870 <line:93:5, col:21>
|   | `-VarDecl 0x23f5c678808 <col:5, col:20> col:10 used buffer 'char [200]'
|   |-IfStmt 0x23f5c678968 <line:95:5, line:101:16>
|   | |-BinaryOperator 0x23f5c678910 <line:95:9, col:23> 'int' '||'
|   | | |-ImplicitCastExpr 0x23f5c6788f8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x23f5c678888 <col:9> 'int' lvalue Var 0x23f5c673ff8 'egdsocket' 'int'
|   | | `-UnaryOperator 0x23f5c6788e0 <col:22, col:23> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x23f5c6788c8 <col:23> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x23f5c6788a8 <col:23> 'int' lvalue Var 0x23f5c673f38 'seeded' 'int'
|   | `-ReturnStmt 0x23f5c678958 <line:101:9, col:16>
|   |   `-IntegerLiteral 0x23f5c678930 <col:16> 'int' 0
|   |-IfStmt 0x23f5c678b28 <line:103:5, line:104:53>
|   | |-OpaqueValueExpr 0x23f5c678b10 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x23f5c678af0 <col:9, col:53> 'const char *' '='
|   |   |-DeclRefExpr 0x23f5c6789a0 <col:9> 'const char *' lvalue ParmVar 0x23f5c678650 'file' 'const char *'
|   |   `-ImplicitCastExpr 0x23f5c678ad8 <col:16, col:53> 'const char *' <IntegralToPointer>
|   |     `-CallExpr 0x23f5c678a90 <col:16, col:53> 'int'
|   |       |-ImplicitCastExpr 0x23f5c678a78 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x23f5c6789c0 <col:16> 'int ()' Function 0x23f5c6744f0 'RAND_file_name' 'int ()'
|   |       |-ImplicitCastExpr 0x23f5c678ac0 <col:31> 'char *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x23f5c6789e0 <col:31> 'char [200]' lvalue Var 0x23f5c678808 'buffer' 'char [200]'
|   |       `-UnaryExprOrTypeTraitExpr 0x23f5c678a58 <col:39, col:52> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x23f5c678a38 <col:45, col:52> 'char [200]' lvalue
|   |           `-DeclRefExpr 0x23f5c678a18 <col:46> 'char [200]' lvalue Var 0x23f5c678808 'buffer' 'char [200]' non_odr_use_unevaluated
|   |-IfStmt 0x23f5c678df8 <line:105:5, line:108:5>
|   | |-OpaqueValueExpr 0x23f5c678de0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x23f5c678dc8 <line:105:49, line:108:5>
|   |   `-ReturnStmt 0x23f5c678db8 <line:107:9, col:16>
|   |     `-IntegerLiteral 0x23f5c678d90 <col:16> 'int' 0
|   `-ReturnStmt 0x23f5c678e38 <line:109:5, col:12>
|     `-IntegerLiteral 0x23f5c678e10 <col:12> 'int' 1
`-FunctionDecl 0x23f5c678f78 prev 0x23f5c639300 <line:112:1, line:115:1> line:112:6 used app_RAND_allow_write_file 'void (void)'
  `-CompoundStmt 0x23f5c679080 <line:113:1, line:115:1>
    `-BinaryOperator 0x23f5c679060 <line:114:5, col:14> 'int' '='
      |-DeclRefExpr 0x23f5c679018 <col:5> 'int' lvalue Var 0x23f5c673f38 'seeded' 'int'
      `-IntegerLiteral 0x23f5c679038 <col:14> 'int' 1
