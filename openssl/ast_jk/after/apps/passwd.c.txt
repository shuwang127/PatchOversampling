TranslationUnitDecl 0x1b545383c78 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1b545384510 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1b545384210 '__int128'
|-TypedefDecl 0x1b545384580 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1b545384230 'unsigned __int128'
|-TypedefDecl 0x1b5453848b8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1b545384670 'struct __NSConstantString_tag'
|   `-Record 0x1b5453845d8 '__NSConstantString_tag'
|-TypedefDecl 0x1b545384928 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1b545383e50 'unsigned long long'
|-TypedefDecl 0x1b5453849c0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1b545384980 'char *'
|   `-BuiltinType 0x1b545383d10 'char'
|-TypedefDecl 0x1b545384a30 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1b545384980 'char *'
|   `-BuiltinType 0x1b545383d10 'char'
|-TypedefDecl 0x1b545384af0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1b545383e50 'unsigned long long'
|-TypedefDecl 0x1b545384b60 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1b545384980 'char *'
|   `-BuiltinType 0x1b545383d10 'char'
|-FunctionDecl 0x1b546e8f3f0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b546e8f490 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1b546e8f500 <col:21> Implicit
|-FunctionDecl 0x1b546e8f558 prev 0x1b546e8f3f0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b546e8f280 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1b546e8f648 <col:21> Inherited Implicit
|-TypedefDecl 0x1b546e8f688 prev 0x1b545384928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1b545383e50 'unsigned long long'
|-TypedefDecl 0x1b546e8f730 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1b546e8f700 'size_t' sugar
|   |-Typedef 0x1b546e8f688 'size_t'
|   `-BuiltinType 0x1b545383e50 'unsigned long long'
|-TypedefDecl 0x1b546e8f7a0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1b545383db0 'long long'
|-TypedefDecl 0x1b546e8f810 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1b545383db0 'long long'
|-TypedefDecl 0x1b546e8f880 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1b545383df0 'unsigned short'
|-TypedefDecl 0x1b546e8f8f0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1b545383df0 'unsigned short'
|-TypedefDecl 0x1b546e8f960 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1b545383df0 'unsigned short'
|-TypedefDecl 0x1b546e8f9d0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1b545383d70 'int'
|-TypedefDecl 0x1b546e8fa40 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1b545383d90 'long'
|-TypedefDecl 0x1b546e8fab0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1b545383db0 'long long'
|-TypedefDecl 0x1b546e8fb40 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1b546e8fb10 '__time64_t' sugar
|   |-Typedef 0x1b546e8fab0 '__time64_t'
|   `-BuiltinType 0x1b545383db0 'long long'
|-FunctionDecl 0x1b546e8fcb8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1b546e8fed8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1b546ecdea0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1b546e90018 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1b546e90090 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1b546e90108 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1b546e90188 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1b546ecdc40 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1b546ecdf80 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1b546ece040 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1b546ece1b0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1b546ece160 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1b546ece100 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1b546ece020 'struct threadlocaleinfostruct'
|       `-Record 0x1b546ed2c90 'threadlocaleinfostruct'
|-TypedefDecl 0x1b546ece2c0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1b546ece270 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1b546ece210 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1b546ece0e0 'struct threadmbcinfostruct'
|       `-Record 0x1b546ece040 'threadmbcinfostruct'
|-RecordDecl 0x1b546ece318 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1b546ece3d0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1b546ece490 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b546ece520 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1b546ece5b0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1b546ece668 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1b546ece610 'struct localeinfo_struct' sugar
|   `-RecordType 0x1b546ece470 'struct localeinfo_struct'
|     `-Record 0x1b546ece3d0 'localeinfo_struct'
|-TypedefDecl 0x1b546ece740 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1b546ece6f0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1b546ece610 'struct localeinfo_struct' sugar
|     `-RecordType 0x1b546ece470 'struct localeinfo_struct'
|       `-Record 0x1b546ece3d0 'localeinfo_struct'
|-RecordDecl 0x1b546ece7b8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1b546ece870 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b546ece8e8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1b546ece9a8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1b546ecea40 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1b546eceab0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1b546eceb68 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1b546eceb10 'struct localerefcount' sugar
|   `-RecordType 0x1b546ece850 'struct localerefcount'
|     `-Record 0x1b546ece7b8 'localerefcount'
|-RecordDecl 0x1b546ed2c90 prev 0x1b546ecdf80 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1b546ed2d10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b546ed2d88 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1b546ed2df8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1b546ed2e68 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1b546ed2ed8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1b546ed3098 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1b546ed3108 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1b546ed3178 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1b546ed31e8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1b546ed3258 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1b546ed32c8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1b546ed3320 parent 0x1b545383c78 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1b546ed34b0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1b546ed3520 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1b546ed3590 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1b546ed3600 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1b546ed36a0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1b546ed3710 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1b546ed3820 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1b546ed3958 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1b546ed3a08 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1b546ed39b0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1b546ece020 'struct threadlocaleinfostruct'
|     `-Record 0x1b546ed2c90 'threadlocaleinfostruct'
|-FunctionDecl 0x1b546ed1e90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1b546ed3a90 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1b546ed3b40 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1b546ed3bc0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1b546ed1c80 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546ed2258 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1b546ed22f8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1b546ed2360 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1b546ed23c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b546ed2448 prev 0x1b546ed2258 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1b546ed1f80 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1b546ed2000 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1b546ed2078 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546ed2808 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1b546ed2530 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1b546ed25b0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1b546ed2628 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546ed9d50 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546ed28f0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1b546ed2970 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1b546ed29e8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546ed2a80 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546eda058 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1b546eda0f8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1b546eda160 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1b546eda1c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b546eda248 prev 0x1b546eda058 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1b546ed9e40 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1b546ed9ec0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1b546ed9f38 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546eda608 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1b546eda6a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b546eda710 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1b546eda778 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b546eda7f8 prev 0x1b546eda608 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1b546eda330 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1b546eda3b0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1b546eda428 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546ed3ca0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1b546eda908 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1b546eda9a0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b546edaa20 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1b546edaa98 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b546ed4068 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1b546ed4108 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b546ed4170 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1b546ed41d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b546ed4258 prev 0x1b546ed4068 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1b546ed3d90 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1b546ed3e10 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1b546ed3e88 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546ed46d8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1b546ed4778 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b546ed47e0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1b546ed4848 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1b546ed48b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b546ed4938 prev 0x1b546ed46d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1b546ed4420 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1b546ed44a0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1b546ed4520 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1b546ed4598 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546ed49f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1b546ed6e68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1b546ed4bc0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1b546ed6cd0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1b546ed6d48 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546ed6f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1b546ed7310 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1b546ed7048 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1b546ed70c0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546ed7140 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1b546ed76e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1b546ed74f0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1b546ed7570 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1b546ed7790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546ed7ba0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1b546ed78d8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1b546ed7950 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b546ed79d0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1b546edbfe0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1b546edc080 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1b546edc0e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b546edc160 prev 0x1b546edbfe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1b546edbdf8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1b546edbe78 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1b546edc210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546edc568 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1b546edc358 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1b546edc3d0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b546edc450 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1b546edc890 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1b546edc930 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1b546edc998 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b546edca10 prev 0x1b546edc890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1b546edc710 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1b546edc790 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1b546edcac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546ed4d80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1b546ed4e20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b546ed4e88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b546ed4f00 prev 0x1b546ed4d80 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1b546edcc08 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1b546edcc88 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1b546ed5150 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1b546ed51f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b546ed5260 prev 0x1b546ed5150 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1b546ed4fe0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1b546ed5558 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1b546ed5338 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1b546ed53b0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546ed57a8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1b546ed5638 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1b546ed56b0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1b546ed5ad8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1b546ed5ac8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1b546ed5a98 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1b546ed5908 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1b546ed58e8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1b546ed58b8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1b546ed5870 <col:13> 'const char *' lvalue ParmVar 0x1b546ed5638 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1b546ed58d0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1b546ed5890 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1b546ed5a80 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1b546ed5928 <col:24> 'int' 0
|       `-CallExpr 0x1b546ed5a20 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1b546ed5a08 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1b546ed5950 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1b546ed5558 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1b546ed5a50 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1b546ed5970 <col:36> 'const char *' lvalue ParmVar 0x1b546ed5638 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1b546ed5a68 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1b546ed5990 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1b546ed56b0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546ee3ed8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1b546ed5b08 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1b546ed5b80 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b546ed5c00 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1b546ee3da0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b546ee41e0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1b546ee4280 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b546ee42e8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1b546ee4350 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b546ee43d0 prev 0x1b546ee41e0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1b546ee3fc8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1b546ee4048 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1b546ee40c0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546ee4608 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1b546ee44b8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1b546ee48d0 <line:152:54> col:54 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1b546ee4970 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b546ee49d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1b546ee4a50 prev 0x1b546ee48d0 <col:38, col:100> col:54 used strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1b546ee46e0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1b546ee4760 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1b546ee4cb0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b546ee4b30 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1b546ee4bb0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1b546ee2f10 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b546ee2d90 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1b546ee2e10 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1b546ee32c8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1b546ee2ff0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1b546ee3070 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1b546ee30e8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546ee3530 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b546ee33b0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1b546ee3430 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1b546ee3828 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1b546ee3610 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1b546ee3690 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1b546ee3708 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546ee3a90 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b546ee3910 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1b546ee3990 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1b546eded50 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1b546ee3b70 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1b546ee3bf0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1b546ee3c68 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546edf108 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b546edee38 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b546edeeb8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1b546edef30 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546edf570 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546edf1f0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b546edf270 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1b546edf2e8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546edf360 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546edf878 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b546edf660 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b546edf6e0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1b546edf758 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546edfc10 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546edf960 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1b546edf9e0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1b546edfa58 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546edfad0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546edcf58 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1b546edcff8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b546edd060 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b546edd0d8 prev 0x1b546edcf58 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1b546edcd30 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1b546edcdb0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1b546edd390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1b546edd2b0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1b546edd438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546edd810 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1b546edd580 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1b546edd5f8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546edd678 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1b546eddb28 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1b546eddbc8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1b546eddc38 prev 0x1b546eddb28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1b546edd9f0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1b546eddce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546ee50c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1b546ee4eb0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1b546ee4f28 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546ee4fa8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1b546ee53c8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1b546ee51a8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1b546ee5220 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546ee56b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b546ee5568 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1b546ee5760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546ee5b70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546ee58a8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1b546ee5920 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546ee5998 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546ee0f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1b546ee5d18 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1b546ee0d70 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b546ee0fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546ee1488 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1b546ee1118 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1b546ee1190 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b546ee1210 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1b546ee1288 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b546ee1908 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b546ee19a8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b546ee1a10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b546ee1a78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b546ee1af8 prev 0x1b546ee1908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b546ee1638 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1b546ee16b8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1b546ee1730 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546ee1bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546edff10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b546edffb0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1b546ee0018 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b546ee0080 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b546ee0100 prev 0x1b546edff10 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b546ee1cf8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1b546edfd78 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1b546edfdf0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546ee0400 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b546ee01e8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1b546ee0268 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1b546ee02e0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546ee0798 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546ee04e8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b546ee0568 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1b546ee05e0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546ee0658 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546ee0b30 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1b546ee0888 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1b546ee0900 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b546ee0980 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1b546ee09f8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b546edded8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b546eddf78 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b546eddfe0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b546ede048 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b546ede0c8 prev 0x1b546edded8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b546ee0ce0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1b546eddd40 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1b546edddb8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546ede180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546ede638 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1b546ede2c8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1b546ede340 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b546ede3c0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1b546ede438 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546edeab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1b546ede7e8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1b546ede868 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1b546ede8e0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546edeb70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546ee1ef0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1b546ee1f90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b546ee1ff8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b546ee2070 prev 0x1b546ee1ef0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1b546edecb8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1b546ee1d80 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1b546ee22d0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1b546ee2370 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b546ee23d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1b546ee2450 prev 0x1b546ee22d0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1b546ee2150 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1b546ee21d0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1b546ee2610 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1b546ee2530 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1b546ee2860 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1b546ee2900 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b546ee2968 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b546ee29e0 prev 0x1b546ee2860 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1b546ee26e8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1b546ee2768 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1b546ee2c40 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1b546ee2ce0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b546f11210 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b546f11288 prev 0x1b546ee2c40 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1b546ee2ac0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1b546ee2b40 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1b546f115a8 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1b546f11648 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1b546f116b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b546f11728 prev 0x1b546f115a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1b546f11428 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1b546f114a8 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1b546f117d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f11bb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1b546f11920 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1b546f119a0 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1b546f11a20 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1b546f11e10 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1b546f11ca0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1b546f11d18 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f12090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b546f11fb0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1b546f12138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f12528 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546f12320 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1b546f12398 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f12410 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546f12848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1b546f126d0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1b546f12748 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b546f128f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f12d10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b546f12db0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b546f12e18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b546f12e80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b546f12f00 prev 0x1b546f12d10 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b546f12a40 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1b546f12ac0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1b546f12b38 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f0f328 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546f12fe8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1b546f13068 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1b546f130e0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f13158 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546f0f5d0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1b546f0f670 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b546f0f6e0 prev 0x1b546f0f5d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1b546f0f4f0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1b546f0f788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1b546f0fad0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b546f0f950 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1b546f0f9d0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1b546f0fb80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1b546f0fec8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b546f0fd48 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1b546f0fdc8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1b546f0ff78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1b546f13268 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b546f10140 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1b546f13310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1b546f13728 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b546f13510 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1b546f13590 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1b546f13608 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546f137e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1b546f13bc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1b546f139a8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1b546f13a28 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1b546f13aa0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546f13c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1b546f13f20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b546f13e40 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1b546f13fc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1b546f10300 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1b546f14190 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1b546f10200 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1b546f103b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1b546f10658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b546f10578 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1b546f10700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1b546f10990 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1b546f10820 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1b546f10d20 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1b546f10a60 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b546f10ad8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f10b50 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1b546f110d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f10ec0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b546f10f38 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1b546f11188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f15568 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1b546f15608 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1b546f15670 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1b546f156e8 prev 0x1b546f15568 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1b546f15348 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b546f153c0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b546f159e0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1b546f15a80 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1b546f15ae8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1b546f15b60 prev 0x1b546f159e0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1b546f157c0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b546f15838 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b546f15e40 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1b546f15c38 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b546f15cb0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f15d28 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1b546f16150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f15fe0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b546f16058 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1b546f16200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f14558 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f14338 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b546f143b0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1b546f147a0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1b546f14840 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1b546f148b0 prev 0x1b546f147a0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1b546f14630 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1b546f14b98 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b546f14980 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b546f149f8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f14de0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1b546f14c70 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b546f14ce8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1b546f15178 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1b546f15168 <line:307:5, col:56>
|     `-ConditionalOperator 0x1b546f15138 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1b546f14fa0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1b546f14f80 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1b546f14f50 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1b546f14ea8 <col:13> 'const wchar_t *' lvalue ParmVar 0x1b546f14c70 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1b546f14f68 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1b546f14f30 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1b546f14f08 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1b546f14ec8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1b546f15120 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1b546f14fc0 <col:29> 'int' 0
|       `-CallExpr 0x1b546f150c0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1b546f150a8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1b546f14fe8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1b546f14b98 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1b546f150f0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1b546f15008 <col:41> 'const wchar_t *' lvalue ParmVar 0x1b546f14c70 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1b546f15108 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1b546f15028 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1b546f14ce8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f17568 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1b546f151a0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b546f17270 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b546f172e8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b546f17360 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b546f179d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b546f17710 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b546f17788 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1b546f17800 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546f17a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f17e98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1b546f17f38 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1b546f17fa0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1b546f18008 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b546f18088 prev 0x1b546f17e98 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1b546f17bc8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f17c40 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b546f17cb8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f16410 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1b546f18168 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b546f181e0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b546f16260 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b546f162d8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b546f167c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b546f165b8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b546f16630 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1b546f166a8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546f16878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f16bd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f169b8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b546f16a30 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1b546f16e20 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1b546f16cb0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b546f16d28 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b546f17068 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f16ef8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b546f16f70 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1b546f1b310 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f17140 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b546f171b8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1b546f1b618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f1b4a8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b546f1b520 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1b546f1b6c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f1bb30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1b546f1b808 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b546f1b880 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1b546f1b960 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1b546f1be50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1b546f1bcd8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1b546f1bef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f1c330 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1b546f1c038 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1b546f1c0b0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f1c130 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1b546f1c5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1b546f1c508 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1b546f1c688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f1ca50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1b546f1c7c8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1b546f1c840 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f1c8b8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1b546f1cca8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f1cb30 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b546f1cba8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b546f1d048 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b546f1cd80 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f1cdf8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b546f1ce70 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546f1d358 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b546f1d128 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f1d1a0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b546f1d218 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f1d7b0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546f1d438 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f1d4b0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b546f1d528 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f1d5a0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546f1dc08 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1b546f1d898 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b546f1d910 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b546f1d988 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1b546f1da00 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f1e070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1b546f1ddb0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b546f1de28 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1b546f1dea0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546f1e128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f1e3f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1b546f1e268 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1b546f1e780 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1b546f1e4c0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b546f1e538 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f1e5b0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b546f1eb38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1b546f1e920 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b546f1e998 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1b546f1ebe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f1ef48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1b546f1ed28 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1b546f1eda0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f1f1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b546f1f0e0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1b546f1f260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f1f6b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546f1f3e8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b546f1f460 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f1f4d8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546f1fa68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b546f1f850 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1b546f1f8c8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b546f1fb18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f1fdc8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1b546f1fc58 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1b546f1fcd0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f20038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b546f1ff60 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1b546f200e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f18410 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546f20220 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b546f18280 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f182f8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546f18720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b546f185b0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1b546f18628 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b546f187d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b546f18bd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b546f18910 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b546f18988 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b546f18a00 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f19018 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546f18cb0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b546f18d28 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b546f18da0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f18e18 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546f19290 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f19100 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b546f19178 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b546f19578 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b546f19368 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f193e0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b546f19458 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546f197d0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f19658 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b546f196d0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b546f19ab8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b546f198a8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f19920 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b546f19998 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546f19da8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b546f19b98 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f19c10 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b546f19c88 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f1a130 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546f19e88 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f19f00 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b546f19f78 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f19ff0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546f224b8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b546f1a218 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f22320 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b546f22398 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b546f22840 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b546f22598 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f22610 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b546f22688 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b546f22700 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b546f22aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1b546f229c8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1b546f22b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1b546f22e80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f22d08 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f22d80 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1b546f22f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1b546f25350 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b546f230f0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f23168 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b546f231e0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546f25408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1b546f257d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1b546f255c8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b546f25640 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1b546f256b8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b546f25888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1b546f25b20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b546f25a48 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1b546f25bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1b546f25ef8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1b546f25d88 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b546f25e00 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1b546f25fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1b546f26240 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b546f26168 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1b546f262e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1b546f23580 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b546f234a8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1b546f23628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1b546f23960 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b546f237e8 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b546f23860 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1b546f23a10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x1b546f23e00 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x1b546f23b30 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x1b546f23ba8 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x1b546f23c28 <col:98, col:107> col:107 _Line 'unsigned int'
|-TypedefDecl 0x1b546f23ee8 <D:\Microsoft Visual Studio 12.0\VC\include\signal.h:28:1, col:13> col:13 sig_atomic_t 'int'
| `-BuiltinType 0x1b545383d70 'int'
|-FunctionDecl 0x1b546f240a0 <line:88:1, col:45> col:25 __pxcptinfoptrs 'void **(void) __attribute__((cdecl))':'void **(void)' extern
|-FunctionDecl 0x1b546f296a0 <line:94:9, col:100> col:33 signal 'void (*(int, void (*)(int) __attribute__((cdecl))))(int) __attribute__((cdecl)) __attribute__((cdecl))'
| |-ParmVarDecl 0x1b546f24170 <col:45, col:49> col:49 _SigNum 'int'
| `-ParmVarDecl 0x1b546f29428 <col:67, col:83> col:83 _Func 'void (*)(int) __attribute__((cdecl))'
|-FunctionDecl 0x1b546f298c8 <line:97:9, col:43> col:21 raise 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1b546f29780 <col:32, col:36> col:36 _SigNum 'int'
|-FunctionDecl 0x1b546f29b30 <.//openssl//file_jk/after\apps/apps.h:43:1, col:55> col:5 app_RAND_load_file 'int (const char *, int)'
| |-ParmVarDecl 0x1b546f299a0 <col:24, col:36> col:36 file 'const char *'
| `-ParmVarDecl 0x1b546f29a20 <col:42, col:46> col:46 dont_warn 'int'
|-FunctionDecl 0x1b546f29cf0 <line:44:1, col:41> col:5 app_RAND_write_file 'int (const char *)'
| `-ParmVarDecl 0x1b546f29c10 <col:25, col:37> col:37 file 'const char *'
|-FunctionDecl 0x1b546f29e48 <line:48:1, col:36> col:6 app_RAND_allow_write_file 'void (void)'
|-FunctionDecl 0x1b546f2a000 <line:49:1, col:36> col:6 app_RAND_load_files 'long (char *)'
| `-ParmVarDecl 0x1b546f29f18 <col:26, col:32> col:32 file 'char *'
|-VarDecl 0x1b546f2a0d8 <line:54:1, col:14> col:14 default_config_file 'char *' extern
|-VarDecl 0x1b546f2a170 <line:55:1, col:13> col:13 invalid bio_in 'int *' extern
|-VarDecl 0x1b546f2a1f0 <line:56:1, col:13> col:13 invalid bio_out 'int *' extern
|-VarDecl 0x1b546f2a270 <line:57:1, col:13> col:13 invalid bio_err 'int *' extern
|-FunctionDecl 0x1b546f2b410 <line:58:1, col:27> col:6 invalid dup_bio_in 'int *(int)'
| `-ParmVarDecl 0x1b546f2a2f0 <col:17, col:21> col:21 format 'int'
|-FunctionDecl 0x1b546f2b580 <line:59:1, col:28> col:6 invalid dup_bio_out 'int *(int)'
| `-ParmVarDecl 0x1b546f2b4d0 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x1b546f2b6f0 <line:60:1, col:28> col:6 invalid dup_bio_err 'int *(int)'
| `-ParmVarDecl 0x1b546f2b640 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x1b546f2b9e0 <line:61:1, col:66> col:6 invalid bio_open_owner 'int *(const char *, int, int)'
| |-ParmVarDecl 0x1b546f2b7b0 <col:21, col:33> col:33 filename 'const char *'
| |-ParmVarDecl 0x1b546f2b830 <col:43, col:47> col:47 format 'int'
| `-ParmVarDecl 0x1b546f2b8b0 <col:55, col:59> col:59 private 'int'
|-FunctionDecl 0x1b546f2bce0 <line:62:1, col:66> col:6 invalid bio_open_default 'int *(const char *, char, int)'
| |-ParmVarDecl 0x1b546f2bab0 <col:23, col:35> col:35 filename 'const char *'
| |-ParmVarDecl 0x1b546f2bb28 <col:45, col:50> col:50 mode 'char'
| `-ParmVarDecl 0x1b546f2bba8 <col:56, col:60> col:60 format 'int'
|-FunctionDecl 0x1b546f2bf98 <line:63:1, col:72> col:6 invalid bio_open_default_quiet 'int *(const char *, char, int)'
| |-ParmVarDecl 0x1b546f2bdb0 <col:29, col:41> col:41 filename 'const char *'
| |-ParmVarDecl 0x1b546f2be28 <col:51, col:56> col:56 mode 'char'
| `-ParmVarDecl 0x1b546f2bea8 <col:62, col:66> col:66 format 'int'
|-FunctionDecl 0x1b546f2c150 <line:64:1, col:43> col:7 invalid app_load_config 'int *(const char *)'
| `-ParmVarDecl 0x1b546f2c068 <col:23, col:35> col:35 filename 'const char *'
|-FunctionDecl 0x1b546f2c2c0 <line:65:1, col:49> col:7 invalid app_load_config_quiet 'int *(const char *)'
| `-ParmVarDecl 0x1b546f2c210 <col:29, col:41> col:41 filename 'const char *'
|-FunctionDecl 0x1b546f2c490 <line:66:1, col:40> col:5 invalid app_load_modules 'int (const int *)'
| `-ParmVarDecl 0x1b546f2c3c0 <col:22, col:34> col:34 invalid config 'const int *'
|-FunctionDecl 0x1b546f2c618 <line:67:1, col:23> col:6 invalid unbuffer 'void (int *)'
| `-ParmVarDecl 0x1b546f2c550 <col:15, col:21> col:21 invalid fp 'int *'
|-FunctionDecl 0x1b546f2c768 <line:68:1, col:27> col:6 invalid wait_for_async 'void (int *)'
| `-ParmVarDecl 0x1b546f2c6d8 <col:21, col:26> col:26 invalid s 'int *'
|-FunctionDecl 0x1b546f2c8e8 <line:73:1, col:52> col:6 invalid corrupt_signature 'void (const int *)'
| `-ParmVarDecl 0x1b546f2c828 <col:24, col:43> col:43 invalid signature 'const int *'
|-FunctionDecl 0x1b546f2cc20 <line:74:1, line:75:28> line:74:5 invalid set_cert_times 'int (int *, const char *, const char *, int)'
| |-ParmVarDecl 0x1b546f2c9a8 <col:20, col:26> col:26 invalid x 'int *'
| |-ParmVarDecl 0x1b546f2ca28 <col:29, col:41> col:41 startdate 'const char *'
| |-ParmVarDecl 0x1b546f2caa8 <col:52, col:64> col:64 enddate 'const char *'
| `-ParmVarDecl 0x1b546f2cb28 <line:75:20, col:24> col:24 days 'int'
|-VarDecl 0x1b546f2cd58 <line:291:1, col:32> col:19 OPT_HELP_STR 'const char []' extern
|-VarDecl 0x1b546f2cdf8 <line:292:1, col:32> col:19 OPT_MORE_STR 'const char []' extern
|-RecordDecl 0x1b546f2ce78 <line:293:9, line:304:1> line:293:16 struct options_st definition
| |-FieldDecl 0x1b546f2cf48 <line:294:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x1b546f2cfb8 <line:295:5, col:9> col:9 retval 'int'
| |-FieldDecl 0x1b546f2d028 <line:302:5, col:9> col:9 valtype 'int'
| `-FieldDecl 0x1b546f2d098 <line:303:5, col:17> col:17 helpstr 'const char *'
|-TypedefDecl 0x1b546f2d148 <line:293:1, line:304:3> col:3 referenced OPTIONS 'struct options_st':'struct options_st'
| `-ElaboratedType 0x1b546f2d0f0 'struct options_st' sugar
|   `-RecordType 0x1b546f2cf10 'struct options_st'
|     `-Record 0x1b546f2ce78 'options_st'
|-RecordDecl 0x1b546f2d1b8 <line:311:9, line:314:1> line:311:16 struct string_int_pair_st definition
| |-FieldDecl 0x1b546f2d288 <line:312:5, col:17> col:17 name 'const char *'
| `-FieldDecl 0x1b546f2d2f8 <line:313:5, col:9> col:9 retval 'int'
|-TypedefDecl 0x1b546f36740 <line:311:1, line:314:3> col:3 referenced OPT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x1b546f2d350 'struct string_int_pair_st' sugar
|   `-RecordType 0x1b546f2d250 'struct string_int_pair_st'
|     `-Record 0x1b546f2d1b8 'string_int_pair_st'
|-TypedefDecl 0x1b546f367b8 <line:311:1, line:314:13> col:13 STRINT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x1b546f2d350 'struct string_int_pair_st' sugar
|   `-RecordType 0x1b546f2d250 'struct string_int_pair_st'
|     `-Record 0x1b546f2d1b8 'string_int_pair_st'
|-FunctionDecl 0x1b546f368f8 <line:334:1, col:37> col:7 opt_progname 'char *(const char *)'
| `-ParmVarDecl 0x1b546f36848 <col:20, col:32> col:32 argv0 'const char *'
|-FunctionDecl 0x1b546f36a80 <line:335:1, col:23> col:7 opt_getprog 'char *(void)'
|-FunctionDecl 0x1b546f36e40 <line:336:1, col:52> col:7 used opt_init 'char *(int, char **, const OPTIONS *)'
| |-ParmVarDecl 0x1b546f36b50 <col:16, col:20> col:20 ac 'int'
| |-ParmVarDecl 0x1b546f36bd0 <col:24, col:31> col:31 av 'char **'
| `-ParmVarDecl 0x1b546f36cc8 <col:35, col:51> col:51 o 'const OPTIONS *'
|-FunctionDecl 0x1b546f36fe0 <line:337:1, col:18> col:5 used opt_next 'int (void)'
|-FunctionDecl 0x1b546f372e0 <line:338:1, col:63> col:5 opt_format 'int (const char *, unsigned long, int *)'
| |-ParmVarDecl 0x1b546f370b0 <col:16, col:28> col:28 s 'const char *'
| |-ParmVarDecl 0x1b546f37130 <col:31, col:45> col:45 flags 'unsigned long'
| `-ParmVarDecl 0x1b546f371b0 <col:52, col:57> col:57 result 'int *'
|-FunctionDecl 0x1b546f37550 <line:339:1, col:41> col:5 opt_int 'int (const char *, int *)'
| |-ParmVarDecl 0x1b546f373c8 <col:13, col:25> col:25 arg 'const char *'
| `-ParmVarDecl 0x1b546f37448 <col:30, col:35> col:35 result 'int *'
|-FunctionDecl 0x1b546f3b8a0 <line:340:1, col:53> col:5 opt_ulong 'int (const char *, unsigned long *)'
| |-ParmVarDecl 0x1b546f37630 <col:15, col:27> col:27 arg 'const char *'
| `-ParmVarDecl 0x1b546f3b790 <col:32, col:47> col:47 result 'unsigned long *'
|-FunctionDecl 0x1b546f3bb40 <line:341:1, col:43> col:5 opt_long 'int (const char *, long *)'
| |-ParmVarDecl 0x1b546f3b980 <col:14, col:26> col:26 arg 'const char *'
| `-ParmVarDecl 0x1b546f3ba30 <col:31, col:37> col:37 result 'long *'
|-FunctionDecl 0x1b546f3bf10 <line:352:1, col:66> col:5 opt_pair 'int (const char *, const OPT_PAIR *, int *)'
| |-ParmVarDecl 0x1b546f3bc20 <col:14, col:26> col:26 arg 'const char *'
| |-ParmVarDecl 0x1b546f3bd18 <col:31, col:48> col:48 pairs 'const OPT_PAIR *'
| `-ParmVarDecl 0x1b546f3bd98 <col:55, col:60> col:60 result 'int *'
|-FunctionDecl 0x1b546f3c180 <line:353:1, col:60> col:5 invalid opt_cipher 'int (const char *, const int **)'
| |-ParmVarDecl 0x1b546f3bff8 <col:16, col:28> col:28 name 'const char *'
| `-ParmVarDecl 0x1b546f3c0a8 <col:34, col:53> col:53 invalid cipherp 'const int **'
|-FunctionDecl 0x1b546f3c370 <line:354:1, col:48> col:5 invalid opt_md 'int (const char *, const int **)'
| |-ParmVarDecl 0x1b546f3c248 <col:12, col:24> col:24 name 'const char *'
| `-ParmVarDecl 0x1b546f3c2d0 <col:30, col:45> col:45 invalid mdp 'const int **'
|-FunctionDecl 0x1b546f3c4c0 <line:355:1, col:19> col:7 used opt_arg 'char *(void)'
|-FunctionDecl 0x1b546f3c618 <line:356:1, col:20> col:7 opt_flag 'char *(void)'
|-FunctionDecl 0x1b546f3d7b0 <line:357:1, col:23> col:7 opt_unknown 'char *(void)'
|-FunctionDecl 0x1b546f3d908 <line:358:1, col:21> col:7 opt_reset 'char *(void)'
|-FunctionDecl 0x1b546f3da90 <line:359:1, col:21> col:8 used opt_rest 'char **(void)'
|-FunctionDecl 0x1b546f3dbe8 <line:360:1, col:22> col:5 used opt_num_rest 'int (void)'
|-FunctionDecl 0x1b546f3de10 <line:361:1, col:45> col:5 invalid opt_verify 'int (int, int *)'
| |-ParmVarDecl 0x1b546f3dcb8 <col:16, col:20> col:20 i 'int'
| `-ParmVarDecl 0x1b546f3dd38 <col:23, col:42> col:42 invalid vpm 'int *'
|-FunctionDecl 0x1b546f3dfd8 <line:362:1, col:35> col:6 used opt_help 'void (const OPTIONS *)'
| `-ParmVarDecl 0x1b546f3ded0 <col:15, col:31> col:31 list 'const OPTIONS *'
|-FunctionDecl 0x1b546f3e240 <line:363:1, col:56> col:5 opt_format_error 'int (const char *, unsigned long)'
| |-ParmVarDecl 0x1b546f3e0b0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x1b546f3e130 <col:37, col:51> col:51 flags 'unsigned long'
|-RecordDecl 0x1b546f3e308 <line:365:9, line:369:1> line:365:16 struct args_st definition
| |-FieldDecl 0x1b546f3e3d8 <line:366:5, col:9> col:9 size 'int'
| |-FieldDecl 0x1b546f3e448 <line:367:5, col:9> col:9 argc 'int'
| `-FieldDecl 0x1b546f3e4b8 <line:368:5, col:12> col:12 argv 'char **'
|-TypedefDecl 0x1b546f3e568 <line:365:1, line:369:3> col:3 referenced ARGS 'struct args_st':'struct args_st'
| `-ElaboratedType 0x1b546f3e510 'struct args_st' sugar
|   `-RecordType 0x1b546f3e3a0 'struct args_st'
|     `-Record 0x1b546f3e308 'args_st'
|-FunctionDecl 0x1b546f3e870 <line:376:1, col:41> col:8 copy_argv 'char **(int *, char **)'
| |-ParmVarDecl 0x1b546f3e5f0 <col:18, col:23> col:23 argc 'int *'
| `-ParmVarDecl 0x1b546f3e6e0 <col:29, col:40> col:35 argv 'char **':'char **'
|-FunctionDecl 0x1b546f3ebb8 <line:381:1, col:45> col:6 win32_utf8argv 'void (int *, char ***)'
| |-ParmVarDecl 0x1b546f3e950 <col:21, col:26> col:26 argc 'int *'
| `-ParmVarDecl 0x1b546f3ea70 <col:32, col:44> col:39 argv 'char ***':'char ***'
|-RecordDecl 0x1b546f3ec80 <line:385:9, line:388:1> line:385:16 struct pw_cb_data definition
| |-FieldDecl 0x1b546f3ed58 <line:386:5, col:17> col:17 password 'const void *'
| `-FieldDecl 0x1b546f3edc8 <line:387:5, col:17> col:17 prompt_info 'const char *'
|-TypedefDecl 0x1b546f3ee78 <line:385:1, line:388:3> col:3 referenced PW_CB_DATA 'struct pw_cb_data':'struct pw_cb_data'
| `-ElaboratedType 0x1b546f3ee20 'struct pw_cb_data' sugar
|   `-RecordType 0x1b546f3ed20 'struct pw_cb_data'
|     `-Record 0x1b546f3ec80 'pw_cb_data'
|-FunctionDecl 0x1b546f3f2a0 <line:390:1, col:77> col:5 password_callback 'int (char *, int, int, PW_CB_DATA *)'
| |-ParmVarDecl 0x1b546f3ef00 <col:23, col:29> col:29 buf 'char *'
| |-ParmVarDecl 0x1b546f3ef80 <col:34, col:38> col:38 bufsiz 'int'
| |-ParmVarDecl 0x1b546f3f000 <col:46, col:50> col:50 verify 'int'
| `-ParmVarDecl 0x1b546f3f0f8 <col:58, col:70> col:70 cb_data 'PW_CB_DATA *'
|-FunctionDecl 0x1b546f3f418 <line:392:1, col:25> col:5 setup_ui_method 'int (void)'
|-FunctionDecl 0x1b546f3f568 <line:393:1, col:28> col:6 destroy_ui_method 'void (void)'
|-FunctionDecl 0x1b546f38810 <line:395:1, col:37> col:5 chopup_args 'int (ARGS *, char *)'
| |-ParmVarDecl 0x1b546f3f6a8 <col:17, col:23> col:23 arg 'ARGS *'
| `-ParmVarDecl 0x1b546f3f728 <col:28, col:34> col:34 buf 'char *'
|-FunctionDecl 0x1b546f38c28 <line:401:1, line:402:43> line:401:6 invalid print_bignum_var 'void (int *, const int *, const char *, int, unsigned char *)'
| |-ParmVarDecl 0x1b546f388f0 <col:23, <invalid sloc>> col:28 invalid 'int *'
| |-ParmVarDecl 0x1b546f38970 <col:30, <invalid sloc>> col:44 invalid 'const int *'
| |-ParmVarDecl 0x1b546f389f0 <col:46, col:56> col:57 'const char *'
| |-ParmVarDecl 0x1b546f38a70 <line:402:23> col:26 'int'
| `-ParmVarDecl 0x1b546f38b20 <col:28, col:42> col:43 'unsigned char *'
|-FunctionDecl 0x1b546f38f78 <line:403:1, col:65> col:6 invalid print_array 'void (int *, const char *, int, const unsigned char *)'
| |-ParmVarDecl 0x1b546f38d08 <col:18, <invalid sloc>> col:23 invalid 'int *'
| |-ParmVarDecl 0x1b546f38d88 <col:25, col:36> col:37 'const char *'
| |-ParmVarDecl 0x1b546f38e08 <col:39> col:42 'int'
| `-ParmVarDecl 0x1b546f38e88 <col:44, col:64> col:65 'const unsigned char *'
|-FunctionDecl 0x1b546f391e0 <line:404:1, col:54> col:5 set_cert_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x1b546f39050 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x1b546f390d0 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x1b546f39410 <line:405:1, col:54> col:5 set_name_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x1b546f392c0 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x1b546f39340 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x1b546f39680 <line:406:1, col:49> col:5 set_ext_copy 'int (int *, const char *)'
| |-ParmVarDecl 0x1b546f394f0 <col:18, col:23> col:23 copy_type 'int *'
| `-ParmVarDecl 0x1b546f39570 <col:34, col:46> col:46 arg 'const char *'
|-FunctionDecl 0x1b546f3c990 <line:407:1, col:58> col:5 invalid copy_extensions 'int (int *, int *, int)'
| |-ParmVarDecl 0x1b546f3c7a0 <col:21, col:27> col:27 invalid x 'int *'
| |-ParmVarDecl 0x1b546f3c820 <col:30, col:40> col:40 invalid req 'int *'
| `-ParmVarDecl 0x1b546f3c8a0 <col:45, col:49> col:49 copy_type 'int'
|-FunctionDecl 0x1b546f3cd40 <line:408:1, col:78> col:5 app_passwd 'int (const char *, const char *, char **, char **)'
| |-ParmVarDecl 0x1b546f3ca60 <col:16, col:28> col:28 arg1 'const char *'
| |-ParmVarDecl 0x1b546f3cae0 <col:34, col:46> col:46 arg2 'const char *'
| |-ParmVarDecl 0x1b546f3cb60 <col:52, col:59> col:59 pass1 'char **'
| `-ParmVarDecl 0x1b546f3cbe0 <col:66, col:73> col:73 pass2 'char **'
|-FunctionDecl 0x1b546f3cf00 <line:409:1, col:31> col:5 invalid add_oid_section 'int (int *)'
| `-ParmVarDecl 0x1b546f3ce30 <col:21, col:27> col:27 invalid conf 'int *'
|-FunctionDecl 0x1b546f3d1f0 <line:410:1, col:71> col:7 invalid load_cert 'int *(const char *, int, const char *)'
| |-ParmVarDecl 0x1b546f3cfc0 <col:17, col:29> col:29 file 'const char *'
| |-ParmVarDecl 0x1b546f3d040 <col:35, col:39> col:39 format 'int'
| `-ParmVarDecl 0x1b546f3d0c0 <col:47, col:59> col:59 cert_descrip 'const char *'
|-FunctionDecl 0x1b546f3d450 <line:411:1, col:50> col:11 invalid load_crl 'int *(const char *, int)'
| |-ParmVarDecl 0x1b546f3d2c0 <col:20, col:32> col:32 infile 'const char *'
| `-ParmVarDecl 0x1b546f3d340 <col:40, col:44> col:44 format 'int'
|-FunctionDecl 0x1b546f40900 <line:412:1, line:413:72> line:412:11 invalid load_key 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x1b546f3d518 <col:20, col:32> col:32 file 'const char *'
| |-ParmVarDecl 0x1b546f3d598 <col:38, col:42> col:42 format 'int'
| |-ParmVarDecl 0x1b546f3d618 <col:50, col:54> col:54 maybe_stdin 'int'
| |-ParmVarDecl 0x1b546f3d698 <line:413:20, col:32> col:32 pass 'const char *'
| |-ParmVarDecl 0x1b546f3d718 <col:38, col:46> col:46 invalid e 'int *'
| `-ParmVarDecl 0x1b546f407e0 <col:49, col:61> col:61 key_descrip 'const char *'
|-FunctionDecl 0x1b546f40d28 <line:414:1, line:415:75> line:414:11 invalid load_pubkey 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x1b546f409e8 <col:23, col:35> col:35 file 'const char *'
| |-ParmVarDecl 0x1b546f40a68 <col:41, col:45> col:45 format 'int'
| |-ParmVarDecl 0x1b546f40ae8 <col:53, col:57> col:57 maybe_stdin 'int'
| |-ParmVarDecl 0x1b546f40b68 <line:415:23, col:35> col:35 pass 'const char *'
| |-ParmVarDecl 0x1b546f40be8 <col:41, col:49> col:49 invalid e 'int *'
| `-ParmVarDecl 0x1b546f40c68 <col:52, col:64> col:64 key_descrip 'const char *'
|-FunctionDecl 0x1b546f41050 <line:416:1, line:417:58> line:416:5 invalid load_certs 'int (const char *, int (*)())'
| |-ParmVarDecl 0x1b546f40e10 <col:16, col:28> col:28 file 'const char *'
| `-ParmVarDecl 0x1b546f40f30 <col:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1b546f41248 <line:418:1, line:419:57> line:418:5 invalid load_crls 'int (const char *, int (*)())'
| |-ParmVarDecl 0x1b546f41118 <col:15, col:27> col:27 file 'const char *'
| `-ParmVarDecl 0x1b546f411a8 <col:33, <invalid sloc>> col:33 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1b546f415f0 <line:420:1, line:421:52> line:420:13 invalid setup_verify 'int *(const char *, const char *, int, int)'
| |-ParmVarDecl 0x1b546f41310 <col:26, col:38> col:38 CAfile 'const char *'
| |-ParmVarDecl 0x1b546f41390 <col:46, col:58> col:58 CApath 'const char *'
| |-ParmVarDecl 0x1b546f41410 <line:421:26, col:30> col:30 noCAfile 'int'
| `-ParmVarDecl 0x1b546f41490 <col:40, col:44> col:44 noCApath 'int'
|-FunctionDecl 0x1b546f42a10 <line:422:1, line:424:49> line:422:12 invalid ctx_set_verify_locations 'int (int *, const char *, const char *, int, int)'
| |-ParmVarDecl 0x1b546f416c8 <col:37, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x1b546f41748 <col:51, col:63> col:63 CAfile 'const char *'
| |-ParmVarDecl 0x1b546f42800 <line:423:37, col:49> col:49 CApath 'const char *'
| |-ParmVarDecl 0x1b546f42880 <col:57, col:61> col:61 noCAfile 'int'
| `-ParmVarDecl 0x1b546f42900 <line:424:37, col:41> col:41 noCApath 'int'
|-FunctionDecl 0x1b546f42c10 <line:433:1, col:66> col:12 invalid ctx_set_ctlog_list_file 'int (int *, const char *)'
| |-ParmVarDecl 0x1b546f42af0 <col:36, col:45> col:45 invalid ctx 'int *'
| `-ParmVarDecl 0x1b546f42b70 <col:50, col:62> col:62 path 'const char *'
|-FunctionDecl 0x1b546f42e28 <line:437:1, col:51> col:9 invalid setup_engine 'int *(const char *, int)'
| |-ParmVarDecl 0x1b546f42cd8 <col:22, col:34> col:34 engine 'const char *'
| `-ParmVarDecl 0x1b546f42d58 <col:42, col:46> col:46 debug 'int'
|-FunctionDecl 0x1b546f42f80 <line:438:1, col:30> col:6 invalid release_engine 'void (int *)'
| `-ParmVarDecl 0x1b546f42ef0 <col:21, col:29> col:29 invalid e 'int *'
|-FunctionDecl 0x1b546f43450 <line:441:1, line:445:49> line:441:16 invalid process_responder 'int *(int *, const char *, const char *, const char *, int, int (*)())'
| |-ParmVarDecl 0x1b546f43040 <col:34, col:48> col:48 invalid req 'int *'
| |-ParmVarDecl 0x1b546f430c0 <line:442:34, col:46> col:46 host 'const char *'
| |-ParmVarDecl 0x1b546f43140 <col:52, col:64> col:64 path 'const char *'
| |-ParmVarDecl 0x1b546f431c0 <line:443:34, col:46> col:46 port 'const char *'
| |-ParmVarDecl 0x1b546f43240 <col:52, col:56> col:56 use_ssl 'int'
| `-ParmVarDecl 0x1b546f432d0 <line:444:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1b546f41890 <line:449:1, line:450:66> line:449:5 invalid unpack_revinfo 'int (int **, int *, int **, int **, const char *)'
| |-ParmVarDecl 0x1b546f43568 <col:20, col:32> col:32 invalid prevtm 'int **'
| |-ParmVarDecl 0x1b546f435e8 <col:40, col:45> col:45 preason 'int *'
| |-ParmVarDecl 0x1b546f43670 <col:54, col:68> col:68 invalid phold 'int **'
| |-ParmVarDecl 0x1b546f436f8 <line:450:20, col:43> col:43 invalid pinvtm 'int **'
| `-ParmVarDecl 0x1b546f43778 <col:51, col:63> col:63 str 'const char *'
|-RecordDecl 0x1b546f41958 <line:465:9, line:467:1> line:465:16 struct db_attr_st definition
| `-FieldDecl 0x1b546f41a28 <line:466:5, col:9> col:9 unique_subject 'int'
|-TypedefDecl 0x1b546f41ad8 <line:465:1, line:467:3> col:3 referenced DB_ATTR 'struct db_attr_st':'struct db_attr_st'
| `-ElaboratedType 0x1b546f41a80 'struct db_attr_st' sugar
|   `-RecordType 0x1b546f419f0 'struct db_attr_st'
|     `-Record 0x1b546f41958 'db_attr_st'
|-RecordDecl 0x1b546f41b48 <line:468:9, line:471:1> line:468:16 invalid struct ca_db_st definition
| |-FieldDecl 0x1b546f41c30 <line:469:5, col:13> col:13 attributes 'DB_ATTR':'struct db_attr_st'
| `-FieldDecl 0x1b546f41ca0 <line:470:5, col:13> col:13 invalid db 'int *'
|-TypedefDecl 0x1b546f41da8 <line:468:1, line:471:3> col:3 referenced CA_DB 'struct ca_db_st':'struct ca_db_st'
| `-ElaboratedType 0x1b546f41d50 'struct ca_db_st' sugar
|   `-RecordType 0x1b546f41be0 'struct ca_db_st'
|     `-Record 0x1b546f41b48 'ca_db_st'
|-FunctionDecl 0x1b546f41fc0 <line:473:1, col:42> col:7 used app_malloc 'void *(int, const char *)'
| |-ParmVarDecl 0x1b546f41e30 <col:18, col:22> col:22 sz 'int'
| `-ParmVarDecl 0x1b546f41eb0 <col:26, col:38> col:38 what 'const char *'
|-FunctionDecl 0x1b546f42290 <line:474:1, col:77> col:9 invalid load_serial 'int *(const char *, int, int **)'
| |-ParmVarDecl 0x1b546f420a0 <col:21, col:33> col:33 serialfile 'const char *'
| |-ParmVarDecl 0x1b546f42120 <col:45, col:49> col:49 create 'int'
| `-ParmVarDecl 0x1b546f421a8 <col:57, col:72> col:72 invalid retai 'int **'
|-FunctionDecl 0x1b546f425e0 <line:475:1, line:476:37> line:475:5 invalid save_serial 'int (const char *, const char *, const int *, int **)'
| |-ParmVarDecl 0x1b546f42360 <col:17, col:29> col:29 serialfile 'const char *'
| |-ParmVarDecl 0x1b546f423e0 <col:41, col:53> col:53 suffix 'const char *'
| |-ParmVarDecl 0x1b546f42460 <col:61, col:75> col:75 invalid serial 'const int *'
| `-ParmVarDecl 0x1b546f424e8 <line:476:17, col:32> col:32 invalid retai 'int **'
|-FunctionDecl 0x1b546f45960 <line:477:1, line:478:41> line:477:5 rotate_serial 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x1b546f426b8 <col:19, col:31> col:31 serialfile 'const char *'
| |-ParmVarDecl 0x1b546f42738 <col:43, col:55> col:55 new_suffix 'const char *'
| `-ParmVarDecl 0x1b546f45830 <line:478:19, col:31> col:31 old_suffix 'const char *'
|-FunctionDecl 0x1b546f45ba0 <line:479:1, col:44> col:5 invalid rand_serial 'int (int *, int *)'
| |-ParmVarDecl 0x1b546f45a48 <col:17, col:25> col:25 invalid b 'int *'
| `-ParmVarDecl 0x1b546f45ac8 <col:28, col:42> col:42 invalid ai 'int *'
|-FunctionDecl 0x1b546f45ef8 <line:480:1, col:54> col:8 load_index 'CA_DB *(const char *, DB_ATTR *)'
| |-ParmVarDecl 0x1b546f45c88 <col:19, col:31> col:31 dbfile 'const char *'
| `-ParmVarDecl 0x1b546f45d58 <col:39, col:48> col:48 dbattr 'DB_ATTR *'
|-FunctionDecl 0x1b546f460e0 <line:481:1, col:26> col:5 index_index 'int (CA_DB *)'
| `-ParmVarDecl 0x1b546f45fd0 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x1b546f46420 <line:482:1, col:65> col:5 save_index 'int (const char *, const char *, CA_DB *)'
| |-ParmVarDecl 0x1b546f461b8 <col:16, col:28> col:28 dbfile 'const char *'
| |-ParmVarDecl 0x1b546f46238 <col:36, col:48> col:48 suffix 'const char *'
| `-ParmVarDecl 0x1b546f462b0 <col:56, col:63> col:63 db 'CA_DB *'
|-FunctionDecl 0x1b546f466f8 <line:483:1, line:484:40> line:483:5 rotate_index 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x1b546f46508 <col:18, col:30> col:30 dbfile 'const char *'
| |-ParmVarDecl 0x1b546f46588 <col:38, col:50> col:50 new_suffix 'const char *'
| `-ParmVarDecl 0x1b546f46608 <line:484:18, col:30> col:30 old_suffix 'const char *'
|-FunctionDecl 0x1b546f48968 <line:485:1, col:26> col:6 free_index 'void (CA_DB *)'
| `-ParmVarDecl 0x1b546f48860 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x1b546f48ba0 <line:489:1, col:70> col:5 invalid index_name_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x1b546f48a40 <col:20, col:43> col:43 invalid a 'const int *'
| `-ParmVarDecl 0x1b546f48ac0 <col:46, col:69> col:69 invalid b 'const int *'
|-FunctionDecl 0x1b546f48db8 <line:490:1, col:41> col:5 parse_yesno 'int (const char *, int)'
| |-ParmVarDecl 0x1b546f48c68 <col:17, col:29> col:29 str 'const char *'
| `-ParmVarDecl 0x1b546f48ce8 <col:34, col:38> col:38 def 'int'
|-FunctionDecl 0x1b546f490d0 <line:492:1, col:65> col:12 invalid parse_name 'int *(const char *, long, int)'
| |-ParmVarDecl 0x1b546f48e98 <col:23, col:35> col:35 str 'const char *'
| |-ParmVarDecl 0x1b546f48f18 <col:40, col:45> col:45 chtype 'long'
| `-ParmVarDecl 0x1b546f48f98 <col:53, col:57> col:57 multirdn 'int'
|-FunctionDecl 0x1b546f49430 <line:493:1, line:494:52> line:493:5 invalid args_verify 'int (char ***, int *, int *, int **)'
| |-ParmVarDecl 0x1b546f491a8 <col:17, col:25> col:25 pargs 'char ***'
| |-ParmVarDecl 0x1b546f49228 <col:32, col:37> col:37 pargc 'int *'
| |-ParmVarDecl 0x1b546f492a8 <line:494:17, col:22> col:22 badarg 'int *'
| `-ParmVarDecl 0x1b546f49330 <col:30, col:50> col:50 invalid pm 'int **'
|-FunctionDecl 0x1b546f49598 <line:495:1, col:40> col:6 invalid policies_print 'void (int *)'
| `-ParmVarDecl 0x1b546f49508 <col:21, col:37> col:37 invalid ctx 'int *'
|-FunctionDecl 0x1b546f46880 <line:496:1, col:56> col:5 invalid bio_to_mem 'int (unsigned char **, int, int *)'
| |-ParmVarDecl 0x1b546f49688 <col:16, col:32> col:32 out 'unsigned char **'
| |-ParmVarDecl 0x1b546f49708 <col:37, col:41> col:41 maxlen 'int'
| `-ParmVarDecl 0x1b546f49788 <col:49, col:54> col:54 invalid in 'int *'
|-FunctionDecl 0x1b546f46a70 <line:497:1, col:58> col:5 invalid pkey_ctrl_string 'int (int *, const char *)'
| |-ParmVarDecl 0x1b546f46950 <col:22, col:36> col:36 invalid ctx 'int *'
| `-ParmVarDecl 0x1b546f469d0 <col:41, col:53> col:53 value 'const char *'
|-FunctionDecl 0x1b546f46dc0 <line:498:1, line:499:62> line:498:5 invalid init_gen_str 'int (int **, const char *, int *, int)'
| |-ParmVarDecl 0x1b546f46b40 <col:18, col:33> col:33 invalid pctx 'int **'
| |-ParmVarDecl 0x1b546f46bc0 <line:499:18, col:30> col:30 algname 'const char *'
| |-ParmVarDecl 0x1b546f46c40 <col:39, col:47> col:47 invalid e 'int *'
| `-ParmVarDecl 0x1b546f46cc0 <col:50, col:54> col:54 do_param 'int'
|-FunctionDecl 0x1b546f47170 <line:500:1, line:501:51> line:500:5 invalid do_X509_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x1b546f46e98 <col:18, col:24> col:24 invalid x 'int *'
| |-ParmVarDecl 0x1b546f46f18 <col:27, col:37> col:37 invalid pkey 'int *'
| |-ParmVarDecl 0x1b546f46f98 <col:43, col:57> col:57 invalid md 'const int *'
| `-ParmVarDecl 0x1b546f47028 <line:501:18, <invalid sloc>> col:18 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1b546f47488 <line:502:1, line:503:55> line:502:5 invalid do_X509_REQ_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x1b546f47248 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x1b546f472c8 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x1b546f47348 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x1b546f473d8 <line:503:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1b546f477a0 <line:504:1, line:505:55> line:504:5 invalid do_X509_CRL_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x1b546f47560 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x1b546f475e0 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x1b546f47660 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x1b546f476f0 <line:505:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-VarDecl 0x1b546f498a8 <line:507:1, col:14> col:14 psk_key 'char *' extern
|-FunctionDecl 0x1b546f49b60 <line:510:1, col:64> col:16 next_protos_parse 'unsigned char *(size_t *, const char *)'
| |-ParmVarDecl 0x1b546f49998 <col:34, col:42> col:42 outlen 'size_t *'
| `-ParmVarDecl 0x1b546f49a18 <col:50, col:62> col:62 in 'const char *'
|-FunctionDecl 0x1b546f49f48 <line:512:1, line:514:67> line:512:6 invalid print_cert_checks 'void (int *, int *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1b546f49c40 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x1b546f49cc0 <col:34, col:40> col:40 invalid x 'int *'
| |-ParmVarDecl 0x1b546f49d40 <line:513:24, col:36> col:36 checkhost 'const char *'
| |-ParmVarDecl 0x1b546f49dc0 <line:514:24, col:36> col:36 checkemail 'const char *'
| `-ParmVarDecl 0x1b546f49e40 <col:48, col:60> col:60 checkip 'const char *'
|-FunctionDecl 0x1b546f4a0b8 <line:516:1, col:45> col:6 invalid store_setup_crl_download 'void (int *)'
| `-ParmVarDecl 0x1b546f4a028 <col:31, col:43> col:43 invalid st 'int *'
|-FunctionDecl 0x1b546f4a210 <line:551:1, col:27> col:5 app_isdir 'int (const char *)'
| `-ParmVarDecl 0x1b546f4a178 <col:15, col:26> col:27 'const char *'
|-FunctionDecl 0x1b546f4a420 <line:552:1, col:38> col:5 app_access 'int (const char *, int)'
| |-ParmVarDecl 0x1b546f4a2e8 <col:16, col:27> col:28 'const char *'
| `-ParmVarDecl 0x1b546f4a368 <col:30, col:34> col:34 flag 'int'
|-FunctionDecl 0x1b546f4a588 <line:553:1, col:22> col:5 fileno_stdin 'int (void)'
|-FunctionDecl 0x1b546f4a6e0 <line:554:1, col:23> col:5 fileno_stdout 'int (void)'
|-FunctionDecl 0x1b546f4b970 <line:555:1, col:31> col:5 raw_read_stdin 'int (void *, int)'
| |-ParmVarDecl 0x1b546f4a7b0 <col:20, col:25> col:26 'void *'
| `-ParmVarDecl 0x1b546f4b890 <col:28> col:31 'int'
|-FunctionDecl 0x1b546f4bbb0 <line:556:1, col:39> col:5 raw_write_stdout 'int (const void *, int)'
| |-ParmVarDecl 0x1b546f4ba50 <col:22, col:33> col:34 'const void *'
| `-ParmVarDecl 0x1b546f4bad0 <col:36> col:39 'int'
|-FunctionDecl 0x1b546f4be20 <line:560:1, col:45> col:8 app_tminterval 'double (int, int)'
| |-ParmVarDecl 0x1b546f4bc90 <col:23, col:27> col:27 stop 'int'
| `-ParmVarDecl 0x1b546f4bd10 <col:33, col:37> col:37 usertime 'int'
|-RecordDecl 0x1b546f4bee8 <line:562:9, line:567:1> line:562:16 struct verify_options_st definition
| |-FieldDecl 0x1b546f4bfb8 <line:563:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x1b546f4c028 <line:564:5, col:9> col:9 quiet 'int'
| |-FieldDecl 0x1b546f4c098 <line:565:5, col:9> col:9 error 'int'
| `-FieldDecl 0x1b546f4c108 <line:566:5, col:9> col:9 return_error 'int'
|-TypedefDecl 0x1b546f4c1b8 <line:562:1, line:567:3> col:3 referenced VERIFY_CB_ARGS 'struct verify_options_st':'struct verify_options_st'
| `-ElaboratedType 0x1b546f4c160 'struct verify_options_st' sugar
|   `-RecordType 0x1b546f4bf80 'struct verify_options_st'
|     `-Record 0x1b546f4bee8 'verify_options_st'
|-VarDecl 0x1b546f4c260 <line:569:1, col:23> col:23 verify_args 'VERIFY_CB_ARGS':'struct verify_options_st' extern
|-VarDecl 0x1b546f4c3c0 <.//openssl//file_jk/after\apps\passwd.c:31:1, line:41:1> line:31:28 used cov_2char 'const unsigned char [64]' static cinit
| `-InitListExpr 0x1b546f4e0b8 <col:44, line:41:1> 'const unsigned char [64]'
|   |-ImplicitCastExpr 0x1b546f4e2f8 <line:33:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c428 <col:5> 'int' 46
|   |-ImplicitCastExpr 0x1b546f4e310 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c450 <col:11> 'int' 47
|   |-ImplicitCastExpr 0x1b546f4e328 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c478 <col:17> 'int' 48
|   |-ImplicitCastExpr 0x1b546f4e340 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c4a0 <col:23> 'int' 49
|   |-ImplicitCastExpr 0x1b546f4e358 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c4c8 <col:29> 'int' 50
|   |-ImplicitCastExpr 0x1b546f4e370 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c4f0 <col:35> 'int' 51
|   |-ImplicitCastExpr 0x1b546f4e388 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c518 <col:41> 'int' 52
|   |-ImplicitCastExpr 0x1b546f4e3a0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c540 <col:47> 'int' 53
|   |-ImplicitCastExpr 0x1b546f4e3b8 <line:34:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c568 <col:5> 'int' 54
|   |-ImplicitCastExpr 0x1b546f4e3d0 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c590 <col:11> 'int' 55
|   |-ImplicitCastExpr 0x1b546f4e3e8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c5b8 <col:17> 'int' 56
|   |-ImplicitCastExpr 0x1b546f4e400 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c5e0 <col:23> 'int' 57
|   |-ImplicitCastExpr 0x1b546f4e418 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c608 <col:29> 'int' 65
|   |-ImplicitCastExpr 0x1b546f4e430 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c630 <col:35> 'int' 66
|   |-ImplicitCastExpr 0x1b546f4e448 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c658 <col:41> 'int' 67
|   |-ImplicitCastExpr 0x1b546f4e460 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c680 <col:47> 'int' 68
|   |-ImplicitCastExpr 0x1b546f4e478 <line:35:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c6a8 <col:5> 'int' 69
|   |-ImplicitCastExpr 0x1b546f4e490 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c6d0 <col:11> 'int' 70
|   |-ImplicitCastExpr 0x1b546f4e4a8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c6f8 <col:17> 'int' 71
|   |-ImplicitCastExpr 0x1b546f4e4c0 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c720 <col:23> 'int' 72
|   |-ImplicitCastExpr 0x1b546f4e4d8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c748 <col:29> 'int' 73
|   |-ImplicitCastExpr 0x1b546f4e4f0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c770 <col:35> 'int' 74
|   |-ImplicitCastExpr 0x1b546f4e508 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c798 <col:41> 'int' 75
|   |-ImplicitCastExpr 0x1b546f4e520 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c7c0 <col:47> 'int' 76
|   |-ImplicitCastExpr 0x1b546f4e538 <line:36:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c7e8 <col:5> 'int' 77
|   |-ImplicitCastExpr 0x1b546f4e550 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c810 <col:11> 'int' 78
|   |-ImplicitCastExpr 0x1b546f4e568 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c838 <col:17> 'int' 79
|   |-ImplicitCastExpr 0x1b546f4e580 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4c860 <col:23> 'int' 80
|   |-ImplicitCastExpr 0x1b546f4e598 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4d8b0 <col:29> 'int' 81
|   |-ImplicitCastExpr 0x1b546f4e5b0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4d8d8 <col:35> 'int' 82
|   |-ImplicitCastExpr 0x1b546f4e5c8 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4d900 <col:41> 'int' 83
|   |-ImplicitCastExpr 0x1b546f4e5e0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4d928 <col:47> 'int' 84
|   |-ImplicitCastExpr 0x1b546f4e5f8 <line:37:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4d950 <col:5> 'int' 85
|   |-ImplicitCastExpr 0x1b546f4e610 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4d978 <col:11> 'int' 86
|   |-ImplicitCastExpr 0x1b546f4e628 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4d9a0 <col:17> 'int' 87
|   |-ImplicitCastExpr 0x1b546f4e640 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4d9c8 <col:23> 'int' 88
|   |-ImplicitCastExpr 0x1b546f4e658 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4d9f0 <col:29> 'int' 89
|   |-ImplicitCastExpr 0x1b546f4e670 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4da18 <col:35> 'int' 90
|   |-ImplicitCastExpr 0x1b546f4e688 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4da40 <col:41> 'int' 97
|   |-ImplicitCastExpr 0x1b546f4e6a0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4da68 <col:47> 'int' 98
|   |-ImplicitCastExpr 0x1b546f4e6b8 <line:38:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4da90 <col:5> 'int' 99
|   |-ImplicitCastExpr 0x1b546f4e6d0 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dab8 <col:11> 'int' 100
|   |-ImplicitCastExpr 0x1b546f4e6e8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dae0 <col:17> 'int' 101
|   |-ImplicitCastExpr 0x1b546f4e700 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4db08 <col:23> 'int' 102
|   |-ImplicitCastExpr 0x1b546f4e718 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4db30 <col:29> 'int' 103
|   |-ImplicitCastExpr 0x1b546f4e730 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4db58 <col:35> 'int' 104
|   |-ImplicitCastExpr 0x1b546f4e748 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4db80 <col:41> 'int' 105
|   |-ImplicitCastExpr 0x1b546f4e760 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dba8 <col:47> 'int' 106
|   |-ImplicitCastExpr 0x1b546f4e778 <line:39:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dbd0 <col:5> 'int' 107
|   |-ImplicitCastExpr 0x1b546f4e790 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dbf8 <col:11> 'int' 108
|   |-ImplicitCastExpr 0x1b546f4e7a8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dc20 <col:17> 'int' 109
|   |-ImplicitCastExpr 0x1b546f4e7c0 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dc48 <col:23> 'int' 110
|   |-ImplicitCastExpr 0x1b546f4e7d8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dc70 <col:29> 'int' 111
|   |-ImplicitCastExpr 0x1b546f4e7f0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dc98 <col:35> 'int' 112
|   |-ImplicitCastExpr 0x1b546f4e808 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dcc0 <col:41> 'int' 113
|   |-ImplicitCastExpr 0x1b546f4e820 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dce8 <col:47> 'int' 114
|   |-ImplicitCastExpr 0x1b546f4e838 <line:40:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dd10 <col:5> 'int' 115
|   |-ImplicitCastExpr 0x1b546f4e850 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dd38 <col:11> 'int' 116
|   |-ImplicitCastExpr 0x1b546f4e868 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dd60 <col:17> 'int' 117
|   |-ImplicitCastExpr 0x1b546f4e880 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4dd88 <col:23> 'int' 118
|   |-ImplicitCastExpr 0x1b546f4e898 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4ddb0 <col:29> 'int' 119
|   |-ImplicitCastExpr 0x1b546f4e8c0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4ddd8 <col:35> 'int' 120
|   |-ImplicitCastExpr 0x1b546f4e8d8 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x1b546f4de00 <col:41> 'int' 121
|   `-ImplicitCastExpr 0x1b546f4e8f0 <col:47> 'unsigned char' <IntegralCast>
|     `-IntegerLiteral 0x1b546f4de28 <col:47> 'int' 122
|-FunctionDecl 0x1b546f4f0a0 <line:43:1, line:46:33> line:43:12 invalid do_passwd 'int (int, char **, char **, char *, int *, int, int, int, size_t, int, int, int)' static
| |-ParmVarDecl 0x1b546f4e920 <col:22, col:26> col:26 passed_salt 'int'
| |-ParmVarDecl 0x1b546f4e9a0 <col:39, col:46> col:46 salt_p 'char **'
| |-ParmVarDecl 0x1b546f4ea20 <col:54, col:61> col:61 salt_malloc_p 'char **'
| |-ParmVarDecl 0x1b546f4eaa0 <line:44:22, col:28> col:28 passwd 'char *'
| |-ParmVarDecl 0x1b546f4eb20 <col:36, col:41> col:41 invalid out 'int *'
| |-ParmVarDecl 0x1b546f4eba0 <col:46, col:50> col:50 quiet 'int'
| |-ParmVarDecl 0x1b546f4ec20 <col:57, col:61> col:61 table 'int'
| |-ParmVarDecl 0x1b546f4eca0 <line:45:22, col:26> col:26 reverse 'int'
| |-ParmVarDecl 0x1b546f4ed18 <col:35, col:42> col:42 pw_maxlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b546f4ed98 <col:53, col:57> col:57 usecrypt 'int'
| |-ParmVarDecl 0x1b546f4ee18 <col:67, col:71> col:71 use1 'int'
| `-ParmVarDecl 0x1b546f4ee98 <line:46:22, col:26> col:26 useapr1 'int'
|-EnumDecl 0x1b546f4f1a0 <line:48:9, line:53:1> line:48:14 OPTION_choice
| |-EnumConstantDecl 0x1b546f4f2d8 <line:49:5, col:16> col:5 referenced OPT_ERR 'int'
| | `-ConstantExpr 0x1b546f4f2c0 <col:15, col:16> 'int'
| |   `-UnaryOperator 0x1b546f4f2a8 <col:15, col:16> 'int' prefix '-'
| |     `-IntegerLiteral 0x1b546f4f280 <col:16> 'int' 1
| |-EnumConstantDecl 0x1b546f4f370 <col:19, col:29> col:19 referenced OPT_EOF 'int'
| | `-ConstantExpr 0x1b546f4f358 <col:29> 'int'
| |   `-IntegerLiteral 0x1b546f4f330 <col:29> 'int' 0
| |-EnumConstantDecl 0x1b546f4f3c8 <col:32> col:32 referenced OPT_HELP 'int'
| |-EnumConstantDecl 0x1b546f4f420 <line:50:5> col:5 referenced OPT_IN 'int'
| |-EnumConstantDecl 0x1b546f4f478 <line:51:5> col:5 referenced OPT_NOVERIFY 'int'
| |-EnumConstantDecl 0x1b546f4f4d0 <col:19> col:19 referenced OPT_QUIET 'int'
| |-EnumConstantDecl 0x1b546f4f528 <col:30> col:30 referenced OPT_TABLE 'int'
| |-EnumConstantDecl 0x1b546f4f580 <col:41> col:41 referenced OPT_REVERSE 'int'
| |-EnumConstantDecl 0x1b546f4f5d8 <col:54> col:54 referenced OPT_APR1 'int'
| |-EnumConstantDecl 0x1b546f4f630 <line:52:5> col:5 referenced OPT_1 'int'
| |-EnumConstantDecl 0x1b546f4f688 <col:12> col:12 referenced OPT_CRYPT 'int'
| |-EnumConstantDecl 0x1b546f4f6e0 <col:23> col:23 referenced OPT_SALT 'int'
| `-EnumConstantDecl 0x1b546f4f738 <col:33> col:33 referenced OPT_STDIN 'int'
|-TypedefDecl 0x1b546f4f7e8 <line:48:1, line:53:3> col:3 referenced OPTION_CHOICE 'enum OPTION_choice':'enum OPTION_choice'
| `-ElaboratedType 0x1b546f4f790 'enum OPTION_choice' sugar
|   `-EnumType 0x1b546f4f260 'enum OPTION_choice'
|     `-Enum 0x1b546f4f1a0 'OPTION_choice'
|-VarDecl 0x1b546f47870 <line:55:1, line:73:1> line:55:9 used passwd_options 'OPTIONS [12]' cinit
| `-InitListExpr 0x1b546f4f9a8 <col:28, line:73:1> 'OPTIONS [12]'
|   |-InitListExpr 0x1b546f4f9f8 <line:56:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1b546f4fa70 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1b546f4fa58 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1b546f47918 <col:6> 'char [5]' lvalue "help"
|   | |-DeclRefExpr 0x1b546f47938 <col:14> 'int' EnumConstant 0x1b546f4f3c8 'OPT_HELP' 'int'
|   | |-CharacterLiteral 0x1b546f47958 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1b546f4faa0 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b546f4fa88 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b546f479a8 <col:29> 'char [21]' lvalue "Display this summary"
|   |-InitListExpr 0x1b546f4fad0 <line:57:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1b546f4fb48 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1b546f4fb30 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1b546f47a78 <col:6> 'char [3]' lvalue "in"
|   | |-DeclRefExpr 0x1b546f47a98 <col:12> 'int' EnumConstant 0x1b546f4f420 'OPT_IN' 'int'
|   | |-CharacterLiteral 0x1b546f47ab8 <col:20> 'int' 60
|   | `-ImplicitCastExpr 0x1b546f4fb78 <col:25> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b546f4fb60 <col:25> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b546f47b08 <col:25> 'char [25]' lvalue "Read passwords from file"
|   |-InitListExpr 0x1b546f4fbb0 <line:58:5, line:59:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1b546f4fc28 <line:58:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1b546f4fc10 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1b546f47bd8 <col:6> 'char [9]' lvalue "noverify"
|   | |-DeclRefExpr 0x1b546f47bf8 <col:18> 'int' EnumConstant 0x1b546f4f478 'OPT_NOVERIFY' 'int'
|   | |-CharacterLiteral 0x1b546f47c18 <col:32> 'int' 45
|   | `-ImplicitCastExpr 0x1b546f4fc58 <line:59:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b546f4fc40 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b546f47c68 <col:6> 'char [49]' lvalue "Never verify when reading password from terminal"
|   |-InitListExpr 0x1b546f4fca0 <line:60:5, col:44> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1b546f4fd18 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1b546f4fd00 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1b546f47d48 <col:6> 'char [6]' lvalue "quiet"
|   | |-DeclRefExpr 0x1b546f47d68 <col:15> 'int' EnumConstant 0x1b546f4f4d0 'OPT_QUIET' 'int'
|   | |-CharacterLiteral 0x1b546f47d88 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1b546f4fd48 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b546f4fd30 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b546f47dd8 <col:31> 'char [12]' lvalue "No warnings"
|   |-InitListExpr 0x1b546f4fd70 <line:61:5, col:55> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1b546f4fde8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1b546f4fdd0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1b546f47e60 <col:6> 'char [6]' lvalue "table"
|   | |-DeclRefExpr 0x1b546f47e80 <col:15> 'int' EnumConstant 0x1b546f4f528 'OPT_TABLE' 'int'
|   | |-CharacterLiteral 0x1b546f47ea0 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1b546f4fe18 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b546f4fe00 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b546f47ef8 <col:31> 'char [23]' lvalue "Format output as table"
|   |-InitListExpr 0x1b546f4fe80 <line:62:5, col:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1b546f4fef8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1b546f4fee0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1b546f47fc8 <col:6> 'char [8]' lvalue "reverse"
|   | |-DeclRefExpr 0x1b546f47fe8 <col:17> 'int' EnumConstant 0x1b546f4f580 'OPT_REVERSE' 'int'
|   | |-CharacterLiteral 0x1b546f48008 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x1b546f4ff28 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b546f4ff10 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b546f48020 <col:35> 'char [21]' lvalue "Switch table columns"
|   |-InitListExpr 0x1b546f4ff50 <line:63:5, col:48> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1b546f4ffc8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1b546f4ffb0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1b546f480b0 <col:6> 'char [5]' lvalue "salt"
|   | |-DeclRefExpr 0x1b546f480d0 <col:14> 'int' EnumConstant 0x1b546f4f6e0 'OPT_SALT' 'int'
|   | |-CharacterLiteral 0x1b546f480f0 <col:24> 'int' 115
|   | `-ImplicitCastExpr 0x1b546f4fff8 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b546f4ffe0 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b546f48148 <col:29> 'char [18]' lvalue "Use provided salt"
|   |-InitListExpr 0x1b546f50020 <line:64:5, col:58> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1b546f50098 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1b546f50080 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1b546f481d8 <col:6> 'char [6]' lvalue "stdin"
|   | |-DeclRefExpr 0x1b546f481f8 <col:15> 'int' EnumConstant 0x1b546f4f738 'OPT_STDIN' 'int'
|   | |-CharacterLiteral 0x1b546f48218 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1b546f500c8 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b546f500b0 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b546f48268 <col:31> 'char [26]' lvalue "Read passwords from stdin"
|   |-InitListExpr 0x1b546f500f0 <line:66:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1b546f50168 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1b546f50150 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1b546f48300 <col:6> 'char [5]' lvalue "apr1"
|   | |-DeclRefExpr 0x1b546f48320 <col:14> 'int' EnumConstant 0x1b546f4f5d8 'OPT_APR1' 'int'
|   | |-CharacterLiteral 0x1b546f48340 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1b546f50198 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b546f50180 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b546f48398 <col:29> 'char [45]' lvalue "MD5-based password algorithm, Apache variant"
|   |-InitListExpr 0x1b546f50240 <line:67:5, col:53> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1b546f502b8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1b546f502a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1b546f48478 <col:6> 'char [2]' lvalue "1"
|   | |-DeclRefExpr 0x1b546f48498 <col:11> 'int' EnumConstant 0x1b546f4f630 'OPT_1' 'int'
|   | |-CharacterLiteral 0x1b546f484b8 <col:18> 'int' 45
|   | `-ImplicitCastExpr 0x1b546f502e8 <col:23> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b546f502d0 <col:23> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b546f48508 <col:23> 'char [29]' lvalue "MD5-based password algorithm"
|   |-InitListExpr 0x1b546f50310 <line:70:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1b546f50388 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1b546f50370 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1b546f485a0 <col:6> 'char [6]' lvalue "crypt"
|   | |-DeclRefExpr 0x1b546f485c0 <col:15> 'int' EnumConstant 0x1b546f4f688 'OPT_CRYPT' 'int'
|   | |-CharacterLiteral 0x1b546f485e0 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1b546f503b8 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1b546f503a0 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1b546f48638 <col:31> 'char [43]' lvalue "Standard Unix password algorithm (default)"
|   `-InitListExpr 0x1b546f503e0 <line:72:5, col:10> 'OPTIONS':'struct options_st'
|     |-ImplicitCastExpr 0x1b546f50440 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|     | `-ParenExpr 0x1b546f48748 <col:17, col:27> 'void *'
|     |   `-CStyleCastExpr 0x1b546f48720 <col:18, col:26> 'void *' <NullToPointer>
|     |     `-IntegerLiteral 0x1b546f486e0 <col:26> 'int' 0
|     |-ImplicitValueInitExpr 0x1b546f50458 <<invalid sloc>> 'int'
|     |-ImplicitValueInitExpr 0x1b546f50468 <<invalid sloc>> 'int'
|     `-ImplicitValueInitExpr 0x1b546f50478 <<invalid sloc>> 'const char *'
|-FunctionDecl 0x1b546f506b0 <.//openssl//file_jk/after\apps\passwd.c:75:1, line:272:1> line:75:5 passwd_main 'int (int, char **)'
| |-ParmVarDecl 0x1b546f50520 <col:17, col:21> col:21 used argc 'int'
| |-ParmVarDecl 0x1b546f505a0 <col:27, col:34> col:34 used argv 'char **'
| `-CompoundStmt 0x1b546fac250 <line:76:1, line:272:1>
|   |-DeclStmt 0x1b546f50cc8 <line:78:5, col:72>
|   | |-VarDecl 0x1b546f50818 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:78:11 used infile 'char *' cinit
|   | | `-ImplicitCastExpr 0x1b546f50928 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1b546f50908 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1b546f508e0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1b546f50880 <col:26> 'int' 0
|   | |-VarDecl 0x1b546f50958 <.//openssl//file_jk/after\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:78:27 used salt 'char *' cinit
|   | | `-ImplicitCastExpr 0x1b546f50a48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1b546f50a28 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1b546f50a00 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1b546f509c0 <col:26> 'int' 0
|   | |-VarDecl 0x1b546f50a78 <.//openssl//file_jk/after\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:78:41 used passwd 'char *' cinit
|   | | `-ImplicitCastExpr 0x1b546f50b68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1b546f50b48 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1b546f50b20 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1b546f50ae0 <col:26> 'int' 0
|   | `-VarDecl 0x1b546f50b98 <.//openssl//file_jk/after\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:78:58 used passwds 'char **' cinit
|   |   `-ImplicitCastExpr 0x1b546f50c88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <NullToPointer>
|   |     `-ParenExpr 0x1b546f50c68 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1b546f50c40 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1b546f50c00 <col:26> 'int' 0
|   |-DeclStmt 0x1b546f50fc0 <.//openssl//file_jk/after\apps\passwd.c:79:5, col:59>
|   | |-VarDecl 0x1b546f50cf8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:79:11 used salt_malloc 'char *' cinit
|   | | `-ImplicitCastExpr 0x1b546f50de8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1b546f50dc8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1b546f50da0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1b546f50d60 <col:26> 'int' 0
|   | |-VarDecl 0x1b546f50e18 <.//openssl//file_jk/after\apps\passwd.c:79:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:79:32 used passwd_malloc 'char *' cinit
|   | | `-ImplicitCastExpr 0x1b546f50f08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1b546f50ee8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1b546f50ec0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1b546f50e80 <col:26> 'int' 0
|   | `-VarDecl 0x1b546f50f38 <.//openssl//file_jk/after\apps\passwd.c:79:5, col:55> col:55 used prog 'char *'
|   |-DeclStmt 0x1b546f51078 <line:80:5, col:20>
|   | `-VarDecl 0x1b546f51010 <col:5, col:19> col:19 used o 'OPTION_CHOICE':'enum OPTION_choice'
|   |-DeclStmt 0x1b546f511f8 <line:81:5, col:44>
|   | |-VarDecl 0x1b546f510a8 <col:5, col:20> col:9 used in_stdin 'int' cinit
|   | | `-IntegerLiteral 0x1b546f51110 <col:20> 'int' 0
|   | `-VarDecl 0x1b546f51150 <col:5, col:43> col:23 used pw_source_defined 'int' cinit
|   |   `-IntegerLiteral 0x1b546f511b8 <col:43> 'int' 0
|   |-DeclStmt 0x1b546f512b8 <line:83:5, col:24>
|   | `-VarDecl 0x1b546f51228 <col:5, col:23> col:9 used in_noverify 'int' cinit
|   |   `-IntegerLiteral 0x1b546f51290 <col:23> 'int' 0
|   |-DeclStmt 0x1b546f51598 <line:85:5, col:59>
|   | |-VarDecl 0x1b546f512e8 <col:5, col:23> col:9 used passed_salt 'int' cinit
|   | | `-IntegerLiteral 0x1b546f51350 <col:23> 'int' 0
|   | |-VarDecl 0x1b546f51390 <col:5, col:34> col:26 used quiet 'int' cinit
|   | | `-IntegerLiteral 0x1b546f513f8 <col:34> 'int' 0
|   | |-VarDecl 0x1b546f51438 <col:5, col:45> col:37 used table 'int' cinit
|   | | `-IntegerLiteral 0x1b546f514a0 <col:45> 'int' 0
|   | `-VarDecl 0x1b546f514e0 <col:5, col:58> col:48 used reverse 'int' cinit
|   |   `-IntegerLiteral 0x1b546f51548 <col:58> 'int' 0
|   |-DeclStmt 0x1b546f51878 <line:86:5, col:53>
|   | |-VarDecl 0x1b546f515c8 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x1b546f51630 <col:15> 'int' 1
|   | |-VarDecl 0x1b546f51670 <col:5, col:29> col:18 used usecrypt 'int' cinit
|   | | `-IntegerLiteral 0x1b546f516d8 <col:29> 'int' 0
|   | |-VarDecl 0x1b546f51718 <col:5, col:39> col:32 used use1 'int' cinit
|   | | `-IntegerLiteral 0x1b546f51780 <col:39> 'int' 0
|   | `-VarDecl 0x1b546f517c0 <col:5, col:52> col:42 used useapr1 'int' cinit
|   |   `-IntegerLiteral 0x1b546f51828 <col:52> 'int' 0
|   |-DeclStmt 0x1b546f51a68 <line:87:5, col:51>
|   | |-VarDecl 0x1b546f518f0 <col:5, col:33> col:12 used passwd_malloc_size 'size_t':'unsigned long long' cinit
|   | | `-ImplicitCastExpr 0x1b546f51980 <col:33> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b546f51958 <col:33> 'int' 0
|   | `-VarDecl 0x1b546f519a8 <col:5, col:48> col:36 used pw_maxlen 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1b546f51a38 <col:48> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1b546f51a10 <col:48> 'int' 256
|   |-BinaryOperator 0x1b546f51ca8 <line:89:5, col:47> 'char *' '='
|   | |-DeclRefExpr 0x1b546f51a80 <col:5> 'char *' lvalue Var 0x1b546f50f38 'prog' 'char *'
|   | `-CallExpr 0x1b546f51bb0 <col:12, col:47> 'char *'
|   |   |-ImplicitCastExpr 0x1b546f51b98 <col:12> 'char *(*)(int, char **, const OPTIONS *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1b546f51ab8 <col:12> 'char *(int, char **, const OPTIONS *)' Function 0x1b546f36e40 'opt_init' 'char *(int, char **, const OPTIONS *)'
|   |   |-ImplicitCastExpr 0x1b546f51be8 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b546f51ad8 <col:21> 'int' lvalue ParmVar 0x1b546f50520 'argc' 'int'
|   |   |-ImplicitCastExpr 0x1b546f51c00 <col:27> 'char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b546f51af8 <col:27> 'char **' lvalue ParmVar 0x1b546f505a0 'argv' 'char **'
|   |   `-ImplicitCastExpr 0x1b546f51c90 <col:33> 'const OPTIONS *' <NoOp>
|   |     `-ImplicitCastExpr 0x1b546f51c78 <col:33> 'OPTIONS *' <ArrayToPointerDecay>
|   |       `-DeclRefExpr 0x1b546f51b18 <col:33> 'OPTIONS [12]' lvalue Var 0x1b546f47870 'passwd_options' 'OPTIONS [12]'
|   |-WhileStmt 0x1b546fb0ee8 <line:90:5, line:141:5>
|   | |-BinaryOperator 0x1b546f51e10 <line:90:12, col:32> 'int' '!='
|   | | |-ImplicitCastExpr 0x1b546f51df8 <col:12, col:27> 'int' <IntegralCast>
|   | | | `-ParenExpr 0x1b546f51db8 <col:12, col:27> 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |   `-BinaryOperator 0x1b546f51d98 <col:13, col:26> 'OPTION_CHOICE':'enum OPTION_choice' '='
|   | | |     |-DeclRefExpr 0x1b546f51cc8 <col:13> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1b546f51010 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |     `-ImplicitCastExpr 0x1b546f51d80 <col:17, col:26> 'OPTION_CHOICE':'enum OPTION_choice' <IntegralCast>
|   | | |       `-CallExpr 0x1b546f51d60 <col:17, col:26> 'int'
|   | | |         `-ImplicitCastExpr 0x1b546f51d48 <col:17> 'int (*)(void)' <FunctionToPointerDecay>
|   | | |           `-DeclRefExpr 0x1b546f51d00 <col:17> 'int (void)' Function 0x1b546f36fe0 'opt_next' 'int (void)'
|   | | `-DeclRefExpr 0x1b546f51dd8 <col:32> 'int' EnumConstant 0x1b546f4f370 'OPT_EOF' 'int'
|   | `-CompoundStmt 0x1b546fb0ed0 <col:41, line:141:5>
|   |   `-SwitchStmt 0x1b546f51e80 <line:91:9, line:140:9>
|   |     |-ImplicitCastExpr 0x1b546f51e68 <line:91:17> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1b546f51e50 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1b546f51e30 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1b546f51010 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |     `-CompoundStmt 0x1b546fb0dd0 <col:20, line:140:9>
|   |       |-CaseStmt 0x1b546f51ed8 <line:92:9, line:94:9>
|   |       | |-ConstantExpr 0x1b546f51ec0 <line:92:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546f51ea0 <col:14> 'int' EnumConstant 0x1b546f4f370 'OPT_EOF' 'int'
|   |       | `-CaseStmt 0x1b546f51f38 <line:93:9, line:94:9>
|   |       |   |-ConstantExpr 0x1b546f51f20 <line:93:14> 'int'
|   |       |   | `-DeclRefExpr 0x1b546f51f00 <col:14> 'int' EnumConstant 0x1b546f4f2d8 'OPT_ERR' 'int'
|   |       |   `-LabelStmt 0x1b546f52158 <line:94:2, col:9> 'opthelp'
|   |       |     `-NullStmt 0x1b546f52100 <col:9>
|   |       |-GotoStmt 0x1b546f521c0 <line:96:13, col:18> 'end' 0x1b546f52170
|   |       |-CaseStmt 0x1b546f52210 <line:97:9, line:98:36>
|   |       | |-ConstantExpr 0x1b546f521f8 <line:97:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546f521d8 <col:14> 'int' EnumConstant 0x1b546f4f3c8 'OPT_HELP' 'int'
|   |       | `-CallExpr 0x1b546f522f0 <line:98:13, col:36> 'void'
|   |       |   |-ImplicitCastExpr 0x1b546f522d8 <col:13> 'void (*)(const OPTIONS *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x1b546f52238 <col:13> 'void (const OPTIONS *)' Function 0x1b546f3dfd8 'opt_help' 'void (const OPTIONS *)'
|   |       |   `-ImplicitCastExpr 0x1b546f52330 <col:22> 'const OPTIONS *' <NoOp>
|   |       |     `-ImplicitCastExpr 0x1b546f52318 <col:22> 'OPTIONS *' <ArrayToPointerDecay>
|   |       |       `-DeclRefExpr 0x1b546f52258 <col:22> 'OPTIONS [12]' lvalue Var 0x1b546f47870 'passwd_options' 'OPTIONS [12]'
|   |       |-BinaryOperator 0x1b546f523a8 <line:99:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x1b546f52348 <col:13> 'int' lvalue Var 0x1b546f515c8 'ret' 'int'
|   |       | `-IntegerLiteral 0x1b546f52380 <col:19> 'int' 0
|   |       |-GotoStmt 0x1b546f523c8 <line:100:13, col:18> 'end' 0x1b546f52170
|   |       |-CaseStmt 0x1b546f52418 <line:101:9, line:103:22>
|   |       | |-ConstantExpr 0x1b546f52400 <line:101:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546f523e0 <col:14> 'int' EnumConstant 0x1b546f4f420 'OPT_IN' 'int'
|   |       | `-IfStmt 0x1b546f524a8 <line:102:13, line:103:22>
|   |       |   |-ImplicitCastExpr 0x1b546f52478 <line:102:17> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1b546f52440 <col:17> 'int' lvalue Var 0x1b546f51150 'pw_source_defined' 'int'
|   |       |   `-GotoStmt 0x1b546f52490 <line:103:17, col:22> 'opthelp' 0x1b546f52108
|   |       |-BinaryOperator 0x1b546f52580 <line:104:13, col:30> 'char *' '='
|   |       | |-DeclRefExpr 0x1b546f524c0 <col:13> 'char *' lvalue Var 0x1b546f50818 'infile' 'char *'
|   |       | `-CallExpr 0x1b546f52560 <col:22, col:30> 'char *'
|   |       |   `-ImplicitCastExpr 0x1b546f52548 <col:22> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |     `-DeclRefExpr 0x1b546f524f8 <col:22> 'char *(void)' Function 0x1b546f3c4c0 'opt_arg' 'char *(void)'
|   |       |-BinaryOperator 0x1b546f525e8 <line:105:13, col:33> 'int' '='
|   |       | |-DeclRefExpr 0x1b546f525a0 <col:13> 'int' lvalue Var 0x1b546f51150 'pw_source_defined' 'int'
|   |       | `-IntegerLiteral 0x1b546f525c0 <col:33> 'int' 1
|   |       |-BreakStmt 0x1b546f52608 <line:106:13>
|   |       |-CaseStmt 0x1b546f52648 <line:107:9, line:109:27>
|   |       | |-ConstantExpr 0x1b546f52630 <line:107:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546f52610 <col:14> 'int' EnumConstant 0x1b546f4f478 'OPT_NOVERIFY' 'int'
|   |       | `-BinaryOperator 0x1b546f526d0 <line:109:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x1b546f52670 <col:13> 'int' lvalue Var 0x1b546f51228 'in_noverify' 'int'
|   |       |   `-IntegerLiteral 0x1b546f526a8 <col:27> 'int' 1
|   |       |-BreakStmt 0x1b546f526f0 <line:111:13>
|   |       |-CaseStmt 0x1b546f52730 <line:112:9, line:113:21>
|   |       | |-ConstantExpr 0x1b546f52718 <line:112:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546f526f8 <col:14> 'int' EnumConstant 0x1b546f4f4d0 'OPT_QUIET' 'int'
|   |       | `-BinaryOperator 0x1b546f527b8 <line:113:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x1b546f52758 <col:13> 'int' lvalue Var 0x1b546f51390 'quiet' 'int'
|   |       |   `-IntegerLiteral 0x1b546f52790 <col:21> 'int' 1
|   |       |-BreakStmt 0x1b546f527d8 <line:114:13>
|   |       |-CaseStmt 0x1b546f52818 <line:115:9, line:116:21>
|   |       | |-ConstantExpr 0x1b546f52800 <line:115:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546f527e0 <col:14> 'int' EnumConstant 0x1b546f4f528 'OPT_TABLE' 'int'
|   |       | `-BinaryOperator 0x1b546f528a0 <line:116:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x1b546f52840 <col:13> 'int' lvalue Var 0x1b546f51438 'table' 'int'
|   |       |   `-IntegerLiteral 0x1b546f52878 <col:21> 'int' 1
|   |       |-BreakStmt 0x1b546f528c0 <line:117:13>
|   |       |-CaseStmt 0x1b546fb0718 <line:118:9, line:119:23>
|   |       | |-ConstantExpr 0x1b546fb0700 <line:118:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546f528c8 <col:14> 'int' EnumConstant 0x1b546f4f580 'OPT_REVERSE' 'int'
|   |       | `-BinaryOperator 0x1b546fb07a0 <line:119:13, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x1b546fb0740 <col:13> 'int' lvalue Var 0x1b546f514e0 'reverse' 'int'
|   |       |   `-IntegerLiteral 0x1b546fb0778 <col:23> 'int' 1
|   |       |-BreakStmt 0x1b546fb07c0 <line:120:13>
|   |       |-CaseStmt 0x1b546fb0800 <line:121:9, line:122:20>
|   |       | |-ConstantExpr 0x1b546fb07e8 <line:121:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546fb07c8 <col:14> 'int' EnumConstant 0x1b546f4f630 'OPT_1' 'int'
|   |       | `-BinaryOperator 0x1b546fb0888 <line:122:13, col:20> 'int' '='
|   |       |   |-DeclRefExpr 0x1b546fb0828 <col:13> 'int' lvalue Var 0x1b546f51718 'use1' 'int'
|   |       |   `-IntegerLiteral 0x1b546fb0860 <col:20> 'int' 1
|   |       |-BreakStmt 0x1b546fb08a8 <line:123:13>
|   |       |-CaseStmt 0x1b546fb08e8 <line:124:9, line:125:23>
|   |       | |-ConstantExpr 0x1b546fb08d0 <line:124:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546fb08b0 <col:14> 'int' EnumConstant 0x1b546f4f5d8 'OPT_APR1' 'int'
|   |       | `-BinaryOperator 0x1b546fb0970 <line:125:13, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x1b546fb0910 <col:13> 'int' lvalue Var 0x1b546f517c0 'useapr1' 'int'
|   |       |   `-IntegerLiteral 0x1b546fb0948 <col:23> 'int' 1
|   |       |-BreakStmt 0x1b546fb0990 <line:126:13>
|   |       |-CaseStmt 0x1b546fb09d0 <line:127:9, line:128:24>
|   |       | |-ConstantExpr 0x1b546fb09b8 <line:127:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546fb0998 <col:14> 'int' EnumConstant 0x1b546f4f688 'OPT_CRYPT' 'int'
|   |       | `-BinaryOperator 0x1b546fb0a58 <line:128:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x1b546fb09f8 <col:13> 'int' lvalue Var 0x1b546f51670 'usecrypt' 'int'
|   |       |   `-IntegerLiteral 0x1b546fb0a30 <col:24> 'int' 1
|   |       |-BreakStmt 0x1b546fb0a78 <line:129:13>
|   |       |-CaseStmt 0x1b546fb0ab8 <line:130:9, line:131:27>
|   |       | |-ConstantExpr 0x1b546fb0aa0 <line:130:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546fb0a80 <col:14> 'int' EnumConstant 0x1b546f4f6e0 'OPT_SALT' 'int'
|   |       | `-BinaryOperator 0x1b546fb0b40 <line:131:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x1b546fb0ae0 <col:13> 'int' lvalue Var 0x1b546f512e8 'passed_salt' 'int'
|   |       |   `-IntegerLiteral 0x1b546fb0b18 <col:27> 'int' 1
|   |       |-BinaryOperator 0x1b546fb0bf0 <line:132:13, col:28> 'char *' '='
|   |       | |-DeclRefExpr 0x1b546fb0b60 <col:13> 'char *' lvalue Var 0x1b546f50958 'salt' 'char *'
|   |       | `-CallExpr 0x1b546fb0bd0 <col:20, col:28> 'char *'
|   |       |   `-ImplicitCastExpr 0x1b546fb0bb8 <col:20> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |     `-DeclRefExpr 0x1b546fb0b98 <col:20> 'char *(void)' Function 0x1b546f3c4c0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1b546fb0c10 <line:133:13>
|   |       |-CaseStmt 0x1b546fb0c50 <line:134:9, line:136:22>
|   |       | |-ConstantExpr 0x1b546fb0c38 <line:134:14> 'int'
|   |       | | `-DeclRefExpr 0x1b546fb0c18 <col:14> 'int' EnumConstant 0x1b546f4f738 'OPT_STDIN' 'int'
|   |       | `-IfStmt 0x1b546fb0cc8 <line:135:13, line:136:22>
|   |       |   |-ImplicitCastExpr 0x1b546fb0c98 <line:135:17> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1b546fb0c78 <col:17> 'int' lvalue Var 0x1b546f51150 'pw_source_defined' 'int'
|   |       |   `-GotoStmt 0x1b546fb0cb0 <line:136:17, col:22> 'opthelp' 0x1b546f52108
|   |       |-BinaryOperator 0x1b546fb0d40 <line:137:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x1b546fb0ce0 <col:13> 'int' lvalue Var 0x1b546f510a8 'in_stdin' 'int'
|   |       | `-IntegerLiteral 0x1b546fb0d18 <col:24> 'int' 1
|   |       |-BinaryOperator 0x1b546fb0da8 <line:138:13, col:33> 'int' '='
|   |       | |-DeclRefExpr 0x1b546fb0d60 <col:13> 'int' lvalue Var 0x1b546f51150 'pw_source_defined' 'int'
|   |       | `-IntegerLiteral 0x1b546fb0d80 <col:33> 'int' 1
|   |       `-BreakStmt 0x1b546fb0dc8 <line:139:13>
|   |-BinaryOperator 0x1b546fb0f78 <line:142:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x1b546fb0f00 <col:5> 'int' lvalue ParmVar 0x1b546f50520 'argc' 'int'
|   | `-CallExpr 0x1b546fb0f58 <col:12, col:25> 'int'
|   |   `-ImplicitCastExpr 0x1b546fb0f40 <col:12> 'int (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x1b546fb0f20 <col:12> 'int (void)' Function 0x1b546f3dbe8 'opt_num_rest' 'int (void)'
|   |-BinaryOperator 0x1b546fb1040 <line:143:5, col:21> 'char **' '='
|   | |-DeclRefExpr 0x1b546fb0f98 <col:5> 'char **' lvalue ParmVar 0x1b546f505a0 'argv' 'char **'
|   | `-CallExpr 0x1b546fb1020 <col:12, col:21> 'char **'
|   |   `-ImplicitCastExpr 0x1b546fb1008 <col:12> 'char **(*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x1b546fb0fb8 <col:12> 'char **(void)' Function 0x1b546f3da90 'opt_rest' 'char **(void)'
|   |-IfStmt 0x1b546fb1250 <line:145:5, line:150:5>
|   | |-ImplicitCastExpr 0x1b546fb10b0 <line:145:9, col:10> 'char *' <LValueToRValue>
|   | | `-UnaryOperator 0x1b546fb1098 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x1b546fb1080 <col:10> 'char **' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1b546fb1060 <col:10> 'char **' lvalue ParmVar 0x1b546f505a0 'argv' 'char **'
|   | `-CompoundStmt 0x1b546fb1228 <col:16, line:150:5>
|   |   |-IfStmt 0x1b546fb1118 <line:146:9, line:147:18>
|   |   | |-ImplicitCastExpr 0x1b546fb10e8 <line:146:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1b546fb10c8 <col:13> 'int' lvalue Var 0x1b546f51150 'pw_source_defined' 'int'
|   |   | `-GotoStmt 0x1b546fb1100 <line:147:13, col:18> 'opthelp' 0x1b546f52108
|   |   |-BinaryOperator 0x1b546fb1178 <line:148:9, col:29> 'int' '='
|   |   | |-DeclRefExpr 0x1b546fb1130 <col:9> 'int' lvalue Var 0x1b546f51150 'pw_source_defined' 'int'
|   |   | `-IntegerLiteral 0x1b546fb1150 <col:29> 'int' 1
|   |   `-BinaryOperator 0x1b546fb1208 <line:149:9, col:19> 'char **' '='
|   |     |-DeclRefExpr 0x1b546fb1198 <col:9> 'char **' lvalue Var 0x1b546f50b98 'passwds' 'char **'
|   |     `-ImplicitCastExpr 0x1b546fb11f0 <col:19> 'char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x1b546fb11d0 <col:19> 'char **' lvalue ParmVar 0x1b546f505a0 'argv' 'char **'
|   |-IfStmt 0x1b546fb1418 <line:152:5, line:155:5>
|   | |-BinaryOperator 0x1b546fb1378 <line:152:9, col:32> 'int' '&&'
|   | | |-BinaryOperator 0x1b546fb1308 <col:9, col:23> 'int' '&&'
|   | | | |-UnaryOperator 0x1b546fb12a0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x1b546fb1288 <col:10> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1b546fb1268 <col:10> 'int' lvalue Var 0x1b546f51670 'usecrypt' 'int'
|   | | | `-UnaryOperator 0x1b546fb12f0 <col:22, col:23> 'int' prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x1b546fb12d8 <col:23> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1b546fb12b8 <col:23> 'int' lvalue Var 0x1b546f51718 'use1' 'int'
|   | | `-UnaryOperator 0x1b546fb1360 <col:31, col:32> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x1b546fb1348 <col:32> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1b546fb1328 <col:32> 'int' lvalue Var 0x1b546f517c0 'useapr1' 'int'
|   | `-CompoundStmt 0x1b546fb1400 <col:41, line:155:5>
|   |   `-BinaryOperator 0x1b546fb13e0 <line:154:9, col:20> 'int' '='
|   |     |-DeclRefExpr 0x1b546fb1398 <col:9> 'int' lvalue Var 0x1b546f51670 'usecrypt' 'int'
|   |     `-IntegerLiteral 0x1b546fb13b8 <col:20> 'int' 1
|   |-IfStmt 0x1b546fb1590 <line:156:5, line:159:5>
|   | |-BinaryOperator 0x1b546fb1540 <line:156:9, col:37> 'int' '>'
|   | | |-BinaryOperator 0x1b546fb14f8 <col:9, col:27> 'int' '+'
|   | | | |-BinaryOperator 0x1b546fb14a0 <col:9, col:20> 'int' '+'
|   | | | | |-ImplicitCastExpr 0x1b546fb1470 <col:9> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x1b546fb1430 <col:9> 'int' lvalue Var 0x1b546f51670 'usecrypt' 'int'
|   | | | | `-ImplicitCastExpr 0x1b546fb1488 <col:20> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1b546fb1450 <col:20> 'int' lvalue Var 0x1b546f51718 'use1' 'int'
|   | | | `-ImplicitCastExpr 0x1b546fb14e0 <col:27> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1b546fb14c0 <col:27> 'int' lvalue Var 0x1b546f517c0 'useapr1' 'int'
|   | | `-IntegerLiteral 0x1b546fb1518 <col:37> 'int' 1
|   | `-CompoundStmt 0x1b546fb1578 <col:40, line:159:5>
|   |   `-GotoStmt 0x1b546fb1560 <line:158:9, col:14> 'opthelp' 0x1b546f52108
|   |-IfStmt 0x1b546faf7d8 <line:170:5, line:173:5>
|   | |-BinaryOperator 0x1b546fb16d8 <line:170:9, col:27> 'int' '&&'
|   | | |-BinaryOperator 0x1b546fb1680 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1b546fb1650 <.//openssl//file_jk/after\apps\passwd.c:170:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1b546fb15a8 <col:9> 'char *' lvalue Var 0x1b546f50818 'infile' 'char *'
|   | | | `-ImplicitCastExpr 0x1b546fb1668 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |   `-ParenExpr 0x1b546fb1630 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x1b546fb1608 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x1b546fb15c8 <col:26> 'int' 0
|   | | `-ImplicitCastExpr 0x1b546fb16c0 <.//openssl//file_jk/after\apps\passwd.c:170:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b546fb16a0 <col:27> 'int' lvalue Var 0x1b546f510a8 'in_stdin' 'int'
|   | `-CompoundStmt 0x1b546faf7c0 <col:37, line:173:5>
|   |   `-GotoStmt 0x1b546faf7a8 <line:172:9, col:14> 'end' 0x1b546f52170
|   |-IfStmt 0x1b546fafaf0 <line:175:5, line:183:5>
|   | |-BinaryOperator 0x1b546faf920 <line:175:9, col:27> 'int' '||'
|   | | |-BinaryOperator 0x1b546faf8c8 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x1b546faf898 <.//openssl//file_jk/after\apps\passwd.c:175:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1b546faf7f0 <col:9> 'char *' lvalue Var 0x1b546f50818 'infile' 'char *'
|   | | | `-ImplicitCastExpr 0x1b546faf8b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |   `-ParenExpr 0x1b546faf878 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x1b546faf850 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x1b546faf810 <col:26> 'int' 0
|   | | `-ImplicitCastExpr 0x1b546faf908 <.//openssl//file_jk/after\apps\passwd.c:175:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b546faf8e8 <col:27> 'int' lvalue Var 0x1b546f510a8 'in_stdin' 'int'
|   | `-CompoundStmt 0x1b546fafad8 <col:37, line:183:5>
|   |   `-IfStmt 0x1b546fafac0 <line:181:9, line:182:18>
|   |     |-OpaqueValueExpr 0x1b546fafaa8 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1b546fafa90 <col:13, col:18> 'end' 0x1b546f52170
|   |-IfStmt 0x1b546fafd00 <line:185:5, line:188:21> has_else
|   | |-ImplicitCastExpr 0x1b546fafb28 <line:185:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b546fafb08 <col:9> 'int' lvalue Var 0x1b546f51670 'usecrypt' 'int'
|   | |-BinaryOperator 0x1b546fafbb8 <line:186:9, col:21> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1b546fafb40 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b546f519a8 'pw_maxlen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b546fafba0 <col:21> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b546fafb78 <col:21> 'int' 8
|   | `-IfStmt 0x1b546fafce8 <line:187:10, line:188:21>
|   |   |-BinaryOperator 0x1b546fafc48 <line:187:14, col:22> 'int' '||'
|   |   | |-ImplicitCastExpr 0x1b546fafc18 <col:14> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1b546fafbd8 <col:14> 'int' lvalue Var 0x1b546f51718 'use1' 'int'
|   |   | `-ImplicitCastExpr 0x1b546fafc30 <col:22> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b546fafbf8 <col:22> 'int' lvalue Var 0x1b546f517c0 'useapr1' 'int'
|   |   `-BinaryOperator 0x1b546fafcc8 <line:188:9, col:21> 'size_t':'unsigned long long' '='
|   |     |-DeclRefExpr 0x1b546fafc68 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b546f519a8 'pw_maxlen' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x1b546fafcb0 <col:21> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x1b546fafc88 <col:21> 'int' 256
|   |-IfStmt 0x1b546fb0168 <line:191:5, line:198:5>
|   | |-BinaryOperator 0x1b546fafe00 <line:191:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1b546fafdd0 <.//openssl//file_jk/after\apps\passwd.c:191:9> 'char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b546fafd28 <col:9> 'char **' lvalue Var 0x1b546f50b98 'passwds' 'char **'
|   | | `-ImplicitCastExpr 0x1b546fafde8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
|   | |   `-ParenExpr 0x1b546fafdb0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1b546fafd88 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1b546fafd48 <col:26> 'int' 0
|   | `-CompoundStmt 0x1b546fb0148 <.//openssl//file_jk/after\apps\passwd.c:191:26, line:198:5>
|   |   |-BinaryOperator 0x1b546fafef0 <line:194:9, col:42> 'size_t':'unsigned long long' '='
|   |   | |-DeclRefExpr 0x1b546fafe20 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b546f518f0 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x1b546fafed0 <col:30, col:42> 'unsigned long long' '+'
|   |   |   |-ImplicitCastExpr 0x1b546fafea0 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1b546fafe58 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1b546f519a8 'pw_maxlen' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x1b546fafeb8 <col:42> 'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1b546fafe78 <col:42> 'int' 2
|   |   `-BinaryOperator 0x1b546fb0128 <line:196:9, line:197:61> 'char *' '='
|   |     |-DeclRefExpr 0x1b546faff10 <line:196:9> 'char *' lvalue Var 0x1b546f50a78 'passwd' 'char *'
|   |     `-BinaryOperator 0x1b546fb0108 <col:18, line:197:61> 'char *' '='
|   |       |-DeclRefExpr 0x1b546faff48 <line:196:18> 'char *' lvalue Var 0x1b546f50e18 'passwd_malloc' 'char *'
|   |       `-ImplicitCastExpr 0x1b546fb00f0 <line:197:13, col:61> 'char *' <BitCast>
|   |         `-CallExpr 0x1b546fb0060 <col:13, col:61> 'void *'
|   |           |-ImplicitCastExpr 0x1b546fb0048 <col:13> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x1b546faff80 <col:13> 'void *(int, const char *)' Function 0x1b546f41fc0 'app_malloc' 'void *(int, const char *)'
|   |           |-ImplicitCastExpr 0x1b546fb00a8 <col:24> 'int' <IntegralCast>
|   |           | `-ImplicitCastExpr 0x1b546fb0090 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x1b546faffa0 <col:24> 'size_t':'unsigned long long' lvalue Var 0x1b546f518f0 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |           `-ImplicitCastExpr 0x1b546fb00d8 <col:44> 'const char *' <NoOp>
|   |             `-ImplicitCastExpr 0x1b546fb00c0 <col:44> 'char *' <ArrayToPointerDecay>
|   |               `-StringLiteral 0x1b546fafff8 <col:44> 'char [16]' lvalue "password buffer"
|   |-IfStmt 0x1b546fadd50 <line:200:5, line:224:5>
|   | |-OpaqueValueExpr 0x1b546fadd38 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1b546fadd20 <line:200:44, line:224:5>
|   |   `-IfStmt 0x1b546fadcf8 <line:206:9, line:223:9> has_else
|   |     |-IntegerLiteral 0x1b546fb0320 <line:206:13> 'int' 1
|   |     |-CompoundStmt 0x1b546fadc10 <col:16, line:219:9>
|   |     | |-DeclStmt 0x1b546fb0648 <line:209:13, col:60>
|   |     | | `-VarDecl 0x1b546fb03f0 <col:13, col:59> col:26 used passwds_static 'char *[2]' static cinit
|   |     | |   `-InitListExpr 0x1b546fb05c8 <col:46, col:59> 'char *[2]'
|   |     | |     |-ImplicitCastExpr 0x1b546fb0618 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   |     | |     | `-ParenExpr 0x1b546fb04c0 <col:17, col:27> 'void *'
|   |     | |     |   `-CStyleCastExpr 0x1b546fb0498 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |     |     `-IntegerLiteral 0x1b546fb0458 <col:26> 'int' 0
|   |     | |     `-ImplicitCastExpr 0x1b546fb0630 <col:17, col:27> 'char *' <NullToPointer>
|   |     | |       `-ParenExpr 0x1b546fb0548 <col:17, col:27> 'void *'
|   |     | |         `-CStyleCastExpr 0x1b546fb0520 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |           `-IntegerLiteral 0x1b546fb04e0 <col:26> 'int' 0
|   |     | |-BinaryOperator 0x1b546fb06d0 <.//openssl//file_jk/after\apps\passwd.c:211:13, col:23> 'char **' '='
|   |     | | |-DeclRefExpr 0x1b546fb0660 <col:13> 'char **' lvalue Var 0x1b546f50b98 'passwds' 'char **'
|   |     | | `-ImplicitCastExpr 0x1b546fb06b8 <col:23> 'char **' <ArrayToPointerDecay>
|   |     | |   `-DeclRefExpr 0x1b546fb0680 <col:23> 'char *[2]' lvalue Var 0x1b546fb03f0 'passwds_static' 'char *[2]'
|   |     | |-IfStmt 0x1b546fadb20 <line:212:13, line:217:13>
|   |     | | |-OpaqueValueExpr 0x1b546fadb08 <<invalid sloc>> '_Bool'
|   |     | | `-CompoundStmt 0x1b546fadaf0 <line:212:29, line:217:13>
|   |     | |   `-IfStmt 0x1b546fadad8 <line:213:17, line:216:26>
|   |     | |     |-BinaryOperator 0x1b546fadaa0 <line:213:21, line:215:56> 'int' '!='
|   |     | |     | |-CallExpr 0x1b546fad9f0 <line:213:21, line:215:51> 'int'
|   |     | |     | | |-ImplicitCastExpr 0x1b546fad9d8 <line:213:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | |     | | | `-DeclRefExpr 0x1b546fad848 <col:21> 'int ()' Function 0x1b546fad780 'EVP_read_pw_string' 'int ()'
|   |     | |     | | |-ImplicitCastExpr 0x1b546fada30 <line:214:22> 'char *' <LValueToRValue>
|   |     | |     | | | `-DeclRefExpr 0x1b546fad868 <col:22> 'char *' lvalue Var 0x1b546f50e18 'passwd_malloc' 'char *'
|   |     | |     | | |-ImplicitCastExpr 0x1b546fada48 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     | | | `-DeclRefExpr 0x1b546fad888 <col:37> 'size_t':'unsigned long long' lvalue Var 0x1b546f518f0 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |     | |     | | |-ImplicitCastExpr 0x1b546fada60 <col:57> 'char *' <ArrayToPointerDecay>
|   |     | |     | | | `-StringLiteral 0x1b546fad8e8 <col:57> 'char [11]' lvalue "Password: "
|   |     | |     | | `-UnaryOperator 0x1b546fad9c0 <line:215:22, col:50> 'int' prefix '!' cannot overflow
|   |     | |     | |   `-ParenExpr 0x1b546fad9a0 <col:23, col:50> 'int'
|   |     | |     | |     `-BinaryOperator 0x1b546fad980 <col:24, col:39> 'int' '||'
|   |     | |     | |       |-ImplicitCastExpr 0x1b546fad950 <col:24> 'int' <LValueToRValue>
|   |     | |     | |       | `-DeclRefExpr 0x1b546fad910 <col:24> 'int' lvalue Var 0x1b546f512e8 'passed_salt' 'int'
|   |     | |     | |       `-ImplicitCastExpr 0x1b546fad968 <col:39> 'int' <LValueToRValue>
|   |     | |     | |         `-DeclRefExpr 0x1b546fad930 <col:39> 'int' lvalue Var 0x1b546f51228 'in_noverify' 'int'
|   |     | |     | `-IntegerLiteral 0x1b546fada78 <col:56> 'int' 0
|   |     | |     `-GotoStmt 0x1b546fadac0 <line:216:21, col:26> 'end' 0x1b546f52170
|   |     | `-BinaryOperator 0x1b546fadbf0 <line:218:13, col:26> 'char *' '='
|   |     |   |-ArraySubscriptExpr 0x1b546fadb98 <col:13, col:22> 'char *' lvalue
|   |     |   | |-ImplicitCastExpr 0x1b546fadb80 <col:13> 'char **' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x1b546fadb38 <col:13> 'char **' lvalue Var 0x1b546f50b98 'passwds' 'char **'
|   |     |   | `-IntegerLiteral 0x1b546fadb58 <col:21> 'int' 0
|   |     |   `-ImplicitCastExpr 0x1b546fadbd8 <col:26> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1b546fadbb8 <col:26> 'char *' lvalue Var 0x1b546f50e18 'passwd_malloc' 'char *'
|   |     `-CompoundStmt 0x1b546fadce0 <line:219:16, line:223:9>
|   |       `-GotoStmt 0x1b546fadcc8 <line:222:13, col:18> 'end' 0x1b546f52170
|   |-IfStmt 0x1b546fabcf8 <line:226:5, line:263:5> has_else
|   | |-OpaqueValueExpr 0x1b546fabce0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1b546fb2bd8 <line:226:21, line:237:5>
|   | | |-CStyleCastExpr 0x1b546fae2b8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | | `-ParenExpr 0x1b546fae298 <col:35, col:128> 'int'
|   | | |   `-BinaryOperator 0x1b546fae248 <col:37, col:126> 'int' '||'
|   | | |     |-ParenExpr 0x1b546fadf38 <col:37, col:53> 'int'
|   | | |     | `-UnaryOperator 0x1b546fadf20 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | | |     |   `-UnaryOperator 0x1b546fadf08 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | | |     |     `-ParenExpr 0x1b546fadee8 <col:40, col:52> 'int'
|   | | |     |       `-BinaryOperator 0x1b546fadec8 <.//openssl//file_jk/after\apps\passwd.c:227:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |     |         |-ImplicitCastExpr 0x1b546fade98 <.//openssl//file_jk/after\apps\passwd.c:227:16> 'char **' <LValueToRValue>
|   | | |     |         | `-DeclRefExpr 0x1b546faddf0 <col:16> 'char **' lvalue Var 0x1b546f50b98 'passwds' 'char **'
|   | | |     |         `-ImplicitCastExpr 0x1b546fadeb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
|   | | |     |           `-ParenExpr 0x1b546fade78 <col:17, col:27> 'void *'
|   | | |     |             `-CStyleCastExpr 0x1b546fade50 <col:18, col:26> 'void *' <NullToPointer>
|   | | |     |               `-IntegerLiteral 0x1b546fade10 <col:26> 'int' 0
|   | | |     `-ParenExpr 0x1b546fae228 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | | |       `-BinaryOperator 0x1b546fae208 <col:59, col:125> 'int' ','
|   | | |         |-CallExpr 0x1b546fae130 <col:59, col:122> 'void'
|   | | |         | |-ImplicitCastExpr 0x1b546fae118 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |         | | `-DeclRefExpr 0x1b546fadf58 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1b546f23e00 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | | |         | |-ImplicitCastExpr 0x1b546fae180 <<scratch space>:304:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x1b546fae168 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x1b546fadfb8 <col:1> 'unsigned short [16]' lvalue L"passwds != NULL"
|   | | |         | |-ImplicitCastExpr 0x1b546fae1b0 <line:306:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x1b546fae198 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x1b546fae028 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   | | |         | `-ImplicitCastExpr 0x1b546fae1c8 <line:307:1> 'unsigned int' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x1b546fae090 <col:1> 'int' 227
|   | | |         `-IntegerLiteral 0x1b546fae1e0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | | |-CStyleCastExpr 0x1b546fb27b0 <col:29, col:128> 'void' <ToVoid>
|   | | | `-ParenExpr 0x1b546fb2790 <col:35, col:128> 'int'
|   | | |   `-BinaryOperator 0x1b546fb2740 <col:37, col:126> 'int' '||'
|   | | |     |-ParenExpr 0x1b546fae480 <col:37, col:53> 'int'
|   | | |     | `-UnaryOperator 0x1b546fae468 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | | |     |   `-UnaryOperator 0x1b546fae450 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | | |     |     `-ParenExpr 0x1b546fae430 <col:40, col:52> 'int'
|   | | |     |       `-BinaryOperator 0x1b546fae410 <.//openssl//file_jk/after\apps\passwd.c:228:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |     |         |-ImplicitCastExpr 0x1b546fae3e0 <.//openssl//file_jk/after\apps\passwd.c:228:16, col:17> 'char *' <LValueToRValue>
|   | | |     |         | `-UnaryOperator 0x1b546fae340 <col:16, col:17> 'char *' lvalue prefix '*' cannot overflow
|   | | |     |         |   `-ImplicitCastExpr 0x1b546fae328 <col:17> 'char **' <LValueToRValue>
|   | | |     |         |     `-DeclRefExpr 0x1b546fae308 <col:17> 'char **' lvalue Var 0x1b546f50b98 'passwds' 'char **'
|   | | |     |         `-ImplicitCastExpr 0x1b546fae3f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |     |           `-ParenExpr 0x1b546fae3c0 <col:17, col:27> 'void *'
|   | | |     |             `-CStyleCastExpr 0x1b546fae398 <col:18, col:26> 'void *' <NullToPointer>
|   | | |     |               `-IntegerLiteral 0x1b546fae358 <col:26> 'int' 0
|   | | |     `-ParenExpr 0x1b546fb2720 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | | |       `-BinaryOperator 0x1b546fae6b0 <col:59, col:125> 'int' ','
|   | | |         |-CallExpr 0x1b546fae5d8 <col:59, col:122> 'void'
|   | | |         | |-ImplicitCastExpr 0x1b546fae5c0 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |         | | `-DeclRefExpr 0x1b546fae4a0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1b546f23e00 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | | |         | |-ImplicitCastExpr 0x1b546fae628 <<scratch space>:3:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x1b546fae610 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x1b546fae4f8 <col:1> 'unsigned short [17]' lvalue L"*passwds != NULL"
|   | | |         | |-ImplicitCastExpr 0x1b546fae658 <line:5:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x1b546fae640 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x1b546fae530 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   | | |         | `-ImplicitCastExpr 0x1b546fae670 <line:6:1> 'unsigned int' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x1b546fae598 <col:1> 'int' 228
|   | | |         `-IntegerLiteral 0x1b546fae688 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | | `-DoStmt 0x1b546fb2bb8 <.//openssl//file_jk/after\apps\passwd.c:230:9, line:236:34>
|   | |   |-CompoundStmt 0x1b546fb2a70 <line:230:12, line:236:9>
|   | |   | |-BinaryOperator 0x1b546fb2860 <line:231:13, col:30> 'char *' '='
|   | |   | | |-DeclRefExpr 0x1b546fb27d8 <col:13> 'char *' lvalue Var 0x1b546f50a78 'passwd' 'char *'
|   | |   | | `-ImplicitCastExpr 0x1b546fb2848 <col:22, col:30> 'char *' <LValueToRValue>
|   | |   | |   `-UnaryOperator 0x1b546fb2830 <col:22, col:30> 'char *' lvalue prefix '*' cannot overflow
|   | |   | |     `-UnaryOperator 0x1b546fb2818 <col:23, col:30> 'char **' postfix '++'
|   | |   | |       `-DeclRefExpr 0x1b546fb27f8 <col:23> 'char **' lvalue Var 0x1b546f50b98 'passwds' 'char **'
|   | |   | `-IfStmt 0x1b546fb2a58 <line:232:13, line:235:22>
|   | |   |   |-OpaqueValueExpr 0x1b546fb2a40 <<invalid sloc>> '_Bool'
|   | |   |   `-GotoStmt 0x1b546fb2a28 <col:17, col:22> 'end' 0x1b546f52170
|   | |   `-BinaryOperator 0x1b546fb2b98 <line:236:18, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |     |-ImplicitCastExpr 0x1b546fb2b68 <.//openssl//file_jk/after\apps\passwd.c:236:18, col:19> 'char *' <LValueToRValue>
|   | |     | `-UnaryOperator 0x1b546fb2ac8 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
|   | |     |   `-ImplicitCastExpr 0x1b546fb2ab0 <col:19> 'char **' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x1b546fb2a90 <col:19> 'char **' lvalue Var 0x1b546f50b98 'passwds' 'char **'
|   | |     `-ImplicitCastExpr 0x1b546fb2b80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |       `-ParenExpr 0x1b546fb2b48 <col:17, col:27> 'void *'
|   | |         `-CStyleCastExpr 0x1b546fb2b20 <col:18, col:26> 'void *' <NullToPointer>
|   | |           `-IntegerLiteral 0x1b546fb2ae0 <col:26> 'int' 0
|   | `-CompoundStmt 0x1b546fabcb8 <.//openssl//file_jk/after\apps\passwd.c:237:12, line:263:5>
|   |   |-DeclStmt 0x1b546fb2c80 <line:239:9, col:17>
|   |   | `-VarDecl 0x1b546fb2c18 <col:9, col:13> col:13 used done 'int'
|   |   |-CStyleCastExpr 0x1b546fb30c0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   |   | `-ParenExpr 0x1b546fb30a0 <col:35, col:128> 'int'
|   |   |   `-BinaryOperator 0x1b546fb3050 <col:37, col:126> 'int' '||'
|   |   |     |-ParenExpr 0x1b546fb2de0 <col:37, col:53> 'int'
|   |   |     | `-UnaryOperator 0x1b546fb2dc8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   |   |     |   `-UnaryOperator 0x1b546fb2db0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   |   |     |     `-ParenExpr 0x1b546fb2d90 <col:40, col:52> 'int'
|   |   |     |       `-BinaryOperator 0x1b546fb2d70 <.//openssl//file_jk/after\apps\passwd.c:241:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |   |     |         |-ImplicitCastExpr 0x1b546fb2d40 <.//openssl//file_jk/after\apps\passwd.c:241:16> 'char *' <LValueToRValue>
|   |   |     |         | `-DeclRefExpr 0x1b546fb2c98 <col:16> 'char *' lvalue Var 0x1b546f50a78 'passwd' 'char *'
|   |   |     |         `-ImplicitCastExpr 0x1b546fb2d58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |   |     |           `-ParenExpr 0x1b546fb2d20 <col:17, col:27> 'void *'
|   |   |     |             `-CStyleCastExpr 0x1b546fb2cf8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |               `-IntegerLiteral 0x1b546fb2cb8 <col:26> 'int' 0
|   |   |     `-ParenExpr 0x1b546fb3030 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   |   |       `-BinaryOperator 0x1b546fb3010 <col:59, col:125> 'int' ','
|   |   |         |-CallExpr 0x1b546fb2f38 <col:59, col:122> 'void'
|   |   |         | |-ImplicitCastExpr 0x1b546fb2f20 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x1b546fb2e00 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1b546f23e00 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   |   |         | |-ImplicitCastExpr 0x1b546fb2f88 <<scratch space>:8:1> 'const wchar_t *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x1b546fb2f70 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x1b546fb2e58 <col:1> 'unsigned short [15]' lvalue L"passwd != NULL"
|   |   |         | |-ImplicitCastExpr 0x1b546fb2fb8 <line:10:1> 'const wchar_t *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x1b546fb2fa0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x1b546fb2e90 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   |   |         | `-ImplicitCastExpr 0x1b546fb2fd0 <line:11:1> 'unsigned int' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x1b546fb2ef8 <col:1> 'int' 241
|   |   |         `-IntegerLiteral 0x1b546fb2fe8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   |   `-DoStmt 0x1b546fabc98 <.//openssl//file_jk/after\apps\passwd.c:242:9, line:262:23>
|   |     |-CompoundStmt 0x1b546fabc20 <line:242:12, line:262:9>
|   |     | |-DeclStmt 0x1b546fb3330 <line:243:13, col:56>
|   |     | | `-VarDecl 0x1b546fb3100 <col:13, col:17> col:17 used r 'int'
|   |     | |-IfStmt 0x1b546fabb10 <line:244:13, line:260:13>
|   |     | | |-BinaryOperator 0x1b546fb33c0 <line:244:17, col:21> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x1b546fb33a8 <col:17> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1b546fb3348 <col:17> 'int' lvalue Var 0x1b546fb3100 'r' 'int'
|   |     | | | `-IntegerLiteral 0x1b546fb3380 <col:21> 'int' 0
|   |     | | `-CompoundStmt 0x1b546fabae8 <col:24, line:260:13>
|   |     | |   |-DeclStmt 0x1b546fb3590 <line:245:17, col:49>
|   |     | |   | `-VarDecl 0x1b546fb33f8 <col:17, col:48> col:23 used c 'char *' cinit
|   |     | |   |   `-ParenExpr 0x1b546fb3570 <col:27, col:48> 'char *'
|   |     | |   |     `-CallExpr 0x1b546fb3510 <col:28, col:47> 'char *'
|   |     | |   |       |-ImplicitCastExpr 0x1b546fb34f8 <col:28> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | |   |       | `-DeclRefExpr 0x1b546fb3460 <col:28> 'char *(const char *, int)' Function 0x1b546ee4a50 'strchr' 'char *(const char *, int)'
|   |     | |   |       |-ImplicitCastExpr 0x1b546fb3558 <col:35> 'const char *' <NoOp>
|   |     | |   |       | `-ImplicitCastExpr 0x1b546fb3540 <col:35> 'char *' <LValueToRValue>
|   |     | |   |       |   `-DeclRefExpr 0x1b546fb3480 <col:35> 'char *' lvalue Var 0x1b546f50a78 'passwd' 'char *'
|   |     | |   |       `-CharacterLiteral 0x1b546fb34a0 <col:43> 'int' 10
|   |     | |   |-IfStmt 0x1b546fab8e8 <line:246:17, line:254:17> has_else
|   |     | |   | |-BinaryOperator 0x1b546fb3698 <line:246:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |     | |   | | |-ImplicitCastExpr 0x1b546fb3668 <.//openssl//file_jk/after\apps\passwd.c:246:21> 'char *' <LValueToRValue>
|   |     | |   | | | `-DeclRefExpr 0x1b546fb35a8 <col:21> 'char *' lvalue Var 0x1b546fb33f8 'c' 'char *'
|   |     | |   | | `-ImplicitCastExpr 0x1b546fb3680 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |     | |   | |   `-ParenExpr 0x1b546fb3648 <col:17, col:27> 'void *'
|   |     | |   | |     `-CStyleCastExpr 0x1b546fb3620 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |   | |       `-IntegerLiteral 0x1b546fb35e0 <col:26> 'int' 0
|   |     | |   | |-CompoundStmt 0x1b546fab710 <.//openssl//file_jk/after\apps\passwd.c:246:32, line:248:17>
|   |     | |   | | `-BinaryOperator 0x1b546fab6f0 <line:247:21, col:26> 'char' '='
|   |     | |   | |   |-UnaryOperator 0x1b546fb36f0 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow
|   |     | |   | |   | `-ImplicitCastExpr 0x1b546fb36d8 <col:22> 'char *' <LValueToRValue>
|   |     | |   | |   |   `-DeclRefExpr 0x1b546fb36b8 <col:22> 'char *' lvalue Var 0x1b546fb33f8 'c' 'char *'
|   |     | |   | |   `-ImplicitCastExpr 0x1b546fab6d8 <col:26> 'char' <IntegralCast>
|   |     | |   | |     `-IntegerLiteral 0x1b546fab6b0 <col:26> 'int' 0
|   |     | |   | `-CompoundStmt 0x1b546fab8d0 <line:248:24, line:254:17>
|   |     | |   |   `-DeclStmt 0x1b546fab7a0 <line:250:21, col:39>
|   |     | |   |     `-VarDecl 0x1b546fab738 <col:21, col:26> col:26 invalid trash 'char'
|   |     | |   `-IfStmt 0x1b546fabad0 <line:256:17, line:259:26>
|   |     | |     |-OpaqueValueExpr 0x1b546fabab8 <<invalid sloc>> '_Bool'
|   |     | |     `-GotoStmt 0x1b546fabaa0 <col:21, col:26> 'end' 0x1b546f52170
|   |     | `-BinaryOperator 0x1b546fabc00 <line:261:13, col:27> 'int' '='
|   |     |   |-DeclRefExpr 0x1b546fabb28 <col:13> 'int' lvalue Var 0x1b546fb2c18 'done' 'int'
|   |     |   `-ParenExpr 0x1b546fabbe0 <col:20, col:27> 'int'
|   |     |     `-BinaryOperator 0x1b546fabbc0 <col:21, col:26> 'int' '<='
|   |     |       |-ImplicitCastExpr 0x1b546fabba8 <col:21> 'int' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x1b546fabb60 <col:21> 'int' lvalue Var 0x1b546fb3100 'r' 'int'
|   |     |       `-IntegerLiteral 0x1b546fabb80 <col:26> 'int' 0
|   |     `-UnaryOperator 0x1b546fabc80 <line:262:18, col:19> 'int' prefix '!' cannot overflow
|   |       `-ImplicitCastExpr 0x1b546fabc68 <col:19> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1b546fabc48 <col:19> 'int' lvalue Var 0x1b546fb2c18 'done' 'int'
|   |-BinaryOperator 0x1b546fabd68 <line:264:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1b546fabd20 <col:5> 'int' lvalue Var 0x1b546f515c8 'ret' 'int'
|   | `-IntegerLiteral 0x1b546fabd40 <col:11> 'int' 0
|   |-LabelStmt 0x1b546fabea0 <line:266:2, col:5> 'end'
|   | `-NullStmt 0x1b546fabe98 <col:5>
|   |-CallExpr 0x1b546fac000 <line:268:5, col:29> 'int'
|   | |-ImplicitCastExpr 0x1b546fabfe8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1b546fabfa8 <col:5> 'int ()' Function 0x1b546fabee0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1b546fac028 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1b546fabfc8 <col:18> 'char *' lvalue Var 0x1b546f50cf8 'salt_malloc' 'char *'
|   |-CallExpr 0x1b546fac098 <line:269:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x1b546fac080 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1b546fac040 <col:5> 'int ()' Function 0x1b546fabee0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1b546fac0c0 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1b546fac060 <col:18> 'char *' lvalue Var 0x1b546f50e18 'passwd_malloc' 'char *'
|   `-ReturnStmt 0x1b546fac240 <line:271:5, col:16>
|     `-ImplicitCastExpr 0x1b546fac228 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1b546fac208 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1b546fac1e8 <col:13> 'int' lvalue Var 0x1b546f515c8 'ret' 'int'
|-FunctionDecl 0x1b546fac580 <line:284:1, line:421:1> line:284:14 used md5crypt 'char *(const char *, const char *, const char *)' static
| |-ParmVarDecl 0x1b546fac348 <col:23, col:35> col:35 used passwd 'const char *'
| |-ParmVarDecl 0x1b546fac3c8 <col:43, col:55> col:55 used magic 'const char *'
| |-ParmVarDecl 0x1b546fac448 <col:62, col:74> col:74 used salt 'const char *'
| `-CompoundStmt 0x1b546fb74a8 <line:285:1, line:421:1>
|   |-DeclStmt 0x1b546fae870 <line:287:5, col:40>
|   | `-VarDecl 0x1b546fae808 <col:5, col:39> col:17 used out_buf 'char [41]' static
|   |-DeclStmt 0x1b546fae908 <line:288:5, col:41>
|   | `-VarDecl 0x1b546fae8a0 <col:5, col:19> col:19 invalid buf 'unsigned char'
|   |-DeclStmt 0x1b546fae9a0 <line:289:5, col:19>
|   | `-VarDecl 0x1b546fae938 <col:5, col:11> col:11 used salt_out 'char *'
|   |-DeclStmt 0x1b546faea38 <line:290:5, col:10>
|   | `-VarDecl 0x1b546fae9d0 <col:5, col:9> col:9 used n 'int'
|   |-DeclStmt 0x1b546faead0 <line:291:5, col:19>
|   | `-VarDecl 0x1b546faea68 <col:5, col:18> col:18 used i 'unsigned int'
|   |-DeclStmt 0x1b546faed80 <line:293:5, col:43>
|   | |-VarDecl 0x1b546faec08 <col:5, col:12> col:12 used passwd_len 'size_t':'unsigned long long'
|   | |-VarDecl 0x1b546faec80 <col:5, col:24> col:24 used salt_len 'size_t':'unsigned long long'
|   | `-VarDecl 0x1b546faecf8 <col:5, col:34> col:34 used magic_len 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1b546faeeb0 <line:295:5, col:31> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1b546faed98 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1b546faec08 'passwd_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x1b546faee70 <col:18, col:31> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x1b546faee58 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1b546faedd0 <col:18> 'unsigned long long (const char *)' Function 0x1b546ed5260 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x1b546faee98 <col:25> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1b546faedf0 <col:25> 'const char *' lvalue ParmVar 0x1b546fac348 'passwd' 'const char *'
|   |-BinaryOperator 0x1b546faef98 <line:296:5, col:18> 'char' '='
|   | |-ArraySubscriptExpr 0x1b546faef48 <col:5, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x1b546faef30 <col:5> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1b546faeed0 <col:5> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]'
|   | | `-IntegerLiteral 0x1b546faef08 <col:13> 'int' 0
|   | `-ImplicitCastExpr 0x1b546faef80 <col:18> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x1b546faef68 <col:18> 'int' 36
|   |-BinaryOperator 0x1b546faf078 <line:297:5, col:18> 'char' '='
|   | |-ArraySubscriptExpr 0x1b546faf018 <col:5, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x1b546faf000 <col:5> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1b546faefb8 <col:5> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]'
|   | | `-IntegerLiteral 0x1b546faefd8 <col:13> 'int' 1
|   | `-ImplicitCastExpr 0x1b546faf060 <col:18> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x1b546faf038 <col:18> 'int' 0
|   |-BinaryOperator 0x1b546faf180 <line:298:5, col:29> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1b546faf098 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1b546faecf8 'magic_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x1b546faf140 <col:17, col:29> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x1b546faf128 <col:17> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1b546faf0d0 <col:17> 'unsigned long long (const char *)' Function 0x1b546ed5260 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x1b546faf168 <col:24> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1b546faf0f0 <col:24> 'const char *' lvalue ParmVar 0x1b546fac3c8 'magic' 'const char *'
|   |-IfStmt 0x1b546faf2e8 <line:300:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x1b546faf218 <.//openssl//file_jk/after\apps\passwd.c:300:9, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x1b546faf1e8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b546faf1a0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b546faecf8 'magic_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b546faf200 <col:21> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b546faf1c0 <col:21> 'int' 4
|   | `-ReturnStmt 0x1b546faf2d8 <line:301:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x1b546faf2c0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1b546faf2a0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1b546faf278 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1b546faf238 <col:26> 'int' 0
|   |-CallExpr 0x1b546faf4c8 <.//openssl//file_jk/after\apps\passwd.c:303:5, col:52> 'int'
|   | |-ImplicitCastExpr 0x1b546faf4b0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1b546faf3f0 <col:5> 'int ()' Function 0x1b546faf328 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x1b546faf500 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1b546faf410 <col:21> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x1b546faf518 <col:30> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b546faf430 <col:30> 'const char *' lvalue ParmVar 0x1b546fac3c8 'magic' 'const char *'
|   | `-UnaryExprOrTypeTraitExpr 0x1b546faf490 <col:37, col:51> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1b546faf470 <col:43, col:51> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x1b546faf450 <col:44> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-CallExpr 0x1b546faf608 <line:304:5, col:50> 'int'
|   | |-ImplicitCastExpr 0x1b546faf5f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1b546faf530 <col:5> 'int ()' Function 0x1b546faf328 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x1b546faf640 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1b546faf550 <col:21> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x1b546faf658 <col:30> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x1b546faf570 <col:30> 'char [2]' lvalue "$"
|   | `-UnaryExprOrTypeTraitExpr 0x1b546faf5d0 <col:35, col:49> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1b546faf5b0 <col:41, col:49> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x1b546faf590 <col:42> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-CallExpr 0x1b546fac738 <line:305:5, col:51> 'int'
|   | |-ImplicitCastExpr 0x1b546fac720 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1b546faf670 <col:5> 'int ()' Function 0x1b546faf328 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x1b546fac770 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1b546faf690 <col:21> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x1b546fac788 <col:30> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b546faf6b0 <col:30> 'const char *' lvalue ParmVar 0x1b546fac448 'salt' 'const char *'
|   | `-UnaryExprOrTypeTraitExpr 0x1b546fac700 <col:36, col:50> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1b546fac6e0 <col:42, col:50> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x1b546fac6c0 <col:43> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-IfStmt 0x1b546fac9c0 <line:307:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x1b546fac8f0 <.//openssl//file_jk/after\apps\passwd.c:307:9, col:31> 'int' '>'
|   | | |-CallExpr 0x1b546fac810 <col:9, col:23> 'unsigned long long'
|   | | | |-ImplicitCastExpr 0x1b546fac7f8 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1b546fac7a0 <col:9> 'unsigned long long (const char *)' Function 0x1b546ed5260 'strlen' 'unsigned long long (const char *)'
|   | | | `-ImplicitCastExpr 0x1b546fac850 <col:16> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x1b546fac838 <col:16> 'char *' <ArrayToPointerDecay>
|   | | |     `-DeclRefExpr 0x1b546fac7c0 <col:16> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]'
|   | | `-ImplicitCastExpr 0x1b546fac8d8 <col:27, col:31> 'unsigned long long' <IntegralCast>
|   | |   `-BinaryOperator 0x1b546fac8b8 <col:27, col:31> 'int' '+'
|   | |     |-IntegerLiteral 0x1b546fac868 <col:27> 'int' 6
|   | |     `-IntegerLiteral 0x1b546fac890 <col:31> 'int' 8
|   | `-ReturnStmt 0x1b546fac9b0 <line:308:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x1b546fac998 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1b546fac978 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1b546fac950 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1b546fac910 <col:26> 'int' 0
|   |-BinaryOperator 0x1b546facae8 <.//openssl//file_jk/after\apps\passwd.c:310:5, col:30> 'char *' '='
|   | |-DeclRefExpr 0x1b546fac9d8 <col:5> 'char *' lvalue Var 0x1b546fae938 'salt_out' 'char *'
|   | `-BinaryOperator 0x1b546facac8 <col:16, col:30> 'char *' '+'
|   |   |-BinaryOperator 0x1b546faca70 <col:16, col:26> 'char *' '+'
|   |   | |-ImplicitCastExpr 0x1b546faca58 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1b546faca10 <col:16> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]'
|   |   | `-IntegerLiteral 0x1b546faca30 <col:26> 'int' 2
|   |   `-ImplicitCastExpr 0x1b546facab0 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1b546faca90 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1b546faecf8 'magic_len' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1b546facc08 <line:311:5, col:31> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1b546facb08 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1b546faec80 'salt_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x1b546facbb0 <col:16, col:31> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x1b546facb98 <col:16> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1b546facb40 <col:16> 'unsigned long long (const char *)' Function 0x1b546ed5260 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x1b546facbf0 <col:23> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1b546facbd8 <col:23> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1b546facb60 <col:23> 'char *' lvalue Var 0x1b546fae938 'salt_out' 'char *'
|   |-IfStmt 0x1b546facd70 <line:313:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x1b546facca0 <.//openssl//file_jk/after\apps\passwd.c:313:9, col:20> 'int' '>'
|   | | |-ImplicitCastExpr 0x1b546facc70 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b546facc28 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b546faec80 'salt_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1b546facc88 <col:20> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b546facc48 <col:20> 'int' 8
|   | `-ReturnStmt 0x1b546facd60 <line:314:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x1b546facd48 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1b546facd28 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1b546facd00 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1b546faccc0 <col:26> 'int' 0
|   |-IfStmt 0x1b546fad598 <.//openssl//file_jk/after\apps\passwd.c:317:5, line:324:14>
|   | |-OpaqueValueExpr 0x1b546fad580 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1b546fad568 <col:9, col:14> 'err' 0x1b546fad518
|   |-IfStmt 0x1b546fb4b08 <line:327:5, line:333:14>
|   | |-OpaqueValueExpr 0x1b546fb4af0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1b546fb4ad8 <col:9, col:14> 'err' 0x1b546fad518
|   |-IfStmt 0x1b546fb4cf8 <line:339:5, line:340:14>
|   | |-OpaqueValueExpr 0x1b546fb4ce0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1b546fb4cc8 <col:9, col:14> 'err' 0x1b546fad518
|   |-BinaryOperator 0x1b546fb4d98 <line:342:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x1b546fb4d10 <col:5> 'int' lvalue Var 0x1b546fae9d0 'n' 'int'
|   | `-ImplicitCastExpr 0x1b546fb4d80 <col:9> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1b546fb4d68 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1b546fb4d48 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b546faec08 'passwd_len' 'size_t':'unsigned long long'
|   |-WhileStmt 0x1b546fb5148 <line:343:5, line:347:5>
|   | |-ImplicitCastExpr 0x1b546fb4dd8 <line:343:12> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b546fb4db8 <col:12> 'int' lvalue Var 0x1b546fae9d0 'n' 'int'
|   | `-CompoundStmt 0x1b546fb5128 <col:15, line:347:5>
|   |   |-IfStmt 0x1b546fb5080 <line:344:9, line:345:18>
|   |   | |-OpaqueValueExpr 0x1b546fb5068 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1b546fb5050 <col:13, col:18> 'err' 0x1b546fad518
|   |   `-CompoundAssignOperator 0x1b546fb50f8 <line:346:9, col:15> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1b546fb5098 <col:9> 'int' lvalue Var 0x1b546fae9d0 'n' 'int'
|   |     `-IntegerLiteral 0x1b546fb50b8 <col:15> 'int' 1
|   |-IfStmt 0x1b546fb52d0 <line:348:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-OpaqueValueExpr 0x1b546fb52b8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b546fb52a8 <.//openssl//file_jk/after\apps\passwd.c:349:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x1b546fb5290 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1b546fb5270 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1b546fb5248 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1b546fb5208 <col:26> 'int' 0
|   |-ForStmt 0x1b546fb7eb0 <.//openssl//file_jk/after\apps\passwd.c:351:5, line:372:5>
|   | |-BinaryOperator 0x1b546fb5348 <line:351:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x1b546fb52e8 <col:10> 'unsigned int' lvalue Var 0x1b546faea68 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1b546fb5330 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b546fb5308 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1b546fb53e0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1b546fb53b0 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b546fb5368 <col:17> 'unsigned int' lvalue Var 0x1b546faea68 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1b546fb53c8 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b546fb5388 <col:21> 'int' 1000
|   | |-UnaryOperator 0x1b546fb5420 <col:27, col:28> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x1b546fb5400 <col:27> 'unsigned int' lvalue Var 0x1b546faea68 'i' 'unsigned int'
|   | `-CompoundStmt 0x1b546fb7e70 <col:32, line:372:5>
|   |   |-IfStmt 0x1b546fb5568 <line:352:9, line:353:18>
|   |   | |-OpaqueValueExpr 0x1b546fb5550 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1b546fb5538 <col:13, col:18> 'err' 0x1b546fad518
|   |   |-IfStmt 0x1b546fb7818 <line:354:9, line:357:18>
|   |   | |-OpaqueValueExpr 0x1b546fb7800 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1b546fb77e8 <col:13, col:18> 'err' 0x1b546fad518
|   |   |-IfStmt 0x1b546fb7988 <line:358:9, line:361:9>
|   |   | |-BinaryOperator 0x1b546fb78a8 <line:358:13, col:17> 'unsigned int' '%'
|   |   | | |-ImplicitCastExpr 0x1b546fb7878 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b546fb7830 <col:13> 'unsigned int' lvalue Var 0x1b546faea68 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1b546fb7890 <col:17> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1b546fb7850 <col:17> 'int' 3
|   |   | `-CompoundStmt 0x1b546fb7970 <col:20, line:361:9>
|   |   |   `-IfStmt 0x1b546fb7958 <line:359:13, line:360:22>
|   |   |     |-OpaqueValueExpr 0x1b546fb7940 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x1b546fb7928 <col:17, col:22> 'err' 0x1b546fad518
|   |   |-IfStmt 0x1b546fb7af8 <line:362:9, line:365:9>
|   |   | |-BinaryOperator 0x1b546fb7a18 <line:362:13, col:17> 'unsigned int' '%'
|   |   | | |-ImplicitCastExpr 0x1b546fb79e8 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b546fb79a0 <col:13> 'unsigned int' lvalue Var 0x1b546faea68 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x1b546fb7a00 <col:17> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1b546fb79c0 <col:17> 'int' 7
|   |   | `-CompoundStmt 0x1b546fb7ae0 <col:20, line:365:9>
|   |   |   `-IfStmt 0x1b546fb7ac8 <line:363:13, line:364:22>
|   |   |     |-OpaqueValueExpr 0x1b546fb7ab0 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x1b546fb7a98 <col:17, col:22> 'err' 0x1b546fad518
|   |   |-IfStmt 0x1b546fb7d68 <line:366:9, line:369:22>
|   |   | |-OpaqueValueExpr 0x1b546fb7d50 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1b546fb7d38 <col:17, col:22> 'err' 0x1b546fad518
|   |   `-IfStmt 0x1b546fb7e58 <line:370:9, line:371:22>
|   |     |-OpaqueValueExpr 0x1b546fb7e40 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1b546fb7e28 <col:17, col:22> 'err' 0x1b546fad518
|   |-CompoundStmt 0x1b546fb72f0 <line:378:5, line:413:5>
|   | |-DeclStmt 0x1b546fb81a8 <line:380:9, col:44>
|   | | `-VarDecl 0x1b546fb8140 <col:9, col:23> col:23 invalid buf_perm 'unsigned char'
|   | |-DeclStmt 0x1b546fb82d8 <line:381:9, col:25>
|   | | |-VarDecl 0x1b546fb81d8 <col:9, col:13> col:13 used dest 'int'
|   | | `-VarDecl 0x1b546fb8258 <col:9, col:19> col:19 used source 'int'
|   | |-DeclStmt 0x1b546fb8370 <line:382:9, col:21>
|   | | `-VarDecl 0x1b546fb8308 <col:9, col:15> col:15 used output 'char *'
|   | |-BinaryOperator 0x1b546fb5ac8 <line:395:9, col:29> 'char *' '='
|   | | |-DeclRefExpr 0x1b546fb5a00 <col:9> 'char *' lvalue Var 0x1b546fb8308 'output' 'char *'
|   | | `-BinaryOperator 0x1b546fb5aa8 <col:18, col:29> 'char *' '+'
|   | |   |-ImplicitCastExpr 0x1b546fb5a78 <col:18> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1b546fb5a38 <col:18> 'char *' lvalue Var 0x1b546fae938 'salt_out' 'char *'
|   | |   `-ImplicitCastExpr 0x1b546fb5a90 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1b546fb5a58 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1b546faec80 'salt_len' 'size_t':'unsigned long long'
|   | |-CStyleCastExpr 0x1b546fb5fb8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | `-ParenExpr 0x1b546fb5f98 <col:35, col:128> 'int'
|   | |   `-BinaryOperator 0x1b546fb5f48 <col:37, col:126> 'int' '||'
|   | |     |-ParenExpr 0x1b546fb5cb0 <col:37, col:53> 'int'
|   | |     | `-UnaryOperator 0x1b546fb5c98 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |     |   `-UnaryOperator 0x1b546fb5c80 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |     |     `-ParenExpr 0x1b546fb5c60 <col:40, col:52> 'int'
|   | |     |       `-BinaryOperator 0x1b546fb5c40 <.//openssl//file_jk/after\apps\passwd.c:396:16, col:50> 'int' '=='
|   | |     |         |-ImplicitCastExpr 0x1b546fb5c28 <col:16> 'char *' <LValueToRValue>
|   | |     |         | `-DeclRefExpr 0x1b546fb5ae8 <col:16> 'char *' lvalue Var 0x1b546fb8308 'output' 'char *'
|   | |     |         `-BinaryOperator 0x1b546fb5c08 <col:26, col:50> 'char *' '+'
|   | |     |           |-ImplicitCastExpr 0x1b546fb5bf0 <col:26> 'char *' <ArrayToPointerDecay>
|   | |     |           | `-DeclRefExpr 0x1b546fb5b08 <col:26> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]'
|   | |     |           `-CallExpr 0x1b546fb5b98 <col:36, col:50> 'unsigned long long'
|   | |     |             |-ImplicitCastExpr 0x1b546fb5b80 <col:36> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |     |             | `-DeclRefExpr 0x1b546fb5b28 <col:36> 'unsigned long long (const char *)' Function 0x1b546ed5260 'strlen' 'unsigned long long (const char *)'
|   | |     |             `-ImplicitCastExpr 0x1b546fb5bd8 <col:43> 'const char *' <NoOp>
|   | |     |               `-ImplicitCastExpr 0x1b546fb5bc0 <col:43> 'char *' <ArrayToPointerDecay>
|   | |     |                 `-DeclRefExpr 0x1b546fb5b48 <col:43> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]'
|   | |     `-ParenExpr 0x1b546fb5f28 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |       `-BinaryOperator 0x1b546fb5f08 <col:59, col:125> 'int' ','
|   | |         |-CallExpr 0x1b546fb5e30 <col:59, col:122> 'void'
|   | |         | |-ImplicitCastExpr 0x1b546fb5e18 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |         | | `-DeclRefExpr 0x1b546fb5cd0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1b546f23e00 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |         | |-ImplicitCastExpr 0x1b546fb5e80 <<scratch space>:18:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x1b546fb5e68 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x1b546fb5d28 <col:1> 'unsigned short [36]' lvalue L"output == out_buf + strlen(out_buf)"
|   | |         | |-ImplicitCastExpr 0x1b546fb5eb0 <line:20:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x1b546fb5e98 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x1b546fb5d88 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   | |         | `-ImplicitCastExpr 0x1b546fb5ec8 <line:21:1> 'unsigned int' <IntegralCast>
|   | |         |   `-IntegerLiteral 0x1b546fb5df0 <col:1> 'int' 396
|   | |         `-IntegerLiteral 0x1b546fb5ee0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |-BinaryOperator 0x1b546fb6060 <.//openssl//file_jk/after\apps\passwd.c:398:9, col:21> 'char' '='
|   | | |-UnaryOperator 0x1b546fb6018 <col:9, col:16> 'char' lvalue prefix '*' cannot overflow
|   | | | `-UnaryOperator 0x1b546fb6000 <col:10, col:16> 'char *' postfix '++'
|   | | |   `-DeclRefExpr 0x1b546fb5fe0 <col:10> 'char *' lvalue Var 0x1b546fb8308 'output' 'char *'
|   | | `-ImplicitCastExpr 0x1b546fb6048 <col:21> 'char' <IntegralCast>
|   | |   `-CharacterLiteral 0x1b546fb6030 <col:21> 'int' 36
|   | |-ForStmt 0x1b546fb67f0 <line:400:9, line:407:9>
|   | | |-BinaryOperator 0x1b546fb60e0 <line:400:14, col:18> 'unsigned int' '='
|   | | | |-DeclRefExpr 0x1b546fb6080 <col:14> 'unsigned int' lvalue Var 0x1b546faea68 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x1b546fb60c8 <col:18> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1b546fb60a0 <col:18> 'int' 0
|   | | |-<<<NULL>>>
|   | | |-BinaryOperator 0x1b546fb6178 <col:21, col:25> 'int' '<'
|   | | | |-ImplicitCastExpr 0x1b546fb6148 <col:21> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1b546fb6100 <col:21> 'unsigned int' lvalue Var 0x1b546faea68 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x1b546fb6160 <col:25> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1b546fb6120 <col:25> 'int' 15
|   | | |-CompoundAssignOperator 0x1b546fb61f8 <col:29, col:34> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | | | |-DeclRefExpr 0x1b546fb6198 <col:29> 'unsigned int' lvalue Var 0x1b546faea68 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x1b546fb61e0 <col:34> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1b546fb61b8 <col:34> 'int' 3
|   | | `-CompoundStmt 0x1b546fb67e0 <col:37, line:407:9>
|   | |-CStyleCastExpr 0x1b546fb6be0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | `-ParenExpr 0x1b546fb6bc0 <col:35, col:128> 'int'
|   | |   `-BinaryOperator 0x1b546fb6b70 <col:37, col:126> 'int' '||'
|   | |     |-ParenExpr 0x1b546fb6910 <col:37, col:53> 'int'
|   | |     | `-UnaryOperator 0x1b546fb68f8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |     |   `-UnaryOperator 0x1b546fb68e0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |     |     `-ParenExpr 0x1b546fb68c0 <col:40, col:52> 'int'
|   | |     |       `-BinaryOperator 0x1b546fb68a0 <.//openssl//file_jk/after\apps\passwd.c:408:16, col:21> 'int' '=='
|   | |     |         |-ImplicitCastExpr 0x1b546fb6870 <col:16> 'unsigned int' <LValueToRValue>
|   | |     |         | `-DeclRefExpr 0x1b546fb6828 <col:16> 'unsigned int' lvalue Var 0x1b546faea68 'i' 'unsigned int'
|   | |     |         `-ImplicitCastExpr 0x1b546fb6888 <col:21> 'unsigned int' <IntegralCast>
|   | |     |           `-IntegerLiteral 0x1b546fb6848 <col:21> 'int' 15
|   | |     `-ParenExpr 0x1b546fb6b50 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |       `-BinaryOperator 0x1b546fb6b30 <col:59, col:125> 'int' ','
|   | |         |-CallExpr 0x1b546fb6a58 <col:59, col:122> 'void'
|   | |         | |-ImplicitCastExpr 0x1b546fb6a40 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |         | | `-DeclRefExpr 0x1b546fb6930 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1b546f23e00 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |         | |-ImplicitCastExpr 0x1b546fb6aa8 <<scratch space>:23:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x1b546fb6a90 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x1b546fb6988 <col:1> 'unsigned short [8]' lvalue L"i == 15"
|   | |         | |-ImplicitCastExpr 0x1b546fb6ad8 <line:25:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x1b546fb6ac0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x1b546fb69b0 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   | |         | `-ImplicitCastExpr 0x1b546fb6af0 <line:26:1> 'unsigned int' <IntegralCast>
|   | |         |   `-IntegerLiteral 0x1b546fb6a18 <col:1> 'int' 408
|   | |         `-IntegerLiteral 0x1b546fb6b08 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |-BinaryOperator 0x1b546fb6e08 <.//openssl//file_jk/after\apps\passwd.c:411:9, col:19> 'char' '='
|   | | |-UnaryOperator 0x1b546fb6db0 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x1b546fb6d98 <col:10> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x1b546fb6d78 <col:10> 'char *' lvalue Var 0x1b546fb8308 'output' 'char *'
|   | | `-ImplicitCastExpr 0x1b546fb6df0 <col:19> 'char' <IntegralCast>
|   | |   `-IntegerLiteral 0x1b546fb6dc8 <col:19> 'int' 0
|   | `-CStyleCastExpr 0x1b546fb72c8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   |   `-ParenExpr 0x1b546fb72a8 <col:35, col:128> 'int'
|   |     `-BinaryOperator 0x1b546fb7258 <col:37, col:126> 'int' '||'
|   |       |-ParenExpr 0x1b546fb6fc0 <col:37, col:53> 'int'
|   |       | `-UnaryOperator 0x1b546fb6fa8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   |       |   `-UnaryOperator 0x1b546fb6f90 <col:39, col:52> 'int' prefix '!' cannot overflow
|   |       |     `-ParenExpr 0x1b546fb6f70 <col:40, col:52> 'int'
|   |       |       `-BinaryOperator 0x1b546fb6f50 <.//openssl//file_jk/after\apps\passwd.c:412:16, col:48> 'int' '<'
|   |       |         |-CallExpr 0x1b546fb6e98 <col:16, col:30> 'unsigned long long'
|   |       |         | |-ImplicitCastExpr 0x1b546fb6e80 <col:16> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       |         | | `-DeclRefExpr 0x1b546fb6e28 <col:16> 'unsigned long long (const char *)' Function 0x1b546ed5260 'strlen' 'unsigned long long (const char *)'
|   |       |         | `-ImplicitCastExpr 0x1b546fb6ed8 <col:23> 'const char *' <NoOp>
|   |       |         |   `-ImplicitCastExpr 0x1b546fb6ec0 <col:23> 'char *' <ArrayToPointerDecay>
|   |       |         |     `-DeclRefExpr 0x1b546fb6e48 <col:23> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]'
|   |       |         `-UnaryExprOrTypeTraitExpr 0x1b546fb6f30 <col:34, col:48> 'unsigned long long' sizeof
|   |       |           `-ParenExpr 0x1b546fb6f10 <col:40, col:48> 'char [41]' lvalue
|   |       |             `-DeclRefExpr 0x1b546fb6ef0 <col:41> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |       `-ParenExpr 0x1b546fb7238 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   |         `-BinaryOperator 0x1b546fb7218 <col:59, col:125> 'int' ','
|   |           |-CallExpr 0x1b546fb7140 <col:59, col:122> 'void'
|   |           | |-ImplicitCastExpr 0x1b546fb7128 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x1b546fb6fe0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1b546f23e00 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   |           | |-ImplicitCastExpr 0x1b546fb7190 <<scratch space>:28:1> 'const wchar_t *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x1b546fb7178 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |           | |   `-StringLiteral 0x1b546fb7038 <col:1> 'unsigned short [34]' lvalue L"strlen(out_buf) < sizeof(out_buf)"
|   |           | |-ImplicitCastExpr 0x1b546fb71c0 <line:30:1> 'const wchar_t *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x1b546fb71a8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |           | |   `-StringLiteral 0x1b546fb7098 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   |           | `-ImplicitCastExpr 0x1b546fb71d8 <line:31:1> 'unsigned int' <IntegralCast>
|   |           |   `-IntegerLiteral 0x1b546fb7100 <col:1> 'int' 412
|   |           `-IntegerLiteral 0x1b546fb71f0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   |-ReturnStmt 0x1b546fb7388 <.//openssl//file_jk/after\apps\passwd.c:415:5, col:12>
|   | `-ImplicitCastExpr 0x1b546fb7370 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x1b546fb7350 <col:12> 'char [41]' lvalue Var 0x1b546fae808 'out_buf' 'char [41]'
|   |-LabelStmt 0x1b546fb73c0 <line:417:2, col:5> 'err'
|   | `-NullStmt 0x1b546fb73b8 <col:5>
|   `-ReturnStmt 0x1b546fb7498 <line:420:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|     `-ImplicitCastExpr 0x1b546fb7480 <col:17, col:27> 'char *' <NullToPointer>
|       `-ParenExpr 0x1b546fb7460 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x1b546fb7438 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x1b546fb73f8 <col:26> 'int' 0
`-FunctionDecl 0x1b546fb8c68 <.//openssl//file_jk/after\apps\passwd.c:424:1, line:504:1> line:424:12 invalid do_passwd 'int (int, char **, char **, char *, int *, int, int, int, size_t, int, int, int)' static
  |-ParmVarDecl 0x1b546fb75b8 <col:22, col:26> col:26 used passed_salt 'int'
  |-ParmVarDecl 0x1b546fb7638 <col:39, col:46> col:46 used salt_p 'char **'
  |-ParmVarDecl 0x1b546fb76b8 <col:54, col:61> col:61 used salt_malloc_p 'char **'
  |-ParmVarDecl 0x1b546fb8780 <line:425:22, col:28> col:28 used passwd 'char *'
  |-ParmVarDecl 0x1b546fb8800 <col:36, col:41> col:41 invalid out 'int *'
  |-ParmVarDecl 0x1b546fb8880 <col:46, col:50> col:50 used quiet 'int'
  |-ParmVarDecl 0x1b546fb8900 <col:57, col:61> col:61 used table 'int'
  |-ParmVarDecl 0x1b546fb8980 <line:426:22, col:26> col:26 used reverse 'int'
  |-ParmVarDecl 0x1b546fb89f8 <col:35, col:42> col:42 used pw_maxlen 'size_t':'unsigned long long'
  |-ParmVarDecl 0x1b546fb8a78 <col:53, col:57> col:57 used usecrypt 'int'
  |-ParmVarDecl 0x1b546fb8af8 <col:67, col:71> col:71 used use1 'int'
  |-ParmVarDecl 0x1b546fb8b78 <line:427:22, col:26> col:26 used useapr1 'int'
  `-CompoundStmt 0x1b546fbed10 <line:428:1, line:504:1>
    |-DeclStmt 0x1b546fb8ea0 <line:429:5, col:22>
    | `-VarDecl 0x1b546fb8d98 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:429:11 used hash 'char *' cinit
    |   `-ImplicitCastExpr 0x1b546fb8e88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
    |     `-ParenExpr 0x1b546fb8e68 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x1b546fb8e40 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x1b546fb8e00 <col:26> 'int' 0
    |-CStyleCastExpr 0x1b546fb92c0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x1b546fb92a0 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x1b546fb9250 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x1b546fb9018 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x1b546fb9000 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x1b546fb8fe8 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x1b546fb8fc8 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x1b546fb8fa8 <.//openssl//file_jk/after\apps\passwd.c:431:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x1b546fb8f78 <.//openssl//file_jk/after\apps\passwd.c:431:12> 'char **' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x1b546fb8eb8 <col:12> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |     |         `-ImplicitCastExpr 0x1b546fb8f90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
    |     |           `-ParenExpr 0x1b546fb8f58 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x1b546fb8f30 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x1b546fb8ef0 <col:26> 'int' 0
    |     `-ParenExpr 0x1b546fb9230 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x1b546fb9210 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x1b546fb9138 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x1b546fb9120 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x1b546fb9038 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1b546f23e00 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x1b546fb9188 <<scratch space>:33:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1b546fb9170 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1b546fb9058 <col:1> 'unsigned short [15]' lvalue L"salt_p != NULL"
    |         | |-ImplicitCastExpr 0x1b546fb91b8 <line:35:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1b546fb91a0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1b546fb9090 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x1b546fb91d0 <line:36:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x1b546fb90f8 <col:1> 'int' 431
    |         `-IntegerLiteral 0x1b546fb91e8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-CStyleCastExpr 0x1b546fb9740 <col:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x1b546fb9720 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x1b546fb96d0 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x1b546fb9448 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x1b546fb9430 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x1b546fb9418 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x1b546fb93f8 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x1b546fb93d8 <.//openssl//file_jk/after\apps\passwd.c:432:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x1b546fb93a8 <.//openssl//file_jk/after\apps\passwd.c:432:12> 'char **' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x1b546fb92e8 <col:12> 'char **' lvalue ParmVar 0x1b546fb76b8 'salt_malloc_p' 'char **'
    |     |         `-ImplicitCastExpr 0x1b546fb93c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
    |     |           `-ParenExpr 0x1b546fb9388 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x1b546fb9360 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x1b546fb9320 <col:26> 'int' 0
    |     `-ParenExpr 0x1b546fb96b0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x1b546fb9690 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x1b546fb95b8 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x1b546fb95a0 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x1b546fb9468 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1b546f23e00 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x1b546fb9608 <<scratch space>:38:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1b546fb95f0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1b546fb94c8 <col:1> 'unsigned short [22]' lvalue L"salt_malloc_p != NULL"
    |         | |-ImplicitCastExpr 0x1b546fb9638 <line:40:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1b546fb9620 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1b546fb9510 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x1b546fb9650 <line:41:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x1b546fb9578 <col:1> 'int' 432
    |         `-IntegerLiteral 0x1b546fb9668 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x1b546fbb188 <.//openssl//file_jk/after\apps\passwd.c:435:5, line:466:5>
    | |-UnaryOperator 0x1b546fb97e0 <line:435:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1b546fb97c8 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1b546fb9790 <col:10> 'int' lvalue ParmVar 0x1b546fb75b8 'passed_salt' 'int'
    | `-CompoundStmt 0x1b546fbb168 <col:23, line:466:5>
    |   |-IfStmt 0x1b546fba540 <line:437:9, line:449:9>
    |   | |-ImplicitCastExpr 0x1b546fb9830 <line:437:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1b546fb97f8 <col:13> 'int' lvalue ParmVar 0x1b546fb8a78 'usecrypt' 'int'
    |   | `-CompoundStmt 0x1b546fba508 <col:23, line:449:9>
    |   |   |-IfStmt 0x1b546fb9b50 <line:438:13, line:439:71>
    |   |   | |-BinaryOperator 0x1b546fb9950 <line:438:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
    |   |   | | |-ImplicitCastExpr 0x1b546fb9920 <.//openssl//file_jk/after\apps\passwd.c:438:17, col:18> 'char *' <LValueToRValue>
    |   |   | | | `-UnaryOperator 0x1b546fb9880 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |   `-ImplicitCastExpr 0x1b546fb9868 <col:18> 'char **' <LValueToRValue>
    |   |   | | |     `-DeclRefExpr 0x1b546fb9848 <col:18> 'char **' lvalue ParmVar 0x1b546fb76b8 'salt_malloc_p' 'char **'
    |   |   | | `-ImplicitCastExpr 0x1b546fb9938 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |   |   | |   `-ParenExpr 0x1b546fb9900 <col:17, col:27> 'void *'
    |   |   | |     `-CStyleCastExpr 0x1b546fb98d8 <col:18, col:26> 'void *' <NullToPointer>
    |   |   | |       `-IntegerLiteral 0x1b546fb9898 <col:26> 'int' 0
    |   |   | `-BinaryOperator 0x1b546fb9b30 <.//openssl//file_jk/after\apps\passwd.c:439:17, col:71> 'char *' '='
    |   |   |   |-UnaryOperator 0x1b546fb99a8 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |   |   |   | `-ImplicitCastExpr 0x1b546fb9990 <col:18> 'char **' <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x1b546fb9970 <col:18> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |   |   |   `-BinaryOperator 0x1b546fb9b10 <col:27, col:71> 'char *' '='
    |   |   |     |-UnaryOperator 0x1b546fb99f8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
    |   |   |     | `-ImplicitCastExpr 0x1b546fb99e0 <col:28> 'char **' <LValueToRValue>
    |   |   |     |   `-DeclRefExpr 0x1b546fb99c0 <col:28> 'char **' lvalue ParmVar 0x1b546fb76b8 'salt_malloc_p' 'char **'
    |   |   |     `-ImplicitCastExpr 0x1b546fb9af8 <col:44, col:71> 'char *' <BitCast>
    |   |   |       `-CallExpr 0x1b546fb9a98 <col:44, col:71> 'void *'
    |   |   |         |-ImplicitCastExpr 0x1b546fb9a80 <col:44> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
    |   |   |         | `-DeclRefExpr 0x1b546fb9a10 <col:44> 'void *(int, const char *)' Function 0x1b546f41fc0 'app_malloc' 'void *(int, const char *)'
    |   |   |         |-IntegerLiteral 0x1b546fb9a30 <col:55> 'int' 3
    |   |   |         `-ImplicitCastExpr 0x1b546fb9ae0 <col:58> 'const char *' <NoOp>
    |   |   |           `-ImplicitCastExpr 0x1b546fb9ac8 <col:58> 'char *' <ArrayToPointerDecay>
    |   |   |             `-StringLiteral 0x1b546fb9a58 <col:58> 'char [12]' lvalue "salt buffer"
    |   |   |-IfStmt 0x1b546fb9e40 <line:440:13, line:441:22>
    |   |   | |-BinaryOperator 0x1b546fb9db8 <line:440:17, col:60> 'int' '<='
    |   |   | | |-CallExpr 0x1b546fb9d60 <col:17, col:55> 'int'
    |   |   | | | |-ImplicitCastExpr 0x1b546fb9d48 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | | | `-DeclRefExpr 0x1b546fb9c58 <col:17> 'int ()' Function 0x1b546fb9b90 'RAND_bytes' 'int ()'
    |   |   | | | |-CStyleCastExpr 0x1b546fb9cf8 <col:28, col:46> 'unsigned char *' <BitCast>
    |   |   | | | | `-ImplicitCastExpr 0x1b546fb9ce0 <col:45, col:46> 'char *' <LValueToRValue> part_of_explicit_cast
    |   |   | | | |   `-UnaryOperator 0x1b546fb9cb0 <col:45, col:46> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | | |     `-ImplicitCastExpr 0x1b546fb9c98 <col:46> 'char **' <LValueToRValue>
    |   |   | | | |       `-DeclRefExpr 0x1b546fb9c78 <col:46> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |   |   | | | `-IntegerLiteral 0x1b546fb9d20 <col:54> 'int' 2
    |   |   | | `-IntegerLiteral 0x1b546fb9d90 <col:60> 'int' 0
    |   |   | `-GotoStmt 0x1b546fb9e28 <line:441:17, col:22> 'end' 0x1b546fb9dd8
    |   |   |-BinaryOperator 0x1b546fba0f8 <line:442:13, col:57> 'char' '='
    |   |   | |-ArraySubscriptExpr 0x1b546fb9f08 <col:13, col:24> 'char' lvalue
    |   |   | | |-ImplicitCastExpr 0x1b546fb9ef0 <col:13, col:21> 'char *' <LValueToRValue>
    |   |   | | | `-ParenExpr 0x1b546fb9ea8 <col:13, col:21> 'char *' lvalue
    |   |   | | |   `-UnaryOperator 0x1b546fb9e90 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |     `-ImplicitCastExpr 0x1b546fb9e78 <col:15> 'char **' <LValueToRValue>
    |   |   | | |       `-DeclRefExpr 0x1b546fb9e58 <col:15> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |   |   | | `-IntegerLiteral 0x1b546fb9ec8 <col:23> 'int' 0
    |   |   | `-ImplicitCastExpr 0x1b546fba0e0 <col:28, col:57> 'char' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x1b546fba0c8 <col:28, col:57> 'unsigned char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x1b546fba0a8 <col:28, col:57> 'const unsigned char' lvalue
    |   |   |       |-ImplicitCastExpr 0x1b546fba090 <col:28> 'const unsigned char *' <ArrayToPointerDecay>
    |   |   |       | `-DeclRefExpr 0x1b546fb9f28 <col:28> 'const unsigned char [64]' lvalue Var 0x1b546f4c3c0 'cov_2char' 'const unsigned char [64]'
    |   |   |       `-BinaryOperator 0x1b546fba070 <col:38, col:53> 'int' '&'
    |   |   |         |-ImplicitCastExpr 0x1b546fba058 <col:38, col:49> 'int' <IntegralCast>
    |   |   |         | `-ImplicitCastExpr 0x1b546fba040 <col:38, col:49> 'char' <LValueToRValue>
    |   |   |         |   `-ArraySubscriptExpr 0x1b546fb9ff8 <col:38, col:49> 'char' lvalue
    |   |   |         |     |-ImplicitCastExpr 0x1b546fb9fe0 <col:38, col:46> 'char *' <LValueToRValue>
    |   |   |         |     | `-ParenExpr 0x1b546fb9f98 <col:38, col:46> 'char *' lvalue
    |   |   |         |     |   `-UnaryOperator 0x1b546fb9f80 <col:39, col:40> 'char *' lvalue prefix '*' cannot overflow
    |   |   |         |     |     `-ImplicitCastExpr 0x1b546fb9f68 <col:40> 'char **' <LValueToRValue>
    |   |   |         |     |       `-DeclRefExpr 0x1b546fb9f48 <col:40> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |   |   |         |     `-IntegerLiteral 0x1b546fb9fb8 <col:48> 'int' 0
    |   |   |         `-IntegerLiteral 0x1b546fba018 <col:53> 'int' 63
    |   |   |-BinaryOperator 0x1b546fba3b8 <line:443:13, col:57> 'char' '='
    |   |   | |-ArraySubscriptExpr 0x1b546fba1c8 <col:13, col:24> 'char' lvalue
    |   |   | | |-ImplicitCastExpr 0x1b546fba1b0 <col:13, col:21> 'char *' <LValueToRValue>
    |   |   | | | `-ParenExpr 0x1b546fba168 <col:13, col:21> 'char *' lvalue
    |   |   | | |   `-UnaryOperator 0x1b546fba150 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |     `-ImplicitCastExpr 0x1b546fba138 <col:15> 'char **' <LValueToRValue>
    |   |   | | |       `-DeclRefExpr 0x1b546fba118 <col:15> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |   |   | | `-IntegerLiteral 0x1b546fba188 <col:23> 'int' 1
    |   |   | `-ImplicitCastExpr 0x1b546fba3a0 <col:28, col:57> 'char' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x1b546fba388 <col:28, col:57> 'unsigned char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x1b546fba368 <col:28, col:57> 'const unsigned char' lvalue
    |   |   |       |-ImplicitCastExpr 0x1b546fba350 <col:28> 'const unsigned char *' <ArrayToPointerDecay>
    |   |   |       | `-DeclRefExpr 0x1b546fba1e8 <col:28> 'const unsigned char [64]' lvalue Var 0x1b546f4c3c0 'cov_2char' 'const unsigned char [64]'
    |   |   |       `-BinaryOperator 0x1b546fba330 <col:38, col:53> 'int' '&'
    |   |   |         |-ImplicitCastExpr 0x1b546fba318 <col:38, col:49> 'int' <IntegralCast>
    |   |   |         | `-ImplicitCastExpr 0x1b546fba300 <col:38, col:49> 'char' <LValueToRValue>
    |   |   |         |   `-ArraySubscriptExpr 0x1b546fba2b8 <col:38, col:49> 'char' lvalue
    |   |   |         |     |-ImplicitCastExpr 0x1b546fba2a0 <col:38, col:46> 'char *' <LValueToRValue>
    |   |   |         |     | `-ParenExpr 0x1b546fba258 <col:38, col:46> 'char *' lvalue
    |   |   |         |     |   `-UnaryOperator 0x1b546fba240 <col:39, col:40> 'char *' lvalue prefix '*' cannot overflow
    |   |   |         |     |     `-ImplicitCastExpr 0x1b546fba228 <col:40> 'char **' <LValueToRValue>
    |   |   |         |     |       `-DeclRefExpr 0x1b546fba208 <col:40> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |   |   |         |     `-IntegerLiteral 0x1b546fba278 <col:48> 'int' 1
    |   |   |         `-IntegerLiteral 0x1b546fba2d8 <col:53> 'int' 63
    |   |   `-BinaryOperator 0x1b546fba4e8 <line:444:13, col:28> 'char' '='
    |   |     |-ArraySubscriptExpr 0x1b546fba488 <col:13, col:24> 'char' lvalue
    |   |     | |-ImplicitCastExpr 0x1b546fba470 <col:13, col:21> 'char *' <LValueToRValue>
    |   |     | | `-ParenExpr 0x1b546fba428 <col:13, col:21> 'char *' lvalue
    |   |     | |   `-UnaryOperator 0x1b546fba410 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |     | |     `-ImplicitCastExpr 0x1b546fba3f8 <col:15> 'char **' <LValueToRValue>
    |   |     | |       `-DeclRefExpr 0x1b546fba3d8 <col:15> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |   |     | `-IntegerLiteral 0x1b546fba448 <col:23> 'int' 2
    |   |     `-ImplicitCastExpr 0x1b546fba4d0 <col:28> 'char' <IntegralCast>
    |   |       `-IntegerLiteral 0x1b546fba4a8 <col:28> 'int' 0
    |   `-IfStmt 0x1b546fbb150 <line:453:9, line:464:9>
    |     |-BinaryOperator 0x1b546fba5f8 <line:453:13, col:21> 'int' '||'
    |     | |-ImplicitCastExpr 0x1b546fba5c8 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1b546fba558 <col:13> 'int' lvalue ParmVar 0x1b546fb8af8 'use1' 'int'
    |     | `-ImplicitCastExpr 0x1b546fba5e0 <col:21> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1b546fba590 <col:21> 'int' lvalue ParmVar 0x1b546fb8b78 'useapr1' 'int'
    |     `-CompoundStmt 0x1b546fbb118 <col:30, line:464:9>
    |       |-DeclStmt 0x1b546fba698 <line:454:13, col:18>
    |       | `-VarDecl 0x1b546fba630 <col:13, col:17> col:17 used i 'int'
    |       |-IfStmt 0x1b546fba9d0 <line:456:13, line:457:71>
    |       | |-BinaryOperator 0x1b546fba7d0 <line:456:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
    |       | | |-ImplicitCastExpr 0x1b546fba7a0 <.//openssl//file_jk/after\apps\passwd.c:456:17, col:18> 'char *' <LValueToRValue>
    |       | | | `-UnaryOperator 0x1b546fba6e8 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |       | | |   `-ImplicitCastExpr 0x1b546fba6d0 <col:18> 'char **' <LValueToRValue>
    |       | | |     `-DeclRefExpr 0x1b546fba6b0 <col:18> 'char **' lvalue ParmVar 0x1b546fb76b8 'salt_malloc_p' 'char **'
    |       | | `-ImplicitCastExpr 0x1b546fba7b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |       | |   `-ParenExpr 0x1b546fba768 <col:17, col:27> 'void *'
    |       | |     `-CStyleCastExpr 0x1b546fba740 <col:18, col:26> 'void *' <NullToPointer>
    |       | |       `-IntegerLiteral 0x1b546fba700 <col:26> 'int' 0
    |       | `-BinaryOperator 0x1b546fba9b0 <.//openssl//file_jk/after\apps\passwd.c:457:17, col:71> 'char *' '='
    |       |   |-UnaryOperator 0x1b546fba828 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |       |   | `-ImplicitCastExpr 0x1b546fba810 <col:18> 'char **' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x1b546fba7f0 <col:18> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |       |   `-BinaryOperator 0x1b546fba990 <col:27, col:71> 'char *' '='
    |       |     |-UnaryOperator 0x1b546fba878 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
    |       |     | `-ImplicitCastExpr 0x1b546fba860 <col:28> 'char **' <LValueToRValue>
    |       |     |   `-DeclRefExpr 0x1b546fba840 <col:28> 'char **' lvalue ParmVar 0x1b546fb76b8 'salt_malloc_p' 'char **'
    |       |     `-ImplicitCastExpr 0x1b546fba978 <col:44, col:71> 'char *' <BitCast>
    |       |       `-CallExpr 0x1b546fba918 <col:44, col:71> 'void *'
    |       |         |-ImplicitCastExpr 0x1b546fba900 <col:44> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
    |       |         | `-DeclRefExpr 0x1b546fba890 <col:44> 'void *(int, const char *)' Function 0x1b546f41fc0 'app_malloc' 'void *(int, const char *)'
    |       |         |-IntegerLiteral 0x1b546fba8b0 <col:55> 'int' 9
    |       |         `-ImplicitCastExpr 0x1b546fba960 <col:58> 'const char *' <NoOp>
    |       |           `-ImplicitCastExpr 0x1b546fba948 <col:58> 'char *' <ArrayToPointerDecay>
    |       |             `-StringLiteral 0x1b546fba8d8 <col:58> 'char [12]' lvalue "salt buffer"
    |       |-IfStmt 0x1b546fbab80 <line:458:13, line:459:22>
    |       | |-BinaryOperator 0x1b546fbab48 <line:458:17, col:60> 'int' '<='
    |       | | |-CallExpr 0x1b546fbaaf0 <col:17, col:55> 'int'
    |       | | | |-ImplicitCastExpr 0x1b546fbaad8 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |       | | | | `-DeclRefExpr 0x1b546fba9e8 <col:17> 'int ()' Function 0x1b546fb9b90 'RAND_bytes' 'int ()'
    |       | | | |-CStyleCastExpr 0x1b546fbaa88 <col:28, col:46> 'unsigned char *' <BitCast>
    |       | | | | `-ImplicitCastExpr 0x1b546fbaa70 <col:45, col:46> 'char *' <LValueToRValue> part_of_explicit_cast
    |       | | | |   `-UnaryOperator 0x1b546fbaa40 <col:45, col:46> 'char *' lvalue prefix '*' cannot overflow
    |       | | | |     `-ImplicitCastExpr 0x1b546fbaa28 <col:46> 'char **' <LValueToRValue>
    |       | | | |       `-DeclRefExpr 0x1b546fbaa08 <col:46> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |       | | | `-IntegerLiteral 0x1b546fbaab0 <col:54> 'int' 8
    |       | | `-IntegerLiteral 0x1b546fbab20 <col:60> 'int' 0
    |       | `-GotoStmt 0x1b546fbab68 <line:459:17, col:22> 'end' 0x1b546fb9dd8
    |       |-ForStmt 0x1b546fbafb0 <line:461:13, line:462:61>
    |       | |-BinaryOperator 0x1b546fbabf8 <line:461:18, col:22> 'int' '='
    |       | | |-DeclRefExpr 0x1b546fbab98 <col:18> 'int' lvalue Var 0x1b546fba630 'i' 'int'
    |       | | `-IntegerLiteral 0x1b546fbabd0 <col:22> 'int' 0
    |       | |-<<<NULL>>>
    |       | |-BinaryOperator 0x1b546fbac78 <col:25, col:29> 'int' '<'
    |       | | |-ImplicitCastExpr 0x1b546fbac60 <col:25> 'int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x1b546fbac18 <col:25> 'int' lvalue Var 0x1b546fba630 'i' 'int'
    |       | | `-IntegerLiteral 0x1b546fbac38 <col:29> 'int' 8
    |       | |-UnaryOperator 0x1b546fbacb8 <col:32, col:33> 'int' postfix '++'
    |       | | `-DeclRefExpr 0x1b546fbac98 <col:32> 'int' lvalue Var 0x1b546fba630 'i' 'int'
    |       | `-BinaryOperator 0x1b546fbaf90 <line:462:17, col:61> 'char' '='
    |       |   |-ArraySubscriptExpr 0x1b546fbad90 <col:17, col:28> 'char' lvalue
    |       |   | |-ImplicitCastExpr 0x1b546fbad60 <col:17, col:25> 'char *' <LValueToRValue>
    |       |   | | `-ParenExpr 0x1b546fbad20 <col:17, col:25> 'char *' lvalue
    |       |   | |   `-UnaryOperator 0x1b546fbad08 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
    |       |   | |     `-ImplicitCastExpr 0x1b546fbacf0 <col:19> 'char **' <LValueToRValue>
    |       |   | |       `-DeclRefExpr 0x1b546fbacd0 <col:19> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |       |   | `-ImplicitCastExpr 0x1b546fbad78 <col:27> 'int' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x1b546fbad40 <col:27> 'int' lvalue Var 0x1b546fba630 'i' 'int'
    |       |   `-ImplicitCastExpr 0x1b546fbaf78 <col:32, col:61> 'char' <IntegralCast>
    |       |     `-ImplicitCastExpr 0x1b546fbaf60 <col:32, col:61> 'unsigned char' <LValueToRValue>
    |       |       `-ArraySubscriptExpr 0x1b546fbaf40 <col:32, col:61> 'const unsigned char' lvalue
    |       |         |-ImplicitCastExpr 0x1b546fbaf28 <col:32> 'const unsigned char *' <ArrayToPointerDecay>
    |       |         | `-DeclRefExpr 0x1b546fbadb0 <col:32> 'const unsigned char [64]' lvalue Var 0x1b546f4c3c0 'cov_2char' 'const unsigned char [64]'
    |       |         `-BinaryOperator 0x1b546fbaf08 <col:42, col:57> 'int' '&'
    |       |           |-ImplicitCastExpr 0x1b546fbaef0 <col:42, col:53> 'int' <IntegralCast>
    |       |           | `-ImplicitCastExpr 0x1b546fbaed8 <col:42, col:53> 'char' <LValueToRValue>
    |       |           |   `-ArraySubscriptExpr 0x1b546fbae90 <col:42, col:53> 'char' lvalue
    |       |           |     |-ImplicitCastExpr 0x1b546fbae60 <col:42, col:50> 'char *' <LValueToRValue>
    |       |           |     | `-ParenExpr 0x1b546fbae20 <col:42, col:50> 'char *' lvalue
    |       |           |     |   `-UnaryOperator 0x1b546fbae08 <col:43, col:44> 'char *' lvalue prefix '*' cannot overflow
    |       |           |     |     `-ImplicitCastExpr 0x1b546fbadf0 <col:44> 'char **' <LValueToRValue>
    |       |           |     |       `-DeclRefExpr 0x1b546fbadd0 <col:44> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |       |           |     `-ImplicitCastExpr 0x1b546fbae78 <col:52> 'int' <LValueToRValue>
    |       |           |       `-DeclRefExpr 0x1b546fbae40 <col:52> 'int' lvalue Var 0x1b546fba630 'i' 'int'
    |       |           `-IntegerLiteral 0x1b546fbaeb0 <col:57> 'int' 63
    |       `-BinaryOperator 0x1b546fbb0f8 <line:463:13, col:28> 'char' '='
    |         |-ArraySubscriptExpr 0x1b546fbb098 <col:13, col:24> 'char' lvalue
    |         | |-ImplicitCastExpr 0x1b546fbb080 <col:13, col:21> 'char *' <LValueToRValue>
    |         | | `-ParenExpr 0x1b546fbb038 <col:13, col:21> 'char *' lvalue
    |         | |   `-UnaryOperator 0x1b546fbb020 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |         | |     `-ImplicitCastExpr 0x1b546fbb008 <col:15> 'char **' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x1b546fbafe8 <col:15> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |         | `-IntegerLiteral 0x1b546fbb058 <col:23> 'int' 8
    |         `-ImplicitCastExpr 0x1b546fbb0e0 <col:28> 'char' <IntegralCast>
    |           `-IntegerLiteral 0x1b546fbb0b8 <col:28> 'int' 0
    |-CStyleCastExpr 0x1b546fbb5c0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x1b546fbb5a0 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x1b546fbb550 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x1b546fbb318 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x1b546fbb300 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x1b546fbb2e8 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x1b546fbb2c8 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x1b546fbb2a8 <.//openssl//file_jk/after\apps\passwd.c:468:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x1b546fbb278 <.//openssl//file_jk/after\apps\passwd.c:468:12, col:13> 'char *' <LValueToRValue>
    |     |         | `-UnaryOperator 0x1b546fbb1d8 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
    |     |         |   `-ImplicitCastExpr 0x1b546fbb1c0 <col:13> 'char **' <LValueToRValue>
    |     |         |     `-DeclRefExpr 0x1b546fbb1a0 <col:13> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |     |         `-ImplicitCastExpr 0x1b546fbb290 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |     |           `-ParenExpr 0x1b546fbb258 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x1b546fbb230 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x1b546fbb1f0 <col:26> 'int' 0
    |     `-ParenExpr 0x1b546fbb530 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x1b546fbb510 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x1b546fbb438 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x1b546fbb420 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x1b546fbb338 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1b546f23e00 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x1b546fbb488 <<scratch space>:43:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1b546fbb470 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1b546fbb358 <col:1> 'unsigned short [16]' lvalue L"*salt_p != NULL"
    |         | |-ImplicitCastExpr 0x1b546fbb4b8 <line:45:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1b546fbb4a0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1b546fbb390 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x1b546fbb4d0 <line:46:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x1b546fbb3f8 <col:1> 'int' 468
    |         `-IntegerLiteral 0x1b546fbb4e8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x1b546fb3980 <.//openssl//file_jk/after\apps\passwd.c:471:5, line:480:5>
    | |-ParenExpr 0x1b546fbb738 <line:471:9, col:36> 'int'
    | | `-BinaryOperator 0x1b546fbb718 <col:10, col:27> 'int' '>'
    | |   |-CallExpr 0x1b546fbb670 <col:10, col:23> 'unsigned long long'
    | |   | |-ImplicitCastExpr 0x1b546fbb658 <col:10> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x1b546fbb5e8 <col:10> 'unsigned long long (const char *)' Function 0x1b546ed5260 'strlen' 'unsigned long long (const char *)'
    | |   | `-ImplicitCastExpr 0x1b546fbb6b0 <col:17> 'const char *' <NoOp>
    | |   |   `-ImplicitCastExpr 0x1b546fbb698 <col:17> 'char *' <LValueToRValue>
    | |   |     `-DeclRefExpr 0x1b546fbb608 <col:17> 'char *' lvalue ParmVar 0x1b546fb8780 'passwd' 'char *'
    | |   `-ImplicitCastExpr 0x1b546fbb700 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
    | |     `-DeclRefExpr 0x1b546fbb6c8 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x1b546fb89f8 'pw_maxlen' 'size_t':'unsigned long long'
    | `-CompoundStmt 0x1b546fb3968 <col:39, line:480:5>
    |   `-BinaryOperator 0x1b546fb3948 <line:479:9, col:29> 'char' '='
    |     |-ArraySubscriptExpr 0x1b546fb38e8 <col:9, col:25> 'char' lvalue
    |     | |-ImplicitCastExpr 0x1b546fb38b8 <col:9> 'char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1b546fb3878 <col:9> 'char *' lvalue ParmVar 0x1b546fb8780 'passwd' 'char *'
    |     | `-ImplicitCastExpr 0x1b546fb38d0 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1b546fb3898 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x1b546fb89f8 'pw_maxlen' 'size_t':'unsigned long long'
    |     `-ImplicitCastExpr 0x1b546fb3930 <col:29> 'char' <IntegralCast>
    |       `-IntegerLiteral 0x1b546fb3908 <col:29> 'int' 0
    |-CStyleCastExpr 0x1b546fb3e08 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x1b546fb3de8 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x1b546fb3d98 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x1b546fb3b08 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x1b546fb3af0 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x1b546fb3ad8 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x1b546fb3ab8 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x1b546fb3a98 <.//openssl//file_jk/after\apps\passwd.c:481:12, col:30> 'int' '<='
    |     |         |-CallExpr 0x1b546fb3a08 <col:12, col:25> 'unsigned long long'
    |     |         | |-ImplicitCastExpr 0x1b546fb39f0 <col:12> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
    |     |         | | `-DeclRefExpr 0x1b546fb3998 <col:12> 'unsigned long long (const char *)' Function 0x1b546ed5260 'strlen' 'unsigned long long (const char *)'
    |     |         | `-ImplicitCastExpr 0x1b546fb3a48 <col:19> 'const char *' <NoOp>
    |     |         |   `-ImplicitCastExpr 0x1b546fb3a30 <col:19> 'char *' <LValueToRValue>
    |     |         |     `-DeclRefExpr 0x1b546fb39b8 <col:19> 'char *' lvalue ParmVar 0x1b546fb8780 'passwd' 'char *'
    |     |         `-ImplicitCastExpr 0x1b546fb3a80 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
    |     |           `-DeclRefExpr 0x1b546fb3a60 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x1b546fb89f8 'pw_maxlen' 'size_t':'unsigned long long'
    |     `-ParenExpr 0x1b546fb3d78 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x1b546fb3d58 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x1b546fb3c80 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x1b546fb3c68 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x1b546fb3b28 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1b546f23e00 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x1b546fb3cd0 <<scratch space>:48:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1b546fb3cb8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1b546fb3b88 <col:1> 'unsigned short [28]' lvalue L"strlen(passwd) <= pw_maxlen"
    |         | |-ImplicitCastExpr 0x1b546fb3d00 <line:50:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1b546fb3ce8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1b546fb3bd8 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x1b546fb3d18 <line:51:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x1b546fb3c40 <col:1> 'int' 481
    |         `-IntegerLiteral 0x1b546fb3d30 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x1b546fb40d0 <.//openssl//file_jk/after\apps\passwd.c:485:5, line:486:41>
    | |-ImplicitCastExpr 0x1b546fb3e50 <line:485:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1b546fb3e30 <col:9> 'int' lvalue ParmVar 0x1b546fb8a78 'usecrypt' 'int'
    | `-BinaryOperator 0x1b546fb40b0 <line:486:9, col:41> 'char *' '='
    |   |-DeclRefExpr 0x1b546fb3e68 <col:9> 'char *' lvalue Var 0x1b546fb8d98 'hash' 'char *'
    |   `-ImplicitCastExpr 0x1b546fb4098 <col:16, col:41> 'char *' <IntegralToPointer>
    |     `-CallExpr 0x1b546fb4038 <col:16, col:41> 'int'
    |       |-ImplicitCastExpr 0x1b546fb4020 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x1b546fb3f90 <col:16> 'int ()' Function 0x1b546fb3ec8 'DES_crypt' 'int ()'
    |       |-ImplicitCastExpr 0x1b546fb4068 <col:26> 'char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x1b546fb3fb0 <col:26> 'char *' lvalue ParmVar 0x1b546fb8780 'passwd' 'char *'
    |       `-ImplicitCastExpr 0x1b546fb4080 <col:34, col:35> 'char *' <LValueToRValue>
    |         `-UnaryOperator 0x1b546fb4008 <col:34, col:35> 'char *' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x1b546fb3ff0 <col:35> 'char **' <LValueToRValue>
    |             `-DeclRefExpr 0x1b546fb3fd0 <col:35> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |-IfStmt 0x1b546fb4430 <line:489:5, line:490:63>
    | |-BinaryOperator 0x1b546fb4158 <line:489:9, col:17> 'int' '||'
    | | |-ImplicitCastExpr 0x1b546fb4128 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1b546fb40e8 <col:9> 'int' lvalue ParmVar 0x1b546fb8af8 'use1' 'int'
    | | `-ImplicitCastExpr 0x1b546fb4140 <col:17> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1b546fb4108 <col:17> 'int' lvalue ParmVar 0x1b546fb8b78 'useapr1' 'int'
    | `-BinaryOperator 0x1b546fb4410 <line:490:9, col:63> 'char *' '='
    |   |-DeclRefExpr 0x1b546fb4178 <col:9> 'char *' lvalue Var 0x1b546fb8d98 'hash' 'char *'
    |   `-CallExpr 0x1b546fb4360 <col:16, col:63> 'char *'
    |     |-ImplicitCastExpr 0x1b546fb4348 <col:16> 'char *(*)(const char *, const char *, const char *)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1b546fb4198 <col:16> 'char *(const char *, const char *, const char *)' Function 0x1b546fac580 'md5crypt' 'char *(const char *, const char *, const char *)'
    |     |-ImplicitCastExpr 0x1b546fb43b0 <col:25> 'const char *' <NoOp>
    |     | `-ImplicitCastExpr 0x1b546fb4398 <col:25> 'char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1b546fb41b8 <col:25> 'char *' lvalue ParmVar 0x1b546fb8780 'passwd' 'char *'
    |     |-ImplicitCastExpr 0x1b546fb43c8 <col:33, col:53> 'const char *' <NoOp>
    |     | `-ParenExpr 0x1b546fb42b0 <col:33, col:53> 'char *'
    |     |   `-ConditionalOperator 0x1b546fb4280 <col:34, col:47> 'char *'
    |     |     |-ImplicitCastExpr 0x1b546fb4238 <col:34> 'int' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x1b546fb41d8 <col:34> 'int' lvalue ParmVar 0x1b546fb8af8 'use1' 'int'
    |     |     |-ImplicitCastExpr 0x1b546fb4250 <col:41> 'char *' <ArrayToPointerDecay>
    |     |     | `-StringLiteral 0x1b546fb41f8 <col:41> 'char [2]' lvalue "1"
    |     |     `-ImplicitCastExpr 0x1b546fb4268 <col:47> 'char *' <ArrayToPointerDecay>
    |     |       `-StringLiteral 0x1b546fb4218 <col:47> 'char [5]' lvalue "apr1"
    |     `-ImplicitCastExpr 0x1b546fb43f8 <col:56, col:57> 'const char *' <NoOp>
    |       `-ImplicitCastExpr 0x1b546fb43e0 <col:56, col:57> 'char *' <LValueToRValue>
    |         `-UnaryOperator 0x1b546fb4308 <col:56, col:57> 'char *' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x1b546fb42f0 <col:57> 'char **' <LValueToRValue>
    |             `-DeclRefExpr 0x1b546fb42d0 <col:57> 'char **' lvalue ParmVar 0x1b546fb7638 'salt_p' 'char **'
    |-CStyleCastExpr 0x1b546fbe918 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x1b546fbe8f8 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x1b546fbe8a8 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x1b546fb4590 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x1b546fb4578 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x1b546fb4560 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x1b546fb4540 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x1b546fb4520 <.//openssl//file_jk/after\apps\passwd.c:492:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x1b546fb44f0 <.//openssl//file_jk/after\apps\passwd.c:492:12> 'char *' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x1b546fb4448 <col:12> 'char *' lvalue Var 0x1b546fb8d98 'hash' 'char *'
    |     |         `-ImplicitCastExpr 0x1b546fb4508 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |     |           `-ParenExpr 0x1b546fb44d0 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x1b546fb44a8 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x1b546fb4468 <col:26> 'int' 0
    |     `-ParenExpr 0x1b546fbe888 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x1b546fbe868 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x1b546fb46e0 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x1b546fb46c8 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x1b546fb45b0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1b546f23e00 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x1b546fbe7e0 <<scratch space>:53:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1b546fb4718 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1b546fb4608 <col:1> 'unsigned short [13]' lvalue L"hash != NULL"
    |         | |-ImplicitCastExpr 0x1b546fbe810 <line:55:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x1b546fbe7f8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x1b546fb4638 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x1b546fbe828 <line:56:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x1b546fb46a0 <col:1> 'int' 492
    |         `-IntegerLiteral 0x1b546fbe840 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-ReturnStmt 0x1b546fbecb0 <.//openssl//file_jk/after\apps\passwd.c:500:5, col:12>
    | `-IntegerLiteral 0x1b546fbec88 <col:12> 'int' 1
    `-LabelStmt 0x1b546fbecf8 <line:502:2, line:503:12> 'end'
      `-ReturnStmt 0x1b546fbece8 <col:5, col:12>
        `-IntegerLiteral 0x1b546fbecc0 <col:12> 'int' 0
