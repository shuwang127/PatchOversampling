TranslationUnitDecl 0x16a6ba88f28 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x16a6ba897c0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x16a6ba894c0 '__int128'
|-TypedefDecl 0x16a6ba89830 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x16a6ba894e0 'unsigned __int128'
|-TypedefDecl 0x16a6ba89b68 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x16a6ba89920 'struct __NSConstantString_tag'
|   `-Record 0x16a6ba89888 '__NSConstantString_tag'
|-TypedefDecl 0x16a6ba89bd8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x16a6ba89100 'unsigned long long'
|-TypedefDecl 0x16a6ba89c70 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x16a6ba89c30 'char *'
|   `-BuiltinType 0x16a6ba88fc0 'char'
|-TypedefDecl 0x16a6ba89ce0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x16a6ba89c30 'char *'
|   `-BuiltinType 0x16a6ba88fc0 'char'
|-TypedefDecl 0x16a6ba89da0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x16a6ba89100 'unsigned long long'
|-TypedefDecl 0x16a6ba89e10 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x16a6ba89c30 'char *'
|   `-BuiltinType 0x16a6ba88fc0 'char'
|-FunctionDecl 0x16a6d57f3b0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x16a6d57f450 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x16a6d57f4c0 <col:21> Implicit
|-FunctionDecl 0x16a6d57f518 prev 0x16a6d57f3b0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x16a6d57f240 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x16a6d57f608 <col:21> Inherited Implicit
|-TypedefDecl 0x16a6d57f648 prev 0x16a6ba89bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x16a6ba89100 'unsigned long long'
|-TypedefDecl 0x16a6d57f6f0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x16a6d57f6c0 'size_t' sugar
|   |-Typedef 0x16a6d57f648 'size_t'
|   `-BuiltinType 0x16a6ba89100 'unsigned long long'
|-TypedefDecl 0x16a6d57f760 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x16a6ba89060 'long long'
|-TypedefDecl 0x16a6d57f7d0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x16a6ba89060 'long long'
|-TypedefDecl 0x16a6d57f840 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x16a6ba890a0 'unsigned short'
|-TypedefDecl 0x16a6d57f8b0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x16a6ba890a0 'unsigned short'
|-TypedefDecl 0x16a6d57f920 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x16a6ba890a0 'unsigned short'
|-TypedefDecl 0x16a6d57f990 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x16a6ba89020 'int'
|-TypedefDecl 0x16a6d57fa00 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x16a6ba89040 'long'
|-TypedefDecl 0x16a6d57fa70 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x16a6ba89060 'long long'
|-TypedefDecl 0x16a6d57fb00 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x16a6d57fad0 '__time64_t' sugar
|   |-Typedef 0x16a6d57fa70 '__time64_t'
|   `-BuiltinType 0x16a6ba89060 'long long'
|-FunctionDecl 0x16a6d57fc78 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x16a6d57fe98 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x16a6d5c1f60 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x16a6d57ffd8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x16a6d580050 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x16a6d5800c8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x16a6d580148 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x16a6d5c1d00 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x16a6d5c2040 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x16a6d5c2100 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x16a6d5c2270 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x16a6d5c2220 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x16a6d5c21c0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x16a6d5c20e0 'struct threadlocaleinfostruct'
|       `-Record 0x16a6d5cedd0 'threadlocaleinfostruct'
|-TypedefDecl 0x16a6d5c2380 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x16a6d5c2330 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x16a6d5c22d0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x16a6d5c21a0 'struct threadmbcinfostruct'
|       `-Record 0x16a6d5c2100 'threadmbcinfostruct'
|-RecordDecl 0x16a6d5c23d8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x16a6d5c2490 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x16a6d5c2550 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x16a6d5c25e0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x16a6d5c2670 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x16a6d5c2728 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x16a6d5c26d0 'struct localeinfo_struct' sugar
|   `-RecordType 0x16a6d5c2530 'struct localeinfo_struct'
|     `-Record 0x16a6d5c2490 'localeinfo_struct'
|-TypedefDecl 0x16a6d5c2800 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x16a6d5c27b0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x16a6d5c26d0 'struct localeinfo_struct' sugar
|     `-RecordType 0x16a6d5c2530 'struct localeinfo_struct'
|       `-Record 0x16a6d5c2490 'localeinfo_struct'
|-RecordDecl 0x16a6d5c2878 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x16a6d5c2930 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x16a6d5c29a8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x16a6d5c2a68 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x16a6d5c2b00 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x16a6d5c2b70 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x16a6d5c2c28 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x16a6d5c2bd0 'struct localerefcount' sugar
|   `-RecordType 0x16a6d5c2910 'struct localerefcount'
|     `-Record 0x16a6d5c2878 'localerefcount'
|-RecordDecl 0x16a6d5cedd0 prev 0x16a6d5c2040 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x16a6d5cee50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x16a6d5ceec8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x16a6d5cef38 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x16a6d5cefa8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x16a6d5cf018 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x16a6d5cf1d8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x16a6d5cf248 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x16a6d5cf2b8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x16a6d5cf328 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x16a6d5cf398 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x16a6d5cf408 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x16a6d5cf460 parent 0x16a6ba88f28 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x16a6d5cf5f0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x16a6d5cf660 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x16a6d5cf6d0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x16a6d5cf740 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x16a6d5cf7e0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x16a6d5cf850 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x16a6d5cf960 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x16a6d5cfa98 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x16a6d5cfb48 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x16a6d5cfaf0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x16a6d5c20e0 'struct threadlocaleinfostruct'
|     `-Record 0x16a6d5cedd0 'threadlocaleinfostruct'
|-FunctionDecl 0x16a6d5cafa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x16a6d5cfbd0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x16a6d5cfc80 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x16a6d5cfd00 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x16a6d5cad90 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5cb368 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x16a6d5cb408 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x16a6d5cb470 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x16a6d5cb4d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16a6d5cb558 prev 0x16a6d5cb368 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x16a6d5cb090 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x16a6d5cb110 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x16a6d5cb188 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5cb918 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x16a6d5cb640 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x16a6d5cb6c0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x16a6d5cb738 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5cfe30 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d5cba00 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x16a6d5cba80 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x16a6d5cbaf8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d5cbb90 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d5d0138 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x16a6d5d01d8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x16a6d5d0240 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x16a6d5d02a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16a6d5d0328 prev 0x16a6d5d0138 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x16a6d5cff20 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x16a6d5cffa0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x16a6d5d0018 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5d06e8 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x16a6d5d0788 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16a6d5d07f0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x16a6d5d0858 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16a6d5d08d8 prev 0x16a6d5d06e8 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x16a6d5d0410 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x16a6d5d0490 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x16a6d5d0508 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5c8d70 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x16a6d5d09e8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x16a6d5d0a80 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16a6d5d0b00 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x16a6d5d0b78 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16a6d5c9138 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x16a6d5c91d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16a6d5c9240 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x16a6d5c92a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16a6d5c9328 prev 0x16a6d5c9138 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x16a6d5c8e60 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x16a6d5c8ee0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x16a6d5c8f58 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5c97a8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x16a6d5c9848 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16a6d5c98b0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x16a6d5c9918 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x16a6d5c9980 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16a6d5c9a08 prev 0x16a6d5c97a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x16a6d5c94f0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x16a6d5c9570 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x16a6d5c95f0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x16a6d5c9668 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d5c9ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x16a6d5c9f18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x16a6d5c9c90 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x16a6d5c9d80 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x16a6d5c9df8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d5c9fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x16a6d5ca3c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x16a6d5ca0f8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x16a6d5ca170 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d5ca1f0 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x16a6d5ca790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x16a6d5ca5a0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x16a6d5ca620 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x16a6d5ca840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d5cac50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x16a6d5ca988 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x16a6d5caa00 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d5caa80 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x16a6d5d30d0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x16a6d5d3170 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x16a6d5d31d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16a6d5d3250 prev 0x16a6d5d30d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x16a6d5d2ee8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x16a6d5d2f68 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x16a6d5d3300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d5d3658 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x16a6d5d3448 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x16a6d5d34c0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d5d3540 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x16a6d5d3980 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x16a6d5d3a20 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x16a6d5d3a88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16a6d5d3b00 prev 0x16a6d5d3980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x16a6d5d3800 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x16a6d5d3880 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x16a6d5d3bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d5d0ec0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x16a6d5d0f60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16a6d5d0fc8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16a6d5d1040 prev 0x16a6d5d0ec0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x16a6d5d3cf8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x16a6d5d3d78 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x16a6d5d1290 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x16a6d5d1330 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16a6d5d13a0 prev 0x16a6d5d1290 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x16a6d5d1120 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x16a6d5d1698 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x16a6d5d1478 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x16a6d5d14f0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5d18e8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x16a6d5d1778 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x16a6d5d17f0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x16a6d5d1c18 <line:131:1, line:133:1>
|   `-ReturnStmt 0x16a6d5d1c08 <line:132:5, col:51>
|     `-ConditionalOperator 0x16a6d5d1bd8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x16a6d5d1a48 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x16a6d5d1a28 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x16a6d5d19f8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x16a6d5d19b0 <col:13> 'const char *' lvalue ParmVar 0x16a6d5d1778 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x16a6d5d1a10 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x16a6d5d19d0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x16a6d5d1bc0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x16a6d5d1a68 <col:24> 'int' 0
|       `-CallExpr 0x16a6d5d1b60 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x16a6d5d1b48 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x16a6d5d1a90 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x16a6d5d1698 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x16a6d5d1b90 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x16a6d5d1ab0 <col:36> 'const char *' lvalue ParmVar 0x16a6d5d1778 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x16a6d5d1ba8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x16a6d5d1ad0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x16a6d5d17f0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5cbed8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x16a6d5d1c48 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x16a6d5d1cc0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16a6d5d1d40 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x16a6d5cbda0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16a6d5cc1e0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x16a6d5cc280 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x16a6d5cc2e8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x16a6d5cc350 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16a6d5cc3d0 prev 0x16a6d5cc1e0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x16a6d5cbfc8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x16a6d5cc048 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x16a6d5cc0c0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5cc608 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x16a6d5cc4b8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x16a6d5cc8d0 <line:152:54> col:54 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x16a6d5cc970 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16a6d5cc9d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x16a6d5cca50 prev 0x16a6d5cc8d0 <col:38, col:100> col:54 used strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x16a6d5cc6e0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x16a6d5cc760 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x16a6d5cccb0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16a6d5ccb30 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x16a6d5ccbb0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x16a6d5da000 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16a6d5d9e80 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x16a6d5d9f00 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x16a6d5da3b8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x16a6d5da0e0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d5da160 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x16a6d5da1d8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d5da620 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16a6d5da4a0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x16a6d5da520 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x16a6d5da918 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x16a6d5da700 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d5da780 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x16a6d5da7f8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d5dab80 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16a6d5daa00 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x16a6d5daa80 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x16a6d5d5e40 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x16a6d5dac60 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d5dace0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x16a6d5dad58 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d5d61f8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16a6d5d5f28 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d5d5fa8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x16a6d5d6020 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5d6660 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d5d62e0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d5d6360 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x16a6d5d63d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d5d6450 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d5d6968 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16a6d5d6750 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d5d67d0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x16a6d5d6848 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5d6d00 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d5d6a50 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d5d6ad0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x16a6d5d6b48 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d5d6bc0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d5d8088 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x16a6d5d8128 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16a6d5d8190 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16a6d5d8208 prev 0x16a6d5d8088 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x16a6d5d7e60 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x16a6d5d7ee0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x16a6d5d84c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x16a6d5d83e0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x16a6d5d8568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d5d8940 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x16a6d5d86b0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x16a6d5d8728 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d5d87a8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x16a6d5d8c58 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x16a6d5d8cf8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x16a6d5d8d68 prev 0x16a6d5d8c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x16a6d5d8b20 <col:90> col:93 'int'
| `-DeprecatedAttr 0x16a6d5d8e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d5d9180 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x16a6d5d8f70 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x16a6d5d8fe8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d5d9068 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x16a6d5d9488 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x16a6d5d9268 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x16a6d5d92e0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5d9778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16a6d5d9628 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x16a6d5d9820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d5d9c30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d5d9968 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x16a6d5d99e0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d5d9a58 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d5db040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x16a6d5d9dd8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x16a6d5dae90 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16a6d5db0f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d5db5a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x16a6d5db238 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x16a6d5db2b0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16a6d5db330 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x16a6d5db3a8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16a6d5dba28 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16a6d5dbac8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x16a6d5dbb30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16a6d5dbb98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16a6d5dbc18 prev 0x16a6d5dba28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16a6d5db758 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x16a6d5db7d8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x16a6d5db850 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d5dbcd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d5d7000 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16a6d5d70a0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x16a6d5d7108 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16a6d5d7170 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16a6d5d71f0 prev 0x16a6d5d7000 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16a6d5dbe18 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d5d6e68 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x16a6d5d6ee0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5d74f0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16a6d5d72d8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d5d7358 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x16a6d5d73d0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5d7888 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d5d75d8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d5d7658 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x16a6d5d76d0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d5d7748 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d5d7c20 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x16a6d5d7978 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x16a6d5d79f0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16a6d5d7a70 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x16a6d5d7ae8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16a6d5d3fb8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16a6d5d4058 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x16a6d5d40c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16a6d5d4128 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16a6d5d41a8 prev 0x16a6d5d3fb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16a6d5d7dd0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x16a6d5d3e20 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x16a6d5d3e98 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d5d4260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d5d4718 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x16a6d5d43a8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x16a6d5d4420 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x16a6d5d44a0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x16a6d5d4518 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d5d4b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x16a6d5d48c8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x16a6d5d4948 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x16a6d5d49c0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d5d4c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d5d4fa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x16a6d5d5040 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16a6d5d50a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16a6d5d5120 prev 0x16a6d5d4fa0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x16a6d5d4d98 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x16a6d5d4e30 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x16a6d5d5380 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x16a6d5d5420 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16a6d5d5488 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x16a6d5d5500 prev 0x16a6d5d5380 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x16a6d5d5200 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x16a6d5d5280 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x16a6d5d56c0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x16a6d5d55e0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x16a6d5d5910 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x16a6d5d59b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16a6d5d5a18 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16a6d5d5a90 prev 0x16a6d5d5910 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x16a6d5d5798 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x16a6d5d5818 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x16a6d5d5cf0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x16a6d5d5d90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16a6d64ef30 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16a6d64efa8 prev 0x16a6d5d5cf0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x16a6d5d5b70 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x16a6d5d5bf0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x16a6d64f2c8 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x16a6d64f368 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x16a6d64f3d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16a6d64f448 prev 0x16a6d64f2c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x16a6d64f148 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x16a6d64f1c8 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x16a6d64f4f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d64f8d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x16a6d64f640 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x16a6d64f6c0 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x16a6d64f740 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x16a6d64fb30 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x16a6d64f9c0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x16a6d64fa38 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d64fdb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16a6d64fcd0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x16a6d64fe58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d6562a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d6560a0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x16a6d656118 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d656190 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d6565c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x16a6d656450 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x16a6d6564c8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16a6d656678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d656a90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x16a6d656b30 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x16a6d656b98 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x16a6d656c00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16a6d656c80 prev 0x16a6d656a90 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x16a6d6567c0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x16a6d656840 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x16a6d6568b8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d6530a8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d656d68 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x16a6d656de8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x16a6d656e60 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d656ed8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d653350 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x16a6d6533f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x16a6d653460 prev 0x16a6d653350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x16a6d653270 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x16a6d653508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x16a6d653850 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16a6d6536d0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d653750 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x16a6d653900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x16a6d653c48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x16a6d653ac8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d653b48 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x16a6d653cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x16a6d656fe8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16a6d653ec0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x16a6d657090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x16a6d6574a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x16a6d657290 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x16a6d657310 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x16a6d657388 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d657560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x16a6d657940 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x16a6d657728 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x16a6d6577a8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x16a6d657820 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d6579f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x16a6d657ca0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16a6d657bc0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x16a6d657d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x16a6d654080 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x16a6d657f10 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x16a6d653f80 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x16a6d654130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x16a6d6543d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x16a6d6542f8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x16a6d654480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x16a6d654710 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x16a6d6545a0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x16a6d654aa0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x16a6d6547e0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16a6d654858 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d6548d0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x16a6d654e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d654c40 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16a6d654cb8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x16a6d654f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d650258 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x16a6d6502f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x16a6d650360 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x16a6d6503d8 prev 0x16a6d650258 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x16a6d650038 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16a6d6500b0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x16a6d6506d0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x16a6d650770 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x16a6d6507d8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x16a6d650850 prev 0x16a6d6506d0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x16a6d6504b0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16a6d650528 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x16a6d650b30 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x16a6d650928 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16a6d6509a0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d650a18 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x16a6d650e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d650cd0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16a6d650d48 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x16a6d650ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d6582d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d6580b8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16a6d658130 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x16a6d658520 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x16a6d6585c0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x16a6d658630 prev 0x16a6d658520 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x16a6d6583b0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x16a6d658918 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x16a6d658700 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16a6d658778 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d658b60 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x16a6d6589f0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x16a6d658a68 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x16a6d658ef8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x16a6d658ee8 <line:307:5, col:56>
|     `-ConditionalOperator 0x16a6d658eb8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x16a6d658d20 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x16a6d658d00 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x16a6d658cd0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x16a6d658c28 <col:13> 'const wchar_t *' lvalue ParmVar 0x16a6d6589f0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x16a6d658ce8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x16a6d658cb0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x16a6d658c88 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x16a6d658c48 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x16a6d658ea0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x16a6d658d40 <col:29> 'int' 0
|       `-CallExpr 0x16a6d658e40 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x16a6d658e28 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x16a6d658d68 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x16a6d658918 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x16a6d658e70 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x16a6d658d88 <col:41> 'const wchar_t *' lvalue ParmVar 0x16a6d6589f0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x16a6d658e88 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x16a6d658da8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x16a6d658a68 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d651248 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x16a6d658f20 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16a6d650f50 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16a6d650fc8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16a6d651040 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16a6d6516b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16a6d6513f0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16a6d651468 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x16a6d6514e0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d651768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d651b78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x16a6d651c18 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x16a6d651c80 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x16a6d651ce8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x16a6d651d68 prev 0x16a6d651b78 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x16a6d6518a8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d651920 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16a6d651998 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d659180 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x16a6d651e48 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16a6d651ec0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x16a6d658fd0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16a6d659048 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x16a6d659530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16a6d659328 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x16a6d6593a0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x16a6d659418 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d6595e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d659948 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d659728 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16a6d6597a0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x16a6d659b90 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x16a6d659a20 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16a6d659a98 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x16a6d659dd8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d659c68 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16a6d659ce0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x16a6d651fc0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d659eb0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x16a6d659f28 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x16a6d6522c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d652158 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x16a6d6521d0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x16a6d652378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d6527e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x16a6d6524b8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x16a6d652530 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x16a6d652610 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x16a6d652b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x16a6d652988 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x16a6d652ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d65c070 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x16a6d652ce8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x16a6d652d60 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d652de0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x16a6d65c320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x16a6d65c248 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x16a6d65c3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d65c790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x16a6d65c508 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x16a6d65c580 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d65c5f8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x16a6d65c9e8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d65c870 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16a6d65c8e8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x16a6d65cd88 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16a6d65cac0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d65cb38 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16a6d65cbb0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d65f0b8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16a6d65ce68 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d65cee0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16a6d65cf58 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d65f510 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d65f198 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d65f210 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16a6d65f288 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d65f300 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d65f968 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x16a6d65f5f8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16a6d65f670 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x16a6d65f6e8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x16a6d65f760 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d65fdd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x16a6d65fb10 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x16a6d65fb88 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x16a6d65fc00 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d65fe88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d660150 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x16a6d65ffc8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x16a6d6604e0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x16a6d660220 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16a6d660298 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d660310 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x16a6d660898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x16a6d660680 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x16a6d6606f8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x16a6d660948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d660ca8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x16a6d660a88 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x16a6d660b00 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d660f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16a6d660e40 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x16a6d660fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d661410 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d661148 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x16a6d6611c0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d661238 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d6617c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16a6d6615b0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x16a6d661628 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16a6d661878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d661b28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x16a6d6619b8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x16a6d661a30 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d661d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16a6d661cc0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x16a6d661e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d65e1b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d661f80 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x16a6d65e020 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d65e098 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d65e4c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16a6d65e350 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x16a6d65e3c8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x16a6d65e570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x16a6d65e970 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16a6d65e6b0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16a6d65e728 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x16a6d65e7a0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d65edb8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d65ea50 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x16a6d65eac8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x16a6d65eb40 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d65ebb8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d659fe0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d65eea0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16a6d65ef18 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x16a6d65a2c8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16a6d65a0b8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d65a130 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16a6d65a1a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d65a520 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d65a3a8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x16a6d65a420 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x16a6d65a808 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x16a6d65a5f8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d65a670 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16a6d65a6e8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d65aaf8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16a6d65a8e8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d65a960 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16a6d65a9d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d65ae80 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d65abd8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d65ac50 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16a6d65acc8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d65ad40 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d6621f8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16a6d65af68 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d662060 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x16a6d6620d8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x16a6d662580 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x16a6d6622d8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d662350 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16a6d6623c8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x16a6d662440 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x16a6d6627e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x16a6d662708 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x16a6d662888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x16a6d662bc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d662a48 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d662ac0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x16a6d662c70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x16a6d664080 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x16a6d662e30 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d662ea8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x16a6d662f20 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d664138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x16a6d664500 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x16a6d6642f8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x16a6d664370 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x16a6d6643e8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x16a6d6645b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x16a6d664850 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16a6d664778 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x16a6d6648f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x16a6d664c28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x16a6d664ab8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x16a6d664b30 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x16a6d664cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x16a6d664f70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16a6d664e98 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x16a6d665018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x16a6d668310 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x16a6d668238 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x16a6d6683b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x16a6d6686f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x16a6d668578 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x16a6d6685f0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x16a6d6687a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x16a6d668b90 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x16a6d6688c0 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x16a6d668938 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x16a6d6689b8 <col:98, col:107> col:107 _Line 'unsigned int'
|-TypedefDecl 0x16a6d668c78 <D:\Microsoft Visual Studio 12.0\VC\include\signal.h:28:1, col:13> col:13 sig_atomic_t 'int'
| `-BuiltinType 0x16a6ba89020 'int'
|-FunctionDecl 0x16a6d668e30 <line:88:1, col:45> col:25 __pxcptinfoptrs 'void **(void) __attribute__((cdecl))':'void **(void)' extern
|-FunctionDecl 0x16a6d66b400 <line:94:9, col:100> col:33 signal 'void (*(int, void (*)(int) __attribute__((cdecl))))(int) __attribute__((cdecl)) __attribute__((cdecl))'
| |-ParmVarDecl 0x16a6d668f00 <col:45, col:49> col:49 _SigNum 'int'
| `-ParmVarDecl 0x16a6d66b188 <col:67, col:83> col:83 _Func 'void (*)(int) __attribute__((cdecl))'
|-FunctionDecl 0x16a6d66b628 <line:97:9, col:43> col:21 raise 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x16a6d66b4e0 <col:32, col:36> col:36 _SigNum 'int'
|-FunctionDecl 0x16a6d66b890 <.//openssl//file_jk/after\apps/apps.h:43:1, col:55> col:5 app_RAND_load_file 'int (const char *, int)'
| |-ParmVarDecl 0x16a6d66b700 <col:24, col:36> col:36 file 'const char *'
| `-ParmVarDecl 0x16a6d66b780 <col:42, col:46> col:46 dont_warn 'int'
|-FunctionDecl 0x16a6d66ba50 <line:44:1, col:41> col:5 app_RAND_write_file 'int (const char *)'
| `-ParmVarDecl 0x16a6d66b970 <col:25, col:37> col:37 file 'const char *'
|-FunctionDecl 0x16a6d66bba8 <line:48:1, col:36> col:6 app_RAND_allow_write_file 'void (void)'
|-FunctionDecl 0x16a6d66bd60 <line:49:1, col:36> col:6 app_RAND_load_files 'long (char *)'
| `-ParmVarDecl 0x16a6d66bc78 <col:26, col:32> col:32 file 'char *'
|-VarDecl 0x16a6d66be38 <line:54:1, col:14> col:14 default_config_file 'char *' extern
|-VarDecl 0x16a6d66bed0 <line:55:1, col:13> col:13 invalid bio_in 'int *' extern
|-VarDecl 0x16a6d66bf50 <line:56:1, col:13> col:13 invalid bio_out 'int *' extern
|-VarDecl 0x16a6d66bfd0 <line:57:1, col:13> col:13 invalid bio_err 'int *' extern
|-FunctionDecl 0x16a6d66d170 <line:58:1, col:27> col:6 invalid dup_bio_in 'int *(int)'
| `-ParmVarDecl 0x16a6d66c050 <col:17, col:21> col:21 format 'int'
|-FunctionDecl 0x16a6d66d2e0 <line:59:1, col:28> col:6 invalid dup_bio_out 'int *(int)'
| `-ParmVarDecl 0x16a6d66d230 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x16a6d66d450 <line:60:1, col:28> col:6 invalid dup_bio_err 'int *(int)'
| `-ParmVarDecl 0x16a6d66d3a0 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x16a6d66d740 <line:61:1, col:66> col:6 invalid bio_open_owner 'int *(const char *, int, int)'
| |-ParmVarDecl 0x16a6d66d510 <col:21, col:33> col:33 filename 'const char *'
| |-ParmVarDecl 0x16a6d66d590 <col:43, col:47> col:47 format 'int'
| `-ParmVarDecl 0x16a6d66d610 <col:55, col:59> col:59 private 'int'
|-FunctionDecl 0x16a6d66da40 <line:62:1, col:66> col:6 invalid bio_open_default 'int *(const char *, char, int)'
| |-ParmVarDecl 0x16a6d66d810 <col:23, col:35> col:35 filename 'const char *'
| |-ParmVarDecl 0x16a6d66d888 <col:45, col:50> col:50 mode 'char'
| `-ParmVarDecl 0x16a6d66d908 <col:56, col:60> col:60 format 'int'
|-FunctionDecl 0x16a6d66dcf8 <line:63:1, col:72> col:6 invalid bio_open_default_quiet 'int *(const char *, char, int)'
| |-ParmVarDecl 0x16a6d66db10 <col:29, col:41> col:41 filename 'const char *'
| |-ParmVarDecl 0x16a6d66db88 <col:51, col:56> col:56 mode 'char'
| `-ParmVarDecl 0x16a6d66dc08 <col:62, col:66> col:66 format 'int'
|-FunctionDecl 0x16a6d66deb0 <line:64:1, col:43> col:7 invalid app_load_config 'int *(const char *)'
| `-ParmVarDecl 0x16a6d66ddc8 <col:23, col:35> col:35 filename 'const char *'
|-FunctionDecl 0x16a6d66e020 <line:65:1, col:49> col:7 invalid app_load_config_quiet 'int *(const char *)'
| `-ParmVarDecl 0x16a6d66df70 <col:29, col:41> col:41 filename 'const char *'
|-FunctionDecl 0x16a6d666170 <line:66:1, col:40> col:5 invalid app_load_modules 'int (const int *)'
| `-ParmVarDecl 0x16a6d6660a0 <col:22, col:34> col:34 invalid config 'const int *'
|-FunctionDecl 0x16a6d6662f8 <line:67:1, col:23> col:6 invalid unbuffer 'void (int *)'
| `-ParmVarDecl 0x16a6d666230 <col:15, col:21> col:21 invalid fp 'int *'
|-FunctionDecl 0x16a6d666448 <line:68:1, col:27> col:6 invalid wait_for_async 'void (int *)'
| `-ParmVarDecl 0x16a6d6663b8 <col:21, col:26> col:26 invalid s 'int *'
|-FunctionDecl 0x16a6d6665c8 <line:73:1, col:52> col:6 invalid corrupt_signature 'void (const int *)'
| `-ParmVarDecl 0x16a6d666508 <col:24, col:43> col:43 invalid signature 'const int *'
|-FunctionDecl 0x16a6d666900 <line:74:1, line:75:28> line:74:5 invalid set_cert_times 'int (int *, const char *, const char *, int)'
| |-ParmVarDecl 0x16a6d666688 <col:20, col:26> col:26 invalid x 'int *'
| |-ParmVarDecl 0x16a6d666708 <col:29, col:41> col:41 startdate 'const char *'
| |-ParmVarDecl 0x16a6d666788 <col:52, col:64> col:64 enddate 'const char *'
| `-ParmVarDecl 0x16a6d666808 <line:75:20, col:24> col:24 days 'int'
|-VarDecl 0x16a6d666a38 <line:291:1, col:32> col:19 OPT_HELP_STR 'const char []' extern
|-VarDecl 0x16a6d666ad8 <line:292:1, col:32> col:19 OPT_MORE_STR 'const char []' extern
|-RecordDecl 0x16a6d666b58 <line:293:9, line:304:1> line:293:16 struct options_st definition
| |-FieldDecl 0x16a6d666c28 <line:294:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x16a6d666c98 <line:295:5, col:9> col:9 retval 'int'
| |-FieldDecl 0x16a6d666d08 <line:302:5, col:9> col:9 valtype 'int'
| `-FieldDecl 0x16a6d666d78 <line:303:5, col:17> col:17 helpstr 'const char *'
|-TypedefDecl 0x16a6d666e28 <line:293:1, line:304:3> col:3 referenced OPTIONS 'struct options_st':'struct options_st'
| `-ElaboratedType 0x16a6d666dd0 'struct options_st' sugar
|   `-RecordType 0x16a6d666bf0 'struct options_st'
|     `-Record 0x16a6d666b58 'options_st'
|-RecordDecl 0x16a6d666e98 <line:311:9, line:314:1> line:311:16 struct string_int_pair_st definition
| |-FieldDecl 0x16a6d666f68 <line:312:5, col:17> col:17 name 'const char *'
| `-FieldDecl 0x16a6d666fd8 <line:313:5, col:9> col:9 retval 'int'
|-TypedefDecl 0x16a6d616fb0 <line:311:1, line:314:3> col:3 referenced OPT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x16a6d667030 'struct string_int_pair_st' sugar
|   `-RecordType 0x16a6d666f30 'struct string_int_pair_st'
|     `-Record 0x16a6d666e98 'string_int_pair_st'
|-TypedefDecl 0x16a6d617028 <line:311:1, line:314:13> col:13 STRINT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x16a6d667030 'struct string_int_pair_st' sugar
|   `-RecordType 0x16a6d666f30 'struct string_int_pair_st'
|     `-Record 0x16a6d666e98 'string_int_pair_st'
|-FunctionDecl 0x16a6d617168 <line:334:1, col:37> col:7 opt_progname 'char *(const char *)'
| `-ParmVarDecl 0x16a6d6170b8 <col:20, col:32> col:32 argv0 'const char *'
|-FunctionDecl 0x16a6d6172f0 <line:335:1, col:23> col:7 opt_getprog 'char *(void)'
|-FunctionDecl 0x16a6d6176b0 <line:336:1, col:52> col:7 used opt_init 'char *(int, char **, const OPTIONS *)'
| |-ParmVarDecl 0x16a6d6173c0 <col:16, col:20> col:20 ac 'int'
| |-ParmVarDecl 0x16a6d617440 <col:24, col:31> col:31 av 'char **'
| `-ParmVarDecl 0x16a6d617538 <col:35, col:51> col:51 o 'const OPTIONS *'
|-FunctionDecl 0x16a6d617850 <line:337:1, col:18> col:5 used opt_next 'int (void)'
|-FunctionDecl 0x16a6d617b50 <line:338:1, col:63> col:5 opt_format 'int (const char *, unsigned long, int *)'
| |-ParmVarDecl 0x16a6d617920 <col:16, col:28> col:28 s 'const char *'
| |-ParmVarDecl 0x16a6d6179a0 <col:31, col:45> col:45 flags 'unsigned long'
| `-ParmVarDecl 0x16a6d617a20 <col:52, col:57> col:57 result 'int *'
|-FunctionDecl 0x16a6d617dc0 <line:339:1, col:41> col:5 opt_int 'int (const char *, int *)'
| |-ParmVarDecl 0x16a6d617c38 <col:13, col:25> col:25 arg 'const char *'
| `-ParmVarDecl 0x16a6d617cb8 <col:30, col:35> col:35 result 'int *'
|-FunctionDecl 0x16a6d61b100 <line:340:1, col:53> col:5 opt_ulong 'int (const char *, unsigned long *)'
| |-ParmVarDecl 0x16a6d617ea0 <col:15, col:27> col:27 arg 'const char *'
| `-ParmVarDecl 0x16a6d61aff0 <col:32, col:47> col:47 result 'unsigned long *'
|-FunctionDecl 0x16a6d61b3a0 <line:341:1, col:43> col:5 opt_long 'int (const char *, long *)'
| |-ParmVarDecl 0x16a6d61b1e0 <col:14, col:26> col:26 arg 'const char *'
| `-ParmVarDecl 0x16a6d61b290 <col:31, col:37> col:37 result 'long *'
|-FunctionDecl 0x16a6d61b770 <line:352:1, col:66> col:5 opt_pair 'int (const char *, const OPT_PAIR *, int *)'
| |-ParmVarDecl 0x16a6d61b480 <col:14, col:26> col:26 arg 'const char *'
| |-ParmVarDecl 0x16a6d61b578 <col:31, col:48> col:48 pairs 'const OPT_PAIR *'
| `-ParmVarDecl 0x16a6d61b5f8 <col:55, col:60> col:60 result 'int *'
|-FunctionDecl 0x16a6d61b9e0 <line:353:1, col:60> col:5 invalid opt_cipher 'int (const char *, const int **)'
| |-ParmVarDecl 0x16a6d61b858 <col:16, col:28> col:28 name 'const char *'
| `-ParmVarDecl 0x16a6d61b908 <col:34, col:53> col:53 invalid cipherp 'const int **'
|-FunctionDecl 0x16a6d61bbd0 <line:354:1, col:48> col:5 invalid opt_md 'int (const char *, const int **)'
| |-ParmVarDecl 0x16a6d61baa8 <col:12, col:24> col:24 name 'const char *'
| `-ParmVarDecl 0x16a6d61bb30 <col:30, col:45> col:45 invalid mdp 'const int **'
|-FunctionDecl 0x16a6d61bd20 <line:355:1, col:19> col:7 used opt_arg 'char *(void)'
|-FunctionDecl 0x16a6d61be78 <line:356:1, col:20> col:7 opt_flag 'char *(void)'
|-FunctionDecl 0x16a6d615fa0 <line:357:1, col:23> col:7 opt_unknown 'char *(void)'
|-FunctionDecl 0x16a6d6160f8 <line:358:1, col:21> col:7 opt_reset 'char *(void)'
|-FunctionDecl 0x16a6d616280 <line:359:1, col:21> col:8 used opt_rest 'char **(void)'
|-FunctionDecl 0x16a6d6163d8 <line:360:1, col:22> col:5 used opt_num_rest 'int (void)'
|-FunctionDecl 0x16a6d616600 <line:361:1, col:45> col:5 invalid opt_verify 'int (int, int *)'
| |-ParmVarDecl 0x16a6d6164a8 <col:16, col:20> col:20 i 'int'
| `-ParmVarDecl 0x16a6d616528 <col:23, col:42> col:42 invalid vpm 'int *'
|-FunctionDecl 0x16a6d6167c8 <line:362:1, col:35> col:6 used opt_help 'void (const OPTIONS *)'
| `-ParmVarDecl 0x16a6d6166c0 <col:15, col:31> col:31 list 'const OPTIONS *'
|-FunctionDecl 0x16a6d616a30 <line:363:1, col:56> col:5 opt_format_error 'int (const char *, unsigned long)'
| |-ParmVarDecl 0x16a6d6168a0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x16a6d616920 <col:37, col:51> col:51 flags 'unsigned long'
|-RecordDecl 0x16a6d616af8 <line:365:9, line:369:1> line:365:16 struct args_st definition
| |-FieldDecl 0x16a6d616bc8 <line:366:5, col:9> col:9 size 'int'
| |-FieldDecl 0x16a6d616c38 <line:367:5, col:9> col:9 argc 'int'
| `-FieldDecl 0x16a6d616ca8 <line:368:5, col:12> col:12 argv 'char **'
|-TypedefDecl 0x16a6d616d58 <line:365:1, line:369:3> col:3 referenced ARGS 'struct args_st':'struct args_st'
| `-ElaboratedType 0x16a6d616d00 'struct args_st' sugar
|   `-RecordType 0x16a6d616b90 'struct args_st'
|     `-Record 0x16a6d616af8 'args_st'
|-FunctionDecl 0x16a6d614030 <line:376:1, col:41> col:8 copy_argv 'char **(int *, char **)'
| |-ParmVarDecl 0x16a6d616de0 <col:18, col:23> col:23 argc 'int *'
| `-ParmVarDecl 0x16a6d616ed0 <col:29, col:40> col:35 argv 'char **':'char **'
|-FunctionDecl 0x16a6d614378 <line:381:1, col:45> col:6 win32_utf8argv 'void (int *, char ***)'
| |-ParmVarDecl 0x16a6d614110 <col:21, col:26> col:26 argc 'int *'
| `-ParmVarDecl 0x16a6d614230 <col:32, col:44> col:39 argv 'char ***':'char ***'
|-RecordDecl 0x16a6d614440 <line:385:9, line:388:1> line:385:16 struct pw_cb_data definition
| |-FieldDecl 0x16a6d614518 <line:386:5, col:17> col:17 password 'const void *'
| `-FieldDecl 0x16a6d614588 <line:387:5, col:17> col:17 prompt_info 'const char *'
|-TypedefDecl 0x16a6d614638 <line:385:1, line:388:3> col:3 referenced PW_CB_DATA 'struct pw_cb_data':'struct pw_cb_data'
| `-ElaboratedType 0x16a6d6145e0 'struct pw_cb_data' sugar
|   `-RecordType 0x16a6d6144e0 'struct pw_cb_data'
|     `-Record 0x16a6d614440 'pw_cb_data'
|-FunctionDecl 0x16a6d614a60 <line:390:1, col:77> col:5 password_callback 'int (char *, int, int, PW_CB_DATA *)'
| |-ParmVarDecl 0x16a6d6146c0 <col:23, col:29> col:29 buf 'char *'
| |-ParmVarDecl 0x16a6d614740 <col:34, col:38> col:38 bufsiz 'int'
| |-ParmVarDecl 0x16a6d6147c0 <col:46, col:50> col:50 verify 'int'
| `-ParmVarDecl 0x16a6d6148b8 <col:58, col:70> col:70 cb_data 'PW_CB_DATA *'
|-FunctionDecl 0x16a6d614bd8 <line:392:1, col:25> col:5 setup_ui_method 'int (void)'
|-FunctionDecl 0x16a6d614d28 <line:393:1, col:28> col:6 destroy_ui_method 'void (void)'
|-FunctionDecl 0x16a6d6200f0 <line:395:1, col:37> col:5 chopup_args 'int (ARGS *, char *)'
| |-ParmVarDecl 0x16a6d614e68 <col:17, col:23> col:23 arg 'ARGS *'
| `-ParmVarDecl 0x16a6d614ee8 <col:28, col:34> col:34 buf 'char *'
|-FunctionDecl 0x16a6d620508 <line:401:1, line:402:43> line:401:6 invalid print_bignum_var 'void (int *, const int *, const char *, int, unsigned char *)'
| |-ParmVarDecl 0x16a6d6201d0 <col:23, <invalid sloc>> col:28 invalid 'int *'
| |-ParmVarDecl 0x16a6d620250 <col:30, <invalid sloc>> col:44 invalid 'const int *'
| |-ParmVarDecl 0x16a6d6202d0 <col:46, col:56> col:57 'const char *'
| |-ParmVarDecl 0x16a6d620350 <line:402:23> col:26 'int'
| `-ParmVarDecl 0x16a6d620400 <col:28, col:42> col:43 'unsigned char *'
|-FunctionDecl 0x16a6d620858 <line:403:1, col:65> col:6 invalid print_array 'void (int *, const char *, int, const unsigned char *)'
| |-ParmVarDecl 0x16a6d6205e8 <col:18, <invalid sloc>> col:23 invalid 'int *'
| |-ParmVarDecl 0x16a6d620668 <col:25, col:36> col:37 'const char *'
| |-ParmVarDecl 0x16a6d6206e8 <col:39> col:42 'int'
| `-ParmVarDecl 0x16a6d620768 <col:44, col:64> col:65 'const unsigned char *'
|-FunctionDecl 0x16a6d620ac0 <line:404:1, col:54> col:5 set_cert_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x16a6d620930 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x16a6d6209b0 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x16a6d620cf0 <line:405:1, col:54> col:5 set_name_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x16a6d620ba0 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x16a6d620c20 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x16a6d620f60 <line:406:1, col:49> col:5 set_ext_copy 'int (int *, const char *)'
| |-ParmVarDecl 0x16a6d620dd0 <col:18, col:23> col:23 copy_type 'int *'
| `-ParmVarDecl 0x16a6d620e50 <col:34, col:46> col:46 arg 'const char *'
|-FunctionDecl 0x16a6d61d200 <line:407:1, col:58> col:5 invalid copy_extensions 'int (int *, int *, int)'
| |-ParmVarDecl 0x16a6d61d010 <col:21, col:27> col:27 invalid x 'int *'
| |-ParmVarDecl 0x16a6d61d090 <col:30, col:40> col:40 invalid req 'int *'
| `-ParmVarDecl 0x16a6d61d110 <col:45, col:49> col:49 copy_type 'int'
|-FunctionDecl 0x16a6d61d5b0 <line:408:1, col:78> col:5 app_passwd 'int (const char *, const char *, char **, char **)'
| |-ParmVarDecl 0x16a6d61d2d0 <col:16, col:28> col:28 arg1 'const char *'
| |-ParmVarDecl 0x16a6d61d350 <col:34, col:46> col:46 arg2 'const char *'
| |-ParmVarDecl 0x16a6d61d3d0 <col:52, col:59> col:59 pass1 'char **'
| `-ParmVarDecl 0x16a6d61d450 <col:66, col:73> col:73 pass2 'char **'
|-FunctionDecl 0x16a6d61d770 <line:409:1, col:31> col:5 invalid add_oid_section 'int (int *)'
| `-ParmVarDecl 0x16a6d61d6a0 <col:21, col:27> col:27 invalid conf 'int *'
|-FunctionDecl 0x16a6d61da60 <line:410:1, col:71> col:7 invalid load_cert 'int *(const char *, int, const char *)'
| |-ParmVarDecl 0x16a6d61d830 <col:17, col:29> col:29 file 'const char *'
| |-ParmVarDecl 0x16a6d61d8b0 <col:35, col:39> col:39 format 'int'
| `-ParmVarDecl 0x16a6d61d930 <col:47, col:59> col:59 cert_descrip 'const char *'
|-FunctionDecl 0x16a6d61dcc0 <line:411:1, col:50> col:11 invalid load_crl 'int *(const char *, int)'
| |-ParmVarDecl 0x16a6d61db30 <col:20, col:32> col:32 infile 'const char *'
| `-ParmVarDecl 0x16a6d61dbb0 <col:40, col:44> col:44 format 'int'
|-FunctionDecl 0x16a6d621170 <line:412:1, line:413:72> line:412:11 invalid load_key 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x16a6d61dd88 <col:20, col:32> col:32 file 'const char *'
| |-ParmVarDecl 0x16a6d61de08 <col:38, col:42> col:42 format 'int'
| |-ParmVarDecl 0x16a6d61de88 <col:50, col:54> col:54 maybe_stdin 'int'
| |-ParmVarDecl 0x16a6d61df08 <line:413:20, col:32> col:32 pass 'const char *'
| |-ParmVarDecl 0x16a6d61df88 <col:38, col:46> col:46 invalid e 'int *'
| `-ParmVarDecl 0x16a6d621050 <col:49, col:61> col:61 key_descrip 'const char *'
|-FunctionDecl 0x16a6d621598 <line:414:1, line:415:75> line:414:11 invalid load_pubkey 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x16a6d621258 <col:23, col:35> col:35 file 'const char *'
| |-ParmVarDecl 0x16a6d6212d8 <col:41, col:45> col:45 format 'int'
| |-ParmVarDecl 0x16a6d621358 <col:53, col:57> col:57 maybe_stdin 'int'
| |-ParmVarDecl 0x16a6d6213d8 <line:415:23, col:35> col:35 pass 'const char *'
| |-ParmVarDecl 0x16a6d621458 <col:41, col:49> col:49 invalid e 'int *'
| `-ParmVarDecl 0x16a6d6214d8 <col:52, col:64> col:64 key_descrip 'const char *'
|-FunctionDecl 0x16a6d6218c0 <line:416:1, line:417:58> line:416:5 invalid load_certs 'int (const char *, int (*)())'
| |-ParmVarDecl 0x16a6d621680 <col:16, col:28> col:28 file 'const char *'
| `-ParmVarDecl 0x16a6d6217a0 <col:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x16a6d621ab8 <line:418:1, line:419:57> line:418:5 invalid load_crls 'int (const char *, int (*)())'
| |-ParmVarDecl 0x16a6d621988 <col:15, col:27> col:27 file 'const char *'
| `-ParmVarDecl 0x16a6d621a18 <col:33, <invalid sloc>> col:33 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x16a6d621e60 <line:420:1, line:421:52> line:420:13 invalid setup_verify 'int *(const char *, const char *, int, int)'
| |-ParmVarDecl 0x16a6d621b80 <col:26, col:38> col:38 CAfile 'const char *'
| |-ParmVarDecl 0x16a6d621c00 <col:46, col:58> col:58 CApath 'const char *'
| |-ParmVarDecl 0x16a6d621c80 <line:421:26, col:30> col:30 noCAfile 'int'
| `-ParmVarDecl 0x16a6d621d00 <col:40, col:44> col:44 noCApath 'int'
|-FunctionDecl 0x16a6d624290 <line:422:1, line:424:49> line:422:12 invalid ctx_set_verify_locations 'int (int *, const char *, const char *, int, int)'
| |-ParmVarDecl 0x16a6d621f38 <col:37, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x16a6d621fb8 <col:51, col:63> col:63 CAfile 'const char *'
| |-ParmVarDecl 0x16a6d624080 <line:423:37, col:49> col:49 CApath 'const char *'
| |-ParmVarDecl 0x16a6d624100 <col:57, col:61> col:61 noCAfile 'int'
| `-ParmVarDecl 0x16a6d624180 <line:424:37, col:41> col:41 noCApath 'int'
|-FunctionDecl 0x16a6d624490 <line:433:1, col:66> col:12 invalid ctx_set_ctlog_list_file 'int (int *, const char *)'
| |-ParmVarDecl 0x16a6d624370 <col:36, col:45> col:45 invalid ctx 'int *'
| `-ParmVarDecl 0x16a6d6243f0 <col:50, col:62> col:62 path 'const char *'
|-FunctionDecl 0x16a6d6246a8 <line:437:1, col:51> col:9 invalid setup_engine 'int *(const char *, int)'
| |-ParmVarDecl 0x16a6d624558 <col:22, col:34> col:34 engine 'const char *'
| `-ParmVarDecl 0x16a6d6245d8 <col:42, col:46> col:46 debug 'int'
|-FunctionDecl 0x16a6d624800 <line:438:1, col:30> col:6 invalid release_engine 'void (int *)'
| `-ParmVarDecl 0x16a6d624770 <col:21, col:29> col:29 invalid e 'int *'
|-FunctionDecl 0x16a6d624cd0 <line:441:1, line:445:49> line:441:16 invalid process_responder 'int *(int *, const char *, const char *, const char *, int, int (*)())'
| |-ParmVarDecl 0x16a6d6248c0 <col:34, col:48> col:48 invalid req 'int *'
| |-ParmVarDecl 0x16a6d624940 <line:442:34, col:46> col:46 host 'const char *'
| |-ParmVarDecl 0x16a6d6249c0 <col:52, col:64> col:64 path 'const char *'
| |-ParmVarDecl 0x16a6d624a40 <line:443:34, col:46> col:46 port 'const char *'
| |-ParmVarDecl 0x16a6d624ac0 <col:52, col:56> col:56 use_ssl 'int'
| `-ParmVarDecl 0x16a6d624b50 <line:444:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x16a6d622100 <line:449:1, line:450:66> line:449:5 invalid unpack_revinfo 'int (int **, int *, int **, int **, const char *)'
| |-ParmVarDecl 0x16a6d624de8 <col:20, col:32> col:32 invalid prevtm 'int **'
| |-ParmVarDecl 0x16a6d624e68 <col:40, col:45> col:45 preason 'int *'
| |-ParmVarDecl 0x16a6d624ef0 <col:54, col:68> col:68 invalid phold 'int **'
| |-ParmVarDecl 0x16a6d624f78 <line:450:20, col:43> col:43 invalid pinvtm 'int **'
| `-ParmVarDecl 0x16a6d624ff8 <col:51, col:63> col:63 str 'const char *'
|-RecordDecl 0x16a6d6221c8 <line:465:9, line:467:1> line:465:16 struct db_attr_st definition
| `-FieldDecl 0x16a6d622298 <line:466:5, col:9> col:9 unique_subject 'int'
|-TypedefDecl 0x16a6d622348 <line:465:1, line:467:3> col:3 referenced DB_ATTR 'struct db_attr_st':'struct db_attr_st'
| `-ElaboratedType 0x16a6d6222f0 'struct db_attr_st' sugar
|   `-RecordType 0x16a6d622260 'struct db_attr_st'
|     `-Record 0x16a6d6221c8 'db_attr_st'
|-RecordDecl 0x16a6d6223b8 <line:468:9, line:471:1> line:468:16 invalid struct ca_db_st definition
| |-FieldDecl 0x16a6d6224a0 <line:469:5, col:13> col:13 attributes 'DB_ATTR':'struct db_attr_st'
| `-FieldDecl 0x16a6d622510 <line:470:5, col:13> col:13 invalid db 'int *'
|-TypedefDecl 0x16a6d622618 <line:468:1, line:471:3> col:3 referenced CA_DB 'struct ca_db_st':'struct ca_db_st'
| `-ElaboratedType 0x16a6d6225c0 'struct ca_db_st' sugar
|   `-RecordType 0x16a6d622450 'struct ca_db_st'
|     `-Record 0x16a6d6223b8 'ca_db_st'
|-FunctionDecl 0x16a6d622830 <line:473:1, col:42> col:7 used app_malloc 'void *(int, const char *)'
| |-ParmVarDecl 0x16a6d6226a0 <col:18, col:22> col:22 sz 'int'
| `-ParmVarDecl 0x16a6d622720 <col:26, col:38> col:38 what 'const char *'
|-FunctionDecl 0x16a6d622b00 <line:474:1, col:77> col:9 invalid load_serial 'int *(const char *, int, int **)'
| |-ParmVarDecl 0x16a6d622910 <col:21, col:33> col:33 serialfile 'const char *'
| |-ParmVarDecl 0x16a6d622990 <col:45, col:49> col:49 create 'int'
| `-ParmVarDecl 0x16a6d622a18 <col:57, col:72> col:72 invalid retai 'int **'
|-FunctionDecl 0x16a6d622e50 <line:475:1, line:476:37> line:475:5 invalid save_serial 'int (const char *, const char *, const int *, int **)'
| |-ParmVarDecl 0x16a6d622bd0 <col:17, col:29> col:29 serialfile 'const char *'
| |-ParmVarDecl 0x16a6d622c50 <col:41, col:53> col:53 suffix 'const char *'
| |-ParmVarDecl 0x16a6d622cd0 <col:61, col:75> col:75 invalid serial 'const int *'
| `-ParmVarDecl 0x16a6d622d58 <line:476:17, col:32> col:32 invalid retai 'int **'
|-FunctionDecl 0x16a6d61e150 <line:477:1, line:478:41> line:477:5 rotate_serial 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x16a6d622f28 <col:19, col:31> col:31 serialfile 'const char *'
| |-ParmVarDecl 0x16a6d622fa8 <col:43, col:55> col:55 new_suffix 'const char *'
| `-ParmVarDecl 0x16a6d61e020 <line:478:19, col:31> col:31 old_suffix 'const char *'
|-FunctionDecl 0x16a6d61e390 <line:479:1, col:44> col:5 invalid rand_serial 'int (int *, int *)'
| |-ParmVarDecl 0x16a6d61e238 <col:17, col:25> col:25 invalid b 'int *'
| `-ParmVarDecl 0x16a6d61e2b8 <col:28, col:42> col:42 invalid ai 'int *'
|-FunctionDecl 0x16a6d61e6e8 <line:480:1, col:54> col:8 load_index 'CA_DB *(const char *, DB_ATTR *)'
| |-ParmVarDecl 0x16a6d61e478 <col:19, col:31> col:31 dbfile 'const char *'
| `-ParmVarDecl 0x16a6d61e548 <col:39, col:48> col:48 dbattr 'DB_ATTR *'
|-FunctionDecl 0x16a6d61e8d0 <line:481:1, col:26> col:5 index_index 'int (CA_DB *)'
| `-ParmVarDecl 0x16a6d61e7c0 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x16a6d61ec10 <line:482:1, col:65> col:5 save_index 'int (const char *, const char *, CA_DB *)'
| |-ParmVarDecl 0x16a6d61e9a8 <col:16, col:28> col:28 dbfile 'const char *'
| |-ParmVarDecl 0x16a6d61ea28 <col:36, col:48> col:48 suffix 'const char *'
| `-ParmVarDecl 0x16a6d61eaa0 <col:56, col:63> col:63 db 'CA_DB *'
|-FunctionDecl 0x16a6d61eee8 <line:483:1, line:484:40> line:483:5 rotate_index 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x16a6d61ecf8 <col:18, col:30> col:30 dbfile 'const char *'
| |-ParmVarDecl 0x16a6d61ed78 <col:38, col:50> col:50 new_suffix 'const char *'
| `-ParmVarDecl 0x16a6d61edf8 <line:484:18, col:30> col:30 old_suffix 'const char *'
|-FunctionDecl 0x16a6d6261a8 <line:485:1, col:26> col:6 free_index 'void (CA_DB *)'
| `-ParmVarDecl 0x16a6d6260a0 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x16a6d6263e0 <line:489:1, col:70> col:5 invalid index_name_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x16a6d626280 <col:20, col:43> col:43 invalid a 'const int *'
| `-ParmVarDecl 0x16a6d626300 <col:46, col:69> col:69 invalid b 'const int *'
|-FunctionDecl 0x16a6d6265f8 <line:490:1, col:41> col:5 parse_yesno 'int (const char *, int)'
| |-ParmVarDecl 0x16a6d6264a8 <col:17, col:29> col:29 str 'const char *'
| `-ParmVarDecl 0x16a6d626528 <col:34, col:38> col:38 def 'int'
|-FunctionDecl 0x16a6d626910 <line:492:1, col:65> col:12 invalid parse_name 'int *(const char *, long, int)'
| |-ParmVarDecl 0x16a6d6266d8 <col:23, col:35> col:35 str 'const char *'
| |-ParmVarDecl 0x16a6d626758 <col:40, col:45> col:45 chtype 'long'
| `-ParmVarDecl 0x16a6d6267d8 <col:53, col:57> col:57 multirdn 'int'
|-FunctionDecl 0x16a6d626c70 <line:493:1, line:494:52> line:493:5 invalid args_verify 'int (char ***, int *, int *, int **)'
| |-ParmVarDecl 0x16a6d6269e8 <col:17, col:25> col:25 pargs 'char ***'
| |-ParmVarDecl 0x16a6d626a68 <col:32, col:37> col:37 pargc 'int *'
| |-ParmVarDecl 0x16a6d626ae8 <line:494:17, col:22> col:22 badarg 'int *'
| `-ParmVarDecl 0x16a6d626b70 <col:30, col:50> col:50 invalid pm 'int **'
|-FunctionDecl 0x16a6d626dd8 <line:495:1, col:40> col:6 invalid policies_print 'void (int *)'
| `-ParmVarDecl 0x16a6d626d48 <col:21, col:37> col:37 invalid ctx 'int *'
|-FunctionDecl 0x16a6d61f070 <line:496:1, col:56> col:5 invalid bio_to_mem 'int (unsigned char **, int, int *)'
| |-ParmVarDecl 0x16a6d626ec8 <col:16, col:32> col:32 out 'unsigned char **'
| |-ParmVarDecl 0x16a6d626f48 <col:37, col:41> col:41 maxlen 'int'
| `-ParmVarDecl 0x16a6d626fc8 <col:49, col:54> col:54 invalid in 'int *'
|-FunctionDecl 0x16a6d61f260 <line:497:1, col:58> col:5 invalid pkey_ctrl_string 'int (int *, const char *)'
| |-ParmVarDecl 0x16a6d61f140 <col:22, col:36> col:36 invalid ctx 'int *'
| `-ParmVarDecl 0x16a6d61f1c0 <col:41, col:53> col:53 value 'const char *'
|-FunctionDecl 0x16a6d61f5b0 <line:498:1, line:499:62> line:498:5 invalid init_gen_str 'int (int **, const char *, int *, int)'
| |-ParmVarDecl 0x16a6d61f330 <col:18, col:33> col:33 invalid pctx 'int **'
| |-ParmVarDecl 0x16a6d61f3b0 <line:499:18, col:30> col:30 algname 'const char *'
| |-ParmVarDecl 0x16a6d61f430 <col:39, col:47> col:47 invalid e 'int *'
| `-ParmVarDecl 0x16a6d61f4b0 <col:50, col:54> col:54 do_param 'int'
|-FunctionDecl 0x16a6d61f960 <line:500:1, line:501:51> line:500:5 invalid do_X509_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x16a6d61f688 <col:18, col:24> col:24 invalid x 'int *'
| |-ParmVarDecl 0x16a6d61f708 <col:27, col:37> col:37 invalid pkey 'int *'
| |-ParmVarDecl 0x16a6d61f788 <col:43, col:57> col:57 invalid md 'const int *'
| `-ParmVarDecl 0x16a6d61f818 <line:501:18, <invalid sloc>> col:18 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x16a6d61fc78 <line:502:1, line:503:55> line:502:5 invalid do_X509_REQ_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x16a6d61fa38 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x16a6d61fab8 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x16a6d61fb38 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x16a6d61fbc8 <line:503:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x16a6d61ff90 <line:504:1, line:505:55> line:504:5 invalid do_X509_CRL_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x16a6d61fd50 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x16a6d61fdd0 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x16a6d61fe50 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x16a6d61fee0 <line:505:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-VarDecl 0x16a6d62b128 <line:507:1, col:14> col:14 psk_key 'char *' extern
|-FunctionDecl 0x16a6d62b3e0 <line:510:1, col:64> col:16 next_protos_parse 'unsigned char *(size_t *, const char *)'
| |-ParmVarDecl 0x16a6d62b218 <col:34, col:42> col:42 outlen 'size_t *'
| `-ParmVarDecl 0x16a6d62b298 <col:50, col:62> col:62 in 'const char *'
|-FunctionDecl 0x16a6d62b7c8 <line:512:1, line:514:67> line:512:6 invalid print_cert_checks 'void (int *, int *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x16a6d62b4c0 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x16a6d62b540 <col:34, col:40> col:40 invalid x 'int *'
| |-ParmVarDecl 0x16a6d62b5c0 <line:513:24, col:36> col:36 checkhost 'const char *'
| |-ParmVarDecl 0x16a6d62b640 <line:514:24, col:36> col:36 checkemail 'const char *'
| `-ParmVarDecl 0x16a6d62b6c0 <col:48, col:60> col:60 checkip 'const char *'
|-FunctionDecl 0x16a6d62b938 <line:516:1, col:45> col:6 invalid store_setup_crl_download 'void (int *)'
| `-ParmVarDecl 0x16a6d62b8a8 <col:31, col:43> col:43 invalid st 'int *'
|-FunctionDecl 0x16a6d62ba90 <line:551:1, col:27> col:5 app_isdir 'int (const char *)'
| `-ParmVarDecl 0x16a6d62b9f8 <col:15, col:26> col:27 'const char *'
|-FunctionDecl 0x16a6d62bca0 <line:552:1, col:38> col:5 app_access 'int (const char *, int)'
| |-ParmVarDecl 0x16a6d62bb68 <col:16, col:27> col:28 'const char *'
| `-ParmVarDecl 0x16a6d62bbe8 <col:30, col:34> col:34 flag 'int'
|-FunctionDecl 0x16a6d62be08 <line:553:1, col:22> col:5 fileno_stdin 'int (void)'
|-FunctionDecl 0x16a6d62bf60 <line:554:1, col:23> col:5 fileno_stdout 'int (void)'
|-FunctionDecl 0x16a6d62d1f0 <line:555:1, col:31> col:5 raw_read_stdin 'int (void *, int)'
| |-ParmVarDecl 0x16a6d62c030 <col:20, col:25> col:26 'void *'
| `-ParmVarDecl 0x16a6d62d110 <col:28> col:31 'int'
|-FunctionDecl 0x16a6d62d430 <line:556:1, col:39> col:5 raw_write_stdout 'int (const void *, int)'
| |-ParmVarDecl 0x16a6d62d2d0 <col:22, col:33> col:34 'const void *'
| `-ParmVarDecl 0x16a6d62d350 <col:36> col:39 'int'
|-FunctionDecl 0x16a6d62d6a0 <line:560:1, col:45> col:8 app_tminterval 'double (int, int)'
| |-ParmVarDecl 0x16a6d62d510 <col:23, col:27> col:27 stop 'int'
| `-ParmVarDecl 0x16a6d62d590 <col:33, col:37> col:37 usertime 'int'
|-RecordDecl 0x16a6d62d768 <line:562:9, line:567:1> line:562:16 struct verify_options_st definition
| |-FieldDecl 0x16a6d62d838 <line:563:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x16a6d62d8a8 <line:564:5, col:9> col:9 quiet 'int'
| |-FieldDecl 0x16a6d62d918 <line:565:5, col:9> col:9 error 'int'
| `-FieldDecl 0x16a6d62d988 <line:566:5, col:9> col:9 return_error 'int'
|-TypedefDecl 0x16a6d62da38 <line:562:1, line:567:3> col:3 referenced VERIFY_CB_ARGS 'struct verify_options_st':'struct verify_options_st'
| `-ElaboratedType 0x16a6d62d9e0 'struct verify_options_st' sugar
|   `-RecordType 0x16a6d62d800 'struct verify_options_st'
|     `-Record 0x16a6d62d768 'verify_options_st'
|-VarDecl 0x16a6d62dae0 <line:569:1, col:23> col:23 verify_args 'VERIFY_CB_ARGS':'struct verify_options_st' extern
|-VarDecl 0x16a6d62dc40 <.//openssl//file_jk/after\apps\passwd.c:31:1, line:41:1> line:31:28 used cov_2char 'const unsigned char [64]' static cinit
| `-InitListExpr 0x16a6d62a8e8 <col:44, line:41:1> 'const unsigned char [64]'
|   |-ImplicitCastExpr 0x16a6d62ab28 <line:33:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62dca8 <col:5> 'int' 46
|   |-ImplicitCastExpr 0x16a6d62ab40 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62dcd0 <col:11> 'int' 47
|   |-ImplicitCastExpr 0x16a6d62ab58 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62dcf8 <col:17> 'int' 48
|   |-ImplicitCastExpr 0x16a6d62ab70 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62dd20 <col:23> 'int' 49
|   |-ImplicitCastExpr 0x16a6d62ab88 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62dd48 <col:29> 'int' 50
|   |-ImplicitCastExpr 0x16a6d62aba0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62dd70 <col:35> 'int' 51
|   |-ImplicitCastExpr 0x16a6d62abb8 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62dd98 <col:41> 'int' 52
|   |-ImplicitCastExpr 0x16a6d62abd0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62ddc0 <col:47> 'int' 53
|   |-ImplicitCastExpr 0x16a6d62abe8 <line:34:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62dde8 <col:5> 'int' 54
|   |-ImplicitCastExpr 0x16a6d62ac00 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62de10 <col:11> 'int' 55
|   |-ImplicitCastExpr 0x16a6d62ac18 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62de38 <col:17> 'int' 56
|   |-ImplicitCastExpr 0x16a6d62ac30 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62de60 <col:23> 'int' 57
|   |-ImplicitCastExpr 0x16a6d62ac48 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62de88 <col:29> 'int' 65
|   |-ImplicitCastExpr 0x16a6d62ac60 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62deb0 <col:35> 'int' 66
|   |-ImplicitCastExpr 0x16a6d62ac78 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62ded8 <col:41> 'int' 67
|   |-ImplicitCastExpr 0x16a6d62ac90 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62df00 <col:47> 'int' 68
|   |-ImplicitCastExpr 0x16a6d62aca8 <line:35:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62df28 <col:5> 'int' 69
|   |-ImplicitCastExpr 0x16a6d62acc0 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62df50 <col:11> 'int' 70
|   |-ImplicitCastExpr 0x16a6d62acd8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62df78 <col:17> 'int' 71
|   |-ImplicitCastExpr 0x16a6d62acf0 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62dfa0 <col:23> 'int' 72
|   |-ImplicitCastExpr 0x16a6d62ad08 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62dfc8 <col:29> 'int' 73
|   |-ImplicitCastExpr 0x16a6d62ad20 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62dff0 <col:35> 'int' 74
|   |-ImplicitCastExpr 0x16a6d62ad38 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62e018 <col:41> 'int' 75
|   |-ImplicitCastExpr 0x16a6d62ad50 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62e040 <col:47> 'int' 76
|   |-ImplicitCastExpr 0x16a6d62ad68 <line:36:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62e068 <col:5> 'int' 77
|   |-ImplicitCastExpr 0x16a6d62ad80 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62e090 <col:11> 'int' 78
|   |-ImplicitCastExpr 0x16a6d62ad98 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62e0b8 <col:17> 'int' 79
|   |-ImplicitCastExpr 0x16a6d62adb0 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62e0e0 <col:23> 'int' 80
|   |-ImplicitCastExpr 0x16a6d62adc8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a0e0 <col:29> 'int' 81
|   |-ImplicitCastExpr 0x16a6d62ade0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a108 <col:35> 'int' 82
|   |-ImplicitCastExpr 0x16a6d62adf8 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a130 <col:41> 'int' 83
|   |-ImplicitCastExpr 0x16a6d62ae10 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a158 <col:47> 'int' 84
|   |-ImplicitCastExpr 0x16a6d62ae28 <line:37:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a180 <col:5> 'int' 85
|   |-ImplicitCastExpr 0x16a6d62ae40 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a1a8 <col:11> 'int' 86
|   |-ImplicitCastExpr 0x16a6d62ae58 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a1d0 <col:17> 'int' 87
|   |-ImplicitCastExpr 0x16a6d62ae70 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a1f8 <col:23> 'int' 88
|   |-ImplicitCastExpr 0x16a6d62ae88 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a220 <col:29> 'int' 89
|   |-ImplicitCastExpr 0x16a6d62aea0 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a248 <col:35> 'int' 90
|   |-ImplicitCastExpr 0x16a6d62aeb8 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a270 <col:41> 'int' 97
|   |-ImplicitCastExpr 0x16a6d62aed0 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a298 <col:47> 'int' 98
|   |-ImplicitCastExpr 0x16a6d62aee8 <line:38:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a2c0 <col:5> 'int' 99
|   |-ImplicitCastExpr 0x16a6d62af00 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a2e8 <col:11> 'int' 100
|   |-ImplicitCastExpr 0x16a6d62af18 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a310 <col:17> 'int' 101
|   |-ImplicitCastExpr 0x16a6d62af30 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a338 <col:23> 'int' 102
|   |-ImplicitCastExpr 0x16a6d62af48 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a360 <col:29> 'int' 103
|   |-ImplicitCastExpr 0x16a6d62af60 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a388 <col:35> 'int' 104
|   |-ImplicitCastExpr 0x16a6d62af78 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a3b0 <col:41> 'int' 105
|   |-ImplicitCastExpr 0x16a6d62af90 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a3d8 <col:47> 'int' 106
|   |-ImplicitCastExpr 0x16a6d62afa8 <line:39:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a400 <col:5> 'int' 107
|   |-ImplicitCastExpr 0x16a6d62afc0 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a428 <col:11> 'int' 108
|   |-ImplicitCastExpr 0x16a6d62afd8 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a450 <col:17> 'int' 109
|   |-ImplicitCastExpr 0x16a6d62aff0 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a478 <col:23> 'int' 110
|   |-ImplicitCastExpr 0x16a6d62b008 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a4a0 <col:29> 'int' 111
|   |-ImplicitCastExpr 0x16a6d62b020 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a4c8 <col:35> 'int' 112
|   |-ImplicitCastExpr 0x16a6d62b038 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a4f0 <col:41> 'int' 113
|   |-ImplicitCastExpr 0x16a6d62b050 <col:47> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a518 <col:47> 'int' 114
|   |-ImplicitCastExpr 0x16a6d62b068 <line:40:5> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a540 <col:5> 'int' 115
|   |-ImplicitCastExpr 0x16a6d62b080 <col:11> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a568 <col:11> 'int' 116
|   |-ImplicitCastExpr 0x16a6d62b098 <col:17> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a590 <col:17> 'int' 117
|   |-ImplicitCastExpr 0x16a6d62b0b0 <col:23> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a5b8 <col:23> 'int' 118
|   |-ImplicitCastExpr 0x16a6d62b0c8 <col:29> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a5e0 <col:29> 'int' 119
|   |-ImplicitCastExpr 0x16a6d62e120 <col:35> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a608 <col:35> 'int' 120
|   |-ImplicitCastExpr 0x16a6d62e138 <col:41> 'unsigned char' <IntegralCast>
|   | `-IntegerLiteral 0x16a6d62a630 <col:41> 'int' 121
|   `-ImplicitCastExpr 0x16a6d62e150 <col:47> 'unsigned char' <IntegralCast>
|     `-IntegerLiteral 0x16a6d62a658 <col:47> 'int' 122
|-FunctionDecl 0x16a6d62e900 <line:43:1, line:46:33> line:43:12 invalid do_passwd 'int (int, char **, char **, char *, int *, int, int, int, size_t, int, int, int)' static
| |-ParmVarDecl 0x16a6d62e180 <col:22, col:26> col:26 passed_salt 'int'
| |-ParmVarDecl 0x16a6d62e200 <col:39, col:46> col:46 salt_p 'char **'
| |-ParmVarDecl 0x16a6d62e280 <col:54, col:61> col:61 salt_malloc_p 'char **'
| |-ParmVarDecl 0x16a6d62e300 <line:44:22, col:28> col:28 passwd 'char *'
| |-ParmVarDecl 0x16a6d62e380 <col:36, col:41> col:41 invalid out 'int *'
| |-ParmVarDecl 0x16a6d62e400 <col:46, col:50> col:50 quiet 'int'
| |-ParmVarDecl 0x16a6d62e480 <col:57, col:61> col:61 table 'int'
| |-ParmVarDecl 0x16a6d62e500 <line:45:22, col:26> col:26 reverse 'int'
| |-ParmVarDecl 0x16a6d62e578 <col:35, col:42> col:42 pw_maxlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x16a6d62e5f8 <col:53, col:57> col:57 usecrypt 'int'
| |-ParmVarDecl 0x16a6d62e678 <col:67, col:71> col:71 use1 'int'
| `-ParmVarDecl 0x16a6d62e6f8 <line:46:22, col:26> col:26 useapr1 'int'
|-EnumDecl 0x16a6d62ea00 <line:48:9, line:53:1> line:48:14 OPTION_choice
| |-EnumConstantDecl 0x16a6d62eb38 <line:49:5, col:16> col:5 referenced OPT_ERR 'int'
| | `-ConstantExpr 0x16a6d62eb20 <col:15, col:16> 'int'
| |   `-UnaryOperator 0x16a6d62eb08 <col:15, col:16> 'int' prefix '-'
| |     `-IntegerLiteral 0x16a6d62eae0 <col:16> 'int' 1
| |-EnumConstantDecl 0x16a6d62ebd0 <col:19, col:29> col:19 referenced OPT_EOF 'int'
| | `-ConstantExpr 0x16a6d62ebb8 <col:29> 'int'
| |   `-IntegerLiteral 0x16a6d62eb90 <col:29> 'int' 0
| |-EnumConstantDecl 0x16a6d62ec28 <col:32> col:32 referenced OPT_HELP 'int'
| |-EnumConstantDecl 0x16a6d62ec80 <line:50:5> col:5 referenced OPT_IN 'int'
| |-EnumConstantDecl 0x16a6d62ecd8 <line:51:5> col:5 referenced OPT_NOVERIFY 'int'
| |-EnumConstantDecl 0x16a6d62ed30 <col:19> col:19 referenced OPT_QUIET 'int'
| |-EnumConstantDecl 0x16a6d62ed88 <col:30> col:30 referenced OPT_TABLE 'int'
| |-EnumConstantDecl 0x16a6d62ede0 <col:41> col:41 referenced OPT_REVERSE 'int'
| |-EnumConstantDecl 0x16a6d62ee38 <col:54> col:54 referenced OPT_APR1 'int'
| |-EnumConstantDecl 0x16a6d62ee90 <line:52:5> col:5 referenced OPT_1 'int'
| |-EnumConstantDecl 0x16a6d62eee8 <col:12> col:12 referenced OPT_CRYPT 'int'
| |-EnumConstantDecl 0x16a6d62ef40 <col:23> col:23 referenced OPT_SALT 'int'
| `-EnumConstantDecl 0x16a6d62ef98 <col:33> col:33 referenced OPT_STDIN 'int'
|-TypedefDecl 0x16a6d62f048 <line:48:1, line:53:3> col:3 referenced OPTION_CHOICE 'enum OPTION_choice':'enum OPTION_choice'
| `-ElaboratedType 0x16a6d62eff0 'enum OPTION_choice' sugar
|   `-EnumType 0x16a6d62eac0 'enum OPTION_choice'
|     `-Enum 0x16a6d62ea00 'OPTION_choice'
|-VarDecl 0x16a6d6270d0 <line:55:1, line:73:1> line:55:9 used passwd_options 'OPTIONS [12]' cinit
| `-InitListExpr 0x16a6d630218 <col:28, line:73:1> 'OPTIONS [12]'
|   |-InitListExpr 0x16a6d630268 <line:56:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x16a6d6302e0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x16a6d6302c8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x16a6d627178 <col:6> 'char [5]' lvalue "help"
|   | |-DeclRefExpr 0x16a6d627198 <col:14> 'int' EnumConstant 0x16a6d62ec28 'OPT_HELP' 'int'
|   | |-CharacterLiteral 0x16a6d6271b8 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x16a6d630310 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x16a6d6302f8 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x16a6d627208 <col:29> 'char [21]' lvalue "Display this summary"
|   |-InitListExpr 0x16a6d630340 <line:57:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x16a6d6303b8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x16a6d6303a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x16a6d6272d8 <col:6> 'char [3]' lvalue "in"
|   | |-DeclRefExpr 0x16a6d6272f8 <col:12> 'int' EnumConstant 0x16a6d62ec80 'OPT_IN' 'int'
|   | |-CharacterLiteral 0x16a6d627318 <col:20> 'int' 60
|   | `-ImplicitCastExpr 0x16a6d6303e8 <col:25> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x16a6d6303d0 <col:25> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x16a6d627368 <col:25> 'char [25]' lvalue "Read passwords from file"
|   |-InitListExpr 0x16a6d630420 <line:58:5, line:59:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x16a6d630498 <line:58:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x16a6d630480 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x16a6d627438 <col:6> 'char [9]' lvalue "noverify"
|   | |-DeclRefExpr 0x16a6d627458 <col:18> 'int' EnumConstant 0x16a6d62ecd8 'OPT_NOVERIFY' 'int'
|   | |-CharacterLiteral 0x16a6d627478 <col:32> 'int' 45
|   | `-ImplicitCastExpr 0x16a6d6304c8 <line:59:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x16a6d6304b0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x16a6d6274c8 <col:6> 'char [49]' lvalue "Never verify when reading password from terminal"
|   |-InitListExpr 0x16a6d630510 <line:60:5, col:44> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x16a6d630588 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x16a6d630570 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x16a6d6275a8 <col:6> 'char [6]' lvalue "quiet"
|   | |-DeclRefExpr 0x16a6d6275c8 <col:15> 'int' EnumConstant 0x16a6d62ed30 'OPT_QUIET' 'int'
|   | |-CharacterLiteral 0x16a6d6275e8 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x16a6d6305b8 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x16a6d6305a0 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x16a6d627638 <col:31> 'char [12]' lvalue "No warnings"
|   |-InitListExpr 0x16a6d6305e0 <line:61:5, col:55> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x16a6d630658 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x16a6d630640 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x16a6d6276c0 <col:6> 'char [6]' lvalue "table"
|   | |-DeclRefExpr 0x16a6d6276e0 <col:15> 'int' EnumConstant 0x16a6d62ed88 'OPT_TABLE' 'int'
|   | |-CharacterLiteral 0x16a6d627700 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x16a6d630688 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x16a6d630670 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x16a6d627758 <col:31> 'char [23]' lvalue "Format output as table"
|   |-InitListExpr 0x16a6d6306f0 <line:62:5, col:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x16a6d630768 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x16a6d630750 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x16a6d627828 <col:6> 'char [8]' lvalue "reverse"
|   | |-DeclRefExpr 0x16a6d627848 <col:17> 'int' EnumConstant 0x16a6d62ede0 'OPT_REVERSE' 'int'
|   | |-CharacterLiteral 0x16a6d627868 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x16a6d630798 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x16a6d630780 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x16a6d627880 <col:35> 'char [21]' lvalue "Switch table columns"
|   |-InitListExpr 0x16a6d6307c0 <line:63:5, col:48> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x16a6d630838 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x16a6d630820 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x16a6d627910 <col:6> 'char [5]' lvalue "salt"
|   | |-DeclRefExpr 0x16a6d627930 <col:14> 'int' EnumConstant 0x16a6d62ef40 'OPT_SALT' 'int'
|   | |-CharacterLiteral 0x16a6d627950 <col:24> 'int' 115
|   | `-ImplicitCastExpr 0x16a6d630868 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x16a6d630850 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x16a6d6279a8 <col:29> 'char [18]' lvalue "Use provided salt"
|   |-InitListExpr 0x16a6d630890 <line:64:5, col:58> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x16a6d630908 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x16a6d6308f0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x16a6d627a38 <col:6> 'char [6]' lvalue "stdin"
|   | |-DeclRefExpr 0x16a6d627a58 <col:15> 'int' EnumConstant 0x16a6d62ef98 'OPT_STDIN' 'int'
|   | |-CharacterLiteral 0x16a6d627a78 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x16a6d630938 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x16a6d630920 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x16a6d627ac8 <col:31> 'char [26]' lvalue "Read passwords from stdin"
|   |-InitListExpr 0x16a6d630960 <line:66:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x16a6d6309d8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x16a6d6309c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x16a6d627b60 <col:6> 'char [5]' lvalue "apr1"
|   | |-DeclRefExpr 0x16a6d627b80 <col:14> 'int' EnumConstant 0x16a6d62ee38 'OPT_APR1' 'int'
|   | |-CharacterLiteral 0x16a6d627ba0 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x16a6d630a08 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x16a6d6309f0 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x16a6d627bf8 <col:29> 'char [45]' lvalue "MD5-based password algorithm, Apache variant"
|   |-InitListExpr 0x16a6d630ab0 <line:67:5, col:53> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x16a6d630b28 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x16a6d630b10 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x16a6d627cd8 <col:6> 'char [2]' lvalue "1"
|   | |-DeclRefExpr 0x16a6d627cf8 <col:11> 'int' EnumConstant 0x16a6d62ee90 'OPT_1' 'int'
|   | |-CharacterLiteral 0x16a6d627d18 <col:18> 'int' 45
|   | `-ImplicitCastExpr 0x16a6d630b58 <col:23> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x16a6d630b40 <col:23> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x16a6d627d68 <col:23> 'char [29]' lvalue "MD5-based password algorithm"
|   |-InitListExpr 0x16a6d630b80 <line:70:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x16a6d630bf8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x16a6d630be0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x16a6d627e00 <col:6> 'char [6]' lvalue "crypt"
|   | |-DeclRefExpr 0x16a6d627e20 <col:15> 'int' EnumConstant 0x16a6d62eee8 'OPT_CRYPT' 'int'
|   | |-CharacterLiteral 0x16a6d627e40 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x16a6d630c28 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x16a6d630c10 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x16a6d627e98 <col:31> 'char [43]' lvalue "Standard Unix password algorithm (default)"
|   `-InitListExpr 0x16a6d630c50 <line:72:5, col:10> 'OPTIONS':'struct options_st'
|     |-ImplicitCastExpr 0x16a6d630cb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|     | `-ParenExpr 0x16a6d627fa8 <col:17, col:27> 'void *'
|     |   `-CStyleCastExpr 0x16a6d627f80 <col:18, col:26> 'void *' <NullToPointer>
|     |     `-IntegerLiteral 0x16a6d627f40 <col:26> 'int' 0
|     |-ImplicitValueInitExpr 0x16a6d630cc8 <<invalid sloc>> 'int'
|     |-ImplicitValueInitExpr 0x16a6d630cd8 <<invalid sloc>> 'int'
|     `-ImplicitValueInitExpr 0x16a6d630ce8 <<invalid sloc>> 'const char *'
|-FunctionDecl 0x16a6d630f20 <.//openssl//file_jk/after\apps\passwd.c:75:1, line:272:1> line:75:5 passwd_main 'int (int, char **)'
| |-ParmVarDecl 0x16a6d630d90 <col:17, col:21> col:21 used argc 'int'
| |-ParmVarDecl 0x16a6d630e10 <col:27, col:34> col:34 used argv 'char **'
| `-CompoundStmt 0x16a6d6c1ab0 <line:76:1, line:272:1>
|   |-DeclStmt 0x16a6d62f518 <line:78:5, col:72>
|   | |-VarDecl 0x16a6d631088 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:78:11 used infile 'char *' cinit
|   | | `-ImplicitCastExpr 0x16a6d62f178 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x16a6d62f158 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x16a6d62f130 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x16a6d6310f0 <col:26> 'int' 0
|   | |-VarDecl 0x16a6d62f1a8 <.//openssl//file_jk/after\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:78:27 used salt 'char *' cinit
|   | | `-ImplicitCastExpr 0x16a6d62f298 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x16a6d62f278 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x16a6d62f250 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x16a6d62f210 <col:26> 'int' 0
|   | |-VarDecl 0x16a6d62f2c8 <.//openssl//file_jk/after\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:78:41 used passwd 'char *' cinit
|   | | `-ImplicitCastExpr 0x16a6d62f3b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x16a6d62f398 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x16a6d62f370 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x16a6d62f330 <col:26> 'int' 0
|   | `-VarDecl 0x16a6d62f3e8 <.//openssl//file_jk/after\apps\passwd.c:78:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:78:58 used passwds 'char **' cinit
|   |   `-ImplicitCastExpr 0x16a6d62f4d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <NullToPointer>
|   |     `-ParenExpr 0x16a6d62f4b8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x16a6d62f490 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x16a6d62f450 <col:26> 'int' 0
|   |-DeclStmt 0x16a6d62f810 <.//openssl//file_jk/after\apps\passwd.c:79:5, col:59>
|   | |-VarDecl 0x16a6d62f548 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:79:11 used salt_malloc 'char *' cinit
|   | | `-ImplicitCastExpr 0x16a6d62f638 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x16a6d62f618 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x16a6d62f5f0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x16a6d62f5b0 <col:26> 'int' 0
|   | |-VarDecl 0x16a6d62f668 <.//openssl//file_jk/after\apps\passwd.c:79:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:79:32 used passwd_malloc 'char *' cinit
|   | | `-ImplicitCastExpr 0x16a6d62f758 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x16a6d62f738 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x16a6d62f710 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x16a6d62f6d0 <col:26> 'int' 0
|   | `-VarDecl 0x16a6d62f788 <.//openssl//file_jk/after\apps\passwd.c:79:5, col:55> col:55 used prog 'char *'
|   |-DeclStmt 0x16a6d62f8c8 <line:80:5, col:20>
|   | `-VarDecl 0x16a6d62f860 <col:5, col:19> col:19 used o 'OPTION_CHOICE':'enum OPTION_choice'
|   |-DeclStmt 0x16a6d62fa48 <line:81:5, col:44>
|   | |-VarDecl 0x16a6d62f8f8 <col:5, col:20> col:9 used in_stdin 'int' cinit
|   | | `-IntegerLiteral 0x16a6d62f960 <col:20> 'int' 0
|   | `-VarDecl 0x16a6d62f9a0 <col:5, col:43> col:23 used pw_source_defined 'int' cinit
|   |   `-IntegerLiteral 0x16a6d62fa08 <col:43> 'int' 0
|   |-DeclStmt 0x16a6d62fb08 <line:83:5, col:24>
|   | `-VarDecl 0x16a6d62fa78 <col:5, col:23> col:9 used in_noverify 'int' cinit
|   |   `-IntegerLiteral 0x16a6d62fae0 <col:23> 'int' 0
|   |-DeclStmt 0x16a6d62fde8 <line:85:5, col:59>
|   | |-VarDecl 0x16a6d62fb38 <col:5, col:23> col:9 used passed_salt 'int' cinit
|   | | `-IntegerLiteral 0x16a6d62fba0 <col:23> 'int' 0
|   | |-VarDecl 0x16a6d62fbe0 <col:5, col:34> col:26 used quiet 'int' cinit
|   | | `-IntegerLiteral 0x16a6d62fc48 <col:34> 'int' 0
|   | |-VarDecl 0x16a6d62fc88 <col:5, col:45> col:37 used table 'int' cinit
|   | | `-IntegerLiteral 0x16a6d62fcf0 <col:45> 'int' 0
|   | `-VarDecl 0x16a6d62fd30 <col:5, col:58> col:48 used reverse 'int' cinit
|   |   `-IntegerLiteral 0x16a6d62fd98 <col:58> 'int' 0
|   |-DeclStmt 0x16a6d6300c8 <line:86:5, col:53>
|   | |-VarDecl 0x16a6d62fe18 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x16a6d62fe80 <col:15> 'int' 1
|   | |-VarDecl 0x16a6d62fec0 <col:5, col:29> col:18 used usecrypt 'int' cinit
|   | | `-IntegerLiteral 0x16a6d62ff28 <col:29> 'int' 0
|   | |-VarDecl 0x16a6d62ff68 <col:5, col:39> col:32 used use1 'int' cinit
|   | | `-IntegerLiteral 0x16a6d62ffd0 <col:39> 'int' 0
|   | `-VarDecl 0x16a6d630010 <col:5, col:52> col:42 used useapr1 'int' cinit
|   |   `-IntegerLiteral 0x16a6d630078 <col:52> 'int' 0
|   |-DeclStmt 0x16a6d6312c8 <line:87:5, col:51>
|   | |-VarDecl 0x16a6d631150 <col:5, col:33> col:12 used passwd_malloc_size 'size_t':'unsigned long long' cinit
|   | | `-ImplicitCastExpr 0x16a6d6311e0 <col:33> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x16a6d6311b8 <col:33> 'int' 0
|   | `-VarDecl 0x16a6d631208 <col:5, col:48> col:36 used pw_maxlen 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x16a6d631298 <col:48> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x16a6d631270 <col:48> 'int' 256
|   |-BinaryOperator 0x16a6d631508 <line:89:5, col:47> 'char *' '='
|   | |-DeclRefExpr 0x16a6d6312e0 <col:5> 'char *' lvalue Var 0x16a6d62f788 'prog' 'char *'
|   | `-CallExpr 0x16a6d631410 <col:12, col:47> 'char *'
|   |   |-ImplicitCastExpr 0x16a6d6313f8 <col:12> 'char *(*)(int, char **, const OPTIONS *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x16a6d631318 <col:12> 'char *(int, char **, const OPTIONS *)' Function 0x16a6d6176b0 'opt_init' 'char *(int, char **, const OPTIONS *)'
|   |   |-ImplicitCastExpr 0x16a6d631448 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x16a6d631338 <col:21> 'int' lvalue ParmVar 0x16a6d630d90 'argc' 'int'
|   |   |-ImplicitCastExpr 0x16a6d631460 <col:27> 'char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x16a6d631358 <col:27> 'char **' lvalue ParmVar 0x16a6d630e10 'argv' 'char **'
|   |   `-ImplicitCastExpr 0x16a6d6314f0 <col:33> 'const OPTIONS *' <NoOp>
|   |     `-ImplicitCastExpr 0x16a6d6314d8 <col:33> 'OPTIONS *' <ArrayToPointerDecay>
|   |       `-DeclRefExpr 0x16a6d631378 <col:33> 'OPTIONS [12]' lvalue Var 0x16a6d6270d0 'passwd_options' 'OPTIONS [12]'
|   |-WhileStmt 0x16a6d6c4728 <line:90:5, line:141:5>
|   | |-BinaryOperator 0x16a6d631670 <line:90:12, col:32> 'int' '!='
|   | | |-ImplicitCastExpr 0x16a6d631658 <col:12, col:27> 'int' <IntegralCast>
|   | | | `-ParenExpr 0x16a6d631618 <col:12, col:27> 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |   `-BinaryOperator 0x16a6d6315f8 <col:13, col:26> 'OPTION_CHOICE':'enum OPTION_choice' '='
|   | | |     |-DeclRefExpr 0x16a6d631528 <col:13> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x16a6d62f860 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |     `-ImplicitCastExpr 0x16a6d6315e0 <col:17, col:26> 'OPTION_CHOICE':'enum OPTION_choice' <IntegralCast>
|   | | |       `-CallExpr 0x16a6d6315c0 <col:17, col:26> 'int'
|   | | |         `-ImplicitCastExpr 0x16a6d6315a8 <col:17> 'int (*)(void)' <FunctionToPointerDecay>
|   | | |           `-DeclRefExpr 0x16a6d631560 <col:17> 'int (void)' Function 0x16a6d617850 'opt_next' 'int (void)'
|   | | `-DeclRefExpr 0x16a6d631638 <col:32> 'int' EnumConstant 0x16a6d62ebd0 'OPT_EOF' 'int'
|   | `-CompoundStmt 0x16a6d6c4710 <col:41, line:141:5>
|   |   `-SwitchStmt 0x16a6d6316e0 <line:91:9, line:140:9>
|   |     |-ImplicitCastExpr 0x16a6d6316c8 <line:91:17> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x16a6d6316b0 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x16a6d631690 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x16a6d62f860 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |     `-CompoundStmt 0x16a6d6c4610 <col:20, line:140:9>
|   |       |-CaseStmt 0x16a6d631738 <line:92:9, line:94:9>
|   |       | |-ConstantExpr 0x16a6d631720 <line:92:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d631700 <col:14> 'int' EnumConstant 0x16a6d62ebd0 'OPT_EOF' 'int'
|   |       | `-CaseStmt 0x16a6d631798 <line:93:9, line:94:9>
|   |       |   |-ConstantExpr 0x16a6d631780 <line:93:14> 'int'
|   |       |   | `-DeclRefExpr 0x16a6d631760 <col:14> 'int' EnumConstant 0x16a6d62eb38 'OPT_ERR' 'int'
|   |       |   `-LabelStmt 0x16a6d6319b8 <line:94:2, col:9> 'opthelp'
|   |       |     `-NullStmt 0x16a6d631960 <col:9>
|   |       |-GotoStmt 0x16a6d631a20 <line:96:13, col:18> 'end' 0x16a6d6319d0
|   |       |-CaseStmt 0x16a6d631a70 <line:97:9, line:98:36>
|   |       | |-ConstantExpr 0x16a6d631a58 <line:97:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d631a38 <col:14> 'int' EnumConstant 0x16a6d62ec28 'OPT_HELP' 'int'
|   |       | `-CallExpr 0x16a6d631b50 <line:98:13, col:36> 'void'
|   |       |   |-ImplicitCastExpr 0x16a6d631b38 <col:13> 'void (*)(const OPTIONS *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x16a6d631a98 <col:13> 'void (const OPTIONS *)' Function 0x16a6d6167c8 'opt_help' 'void (const OPTIONS *)'
|   |       |   `-ImplicitCastExpr 0x16a6d631b90 <col:22> 'const OPTIONS *' <NoOp>
|   |       |     `-ImplicitCastExpr 0x16a6d631b78 <col:22> 'OPTIONS *' <ArrayToPointerDecay>
|   |       |       `-DeclRefExpr 0x16a6d631ab8 <col:22> 'OPTIONS [12]' lvalue Var 0x16a6d6270d0 'passwd_options' 'OPTIONS [12]'
|   |       |-BinaryOperator 0x16a6d631c08 <line:99:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x16a6d631ba8 <col:13> 'int' lvalue Var 0x16a6d62fe18 'ret' 'int'
|   |       | `-IntegerLiteral 0x16a6d631be0 <col:19> 'int' 0
|   |       |-GotoStmt 0x16a6d631c28 <line:100:13, col:18> 'end' 0x16a6d6319d0
|   |       |-CaseStmt 0x16a6d631c78 <line:101:9, line:103:22>
|   |       | |-ConstantExpr 0x16a6d631c60 <line:101:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d631c40 <col:14> 'int' EnumConstant 0x16a6d62ec80 'OPT_IN' 'int'
|   |       | `-IfStmt 0x16a6d631d08 <line:102:13, line:103:22>
|   |       |   |-ImplicitCastExpr 0x16a6d631cd8 <line:102:17> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x16a6d631ca0 <col:17> 'int' lvalue Var 0x16a6d62f9a0 'pw_source_defined' 'int'
|   |       |   `-GotoStmt 0x16a6d631cf0 <line:103:17, col:22> 'opthelp' 0x16a6d631968
|   |       |-BinaryOperator 0x16a6d631de0 <line:104:13, col:30> 'char *' '='
|   |       | |-DeclRefExpr 0x16a6d631d20 <col:13> 'char *' lvalue Var 0x16a6d631088 'infile' 'char *'
|   |       | `-CallExpr 0x16a6d631dc0 <col:22, col:30> 'char *'
|   |       |   `-ImplicitCastExpr 0x16a6d631da8 <col:22> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |     `-DeclRefExpr 0x16a6d631d58 <col:22> 'char *(void)' Function 0x16a6d61bd20 'opt_arg' 'char *(void)'
|   |       |-BinaryOperator 0x16a6d631e48 <line:105:13, col:33> 'int' '='
|   |       | |-DeclRefExpr 0x16a6d631e00 <col:13> 'int' lvalue Var 0x16a6d62f9a0 'pw_source_defined' 'int'
|   |       | `-IntegerLiteral 0x16a6d631e20 <col:33> 'int' 1
|   |       |-BreakStmt 0x16a6d631e68 <line:106:13>
|   |       |-CaseStmt 0x16a6d631ea8 <line:107:9, line:109:27>
|   |       | |-ConstantExpr 0x16a6d631e90 <line:107:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d631e70 <col:14> 'int' EnumConstant 0x16a6d62ecd8 'OPT_NOVERIFY' 'int'
|   |       | `-BinaryOperator 0x16a6d631f30 <line:109:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x16a6d631ed0 <col:13> 'int' lvalue Var 0x16a6d62fa78 'in_noverify' 'int'
|   |       |   `-IntegerLiteral 0x16a6d631f08 <col:27> 'int' 1
|   |       |-BreakStmt 0x16a6d631f50 <line:111:13>
|   |       |-CaseStmt 0x16a6d631f90 <line:112:9, line:113:21>
|   |       | |-ConstantExpr 0x16a6d631f78 <line:112:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d631f58 <col:14> 'int' EnumConstant 0x16a6d62ed30 'OPT_QUIET' 'int'
|   |       | `-BinaryOperator 0x16a6d632018 <line:113:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x16a6d631fb8 <col:13> 'int' lvalue Var 0x16a6d62fbe0 'quiet' 'int'
|   |       |   `-IntegerLiteral 0x16a6d631ff0 <col:21> 'int' 1
|   |       |-BreakStmt 0x16a6d632038 <line:114:13>
|   |       |-CaseStmt 0x16a6d632078 <line:115:9, line:116:21>
|   |       | |-ConstantExpr 0x16a6d632060 <line:115:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d632040 <col:14> 'int' EnumConstant 0x16a6d62ed88 'OPT_TABLE' 'int'
|   |       | `-BinaryOperator 0x16a6d632100 <line:116:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x16a6d6320a0 <col:13> 'int' lvalue Var 0x16a6d62fc88 'table' 'int'
|   |       |   `-IntegerLiteral 0x16a6d6320d8 <col:21> 'int' 1
|   |       |-BreakStmt 0x16a6d632120 <line:117:13>
|   |       |-CaseStmt 0x16a6d6c3f58 <line:118:9, line:119:23>
|   |       | |-ConstantExpr 0x16a6d6c3f40 <line:118:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d632128 <col:14> 'int' EnumConstant 0x16a6d62ede0 'OPT_REVERSE' 'int'
|   |       | `-BinaryOperator 0x16a6d6c3fe0 <line:119:13, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x16a6d6c3f80 <col:13> 'int' lvalue Var 0x16a6d62fd30 'reverse' 'int'
|   |       |   `-IntegerLiteral 0x16a6d6c3fb8 <col:23> 'int' 1
|   |       |-BreakStmt 0x16a6d6c4000 <line:120:13>
|   |       |-CaseStmt 0x16a6d6c4040 <line:121:9, line:122:20>
|   |       | |-ConstantExpr 0x16a6d6c4028 <line:121:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d6c4008 <col:14> 'int' EnumConstant 0x16a6d62ee90 'OPT_1' 'int'
|   |       | `-BinaryOperator 0x16a6d6c40c8 <line:122:13, col:20> 'int' '='
|   |       |   |-DeclRefExpr 0x16a6d6c4068 <col:13> 'int' lvalue Var 0x16a6d62ff68 'use1' 'int'
|   |       |   `-IntegerLiteral 0x16a6d6c40a0 <col:20> 'int' 1
|   |       |-BreakStmt 0x16a6d6c40e8 <line:123:13>
|   |       |-CaseStmt 0x16a6d6c4128 <line:124:9, line:125:23>
|   |       | |-ConstantExpr 0x16a6d6c4110 <line:124:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d6c40f0 <col:14> 'int' EnumConstant 0x16a6d62ee38 'OPT_APR1' 'int'
|   |       | `-BinaryOperator 0x16a6d6c41b0 <line:125:13, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x16a6d6c4150 <col:13> 'int' lvalue Var 0x16a6d630010 'useapr1' 'int'
|   |       |   `-IntegerLiteral 0x16a6d6c4188 <col:23> 'int' 1
|   |       |-BreakStmt 0x16a6d6c41d0 <line:126:13>
|   |       |-CaseStmt 0x16a6d6c4210 <line:127:9, line:128:24>
|   |       | |-ConstantExpr 0x16a6d6c41f8 <line:127:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d6c41d8 <col:14> 'int' EnumConstant 0x16a6d62eee8 'OPT_CRYPT' 'int'
|   |       | `-BinaryOperator 0x16a6d6c4298 <line:128:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x16a6d6c4238 <col:13> 'int' lvalue Var 0x16a6d62fec0 'usecrypt' 'int'
|   |       |   `-IntegerLiteral 0x16a6d6c4270 <col:24> 'int' 1
|   |       |-BreakStmt 0x16a6d6c42b8 <line:129:13>
|   |       |-CaseStmt 0x16a6d6c42f8 <line:130:9, line:131:27>
|   |       | |-ConstantExpr 0x16a6d6c42e0 <line:130:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d6c42c0 <col:14> 'int' EnumConstant 0x16a6d62ef40 'OPT_SALT' 'int'
|   |       | `-BinaryOperator 0x16a6d6c4380 <line:131:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x16a6d6c4320 <col:13> 'int' lvalue Var 0x16a6d62fb38 'passed_salt' 'int'
|   |       |   `-IntegerLiteral 0x16a6d6c4358 <col:27> 'int' 1
|   |       |-BinaryOperator 0x16a6d6c4430 <line:132:13, col:28> 'char *' '='
|   |       | |-DeclRefExpr 0x16a6d6c43a0 <col:13> 'char *' lvalue Var 0x16a6d62f1a8 'salt' 'char *'
|   |       | `-CallExpr 0x16a6d6c4410 <col:20, col:28> 'char *'
|   |       |   `-ImplicitCastExpr 0x16a6d6c43f8 <col:20> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |     `-DeclRefExpr 0x16a6d6c43d8 <col:20> 'char *(void)' Function 0x16a6d61bd20 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x16a6d6c4450 <line:133:13>
|   |       |-CaseStmt 0x16a6d6c4490 <line:134:9, line:136:22>
|   |       | |-ConstantExpr 0x16a6d6c4478 <line:134:14> 'int'
|   |       | | `-DeclRefExpr 0x16a6d6c4458 <col:14> 'int' EnumConstant 0x16a6d62ef98 'OPT_STDIN' 'int'
|   |       | `-IfStmt 0x16a6d6c4508 <line:135:13, line:136:22>
|   |       |   |-ImplicitCastExpr 0x16a6d6c44d8 <line:135:17> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x16a6d6c44b8 <col:17> 'int' lvalue Var 0x16a6d62f9a0 'pw_source_defined' 'int'
|   |       |   `-GotoStmt 0x16a6d6c44f0 <line:136:17, col:22> 'opthelp' 0x16a6d631968
|   |       |-BinaryOperator 0x16a6d6c4580 <line:137:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x16a6d6c4520 <col:13> 'int' lvalue Var 0x16a6d62f8f8 'in_stdin' 'int'
|   |       | `-IntegerLiteral 0x16a6d6c4558 <col:24> 'int' 1
|   |       |-BinaryOperator 0x16a6d6c45e8 <line:138:13, col:33> 'int' '='
|   |       | |-DeclRefExpr 0x16a6d6c45a0 <col:13> 'int' lvalue Var 0x16a6d62f9a0 'pw_source_defined' 'int'
|   |       | `-IntegerLiteral 0x16a6d6c45c0 <col:33> 'int' 1
|   |       `-BreakStmt 0x16a6d6c4608 <line:139:13>
|   |-BinaryOperator 0x16a6d6c47b8 <line:142:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x16a6d6c4740 <col:5> 'int' lvalue ParmVar 0x16a6d630d90 'argc' 'int'
|   | `-CallExpr 0x16a6d6c4798 <col:12, col:25> 'int'
|   |   `-ImplicitCastExpr 0x16a6d6c4780 <col:12> 'int (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x16a6d6c4760 <col:12> 'int (void)' Function 0x16a6d6163d8 'opt_num_rest' 'int (void)'
|   |-BinaryOperator 0x16a6d6c4880 <line:143:5, col:21> 'char **' '='
|   | |-DeclRefExpr 0x16a6d6c47d8 <col:5> 'char **' lvalue ParmVar 0x16a6d630e10 'argv' 'char **'
|   | `-CallExpr 0x16a6d6c4860 <col:12, col:21> 'char **'
|   |   `-ImplicitCastExpr 0x16a6d6c4848 <col:12> 'char **(*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x16a6d6c47f8 <col:12> 'char **(void)' Function 0x16a6d616280 'opt_rest' 'char **(void)'
|   |-IfStmt 0x16a6d6c4a90 <line:145:5, line:150:5>
|   | |-ImplicitCastExpr 0x16a6d6c48f0 <line:145:9, col:10> 'char *' <LValueToRValue>
|   | | `-UnaryOperator 0x16a6d6c48d8 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x16a6d6c48c0 <col:10> 'char **' <LValueToRValue>
|   | |     `-DeclRefExpr 0x16a6d6c48a0 <col:10> 'char **' lvalue ParmVar 0x16a6d630e10 'argv' 'char **'
|   | `-CompoundStmt 0x16a6d6c4a68 <col:16, line:150:5>
|   |   |-IfStmt 0x16a6d6c4958 <line:146:9, line:147:18>
|   |   | |-ImplicitCastExpr 0x16a6d6c4928 <line:146:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x16a6d6c4908 <col:13> 'int' lvalue Var 0x16a6d62f9a0 'pw_source_defined' 'int'
|   |   | `-GotoStmt 0x16a6d6c4940 <line:147:13, col:18> 'opthelp' 0x16a6d631968
|   |   |-BinaryOperator 0x16a6d6c49b8 <line:148:9, col:29> 'int' '='
|   |   | |-DeclRefExpr 0x16a6d6c4970 <col:9> 'int' lvalue Var 0x16a6d62f9a0 'pw_source_defined' 'int'
|   |   | `-IntegerLiteral 0x16a6d6c4990 <col:29> 'int' 1
|   |   `-BinaryOperator 0x16a6d6c4a48 <line:149:9, col:19> 'char **' '='
|   |     |-DeclRefExpr 0x16a6d6c49d8 <col:9> 'char **' lvalue Var 0x16a6d62f3e8 'passwds' 'char **'
|   |     `-ImplicitCastExpr 0x16a6d6c4a30 <col:19> 'char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x16a6d6c4a10 <col:19> 'char **' lvalue ParmVar 0x16a6d630e10 'argv' 'char **'
|   |-IfStmt 0x16a6d6c4c58 <line:152:5, line:155:5>
|   | |-BinaryOperator 0x16a6d6c4bb8 <line:152:9, col:32> 'int' '&&'
|   | | |-BinaryOperator 0x16a6d6c4b48 <col:9, col:23> 'int' '&&'
|   | | | |-UnaryOperator 0x16a6d6c4ae0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x16a6d6c4ac8 <col:10> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x16a6d6c4aa8 <col:10> 'int' lvalue Var 0x16a6d62fec0 'usecrypt' 'int'
|   | | | `-UnaryOperator 0x16a6d6c4b30 <col:22, col:23> 'int' prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x16a6d6c4b18 <col:23> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x16a6d6c4af8 <col:23> 'int' lvalue Var 0x16a6d62ff68 'use1' 'int'
|   | | `-UnaryOperator 0x16a6d6c4ba0 <col:31, col:32> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x16a6d6c4b88 <col:32> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x16a6d6c4b68 <col:32> 'int' lvalue Var 0x16a6d630010 'useapr1' 'int'
|   | `-CompoundStmt 0x16a6d6c4c40 <col:41, line:155:5>
|   |   `-BinaryOperator 0x16a6d6c4c20 <line:154:9, col:20> 'int' '='
|   |     |-DeclRefExpr 0x16a6d6c4bd8 <col:9> 'int' lvalue Var 0x16a6d62fec0 'usecrypt' 'int'
|   |     `-IntegerLiteral 0x16a6d6c4bf8 <col:20> 'int' 1
|   |-IfStmt 0x16a6d6c4dd0 <line:156:5, line:159:5>
|   | |-BinaryOperator 0x16a6d6c4d80 <line:156:9, col:37> 'int' '>'
|   | | |-BinaryOperator 0x16a6d6c4d38 <col:9, col:27> 'int' '+'
|   | | | |-BinaryOperator 0x16a6d6c4ce0 <col:9, col:20> 'int' '+'
|   | | | | |-ImplicitCastExpr 0x16a6d6c4cb0 <col:9> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x16a6d6c4c70 <col:9> 'int' lvalue Var 0x16a6d62fec0 'usecrypt' 'int'
|   | | | | `-ImplicitCastExpr 0x16a6d6c4cc8 <col:20> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x16a6d6c4c90 <col:20> 'int' lvalue Var 0x16a6d62ff68 'use1' 'int'
|   | | | `-ImplicitCastExpr 0x16a6d6c4d20 <col:27> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x16a6d6c4d00 <col:27> 'int' lvalue Var 0x16a6d630010 'useapr1' 'int'
|   | | `-IntegerLiteral 0x16a6d6c4d58 <col:37> 'int' 1
|   | `-CompoundStmt 0x16a6d6c4db8 <col:40, line:159:5>
|   |   `-GotoStmt 0x16a6d6c4da0 <line:158:9, col:14> 'opthelp' 0x16a6d631968
|   |-IfStmt 0x16a6d6c5038 <line:170:5, line:173:5>
|   | |-BinaryOperator 0x16a6d6c4f18 <line:170:9, col:27> 'int' '&&'
|   | | |-BinaryOperator 0x16a6d6c4ec0 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x16a6d6c4e90 <.//openssl//file_jk/after\apps\passwd.c:170:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x16a6d6c4de8 <col:9> 'char *' lvalue Var 0x16a6d631088 'infile' 'char *'
|   | | | `-ImplicitCastExpr 0x16a6d6c4ea8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |   `-ParenExpr 0x16a6d6c4e70 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x16a6d6c4e48 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x16a6d6c4e08 <col:26> 'int' 0
|   | | `-ImplicitCastExpr 0x16a6d6c4f00 <.//openssl//file_jk/after\apps\passwd.c:170:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x16a6d6c4ee0 <col:27> 'int' lvalue Var 0x16a6d62f8f8 'in_stdin' 'int'
|   | `-CompoundStmt 0x16a6d6c5020 <col:37, line:173:5>
|   |   `-GotoStmt 0x16a6d6c5008 <line:172:9, col:14> 'end' 0x16a6d6319d0
|   |-IfStmt 0x16a6d6c5350 <line:175:5, line:183:5>
|   | |-BinaryOperator 0x16a6d6c5180 <line:175:9, col:27> 'int' '||'
|   | | |-BinaryOperator 0x16a6d6c5128 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x16a6d6c50f8 <.//openssl//file_jk/after\apps\passwd.c:175:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x16a6d6c5050 <col:9> 'char *' lvalue Var 0x16a6d631088 'infile' 'char *'
|   | | | `-ImplicitCastExpr 0x16a6d6c5110 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |   `-ParenExpr 0x16a6d6c50d8 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x16a6d6c50b0 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x16a6d6c5070 <col:26> 'int' 0
|   | | `-ImplicitCastExpr 0x16a6d6c5168 <.//openssl//file_jk/after\apps\passwd.c:175:27> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x16a6d6c5148 <col:27> 'int' lvalue Var 0x16a6d62f8f8 'in_stdin' 'int'
|   | `-CompoundStmt 0x16a6d6c5338 <col:37, line:183:5>
|   |   `-IfStmt 0x16a6d6c5320 <line:181:9, line:182:18>
|   |     |-OpaqueValueExpr 0x16a6d6c5308 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x16a6d6c52f0 <col:13, col:18> 'end' 0x16a6d6319d0
|   |-IfStmt 0x16a6d6c5560 <line:185:5, line:188:21> has_else
|   | |-ImplicitCastExpr 0x16a6d6c5388 <line:185:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x16a6d6c5368 <col:9> 'int' lvalue Var 0x16a6d62fec0 'usecrypt' 'int'
|   | |-BinaryOperator 0x16a6d6c5418 <line:186:9, col:21> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x16a6d6c53a0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x16a6d631208 'pw_maxlen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x16a6d6c5400 <col:21> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x16a6d6c53d8 <col:21> 'int' 8
|   | `-IfStmt 0x16a6d6c5548 <line:187:10, line:188:21>
|   |   |-BinaryOperator 0x16a6d6c54a8 <line:187:14, col:22> 'int' '||'
|   |   | |-ImplicitCastExpr 0x16a6d6c5478 <col:14> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x16a6d6c5438 <col:14> 'int' lvalue Var 0x16a6d62ff68 'use1' 'int'
|   |   | `-ImplicitCastExpr 0x16a6d6c5490 <col:22> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x16a6d6c5458 <col:22> 'int' lvalue Var 0x16a6d630010 'useapr1' 'int'
|   |   `-BinaryOperator 0x16a6d6c5528 <line:188:9, col:21> 'size_t':'unsigned long long' '='
|   |     |-DeclRefExpr 0x16a6d6c54c8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x16a6d631208 'pw_maxlen' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x16a6d6c5510 <col:21> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x16a6d6c54e8 <col:21> 'int' 256
|   |-IfStmt 0x16a6d6c59c8 <line:191:5, line:198:5>
|   | |-BinaryOperator 0x16a6d6c5660 <line:191:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x16a6d6c5630 <.//openssl//file_jk/after\apps\passwd.c:191:9> 'char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x16a6d6c5588 <col:9> 'char **' lvalue Var 0x16a6d62f3e8 'passwds' 'char **'
|   | | `-ImplicitCastExpr 0x16a6d6c5648 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
|   | |   `-ParenExpr 0x16a6d6c5610 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x16a6d6c55e8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x16a6d6c55a8 <col:26> 'int' 0
|   | `-CompoundStmt 0x16a6d6c59a8 <.//openssl//file_jk/after\apps\passwd.c:191:26, line:198:5>
|   |   |-BinaryOperator 0x16a6d6c5750 <line:194:9, col:42> 'size_t':'unsigned long long' '='
|   |   | |-DeclRefExpr 0x16a6d6c5680 <col:9> 'size_t':'unsigned long long' lvalue Var 0x16a6d631150 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x16a6d6c5730 <col:30, col:42> 'unsigned long long' '+'
|   |   |   |-ImplicitCastExpr 0x16a6d6c5700 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x16a6d6c56b8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x16a6d631208 'pw_maxlen' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x16a6d6c5718 <col:42> 'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x16a6d6c56d8 <col:42> 'int' 2
|   |   `-BinaryOperator 0x16a6d6c5988 <line:196:9, line:197:61> 'char *' '='
|   |     |-DeclRefExpr 0x16a6d6c5770 <line:196:9> 'char *' lvalue Var 0x16a6d62f2c8 'passwd' 'char *'
|   |     `-BinaryOperator 0x16a6d6c5968 <col:18, line:197:61> 'char *' '='
|   |       |-DeclRefExpr 0x16a6d6c57a8 <line:196:18> 'char *' lvalue Var 0x16a6d62f668 'passwd_malloc' 'char *'
|   |       `-ImplicitCastExpr 0x16a6d6c5950 <line:197:13, col:61> 'char *' <BitCast>
|   |         `-CallExpr 0x16a6d6c58c0 <col:13, col:61> 'void *'
|   |           |-ImplicitCastExpr 0x16a6d6c58a8 <col:13> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x16a6d6c57e0 <col:13> 'void *(int, const char *)' Function 0x16a6d622830 'app_malloc' 'void *(int, const char *)'
|   |           |-ImplicitCastExpr 0x16a6d6c5908 <col:24> 'int' <IntegralCast>
|   |           | `-ImplicitCastExpr 0x16a6d6c58f0 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x16a6d6c5800 <col:24> 'size_t':'unsigned long long' lvalue Var 0x16a6d631150 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |           `-ImplicitCastExpr 0x16a6d6c5938 <col:44> 'const char *' <NoOp>
|   |             `-ImplicitCastExpr 0x16a6d6c5920 <col:44> 'char *' <ArrayToPointerDecay>
|   |               `-StringLiteral 0x16a6d6c5858 <col:44> 'char [16]' lvalue "password buffer"
|   |-IfStmt 0x16a6d6c0580 <line:200:5, line:224:5>
|   | |-OpaqueValueExpr 0x16a6d6c0568 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x16a6d6c0550 <line:200:44, line:224:5>
|   |   `-IfStmt 0x16a6d6c0528 <line:206:9, line:223:9> has_else
|   |     |-IntegerLiteral 0x16a6d6c5b80 <line:206:13> 'int' 1
|   |     |-CompoundStmt 0x16a6d6c0440 <col:16, line:219:9>
|   |     | |-DeclStmt 0x16a6d6c5ea8 <line:209:13, col:60>
|   |     | | `-VarDecl 0x16a6d6c5c50 <col:13, col:59> col:26 used passwds_static 'char *[2]' static cinit
|   |     | |   `-InitListExpr 0x16a6d6c5e28 <col:46, col:59> 'char *[2]'
|   |     | |     |-ImplicitCastExpr 0x16a6d6c5e78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
|   |     | |     | `-ParenExpr 0x16a6d6c5d20 <col:17, col:27> 'void *'
|   |     | |     |   `-CStyleCastExpr 0x16a6d6c5cf8 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |     |     `-IntegerLiteral 0x16a6d6c5cb8 <col:26> 'int' 0
|   |     | |     `-ImplicitCastExpr 0x16a6d6c5e90 <col:17, col:27> 'char *' <NullToPointer>
|   |     | |       `-ParenExpr 0x16a6d6c5da8 <col:17, col:27> 'void *'
|   |     | |         `-CStyleCastExpr 0x16a6d6c5d80 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |           `-IntegerLiteral 0x16a6d6c5d40 <col:26> 'int' 0
|   |     | |-BinaryOperator 0x16a6d6c5f30 <.//openssl//file_jk/after\apps\passwd.c:211:13, col:23> 'char **' '='
|   |     | | |-DeclRefExpr 0x16a6d6c5ec0 <col:13> 'char **' lvalue Var 0x16a6d62f3e8 'passwds' 'char **'
|   |     | | `-ImplicitCastExpr 0x16a6d6c5f18 <col:23> 'char **' <ArrayToPointerDecay>
|   |     | |   `-DeclRefExpr 0x16a6d6c5ee0 <col:23> 'char *[2]' lvalue Var 0x16a6d6c5c50 'passwds_static' 'char *[2]'
|   |     | |-IfStmt 0x16a6d6c0350 <line:212:13, line:217:13>
|   |     | | |-OpaqueValueExpr 0x16a6d6c0338 <<invalid sloc>> '_Bool'
|   |     | | `-CompoundStmt 0x16a6d6c0320 <line:212:29, line:217:13>
|   |     | |   `-IfStmt 0x16a6d6c0308 <line:213:17, line:216:26>
|   |     | |     |-BinaryOperator 0x16a6d6c02d0 <line:213:21, line:215:56> 'int' '!='
|   |     | |     | |-CallExpr 0x16a6d6c0220 <line:213:21, line:215:51> 'int'
|   |     | |     | | |-ImplicitCastExpr 0x16a6d6c0208 <line:213:21> 'int (*)()' <FunctionToPointerDecay>
|   |     | |     | | | `-DeclRefExpr 0x16a6d6c0078 <col:21> 'int ()' Function 0x16a6d6bffb0 'EVP_read_pw_string' 'int ()'
|   |     | |     | | |-ImplicitCastExpr 0x16a6d6c0260 <line:214:22> 'char *' <LValueToRValue>
|   |     | |     | | | `-DeclRefExpr 0x16a6d6c0098 <col:22> 'char *' lvalue Var 0x16a6d62f668 'passwd_malloc' 'char *'
|   |     | |     | | |-ImplicitCastExpr 0x16a6d6c0278 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     | | | `-DeclRefExpr 0x16a6d6c00b8 <col:37> 'size_t':'unsigned long long' lvalue Var 0x16a6d631150 'passwd_malloc_size' 'size_t':'unsigned long long'
|   |     | |     | | |-ImplicitCastExpr 0x16a6d6c0290 <col:57> 'char *' <ArrayToPointerDecay>
|   |     | |     | | | `-StringLiteral 0x16a6d6c0118 <col:57> 'char [11]' lvalue "Password: "
|   |     | |     | | `-UnaryOperator 0x16a6d6c01f0 <line:215:22, col:50> 'int' prefix '!' cannot overflow
|   |     | |     | |   `-ParenExpr 0x16a6d6c01d0 <col:23, col:50> 'int'
|   |     | |     | |     `-BinaryOperator 0x16a6d6c01b0 <col:24, col:39> 'int' '||'
|   |     | |     | |       |-ImplicitCastExpr 0x16a6d6c0180 <col:24> 'int' <LValueToRValue>
|   |     | |     | |       | `-DeclRefExpr 0x16a6d6c0140 <col:24> 'int' lvalue Var 0x16a6d62fb38 'passed_salt' 'int'
|   |     | |     | |       `-ImplicitCastExpr 0x16a6d6c0198 <col:39> 'int' <LValueToRValue>
|   |     | |     | |         `-DeclRefExpr 0x16a6d6c0160 <col:39> 'int' lvalue Var 0x16a6d62fa78 'in_noverify' 'int'
|   |     | |     | `-IntegerLiteral 0x16a6d6c02a8 <col:56> 'int' 0
|   |     | |     `-GotoStmt 0x16a6d6c02f0 <line:216:21, col:26> 'end' 0x16a6d6319d0
|   |     | `-BinaryOperator 0x16a6d6c0420 <line:218:13, col:26> 'char *' '='
|   |     |   |-ArraySubscriptExpr 0x16a6d6c03c8 <col:13, col:22> 'char *' lvalue
|   |     |   | |-ImplicitCastExpr 0x16a6d6c03b0 <col:13> 'char **' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x16a6d6c0368 <col:13> 'char **' lvalue Var 0x16a6d62f3e8 'passwds' 'char **'
|   |     |   | `-IntegerLiteral 0x16a6d6c0388 <col:21> 'int' 0
|   |     |   `-ImplicitCastExpr 0x16a6d6c0408 <col:26> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x16a6d6c03e8 <col:26> 'char *' lvalue Var 0x16a6d62f668 'passwd_malloc' 'char *'
|   |     `-CompoundStmt 0x16a6d6c0510 <line:219:16, line:223:9>
|   |       `-GotoStmt 0x16a6d6c04f8 <line:222:13, col:18> 'end' 0x16a6d6319d0
|   |-IfStmt 0x16a6d6c1558 <line:226:5, line:263:5> has_else
|   | |-OpaqueValueExpr 0x16a6d6c1540 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x16a6d6c33e8 <line:226:21, line:237:5>
|   | | |-CStyleCastExpr 0x16a6d6c0ae8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | | `-ParenExpr 0x16a6d6c0ac8 <col:35, col:128> 'int'
|   | | |   `-BinaryOperator 0x16a6d6c0a78 <col:37, col:126> 'int' '||'
|   | | |     |-ParenExpr 0x16a6d6c0768 <col:37, col:53> 'int'
|   | | |     | `-UnaryOperator 0x16a6d6c0750 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | | |     |   `-UnaryOperator 0x16a6d6c0738 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | | |     |     `-ParenExpr 0x16a6d6c0718 <col:40, col:52> 'int'
|   | | |     |       `-BinaryOperator 0x16a6d6c06f8 <.//openssl//file_jk/after\apps\passwd.c:227:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |     |         |-ImplicitCastExpr 0x16a6d6c06c8 <.//openssl//file_jk/after\apps\passwd.c:227:16> 'char **' <LValueToRValue>
|   | | |     |         | `-DeclRefExpr 0x16a6d6c0620 <col:16> 'char **' lvalue Var 0x16a6d62f3e8 'passwds' 'char **'
|   | | |     |         `-ImplicitCastExpr 0x16a6d6c06e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
|   | | |     |           `-ParenExpr 0x16a6d6c06a8 <col:17, col:27> 'void *'
|   | | |     |             `-CStyleCastExpr 0x16a6d6c0680 <col:18, col:26> 'void *' <NullToPointer>
|   | | |     |               `-IntegerLiteral 0x16a6d6c0640 <col:26> 'int' 0
|   | | |     `-ParenExpr 0x16a6d6c0a58 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | | |       `-BinaryOperator 0x16a6d6c0a38 <col:59, col:125> 'int' ','
|   | | |         |-CallExpr 0x16a6d6c0960 <col:59, col:122> 'void'
|   | | |         | |-ImplicitCastExpr 0x16a6d6c0948 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |         | | `-DeclRefExpr 0x16a6d6c0788 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x16a6d668b90 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | | |         | |-ImplicitCastExpr 0x16a6d6c09b0 <<scratch space>:304:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x16a6d6c0998 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x16a6d6c07e8 <col:1> 'unsigned short [16]' lvalue L"passwds != NULL"
|   | | |         | |-ImplicitCastExpr 0x16a6d6c09e0 <line:306:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x16a6d6c09c8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x16a6d6c0858 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   | | |         | `-ImplicitCastExpr 0x16a6d6c09f8 <line:307:1> 'unsigned int' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x16a6d6c08c0 <col:1> 'int' 227
|   | | |         `-IntegerLiteral 0x16a6d6c0a10 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | | |-CStyleCastExpr 0x16a6d6c2fc0 <col:29, col:128> 'void' <ToVoid>
|   | | | `-ParenExpr 0x16a6d6c2fa0 <col:35, col:128> 'int'
|   | | |   `-BinaryOperator 0x16a6d6c2f50 <col:37, col:126> 'int' '||'
|   | | |     |-ParenExpr 0x16a6d6c0cb0 <col:37, col:53> 'int'
|   | | |     | `-UnaryOperator 0x16a6d6c0c98 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | | |     |   `-UnaryOperator 0x16a6d6c0c80 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | | |     |     `-ParenExpr 0x16a6d6c0c60 <col:40, col:52> 'int'
|   | | |     |       `-BinaryOperator 0x16a6d6c0c40 <.//openssl//file_jk/after\apps\passwd.c:228:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |     |         |-ImplicitCastExpr 0x16a6d6c0c10 <.//openssl//file_jk/after\apps\passwd.c:228:16, col:17> 'char *' <LValueToRValue>
|   | | |     |         | `-UnaryOperator 0x16a6d6c0b70 <col:16, col:17> 'char *' lvalue prefix '*' cannot overflow
|   | | |     |         |   `-ImplicitCastExpr 0x16a6d6c0b58 <col:17> 'char **' <LValueToRValue>
|   | | |     |         |     `-DeclRefExpr 0x16a6d6c0b38 <col:17> 'char **' lvalue Var 0x16a6d62f3e8 'passwds' 'char **'
|   | | |     |         `-ImplicitCastExpr 0x16a6d6c0c28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | | |     |           `-ParenExpr 0x16a6d6c0bf0 <col:17, col:27> 'void *'
|   | | |     |             `-CStyleCastExpr 0x16a6d6c0bc8 <col:18, col:26> 'void *' <NullToPointer>
|   | | |     |               `-IntegerLiteral 0x16a6d6c0b88 <col:26> 'int' 0
|   | | |     `-ParenExpr 0x16a6d6c2f30 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | | |       `-BinaryOperator 0x16a6d6c0ee0 <col:59, col:125> 'int' ','
|   | | |         |-CallExpr 0x16a6d6c0e08 <col:59, col:122> 'void'
|   | | |         | |-ImplicitCastExpr 0x16a6d6c0df0 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | | |         | | `-DeclRefExpr 0x16a6d6c0cd0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x16a6d668b90 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | | |         | |-ImplicitCastExpr 0x16a6d6c0e58 <<scratch space>:3:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x16a6d6c0e40 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x16a6d6c0d28 <col:1> 'unsigned short [17]' lvalue L"*passwds != NULL"
|   | | |         | |-ImplicitCastExpr 0x16a6d6c0e88 <line:5:1> 'const wchar_t *' <NoOp>
|   | | |         | | `-ImplicitCastExpr 0x16a6d6c0e70 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | | |         | |   `-StringLiteral 0x16a6d6c0d60 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   | | |         | `-ImplicitCastExpr 0x16a6d6c0ea0 <line:6:1> 'unsigned int' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x16a6d6c0dc8 <col:1> 'int' 228
|   | | |         `-IntegerLiteral 0x16a6d6c0eb8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | | `-DoStmt 0x16a6d6c33c8 <.//openssl//file_jk/after\apps\passwd.c:230:9, line:236:34>
|   | |   |-CompoundStmt 0x16a6d6c3280 <line:230:12, line:236:9>
|   | |   | |-BinaryOperator 0x16a6d6c3070 <line:231:13, col:30> 'char *' '='
|   | |   | | |-DeclRefExpr 0x16a6d6c2fe8 <col:13> 'char *' lvalue Var 0x16a6d62f2c8 'passwd' 'char *'
|   | |   | | `-ImplicitCastExpr 0x16a6d6c3058 <col:22, col:30> 'char *' <LValueToRValue>
|   | |   | |   `-UnaryOperator 0x16a6d6c3040 <col:22, col:30> 'char *' lvalue prefix '*' cannot overflow
|   | |   | |     `-UnaryOperator 0x16a6d6c3028 <col:23, col:30> 'char **' postfix '++'
|   | |   | |       `-DeclRefExpr 0x16a6d6c3008 <col:23> 'char **' lvalue Var 0x16a6d62f3e8 'passwds' 'char **'
|   | |   | `-IfStmt 0x16a6d6c3268 <line:232:13, line:235:22>
|   | |   |   |-OpaqueValueExpr 0x16a6d6c3250 <<invalid sloc>> '_Bool'
|   | |   |   `-GotoStmt 0x16a6d6c3238 <col:17, col:22> 'end' 0x16a6d6319d0
|   | |   `-BinaryOperator 0x16a6d6c33a8 <line:236:18, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | |     |-ImplicitCastExpr 0x16a6d6c3378 <.//openssl//file_jk/after\apps\passwd.c:236:18, col:19> 'char *' <LValueToRValue>
|   | |     | `-UnaryOperator 0x16a6d6c32d8 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
|   | |     |   `-ImplicitCastExpr 0x16a6d6c32c0 <col:19> 'char **' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x16a6d6c32a0 <col:19> 'char **' lvalue Var 0x16a6d62f3e8 'passwds' 'char **'
|   | |     `-ImplicitCastExpr 0x16a6d6c3390 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   | |       `-ParenExpr 0x16a6d6c3358 <col:17, col:27> 'void *'
|   | |         `-CStyleCastExpr 0x16a6d6c3330 <col:18, col:26> 'void *' <NullToPointer>
|   | |           `-IntegerLiteral 0x16a6d6c32f0 <col:26> 'int' 0
|   | `-CompoundStmt 0x16a6d6c1518 <.//openssl//file_jk/after\apps\passwd.c:237:12, line:263:5>
|   |   |-DeclStmt 0x16a6d6c3490 <line:239:9, col:17>
|   |   | `-VarDecl 0x16a6d6c3428 <col:9, col:13> col:13 used done 'int'
|   |   |-CStyleCastExpr 0x16a6d6c38d0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   |   | `-ParenExpr 0x16a6d6c38b0 <col:35, col:128> 'int'
|   |   |   `-BinaryOperator 0x16a6d6c3860 <col:37, col:126> 'int' '||'
|   |   |     |-ParenExpr 0x16a6d6c35f0 <col:37, col:53> 'int'
|   |   |     | `-UnaryOperator 0x16a6d6c35d8 <col:38, col:52> 'int' prefix '!' cannot overflow
|   |   |     |   `-UnaryOperator 0x16a6d6c35c0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   |   |     |     `-ParenExpr 0x16a6d6c35a0 <col:40, col:52> 'int'
|   |   |     |       `-BinaryOperator 0x16a6d6c3580 <.//openssl//file_jk/after\apps\passwd.c:241:16, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |   |     |         |-ImplicitCastExpr 0x16a6d6c3550 <.//openssl//file_jk/after\apps\passwd.c:241:16> 'char *' <LValueToRValue>
|   |   |     |         | `-DeclRefExpr 0x16a6d6c34a8 <col:16> 'char *' lvalue Var 0x16a6d62f2c8 'passwd' 'char *'
|   |   |     |         `-ImplicitCastExpr 0x16a6d6c3568 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |   |     |           `-ParenExpr 0x16a6d6c3530 <col:17, col:27> 'void *'
|   |   |     |             `-CStyleCastExpr 0x16a6d6c3508 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |               `-IntegerLiteral 0x16a6d6c34c8 <col:26> 'int' 0
|   |   |     `-ParenExpr 0x16a6d6c3840 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   |   |       `-BinaryOperator 0x16a6d6c3820 <col:59, col:125> 'int' ','
|   |   |         |-CallExpr 0x16a6d6c3748 <col:59, col:122> 'void'
|   |   |         | |-ImplicitCastExpr 0x16a6d6c3730 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   |         | | `-DeclRefExpr 0x16a6d6c3610 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x16a6d668b90 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   |   |         | |-ImplicitCastExpr 0x16a6d6c3798 <<scratch space>:8:1> 'const wchar_t *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x16a6d6c3780 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x16a6d6c3668 <col:1> 'unsigned short [15]' lvalue L"passwd != NULL"
|   |   |         | |-ImplicitCastExpr 0x16a6d6c37c8 <line:10:1> 'const wchar_t *' <NoOp>
|   |   |         | | `-ImplicitCastExpr 0x16a6d6c37b0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |   |         | |   `-StringLiteral 0x16a6d6c36a0 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   |   |         | `-ImplicitCastExpr 0x16a6d6c37e0 <line:11:1> 'unsigned int' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x16a6d6c3708 <col:1> 'int' 241
|   |   |         `-IntegerLiteral 0x16a6d6c37f8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   |   `-DoStmt 0x16a6d6c14f8 <.//openssl//file_jk/after\apps\passwd.c:242:9, line:262:23>
|   |     |-CompoundStmt 0x16a6d6c1480 <line:242:12, line:262:9>
|   |     | |-DeclStmt 0x16a6d6c3b40 <line:243:13, col:56>
|   |     | | `-VarDecl 0x16a6d6c3910 <col:13, col:17> col:17 used r 'int'
|   |     | |-IfStmt 0x16a6d6c1370 <line:244:13, line:260:13>
|   |     | | |-BinaryOperator 0x16a6d6c3bd0 <line:244:17, col:21> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x16a6d6c3bb8 <col:17> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x16a6d6c3b58 <col:17> 'int' lvalue Var 0x16a6d6c3910 'r' 'int'
|   |     | | | `-IntegerLiteral 0x16a6d6c3b90 <col:21> 'int' 0
|   |     | | `-CompoundStmt 0x16a6d6c1348 <col:24, line:260:13>
|   |     | |   |-DeclStmt 0x16a6d6c3da0 <line:245:17, col:49>
|   |     | |   | `-VarDecl 0x16a6d6c3c08 <col:17, col:48> col:23 used c 'char *' cinit
|   |     | |   |   `-ParenExpr 0x16a6d6c3d80 <col:27, col:48> 'char *'
|   |     | |   |     `-CallExpr 0x16a6d6c3d20 <col:28, col:47> 'char *'
|   |     | |   |       |-ImplicitCastExpr 0x16a6d6c3d08 <col:28> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   |     | |   |       | `-DeclRefExpr 0x16a6d6c3c70 <col:28> 'char *(const char *, int)' Function 0x16a6d5cca50 'strchr' 'char *(const char *, int)'
|   |     | |   |       |-ImplicitCastExpr 0x16a6d6c3d68 <col:35> 'const char *' <NoOp>
|   |     | |   |       | `-ImplicitCastExpr 0x16a6d6c3d50 <col:35> 'char *' <LValueToRValue>
|   |     | |   |       |   `-DeclRefExpr 0x16a6d6c3c90 <col:35> 'char *' lvalue Var 0x16a6d62f2c8 'passwd' 'char *'
|   |     | |   |       `-CharacterLiteral 0x16a6d6c3cb0 <col:43> 'int' 10
|   |     | |   |-IfStmt 0x16a6d6c1148 <line:246:17, line:254:17> has_else
|   |     | |   | |-BinaryOperator 0x16a6d6c3ea8 <line:246:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |     | |   | | |-ImplicitCastExpr 0x16a6d6c3e78 <.//openssl//file_jk/after\apps\passwd.c:246:21> 'char *' <LValueToRValue>
|   |     | |   | | | `-DeclRefExpr 0x16a6d6c3db8 <col:21> 'char *' lvalue Var 0x16a6d6c3c08 'c' 'char *'
|   |     | |   | | `-ImplicitCastExpr 0x16a6d6c3e90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
|   |     | |   | |   `-ParenExpr 0x16a6d6c3e58 <col:17, col:27> 'void *'
|   |     | |   | |     `-CStyleCastExpr 0x16a6d6c3e30 <col:18, col:26> 'void *' <NullToPointer>
|   |     | |   | |       `-IntegerLiteral 0x16a6d6c3df0 <col:26> 'int' 0
|   |     | |   | |-CompoundStmt 0x16a6d6c0f70 <.//openssl//file_jk/after\apps\passwd.c:246:32, line:248:17>
|   |     | |   | | `-BinaryOperator 0x16a6d6c0f50 <line:247:21, col:26> 'char' '='
|   |     | |   | |   |-UnaryOperator 0x16a6d6c3f00 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow
|   |     | |   | |   | `-ImplicitCastExpr 0x16a6d6c3ee8 <col:22> 'char *' <LValueToRValue>
|   |     | |   | |   |   `-DeclRefExpr 0x16a6d6c3ec8 <col:22> 'char *' lvalue Var 0x16a6d6c3c08 'c' 'char *'
|   |     | |   | |   `-ImplicitCastExpr 0x16a6d6c0f38 <col:26> 'char' <IntegralCast>
|   |     | |   | |     `-IntegerLiteral 0x16a6d6c0f10 <col:26> 'int' 0
|   |     | |   | `-CompoundStmt 0x16a6d6c1130 <line:248:24, line:254:17>
|   |     | |   |   `-DeclStmt 0x16a6d6c1000 <line:250:21, col:39>
|   |     | |   |     `-VarDecl 0x16a6d6c0f98 <col:21, col:26> col:26 invalid trash 'char'
|   |     | |   `-IfStmt 0x16a6d6c1330 <line:256:17, line:259:26>
|   |     | |     |-OpaqueValueExpr 0x16a6d6c1318 <<invalid sloc>> '_Bool'
|   |     | |     `-GotoStmt 0x16a6d6c1300 <col:21, col:26> 'end' 0x16a6d6319d0
|   |     | `-BinaryOperator 0x16a6d6c1460 <line:261:13, col:27> 'int' '='
|   |     |   |-DeclRefExpr 0x16a6d6c1388 <col:13> 'int' lvalue Var 0x16a6d6c3428 'done' 'int'
|   |     |   `-ParenExpr 0x16a6d6c1440 <col:20, col:27> 'int'
|   |     |     `-BinaryOperator 0x16a6d6c1420 <col:21, col:26> 'int' '<='
|   |     |       |-ImplicitCastExpr 0x16a6d6c1408 <col:21> 'int' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x16a6d6c13c0 <col:21> 'int' lvalue Var 0x16a6d6c3910 'r' 'int'
|   |     |       `-IntegerLiteral 0x16a6d6c13e0 <col:26> 'int' 0
|   |     `-UnaryOperator 0x16a6d6c14e0 <line:262:18, col:19> 'int' prefix '!' cannot overflow
|   |       `-ImplicitCastExpr 0x16a6d6c14c8 <col:19> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x16a6d6c14a8 <col:19> 'int' lvalue Var 0x16a6d6c3428 'done' 'int'
|   |-BinaryOperator 0x16a6d6c15c8 <line:264:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x16a6d6c1580 <col:5> 'int' lvalue Var 0x16a6d62fe18 'ret' 'int'
|   | `-IntegerLiteral 0x16a6d6c15a0 <col:11> 'int' 0
|   |-LabelStmt 0x16a6d6c1700 <line:266:2, col:5> 'end'
|   | `-NullStmt 0x16a6d6c16f8 <col:5>
|   |-CallExpr 0x16a6d6c1860 <line:268:5, col:29> 'int'
|   | |-ImplicitCastExpr 0x16a6d6c1848 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x16a6d6c1808 <col:5> 'int ()' Function 0x16a6d6c1740 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x16a6d6c1888 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x16a6d6c1828 <col:18> 'char *' lvalue Var 0x16a6d62f548 'salt_malloc' 'char *'
|   |-CallExpr 0x16a6d6c18f8 <line:269:5, col:31> 'int'
|   | |-ImplicitCastExpr 0x16a6d6c18e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x16a6d6c18a0 <col:5> 'int ()' Function 0x16a6d6c1740 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x16a6d6c1920 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x16a6d6c18c0 <col:18> 'char *' lvalue Var 0x16a6d62f668 'passwd_malloc' 'char *'
|   `-ReturnStmt 0x16a6d6c1aa0 <line:271:5, col:16>
|     `-ImplicitCastExpr 0x16a6d6c1a88 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x16a6d6c1a68 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x16a6d6c1a48 <col:13> 'int' lvalue Var 0x16a6d62fe18 'ret' 'int'
|-FunctionDecl 0x16a6d6c1de0 <line:284:1, line:421:1> line:284:14 used md5crypt 'char *(const char *, const char *, const char *)' static
| |-ParmVarDecl 0x16a6d6c1ba8 <col:23, col:35> col:35 used passwd 'const char *'
| |-ParmVarDecl 0x16a6d6c1c28 <col:43, col:55> col:55 used magic 'const char *'
| |-ParmVarDecl 0x16a6d6c1ca8 <col:62, col:74> col:74 used salt 'const char *'
| `-CompoundStmt 0x16a6d6cdd18 <line:285:1, line:421:1>
|   |-DeclStmt 0x16a6d6c60f0 <line:287:5, col:40>
|   | `-VarDecl 0x16a6d6c6088 <col:5, col:39> col:17 used out_buf 'char [41]' static
|   |-DeclStmt 0x16a6d6c6188 <line:288:5, col:41>
|   | `-VarDecl 0x16a6d6c6120 <col:5, col:19> col:19 invalid buf 'unsigned char'
|   |-DeclStmt 0x16a6d6c6220 <line:289:5, col:19>
|   | `-VarDecl 0x16a6d6c61b8 <col:5, col:11> col:11 used salt_out 'char *'
|   |-DeclStmt 0x16a6d6c62b8 <line:290:5, col:10>
|   | `-VarDecl 0x16a6d6c6250 <col:5, col:9> col:9 used n 'int'
|   |-DeclStmt 0x16a6d6c6350 <line:291:5, col:19>
|   | `-VarDecl 0x16a6d6c62e8 <col:5, col:18> col:18 used i 'unsigned int'
|   |-DeclStmt 0x16a6d6c6600 <line:293:5, col:43>
|   | |-VarDecl 0x16a6d6c6488 <col:5, col:12> col:12 used passwd_len 'size_t':'unsigned long long'
|   | |-VarDecl 0x16a6d6c6500 <col:5, col:24> col:24 used salt_len 'size_t':'unsigned long long'
|   | `-VarDecl 0x16a6d6c6578 <col:5, col:34> col:34 used magic_len 'size_t':'unsigned long long'
|   |-BinaryOperator 0x16a6d6c6730 <line:295:5, col:31> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x16a6d6c6618 <col:5> 'size_t':'unsigned long long' lvalue Var 0x16a6d6c6488 'passwd_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x16a6d6c66f0 <col:18, col:31> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x16a6d6c66d8 <col:18> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x16a6d6c6650 <col:18> 'unsigned long long (const char *)' Function 0x16a6d5d13a0 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x16a6d6c6718 <col:25> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x16a6d6c6670 <col:25> 'const char *' lvalue ParmVar 0x16a6d6c1ba8 'passwd' 'const char *'
|   |-BinaryOperator 0x16a6d6c6818 <line:296:5, col:18> 'char' '='
|   | |-ArraySubscriptExpr 0x16a6d6c67c8 <col:5, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x16a6d6c67b0 <col:5> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x16a6d6c6750 <col:5> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]'
|   | | `-IntegerLiteral 0x16a6d6c6788 <col:13> 'int' 0
|   | `-ImplicitCastExpr 0x16a6d6c6800 <col:18> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x16a6d6c67e8 <col:18> 'int' 36
|   |-BinaryOperator 0x16a6d6c68f8 <line:297:5, col:18> 'char' '='
|   | |-ArraySubscriptExpr 0x16a6d6c6898 <col:5, col:14> 'char' lvalue
|   | | |-ImplicitCastExpr 0x16a6d6c6880 <col:5> 'char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x16a6d6c6838 <col:5> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]'
|   | | `-IntegerLiteral 0x16a6d6c6858 <col:13> 'int' 1
|   | `-ImplicitCastExpr 0x16a6d6c68e0 <col:18> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x16a6d6c68b8 <col:18> 'int' 0
|   |-BinaryOperator 0x16a6d6c6a00 <line:298:5, col:29> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x16a6d6c6918 <col:5> 'size_t':'unsigned long long' lvalue Var 0x16a6d6c6578 'magic_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x16a6d6c69c0 <col:17, col:29> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x16a6d6c69a8 <col:17> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x16a6d6c6950 <col:17> 'unsigned long long (const char *)' Function 0x16a6d5d13a0 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x16a6d6c69e8 <col:24> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x16a6d6c6970 <col:24> 'const char *' lvalue ParmVar 0x16a6d6c1c28 'magic' 'const char *'
|   |-IfStmt 0x16a6d6c6b68 <line:300:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x16a6d6c6a98 <.//openssl//file_jk/after\apps\passwd.c:300:9, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x16a6d6c6a68 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x16a6d6c6a20 <col:9> 'size_t':'unsigned long long' lvalue Var 0x16a6d6c6578 'magic_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x16a6d6c6a80 <col:21> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x16a6d6c6a40 <col:21> 'int' 4
|   | `-ReturnStmt 0x16a6d6c6b58 <line:301:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x16a6d6c6b40 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x16a6d6c6b20 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x16a6d6c6af8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x16a6d6c6ab8 <col:26> 'int' 0
|   |-CallExpr 0x16a6d6c6d48 <.//openssl//file_jk/after\apps\passwd.c:303:5, col:52> 'int'
|   | |-ImplicitCastExpr 0x16a6d6c6d30 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x16a6d6c6c70 <col:5> 'int ()' Function 0x16a6d6c6ba8 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x16a6d6c6d80 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x16a6d6c6c90 <col:21> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x16a6d6c6d98 <col:30> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x16a6d6c6cb0 <col:30> 'const char *' lvalue ParmVar 0x16a6d6c1c28 'magic' 'const char *'
|   | `-UnaryExprOrTypeTraitExpr 0x16a6d6c6d10 <col:37, col:51> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x16a6d6c6cf0 <col:43, col:51> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x16a6d6c6cd0 <col:44> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-CallExpr 0x16a6d6c6e88 <line:304:5, col:50> 'int'
|   | |-ImplicitCastExpr 0x16a6d6c6e70 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x16a6d6c6db0 <col:5> 'int ()' Function 0x16a6d6c6ba8 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x16a6d6c6ec0 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x16a6d6c6dd0 <col:21> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x16a6d6c6ed8 <col:30> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x16a6d6c6df0 <col:30> 'char [2]' lvalue "$"
|   | `-UnaryExprOrTypeTraitExpr 0x16a6d6c6e50 <col:35, col:49> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x16a6d6c6e30 <col:41, col:49> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x16a6d6c6e10 <col:42> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-CallExpr 0x16a6d6c6fe8 <line:305:5, col:51> 'int'
|   | |-ImplicitCastExpr 0x16a6d6c6fd0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x16a6d6c6ef0 <col:5> 'int ()' Function 0x16a6d6c6ba8 'OPENSSL_strlcat' 'int ()'
|   | |-ImplicitCastExpr 0x16a6d6c7020 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x16a6d6c6f10 <col:21> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]'
|   | |-ImplicitCastExpr 0x16a6d6c7038 <col:30> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x16a6d6c6f30 <col:30> 'const char *' lvalue ParmVar 0x16a6d6c1ca8 'salt' 'const char *'
|   | `-UnaryExprOrTypeTraitExpr 0x16a6d6c6fb0 <col:36, col:50> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x16a6d6c6f90 <col:42, col:50> 'char [41]' lvalue
|   |     `-DeclRefExpr 0x16a6d6c6f70 <col:43> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |-IfStmt 0x16a6d6c7270 <line:307:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x16a6d6c71a0 <.//openssl//file_jk/after\apps\passwd.c:307:9, col:31> 'int' '>'
|   | | |-CallExpr 0x16a6d6c70c0 <col:9, col:23> 'unsigned long long'
|   | | | |-ImplicitCastExpr 0x16a6d6c70a8 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x16a6d6c7050 <col:9> 'unsigned long long (const char *)' Function 0x16a6d5d13a0 'strlen' 'unsigned long long (const char *)'
|   | | | `-ImplicitCastExpr 0x16a6d6c7100 <col:16> 'const char *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x16a6d6c70e8 <col:16> 'char *' <ArrayToPointerDecay>
|   | | |     `-DeclRefExpr 0x16a6d6c7070 <col:16> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]'
|   | | `-ImplicitCastExpr 0x16a6d6c7188 <col:27, col:31> 'unsigned long long' <IntegralCast>
|   | |   `-BinaryOperator 0x16a6d6c7168 <col:27, col:31> 'int' '+'
|   | |     |-IntegerLiteral 0x16a6d6c7118 <col:27> 'int' 6
|   | |     `-IntegerLiteral 0x16a6d6c7140 <col:31> 'int' 8
|   | `-ReturnStmt 0x16a6d6c7260 <line:308:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x16a6d6c7248 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x16a6d6c7228 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x16a6d6c7200 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x16a6d6c71c0 <col:26> 'int' 0
|   |-BinaryOperator 0x16a6d6c7398 <.//openssl//file_jk/after\apps\passwd.c:310:5, col:30> 'char *' '='
|   | |-DeclRefExpr 0x16a6d6c7288 <col:5> 'char *' lvalue Var 0x16a6d6c61b8 'salt_out' 'char *'
|   | `-BinaryOperator 0x16a6d6c7378 <col:16, col:30> 'char *' '+'
|   |   |-BinaryOperator 0x16a6d6c7320 <col:16, col:26> 'char *' '+'
|   |   | |-ImplicitCastExpr 0x16a6d6c7308 <col:16> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x16a6d6c72c0 <col:16> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]'
|   |   | `-IntegerLiteral 0x16a6d6c72e0 <col:26> 'int' 2
|   |   `-ImplicitCastExpr 0x16a6d6c7360 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x16a6d6c7340 <col:30> 'size_t':'unsigned long long' lvalue Var 0x16a6d6c6578 'magic_len' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x16a6d6c74b8 <line:311:5, col:31> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x16a6d6c73b8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x16a6d6c6500 'salt_len' 'size_t':'unsigned long long'
|   | `-CallExpr 0x16a6d6c7460 <col:16, col:31> 'unsigned long long'
|   |   |-ImplicitCastExpr 0x16a6d6c7448 <col:16> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x16a6d6c73f0 <col:16> 'unsigned long long (const char *)' Function 0x16a6d5d13a0 'strlen' 'unsigned long long (const char *)'
|   |   `-ImplicitCastExpr 0x16a6d6c74a0 <col:23> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x16a6d6c7488 <col:23> 'char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x16a6d6c7410 <col:23> 'char *' lvalue Var 0x16a6d6c61b8 'salt_out' 'char *'
|   |-IfStmt 0x16a6d6c7620 <line:313:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x16a6d6c7550 <.//openssl//file_jk/after\apps\passwd.c:313:9, col:20> 'int' '>'
|   | | |-ImplicitCastExpr 0x16a6d6c7520 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x16a6d6c74d8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x16a6d6c6500 'salt_len' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x16a6d6c7538 <col:20> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x16a6d6c74f8 <col:20> 'int' 8
|   | `-ReturnStmt 0x16a6d6c7610 <line:314:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x16a6d6c75f8 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x16a6d6c75d8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x16a6d6c75b0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x16a6d6c7570 <col:26> 'int' 0
|   |-IfStmt 0x16a6d6c7e48 <.//openssl//file_jk/after\apps\passwd.c:317:5, line:324:14>
|   | |-OpaqueValueExpr 0x16a6d6c7e30 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x16a6d6c7e18 <col:9, col:14> 'err' 0x16a6d6c7dc8
|   |-IfStmt 0x16a6d6c9358 <line:327:5, line:333:14>
|   | |-OpaqueValueExpr 0x16a6d6c9340 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x16a6d6c9328 <col:9, col:14> 'err' 0x16a6d6c7dc8
|   |-IfStmt 0x16a6d6c9548 <line:339:5, line:340:14>
|   | |-OpaqueValueExpr 0x16a6d6c9530 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x16a6d6c9518 <col:9, col:14> 'err' 0x16a6d6c7dc8
|   |-BinaryOperator 0x16a6d6c95e8 <line:342:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x16a6d6c9560 <col:5> 'int' lvalue Var 0x16a6d6c6250 'n' 'int'
|   | `-ImplicitCastExpr 0x16a6d6c95d0 <col:9> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x16a6d6c95b8 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x16a6d6c9598 <col:9> 'size_t':'unsigned long long' lvalue Var 0x16a6d6c6488 'passwd_len' 'size_t':'unsigned long long'
|   |-WhileStmt 0x16a6d6c9998 <line:343:5, line:347:5>
|   | |-ImplicitCastExpr 0x16a6d6c9628 <line:343:12> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x16a6d6c9608 <col:12> 'int' lvalue Var 0x16a6d6c6250 'n' 'int'
|   | `-CompoundStmt 0x16a6d6c9978 <col:15, line:347:5>
|   |   |-IfStmt 0x16a6d6c98d0 <line:344:9, line:345:18>
|   |   | |-OpaqueValueExpr 0x16a6d6c98b8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x16a6d6c98a0 <col:13, col:18> 'err' 0x16a6d6c7dc8
|   |   `-CompoundAssignOperator 0x16a6d6c9948 <line:346:9, col:15> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x16a6d6c98e8 <col:9> 'int' lvalue Var 0x16a6d6c6250 'n' 'int'
|   |     `-IntegerLiteral 0x16a6d6c9908 <col:15> 'int' 1
|   |-IfStmt 0x16a6d6c9b20 <line:348:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-OpaqueValueExpr 0x16a6d6c9b08 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x16a6d6c9af8 <.//openssl//file_jk/after\apps\passwd.c:349:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x16a6d6c9ae0 <col:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x16a6d6c9ac0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x16a6d6c9a98 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x16a6d6c9a58 <col:26> 'int' 0
|   |-ForStmt 0x16a6d6c2660 <.//openssl//file_jk/after\apps\passwd.c:351:5, line:372:5>
|   | |-BinaryOperator 0x16a6d6c9b98 <line:351:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x16a6d6c9b38 <col:10> 'unsigned int' lvalue Var 0x16a6d6c62e8 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x16a6d6c9b80 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x16a6d6c9b58 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x16a6d6c9c30 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x16a6d6c9c00 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x16a6d6c9bb8 <col:17> 'unsigned int' lvalue Var 0x16a6d6c62e8 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x16a6d6c9c18 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x16a6d6c9bd8 <col:21> 'int' 1000
|   | |-UnaryOperator 0x16a6d6c9c70 <col:27, col:28> 'unsigned int' postfix '++'
|   | | `-DeclRefExpr 0x16a6d6c9c50 <col:27> 'unsigned int' lvalue Var 0x16a6d6c62e8 'i' 'unsigned int'
|   | `-CompoundStmt 0x16a6d6c2620 <col:32, line:372:5>
|   |   |-IfStmt 0x16a6d6c9db8 <line:352:9, line:353:18>
|   |   | |-OpaqueValueExpr 0x16a6d6c9da0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x16a6d6c9d88 <col:13, col:18> 'err' 0x16a6d6c7dc8
|   |   |-IfStmt 0x16a6d6c1fc8 <line:354:9, line:357:18>
|   |   | |-OpaqueValueExpr 0x16a6d6c1fb0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x16a6d6c1f98 <col:13, col:18> 'err' 0x16a6d6c7dc8
|   |   |-IfStmt 0x16a6d6c2138 <line:358:9, line:361:9>
|   |   | |-BinaryOperator 0x16a6d6c2058 <line:358:13, col:17> 'unsigned int' '%'
|   |   | | |-ImplicitCastExpr 0x16a6d6c2028 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x16a6d6c1fe0 <col:13> 'unsigned int' lvalue Var 0x16a6d6c62e8 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x16a6d6c2040 <col:17> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x16a6d6c2000 <col:17> 'int' 3
|   |   | `-CompoundStmt 0x16a6d6c2120 <col:20, line:361:9>
|   |   |   `-IfStmt 0x16a6d6c2108 <line:359:13, line:360:22>
|   |   |     |-OpaqueValueExpr 0x16a6d6c20f0 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x16a6d6c20d8 <col:17, col:22> 'err' 0x16a6d6c7dc8
|   |   |-IfStmt 0x16a6d6c22a8 <line:362:9, line:365:9>
|   |   | |-BinaryOperator 0x16a6d6c21c8 <line:362:13, col:17> 'unsigned int' '%'
|   |   | | |-ImplicitCastExpr 0x16a6d6c2198 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x16a6d6c2150 <col:13> 'unsigned int' lvalue Var 0x16a6d6c62e8 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x16a6d6c21b0 <col:17> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x16a6d6c2170 <col:17> 'int' 7
|   |   | `-CompoundStmt 0x16a6d6c2290 <col:20, line:365:9>
|   |   |   `-IfStmt 0x16a6d6c2278 <line:363:13, line:364:22>
|   |   |     |-OpaqueValueExpr 0x16a6d6c2260 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x16a6d6c2248 <col:17, col:22> 'err' 0x16a6d6c7dc8
|   |   |-IfStmt 0x16a6d6c2518 <line:366:9, line:369:22>
|   |   | |-OpaqueValueExpr 0x16a6d6c2500 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x16a6d6c24e8 <col:17, col:22> 'err' 0x16a6d6c7dc8
|   |   `-IfStmt 0x16a6d6c2608 <line:370:9, line:371:22>
|   |     |-OpaqueValueExpr 0x16a6d6c25f0 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x16a6d6c25d8 <col:17, col:22> 'err' 0x16a6d6c7dc8
|   |-CompoundStmt 0x16a6d6cdb60 <line:378:5, line:413:5>
|   | |-DeclStmt 0x16a6d6c2958 <line:380:9, col:44>
|   | | `-VarDecl 0x16a6d6c28f0 <col:9, col:23> col:23 invalid buf_perm 'unsigned char'
|   | |-DeclStmt 0x16a6d6c2a88 <line:381:9, col:25>
|   | | |-VarDecl 0x16a6d6c2988 <col:9, col:13> col:13 used dest 'int'
|   | | `-VarDecl 0x16a6d6c2a08 <col:9, col:19> col:19 used source 'int'
|   | |-DeclStmt 0x16a6d6c2b20 <line:382:9, col:21>
|   | | `-VarDecl 0x16a6d6c2ab8 <col:9, col:15> col:15 used output 'char *'
|   | |-BinaryOperator 0x16a6d6cc338 <line:395:9, col:29> 'char *' '='
|   | | |-DeclRefExpr 0x16a6d6cc270 <col:9> 'char *' lvalue Var 0x16a6d6c2ab8 'output' 'char *'
|   | | `-BinaryOperator 0x16a6d6cc318 <col:18, col:29> 'char *' '+'
|   | |   |-ImplicitCastExpr 0x16a6d6cc2e8 <col:18> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x16a6d6cc2a8 <col:18> 'char *' lvalue Var 0x16a6d6c61b8 'salt_out' 'char *'
|   | |   `-ImplicitCastExpr 0x16a6d6cc300 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x16a6d6cc2c8 <col:29> 'size_t':'unsigned long long' lvalue Var 0x16a6d6c6500 'salt_len' 'size_t':'unsigned long long'
|   | |-CStyleCastExpr 0x16a6d6cc828 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | `-ParenExpr 0x16a6d6cc808 <col:35, col:128> 'int'
|   | |   `-BinaryOperator 0x16a6d6cc7b8 <col:37, col:126> 'int' '||'
|   | |     |-ParenExpr 0x16a6d6cc520 <col:37, col:53> 'int'
|   | |     | `-UnaryOperator 0x16a6d6cc508 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |     |   `-UnaryOperator 0x16a6d6cc4f0 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |     |     `-ParenExpr 0x16a6d6cc4d0 <col:40, col:52> 'int'
|   | |     |       `-BinaryOperator 0x16a6d6cc4b0 <.//openssl//file_jk/after\apps\passwd.c:396:16, col:50> 'int' '=='
|   | |     |         |-ImplicitCastExpr 0x16a6d6cc498 <col:16> 'char *' <LValueToRValue>
|   | |     |         | `-DeclRefExpr 0x16a6d6cc358 <col:16> 'char *' lvalue Var 0x16a6d6c2ab8 'output' 'char *'
|   | |     |         `-BinaryOperator 0x16a6d6cc478 <col:26, col:50> 'char *' '+'
|   | |     |           |-ImplicitCastExpr 0x16a6d6cc460 <col:26> 'char *' <ArrayToPointerDecay>
|   | |     |           | `-DeclRefExpr 0x16a6d6cc378 <col:26> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]'
|   | |     |           `-CallExpr 0x16a6d6cc408 <col:36, col:50> 'unsigned long long'
|   | |     |             |-ImplicitCastExpr 0x16a6d6cc3f0 <col:36> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   | |     |             | `-DeclRefExpr 0x16a6d6cc398 <col:36> 'unsigned long long (const char *)' Function 0x16a6d5d13a0 'strlen' 'unsigned long long (const char *)'
|   | |     |             `-ImplicitCastExpr 0x16a6d6cc448 <col:43> 'const char *' <NoOp>
|   | |     |               `-ImplicitCastExpr 0x16a6d6cc430 <col:43> 'char *' <ArrayToPointerDecay>
|   | |     |                 `-DeclRefExpr 0x16a6d6cc3b8 <col:43> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]'
|   | |     `-ParenExpr 0x16a6d6cc798 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |       `-BinaryOperator 0x16a6d6cc778 <col:59, col:125> 'int' ','
|   | |         |-CallExpr 0x16a6d6cc6a0 <col:59, col:122> 'void'
|   | |         | |-ImplicitCastExpr 0x16a6d6cc688 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |         | | `-DeclRefExpr 0x16a6d6cc540 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x16a6d668b90 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |         | |-ImplicitCastExpr 0x16a6d6cc6f0 <<scratch space>:18:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x16a6d6cc6d8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x16a6d6cc598 <col:1> 'unsigned short [36]' lvalue L"output == out_buf + strlen(out_buf)"
|   | |         | |-ImplicitCastExpr 0x16a6d6cc720 <line:20:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x16a6d6cc708 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x16a6d6cc5f8 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   | |         | `-ImplicitCastExpr 0x16a6d6cc738 <line:21:1> 'unsigned int' <IntegralCast>
|   | |         |   `-IntegerLiteral 0x16a6d6cc660 <col:1> 'int' 396
|   | |         `-IntegerLiteral 0x16a6d6cc750 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |-BinaryOperator 0x16a6d6cc8d0 <.//openssl//file_jk/after\apps\passwd.c:398:9, col:21> 'char' '='
|   | | |-UnaryOperator 0x16a6d6cc888 <col:9, col:16> 'char' lvalue prefix '*' cannot overflow
|   | | | `-UnaryOperator 0x16a6d6cc870 <col:10, col:16> 'char *' postfix '++'
|   | | |   `-DeclRefExpr 0x16a6d6cc850 <col:10> 'char *' lvalue Var 0x16a6d6c2ab8 'output' 'char *'
|   | | `-ImplicitCastExpr 0x16a6d6cc8b8 <col:21> 'char' <IntegralCast>
|   | |   `-CharacterLiteral 0x16a6d6cc8a0 <col:21> 'int' 36
|   | |-ForStmt 0x16a6d6cd060 <line:400:9, line:407:9>
|   | | |-BinaryOperator 0x16a6d6cc950 <line:400:14, col:18> 'unsigned int' '='
|   | | | |-DeclRefExpr 0x16a6d6cc8f0 <col:14> 'unsigned int' lvalue Var 0x16a6d6c62e8 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x16a6d6cc938 <col:18> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x16a6d6cc910 <col:18> 'int' 0
|   | | |-<<<NULL>>>
|   | | |-BinaryOperator 0x16a6d6cc9e8 <col:21, col:25> 'int' '<'
|   | | | |-ImplicitCastExpr 0x16a6d6cc9b8 <col:21> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x16a6d6cc970 <col:21> 'unsigned int' lvalue Var 0x16a6d6c62e8 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x16a6d6cc9d0 <col:25> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x16a6d6cc990 <col:25> 'int' 15
|   | | |-CompoundAssignOperator 0x16a6d6cca68 <col:29, col:34> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | | | |-DeclRefExpr 0x16a6d6cca08 <col:29> 'unsigned int' lvalue Var 0x16a6d6c62e8 'i' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x16a6d6cca50 <col:34> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x16a6d6cca28 <col:34> 'int' 3
|   | | `-CompoundStmt 0x16a6d6cd050 <col:37, line:407:9>
|   | |-CStyleCastExpr 0x16a6d6cd450 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   | | `-ParenExpr 0x16a6d6cd430 <col:35, col:128> 'int'
|   | |   `-BinaryOperator 0x16a6d6cd3e0 <col:37, col:126> 'int' '||'
|   | |     |-ParenExpr 0x16a6d6cd180 <col:37, col:53> 'int'
|   | |     | `-UnaryOperator 0x16a6d6cd168 <col:38, col:52> 'int' prefix '!' cannot overflow
|   | |     |   `-UnaryOperator 0x16a6d6cd150 <col:39, col:52> 'int' prefix '!' cannot overflow
|   | |     |     `-ParenExpr 0x16a6d6cd130 <col:40, col:52> 'int'
|   | |     |       `-BinaryOperator 0x16a6d6cd110 <.//openssl//file_jk/after\apps\passwd.c:408:16, col:21> 'int' '=='
|   | |     |         |-ImplicitCastExpr 0x16a6d6cd0e0 <col:16> 'unsigned int' <LValueToRValue>
|   | |     |         | `-DeclRefExpr 0x16a6d6cd098 <col:16> 'unsigned int' lvalue Var 0x16a6d6c62e8 'i' 'unsigned int'
|   | |     |         `-ImplicitCastExpr 0x16a6d6cd0f8 <col:21> 'unsigned int' <IntegralCast>
|   | |     |           `-IntegerLiteral 0x16a6d6cd0b8 <col:21> 'int' 15
|   | |     `-ParenExpr 0x16a6d6cd3c0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   | |       `-BinaryOperator 0x16a6d6cd3a0 <col:59, col:125> 'int' ','
|   | |         |-CallExpr 0x16a6d6cd2c8 <col:59, col:122> 'void'
|   | |         | |-ImplicitCastExpr 0x16a6d6cd2b0 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |         | | `-DeclRefExpr 0x16a6d6cd1a0 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x16a6d668b90 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   | |         | |-ImplicitCastExpr 0x16a6d6cd318 <<scratch space>:23:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x16a6d6cd300 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x16a6d6cd1f8 <col:1> 'unsigned short [8]' lvalue L"i == 15"
|   | |         | |-ImplicitCastExpr 0x16a6d6cd348 <line:25:1> 'const wchar_t *' <NoOp>
|   | |         | | `-ImplicitCastExpr 0x16a6d6cd330 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   | |         | |   `-StringLiteral 0x16a6d6cd220 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   | |         | `-ImplicitCastExpr 0x16a6d6cd360 <line:26:1> 'unsigned int' <IntegralCast>
|   | |         |   `-IntegerLiteral 0x16a6d6cd288 <col:1> 'int' 408
|   | |         `-IntegerLiteral 0x16a6d6cd378 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   | |-BinaryOperator 0x16a6d6cd678 <.//openssl//file_jk/after\apps\passwd.c:411:9, col:19> 'char' '='
|   | | |-UnaryOperator 0x16a6d6cd620 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
|   | | | `-ImplicitCastExpr 0x16a6d6cd608 <col:10> 'char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x16a6d6cd5e8 <col:10> 'char *' lvalue Var 0x16a6d6c2ab8 'output' 'char *'
|   | | `-ImplicitCastExpr 0x16a6d6cd660 <col:19> 'char' <IntegralCast>
|   | |   `-IntegerLiteral 0x16a6d6cd638 <col:19> 'int' 0
|   | `-CStyleCastExpr 0x16a6d6cdb38 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   |   `-ParenExpr 0x16a6d6cdb18 <col:35, col:128> 'int'
|   |     `-BinaryOperator 0x16a6d6cdac8 <col:37, col:126> 'int' '||'
|   |       |-ParenExpr 0x16a6d6cd830 <col:37, col:53> 'int'
|   |       | `-UnaryOperator 0x16a6d6cd818 <col:38, col:52> 'int' prefix '!' cannot overflow
|   |       |   `-UnaryOperator 0x16a6d6cd800 <col:39, col:52> 'int' prefix '!' cannot overflow
|   |       |     `-ParenExpr 0x16a6d6cd7e0 <col:40, col:52> 'int'
|   |       |       `-BinaryOperator 0x16a6d6cd7c0 <.//openssl//file_jk/after\apps\passwd.c:412:16, col:48> 'int' '<'
|   |       |         |-CallExpr 0x16a6d6cd708 <col:16, col:30> 'unsigned long long'
|   |       |         | |-ImplicitCastExpr 0x16a6d6cd6f0 <col:16> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       |         | | `-DeclRefExpr 0x16a6d6cd698 <col:16> 'unsigned long long (const char *)' Function 0x16a6d5d13a0 'strlen' 'unsigned long long (const char *)'
|   |       |         | `-ImplicitCastExpr 0x16a6d6cd748 <col:23> 'const char *' <NoOp>
|   |       |         |   `-ImplicitCastExpr 0x16a6d6cd730 <col:23> 'char *' <ArrayToPointerDecay>
|   |       |         |     `-DeclRefExpr 0x16a6d6cd6b8 <col:23> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]'
|   |       |         `-UnaryExprOrTypeTraitExpr 0x16a6d6cd7a0 <col:34, col:48> 'unsigned long long' sizeof
|   |       |           `-ParenExpr 0x16a6d6cd780 <col:40, col:48> 'char [41]' lvalue
|   |       |             `-DeclRefExpr 0x16a6d6cd760 <col:41> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]' non_odr_use_unevaluated
|   |       `-ParenExpr 0x16a6d6cdaa8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   |         `-BinaryOperator 0x16a6d6cda88 <col:59, col:125> 'int' ','
|   |           |-CallExpr 0x16a6d6cd9b0 <col:59, col:122> 'void'
|   |           | |-ImplicitCastExpr 0x16a6d6cd998 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x16a6d6cd850 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x16a6d668b90 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   |           | |-ImplicitCastExpr 0x16a6d6cda00 <<scratch space>:28:1> 'const wchar_t *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x16a6d6cd9e8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |           | |   `-StringLiteral 0x16a6d6cd8a8 <col:1> 'unsigned short [34]' lvalue L"strlen(out_buf) < sizeof(out_buf)"
|   |           | |-ImplicitCastExpr 0x16a6d6cda30 <line:30:1> 'const wchar_t *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x16a6d6cda18 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |           | |   `-StringLiteral 0x16a6d6cd908 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
|   |           | `-ImplicitCastExpr 0x16a6d6cda48 <line:31:1> 'unsigned int' <IntegralCast>
|   |           |   `-IntegerLiteral 0x16a6d6cd970 <col:1> 'int' 412
|   |           `-IntegerLiteral 0x16a6d6cda60 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   |-ReturnStmt 0x16a6d6cdbf8 <.//openssl//file_jk/after\apps\passwd.c:415:5, col:12>
|   | `-ImplicitCastExpr 0x16a6d6cdbe0 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x16a6d6cdbc0 <col:12> 'char [41]' lvalue Var 0x16a6d6c6088 'out_buf' 'char [41]'
|   |-LabelStmt 0x16a6d6cdc30 <line:417:2, col:5> 'err'
|   | `-NullStmt 0x16a6d6cdc28 <col:5>
|   `-ReturnStmt 0x16a6d6cdd08 <line:420:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|     `-ImplicitCastExpr 0x16a6d6cdcf0 <col:17, col:27> 'char *' <NullToPointer>
|       `-ParenExpr 0x16a6d6cdcd0 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x16a6d6cdca8 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x16a6d6cdc68 <col:26> 'int' 0
`-FunctionDecl 0x16a6d6ca488 <.//openssl//file_jk/after\apps\passwd.c:424:1, line:504:1> line:424:12 invalid do_passwd 'int (int, char **, char **, char *, int *, int, int, int, size_t, int, int, int)' static
  |-ParmVarDecl 0x16a6d6cde28 <col:22, col:26> col:26 used passed_salt 'int'
  |-ParmVarDecl 0x16a6d6cdea8 <col:39, col:46> col:46 used salt_p 'char **'
  |-ParmVarDecl 0x16a6d6cdf28 <col:54, col:61> col:61 used salt_malloc_p 'char **'
  |-ParmVarDecl 0x16a6d6c9fa0 <line:425:22, col:28> col:28 used passwd 'char *'
  |-ParmVarDecl 0x16a6d6ca020 <col:36, col:41> col:41 invalid out 'int *'
  |-ParmVarDecl 0x16a6d6ca0a0 <col:46, col:50> col:50 used quiet 'int'
  |-ParmVarDecl 0x16a6d6ca120 <col:57, col:61> col:61 used table 'int'
  |-ParmVarDecl 0x16a6d6ca1a0 <line:426:22, col:26> col:26 used reverse 'int'
  |-ParmVarDecl 0x16a6d6ca218 <col:35, col:42> col:42 used pw_maxlen 'size_t':'unsigned long long'
  |-ParmVarDecl 0x16a6d6ca298 <col:53, col:57> col:57 used usecrypt 'int'
  |-ParmVarDecl 0x16a6d6ca318 <col:67, col:71> col:71 used use1 'int'
  |-ParmVarDecl 0x16a6d6ca398 <line:427:22, col:26> col:26 used useapr1 'int'
  `-CompoundStmt 0x16a6d6cb4e0 <line:428:1, line:504:1>
    |-DeclStmt 0x16a6d6ca6c0 <line:429:5, col:22>
    | `-VarDecl 0x16a6d6ca5b8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\passwd.c:429:11 used hash 'char *' cinit
    |   `-ImplicitCastExpr 0x16a6d6ca6a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
    |     `-ParenExpr 0x16a6d6ca688 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x16a6d6ca660 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x16a6d6ca620 <col:26> 'int' 0
    |-CStyleCastExpr 0x16a6d6caae0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x16a6d6caac0 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x16a6d6caa70 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x16a6d6ca838 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x16a6d6ca820 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x16a6d6ca808 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x16a6d6ca7e8 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x16a6d6ca7c8 <.//openssl//file_jk/after\apps\passwd.c:431:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x16a6d6ca798 <.//openssl//file_jk/after\apps\passwd.c:431:12> 'char **' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x16a6d6ca6d8 <col:12> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |     |         `-ImplicitCastExpr 0x16a6d6ca7b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
    |     |           `-ParenExpr 0x16a6d6ca778 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x16a6d6ca750 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x16a6d6ca710 <col:26> 'int' 0
    |     `-ParenExpr 0x16a6d6caa50 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x16a6d6caa30 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x16a6d6ca958 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x16a6d6ca940 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x16a6d6ca858 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x16a6d668b90 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x16a6d6ca9a8 <<scratch space>:33:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x16a6d6ca990 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x16a6d6ca878 <col:1> 'unsigned short [15]' lvalue L"salt_p != NULL"
    |         | |-ImplicitCastExpr 0x16a6d6ca9d8 <line:35:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x16a6d6ca9c0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x16a6d6ca8b0 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x16a6d6ca9f0 <line:36:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x16a6d6ca918 <col:1> 'int' 431
    |         `-IntegerLiteral 0x16a6d6caa08 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-CStyleCastExpr 0x16a6d6caf60 <col:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x16a6d6caf40 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x16a6d6caef0 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x16a6d6cac68 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x16a6d6cac50 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x16a6d6cac38 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x16a6d6cac18 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x16a6d6cabf8 <.//openssl//file_jk/after\apps\passwd.c:432:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x16a6d6cabc8 <.//openssl//file_jk/after\apps\passwd.c:432:12> 'char **' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x16a6d6cab08 <col:12> 'char **' lvalue ParmVar 0x16a6d6cdf28 'salt_malloc_p' 'char **'
    |     |         `-ImplicitCastExpr 0x16a6d6cabe0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <BitCast>
    |     |           `-ParenExpr 0x16a6d6caba8 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x16a6d6cab80 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x16a6d6cab40 <col:26> 'int' 0
    |     `-ParenExpr 0x16a6d6caed0 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x16a6d6caeb0 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x16a6d6cadd8 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x16a6d6cadc0 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x16a6d6cac88 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x16a6d668b90 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x16a6d6cae28 <<scratch space>:38:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x16a6d6cae10 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x16a6d6cace8 <col:1> 'unsigned short [22]' lvalue L"salt_malloc_p != NULL"
    |         | |-ImplicitCastExpr 0x16a6d6cae58 <line:40:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x16a6d6cae40 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x16a6d6cad30 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x16a6d6cae70 <line:41:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x16a6d6cad98 <col:1> 'int' 432
    |         `-IntegerLiteral 0x16a6d6cae88 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x16a6d6cf9d8 <.//openssl//file_jk/after\apps\passwd.c:435:5, line:466:5>
    | |-UnaryOperator 0x16a6d6ce030 <line:435:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x16a6d6ce018 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x16a6d6cdfe0 <col:10> 'int' lvalue ParmVar 0x16a6d6cde28 'passed_salt' 'int'
    | `-CompoundStmt 0x16a6d6cf9b8 <col:23, line:466:5>
    |   |-IfStmt 0x16a6d6ced90 <line:437:9, line:449:9>
    |   | |-ImplicitCastExpr 0x16a6d6ce080 <line:437:13> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x16a6d6ce048 <col:13> 'int' lvalue ParmVar 0x16a6d6ca298 'usecrypt' 'int'
    |   | `-CompoundStmt 0x16a6d6ced58 <col:23, line:449:9>
    |   |   |-IfStmt 0x16a6d6ce3a0 <line:438:13, line:439:71>
    |   |   | |-BinaryOperator 0x16a6d6ce1a0 <line:438:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
    |   |   | | |-ImplicitCastExpr 0x16a6d6ce170 <.//openssl//file_jk/after\apps\passwd.c:438:17, col:18> 'char *' <LValueToRValue>
    |   |   | | | `-UnaryOperator 0x16a6d6ce0d0 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |   `-ImplicitCastExpr 0x16a6d6ce0b8 <col:18> 'char **' <LValueToRValue>
    |   |   | | |     `-DeclRefExpr 0x16a6d6ce098 <col:18> 'char **' lvalue ParmVar 0x16a6d6cdf28 'salt_malloc_p' 'char **'
    |   |   | | `-ImplicitCastExpr 0x16a6d6ce188 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |   |   | |   `-ParenExpr 0x16a6d6ce150 <col:17, col:27> 'void *'
    |   |   | |     `-CStyleCastExpr 0x16a6d6ce128 <col:18, col:26> 'void *' <NullToPointer>
    |   |   | |       `-IntegerLiteral 0x16a6d6ce0e8 <col:26> 'int' 0
    |   |   | `-BinaryOperator 0x16a6d6ce380 <.//openssl//file_jk/after\apps\passwd.c:439:17, col:71> 'char *' '='
    |   |   |   |-UnaryOperator 0x16a6d6ce1f8 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |   |   |   | `-ImplicitCastExpr 0x16a6d6ce1e0 <col:18> 'char **' <LValueToRValue>
    |   |   |   |   `-DeclRefExpr 0x16a6d6ce1c0 <col:18> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |   |   |   `-BinaryOperator 0x16a6d6ce360 <col:27, col:71> 'char *' '='
    |   |   |     |-UnaryOperator 0x16a6d6ce248 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
    |   |   |     | `-ImplicitCastExpr 0x16a6d6ce230 <col:28> 'char **' <LValueToRValue>
    |   |   |     |   `-DeclRefExpr 0x16a6d6ce210 <col:28> 'char **' lvalue ParmVar 0x16a6d6cdf28 'salt_malloc_p' 'char **'
    |   |   |     `-ImplicitCastExpr 0x16a6d6ce348 <col:44, col:71> 'char *' <BitCast>
    |   |   |       `-CallExpr 0x16a6d6ce2e8 <col:44, col:71> 'void *'
    |   |   |         |-ImplicitCastExpr 0x16a6d6ce2d0 <col:44> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
    |   |   |         | `-DeclRefExpr 0x16a6d6ce260 <col:44> 'void *(int, const char *)' Function 0x16a6d622830 'app_malloc' 'void *(int, const char *)'
    |   |   |         |-IntegerLiteral 0x16a6d6ce280 <col:55> 'int' 3
    |   |   |         `-ImplicitCastExpr 0x16a6d6ce330 <col:58> 'const char *' <NoOp>
    |   |   |           `-ImplicitCastExpr 0x16a6d6ce318 <col:58> 'char *' <ArrayToPointerDecay>
    |   |   |             `-StringLiteral 0x16a6d6ce2a8 <col:58> 'char [12]' lvalue "salt buffer"
    |   |   |-IfStmt 0x16a6d6ce690 <line:440:13, line:441:22>
    |   |   | |-BinaryOperator 0x16a6d6ce608 <line:440:17, col:60> 'int' '<='
    |   |   | | |-CallExpr 0x16a6d6ce5b0 <col:17, col:55> 'int'
    |   |   | | | |-ImplicitCastExpr 0x16a6d6ce598 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |   |   | | | | `-DeclRefExpr 0x16a6d6ce4a8 <col:17> 'int ()' Function 0x16a6d6ce3e0 'RAND_bytes' 'int ()'
    |   |   | | | |-CStyleCastExpr 0x16a6d6ce548 <col:28, col:46> 'unsigned char *' <BitCast>
    |   |   | | | | `-ImplicitCastExpr 0x16a6d6ce530 <col:45, col:46> 'char *' <LValueToRValue> part_of_explicit_cast
    |   |   | | | |   `-UnaryOperator 0x16a6d6ce500 <col:45, col:46> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | | |     `-ImplicitCastExpr 0x16a6d6ce4e8 <col:46> 'char **' <LValueToRValue>
    |   |   | | | |       `-DeclRefExpr 0x16a6d6ce4c8 <col:46> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |   |   | | | `-IntegerLiteral 0x16a6d6ce570 <col:54> 'int' 2
    |   |   | | `-IntegerLiteral 0x16a6d6ce5e0 <col:60> 'int' 0
    |   |   | `-GotoStmt 0x16a6d6ce678 <line:441:17, col:22> 'end' 0x16a6d6ce628
    |   |   |-BinaryOperator 0x16a6d6ce948 <line:442:13, col:57> 'char' '='
    |   |   | |-ArraySubscriptExpr 0x16a6d6ce758 <col:13, col:24> 'char' lvalue
    |   |   | | |-ImplicitCastExpr 0x16a6d6ce740 <col:13, col:21> 'char *' <LValueToRValue>
    |   |   | | | `-ParenExpr 0x16a6d6ce6f8 <col:13, col:21> 'char *' lvalue
    |   |   | | |   `-UnaryOperator 0x16a6d6ce6e0 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |     `-ImplicitCastExpr 0x16a6d6ce6c8 <col:15> 'char **' <LValueToRValue>
    |   |   | | |       `-DeclRefExpr 0x16a6d6ce6a8 <col:15> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |   |   | | `-IntegerLiteral 0x16a6d6ce718 <col:23> 'int' 0
    |   |   | `-ImplicitCastExpr 0x16a6d6ce930 <col:28, col:57> 'char' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x16a6d6ce918 <col:28, col:57> 'unsigned char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x16a6d6ce8f8 <col:28, col:57> 'const unsigned char' lvalue
    |   |   |       |-ImplicitCastExpr 0x16a6d6ce8e0 <col:28> 'const unsigned char *' <ArrayToPointerDecay>
    |   |   |       | `-DeclRefExpr 0x16a6d6ce778 <col:28> 'const unsigned char [64]' lvalue Var 0x16a6d62dc40 'cov_2char' 'const unsigned char [64]'
    |   |   |       `-BinaryOperator 0x16a6d6ce8c0 <col:38, col:53> 'int' '&'
    |   |   |         |-ImplicitCastExpr 0x16a6d6ce8a8 <col:38, col:49> 'int' <IntegralCast>
    |   |   |         | `-ImplicitCastExpr 0x16a6d6ce890 <col:38, col:49> 'char' <LValueToRValue>
    |   |   |         |   `-ArraySubscriptExpr 0x16a6d6ce848 <col:38, col:49> 'char' lvalue
    |   |   |         |     |-ImplicitCastExpr 0x16a6d6ce830 <col:38, col:46> 'char *' <LValueToRValue>
    |   |   |         |     | `-ParenExpr 0x16a6d6ce7e8 <col:38, col:46> 'char *' lvalue
    |   |   |         |     |   `-UnaryOperator 0x16a6d6ce7d0 <col:39, col:40> 'char *' lvalue prefix '*' cannot overflow
    |   |   |         |     |     `-ImplicitCastExpr 0x16a6d6ce7b8 <col:40> 'char **' <LValueToRValue>
    |   |   |         |     |       `-DeclRefExpr 0x16a6d6ce798 <col:40> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |   |   |         |     `-IntegerLiteral 0x16a6d6ce808 <col:48> 'int' 0
    |   |   |         `-IntegerLiteral 0x16a6d6ce868 <col:53> 'int' 63
    |   |   |-BinaryOperator 0x16a6d6cec08 <line:443:13, col:57> 'char' '='
    |   |   | |-ArraySubscriptExpr 0x16a6d6cea18 <col:13, col:24> 'char' lvalue
    |   |   | | |-ImplicitCastExpr 0x16a6d6cea00 <col:13, col:21> 'char *' <LValueToRValue>
    |   |   | | | `-ParenExpr 0x16a6d6ce9b8 <col:13, col:21> 'char *' lvalue
    |   |   | | |   `-UnaryOperator 0x16a6d6ce9a0 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |   | | |     `-ImplicitCastExpr 0x16a6d6ce988 <col:15> 'char **' <LValueToRValue>
    |   |   | | |       `-DeclRefExpr 0x16a6d6ce968 <col:15> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |   |   | | `-IntegerLiteral 0x16a6d6ce9d8 <col:23> 'int' 1
    |   |   | `-ImplicitCastExpr 0x16a6d6cebf0 <col:28, col:57> 'char' <IntegralCast>
    |   |   |   `-ImplicitCastExpr 0x16a6d6cebd8 <col:28, col:57> 'unsigned char' <LValueToRValue>
    |   |   |     `-ArraySubscriptExpr 0x16a6d6cebb8 <col:28, col:57> 'const unsigned char' lvalue
    |   |   |       |-ImplicitCastExpr 0x16a6d6ceba0 <col:28> 'const unsigned char *' <ArrayToPointerDecay>
    |   |   |       | `-DeclRefExpr 0x16a6d6cea38 <col:28> 'const unsigned char [64]' lvalue Var 0x16a6d62dc40 'cov_2char' 'const unsigned char [64]'
    |   |   |       `-BinaryOperator 0x16a6d6ceb80 <col:38, col:53> 'int' '&'
    |   |   |         |-ImplicitCastExpr 0x16a6d6ceb68 <col:38, col:49> 'int' <IntegralCast>
    |   |   |         | `-ImplicitCastExpr 0x16a6d6ceb50 <col:38, col:49> 'char' <LValueToRValue>
    |   |   |         |   `-ArraySubscriptExpr 0x16a6d6ceb08 <col:38, col:49> 'char' lvalue
    |   |   |         |     |-ImplicitCastExpr 0x16a6d6ceaf0 <col:38, col:46> 'char *' <LValueToRValue>
    |   |   |         |     | `-ParenExpr 0x16a6d6ceaa8 <col:38, col:46> 'char *' lvalue
    |   |   |         |     |   `-UnaryOperator 0x16a6d6cea90 <col:39, col:40> 'char *' lvalue prefix '*' cannot overflow
    |   |   |         |     |     `-ImplicitCastExpr 0x16a6d6cea78 <col:40> 'char **' <LValueToRValue>
    |   |   |         |     |       `-DeclRefExpr 0x16a6d6cea58 <col:40> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |   |   |         |     `-IntegerLiteral 0x16a6d6ceac8 <col:48> 'int' 1
    |   |   |         `-IntegerLiteral 0x16a6d6ceb28 <col:53> 'int' 63
    |   |   `-BinaryOperator 0x16a6d6ced38 <line:444:13, col:28> 'char' '='
    |   |     |-ArraySubscriptExpr 0x16a6d6cecd8 <col:13, col:24> 'char' lvalue
    |   |     | |-ImplicitCastExpr 0x16a6d6cecc0 <col:13, col:21> 'char *' <LValueToRValue>
    |   |     | | `-ParenExpr 0x16a6d6cec78 <col:13, col:21> 'char *' lvalue
    |   |     | |   `-UnaryOperator 0x16a6d6cec60 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |   |     | |     `-ImplicitCastExpr 0x16a6d6cec48 <col:15> 'char **' <LValueToRValue>
    |   |     | |       `-DeclRefExpr 0x16a6d6cec28 <col:15> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |   |     | `-IntegerLiteral 0x16a6d6cec98 <col:23> 'int' 2
    |   |     `-ImplicitCastExpr 0x16a6d6ced20 <col:28> 'char' <IntegralCast>
    |   |       `-IntegerLiteral 0x16a6d6cecf8 <col:28> 'int' 0
    |   `-IfStmt 0x16a6d6cf9a0 <line:453:9, line:464:9>
    |     |-BinaryOperator 0x16a6d6cee48 <line:453:13, col:21> 'int' '||'
    |     | |-ImplicitCastExpr 0x16a6d6cee18 <col:13> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x16a6d6ceda8 <col:13> 'int' lvalue ParmVar 0x16a6d6ca318 'use1' 'int'
    |     | `-ImplicitCastExpr 0x16a6d6cee30 <col:21> 'int' <LValueToRValue>
    |     |   `-DeclRefExpr 0x16a6d6cede0 <col:21> 'int' lvalue ParmVar 0x16a6d6ca398 'useapr1' 'int'
    |     `-CompoundStmt 0x16a6d6cf968 <col:30, line:464:9>
    |       |-DeclStmt 0x16a6d6ceee8 <line:454:13, col:18>
    |       | `-VarDecl 0x16a6d6cee80 <col:13, col:17> col:17 used i 'int'
    |       |-IfStmt 0x16a6d6cf220 <line:456:13, line:457:71>
    |       | |-BinaryOperator 0x16a6d6cf020 <line:456:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
    |       | | |-ImplicitCastExpr 0x16a6d6ceff0 <.//openssl//file_jk/after\apps\passwd.c:456:17, col:18> 'char *' <LValueToRValue>
    |       | | | `-UnaryOperator 0x16a6d6cef38 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |       | | |   `-ImplicitCastExpr 0x16a6d6cef20 <col:18> 'char **' <LValueToRValue>
    |       | | |     `-DeclRefExpr 0x16a6d6cef00 <col:18> 'char **' lvalue ParmVar 0x16a6d6cdf28 'salt_malloc_p' 'char **'
    |       | | `-ImplicitCastExpr 0x16a6d6cf008 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |       | |   `-ParenExpr 0x16a6d6cefb8 <col:17, col:27> 'void *'
    |       | |     `-CStyleCastExpr 0x16a6d6cef90 <col:18, col:26> 'void *' <NullToPointer>
    |       | |       `-IntegerLiteral 0x16a6d6cef50 <col:26> 'int' 0
    |       | `-BinaryOperator 0x16a6d6cf200 <.//openssl//file_jk/after\apps\passwd.c:457:17, col:71> 'char *' '='
    |       |   |-UnaryOperator 0x16a6d6cf078 <col:17, col:18> 'char *' lvalue prefix '*' cannot overflow
    |       |   | `-ImplicitCastExpr 0x16a6d6cf060 <col:18> 'char **' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x16a6d6cf040 <col:18> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |       |   `-BinaryOperator 0x16a6d6cf1e0 <col:27, col:71> 'char *' '='
    |       |     |-UnaryOperator 0x16a6d6cf0c8 <col:27, col:28> 'char *' lvalue prefix '*' cannot overflow
    |       |     | `-ImplicitCastExpr 0x16a6d6cf0b0 <col:28> 'char **' <LValueToRValue>
    |       |     |   `-DeclRefExpr 0x16a6d6cf090 <col:28> 'char **' lvalue ParmVar 0x16a6d6cdf28 'salt_malloc_p' 'char **'
    |       |     `-ImplicitCastExpr 0x16a6d6cf1c8 <col:44, col:71> 'char *' <BitCast>
    |       |       `-CallExpr 0x16a6d6cf168 <col:44, col:71> 'void *'
    |       |         |-ImplicitCastExpr 0x16a6d6cf150 <col:44> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
    |       |         | `-DeclRefExpr 0x16a6d6cf0e0 <col:44> 'void *(int, const char *)' Function 0x16a6d622830 'app_malloc' 'void *(int, const char *)'
    |       |         |-IntegerLiteral 0x16a6d6cf100 <col:55> 'int' 9
    |       |         `-ImplicitCastExpr 0x16a6d6cf1b0 <col:58> 'const char *' <NoOp>
    |       |           `-ImplicitCastExpr 0x16a6d6cf198 <col:58> 'char *' <ArrayToPointerDecay>
    |       |             `-StringLiteral 0x16a6d6cf128 <col:58> 'char [12]' lvalue "salt buffer"
    |       |-IfStmt 0x16a6d6cf3d0 <line:458:13, line:459:22>
    |       | |-BinaryOperator 0x16a6d6cf398 <line:458:17, col:60> 'int' '<='
    |       | | |-CallExpr 0x16a6d6cf340 <col:17, col:55> 'int'
    |       | | | |-ImplicitCastExpr 0x16a6d6cf328 <col:17> 'int (*)()' <FunctionToPointerDecay>
    |       | | | | `-DeclRefExpr 0x16a6d6cf238 <col:17> 'int ()' Function 0x16a6d6ce3e0 'RAND_bytes' 'int ()'
    |       | | | |-CStyleCastExpr 0x16a6d6cf2d8 <col:28, col:46> 'unsigned char *' <BitCast>
    |       | | | | `-ImplicitCastExpr 0x16a6d6cf2c0 <col:45, col:46> 'char *' <LValueToRValue> part_of_explicit_cast
    |       | | | |   `-UnaryOperator 0x16a6d6cf290 <col:45, col:46> 'char *' lvalue prefix '*' cannot overflow
    |       | | | |     `-ImplicitCastExpr 0x16a6d6cf278 <col:46> 'char **' <LValueToRValue>
    |       | | | |       `-DeclRefExpr 0x16a6d6cf258 <col:46> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |       | | | `-IntegerLiteral 0x16a6d6cf300 <col:54> 'int' 8
    |       | | `-IntegerLiteral 0x16a6d6cf370 <col:60> 'int' 0
    |       | `-GotoStmt 0x16a6d6cf3b8 <line:459:17, col:22> 'end' 0x16a6d6ce628
    |       |-ForStmt 0x16a6d6cf800 <line:461:13, line:462:61>
    |       | |-BinaryOperator 0x16a6d6cf448 <line:461:18, col:22> 'int' '='
    |       | | |-DeclRefExpr 0x16a6d6cf3e8 <col:18> 'int' lvalue Var 0x16a6d6cee80 'i' 'int'
    |       | | `-IntegerLiteral 0x16a6d6cf420 <col:22> 'int' 0
    |       | |-<<<NULL>>>
    |       | |-BinaryOperator 0x16a6d6cf4c8 <col:25, col:29> 'int' '<'
    |       | | |-ImplicitCastExpr 0x16a6d6cf4b0 <col:25> 'int' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x16a6d6cf468 <col:25> 'int' lvalue Var 0x16a6d6cee80 'i' 'int'
    |       | | `-IntegerLiteral 0x16a6d6cf488 <col:29> 'int' 8
    |       | |-UnaryOperator 0x16a6d6cf508 <col:32, col:33> 'int' postfix '++'
    |       | | `-DeclRefExpr 0x16a6d6cf4e8 <col:32> 'int' lvalue Var 0x16a6d6cee80 'i' 'int'
    |       | `-BinaryOperator 0x16a6d6cf7e0 <line:462:17, col:61> 'char' '='
    |       |   |-ArraySubscriptExpr 0x16a6d6cf5e0 <col:17, col:28> 'char' lvalue
    |       |   | |-ImplicitCastExpr 0x16a6d6cf5b0 <col:17, col:25> 'char *' <LValueToRValue>
    |       |   | | `-ParenExpr 0x16a6d6cf570 <col:17, col:25> 'char *' lvalue
    |       |   | |   `-UnaryOperator 0x16a6d6cf558 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
    |       |   | |     `-ImplicitCastExpr 0x16a6d6cf540 <col:19> 'char **' <LValueToRValue>
    |       |   | |       `-DeclRefExpr 0x16a6d6cf520 <col:19> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |       |   | `-ImplicitCastExpr 0x16a6d6cf5c8 <col:27> 'int' <LValueToRValue>
    |       |   |   `-DeclRefExpr 0x16a6d6cf590 <col:27> 'int' lvalue Var 0x16a6d6cee80 'i' 'int'
    |       |   `-ImplicitCastExpr 0x16a6d6cf7c8 <col:32, col:61> 'char' <IntegralCast>
    |       |     `-ImplicitCastExpr 0x16a6d6cf7b0 <col:32, col:61> 'unsigned char' <LValueToRValue>
    |       |       `-ArraySubscriptExpr 0x16a6d6cf790 <col:32, col:61> 'const unsigned char' lvalue
    |       |         |-ImplicitCastExpr 0x16a6d6cf778 <col:32> 'const unsigned char *' <ArrayToPointerDecay>
    |       |         | `-DeclRefExpr 0x16a6d6cf600 <col:32> 'const unsigned char [64]' lvalue Var 0x16a6d62dc40 'cov_2char' 'const unsigned char [64]'
    |       |         `-BinaryOperator 0x16a6d6cf758 <col:42, col:57> 'int' '&'
    |       |           |-ImplicitCastExpr 0x16a6d6cf740 <col:42, col:53> 'int' <IntegralCast>
    |       |           | `-ImplicitCastExpr 0x16a6d6cf728 <col:42, col:53> 'char' <LValueToRValue>
    |       |           |   `-ArraySubscriptExpr 0x16a6d6cf6e0 <col:42, col:53> 'char' lvalue
    |       |           |     |-ImplicitCastExpr 0x16a6d6cf6b0 <col:42, col:50> 'char *' <LValueToRValue>
    |       |           |     | `-ParenExpr 0x16a6d6cf670 <col:42, col:50> 'char *' lvalue
    |       |           |     |   `-UnaryOperator 0x16a6d6cf658 <col:43, col:44> 'char *' lvalue prefix '*' cannot overflow
    |       |           |     |     `-ImplicitCastExpr 0x16a6d6cf640 <col:44> 'char **' <LValueToRValue>
    |       |           |     |       `-DeclRefExpr 0x16a6d6cf620 <col:44> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |       |           |     `-ImplicitCastExpr 0x16a6d6cf6c8 <col:52> 'int' <LValueToRValue>
    |       |           |       `-DeclRefExpr 0x16a6d6cf690 <col:52> 'int' lvalue Var 0x16a6d6cee80 'i' 'int'
    |       |           `-IntegerLiteral 0x16a6d6cf700 <col:57> 'int' 63
    |       `-BinaryOperator 0x16a6d6cf948 <line:463:13, col:28> 'char' '='
    |         |-ArraySubscriptExpr 0x16a6d6cf8e8 <col:13, col:24> 'char' lvalue
    |         | |-ImplicitCastExpr 0x16a6d6cf8d0 <col:13, col:21> 'char *' <LValueToRValue>
    |         | | `-ParenExpr 0x16a6d6cf888 <col:13, col:21> 'char *' lvalue
    |         | |   `-UnaryOperator 0x16a6d6cf870 <col:14, col:15> 'char *' lvalue prefix '*' cannot overflow
    |         | |     `-ImplicitCastExpr 0x16a6d6cf858 <col:15> 'char **' <LValueToRValue>
    |         | |       `-DeclRefExpr 0x16a6d6cf838 <col:15> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |         | `-IntegerLiteral 0x16a6d6cf8a8 <col:23> 'int' 8
    |         `-ImplicitCastExpr 0x16a6d6cf930 <col:28> 'char' <IntegralCast>
    |           `-IntegerLiteral 0x16a6d6cf908 <col:28> 'int' 0
    |-CStyleCastExpr 0x16a6d6cfe10 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x16a6d6cfdf0 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x16a6d6cfda0 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x16a6d6cfb68 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x16a6d6cfb50 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x16a6d6cfb38 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x16a6d6cfb18 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x16a6d6cfaf8 <.//openssl//file_jk/after\apps\passwd.c:468:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x16a6d6cfac8 <.//openssl//file_jk/after\apps\passwd.c:468:12, col:13> 'char *' <LValueToRValue>
    |     |         | `-UnaryOperator 0x16a6d6cfa28 <col:12, col:13> 'char *' lvalue prefix '*' cannot overflow
    |     |         |   `-ImplicitCastExpr 0x16a6d6cfa10 <col:13> 'char **' <LValueToRValue>
    |     |         |     `-DeclRefExpr 0x16a6d6cf9f0 <col:13> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |     |         `-ImplicitCastExpr 0x16a6d6cfae0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |     |           `-ParenExpr 0x16a6d6cfaa8 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x16a6d6cfa80 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x16a6d6cfa40 <col:26> 'int' 0
    |     `-ParenExpr 0x16a6d6cfd80 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x16a6d6cfd60 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x16a6d6cfc88 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x16a6d6cfc70 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x16a6d6cfb88 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x16a6d668b90 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x16a6d6cfcd8 <<scratch space>:43:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x16a6d6cfcc0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x16a6d6cfba8 <col:1> 'unsigned short [16]' lvalue L"*salt_p != NULL"
    |         | |-ImplicitCastExpr 0x16a6d6cfd08 <line:45:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x16a6d6cfcf0 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x16a6d6cfbe0 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x16a6d6cfd20 <line:46:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x16a6d6cfc48 <col:1> 'int' 468
    |         `-IntegerLiteral 0x16a6d6cfd38 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x16a6d6d0250 <.//openssl//file_jk/after\apps\passwd.c:471:5, line:480:5>
    | |-ParenExpr 0x16a6d6cff88 <line:471:9, col:36> 'int'
    | | `-BinaryOperator 0x16a6d6cff68 <col:10, col:27> 'int' '>'
    | |   |-CallExpr 0x16a6d6cfec0 <col:10, col:23> 'unsigned long long'
    | |   | |-ImplicitCastExpr 0x16a6d6cfea8 <col:10> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
    | |   | | `-DeclRefExpr 0x16a6d6cfe38 <col:10> 'unsigned long long (const char *)' Function 0x16a6d5d13a0 'strlen' 'unsigned long long (const char *)'
    | |   | `-ImplicitCastExpr 0x16a6d6cff00 <col:17> 'const char *' <NoOp>
    | |   |   `-ImplicitCastExpr 0x16a6d6cfee8 <col:17> 'char *' <LValueToRValue>
    | |   |     `-DeclRefExpr 0x16a6d6cfe58 <col:17> 'char *' lvalue ParmVar 0x16a6d6c9fa0 'passwd' 'char *'
    | |   `-ImplicitCastExpr 0x16a6d6cff50 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
    | |     `-DeclRefExpr 0x16a6d6cff18 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x16a6d6ca218 'pw_maxlen' 'size_t':'unsigned long long'
    | `-CompoundStmt 0x16a6d6d0238 <col:39, line:480:5>
    |   `-BinaryOperator 0x16a6d6d0218 <line:479:9, col:29> 'char' '='
    |     |-ArraySubscriptExpr 0x16a6d6d01b8 <col:9, col:25> 'char' lvalue
    |     | |-ImplicitCastExpr 0x16a6d6d0188 <col:9> 'char *' <LValueToRValue>
    |     | | `-DeclRefExpr 0x16a6d6d0148 <col:9> 'char *' lvalue ParmVar 0x16a6d6c9fa0 'passwd' 'char *'
    |     | `-ImplicitCastExpr 0x16a6d6d01a0 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
    |     |   `-DeclRefExpr 0x16a6d6d0168 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x16a6d6ca218 'pw_maxlen' 'size_t':'unsigned long long'
    |     `-ImplicitCastExpr 0x16a6d6d0200 <col:29> 'char' <IntegralCast>
    |       `-IntegerLiteral 0x16a6d6d01d8 <col:29> 'int' 0
    |-CStyleCastExpr 0x16a6d6d06d8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x16a6d6d06b8 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x16a6d6d0668 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x16a6d6d03d8 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x16a6d6d03c0 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x16a6d6d03a8 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x16a6d6d0388 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x16a6d6d0368 <.//openssl//file_jk/after\apps\passwd.c:481:12, col:30> 'int' '<='
    |     |         |-CallExpr 0x16a6d6d02d8 <col:12, col:25> 'unsigned long long'
    |     |         | |-ImplicitCastExpr 0x16a6d6d02c0 <col:12> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
    |     |         | | `-DeclRefExpr 0x16a6d6d0268 <col:12> 'unsigned long long (const char *)' Function 0x16a6d5d13a0 'strlen' 'unsigned long long (const char *)'
    |     |         | `-ImplicitCastExpr 0x16a6d6d0318 <col:19> 'const char *' <NoOp>
    |     |         |   `-ImplicitCastExpr 0x16a6d6d0300 <col:19> 'char *' <LValueToRValue>
    |     |         |     `-DeclRefExpr 0x16a6d6d0288 <col:19> 'char *' lvalue ParmVar 0x16a6d6c9fa0 'passwd' 'char *'
    |     |         `-ImplicitCastExpr 0x16a6d6d0350 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
    |     |           `-DeclRefExpr 0x16a6d6d0330 <col:30> 'size_t':'unsigned long long' lvalue ParmVar 0x16a6d6ca218 'pw_maxlen' 'size_t':'unsigned long long'
    |     `-ParenExpr 0x16a6d6d0648 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x16a6d6d0628 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x16a6d6d0550 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x16a6d6d0538 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x16a6d6d03f8 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x16a6d668b90 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x16a6d6d05a0 <<scratch space>:48:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x16a6d6d0588 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x16a6d6d0458 <col:1> 'unsigned short [28]' lvalue L"strlen(passwd) <= pw_maxlen"
    |         | |-ImplicitCastExpr 0x16a6d6d05d0 <line:50:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x16a6d6d05b8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x16a6d6d04a8 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x16a6d6d05e8 <line:51:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x16a6d6d0510 <col:1> 'int' 481
    |         `-IntegerLiteral 0x16a6d6d0600 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-IfStmt 0x16a6d6d09a0 <.//openssl//file_jk/after\apps\passwd.c:485:5, line:486:41>
    | |-ImplicitCastExpr 0x16a6d6d0720 <line:485:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x16a6d6d0700 <col:9> 'int' lvalue ParmVar 0x16a6d6ca298 'usecrypt' 'int'
    | `-BinaryOperator 0x16a6d6d0980 <line:486:9, col:41> 'char *' '='
    |   |-DeclRefExpr 0x16a6d6d0738 <col:9> 'char *' lvalue Var 0x16a6d6ca5b8 'hash' 'char *'
    |   `-ImplicitCastExpr 0x16a6d6d0968 <col:16, col:41> 'char *' <IntegralToPointer>
    |     `-CallExpr 0x16a6d6d0908 <col:16, col:41> 'int'
    |       |-ImplicitCastExpr 0x16a6d6d08f0 <col:16> 'int (*)()' <FunctionToPointerDecay>
    |       | `-DeclRefExpr 0x16a6d6d0860 <col:16> 'int ()' Function 0x16a6d6d0798 'DES_crypt' 'int ()'
    |       |-ImplicitCastExpr 0x16a6d6d0938 <col:26> 'char *' <LValueToRValue>
    |       | `-DeclRefExpr 0x16a6d6d0880 <col:26> 'char *' lvalue ParmVar 0x16a6d6c9fa0 'passwd' 'char *'
    |       `-ImplicitCastExpr 0x16a6d6d0950 <col:34, col:35> 'char *' <LValueToRValue>
    |         `-UnaryOperator 0x16a6d6d08d8 <col:34, col:35> 'char *' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x16a6d6d08c0 <col:35> 'char **' <LValueToRValue>
    |             `-DeclRefExpr 0x16a6d6d08a0 <col:35> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |-IfStmt 0x16a6d6d0d00 <line:489:5, line:490:63>
    | |-BinaryOperator 0x16a6d6d0a28 <line:489:9, col:17> 'int' '||'
    | | |-ImplicitCastExpr 0x16a6d6d09f8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x16a6d6d09b8 <col:9> 'int' lvalue ParmVar 0x16a6d6ca318 'use1' 'int'
    | | `-ImplicitCastExpr 0x16a6d6d0a10 <col:17> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x16a6d6d09d8 <col:17> 'int' lvalue ParmVar 0x16a6d6ca398 'useapr1' 'int'
    | `-BinaryOperator 0x16a6d6d0ce0 <line:490:9, col:63> 'char *' '='
    |   |-DeclRefExpr 0x16a6d6d0a48 <col:9> 'char *' lvalue Var 0x16a6d6ca5b8 'hash' 'char *'
    |   `-CallExpr 0x16a6d6d0c30 <col:16, col:63> 'char *'
    |     |-ImplicitCastExpr 0x16a6d6d0c18 <col:16> 'char *(*)(const char *, const char *, const char *)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x16a6d6d0a68 <col:16> 'char *(const char *, const char *, const char *)' Function 0x16a6d6c1de0 'md5crypt' 'char *(const char *, const char *, const char *)'
    |     |-ImplicitCastExpr 0x16a6d6d0c80 <col:25> 'const char *' <NoOp>
    |     | `-ImplicitCastExpr 0x16a6d6d0c68 <col:25> 'char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x16a6d6d0a88 <col:25> 'char *' lvalue ParmVar 0x16a6d6c9fa0 'passwd' 'char *'
    |     |-ImplicitCastExpr 0x16a6d6d0c98 <col:33, col:53> 'const char *' <NoOp>
    |     | `-ParenExpr 0x16a6d6d0b80 <col:33, col:53> 'char *'
    |     |   `-ConditionalOperator 0x16a6d6d0b50 <col:34, col:47> 'char *'
    |     |     |-ImplicitCastExpr 0x16a6d6d0b08 <col:34> 'int' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x16a6d6d0aa8 <col:34> 'int' lvalue ParmVar 0x16a6d6ca318 'use1' 'int'
    |     |     |-ImplicitCastExpr 0x16a6d6d0b20 <col:41> 'char *' <ArrayToPointerDecay>
    |     |     | `-StringLiteral 0x16a6d6d0ac8 <col:41> 'char [2]' lvalue "1"
    |     |     `-ImplicitCastExpr 0x16a6d6d0b38 <col:47> 'char *' <ArrayToPointerDecay>
    |     |       `-StringLiteral 0x16a6d6d0ae8 <col:47> 'char [5]' lvalue "apr1"
    |     `-ImplicitCastExpr 0x16a6d6d0cc8 <col:56, col:57> 'const char *' <NoOp>
    |       `-ImplicitCastExpr 0x16a6d6d0cb0 <col:56, col:57> 'char *' <LValueToRValue>
    |         `-UnaryOperator 0x16a6d6d0bd8 <col:56, col:57> 'char *' lvalue prefix '*' cannot overflow
    |           `-ImplicitCastExpr 0x16a6d6d0bc0 <col:57> 'char **' <LValueToRValue>
    |             `-DeclRefExpr 0x16a6d6d0ba0 <col:57> 'char **' lvalue ParmVar 0x16a6d6cdea8 'salt_p' 'char **'
    |-CStyleCastExpr 0x16a6d6cb0e8 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
    | `-ParenExpr 0x16a6d6cb0c8 <col:35, col:128> 'int'
    |   `-BinaryOperator 0x16a6d6cb078 <col:37, col:126> 'int' '||'
    |     |-ParenExpr 0x16a6d6d0e60 <col:37, col:53> 'int'
    |     | `-UnaryOperator 0x16a6d6d0e48 <col:38, col:52> 'int' prefix '!' cannot overflow
    |     |   `-UnaryOperator 0x16a6d6d0e30 <col:39, col:52> 'int' prefix '!' cannot overflow
    |     |     `-ParenExpr 0x16a6d6d0e10 <col:40, col:52> 'int'
    |     |       `-BinaryOperator 0x16a6d6d0df0 <.//openssl//file_jk/after\apps\passwd.c:492:12, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
    |     |         |-ImplicitCastExpr 0x16a6d6d0dc0 <.//openssl//file_jk/after\apps\passwd.c:492:12> 'char *' <LValueToRValue>
    |     |         | `-DeclRefExpr 0x16a6d6d0d18 <col:12> 'char *' lvalue Var 0x16a6d6ca5b8 'hash' 'char *'
    |     |         `-ImplicitCastExpr 0x16a6d6d0dd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <BitCast>
    |     |           `-ParenExpr 0x16a6d6d0da0 <col:17, col:27> 'void *'
    |     |             `-CStyleCastExpr 0x16a6d6d0d78 <col:18, col:26> 'void *' <NullToPointer>
    |     |               `-IntegerLiteral 0x16a6d6d0d38 <col:26> 'int' 0
    |     `-ParenExpr 0x16a6d6cb058 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
    |       `-BinaryOperator 0x16a6d6cb038 <col:59, col:125> 'int' ','
    |         |-CallExpr 0x16a6d6d0fb0 <col:59, col:122> 'void'
    |         | |-ImplicitCastExpr 0x16a6d6d0f98 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
    |         | | `-DeclRefExpr 0x16a6d6d0e80 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x16a6d668b90 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
    |         | |-ImplicitCastExpr 0x16a6d6cafb0 <<scratch space>:53:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x16a6d6d0fe8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x16a6d6d0ed8 <col:1> 'unsigned short [13]' lvalue L"hash != NULL"
    |         | |-ImplicitCastExpr 0x16a6d6cafe0 <line:55:1> 'const wchar_t *' <NoOp>
    |         | | `-ImplicitCastExpr 0x16a6d6cafc8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
    |         | |   `-StringLiteral 0x16a6d6d0f08 <col:1> 'unsigned short [40]' lvalue L".//openssl//file_jk/after\\apps\\passwd.c"
    |         | `-ImplicitCastExpr 0x16a6d6caff8 <line:56:1> 'unsigned int' <IntegralCast>
    |         |   `-IntegerLiteral 0x16a6d6d0f70 <col:1> 'int' 492
    |         `-IntegerLiteral 0x16a6d6cb010 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
    |-ReturnStmt 0x16a6d6cb480 <.//openssl//file_jk/after\apps\passwd.c:500:5, col:12>
    | `-IntegerLiteral 0x16a6d6cb458 <col:12> 'int' 1
    `-LabelStmt 0x16a6d6cb4c8 <line:502:2, line:503:12> 'end'
      `-ReturnStmt 0x16a6d6cb4b8 <col:5, col:12>
        `-IntegerLiteral 0x16a6d6cb490 <col:12> 'int' 0
