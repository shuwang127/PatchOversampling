TranslationUnitDecl 0x1faf8d79178 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1faf8d79a10 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1faf8d79710 '__int128'
|-TypedefDecl 0x1faf8d79a80 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1faf8d79730 'unsigned __int128'
|-TypedefDecl 0x1faf8d79db8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1faf8d79b70 'struct __NSConstantString_tag'
|   `-Record 0x1faf8d79ad8 '__NSConstantString_tag'
|-TypedefDecl 0x1faf8d79e28 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1faf8d79350 'unsigned long long'
|-TypedefDecl 0x1faf8d79ec0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1faf8d79e80 'char *'
|   `-BuiltinType 0x1faf8d79210 'char'
|-TypedefDecl 0x1faf8d79f30 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1faf8d79e80 'char *'
|   `-BuiltinType 0x1faf8d79210 'char'
|-TypedefDecl 0x1faf8d79ff0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1faf8d79350 'unsigned long long'
|-TypedefDecl 0x1faf8d7a060 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1faf8d79e80 'char *'
|   `-BuiltinType 0x1faf8d79210 'char'
|-FunctionDecl 0x1fafa7d23e0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1fafa7d2480 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1fafa7d24f0 <col:21> Implicit
|-FunctionDecl 0x1fafa7d2548 prev 0x1fafa7d23e0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1fafa7d2270 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1fafa7d2638 <col:21> Inherited Implicit
|-TypedefDecl 0x1fafa7d2678 prev 0x1faf8d79e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1faf8d79350 'unsigned long long'
|-TypedefDecl 0x1fafa7d2720 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1fafa7d26f0 'size_t' sugar
|   |-Typedef 0x1fafa7d2678 'size_t'
|   `-BuiltinType 0x1faf8d79350 'unsigned long long'
|-TypedefDecl 0x1fafa7d2790 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1faf8d792b0 'long long'
|-TypedefDecl 0x1fafa7d2800 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1faf8d792b0 'long long'
|-TypedefDecl 0x1fafa7d2870 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1faf8d792f0 'unsigned short'
|-TypedefDecl 0x1fafa7d28e0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1faf8d792f0 'unsigned short'
|-TypedefDecl 0x1fafa7d2950 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1faf8d792f0 'unsigned short'
|-TypedefDecl 0x1fafa7d29c0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1faf8d79270 'int'
|-TypedefDecl 0x1fafa7d2a30 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1faf8d79290 'long'
|-TypedefDecl 0x1fafa7d2aa0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1faf8d792b0 'long long'
|-TypedefDecl 0x1fafa7d2b30 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1fafa7d2b00 '__time64_t' sugar
|   |-Typedef 0x1fafa7d2aa0 '__time64_t'
|   `-BuiltinType 0x1faf8d792b0 'long long'
|-FunctionDecl 0x1fafa7d2ca8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1fafa7d2ec8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1fafa812680 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1fafa7d3008 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1fafa7d3080 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1fafa7d30f8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1fafa7d3178 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1fafa812420 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1fafa812760 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1fafa812820 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1fafa812990 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1fafa812940 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1fafa8128e0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1fafa812800 'struct threadlocaleinfostruct'
|       `-Record 0x1fafa81c4c0 'threadlocaleinfostruct'
|-TypedefDecl 0x1fafa812aa0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1fafa812a50 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1fafa8129f0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1fafa8128c0 'struct threadmbcinfostruct'
|       `-Record 0x1fafa812820 'threadmbcinfostruct'
|-RecordDecl 0x1fafa812af8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1fafa812bb0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1fafa812c70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fafa812d00 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1fafa812d90 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1fafa812e48 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1fafa812df0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1fafa812c50 'struct localeinfo_struct'
|     `-Record 0x1fafa812bb0 'localeinfo_struct'
|-TypedefDecl 0x1fafa812f20 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1fafa812ed0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1fafa812df0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1fafa812c50 'struct localeinfo_struct'
|       `-Record 0x1fafa812bb0 'localeinfo_struct'
|-RecordDecl 0x1fafa812f98 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1fafa813050 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fafa8130c8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1fafa813188 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1fafa813220 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1fafa813290 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1fafa813348 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1fafa8132f0 'struct localerefcount' sugar
|   `-RecordType 0x1fafa813030 'struct localerefcount'
|     `-Record 0x1fafa812f98 'localerefcount'
|-RecordDecl 0x1fafa81c4c0 prev 0x1fafa812760 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1fafa81c540 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1fafa81c5b8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1fafa81c628 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1fafa81c698 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1fafa81c708 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1fafa81c8c8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1fafa81c938 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1fafa81c9a8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1fafa81ca18 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1fafa81ca88 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1fafa81caf8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1fafa81cb50 parent 0x1faf8d79178 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1fafa81cce0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1fafa81cd50 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1fafa81cdc0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1fafa81ce30 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1fafa81ced0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1fafa81cf40 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1fafa81d050 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1fafa81d188 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1fafa81d238 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1fafa81d1e0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1fafa812800 'struct threadlocaleinfostruct'
|     `-Record 0x1fafa81c4c0 'threadlocaleinfostruct'
|-FunctionDecl 0x1fafa818560 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x1fafa81d2b8 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x1fafa81d330 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x1fafa81d3b0 <col:98, col:107> col:107 _Line 'unsigned int'
|-TypedefDecl 0x1fafa818648 <D:\Microsoft Visual Studio 12.0\VC\include\signal.h:28:1, col:13> col:13 sig_atomic_t 'int'
| `-BuiltinType 0x1faf8d79270 'int'
|-FunctionDecl 0x1fafa818800 <line:88:1, col:45> col:25 __pxcptinfoptrs 'void **(void) __attribute__((cdecl))':'void **(void)' extern
|-FunctionDecl 0x1fafa818d80 <line:94:9, col:100> col:33 signal 'void (*(int, void (*)(int) __attribute__((cdecl))))(int) __attribute__((cdecl)) __attribute__((cdecl))'
| |-ParmVarDecl 0x1fafa8188d0 <col:45, col:49> col:49 _SigNum 'int'
| `-ParmVarDecl 0x1fafa818b08 <col:67, col:83> col:83 _Func 'void (*)(int) __attribute__((cdecl))'
|-FunctionDecl 0x1fafa818fa8 <line:97:9, col:43> col:21 raise 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1fafa818e60 <col:32, col:36> col:36 _SigNum 'int'
|-FunctionDecl 0x1fafa819210 <.//openssl//file_jk/after\apps/apps.h:43:1, col:55> col:5 used app_RAND_load_file 'int (const char *, int)'
| |-ParmVarDecl 0x1fafa819080 <col:24, col:36> col:36 file 'const char *'
| `-ParmVarDecl 0x1fafa819100 <col:42, col:46> col:46 dont_warn 'int'
|-FunctionDecl 0x1fafa8193d0 <line:44:1, col:41> col:5 app_RAND_write_file 'int (const char *)'
| `-ParmVarDecl 0x1fafa8192f0 <col:25, col:37> col:37 file 'const char *'
|-FunctionDecl 0x1fafa819540 <line:48:1, col:36> col:6 app_RAND_allow_write_file 'void (void)'
|-FunctionDecl 0x1fafa8196f0 <line:49:1, col:36> col:6 app_RAND_load_files 'long (char *)'
| `-ParmVarDecl 0x1fafa819610 <col:26, col:32> col:32 file 'char *'
|-VarDecl 0x1fafa8197c8 <line:54:1, col:14> col:14 default_config_file 'char *' extern
|-VarDecl 0x1fafa819860 <line:55:1, col:13> col:13 invalid bio_in 'int *' extern
|-VarDecl 0x1fafa8198e0 <line:56:1, col:13> col:13 invalid bio_out 'int *' extern
|-VarDecl 0x1fafa819960 <line:57:1, col:13> col:13 invalid bio_err 'int *' extern
|-FunctionDecl 0x1fafa819ac0 <line:58:1, col:27> col:6 invalid dup_bio_in 'int *(int)'
| `-ParmVarDecl 0x1fafa8199e0 <col:17, col:21> col:21 format 'int'
|-FunctionDecl 0x1fafa819c30 <line:59:1, col:28> col:6 invalid dup_bio_out 'int *(int)'
| `-ParmVarDecl 0x1fafa819b80 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x1fafa819da0 <line:60:1, col:28> col:6 invalid dup_bio_err 'int *(int)'
| `-ParmVarDecl 0x1fafa819cf0 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x1fafa81a090 <line:61:1, col:66> col:6 invalid bio_open_owner 'int *(const char *, int, int)'
| |-ParmVarDecl 0x1fafa819e60 <col:21, col:33> col:33 filename 'const char *'
| |-ParmVarDecl 0x1fafa819ee0 <col:43, col:47> col:47 format 'int'
| `-ParmVarDecl 0x1fafa819f60 <col:55, col:59> col:59 private 'int'
|-FunctionDecl 0x1fafa81a390 <line:62:1, col:66> col:6 invalid bio_open_default 'int *(const char *, char, int)'
| |-ParmVarDecl 0x1fafa81a160 <col:23, col:35> col:35 filename 'const char *'
| |-ParmVarDecl 0x1fafa81a1d8 <col:45, col:50> col:50 mode 'char'
| `-ParmVarDecl 0x1fafa81a258 <col:56, col:60> col:60 format 'int'
|-FunctionDecl 0x1fafa8216f8 <line:63:1, col:72> col:6 invalid bio_open_default_quiet 'int *(const char *, char, int)'
| |-ParmVarDecl 0x1fafa821510 <col:29, col:41> col:41 filename 'const char *'
| |-ParmVarDecl 0x1fafa821588 <col:51, col:56> col:56 mode 'char'
| `-ParmVarDecl 0x1fafa821608 <col:62, col:66> col:66 format 'int'
|-FunctionDecl 0x1fafa8218b0 <line:64:1, col:43> col:7 invalid app_load_config 'int *(const char *)'
| `-ParmVarDecl 0x1fafa8217c8 <col:23, col:35> col:35 filename 'const char *'
|-FunctionDecl 0x1fafa821a20 <line:65:1, col:49> col:7 invalid app_load_config_quiet 'int *(const char *)'
| `-ParmVarDecl 0x1fafa821970 <col:29, col:41> col:41 filename 'const char *'
|-FunctionDecl 0x1fafa821bb0 <line:66:1, col:40> col:5 invalid app_load_modules 'int (const int *)'
| `-ParmVarDecl 0x1fafa821ae0 <col:22, col:34> col:34 invalid config 'const int *'
|-FunctionDecl 0x1fafa821d38 <line:67:1, col:23> col:6 invalid unbuffer 'void (int *)'
| `-ParmVarDecl 0x1fafa821c70 <col:15, col:21> col:21 invalid fp 'int *'
|-FunctionDecl 0x1fafa821e88 <line:68:1, col:27> col:6 invalid wait_for_async 'void (int *)'
| `-ParmVarDecl 0x1fafa821df8 <col:21, col:26> col:26 invalid s 'int *'
|-FunctionDecl 0x1fafa822008 <line:73:1, col:52> col:6 invalid corrupt_signature 'void (const int *)'
| `-ParmVarDecl 0x1fafa821f48 <col:24, col:43> col:43 invalid signature 'const int *'
|-FunctionDecl 0x1fafa822340 <line:74:1, line:75:28> line:74:5 invalid set_cert_times 'int (int *, const char *, const char *, int)'
| |-ParmVarDecl 0x1fafa8220c8 <col:20, col:26> col:26 invalid x 'int *'
| |-ParmVarDecl 0x1fafa822148 <col:29, col:41> col:41 startdate 'const char *'
| |-ParmVarDecl 0x1fafa8221c8 <col:52, col:64> col:64 enddate 'const char *'
| `-ParmVarDecl 0x1fafa822248 <line:75:20, col:24> col:24 days 'int'
|-VarDecl 0x1fafa822478 <line:291:1, col:32> col:19 OPT_HELP_STR 'const char []' extern
|-VarDecl 0x1fafa822540 <line:292:1, col:32> col:19 OPT_MORE_STR 'const char []' extern
|-RecordDecl 0x1fafa8225c0 <line:293:9, line:304:1> line:293:16 struct options_st definition
| |-FieldDecl 0x1fafa822698 <line:294:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x1fafa822708 <line:295:5, col:9> col:9 retval 'int'
| |-FieldDecl 0x1fafa822778 <line:302:5, col:9> col:9 valtype 'int'
| `-FieldDecl 0x1fafa8227e8 <line:303:5, col:17> col:17 helpstr 'const char *'
|-TypedefDecl 0x1fafa822898 <line:293:1, line:304:3> col:3 referenced OPTIONS 'struct options_st':'struct options_st'
| `-ElaboratedType 0x1fafa822840 'struct options_st' sugar
|   `-RecordType 0x1fafa822660 'struct options_st'
|     `-Record 0x1fafa8225c0 'options_st'
|-RecordDecl 0x1fafa822908 <line:311:9, line:314:1> line:311:16 struct string_int_pair_st definition
| |-FieldDecl 0x1fafa8229d8 <line:312:5, col:17> col:17 name 'const char *'
| `-FieldDecl 0x1fafa822a48 <line:313:5, col:9> col:9 retval 'int'
|-TypedefDecl 0x1fafa822af8 <line:311:1, line:314:3> col:3 referenced OPT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x1fafa822aa0 'struct string_int_pair_st' sugar
|   `-RecordType 0x1fafa8229a0 'struct string_int_pair_st'
|     `-Record 0x1fafa822908 'string_int_pair_st'
|-TypedefDecl 0x1fafa822b70 <line:311:1, line:314:13> col:13 STRINT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x1fafa822aa0 'struct string_int_pair_st' sugar
|   `-RecordType 0x1fafa8229a0 'struct string_int_pair_st'
|     `-Record 0x1fafa822908 'string_int_pair_st'
|-FunctionDecl 0x1fafa822ce0 <line:334:1, col:37> col:7 opt_progname 'char *(const char *)'
| `-ParmVarDecl 0x1fafa822c00 <col:20, col:32> col:32 argv0 'const char *'
|-FunctionDecl 0x1fafa822e70 <line:335:1, col:23> col:7 opt_getprog 'char *(void)'
|-FunctionDecl 0x1fafa823230 <line:336:1, col:52> col:7 used opt_init 'char *(int, char **, const OPTIONS *)'
| |-ParmVarDecl 0x1fafa822f40 <col:16, col:20> col:20 ac 'int'
| |-ParmVarDecl 0x1fafa822fc0 <col:24, col:31> col:31 av 'char **'
| `-ParmVarDecl 0x1fafa8230b8 <col:35, col:51> col:51 o 'const OPTIONS *'
|-FunctionDecl 0x1fafa8233d0 <line:337:1, col:18> col:5 used opt_next 'int (void)'
|-FunctionDecl 0x1fafa827720 <line:338:1, col:63> col:5 used opt_format 'int (const char *, unsigned long, int *)'
| |-ParmVarDecl 0x1fafa8234a0 <col:16, col:28> col:28 s 'const char *'
| |-ParmVarDecl 0x1fafa827570 <col:31, col:45> col:45 flags 'unsigned long'
| `-ParmVarDecl 0x1fafa8275f0 <col:52, col:57> col:57 result 'int *'
|-FunctionDecl 0x1fafa827990 <line:339:1, col:41> col:5 opt_int 'int (const char *, int *)'
| |-ParmVarDecl 0x1fafa827808 <col:13, col:25> col:25 arg 'const char *'
| `-ParmVarDecl 0x1fafa827888 <col:30, col:35> col:35 result 'int *'
|-FunctionDecl 0x1fafa827c30 <line:340:1, col:53> col:5 opt_ulong 'int (const char *, unsigned long *)'
| |-ParmVarDecl 0x1fafa827a70 <col:15, col:27> col:27 arg 'const char *'
| `-ParmVarDecl 0x1fafa827b20 <col:32, col:47> col:47 result 'unsigned long *'
|-FunctionDecl 0x1fafa827ed0 <line:341:1, col:43> col:5 opt_long 'int (const char *, long *)'
| |-ParmVarDecl 0x1fafa827d10 <col:14, col:26> col:26 arg 'const char *'
| `-ParmVarDecl 0x1fafa827dc0 <col:31, col:37> col:37 result 'long *'
|-FunctionDecl 0x1fafa8282a0 <line:352:1, col:66> col:5 opt_pair 'int (const char *, const OPT_PAIR *, int *)'
| |-ParmVarDecl 0x1fafa827fb0 <col:14, col:26> col:26 arg 'const char *'
| |-ParmVarDecl 0x1fafa8280a8 <col:31, col:48> col:48 pairs 'const OPT_PAIR *'
| `-ParmVarDecl 0x1fafa828128 <col:55, col:60> col:60 result 'int *'
|-FunctionDecl 0x1fafa824540 <line:353:1, col:60> col:5 invalid opt_cipher 'int (const char *, const int **)'
| |-ParmVarDecl 0x1fafa828388 <col:16, col:28> col:28 name 'const char *'
| `-ParmVarDecl 0x1fafa828438 <col:34, col:53> col:53 invalid cipherp 'const int **'
|-FunctionDecl 0x1fafa824730 <line:354:1, col:48> col:5 invalid opt_md 'int (const char *, const int **)'
| |-ParmVarDecl 0x1fafa824608 <col:12, col:24> col:24 name 'const char *'
| `-ParmVarDecl 0x1fafa824690 <col:30, col:45> col:45 invalid mdp 'const int **'
|-FunctionDecl 0x1fafa824880 <line:355:1, col:19> col:7 used opt_arg 'char *(void)'
|-FunctionDecl 0x1fafa8249d8 <line:356:1, col:20> col:7 opt_flag 'char *(void)'
|-FunctionDecl 0x1fafa824b30 <line:357:1, col:23> col:7 opt_unknown 'char *(void)'
|-FunctionDecl 0x1fafa824c88 <line:358:1, col:21> col:7 opt_reset 'char *(void)'
|-FunctionDecl 0x1fafa824e10 <line:359:1, col:21> col:8 opt_rest 'char **(void)'
|-FunctionDecl 0x1fafa824f68 <line:360:1, col:22> col:5 used opt_num_rest 'int (void)'
|-FunctionDecl 0x1fafa825190 <line:361:1, col:45> col:5 invalid opt_verify 'int (int, int *)'
| |-ParmVarDecl 0x1fafa825038 <col:16, col:20> col:20 i 'int'
| `-ParmVarDecl 0x1fafa8250b8 <col:23, col:42> col:42 invalid vpm 'int *'
|-FunctionDecl 0x1fafa825358 <line:362:1, col:35> col:6 used opt_help 'void (const OPTIONS *)'
| `-ParmVarDecl 0x1fafa825250 <col:15, col:31> col:31 list 'const OPTIONS *'
|-FunctionDecl 0x1fafa828610 <line:363:1, col:56> col:5 opt_format_error 'int (const char *, unsigned long)'
| |-ParmVarDecl 0x1fafa825430 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x1fafa8254b0 <col:37, col:51> col:51 flags 'unsigned long'
|-RecordDecl 0x1fafa8286d8 <line:365:9, line:369:1> line:365:16 struct args_st definition
| |-FieldDecl 0x1fafa8287a8 <line:366:5, col:9> col:9 size 'int'
| |-FieldDecl 0x1fafa828818 <line:367:5, col:9> col:9 argc 'int'
| `-FieldDecl 0x1fafa828888 <line:368:5, col:12> col:12 argv 'char **'
|-TypedefDecl 0x1fafa828938 <line:365:1, line:369:3> col:3 referenced ARGS 'struct args_st':'struct args_st'
| `-ElaboratedType 0x1fafa8288e0 'struct args_st' sugar
|   `-RecordType 0x1fafa828770 'struct args_st'
|     `-Record 0x1fafa8286d8 'args_st'
|-FunctionDecl 0x1fafa828c00 <line:376:1, col:41> col:8 copy_argv 'char **(int *, char **)'
| |-ParmVarDecl 0x1fafa8289c0 <col:18, col:23> col:23 argc 'int *'
| `-ParmVarDecl 0x1fafa828ab0 <col:29, col:40> col:35 argv 'char **':'char **'
|-FunctionDecl 0x1fafa828f48 <line:381:1, col:45> col:6 win32_utf8argv 'void (int *, char ***)'
| |-ParmVarDecl 0x1fafa828ce0 <col:21, col:26> col:26 argc 'int *'
| `-ParmVarDecl 0x1fafa828e00 <col:32, col:44> col:39 argv 'char ***':'char ***'
|-RecordDecl 0x1fafa829010 <line:385:9, line:388:1> line:385:16 struct pw_cb_data definition
| |-FieldDecl 0x1fafa829110 <line:386:5, col:17> col:17 password 'const void *'
| `-FieldDecl 0x1fafa829180 <line:387:5, col:17> col:17 prompt_info 'const char *'
|-TypedefDecl 0x1fafa829238 <line:385:1, line:388:3> col:3 referenced PW_CB_DATA 'struct pw_cb_data':'struct pw_cb_data'
| `-ElaboratedType 0x1fafa8291e0 'struct pw_cb_data' sugar
|   `-RecordType 0x1fafa8290b0 'struct pw_cb_data'
|     `-Record 0x1fafa829010 'pw_cb_data'
|-FunctionDecl 0x1fafa826640 <line:390:1, col:77> col:5 password_callback 'int (char *, int, int, PW_CB_DATA *)'
| |-ParmVarDecl 0x1fafa8292c0 <col:23, col:29> col:29 buf 'char *'
| |-ParmVarDecl 0x1fafa829340 <col:34, col:38> col:38 bufsiz 'int'
| |-ParmVarDecl 0x1fafa8293c0 <col:46, col:50> col:50 verify 'int'
| `-ParmVarDecl 0x1fafa8294b8 <col:58, col:70> col:70 cb_data 'PW_CB_DATA *'
|-FunctionDecl 0x1fafa8267b8 <line:392:1, col:25> col:5 setup_ui_method 'int (void)'
|-FunctionDecl 0x1fafa826908 <line:393:1, col:28> col:6 destroy_ui_method 'void (void)'
|-FunctionDecl 0x1fafa826c10 <line:395:1, col:37> col:5 chopup_args 'int (ARGS *, char *)'
| |-ParmVarDecl 0x1fafa826a48 <col:17, col:23> col:23 arg 'ARGS *'
| `-ParmVarDecl 0x1fafa826ac8 <col:28, col:34> col:34 buf 'char *'
|-FunctionDecl 0x1fafa827028 <line:401:1, line:402:43> line:401:6 invalid print_bignum_var 'void (int *, const int *, const char *, int, unsigned char *)'
| |-ParmVarDecl 0x1fafa826cf0 <col:23, <invalid sloc>> col:28 invalid 'int *'
| |-ParmVarDecl 0x1fafa826d70 <col:30, <invalid sloc>> col:44 invalid 'const int *'
| |-ParmVarDecl 0x1fafa826df0 <col:46, col:56> col:57 'const char *'
| |-ParmVarDecl 0x1fafa826e70 <line:402:23> col:26 'int'
| `-ParmVarDecl 0x1fafa826f20 <col:28, col:42> col:43 'unsigned char *'
|-FunctionDecl 0x1fafa827378 <line:403:1, col:65> col:6 invalid print_array 'void (int *, const char *, int, const unsigned char *)'
| |-ParmVarDecl 0x1fafa827108 <col:18, <invalid sloc>> col:23 invalid 'int *'
| |-ParmVarDecl 0x1fafa827188 <col:25, col:36> col:37 'const char *'
| |-ParmVarDecl 0x1fafa827208 <col:39> col:42 'int'
| `-ParmVarDecl 0x1fafa827288 <col:44, col:64> col:65 'const unsigned char *'
|-FunctionDecl 0x1fafa85fa50 <line:404:1, col:54> col:5 set_cert_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x1fafa827450 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x1fafa8274d0 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x1fafa85fc80 <line:405:1, col:54> col:5 set_name_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x1fafa85fb30 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x1fafa85fbb0 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x1fafa85fef0 <line:406:1, col:49> col:5 set_ext_copy 'int (int *, const char *)'
| |-ParmVarDecl 0x1fafa85fd60 <col:18, col:23> col:23 copy_type 'int *'
| `-ParmVarDecl 0x1fafa85fde0 <col:34, col:46> col:46 arg 'const char *'
|-FunctionDecl 0x1fafa8601c0 <line:407:1, col:58> col:5 invalid copy_extensions 'int (int *, int *, int)'
| |-ParmVarDecl 0x1fafa85ffd0 <col:21, col:27> col:27 invalid x 'int *'
| |-ParmVarDecl 0x1fafa860050 <col:30, col:40> col:40 invalid req 'int *'
| `-ParmVarDecl 0x1fafa8600d0 <col:45, col:49> col:49 copy_type 'int'
|-FunctionDecl 0x1fafa860570 <line:408:1, col:78> col:5 used app_passwd 'int (const char *, const char *, char **, char **)'
| |-ParmVarDecl 0x1fafa860290 <col:16, col:28> col:28 arg1 'const char *'
| |-ParmVarDecl 0x1fafa860310 <col:34, col:46> col:46 arg2 'const char *'
| |-ParmVarDecl 0x1fafa860390 <col:52, col:59> col:59 pass1 'char **'
| `-ParmVarDecl 0x1fafa860410 <col:66, col:73> col:73 pass2 'char **'
|-FunctionDecl 0x1fafa860730 <line:409:1, col:31> col:5 invalid add_oid_section 'int (int *)'
| `-ParmVarDecl 0x1fafa860660 <col:21, col:27> col:27 invalid conf 'int *'
|-FunctionDecl 0x1fafa85a9f0 <line:410:1, col:71> col:7 invalid load_cert 'int *(const char *, int, const char *)'
| |-ParmVarDecl 0x1fafa8607f0 <col:17, col:29> col:29 file 'const char *'
| |-ParmVarDecl 0x1fafa860870 <col:35, col:39> col:39 format 'int'
| `-ParmVarDecl 0x1fafa8608f0 <col:47, col:59> col:59 cert_descrip 'const char *'
|-FunctionDecl 0x1fafa85ac50 <line:411:1, col:50> col:11 invalid load_crl 'int *(const char *, int)'
| |-ParmVarDecl 0x1fafa85aac0 <col:20, col:32> col:32 infile 'const char *'
| `-ParmVarDecl 0x1fafa85ab40 <col:40, col:44> col:44 format 'int'
|-FunctionDecl 0x1fafa85b0b0 <line:412:1, line:413:72> line:412:11 invalid load_key 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x1fafa85ad18 <col:20, col:32> col:32 file 'const char *'
| |-ParmVarDecl 0x1fafa85ad98 <col:38, col:42> col:42 format 'int'
| |-ParmVarDecl 0x1fafa85ae18 <col:50, col:54> col:54 maybe_stdin 'int'
| |-ParmVarDecl 0x1fafa85ae98 <line:413:20, col:32> col:32 pass 'const char *'
| |-ParmVarDecl 0x1fafa85af18 <col:38, col:46> col:46 invalid e 'int *'
| `-ParmVarDecl 0x1fafa85af98 <col:49, col:61> col:61 key_descrip 'const char *'
|-FunctionDecl 0x1fafa85b4d8 <line:414:1, line:415:75> line:414:11 invalid load_pubkey 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x1fafa85b198 <col:23, col:35> col:35 file 'const char *'
| |-ParmVarDecl 0x1fafa85b218 <col:41, col:45> col:45 format 'int'
| |-ParmVarDecl 0x1fafa85b298 <col:53, col:57> col:57 maybe_stdin 'int'
| |-ParmVarDecl 0x1fafa85b318 <line:415:23, col:35> col:35 pass 'const char *'
| |-ParmVarDecl 0x1fafa85b398 <col:41, col:49> col:49 invalid e 'int *'
| `-ParmVarDecl 0x1fafa85b418 <col:52, col:64> col:64 key_descrip 'const char *'
|-FunctionDecl 0x1fafa85b800 <line:416:1, line:417:58> line:416:5 invalid load_certs 'int (const char *, int (*)())'
| |-ParmVarDecl 0x1fafa85b5c0 <col:16, col:28> col:28 file 'const char *'
| `-ParmVarDecl 0x1fafa85b6e0 <col:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1fafa860a70 <line:418:1, line:419:57> line:418:5 invalid load_crls 'int (const char *, int (*)())'
| |-ParmVarDecl 0x1fafa85b8c8 <col:15, col:27> col:27 file 'const char *'
| `-ParmVarDecl 0x1fafa8609d0 <col:33, <invalid sloc>> col:33 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1fafa860e10 <line:420:1, line:421:52> line:420:13 invalid setup_verify 'int *(const char *, const char *, int, int)'
| |-ParmVarDecl 0x1fafa860b38 <col:26, col:38> col:38 CAfile 'const char *'
| |-ParmVarDecl 0x1fafa860bb8 <col:46, col:58> col:58 CApath 'const char *'
| |-ParmVarDecl 0x1fafa860c38 <line:421:26, col:30> col:30 noCAfile 'int'
| `-ParmVarDecl 0x1fafa860cb8 <col:40, col:44> col:44 noCApath 'int'
|-FunctionDecl 0x1fafa8611f0 <line:422:1, line:424:49> line:422:12 invalid ctx_set_verify_locations 'int (int *, const char *, const char *, int, int)'
| |-ParmVarDecl 0x1fafa860ee8 <col:37, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x1fafa860f68 <col:51, col:63> col:63 CAfile 'const char *'
| |-ParmVarDecl 0x1fafa860fe8 <line:423:37, col:49> col:49 CApath 'const char *'
| |-ParmVarDecl 0x1fafa861068 <col:57, col:61> col:61 noCAfile 'int'
| `-ParmVarDecl 0x1fafa8610e8 <line:424:37, col:41> col:41 noCApath 'int'
|-FunctionDecl 0x1fafa8613f0 <line:433:1, col:66> col:12 invalid ctx_set_ctlog_list_file 'int (int *, const char *)'
| |-ParmVarDecl 0x1fafa8612d0 <col:36, col:45> col:45 invalid ctx 'int *'
| `-ParmVarDecl 0x1fafa861350 <col:50, col:62> col:62 path 'const char *'
|-FunctionDecl 0x1fafa861608 <line:437:1, col:51> col:9 invalid setup_engine 'int *(const char *, int)'
| |-ParmVarDecl 0x1fafa8614b8 <col:22, col:34> col:34 engine 'const char *'
| `-ParmVarDecl 0x1fafa861538 <col:42, col:46> col:46 debug 'int'
|-FunctionDecl 0x1fafa861760 <line:438:1, col:30> col:6 invalid release_engine 'void (int *)'
| `-ParmVarDecl 0x1fafa8616d0 <col:21, col:29> col:29 invalid e 'int *'
|-FunctionDecl 0x1fafa85bc10 <line:441:1, line:445:49> line:441:16 invalid process_responder 'int *(int *, const char *, const char *, const char *, int, int (*)())'
| |-ParmVarDecl 0x1fafa861820 <col:34, col:48> col:48 invalid req 'int *'
| |-ParmVarDecl 0x1fafa8618a0 <line:442:34, col:46> col:46 host 'const char *'
| |-ParmVarDecl 0x1fafa861920 <col:52, col:64> col:64 path 'const char *'
| |-ParmVarDecl 0x1fafa85b980 <line:443:34, col:46> col:46 port 'const char *'
| |-ParmVarDecl 0x1fafa85ba00 <col:52, col:56> col:56 use_ssl 'int'
| `-ParmVarDecl 0x1fafa85ba90 <line:444:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1fafa85c040 <line:449:1, line:450:66> line:449:5 invalid unpack_revinfo 'int (int **, int *, int **, int **, const char *)'
| |-ParmVarDecl 0x1fafa85bd28 <col:20, col:32> col:32 invalid prevtm 'int **'
| |-ParmVarDecl 0x1fafa85bda8 <col:40, col:45> col:45 preason 'int *'
| |-ParmVarDecl 0x1fafa85be30 <col:54, col:68> col:68 invalid phold 'int **'
| |-ParmVarDecl 0x1fafa85beb8 <line:450:20, col:43> col:43 invalid pinvtm 'int **'
| `-ParmVarDecl 0x1fafa85bf38 <col:51, col:63> col:63 str 'const char *'
|-RecordDecl 0x1fafa85c108 <line:465:9, line:467:1> line:465:16 struct db_attr_st definition
| `-FieldDecl 0x1fafa85c1d8 <line:466:5, col:9> col:9 unique_subject 'int'
|-TypedefDecl 0x1fafa85c288 <line:465:1, line:467:3> col:3 referenced DB_ATTR 'struct db_attr_st':'struct db_attr_st'
| `-ElaboratedType 0x1fafa85c230 'struct db_attr_st' sugar
|   `-RecordType 0x1fafa85c1a0 'struct db_attr_st'
|     `-Record 0x1fafa85c108 'db_attr_st'
|-RecordDecl 0x1fafa85c2f8 <line:468:9, line:471:1> line:468:16 invalid struct ca_db_st definition
| |-FieldDecl 0x1fafa85c3e0 <line:469:5, col:13> col:13 attributes 'DB_ATTR':'struct db_attr_st'
| `-FieldDecl 0x1fafa85c450 <line:470:5, col:13> col:13 invalid db 'int *'
|-TypedefDecl 0x1fafa85c558 <line:468:1, line:471:3> col:3 referenced CA_DB 'struct ca_db_st':'struct ca_db_st'
| `-ElaboratedType 0x1fafa85c500 'struct ca_db_st' sugar
|   `-RecordType 0x1fafa85c390 'struct ca_db_st'
|     `-Record 0x1fafa85c2f8 'ca_db_st'
|-FunctionDecl 0x1fafa85c770 <line:473:1, col:42> col:7 used app_malloc 'void *(int, const char *)'
| |-ParmVarDecl 0x1fafa85c5e0 <col:18, col:22> col:22 sz 'int'
| `-ParmVarDecl 0x1fafa85c660 <col:26, col:38> col:38 what 'const char *'
|-FunctionDecl 0x1fafa859a50 <line:474:1, col:77> col:9 invalid load_serial 'int *(const char *, int, int **)'
| |-ParmVarDecl 0x1fafa85c850 <col:21, col:33> col:33 serialfile 'const char *'
| |-ParmVarDecl 0x1fafa85c8d0 <col:45, col:49> col:49 create 'int'
| `-ParmVarDecl 0x1fafa859960 <col:57, col:72> col:72 invalid retai 'int **'
|-FunctionDecl 0x1fafa859da0 <line:475:1, line:476:37> line:475:5 invalid save_serial 'int (const char *, const char *, const int *, int **)'
| |-ParmVarDecl 0x1fafa859b20 <col:17, col:29> col:29 serialfile 'const char *'
| |-ParmVarDecl 0x1fafa859ba0 <col:41, col:53> col:53 suffix 'const char *'
| |-ParmVarDecl 0x1fafa859c20 <col:61, col:75> col:75 invalid serial 'const int *'
| `-ParmVarDecl 0x1fafa859ca8 <line:476:17, col:32> col:32 invalid retai 'int **'
|-FunctionDecl 0x1fafa85a0b0 <line:477:1, line:478:41> line:477:5 rotate_serial 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x1fafa859e78 <col:19, col:31> col:31 serialfile 'const char *'
| |-ParmVarDecl 0x1fafa859ef8 <col:43, col:55> col:55 new_suffix 'const char *'
| `-ParmVarDecl 0x1fafa859f78 <line:478:19, col:31> col:31 old_suffix 'const char *'
|-FunctionDecl 0x1fafa85a2f0 <line:479:1, col:44> col:5 invalid rand_serial 'int (int *, int *)'
| |-ParmVarDecl 0x1fafa85a198 <col:17, col:25> col:25 invalid b 'int *'
| `-ParmVarDecl 0x1fafa85a218 <col:28, col:42> col:42 invalid ai 'int *'
|-FunctionDecl 0x1fafa85a648 <line:480:1, col:54> col:8 load_index 'CA_DB *(const char *, DB_ATTR *)'
| |-ParmVarDecl 0x1fafa85a3d8 <col:19, col:31> col:31 dbfile 'const char *'
| `-ParmVarDecl 0x1fafa85a4a8 <col:39, col:48> col:48 dbattr 'DB_ATTR *'
|-FunctionDecl 0x1fafa85a830 <line:481:1, col:26> col:5 index_index 'int (CA_DB *)'
| `-ParmVarDecl 0x1fafa85a720 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x1fafa861c50 <line:482:1, col:65> col:5 save_index 'int (const char *, const char *, CA_DB *)'
| |-ParmVarDecl 0x1fafa8619e0 <col:16, col:28> col:28 dbfile 'const char *'
| |-ParmVarDecl 0x1fafa861a60 <col:36, col:48> col:48 suffix 'const char *'
| `-ParmVarDecl 0x1fafa861ad8 <col:56, col:63> col:63 db 'CA_DB *'
|-FunctionDecl 0x1fafa861f28 <line:483:1, line:484:40> line:483:5 rotate_index 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x1fafa861d38 <col:18, col:30> col:30 dbfile 'const char *'
| |-ParmVarDecl 0x1fafa861db8 <col:38, col:50> col:50 new_suffix 'const char *'
| `-ParmVarDecl 0x1fafa861e38 <line:484:18, col:30> col:30 old_suffix 'const char *'
|-FunctionDecl 0x1fafa862118 <line:485:1, col:26> col:6 free_index 'void (CA_DB *)'
| `-ParmVarDecl 0x1fafa862008 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x1fafa862350 <line:489:1, col:70> col:5 invalid index_name_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x1fafa8621f0 <col:20, col:43> col:43 invalid a 'const int *'
| `-ParmVarDecl 0x1fafa862270 <col:46, col:69> col:69 invalid b 'const int *'
|-FunctionDecl 0x1fafa862568 <line:490:1, col:41> col:5 parse_yesno 'int (const char *, int)'
| |-ParmVarDecl 0x1fafa862418 <col:17, col:29> col:29 str 'const char *'
| `-ParmVarDecl 0x1fafa862498 <col:34, col:38> col:38 def 'int'
|-FunctionDecl 0x1fafa862880 <line:492:1, col:65> col:12 invalid parse_name 'int *(const char *, long, int)'
| |-ParmVarDecl 0x1fafa862648 <col:23, col:35> col:35 str 'const char *'
| |-ParmVarDecl 0x1fafa8626c8 <col:40, col:45> col:45 chtype 'long'
| `-ParmVarDecl 0x1fafa862748 <col:53, col:57> col:57 multirdn 'int'
|-FunctionDecl 0x1fafa862bf0 <line:493:1, line:494:52> line:493:5 invalid args_verify 'int (char ***, int *, int *, int **)'
| |-ParmVarDecl 0x1fafa862958 <col:17, col:25> col:25 pargs 'char ***'
| |-ParmVarDecl 0x1fafa8629f0 <col:32, col:37> col:37 pargc 'int *'
| |-ParmVarDecl 0x1fafa862a70 <line:494:17, col:22> col:22 badarg 'int *'
| `-ParmVarDecl 0x1fafa862af8 <col:30, col:50> col:50 invalid pm 'int **'
|-FunctionDecl 0x1fafa862d58 <line:495:1, col:40> col:6 invalid policies_print 'void (int *)'
| `-ParmVarDecl 0x1fafa862cc8 <col:21, col:37> col:37 invalid ctx 'int *'
|-FunctionDecl 0x1fafa863030 <line:496:1, col:56> col:5 invalid bio_to_mem 'int (unsigned char **, int, int *)'
| |-ParmVarDecl 0x1fafa862e48 <col:16, col:32> col:32 out 'unsigned char **'
| |-ParmVarDecl 0x1fafa862ec8 <col:37, col:41> col:41 maxlen 'int'
| `-ParmVarDecl 0x1fafa862f48 <col:49, col:54> col:54 invalid in 'int *'
|-FunctionDecl 0x1fafa863220 <line:497:1, col:58> col:5 invalid pkey_ctrl_string 'int (int *, const char *)'
| |-ParmVarDecl 0x1fafa863100 <col:22, col:36> col:36 invalid ctx 'int *'
| `-ParmVarDecl 0x1fafa863180 <col:41, col:53> col:53 value 'const char *'
|-FunctionDecl 0x1fafa863570 <line:498:1, line:499:62> line:498:5 invalid init_gen_str 'int (int **, const char *, int *, int)'
| |-ParmVarDecl 0x1fafa8632f0 <col:18, col:33> col:33 invalid pctx 'int **'
| |-ParmVarDecl 0x1fafa863370 <line:499:18, col:30> col:30 algname 'const char *'
| |-ParmVarDecl 0x1fafa8633f0 <col:39, col:47> col:47 invalid e 'int *'
| `-ParmVarDecl 0x1fafa863470 <col:50, col:54> col:54 do_param 'int'
|-FunctionDecl 0x1fafa863920 <line:500:1, line:501:51> line:500:5 invalid do_X509_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x1fafa863648 <col:18, col:24> col:24 invalid x 'int *'
| |-ParmVarDecl 0x1fafa8636c8 <col:27, col:37> col:37 invalid pkey 'int *'
| |-ParmVarDecl 0x1fafa863748 <col:43, col:57> col:57 invalid md 'const int *'
| `-ParmVarDecl 0x1fafa8637d8 <line:501:18, <invalid sloc>> col:18 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1fafa864c68 <line:502:1, line:503:55> line:502:5 invalid do_X509_REQ_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x1fafa864a28 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x1fafa864aa8 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x1fafa864b28 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x1fafa864bb8 <line:503:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1fafa864f80 <line:504:1, line:505:55> line:504:5 invalid do_X509_CRL_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x1fafa864d40 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x1fafa864dc0 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x1fafa864e40 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x1fafa864ed0 <line:505:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-VarDecl 0x1fafa865058 <line:507:1, col:14> col:14 psk_key 'char *' extern
|-FunctionDecl 0x1fafa865310 <line:510:1, col:64> col:16 next_protos_parse 'unsigned char *(size_t *, const char *)'
| |-ParmVarDecl 0x1fafa865148 <col:34, col:42> col:42 outlen 'size_t *'
| `-ParmVarDecl 0x1fafa8651c8 <col:50, col:62> col:62 in 'const char *'
|-FunctionDecl 0x1fafa8656f8 <line:512:1, line:514:67> line:512:6 invalid print_cert_checks 'void (int *, int *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1fafa8653f0 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x1fafa865470 <col:34, col:40> col:40 invalid x 'int *'
| |-ParmVarDecl 0x1fafa8654f0 <line:513:24, col:36> col:36 checkhost 'const char *'
| |-ParmVarDecl 0x1fafa865570 <line:514:24, col:36> col:36 checkemail 'const char *'
| `-ParmVarDecl 0x1fafa8655f0 <col:48, col:60> col:60 checkip 'const char *'
|-FunctionDecl 0x1fafa865868 <line:516:1, col:45> col:6 invalid store_setup_crl_download 'void (int *)'
| `-ParmVarDecl 0x1fafa8657d8 <col:31, col:43> col:43 invalid st 'int *'
|-FunctionDecl 0x1fafa868a50 <line:551:1, col:27> col:5 app_isdir 'int (const char *)'
| `-ParmVarDecl 0x1fafa865928 <col:15, col:26> col:27 'const char *'
|-FunctionDecl 0x1fafa868c60 <line:552:1, col:38> col:5 app_access 'int (const char *, int)'
| |-ParmVarDecl 0x1fafa868b28 <col:16, col:27> col:28 'const char *'
| `-ParmVarDecl 0x1fafa868ba8 <col:30, col:34> col:34 flag 'int'
|-FunctionDecl 0x1fafa868dc8 <line:553:1, col:22> col:5 fileno_stdin 'int (void)'
|-FunctionDecl 0x1fafa868f20 <line:554:1, col:23> col:5 fileno_stdout 'int (void)'
|-FunctionDecl 0x1fafa869150 <line:555:1, col:31> col:5 raw_read_stdin 'int (void *, int)'
| |-ParmVarDecl 0x1fafa868ff0 <col:20, col:25> col:26 'void *'
| `-ParmVarDecl 0x1fafa869070 <col:28> col:31 'int'
|-FunctionDecl 0x1fafa869390 <line:556:1, col:39> col:5 raw_write_stdout 'int (const void *, int)'
| |-ParmVarDecl 0x1fafa869230 <col:22, col:33> col:34 'const void *'
| `-ParmVarDecl 0x1fafa8692b0 <col:36> col:39 'int'
|-FunctionDecl 0x1fafa869600 <line:560:1, col:45> col:8 app_tminterval 'double (int, int)'
| |-ParmVarDecl 0x1fafa869470 <col:23, col:27> col:27 stop 'int'
| `-ParmVarDecl 0x1fafa8694f0 <col:33, col:37> col:37 usertime 'int'
|-RecordDecl 0x1fafa8696c8 <line:562:9, line:567:1> line:562:16 struct verify_options_st definition
| |-FieldDecl 0x1fafa869798 <line:563:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x1fafa869808 <line:564:5, col:9> col:9 quiet 'int'
| |-FieldDecl 0x1fafa869878 <line:565:5, col:9> col:9 error 'int'
| `-FieldDecl 0x1fafa8698e8 <line:566:5, col:9> col:9 return_error 'int'
|-TypedefDecl 0x1fafa869998 <line:562:1, line:567:3> col:3 referenced VERIFY_CB_ARGS 'struct verify_options_st':'struct verify_options_st'
| `-ElaboratedType 0x1fafa869940 'struct verify_options_st' sugar
|   `-RecordType 0x1fafa869760 'struct verify_options_st'
|     `-Record 0x1fafa8696c8 'verify_options_st'
|-VarDecl 0x1fafa869a60 <line:569:1, col:23> col:23 verify_args 'VERIFY_CB_ARGS':'struct verify_options_st' extern
|-FunctionDecl 0x1fafa869e80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1fafa869af8 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1fafa869b78 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1fafa869bf8 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1fafa869c70 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa86a248 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1fafa86a2e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1fafa86a350 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1fafa86a3b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fafa86a438 prev 0x1fafa86a248 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1fafa869f70 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1fafa869ff0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1fafa86a068 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa86a7f8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1fafa86a520 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1fafa86a5a0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1fafa86a618 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa86ccb0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa86a8e0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1fafa86a960 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1fafa86a9d8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa86caa0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa86cfb8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1fafa86d058 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1fafa86d0c0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1fafa86d128 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fafa86d1a8 prev 0x1fafa86cfb8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1fafa86cda0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1fafa86ce20 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1fafa86ce98 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa86d568 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1fafa86d608 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fafa86d670 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1fafa86d6d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fafa86d758 prev 0x1fafa86d568 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1fafa86d290 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1fafa86d310 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1fafa86d388 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa867ba8 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1fafa86d868 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1fafa86d900 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fafa86d980 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1fafa86d9f8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fafa867f68 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1fafa868008 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fafa868070 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1fafa8680d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fafa868158 prev 0x1fafa867f68 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1fafa867c98 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1fafa867d18 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1fafa867d90 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa8685d8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1fafa868678 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fafa8686e0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1fafa868748 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1fafa8687b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fafa868838 prev 0x1fafa8685d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1fafa868320 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1fafa8683a0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1fafa868420 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1fafa868498 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa8688f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1fafa86bd50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1fafa86bb38 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1fafa86bbb8 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1fafa86bc30 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa86be08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1fafa86c200 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1fafa86bf30 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1fafa86bfa8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa86c028 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1fafa86c5d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1fafa86c3e0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1fafa86c460 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1fafa86c680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa86dae0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1fafa86c7c8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1fafa86c840 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa86c8c0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1fafa86deb0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1fafa86df50 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1fafa86dfb8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fafa86e030 prev 0x1fafa86deb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1fafa86dcc0 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1fafa86dd40 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1fafa86e0e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa86e438 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1fafa86e228 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1fafa86e2a0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa86e320 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1fafa86e760 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1fafa86e800 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1fafa86e868 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fafa86e8e0 prev 0x1fafa86e760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1fafa86e5e0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1fafa86e660 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1fafa86e990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa866c80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1fafa866d20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fafa866d88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fafa866e00 prev 0x1fafa866c80 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1fafa866a90 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1fafa866b10 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1fafa867050 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1fafa8670f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fafa867160 prev 0x1fafa867050 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1fafa866ee0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1fafa867458 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1fafa867238 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1fafa8672b0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa8676a8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1fafa867538 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1fafa8675b0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1fafa8679d8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1fafa8679c8 <line:132:5, col:51>
|     `-ConditionalOperator 0x1fafa867998 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1fafa867808 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1fafa8677e8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1fafa8677b8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1fafa867770 <col:13> 'const char *' lvalue ParmVar 0x1fafa867538 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1fafa8677d0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1fafa867790 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1fafa867980 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1fafa867828 <col:24> 'int' 0
|       `-CallExpr 0x1fafa867920 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1fafa867908 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1fafa867850 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1fafa867458 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1fafa867950 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1fafa867870 <col:36> 'const char *' lvalue ParmVar 0x1fafa867538 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1fafa867968 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1fafa867890 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1fafa8675b0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa86ed58 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1fafa86eab0 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1fafa86eb28 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fafa86eba8 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1fafa86ec20 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fafa86f060 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1fafa86f100 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1fafa86f168 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1fafa86f1d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fafa86f250 prev 0x1fafa86f060 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1fafa86ee48 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1fafa86eec8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1fafa86ef40 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa86f448 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1fafa86f338 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1fafa86f710 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1fafa86f7b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fafa86f818 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fafa86f890 prev 0x1fafa86f710 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1fafa86f520 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1fafa86f5a0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1fafa86fb00 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fafa86f970 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1fafa86f9f0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1fafa86fd60 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fafa86fbe0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1fafa86fc60 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1fafa870118 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1fafa86fe40 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa86fec0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1fafa86ff38 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa870380 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fafa870200 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1fafa870280 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1fafa870678 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1fafa870460 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa8704e0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1fafa870558 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa8708e0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fafa870760 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1fafa8707e0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1fafa871c00 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1fafa8709c0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa870a40 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1fafa871ae0 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa871fb8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fafa871ce8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa871d68 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1fafa871de0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa872420 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa8720a0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa872120 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1fafa872198 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa872210 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa872728 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fafa872510 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa872590 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1fafa872608 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa86aa70 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa872810 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa872890 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1fafa872908 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa872980 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa86ad88 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1fafa86ae28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fafa86ae90 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fafa86af08 prev 0x1fafa86ad88 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1fafa86ab60 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1fafa86abe0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1fafa86b1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1fafa86b0e0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1fafa86b268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa86b640 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1fafa86b3b0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1fafa86b428 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa86b4a8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1fafa86b958 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1fafa86b9f8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fafa873b00 prev 0x1fafa86b958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1fafa86b820 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1fafa873ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa873f00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1fafa873cf0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1fafa873d68 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa873de8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1fafa874208 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1fafa873fe8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1fafa874060 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa8744f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fafa8743a8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1fafa8745a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa8749b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa8746e8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1fafa874760 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa8747d8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa874e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1fafa874be8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1fafa874c60 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fafa874ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa875378 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1fafa875008 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1fafa875080 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fafa875100 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1fafa875178 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fafa8757f8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fafa875898 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1fafa875900 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fafa875968 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fafa8759e8 prev 0x1fafa8757f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fafa875528 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1fafa8755a8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1fafa875620 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa875aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa875e38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fafa875ed8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1fafa875f40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fafa875fa8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fafa876028 prev 0x1fafa875e38 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fafa875c20 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa875ca0 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1fafa875d18 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa876328 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fafa876110 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa876190 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1fafa876208 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa8766c0 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa876410 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa876490 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1fafa876508 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa876580 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa876a58 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1fafa8767b0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1fafa876828 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fafa8768a8 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1fafa876920 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fafa876e38 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fafa876ed8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1fafa876f40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fafa876fa8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fafa877028 prev 0x1fafa876e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fafa876c20 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1fafa876ca0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1fafa876d18 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa8770e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa877598 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1fafa877228 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1fafa8772a0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fafa877320 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1fafa877398 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa877a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1fafa877748 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1fafa8777c8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1fafa877840 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa877ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa87edf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1fafa87ee90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fafa87eef8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fafa87ef70 prev 0x1fafa87edf0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1fafa87ec00 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1fafa87ec80 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1fafa87f1d0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1fafa87f270 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fafa87f2d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1fafa87f350 prev 0x1fafa87f1d0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1fafa87f050 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1fafa87f0d0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1fafa87f510 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1fafa87f430 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1fafa87f760 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1fafa87f800 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fafa87f868 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fafa87f8e0 prev 0x1fafa87f760 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1fafa87f5e8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1fafa87f668 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1fafa87db30 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1fafa87dbd0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fafa87dc38 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fafa87dcb0 prev 0x1fafa87db30 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1fafa87f9c0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1fafa87fa40 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1fafa87dfd0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1fafa87e070 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1fafa87e0d8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fafa87e150 prev 0x1fafa87dfd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1fafa87de50 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1fafa87ded0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1fafa87e200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa87e5e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1fafa87e348 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1fafa87e3c8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1fafa87e448 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1fafa87e840 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1fafa87e6d0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1fafa87e748 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa880b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fafa87e9e0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1fafa880bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa880f18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa880d10 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1fafa880d88 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa880e00 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa881238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1fafa8810c0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1fafa881138 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fafa8812e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa881700 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1fafa8817a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1fafa881808 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1fafa881870 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fafa8818f0 prev 0x1fafa881700 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1fafa881430 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1fafa8814b0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1fafa881528 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa87cd58 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa8819d8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1fafa881a58 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1fafa87cae0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa87cb58 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa87d000 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1fafa87d0a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1fafa87d110 prev 0x1fafa87d000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1fafa87cf20 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1fafa87d1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1fafa87d500 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fafa87d380 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa87d400 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1fafa87d5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1fafa87d8f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1fafa87d778 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa87d7f8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1fafa87d9a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1fafa87fca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fafa87fbc8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1fafa87fd50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1fafa880168 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1fafa87ff50 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1fafa87ffd0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1fafa880048 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa880220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1fafa880600 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1fafa8803e8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1fafa880468 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1fafa8804e0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa8806b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1fafa880960 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fafa880880 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1fafa880a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1fafa881d80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1fafa881c00 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1fafa881c80 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1fafa881e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1fafa8820d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1fafa881ff8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1fafa882180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1fafa882410 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1fafa8822a0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1fafa8827a0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1fafa8824e0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fafa882558 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa8825d0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1fafa87aaf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa882940 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fafa8829b8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1fafa87aba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa87af08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1fafa87afa8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1fafa87b010 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1fafa87b088 prev 0x1fafa87af08 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1fafa87ace8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fafa87ad60 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1fafa87b380 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1fafa87b420 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1fafa87b488 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1fafa87b500 prev 0x1fafa87b380 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1fafa87b160 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fafa87b1d8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fafa87b7e0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1fafa87b5d8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fafa87b650 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa87b6c8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1fafa882b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa87b980 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fafa87b9f8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1fafa882c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa882f88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa882d68 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fafa882de0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1fafa8831d0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1fafa883270 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1fafa8832e0 prev 0x1fafa8831d0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1fafa883060 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1fafa8835c8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fafa8833b0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fafa883428 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa883810 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1fafa8836a0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1fafa883718 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1fafa883bc0 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1fafa883bb0 <line:307:5, col:56>
|     `-ConditionalOperator 0x1fafa883b80 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1fafa8839d0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1fafa8839b0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1fafa883980 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1fafa8838d8 <col:13> 'const wchar_t *' lvalue ParmVar 0x1fafa8836a0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1fafa883998 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1fafa883960 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1fafa883938 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1fafa8838f8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1fafa883b68 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1fafa8839f0 <col:29> 'int' 0
|       `-CallExpr 0x1fafa883af0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1fafa883ad8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1fafa883a18 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1fafa8835c8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1fafa883b20 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1fafa883a38 <col:41> 'const wchar_t *' lvalue ParmVar 0x1fafa8836a0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1fafa883b50 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1fafa883a58 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1fafa883718 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa883f58 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1fafa883be8 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fafa883c60 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fafa883cd8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fafa883d50 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fafa8843c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fafa884100 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fafa884178 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1fafa8841f0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa884478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa884888 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1fafa884928 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1fafa884990 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1fafa8849f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1fafa884a78 prev 0x1fafa884888 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1fafa8845b8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa884630 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fafa8846a8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa886e30 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1fafa886b90 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fafa886c08 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1fafa886c80 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fafa886cf8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1fafa8871e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fafa886fd8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1fafa887050 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1fafa8870c8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa887298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa8875f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa8873d8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fafa887450 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1fafa887840 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1fafa8876d0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fafa887748 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1fafa887a88 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa887918 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fafa887990 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1fafa888d10 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa888ba0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1fafa888c18 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1fafa889018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa888ea8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fafa888f20 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1fafa8890c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa889530 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1fafa889208 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fafa889280 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1fafa889360 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1fafa889850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1fafa8896d8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1fafa8898f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa884cd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1fafa889a38 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1fafa889ab0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa889b30 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1fafa884f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1fafa884ea8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1fafa885028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa8853f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1fafa885168 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1fafa8851e0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa885258 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1fafa885648 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa8854d0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fafa885548 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fafa8859e8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fafa885720 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa885798 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fafa885810 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa889d48 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fafa885ac8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa889bb0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fafa889c28 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa88a1a0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa889e28 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa889ea0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fafa889f18 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa889f90 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa88a5f8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1fafa88a288 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fafa88a300 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1fafa88a378 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1fafa88a3f0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa88aa60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1fafa88a7a0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fafa88a818 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1fafa88a890 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa88ab18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa88ae30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1fafa88acb8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1fafa88b1c0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1fafa88af00 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fafa88af78 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa88aff0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1fafa88b578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1fafa88b360 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fafa88b3d8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1fafa88b628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa88b988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1fafa88b768 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1fafa88b7e0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa88cc38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fafa88bb20 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1fafa88cce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa88d0e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa88ce20 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fafa88ce98 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa88cf10 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa88d498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fafa88d280 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1fafa88d2f8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fafa88d548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa88d7f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1fafa88d688 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1fafa88d700 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa88da68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fafa88d990 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1fafa88db10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa885e70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa885c68 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fafa885ce0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa885d58 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa886180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fafa886010 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1fafa886088 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1fafa886230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1fafa886630 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fafa886370 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fafa8863e8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1fafa886460 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa886a78 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa886710 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1fafa886788 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1fafa886800 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa886878 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa88dd68 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa88dbf0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fafa88dc68 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fafa88e050 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fafa88de40 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa88deb8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fafa88df30 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa88e2a8 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa88e130 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1fafa88e1a8 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1fafa88e590 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1fafa88e380 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa88e3f8 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fafa88e470 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa88e880 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fafa88e670 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa88e6e8 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fafa88e760 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa887be0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa88e960 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa88e9d8 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fafa88ea50 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa88eac8 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa887ed8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fafa887cc8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa887d40 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1fafa887db8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1fafa888260 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1fafa887fb8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa888030 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fafa8880a8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1fafa888120 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1fafa8884c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1fafa8883e8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1fafa888568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1fafa8888a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa888728 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa8887a0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1fafa888950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1fafa895e08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1fafa888b10 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa895c70 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1fafa895ce8 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa895ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1fafa896288 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1fafa896080 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fafa8960f8 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1fafa896170 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1fafa896340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1fafa8965d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fafa896500 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1fafa896680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1fafa8969b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1fafa896840 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1fafa8968b8 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1fafa896a60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1fafa894d38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fafa894c60 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1fafa894de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1fafa895078 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1fafa894fa0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1fafa895120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1fafa895458 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1fafa8952e0 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1fafa895358 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1fafa895508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x1fafa895618 <.//openssl//file_jk/after\apps\rsautl.c:30:9, line:36:1> line:30:14 OPTION_choice
| |-EnumConstantDecl 0x1fafa895748 <line:31:5, col:16> col:5 referenced OPT_ERR 'int'
| | `-ConstantExpr 0x1fafa895730 <col:15, col:16> 'int'
| |   `-UnaryOperator 0x1fafa895718 <col:15, col:16> 'int' prefix '-'
| |     `-IntegerLiteral 0x1fafa8956f0 <col:16> 'int' 1
| |-EnumConstantDecl 0x1fafa8957e0 <col:19, col:29> col:19 referenced OPT_EOF 'int'
| | `-ConstantExpr 0x1fafa8957c8 <col:29> 'int'
| |   `-IntegerLiteral 0x1fafa8957a0 <col:29> 'int' 0
| |-EnumConstantDecl 0x1fafa895838 <col:32> col:32 referenced OPT_HELP 'int'
| |-EnumConstantDecl 0x1fafa895890 <line:32:5> col:5 referenced OPT_ENGINE 'int'
| |-EnumConstantDecl 0x1fafa8958e8 <col:17> col:17 referenced OPT_IN 'int'
| |-EnumConstantDecl 0x1fafa895940 <col:25> col:25 referenced OPT_OUT 'int'
| |-EnumConstantDecl 0x1fafa895998 <col:34> col:34 referenced OPT_ASN1PARSE 'int'
| |-EnumConstantDecl 0x1fafa8959f0 <col:49> col:49 referenced OPT_HEXDUMP 'int'
| |-EnumConstantDecl 0x1fafa895a48 <line:33:5> col:5 referenced OPT_RAW 'int'
| |-EnumConstantDecl 0x1fafa895aa0 <col:14> col:14 referenced OPT_OAEP 'int'
| |-EnumConstantDecl 0x1fafa895af8 <col:24> col:24 referenced OPT_SSL 'int'
| |-EnumConstantDecl 0x1fafa895b50 <col:33> col:33 referenced OPT_PKCS 'int'
| |-EnumConstantDecl 0x1fafa895ba8 <col:43> col:43 referenced OPT_X931 'int'
| |-EnumConstantDecl 0x1fafa895c00 <line:34:5> col:5 referenced OPT_SIGN 'int'
| |-EnumConstantDecl 0x1fafa892c40 <col:15> col:15 referenced OPT_VERIFY 'int'
| |-EnumConstantDecl 0x1fafa892c98 <col:27> col:27 referenced OPT_REV 'int'
| |-EnumConstantDecl 0x1fafa892cf0 <col:36> col:36 referenced OPT_ENCRYPT 'int'
| |-EnumConstantDecl 0x1fafa892d48 <col:49> col:49 referenced OPT_DECRYPT 'int'
| |-EnumConstantDecl 0x1fafa892da0 <line:35:5> col:5 referenced OPT_PUBIN 'int'
| |-EnumConstantDecl 0x1fafa892df8 <col:16> col:16 referenced OPT_CERTIN 'int'
| |-EnumConstantDecl 0x1fafa892e50 <col:28> col:28 referenced OPT_INKEY 'int'
| |-EnumConstantDecl 0x1fafa892ea8 <col:39> col:39 referenced OPT_PASSIN 'int'
| `-EnumConstantDecl 0x1fafa892f00 <col:51> col:51 referenced OPT_KEYFORM 'int'
|-TypedefDecl 0x1fafa892fb8 <line:30:1, line:36:3> col:3 referenced OPTION_CHOICE 'enum OPTION_choice':'enum OPTION_choice'
| `-ElaboratedType 0x1fafa892f60 'enum OPTION_choice' sugar
|   `-EnumType 0x1fafa8956d0 'enum OPTION_choice'
|     `-Enum 0x1fafa895618 'OPTION_choice'
|-VarDecl 0x1fafa8930a8 <line:38:1, line:64:1> line:38:9 used rsautl_options 'OPTIONS [22]' cinit
| `-InitListExpr 0x1fafa88ece0 <col:28, line:64:1> 'OPTIONS [22]'
|   |-InitListExpr 0x1fafa88ed30 <line:39:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88eda8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88ed90 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa893148 <col:6> 'char [5]' lvalue "help"
|   | |-DeclRefExpr 0x1fafa893168 <col:14> 'int' EnumConstant 0x1fafa895838 'OPT_HELP' 'int'
|   | |-CharacterLiteral 0x1fafa893188 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88edd8 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88edc0 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa8931d8 <col:29> 'char [21]' lvalue "Display this summary"
|   |-InitListExpr 0x1fafa88ee08 <line:40:5, col:37> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88ee80 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88ee68 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa8932a8 <col:6> 'char [3]' lvalue "in"
|   | |-DeclRefExpr 0x1fafa8932c8 <col:12> 'int' EnumConstant 0x1fafa8958e8 'OPT_IN' 'int'
|   | |-CharacterLiteral 0x1fafa8932e8 <col:20> 'int' 60
|   | `-ImplicitCastExpr 0x1fafa88eeb0 <col:25> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88ee98 <col:25> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa893338 <col:25> 'char [11]' lvalue "Input file"
|   |-InitListExpr 0x1fafa88eee8 <line:41:5, col:40> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88ef60 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88ef48 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa8933f8 <col:6> 'char [4]' lvalue "out"
|   | |-DeclRefExpr 0x1fafa893418 <col:13> 'int' EnumConstant 0x1fafa895940 'OPT_OUT' 'int'
|   | |-CharacterLiteral 0x1fafa893438 <col:22> 'int' 62
|   | `-ImplicitCastExpr 0x1fafa88ef90 <col:27> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88ef78 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa893488 <col:27> 'char [12]' lvalue "Output file"
|   |-InitListExpr 0x1fafa88efd8 <line:42:5, col:42> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88f050 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f038 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa893548 <col:6> 'char [6]' lvalue "inkey"
|   | |-DeclRefExpr 0x1fafa893568 <col:15> 'int' EnumConstant 0x1fafa892e50 'OPT_INKEY' 'int'
|   | |-CharacterLiteral 0x1fafa893588 <col:26> 'int' 115
|   | `-ImplicitCastExpr 0x1fafa88f080 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88f068 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa8935d8 <col:31> 'char [10]' lvalue "Input key"
|   |-InitListExpr 0x1fafa88f0a8 <line:43:5, col:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88f120 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f108 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa893698 <col:6> 'char [8]' lvalue "keyform"
|   | |-DeclRefExpr 0x1fafa8936b8 <col:17> 'int' EnumConstant 0x1fafa892f00 'OPT_KEYFORM' 'int'
|   | |-CharacterLiteral 0x1fafa8936d8 <col:30> 'int' 69
|   | `-ImplicitCastExpr 0x1fafa88f150 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88f138 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa893728 <col:35> 'char [33]' lvalue "Private key format - default PEM"
|   |-InitListExpr 0x1fafa88f1b8 <line:44:5, col:55> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88f230 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f218 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa8937c0 <col:6> 'char [6]' lvalue "pubin"
|   | |-DeclRefExpr 0x1fafa8937e0 <col:15> 'int' EnumConstant 0x1fafa892da0 'OPT_PUBIN' 'int'
|   | |-CharacterLiteral 0x1fafa893800 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88f260 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88f248 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa893858 <col:31> 'char [23]' lvalue "Input is an RSA public"
|   |-InitListExpr 0x1fafa88f288 <line:45:5, col:77> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88f300 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f2e8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa893928 <col:6> 'char [7]' lvalue "certin"
|   | |-DeclRefExpr 0x1fafa893948 <col:16> 'int' EnumConstant 0x1fafa892df8 'OPT_CERTIN' 'int'
|   | |-CharacterLiteral 0x1fafa893968 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88f330 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88f318 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa8939b8 <col:33> 'char [43]' lvalue "Input is a cert carrying an RSA public key"
|   |-InitListExpr 0x1fafa88f358 <line:46:5, col:47> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88f3d0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f3b8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa893a60 <col:6> 'char [4]' lvalue "ssl"
|   | |-DeclRefExpr 0x1fafa893a80 <col:13> 'int' EnumConstant 0x1fafa895af8 'OPT_SSL' 'int'
|   | |-CharacterLiteral 0x1fafa893aa0 <col:22> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88f400 <col:27> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88f3e8 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa893af8 <col:27> 'char [19]' lvalue "Use SSL v2 padding"
|   |-InitListExpr 0x1fafa88f428 <line:47:5, col:43> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88f4a0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f488 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa893b88 <col:6> 'char [4]' lvalue "raw"
|   | |-DeclRefExpr 0x1fafa893ba8 <col:13> 'int' EnumConstant 0x1fafa895a48 'OPT_RAW' 'int'
|   | |-CharacterLiteral 0x1fafa893bc8 <col:22> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88f4d0 <col:27> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88f4b8 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa893c18 <col:27> 'char [15]' lvalue "Use no padding"
|   |-InitListExpr 0x1fafa88f578 <line:48:5, col:64> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88f5f0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f5d8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa893cb0 <col:6> 'char [5]' lvalue "pkcs"
|   | |-DeclRefExpr 0x1fafa893cd0 <col:14> 'int' EnumConstant 0x1fafa895b50 'OPT_PKCS' 'int'
|   | |-CharacterLiteral 0x1fafa893cf0 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88f620 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88f608 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa893d48 <col:29> 'char [34]' lvalue "Use PKCS#1 v1.5 padding (default)"
|   |-InitListExpr 0x1fafa88f648 <line:49:5, col:46> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88f6c0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f6a8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa893de8 <col:6> 'char [5]' lvalue "oaep"
|   | |-DeclRefExpr 0x1fafa893e08 <col:14> 'int' EnumConstant 0x1fafa895aa0 'OPT_OAEP' 'int'
|   | |-CharacterLiteral 0x1fafa893e28 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88f6f0 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88f6d8 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa893e78 <col:29> 'char [16]' lvalue "Use PKCS#1 OAEP"
|   |-InitListExpr 0x1fafa88f718 <line:50:5, col:52> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88f790 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f778 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa893f00 <col:6> 'char [5]' lvalue "sign"
|   | |-DeclRefExpr 0x1fafa893f20 <col:14> 'int' EnumConstant 0x1fafa895c00 'OPT_SIGN' 'int'
|   | |-CharacterLiteral 0x1fafa893f40 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88f7c0 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88f7a8 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa893f98 <col:29> 'char [22]' lvalue "Sign with private key"
|   |-InitListExpr 0x1fafa88f7e8 <line:51:5, col:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88f860 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f848 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa894028 <col:6> 'char [7]' lvalue "verify"
|   | |-DeclRefExpr 0x1fafa894048 <col:16> 'int' EnumConstant 0x1fafa892c40 'OPT_VERIFY' 'int'
|   | |-CharacterLiteral 0x1fafa894068 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88f890 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88f878 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa894080 <col:33> 'char [23]' lvalue "Verify with public key"
|   |-InitListExpr 0x1fafa88f8b8 <line:52:5, line:53:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88f930 <line:52:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f918 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa894110 <col:6> 'char [10]' lvalue "asn1parse"
|   | |-DeclRefExpr 0x1fafa894138 <col:19> 'int' EnumConstant 0x1fafa895998 'OPT_ASN1PARSE' 'int'
|   | |-CharacterLiteral 0x1fafa894158 <col:34> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88f960 <line:53:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88f948 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa8941a8 <col:6> 'char [50]' lvalue "Run output through asn1parse; useful with -verify"
|   |-InitListExpr 0x1fafa88f988 <line:54:5, col:52> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88fa00 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88f9e8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa894258 <col:6> 'char [8]' lvalue "hexdump"
|   | |-DeclRefExpr 0x1fafa894278 <col:17> 'int' EnumConstant 0x1fafa8959f0 'OPT_HEXDUMP' 'int'
|   | |-CharacterLiteral 0x1fafa894298 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88fa30 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88fa18 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa8942b0 <col:35> 'char [16]' lvalue "Hex dump output"
|   |-InitListExpr 0x1fafa88fa58 <line:55:5, col:53> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88fad0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88fab8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa894338 <col:6> 'char [5]' lvalue "x931"
|   | |-DeclRefExpr 0x1fafa894358 <col:14> 'int' EnumConstant 0x1fafa895ba8 'OPT_X931' 'int'
|   | |-CharacterLiteral 0x1fafa894378 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88fb00 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88fae8 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa894390 <col:29> 'char [23]' lvalue "Use ANSI X9.31 padding"
|   |-InitListExpr 0x1fafa88fb28 <line:56:5, col:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa88fba0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa88fb88 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa894420 <col:6> 'char [4]' lvalue "rev"
|   | |-DeclRefExpr 0x1fafa894440 <col:13> 'int' EnumConstant 0x1fafa892c98 'OPT_REV' 'int'
|   | |-CharacterLiteral 0x1fafa894460 <col:22> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa88fbd0 <col:27> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa88fbb8 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa8944b8 <col:27> 'char [38]' lvalue "Reverse the order of the input buffer"
|   |-InitListExpr 0x1fafa896d90 <line:57:5, col:60> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa896e08 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa896df0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa894558 <col:6> 'char [8]' lvalue "encrypt"
|   | |-DeclRefExpr 0x1fafa894578 <col:17> 'int' EnumConstant 0x1fafa892cf0 'OPT_ENCRYPT' 'int'
|   | |-CharacterLiteral 0x1fafa894598 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa896e38 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa896e20 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa8945e8 <col:35> 'char [24]' lvalue "Encrypt with public key"
|   |-InitListExpr 0x1fafa896e60 <line:58:5, col:61> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa896ed8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa896ec0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa894678 <col:6> 'char [8]' lvalue "decrypt"
|   | |-DeclRefExpr 0x1fafa894698 <col:17> 'int' EnumConstant 0x1fafa892d48 'OPT_DECRYPT' 'int'
|   | |-CharacterLiteral 0x1fafa8946b8 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x1fafa896f08 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa896ef0 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa894708 <col:35> 'char [25]' lvalue "Decrypt with private key"
|   |-InitListExpr 0x1fafa896f30 <line:59:5, col:64> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa896fa8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa896f90 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa894798 <col:6> 'char [7]' lvalue "passin"
|   | |-DeclRefExpr 0x1fafa8947b8 <col:16> 'int' EnumConstant 0x1fafa892ea8 'OPT_PASSIN' 'int'
|   | |-CharacterLiteral 0x1fafa8947d8 <col:28> 'int' 115
|   | `-ImplicitCastExpr 0x1fafa896fd8 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa896fc0 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa894828 <col:33> 'char [30]' lvalue "Input file pass phrase source"
|   |-InitListExpr 0x1fafa897000 <line:61:5, col:73> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1fafa897078 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1fafa897060 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1fafa8948c0 <col:6> 'char [7]' lvalue "engine"
|   | |-DeclRefExpr 0x1fafa8948e0 <col:16> 'int' EnumConstant 0x1fafa895890 'OPT_ENGINE' 'int'
|   | |-CharacterLiteral 0x1fafa894900 <col:28> 'int' 115
|   | `-ImplicitCastExpr 0x1fafa8970a8 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1fafa897090 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1fafa894958 <col:33> 'char [39]' lvalue "Use engine, possibly a hardware device"
|   `-InitListExpr 0x1fafa8970d0 <line:63:5, col:10> 'OPTIONS':'struct options_st'
|     |-ImplicitCastExpr 0x1fafa897130 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
|     | `-ParenExpr 0x1fafa894a60 <col:17, col:27> 'void *'
|     |   `-CStyleCastExpr 0x1fafa894a38 <col:18, col:26> 'void *' <NullToPointer>
|     |     `-IntegerLiteral 0x1fafa8949f8 <col:26> 'int' 0
|     |-ImplicitValueInitExpr 0x1fafa897148 <<invalid sloc>> 'int'
|     |-ImplicitValueInitExpr 0x1fafa897158 <<invalid sloc>> 'int'
|     `-ImplicitValueInitExpr 0x1fafa897168 <<invalid sloc>> 'const char *'
`-FunctionDecl 0x1fafa8973a0 <.//openssl//file_jk/after\apps\rsautl.c:66:1, line:277:1> line:66:5 rsautl_main 'int (int, char **)'
  |-ParmVarDecl 0x1fafa897210 <col:17, col:21> col:21 used argc 'int'
  |-ParmVarDecl 0x1fafa897290 <col:27, col:34> col:34 used argv 'char **'
  `-CompoundStmt 0x1fafa916918 <line:67:1, line:277:1>
    |-DeclStmt 0x1fafa897a90 <line:73:5, col:58>
    | |-VarDecl 0x1fafa897728 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\rsautl.c:73:11 used infile 'char *' cinit
    | | `-ImplicitCastExpr 0x1fafa897818 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
    | |   `-ParenExpr 0x1fafa8977f8 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x1fafa8977d0 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x1fafa897790 <col:26> 'int' 0
    | |-VarDecl 0x1fafa897848 <.//openssl//file_jk/after\apps\rsautl.c:73:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\rsautl.c:73:27 used outfile 'char *' cinit
    | | `-ImplicitCastExpr 0x1fafa897938 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
    | |   `-ParenExpr 0x1fafa897918 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x1fafa8978f0 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x1fafa8978b0 <col:26> 'int' 0
    | `-VarDecl 0x1fafa897968 <.//openssl//file_jk/after\apps\rsautl.c:73:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\rsautl.c:73:44 used keyfile 'char *' cinit
    |   `-ImplicitCastExpr 0x1fafa897a58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
    |     `-ParenExpr 0x1fafa897a38 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x1fafa897a10 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x1fafa8979d0 <col:26> 'int' 0
    |-DeclStmt 0x1fafa88fd28 <.//openssl//file_jk/after\apps\rsautl.c:74:5, col:50>
    | |-VarDecl 0x1fafa897ac0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\rsautl.c:74:11 used passinarg 'char *' cinit
    | | `-ImplicitCastExpr 0x1fafa897bb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
    | |   `-ParenExpr 0x1fafa897b90 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x1fafa897b68 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x1fafa897b28 <col:26> 'int' 0
    | |-VarDecl 0x1fafa897be0 <.//openssl//file_jk/after\apps\rsautl.c:74:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\rsautl.c:74:30 used passin 'char *' cinit
    | | `-ImplicitCastExpr 0x1fafa88fc70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char *' <NullToPointer>
    | |   `-ParenExpr 0x1fafa88fc50 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x1fafa88fc28 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x1fafa897c48 <col:26> 'int' 0
    | `-VarDecl 0x1fafa88fca0 <.//openssl//file_jk/after\apps\rsautl.c:74:5, col:46> col:46 used prog 'char *'
    |-DeclStmt 0x1fafa88fec8 <line:75:5, col:55>
    | |-VarDecl 0x1fafa88fd50 <col:5, line:22:26> line:75:10 used rsa_mode 'char' cinit
    | | `-ImplicitCastExpr 0x1fafa88fde0 <line:22:26> 'char' <IntegralCast>
    | |   `-IntegerLiteral 0x1fafa88fdb8 <col:26> 'int' 2
    | `-VarDecl 0x1fafa88fe08 <line:75:5, line:26:26> line:75:33 used key_type 'char' cinit
    |   `-ImplicitCastExpr 0x1fafa88fe98 <line:26:26> 'char' <IntegralCast>
    |     `-IntegerLiteral 0x1fafa88fe70 <col:26> 'int' 1
    |-DeclStmt 0x1fafa8901c0 <line:76:5, col:75>
    | |-VarDecl 0x1fafa88fef8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\rsautl.c:76:20 used rsa_in 'unsigned char *' cinit
    | | `-ImplicitCastExpr 0x1fafa88ffe8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
    | |   `-ParenExpr 0x1fafa88ffc8 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x1fafa88ffa0 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x1fafa88ff60 <col:26> 'int' 0
    | |-VarDecl 0x1fafa890018 <.//openssl//file_jk/after\apps\rsautl.c:76:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\apps\rsautl.c:76:36 used rsa_out 'unsigned char *' cinit
    | | `-ImplicitCastExpr 0x1fafa890108 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <NullToPointer>
    | |   `-ParenExpr 0x1fafa8900e8 <col:17, col:27> 'void *'
    | |     `-CStyleCastExpr 0x1fafa8900c0 <col:18, col:26> 'void *' <NullToPointer>
    | |       `-IntegerLiteral 0x1fafa890080 <col:26> 'int' 0
    | `-VarDecl 0x1fafa890138 <.//openssl//file_jk/after\apps\rsautl.c:76:5, col:52> col:52 used pad 'unsigned char'
    |-DeclStmt 0x1fafa8904b8 <line:77:5, col:60>
    | |-VarDecl 0x1fafa8901f0 <col:5, col:9> col:9 used rsa_inlen 'int'
    | |-VarDecl 0x1fafa890270 <col:5, .//openssl//file_jk/after\apps/apps.h:530:43> .//openssl//file_jk/after\apps\rsautl.c:77:20 used keyformat 'int' cinit
    | | `-ParenExpr 0x1fafa890348 <.//openssl//file_jk/after\apps/apps.h:530:25, col:43> 'int'
    | |   `-BinaryOperator 0x1fafa890328 <col:26, line:524:26> 'int' '|'
    | |     |-IntegerLiteral 0x1fafa8902d8 <line:530:26> 'int' 5
    | |     `-IntegerLiteral 0x1fafa890300 <line:524:26> 'int' 32768
    | |-VarDecl 0x1fafa890380 <.//openssl//file_jk/after\apps\rsautl.c:77:5, col:44> col:44 used keysize 'int'
    | `-VarDecl 0x1fafa890400 <col:5, col:59> col:53 used ret 'int' cinit
    |   `-IntegerLiteral 0x1fafa890468 <col:59> 'int' 1
    |-DeclStmt 0x1fafa890848 <line:78:5, col:75>
    | |-VarDecl 0x1fafa8904e8 <col:5, col:22> col:9 used rsa_outlen 'int' cinit
    | | `-IntegerLiteral 0x1fafa890550 <col:22> 'int' 0
    | |-VarDecl 0x1fafa890590 <col:5, col:35> col:25 used hexdump 'int' cinit
    | | `-IntegerLiteral 0x1fafa8905f8 <col:35> 'int' 0
    | |-VarDecl 0x1fafa890638 <col:5, col:50> col:38 used asn1parse 'int' cinit
    | | `-IntegerLiteral 0x1fafa8906a0 <col:50> 'int' 0
    | |-VarDecl 0x1fafa8906e0 <col:5, col:65> col:53 used need_priv 'int' cinit
    | | `-IntegerLiteral 0x1fafa890748 <col:65> 'int' 0
    | `-VarDecl 0x1fafa890788 <col:5, col:74> col:68 used rev 'int' cinit
    |   `-IntegerLiteral 0x1fafa8907f0 <col:74> 'int' 0
    |-DeclStmt 0x1fafa8908f8 <line:79:5, col:20>
    | `-VarDecl 0x1fafa890890 <col:5, col:19> col:19 used o 'OPTION_CHOICE':'enum OPTION_choice'
    |-BinaryOperator 0x1fafa890b38 <line:81:5, col:47> 'char *' '='
    | |-DeclRefExpr 0x1fafa890910 <col:5> 'char *' lvalue Var 0x1fafa88fca0 'prog' 'char *'
    | `-CallExpr 0x1fafa890a40 <col:12, col:47> 'char *'
    |   |-ImplicitCastExpr 0x1fafa890a28 <col:12> 'char *(*)(int, char **, const OPTIONS *)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1fafa890948 <col:12> 'char *(int, char **, const OPTIONS *)' Function 0x1fafa823230 'opt_init' 'char *(int, char **, const OPTIONS *)'
    |   |-ImplicitCastExpr 0x1fafa890a78 <col:21> 'int' <LValueToRValue>
    |   | `-DeclRefExpr 0x1fafa890968 <col:21> 'int' lvalue ParmVar 0x1fafa897210 'argc' 'int'
    |   |-ImplicitCastExpr 0x1fafa890a90 <col:27> 'char **' <LValueToRValue>
    |   | `-DeclRefExpr 0x1fafa890988 <col:27> 'char **' lvalue ParmVar 0x1fafa897290 'argv' 'char **'
    |   `-ImplicitCastExpr 0x1fafa890b20 <col:33> 'const OPTIONS *' <NoOp>
    |     `-ImplicitCastExpr 0x1fafa890b08 <col:33> 'OPTIONS *' <ArrayToPointerDecay>
    |       `-DeclRefExpr 0x1fafa8909a8 <col:33> 'OPTIONS [22]' lvalue Var 0x1fafa8930a8 'rsautl_options' 'OPTIONS [22]'
    |-WhileStmt 0x1fafa8999c0 <line:82:5, line:157:5>
    | |-BinaryOperator 0x1fafa890cb0 <line:82:12, col:32> 'int' '!='
    | | |-ImplicitCastExpr 0x1fafa890c98 <col:12, col:27> 'int' <IntegralCast>
    | | | `-ParenExpr 0x1fafa890c58 <col:12, col:27> 'OPTION_CHOICE':'enum OPTION_choice'
    | | |   `-BinaryOperator 0x1fafa890c38 <col:13, col:26> 'OPTION_CHOICE':'enum OPTION_choice' '='
    | | |     |-DeclRefExpr 0x1fafa890b58 <col:13> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1fafa890890 'o' 'OPTION_CHOICE':'enum OPTION_choice'
    | | |     `-ImplicitCastExpr 0x1fafa890c20 <col:17, col:26> 'OPTION_CHOICE':'enum OPTION_choice' <IntegralCast>
    | | |       `-CallExpr 0x1fafa890bf0 <col:17, col:26> 'int'
    | | |         `-ImplicitCastExpr 0x1fafa890bd8 <col:17> 'int (*)(void)' <FunctionToPointerDecay>
    | | |           `-DeclRefExpr 0x1fafa890b90 <col:17> 'int (void)' Function 0x1fafa8233d0 'opt_next' 'int (void)'
    | | `-DeclRefExpr 0x1fafa890c78 <col:32> 'int' EnumConstant 0x1fafa8957e0 'OPT_EOF' 'int'
    | `-CompoundStmt 0x1fafa8999a8 <col:41, line:157:5>
    |   `-SwitchStmt 0x1fafa890d20 <line:83:9, line:156:9>
    |     |-ImplicitCastExpr 0x1fafa890d08 <line:83:17> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x1fafa890cf0 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1fafa890cd0 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1fafa890890 'o' 'OPTION_CHOICE':'enum OPTION_choice'
    |     `-CompoundStmt 0x1fafa899820 <col:20, line:156:9>
    |       |-CaseStmt 0x1fafa890d78 <line:84:9, line:86:9>
    |       | |-ConstantExpr 0x1fafa890d60 <line:84:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa890d40 <col:14> 'int' EnumConstant 0x1fafa8957e0 'OPT_EOF' 'int'
    |       | `-CaseStmt 0x1fafa890dd8 <line:85:9, line:86:9>
    |       |   |-ConstantExpr 0x1fafa890dc0 <line:85:14> 'int'
    |       |   | `-DeclRefExpr 0x1fafa890da0 <col:14> 'int' EnumConstant 0x1fafa895748 'OPT_ERR' 'int'
    |       |   `-LabelStmt 0x1fafa890ff8 <line:86:2, col:9> 'opthelp'
    |       |     `-NullStmt 0x1fafa890fa0 <col:9>
    |       |-GotoStmt 0x1fafa891060 <line:88:13, col:18> 'end' 0x1fafa891010
    |       |-CaseStmt 0x1fafa8910b0 <line:89:9, line:90:36>
    |       | |-ConstantExpr 0x1fafa891098 <line:89:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa891078 <col:14> 'int' EnumConstant 0x1fafa895838 'OPT_HELP' 'int'
    |       | `-CallExpr 0x1fafa891190 <line:90:13, col:36> 'void'
    |       |   |-ImplicitCastExpr 0x1fafa891178 <col:13> 'void (*)(const OPTIONS *)' <FunctionToPointerDecay>
    |       |   | `-DeclRefExpr 0x1fafa8910d8 <col:13> 'void (const OPTIONS *)' Function 0x1fafa825358 'opt_help' 'void (const OPTIONS *)'
    |       |   `-ImplicitCastExpr 0x1fafa8911d0 <col:22> 'const OPTIONS *' <NoOp>
    |       |     `-ImplicitCastExpr 0x1fafa8911b8 <col:22> 'OPTIONS *' <ArrayToPointerDecay>
    |       |       `-DeclRefExpr 0x1fafa8910f8 <col:22> 'OPTIONS [22]' lvalue Var 0x1fafa8930a8 'rsautl_options' 'OPTIONS [22]'
    |       |-BinaryOperator 0x1fafa891248 <line:91:13, col:19> 'int' '='
    |       | |-DeclRefExpr 0x1fafa8911e8 <col:13> 'int' lvalue Var 0x1fafa890400 'ret' 'int'
    |       | `-IntegerLiteral 0x1fafa891220 <col:19> 'int' 0
    |       |-GotoStmt 0x1fafa891268 <line:92:13, col:18> 'end' 0x1fafa891010
    |       |-CaseStmt 0x1fafa8912b8 <line:93:9, line:95:22>
    |       | |-ConstantExpr 0x1fafa8912a0 <line:93:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa891280 <col:14> 'int' EnumConstant 0x1fafa892f00 'OPT_KEYFORM' 'int'
    |       | `-IfStmt 0x1fafa891608 <line:94:13, line:95:22>
    |       |   |-UnaryOperator 0x1fafa8915d8 <line:94:17, col:63> 'int' prefix '!' cannot overflow
    |       |   | `-CallExpr 0x1fafa891570 <col:18, col:63> 'int'
    |       |   |   |-ImplicitCastExpr 0x1fafa891558 <col:18> 'int (*)(const char *, unsigned long, int *)' <FunctionToPointerDecay>
    |       |   |   | `-DeclRefExpr 0x1fafa8912e0 <col:18> 'int (const char *, unsigned long, int *)' Function 0x1fafa827720 'opt_format' 'int (const char *, unsigned long, int *)'
    |       |   |   |-ImplicitCastExpr 0x1fafa8915a8 <col:29, col:37> 'const char *' <NoOp>
    |       |   |   | `-CallExpr 0x1fafa891360 <col:29, col:37> 'char *'
    |       |   |   |   `-ImplicitCastExpr 0x1fafa891348 <col:29> 'char *(*)(void)' <FunctionToPointerDecay>
    |       |   |   |     `-DeclRefExpr 0x1fafa891300 <col:29> 'char *(void)' Function 0x1fafa824880 'opt_arg' 'char *(void)'
    |       |   |   |-ImplicitCastExpr 0x1fafa8915c0 <.//openssl//file_jk/after\apps/apps.h:327:26, col:58> 'unsigned long' <IntegralCast>
    |       |   |   | `-ParenExpr 0x1fafa8914c0 <col:26, col:58> 'long'
    |       |   |   |   `-BinaryOperator 0x1fafa8914a0 <line:317:34, line:320:43> 'long' '|'
    |       |   |   |     |-ParenExpr 0x1fafa8913f0 <line:317:34, col:43> 'long'
    |       |   |   |     | `-BinaryOperator 0x1fafa8913d0 <col:35, col:42> 'long' '<<'
    |       |   |   |     |   |-IntegerLiteral 0x1fafa891380 <col:35> 'long' 1
    |       |   |   |     |   `-IntegerLiteral 0x1fafa8913a8 <col:42> 'int' 1
    |       |   |   |     `-ParenExpr 0x1fafa891480 <line:320:34, col:43> 'long'
    |       |   |   |       `-BinaryOperator 0x1fafa891460 <col:35, col:42> 'long' '<<'
    |       |   |   |         |-IntegerLiteral 0x1fafa891410 <col:35> 'long' 1
    |       |   |   |         `-IntegerLiteral 0x1fafa891438 <col:42> 'int' 4
    |       |   |   `-UnaryOperator 0x1fafa891518 <.//openssl//file_jk/after\apps\rsautl.c:94:53, col:54> 'int *' prefix '&' cannot overflow
    |       |   |     `-DeclRefExpr 0x1fafa8914e0 <col:54> 'int' lvalue Var 0x1fafa890270 'keyformat' 'int'
    |       |   `-GotoStmt 0x1fafa8915f0 <line:95:17, col:22> 'opthelp' 0x1fafa890fa8
    |       |-BreakStmt 0x1fafa891620 <line:96:13>
    |       |-CaseStmt 0x1fafa891660 <line:97:9, line:98:30>
    |       | |-ConstantExpr 0x1fafa891648 <line:97:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa891628 <col:14> 'int' EnumConstant 0x1fafa8958e8 'OPT_IN' 'int'
    |       | `-BinaryOperator 0x1fafa891718 <line:98:13, col:30> 'char *' '='
    |       |   |-DeclRefExpr 0x1fafa891688 <col:13> 'char *' lvalue Var 0x1fafa897728 'infile' 'char *'
    |       |   `-CallExpr 0x1fafa8916f8 <col:22, col:30> 'char *'
    |       |     `-ImplicitCastExpr 0x1fafa8916e0 <col:22> 'char *(*)(void)' <FunctionToPointerDecay>
    |       |       `-DeclRefExpr 0x1fafa8916c0 <col:22> 'char *(void)' Function 0x1fafa824880 'opt_arg' 'char *(void)'
    |       |-BreakStmt 0x1fafa891738 <line:99:13>
    |       |-CaseStmt 0x1fafa891778 <line:100:9, line:101:31>
    |       | |-ConstantExpr 0x1fafa891760 <line:100:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa891740 <col:14> 'int' EnumConstant 0x1fafa895940 'OPT_OUT' 'int'
    |       | `-BinaryOperator 0x1fafa891830 <line:101:13, col:31> 'char *' '='
    |       |   |-DeclRefExpr 0x1fafa8917a0 <col:13> 'char *' lvalue Var 0x1fafa897848 'outfile' 'char *'
    |       |   `-CallExpr 0x1fafa891810 <col:23, col:31> 'char *'
    |       |     `-ImplicitCastExpr 0x1fafa8917f8 <col:23> 'char *(*)(void)' <FunctionToPointerDecay>
    |       |       `-DeclRefExpr 0x1fafa8917d8 <col:23> 'char *(void)' Function 0x1fafa824880 'opt_arg' 'char *(void)'
    |       |-BreakStmt 0x1fafa891850 <line:102:13>
    |       |-CaseStmt 0x1fafa891890 <line:103:9, <invalid sloc>>
    |       | |-ConstantExpr 0x1fafa891878 <col:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa891858 <col:14> 'int' EnumConstant 0x1fafa895890 'OPT_ENGINE' 'int'
    |       | `-NullStmt 0x1fafa891938 <<invalid sloc>>
    |       |-BreakStmt 0x1fafa891940 <line:105:13>
    |       |-CaseStmt 0x1fafa891980 <line:106:9, line:107:25>
    |       | |-ConstantExpr 0x1fafa891968 <line:106:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa891948 <col:14> 'int' EnumConstant 0x1fafa895998 'OPT_ASN1PARSE' 'int'
    |       | `-BinaryOperator 0x1fafa891a08 <line:107:13, col:25> 'int' '='
    |       |   |-DeclRefExpr 0x1fafa8919a8 <col:13> 'int' lvalue Var 0x1fafa890638 'asn1parse' 'int'
    |       |   `-IntegerLiteral 0x1fafa8919e0 <col:25> 'int' 1
    |       |-BreakStmt 0x1fafa891a28 <line:108:13>
    |       |-CaseStmt 0x1fafa891a68 <line:109:9, line:110:23>
    |       | |-ConstantExpr 0x1fafa891a50 <line:109:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa891a30 <col:14> 'int' EnumConstant 0x1fafa8959f0 'OPT_HEXDUMP' 'int'
    |       | `-BinaryOperator 0x1fafa891af0 <line:110:13, col:23> 'int' '='
    |       |   |-DeclRefExpr 0x1fafa891a90 <col:13> 'int' lvalue Var 0x1fafa890590 'hexdump' 'int'
    |       |   `-IntegerLiteral 0x1fafa891ac8 <col:23> 'int' 1
    |       |-BreakStmt 0x1fafa891b10 <line:111:13>
    |       |-CaseStmt 0x1fafa891b50 <line:112:9, <invalid sloc>>
    |       | |-ConstantExpr 0x1fafa891b38 <col:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa891b18 <col:14> 'int' EnumConstant 0x1fafa895a48 'OPT_RAW' 'int'
    |       | `-NullStmt 0x1fafa891bb0 <<invalid sloc>>
    |       |-BreakStmt 0x1fafa891bb8 <line:114:13>
    |       |-CaseStmt 0x1fafa891bf8 <line:115:9, <invalid sloc>>
    |       | |-ConstantExpr 0x1fafa891be0 <col:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa891bc0 <col:14> 'int' EnumConstant 0x1fafa895aa0 'OPT_OAEP' 'int'
    |       | `-NullStmt 0x1fafa898cc0 <<invalid sloc>>
    |       |-BreakStmt 0x1fafa898cc8 <line:117:13>
    |       |-CaseStmt 0x1fafa898d08 <line:118:9, <invalid sloc>>
    |       | |-ConstantExpr 0x1fafa898cf0 <col:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa898cd0 <col:14> 'int' EnumConstant 0x1fafa895af8 'OPT_SSL' 'int'
    |       | `-NullStmt 0x1fafa898d50 <<invalid sloc>>
    |       |-BreakStmt 0x1fafa898d58 <line:120:13>
    |       |-CaseStmt 0x1fafa898d98 <line:121:9, <invalid sloc>>
    |       | |-ConstantExpr 0x1fafa898d80 <col:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa898d60 <col:14> 'int' EnumConstant 0x1fafa895b50 'OPT_PKCS' 'int'
    |       | `-NullStmt 0x1fafa898de0 <<invalid sloc>>
    |       |-BreakStmt 0x1fafa898de8 <line:123:13>
    |       |-CaseStmt 0x1fafa898e28 <line:124:9, <invalid sloc>>
    |       | |-ConstantExpr 0x1fafa898e10 <col:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa898df0 <col:14> 'int' EnumConstant 0x1fafa895ba8 'OPT_X931' 'int'
    |       | `-NullStmt 0x1fafa898e70 <<invalid sloc>>
    |       |-BreakStmt 0x1fafa898e78 <line:126:13>
    |       |-CaseStmt 0x1fafa898eb8 <line:127:9, line:21:26>
    |       | |-ConstantExpr 0x1fafa898ea0 <line:127:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa898e80 <col:14> 'int' EnumConstant 0x1fafa895c00 'OPT_SIGN' 'int'
    |       | `-BinaryOperator 0x1fafa898f58 <line:128:13, line:21:26> 'char' '='
    |       |   |-DeclRefExpr 0x1fafa898ee0 <line:128:13> 'char' lvalue Var 0x1fafa88fd50 'rsa_mode' 'char'
    |       |   `-ImplicitCastExpr 0x1fafa898f40 <line:21:26> 'char' <IntegralCast>
    |       |     `-IntegerLiteral 0x1fafa898f18 <col:26> 'int' 1
    |       |-BinaryOperator 0x1fafa898fd8 <line:129:13, col:25> 'int' '='
    |       | |-DeclRefExpr 0x1fafa898f78 <col:13> 'int' lvalue Var 0x1fafa8906e0 'need_priv' 'int'
    |       | `-IntegerLiteral 0x1fafa898fb0 <col:25> 'int' 1
    |       |-BreakStmt 0x1fafa898ff8 <line:130:13>
    |       |-CaseStmt 0x1fafa899038 <line:131:9, line:22:26>
    |       | |-ConstantExpr 0x1fafa899020 <line:131:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa899000 <col:14> 'int' EnumConstant 0x1fafa892c40 'OPT_VERIFY' 'int'
    |       | `-BinaryOperator 0x1fafa8990c0 <line:132:13, line:22:26> 'char' '='
    |       |   |-DeclRefExpr 0x1fafa899060 <line:132:13> 'char' lvalue Var 0x1fafa88fd50 'rsa_mode' 'char'
    |       |   `-ImplicitCastExpr 0x1fafa8990a8 <line:22:26> 'char' <IntegralCast>
    |       |     `-IntegerLiteral 0x1fafa899080 <col:26> 'int' 2
    |       |-BreakStmt 0x1fafa8990e0 <line:133:13>
    |       |-CaseStmt 0x1fafa899120 <line:134:9, line:135:19>
    |       | |-ConstantExpr 0x1fafa899108 <line:134:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa8990e8 <col:14> 'int' EnumConstant 0x1fafa892c98 'OPT_REV' 'int'
    |       | `-BinaryOperator 0x1fafa8991a8 <line:135:13, col:19> 'int' '='
    |       |   |-DeclRefExpr 0x1fafa899148 <col:13> 'int' lvalue Var 0x1fafa890788 'rev' 'int'
    |       |   `-IntegerLiteral 0x1fafa899180 <col:19> 'int' 1
    |       |-BreakStmt 0x1fafa8991c8 <line:136:13>
    |       |-CaseStmt 0x1fafa899208 <line:137:9, line:23:26>
    |       | |-ConstantExpr 0x1fafa8991f0 <line:137:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa8991d0 <col:14> 'int' EnumConstant 0x1fafa892cf0 'OPT_ENCRYPT' 'int'
    |       | `-BinaryOperator 0x1fafa899290 <line:138:13, line:23:26> 'char' '='
    |       |   |-DeclRefExpr 0x1fafa899230 <line:138:13> 'char' lvalue Var 0x1fafa88fd50 'rsa_mode' 'char'
    |       |   `-ImplicitCastExpr 0x1fafa899278 <line:23:26> 'char' <IntegralCast>
    |       |     `-IntegerLiteral 0x1fafa899250 <col:26> 'int' 3
    |       |-BreakStmt 0x1fafa8992b0 <line:139:13>
    |       |-CaseStmt 0x1fafa8992f0 <line:140:9, line:24:26>
    |       | |-ConstantExpr 0x1fafa8992d8 <line:140:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa8992b8 <col:14> 'int' EnumConstant 0x1fafa892d48 'OPT_DECRYPT' 'int'
    |       | `-BinaryOperator 0x1fafa899378 <line:141:13, line:24:26> 'char' '='
    |       |   |-DeclRefExpr 0x1fafa899318 <line:141:13> 'char' lvalue Var 0x1fafa88fd50 'rsa_mode' 'char'
    |       |   `-ImplicitCastExpr 0x1fafa899360 <line:24:26> 'char' <IntegralCast>
    |       |     `-IntegerLiteral 0x1fafa899338 <col:26> 'int' 4
    |       |-BinaryOperator 0x1fafa8993e0 <line:142:13, col:25> 'int' '='
    |       | |-DeclRefExpr 0x1fafa899398 <col:13> 'int' lvalue Var 0x1fafa8906e0 'need_priv' 'int'
    |       | `-IntegerLiteral 0x1fafa8993b8 <col:25> 'int' 1
    |       |-BreakStmt 0x1fafa899400 <line:143:13>
    |       |-CaseStmt 0x1fafa899440 <line:144:9, line:27:26>
    |       | |-ConstantExpr 0x1fafa899428 <line:144:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa899408 <col:14> 'int' EnumConstant 0x1fafa892da0 'OPT_PUBIN' 'int'
    |       | `-BinaryOperator 0x1fafa8994e0 <line:145:13, line:27:26> 'char' '='
    |       |   |-DeclRefExpr 0x1fafa899468 <line:145:13> 'char' lvalue Var 0x1fafa88fe08 'key_type' 'char'
    |       |   `-ImplicitCastExpr 0x1fafa8994c8 <line:27:26> 'char' <IntegralCast>
    |       |     `-IntegerLiteral 0x1fafa8994a0 <col:26> 'int' 2
    |       |-BreakStmt 0x1fafa899500 <line:146:13>
    |       |-CaseStmt 0x1fafa899540 <line:147:9, line:28:26>
    |       | |-ConstantExpr 0x1fafa899528 <line:147:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa899508 <col:14> 'int' EnumConstant 0x1fafa892df8 'OPT_CERTIN' 'int'
    |       | `-BinaryOperator 0x1fafa8995c8 <line:148:13, line:28:26> 'char' '='
    |       |   |-DeclRefExpr 0x1fafa899568 <line:148:13> 'char' lvalue Var 0x1fafa88fe08 'key_type' 'char'
    |       |   `-ImplicitCastExpr 0x1fafa8995b0 <line:28:26> 'char' <IntegralCast>
    |       |     `-IntegerLiteral 0x1fafa899588 <col:26> 'int' 3
    |       |-BreakStmt 0x1fafa8995e8 <line:149:13>
    |       |-CaseStmt 0x1fafa899628 <line:150:9, line:151:31>
    |       | |-ConstantExpr 0x1fafa899610 <line:150:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa8995f0 <col:14> 'int' EnumConstant 0x1fafa892e50 'OPT_INKEY' 'int'
    |       | `-BinaryOperator 0x1fafa8996e0 <line:151:13, col:31> 'char *' '='
    |       |   |-DeclRefExpr 0x1fafa899650 <col:13> 'char *' lvalue Var 0x1fafa897968 'keyfile' 'char *'
    |       |   `-CallExpr 0x1fafa8996c0 <col:23, col:31> 'char *'
    |       |     `-ImplicitCastExpr 0x1fafa8996a8 <col:23> 'char *(*)(void)' <FunctionToPointerDecay>
    |       |       `-DeclRefExpr 0x1fafa899688 <col:23> 'char *(void)' Function 0x1fafa824880 'opt_arg' 'char *(void)'
    |       |-BreakStmt 0x1fafa899700 <line:152:13>
    |       |-CaseStmt 0x1fafa899740 <line:153:9, line:154:33>
    |       | |-ConstantExpr 0x1fafa899728 <line:153:14> 'int'
    |       | | `-DeclRefExpr 0x1fafa899708 <col:14> 'int' EnumConstant 0x1fafa892ea8 'OPT_PASSIN' 'int'
    |       | `-BinaryOperator 0x1fafa8997f8 <line:154:13, col:33> 'char *' '='
    |       |   |-DeclRefExpr 0x1fafa899768 <col:13> 'char *' lvalue Var 0x1fafa897ac0 'passinarg' 'char *'
    |       |   `-CallExpr 0x1fafa8997d8 <col:25, col:33> 'char *'
    |       |     `-ImplicitCastExpr 0x1fafa8997c0 <col:25> 'char *(*)(void)' <FunctionToPointerDecay>
    |       |       `-DeclRefExpr 0x1fafa8997a0 <col:25> 'char *(void)' Function 0x1fafa824880 'opt_arg' 'char *(void)'
    |       `-BreakStmt 0x1fafa899818 <line:155:13>
    |-BinaryOperator 0x1fafa899a50 <line:158:5, col:25> 'int' '='
    | |-DeclRefExpr 0x1fafa8999d8 <col:5> 'int' lvalue ParmVar 0x1fafa897210 'argc' 'int'
    | `-CallExpr 0x1fafa899a30 <col:12, col:25> 'int'
    |   `-ImplicitCastExpr 0x1fafa899a18 <col:12> 'int (*)(void)' <FunctionToPointerDecay>
    |     `-DeclRefExpr 0x1fafa8999f8 <col:12> 'int (void)' Function 0x1fafa824f68 'opt_num_rest' 'int (void)'
    |-IfStmt 0x1fafa899b08 <line:159:5, line:160:14>
    | |-BinaryOperator 0x1fafa899ad0 <line:159:9, col:17> 'int' '!='
    | | |-ImplicitCastExpr 0x1fafa899ab8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1fafa899a70 <col:9> 'int' lvalue ParmVar 0x1fafa897210 'argc' 'int'
    | | `-IntegerLiteral 0x1fafa899a90 <col:17> 'int' 0
    | `-GotoStmt 0x1fafa899af0 <line:160:9, col:14> 'opthelp' 0x1fafa890fa8
    |-IfStmt 0x1fafa91bff8 <line:162:5, line:165:5>
    | |-BinaryOperator 0x1fafa899c10 <line:162:9, col:46> 'int' '&&'
    | | |-ImplicitCastExpr 0x1fafa899bf8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1fafa899b20 <col:9> 'int' lvalue Var 0x1fafa8906e0 'need_priv' 'int'
    | | `-ParenExpr 0x1fafa899bd8 <col:22, col:46> 'int'
    | |   `-BinaryOperator 0x1fafa899bb8 <col:23, line:26:26> 'int' '!='
    | |     |-ImplicitCastExpr 0x1fafa899ba0 <line:162:23> 'int' <IntegralCast>
    | |     | `-ImplicitCastExpr 0x1fafa899b88 <col:23> 'char' <LValueToRValue>
    | |     |   `-DeclRefExpr 0x1fafa899b40 <col:23> 'char' lvalue Var 0x1fafa88fe08 'key_type' 'char'
    | |     `-IntegerLiteral 0x1fafa899b60 <line:26:26> 'int' 1
    | `-CompoundStmt 0x1fafa91bfe0 <line:162:49, line:165:5>
    |   `-GotoStmt 0x1fafa91bfc8 <line:164:9, col:14> 'end' 0x1fafa891010
    |-IfStmt 0x1fafa91c328 <line:167:5, line:170:5>
    | |-UnaryOperator 0x1fafa91c290 <line:167:9, col:51> 'int' prefix '!' cannot overflow
    | | `-CallExpr 0x1fafa91c1f0 <col:10, col:51> 'int'
    | |   |-ImplicitCastExpr 0x1fafa91c1d8 <col:10> 'int (*)(const char *, const char *, char **, char **)' <FunctionToPointerDecay>
    | |   | `-DeclRefExpr 0x1fafa91c010 <col:10> 'int (const char *, const char *, char **, char **)' Function 0x1fafa860570 'app_passwd' 'int (const char *, const char *, char **, char **)'
    | |   |-ImplicitCastExpr 0x1fafa91c248 <col:21> 'const char *' <NoOp>
    | |   | `-ImplicitCastExpr 0x1fafa91c230 <col:21> 'char *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x1fafa91c030 <col:21> 'char *' lvalue Var 0x1fafa897ac0 'passinarg' 'char *'
    | |   |-ImplicitCastExpr 0x1fafa91c260 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
    | |   | `-ParenExpr 0x1fafa91c0b8 <col:17, col:27> 'void *'
    | |   |   `-CStyleCastExpr 0x1fafa91c090 <col:18, col:26> 'void *' <NullToPointer>
    | |   |     `-IntegerLiteral 0x1fafa91c050 <col:26> 'int' 0
    | |   |-UnaryOperator 0x1fafa91c110 <.//openssl//file_jk/after\apps\rsautl.c:167:38, col:39> 'char **' prefix '&' cannot overflow
    | |   | `-DeclRefExpr 0x1fafa91c0d8 <col:39> 'char *' lvalue Var 0x1fafa897be0 'passin' 'char *'
    | |   `-ImplicitCastExpr 0x1fafa91c278 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'char **' <NullToPointer>
    | |     `-ParenExpr 0x1fafa91c190 <col:17, col:27> 'void *'
    | |       `-CStyleCastExpr 0x1fafa91c168 <col:18, col:26> 'void *' <NullToPointer>
    | |         `-IntegerLiteral 0x1fafa91c128 <col:26> 'int' 0
    | `-CompoundStmt 0x1fafa91c310 <.//openssl//file_jk/after\apps\rsautl.c:167:54, line:170:5>
    |   `-GotoStmt 0x1fafa91c2f8 <line:169:9, col:14> 'end' 0x1fafa891010
    |-CallExpr 0x1fafa91c450 <line:173:5, col:31> 'int'
    | |-ImplicitCastExpr 0x1fafa91c438 <col:5> 'int (*)(const char *, int)' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1fafa91c340 <col:5> 'int (const char *, int)' Function 0x1fafa819210 'app_RAND_load_file' 'int (const char *, int)'
    | |-ImplicitCastExpr 0x1fafa91c480 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const char *' <NullToPointer>
    | | `-ParenExpr 0x1fafa91c3c8 <col:17, col:27> 'void *'
    | |   `-CStyleCastExpr 0x1fafa91c3a0 <col:18, col:26> 'void *' <NullToPointer>
    | |     `-IntegerLiteral 0x1fafa91c360 <col:26> 'int' 0
    | `-IntegerLiteral 0x1fafa91c3e8 <.//openssl//file_jk/after\apps\rsautl.c:173:30> 'int' 0
    |-SwitchStmt 0x1fafa91c4e8 <line:175:5, line:191:5>
    | |-ImplicitCastExpr 0x1fafa91c4d0 <line:175:13> 'int' <IntegralCast>
    | | `-ImplicitCastExpr 0x1fafa91c4b8 <col:13> 'char' <LValueToRValue>
    | |   `-DeclRefExpr 0x1fafa91c498 <col:13> 'char' lvalue Var 0x1fafa88fe08 'key_type' 'char'
    | `-CompoundStmt 0x1fafa91cb00 <col:23, line:191:5>
    |   |-CaseStmt 0x1fafa91c548 <line:176:5, <invalid sloc>>
    |   | |-ConstantExpr 0x1fafa91c530 <line:26:26> 'int'
    |   | | `-IntegerLiteral 0x1fafa91c508 <col:26> 'int' 1
    |   | `-NullStmt 0x1fafa91c620 <<invalid sloc>>
    |   |-BreakStmt 0x1fafa91c628 <line:178:9>
    |   |-CaseStmt 0x1fafa91c670 <line:180:5, <invalid sloc>>
    |   | |-ConstantExpr 0x1fafa91c658 <line:27:26> 'int'
    |   | | `-IntegerLiteral 0x1fafa91c630 <col:26> 'int' 2
    |   | `-NullStmt 0x1fafa91c7b0 <<invalid sloc>>
    |   |-BreakStmt 0x1fafa91c7b8 <line:182:9>
    |   |-CaseStmt 0x1fafa91c800 <line:184:5, <invalid sloc>>
    |   | |-ConstantExpr 0x1fafa91c7e8 <line:28:26> 'int'
    |   | | `-IntegerLiteral 0x1fafa91c7c0 <col:26> 'int' 3
    |   | `-NullStmt 0x1fafa91c890 <<invalid sloc>>
    |   |-IfStmt 0x1fafa91cae0 <line:186:9, line:189:9>
    |   | |-OpaqueValueExpr 0x1fafa91cac8 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x1fafa91cab8 <line:186:16, line:189:9>
    |   `-BreakStmt 0x1fafa91caf8 <line:190:9>
    |-IfStmt 0x1fafa91cbb0 <line:193:5, line:195:5>
    | |-OpaqueValueExpr 0x1fafa91cb98 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1fafa91cb80 <line:193:16, line:195:5>
    |   `-ReturnStmt 0x1fafa91cb70 <line:194:9, col:16>
    |     `-IntegerLiteral 0x1fafa91cb48 <col:16> 'int' 1
    |-IfStmt 0x1fafa919f78 <line:200:5, line:204:5>
    | |-OpaqueValueExpr 0x1fafa919f60 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1fafa91cf60 <line:200:15, line:204:5>
    |   `-GotoStmt 0x1fafa91cf48 <line:203:9, col:14> 'end' 0x1fafa891010
    |-IfStmt 0x1fafa91a0a8 <line:207:5, line:208:14>
    | |-OpaqueValueExpr 0x1fafa91a090 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1fafa91a078 <col:9, col:14> 'end' 0x1fafa891010
    |-IfStmt 0x1fafa91a1d8 <line:210:5, line:211:14>
    | |-OpaqueValueExpr 0x1fafa91a1c0 <<invalid sloc>> '_Bool'
    | `-GotoStmt 0x1fafa91a1a8 <col:9, col:14> 'end' 0x1fafa891010
    |-BinaryOperator 0x1fafa91a528 <line:215:5, col:52> 'unsigned char *' '='
    | |-DeclRefExpr 0x1fafa91a338 <col:5> 'unsigned char *' lvalue Var 0x1fafa88fef8 'rsa_in' 'unsigned char *'
    | `-ImplicitCastExpr 0x1fafa91a510 <col:14, col:52> 'unsigned char *' <BitCast>
    |   `-CallExpr 0x1fafa91a4b0 <col:14, col:52> 'void *'
    |     |-ImplicitCastExpr 0x1fafa91a498 <col:14> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1fafa91a370 <col:14> 'void *(int, const char *)' Function 0x1fafa85c770 'app_malloc' 'void *(int, const char *)'
    |     |-BinaryOperator 0x1fafa91a3f0 <col:25, col:35> 'int' '*'
    |     | |-ImplicitCastExpr 0x1fafa91a3d8 <col:25> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1fafa91a390 <col:25> 'int' lvalue Var 0x1fafa890380 'keysize' 'int'
    |     | `-IntegerLiteral 0x1fafa91a3b0 <col:35> 'int' 2
    |     `-ImplicitCastExpr 0x1fafa91a4f8 <col:38> 'const char *' <NoOp>
    |       `-ImplicitCastExpr 0x1fafa91a4e0 <col:38> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x1fafa91a448 <col:38> 'char [13]' lvalue "hold rsa key"
    |-BinaryOperator 0x1fafa91a690 <line:216:5, col:51> 'unsigned char *' '='
    | |-DeclRefExpr 0x1fafa91a548 <col:5> 'unsigned char *' lvalue Var 0x1fafa890018 'rsa_out' 'unsigned char *'
    | `-ImplicitCastExpr 0x1fafa91a678 <col:15, col:51> 'unsigned char *' <BitCast>
    |   `-CallExpr 0x1fafa91a600 <col:15, col:51> 'void *'
    |     |-ImplicitCastExpr 0x1fafa91a5e8 <col:15> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
    |     | `-DeclRefExpr 0x1fafa91a580 <col:15> 'void *(int, const char *)' Function 0x1fafa85c770 'app_malloc' 'void *(int, const char *)'
    |     |-ImplicitCastExpr 0x1fafa91a630 <col:26> 'int' <LValueToRValue>
    |     | `-DeclRefExpr 0x1fafa91a5a0 <col:26> 'int' lvalue Var 0x1fafa890380 'keysize' 'int'
    |     `-ImplicitCastExpr 0x1fafa91a660 <col:35> 'const char *' <NoOp>
    |       `-ImplicitCastExpr 0x1fafa91a648 <col:35> 'char *' <ArrayToPointerDecay>
    |         `-StringLiteral 0x1fafa91a5c0 <col:35> 'char [15]' lvalue "output rsa key"
    |-IfStmt 0x1fafa91a9e0 <line:220:5, line:223:5>
    | |-BinaryOperator 0x1fafa91a8f8 <line:220:9, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x1fafa91a8e0 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1fafa91a898 <col:9> 'int' lvalue Var 0x1fafa8901f0 'rsa_inlen' 'int'
    | | `-IntegerLiteral 0x1fafa91a8b8 <col:21> 'int' 0
    | `-CompoundStmt 0x1fafa91a9c8 <col:24, line:223:5>
    |   `-GotoStmt 0x1fafa91a9b0 <line:222:9, col:14> 'end' 0x1fafa891010
    |-IfStmt 0x1fafa9171d0 <line:224:5, line:232:5>
    | |-ImplicitCastExpr 0x1fafa91aa18 <line:224:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1fafa91a9f8 <col:9> 'int' lvalue Var 0x1fafa890788 'rev' 'int'
    | `-CompoundStmt 0x1fafa9171a8 <col:14, line:232:5>
    |   |-DeclStmt 0x1fafa91aab0 <line:225:9, col:14>
    |   | `-VarDecl 0x1fafa91aa48 <col:9, col:13> col:13 used i 'int'
    |   |-DeclStmt 0x1fafa91ab48 <line:226:9, col:27>
    |   | `-VarDecl 0x1fafa91aae0 <col:9, col:23> col:23 used ctmp 'unsigned char'
    |   `-ForStmt 0x1fafa917170 <line:227:9, line:231:9>
    |     |-BinaryOperator 0x1fafa91abc0 <line:227:14, col:18> 'int' '='
    |     | |-DeclRefExpr 0x1fafa91ab60 <col:14> 'int' lvalue Var 0x1fafa91aa48 'i' 'int'
    |     | `-IntegerLiteral 0x1fafa91ab98 <col:18> 'int' 0
    |     |-<<<NULL>>>
    |     |-BinaryOperator 0x1fafa91ac98 <col:21, col:37> 'int' '<'
    |     | |-ImplicitCastExpr 0x1fafa91ac80 <col:21> 'int' <LValueToRValue>
    |     | | `-DeclRefExpr 0x1fafa91abe0 <col:21> 'int' lvalue Var 0x1fafa91aa48 'i' 'int'
    |     | `-BinaryOperator 0x1fafa91ac60 <col:25, col:37> 'int' '/'
    |     |   |-ImplicitCastExpr 0x1fafa91ac48 <col:25> 'int' <LValueToRValue>
    |     |   | `-DeclRefExpr 0x1fafa91ac00 <col:25> 'int' lvalue Var 0x1fafa8901f0 'rsa_inlen' 'int'
    |     |   `-IntegerLiteral 0x1fafa91ac20 <col:37> 'int' 2
    |     |-UnaryOperator 0x1fafa91acd8 <col:40, col:41> 'int' postfix '++'
    |     | `-DeclRefExpr 0x1fafa91acb8 <col:40> 'int' lvalue Var 0x1fafa91aa48 'i' 'int'
    |     `-CompoundStmt 0x1fafa917148 <col:45, line:231:9>
    |       |-BinaryOperator 0x1fafa91add0 <line:228:13, col:28> 'unsigned char' '='
    |       | |-DeclRefExpr 0x1fafa91acf0 <col:13> 'unsigned char' lvalue Var 0x1fafa91aae0 'ctmp' 'unsigned char'
    |       | `-ImplicitCastExpr 0x1fafa91adb8 <col:20, col:28> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1fafa91ad98 <col:20, col:28> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x1fafa91ad68 <col:20> 'unsigned char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1fafa91ad28 <col:20> 'unsigned char *' lvalue Var 0x1fafa88fef8 'rsa_in' 'unsigned char *'
    |       |     `-ImplicitCastExpr 0x1fafa91ad80 <col:27> 'int' <LValueToRValue>
    |       |       `-DeclRefExpr 0x1fafa91ad48 <col:27> 'int' lvalue Var 0x1fafa91aa48 'i' 'int'
    |       |-BinaryOperator 0x1fafa916fa0 <line:229:13, col:49> 'unsigned char' '='
    |       | |-ArraySubscriptExpr 0x1fafa91ae60 <col:13, col:21> 'unsigned char' lvalue
    |       | | |-ImplicitCastExpr 0x1fafa91ae30 <col:13> 'unsigned char *' <LValueToRValue>
    |       | | | `-DeclRefExpr 0x1fafa91adf0 <col:13> 'unsigned char *' lvalue Var 0x1fafa88fef8 'rsa_in' 'unsigned char *'
    |       | | `-ImplicitCastExpr 0x1fafa91ae48 <col:20> 'int' <LValueToRValue>
    |       | |   `-DeclRefExpr 0x1fafa91ae10 <col:20> 'int' lvalue Var 0x1fafa91aa48 'i' 'int'
    |       | `-ImplicitCastExpr 0x1fafa916f88 <col:25, col:49> 'unsigned char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1fafa916f68 <col:25, col:49> 'unsigned char' lvalue
    |       |     |-ImplicitCastExpr 0x1fafa916f50 <col:25> 'unsigned char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1fafa91ae80 <col:25> 'unsigned char *' lvalue Var 0x1fafa88fef8 'rsa_in' 'unsigned char *'
    |       |     `-BinaryOperator 0x1fafa916f30 <col:32, col:48> 'int' '-'
    |       |       |-BinaryOperator 0x1fafa91af00 <col:32, col:44> 'int' '-'
    |       |       | |-ImplicitCastExpr 0x1fafa91aee8 <col:32> 'int' <LValueToRValue>
    |       |       | | `-DeclRefExpr 0x1fafa91aea0 <col:32> 'int' lvalue Var 0x1fafa8901f0 'rsa_inlen' 'int'
    |       |       | `-IntegerLiteral 0x1fafa91aec0 <col:44> 'int' 1
    |       |       `-ImplicitCastExpr 0x1fafa91af40 <col:48> 'int' <LValueToRValue>
    |       |         `-DeclRefExpr 0x1fafa91af20 <col:48> 'int' lvalue Var 0x1fafa91aa48 'i' 'int'
    |       `-BinaryOperator 0x1fafa917128 <line:230:13, col:41> 'unsigned char' '='
    |         |-ArraySubscriptExpr 0x1fafa9170d0 <col:13, col:37> 'unsigned char' lvalue
    |         | |-ImplicitCastExpr 0x1fafa9170b8 <col:13> 'unsigned char *' <LValueToRValue>
    |         | | `-DeclRefExpr 0x1fafa916fc0 <col:13> 'unsigned char *' lvalue Var 0x1fafa88fef8 'rsa_in' 'unsigned char *'
    |         | `-BinaryOperator 0x1fafa917098 <col:20, col:36> 'int' '-'
    |         |   |-BinaryOperator 0x1fafa917040 <col:20, col:32> 'int' '-'
    |         |   | |-ImplicitCastExpr 0x1fafa917028 <col:20> 'int' <LValueToRValue>
    |         |   | | `-DeclRefExpr 0x1fafa916fe0 <col:20> 'int' lvalue Var 0x1fafa8901f0 'rsa_inlen' 'int'
    |         |   | `-IntegerLiteral 0x1fafa917000 <col:32> 'int' 1
    |         |   `-ImplicitCastExpr 0x1fafa917080 <col:36> 'int' <LValueToRValue>
    |         |     `-DeclRefExpr 0x1fafa917060 <col:36> 'int' lvalue Var 0x1fafa91aa48 'i' 'int'
    |         `-ImplicitCastExpr 0x1fafa917110 <col:41> 'unsigned char' <LValueToRValue>
    |           `-DeclRefExpr 0x1fafa9170f0 <col:41> 'unsigned char' lvalue Var 0x1fafa91aae0 'ctmp' 'unsigned char'
    |-SwitchStmt 0x1fafa917238 <line:233:5, line:252:5>
    | |-ImplicitCastExpr 0x1fafa917220 <line:233:13> 'int' <IntegralCast>
    | | `-ImplicitCastExpr 0x1fafa917208 <col:13> 'char' <LValueToRValue>
    | |   `-DeclRefExpr 0x1fafa9171e8 <col:13> 'char' lvalue Var 0x1fafa88fd50 'rsa_mode' 'char'
    | `-CompoundStmt 0x1fafa917b10 <col:23, line:252:5>
    |   |-CaseStmt 0x1fafa917298 <line:235:5, <invalid sloc>>
    |   | |-ConstantExpr 0x1fafa917280 <line:22:26> 'int'
    |   | | `-IntegerLiteral 0x1fafa917258 <col:26> 'int' 2
    |   | `-NullStmt 0x1fafa917488 <<invalid sloc>>
    |   |-BreakStmt 0x1fafa917490 <line:237:9>
    |   |-CaseStmt 0x1fafa9174d8 <line:239:5, <invalid sloc>>
    |   | |-ConstantExpr 0x1fafa9174c0 <line:21:26> 'int'
    |   | | `-IntegerLiteral 0x1fafa917498 <col:26> 'int' 1
    |   | `-NullStmt 0x1fafa9176b0 <<invalid sloc>>
    |   |-BreakStmt 0x1fafa9176b8 <line:242:9>
    |   |-CaseStmt 0x1fafa917700 <line:244:5, <invalid sloc>>
    |   | |-ConstantExpr 0x1fafa9176e8 <line:23:26> 'int'
    |   | | `-IntegerLiteral 0x1fafa9176c0 <col:26> 'int' 3
    |   | `-NullStmt 0x1fafa9178d8 <<invalid sloc>>
    |   |-BreakStmt 0x1fafa9178e0 <line:246:9>
    |   |-CaseStmt 0x1fafa917928 <line:248:5, <invalid sloc>>
    |   | |-ConstantExpr 0x1fafa917910 <line:24:26> 'int'
    |   | | `-IntegerLiteral 0x1fafa9178e8 <col:26> 'int' 4
    |   | `-NullStmt 0x1fafa917b00 <<invalid sloc>>
    |   `-BreakStmt 0x1fafa917b08 <line:251:9>
    |-IfStmt 0x1fafa917c80 <line:254:5, line:258:5>
    | |-BinaryOperator 0x1fafa917bc0 <line:254:9, col:22> 'int' '<'
    | | |-ImplicitCastExpr 0x1fafa917ba8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1fafa917b60 <col:9> 'int' lvalue Var 0x1fafa8904e8 'rsa_outlen' 'int'
    | | `-IntegerLiteral 0x1fafa917b80 <col:22> 'int' 0
    | `-CompoundStmt 0x1fafa917c68 <col:25, line:258:5>
    |   `-GotoStmt 0x1fafa917c50 <line:257:9, col:14> 'end' 0x1fafa891010
    |-BinaryOperator 0x1fafa917ce0 <line:259:5, col:11> 'int' '='
    | |-DeclRefExpr 0x1fafa917c98 <col:5> 'int' lvalue Var 0x1fafa890400 'ret' 'int'
    | `-IntegerLiteral 0x1fafa917cb8 <col:11> 'int' 0
    |-IfStmt 0x1fafa9162a0 <line:260:5, line:264:12> has_else
    | |-ImplicitCastExpr 0x1fafa917d20 <line:260:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1fafa917d00 <col:9> 'int' lvalue Var 0x1fafa890638 'asn1parse' 'int'
    | |-CompoundStmt 0x1fafa915f50 <col:20, line:264:5>
    | | `-IfStmt 0x1fafa915f38 <line:261:9, line:263:9>
    | |   |-OpaqueValueExpr 0x1fafa915f20 <<invalid sloc>> '_Bool'
    | |   `-CompoundStmt 0x1fafa917f10 <line:261:64, line:263:9>
    | `-NullStmt 0x1fafa916298 <line:264:12>
    |-LabelStmt 0x1fafa9163e0 <line:268:2, col:5> 'end'
    | `-NullStmt 0x1fafa9163d8 <col:5>
    |-CallExpr 0x1fafa916760 <line:273:5, col:24> 'int'
    | |-ImplicitCastExpr 0x1fafa916748 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1fafa916708 <col:5> 'int ()' Function 0x1fafa916640 'OPENSSL_free' 'int ()'
    | `-ImplicitCastExpr 0x1fafa916788 <col:18> 'unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1fafa916728 <col:18> 'unsigned char *' lvalue Var 0x1fafa88fef8 'rsa_in' 'unsigned char *'
    |-CallExpr 0x1fafa9167f8 <line:274:5, col:25> 'int'
    | |-ImplicitCastExpr 0x1fafa9167e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1fafa9167a0 <col:5> 'int ()' Function 0x1fafa916640 'OPENSSL_free' 'int ()'
    | `-ImplicitCastExpr 0x1fafa916820 <col:18> 'unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1fafa9167c0 <col:18> 'unsigned char *' lvalue Var 0x1fafa890018 'rsa_out' 'unsigned char *'
    |-CallExpr 0x1fafa916890 <line:275:5, col:24> 'int'
    | |-ImplicitCastExpr 0x1fafa916878 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1fafa916838 <col:5> 'int ()' Function 0x1fafa916640 'OPENSSL_free' 'int ()'
    | `-ImplicitCastExpr 0x1fafa9168b8 <col:18> 'char *' <LValueToRValue>
    |   `-DeclRefExpr 0x1fafa916858 <col:18> 'char *' lvalue Var 0x1fafa897be0 'passin' 'char *'
    `-ReturnStmt 0x1fafa916908 <line:276:5, col:12>
      `-ImplicitCastExpr 0x1fafa9168f0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1fafa9168d0 <col:12> 'int' lvalue Var 0x1fafa890400 'ret' 'int'
