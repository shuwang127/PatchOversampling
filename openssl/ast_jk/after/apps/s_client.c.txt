TranslationUnitDecl 0x1531cbde548 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1531cbdede0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1531cbdeae0 '__int128'
|-TypedefDecl 0x1531cbdee50 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1531cbdeb00 'unsigned __int128'
|-TypedefDecl 0x1531cbdf188 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1531cbdef40 'struct __NSConstantString_tag'
|   `-Record 0x1531cbdeea8 '__NSConstantString_tag'
|-TypedefDecl 0x1531cbdf1f8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1531cbde720 'unsigned long long'
|-TypedefDecl 0x1531cbdf290 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1531cbdf250 'char *'
|   `-BuiltinType 0x1531cbde5e0 'char'
|-TypedefDecl 0x1531cbdf300 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1531cbdf250 'char *'
|   `-BuiltinType 0x1531cbde5e0 'char'
|-TypedefDecl 0x1531cbdf3c0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1531cbde720 'unsigned long long'
|-TypedefDecl 0x1531cbdf430 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1531cbdf250 'char *'
|   `-BuiltinType 0x1531cbde5e0 'char'
|-FunctionDecl 0x1531e6a7410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1531e6a74b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1531e6a7520 <col:21> Implicit
|-FunctionDecl 0x1531e6a7578 prev 0x1531e6a7410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1531e6a72a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1531e6a7668 <col:21> Inherited Implicit
|-TypedefDecl 0x1531e6a76a8 prev 0x1531cbdf1f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1531cbde720 'unsigned long long'
|-TypedefDecl 0x1531e6a7750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1531e6a7720 'size_t' sugar
|   |-Typedef 0x1531e6a76a8 'size_t'
|   `-BuiltinType 0x1531cbde720 'unsigned long long'
|-TypedefDecl 0x1531e6a77c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1531cbde680 'long long'
|-TypedefDecl 0x1531e6a7830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1531cbde680 'long long'
|-TypedefDecl 0x1531e6a78a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1531cbde6c0 'unsigned short'
|-TypedefDecl 0x1531e6a7910 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1531cbde6c0 'unsigned short'
|-TypedefDecl 0x1531e6a7980 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x1531cbde6c0 'unsigned short'
|-TypedefDecl 0x1531e6a79f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1531cbde640 'int'
|-TypedefDecl 0x1531e6a7a60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1531cbde660 'long'
|-TypedefDecl 0x1531e6a7ad0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1531cbde680 'long long'
|-TypedefDecl 0x1531e6a7b60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1531e6a7b30 '__time64_t' sugar
|   |-Typedef 0x1531e6a7ad0 '__time64_t'
|   `-BuiltinType 0x1531cbde680 'long long'
|-FunctionDecl 0x1531e6a7cd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1531e6a7ef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1531e6e3f50 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1531e6a8038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1531e6a80b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1531e6a8128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1531e6a81a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1531e6e3cf0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1531e6e4030 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1531e6e40f0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1531e6e4260 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1531e6e4210 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1531e6e41b0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1531e6e40d0 'struct threadlocaleinfostruct'
|       `-Record 0x1531e6ecd80 'threadlocaleinfostruct'
|-TypedefDecl 0x1531e6e4370 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1531e6e4320 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1531e6e42c0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1531e6e4190 'struct threadmbcinfostruct'
|       `-Record 0x1531e6e40f0 'threadmbcinfostruct'
|-RecordDecl 0x1531e6e43c8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1531e6e4480 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1531e6e4540 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1531e6e45d0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1531e6e4660 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1531e6e4718 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1531e6e46c0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1531e6e4520 'struct localeinfo_struct'
|     `-Record 0x1531e6e4480 'localeinfo_struct'
|-TypedefDecl 0x1531e6e47f0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1531e6e47a0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1531e6e46c0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1531e6e4520 'struct localeinfo_struct'
|       `-Record 0x1531e6e4480 'localeinfo_struct'
|-RecordDecl 0x1531e6e4868 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1531e6e4920 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1531e6e4998 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1531e6e4a58 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1531e6e4af0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1531e6e4b60 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1531e6e4c18 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1531e6e4bc0 'struct localerefcount' sugar
|   `-RecordType 0x1531e6e4900 'struct localerefcount'
|     `-Record 0x1531e6e4868 'localerefcount'
|-RecordDecl 0x1531e6ecd80 prev 0x1531e6e4030 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1531e6ece00 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1531e6ece78 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1531e6ecee8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1531e6ecf58 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1531e6ecfc8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1531e6ed188 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1531e6ed1f8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1531e6ed268 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1531e6ed2d8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1531e6ed348 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1531e6ed3b8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1531e6ed410 parent 0x1531cbde548 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1531e6ed5a0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1531e6ed610 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1531e6ed680 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1531e6ed6f0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1531e6ed790 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1531e6ed800 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1531e6ed910 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1531e6eda48 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1531e6edaf8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1531e6edaa0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1531e6e40d0 'struct threadlocaleinfostruct'
|     `-Record 0x1531e6ecd80 'threadlocaleinfostruct'
|-FunctionDecl 0x1531e6edc90 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x1531e6e7d30 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x1531e6e7e30 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x1531e6e8028 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x1531e6e80f0 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x1531e6e8370 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x1531e6e8188 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x1531e6e8208 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x1531e6e8748 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x1531e6e8450 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x1531e6e84d0 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x1531e6e8570 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6e8978 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x1531e6e8a18 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6e8a88 <col:55> Implicit
| `-PureAttr 0x1531e6e8ae0 <col:55> Implicit
|-FunctionDecl 0x1531e6e8b08 prev 0x1531e6e8978 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x1531e6e8830 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1531e6e8bf8 <col:55> Inherited Implicit
| `-PureAttr 0x1531e6e8c20 <col:55> Inherited Implicit
|-FunctionDecl 0x1531e6f5fc0 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6e8c60 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6f5e10 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f6180 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x1531e6f6220 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f6290 <col:55> Implicit
| `-PureAttr 0x1531e6f62e8 <col:55> Implicit
|-FunctionDecl 0x1531e6f6310 prev 0x1531e6f6180 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x1531e6f60a0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1531e6f6400 <col:55> Inherited Implicit
| `-PureAttr 0x1531e6f6428 <col:55> Inherited Implicit
|-FunctionDecl 0x1531e6f65e0 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f6468 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6f64e0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f67a0 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x1531e6f6840 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f68b0 <col:55> Implicit
| `-PureAttr 0x1531e6f6908 <col:55> Implicit
|-FunctionDecl 0x1531e6f6930 prev 0x1531e6f67a0 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x1531e6f66c0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1531e6f6a20 <col:55> Inherited Implicit
| `-PureAttr 0x1531e6f6a48 <col:55> Inherited Implicit
|-FunctionDecl 0x1531e6f6c00 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f6a88 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6f6b00 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6efdb0 <line:127:55> col:55 implicit isdigit 'int (int)' extern
| |-ParmVarDecl 0x1531e6efe50 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6efec0 <col:55> Implicit
| `-PureAttr 0x1531e6eff18 <col:55> Implicit
|-FunctionDecl 0x1531e6eff40 prev 0x1531e6efdb0 <col:43, col:74> col:55 isdigit 'int (int)'
| |-ParmVarDecl 0x1531e6f6ce0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1531e6f0030 <col:55> Inherited Implicit
| `-PureAttr 0x1531e6f0058 <col:55> Inherited Implicit
|-FunctionDecl 0x1531e6f0210 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f0098 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6f0110 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f03d0 <line:129:36> col:36 implicit used isxdigit 'int (int)' extern
| |-ParmVarDecl 0x1531e6f0470 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f04e0 <col:36> Implicit
| `-PureAttr 0x1531e6f0538 <col:36> Implicit
|-FunctionDecl 0x1531e6f0560 prev 0x1531e6f03d0 <col:24, col:56> col:36 used isxdigit 'int (int)'
| |-ParmVarDecl 0x1531e6f02f0 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x1531e6f0650 <col:36> Inherited Implicit
| `-PureAttr 0x1531e6f0678 <col:36> Inherited Implicit
|-FunctionDecl 0x1531e6f0830 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f06b8 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x1531e6f0730 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f09f0 <line:131:55> col:55 implicit used isspace 'int (int)' extern
| |-ParmVarDecl 0x1531e6f0a90 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f0b00 <col:55> Implicit
| `-PureAttr 0x1531e6f0b58 <col:55> Implicit
|-FunctionDecl 0x1531e6f0b80 prev 0x1531e6f09f0 <col:43, col:74> col:55 used isspace 'int (int)'
| |-ParmVarDecl 0x1531e6f0910 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1531e6f0c70 <col:55> Inherited Implicit
| `-PureAttr 0x1531e6f0c98 <col:55> Inherited Implicit
|-FunctionDecl 0x1531e6f0ec0 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f0cd8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6f0dc0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f1080 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x1531e6f1120 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f1190 <col:36> Implicit
| `-PureAttr 0x1531e6f11e8 <col:36> Implicit
|-FunctionDecl 0x1531e6f1210 prev 0x1531e6f1080 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x1531e6f0fa0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1531e6f1300 <col:36> Inherited Implicit
| `-PureAttr 0x1531e6f1328 <col:36> Inherited Implicit
|-FunctionDecl 0x1531e6f14e0 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f1368 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6f13e0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f16a0 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x1531e6f1740 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f17b0 <col:36> Implicit
| `-PureAttr 0x1531e6f1808 <col:36> Implicit
|-FunctionDecl 0x1531e6f1830 prev 0x1531e6f16a0 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x1531e6f15c0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1531e6f1920 <col:36> Inherited Implicit
| `-PureAttr 0x1531e6f1948 <col:36> Inherited Implicit
|-FunctionDecl 0x1531e6f1b00 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f1988 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6f1a00 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f1cc0 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x1531e6f1dd0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f1e40 <col:55> Implicit
| `-PureAttr 0x1531e6f1e98 <col:55> Implicit
|-FunctionDecl 0x1531e6f1ec0 prev 0x1531e6f1cc0 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x1531e6f1be0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1531e6f1fb0 <col:55> Inherited Implicit
| `-PureAttr 0x1531e6f1fd8 <col:55> Inherited Implicit
|-FunctionDecl 0x1531e6f2190 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f2018 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6f2090 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f2350 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x1531e6f23f0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f2460 <col:36> Implicit
| `-PureAttr 0x1531e6f24b8 <col:36> Implicit
|-FunctionDecl 0x1531e6f24e0 prev 0x1531e6f2350 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x1531e6f2270 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1531e6f25d0 <col:36> Inherited Implicit
| `-PureAttr 0x1531e6f25f8 <col:36> Inherited Implicit
|-FunctionDecl 0x1531e6f27b0 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f2638 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6f26b0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f2970 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x1531e6f2a10 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f2a80 <col:36> Implicit
| `-PureAttr 0x1531e6f2ad8 <col:36> Implicit
|-FunctionDecl 0x1531e6f2b00 prev 0x1531e6f2970 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x1531e6f2890 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1531e6f2bf0 <col:36> Inherited Implicit
| `-PureAttr 0x1531e6f2c18 <col:36> Inherited Implicit
|-FunctionDecl 0x1531e6f2de0 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f2c58 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6f2cd0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f2fa0 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x1531e6f3040 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f30b0 <col:36> Implicit
| `-PureAttr 0x1531e6f3108 <col:36> Implicit
|-FunctionDecl 0x1531e6f3130 prev 0x1531e6f2fa0 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x1531e6f2ec0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1531e6f3220 <col:36> Inherited Implicit
| `-PureAttr 0x1531e6f3248 <col:36> Inherited Implicit
|-FunctionDecl 0x1531e6f3400 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f3288 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6f3300 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f35c0 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x1531e6f3660 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f36d0 <col:55> Implicit
| `-PureAttr 0x1531e6f3728 <col:55> Implicit
|-FunctionDecl 0x1531e6f3750 prev 0x1531e6f35c0 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x1531e6f34e0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1531e6f3840 <col:55> Inherited Implicit
| `-PureAttr 0x1531e6f3868 <col:55> Inherited Implicit
|-FunctionDecl 0x1531e6f3988 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x1531e6f3a28 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e6f3a98 <col:55> Implicit
| `-PureAttr 0x1531e6f3af0 <col:55> Implicit
|-FunctionDecl 0x1531e6f3b18 prev 0x1531e6f3988 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x1531e6f38a8 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1531e6f3c08 <col:55> Inherited Implicit
| `-PureAttr 0x1531e6f3c30 <col:55> Inherited Implicit
|-FunctionDecl 0x1531e6eeda0 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e6f3c70 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1531e6eeff0 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6eee78 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6eeef0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6ef1b0 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e6ef0d0 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1531e6ef400 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6ef288 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1531e6ef300 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6ef5c0 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e6ef4e0 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1531e6ef778 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e6ef698 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1531e6ef930 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e6ef850 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1531e6efae8 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e6efa08 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x1531e6f4e00 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6efbe0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f50f0 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f4ed0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f4f48 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f52a8 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6f51c8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f54f0 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f5378 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f53f0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f56a8 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6f55c8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f58f0 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f5778 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f57f0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f5aa8 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6f59c8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f5cf0 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f5b78 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f5bf0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f8f20 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6f8e40 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f9168 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f8ff0 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f9068 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f9320 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6f9240 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f9568 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f93f0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f9468 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f9720 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6f9640 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f9968 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f97f0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f9868 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f9b20 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6f9a40 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f9d68 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f9bf0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f9c68 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f9f30 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6f9e50 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6fa178 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6fa000 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6fa078 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6fa330 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6fa250 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6fa578 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6fa400 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6fa478 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6fa730 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6fa650 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6fa978 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6fa800 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6fa878 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6fab30 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6faa50 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6fad78 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6fac00 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6fac78 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f6f00 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6f6e20 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f7140 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1531e6f6fd0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f7428 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f7210 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f7288 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f75d8 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1531e6f7500 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f7818 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f76a8 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f7720 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f7b10 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1531e6f78f0 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f7968 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x1531e6f7ed8 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f7be8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1531e6f7c60 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f7cd8 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f8098 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6f7fb8 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f82e0 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f8168 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f81e0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f8498 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1531e6f83b8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1531e6f86e0 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1531e6f8568 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e6f85e0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6f88a0 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e6f87c0 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x1531e6f8af0 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1531e6f8978 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x1531e6f89f0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e6faea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1531e6f8cc8 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1531e6f8d40 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x1531e6faf50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x1531e6fb098 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1531e6fb240 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1531e6fb468 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1531e6fb308 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-RecordDecl 0x1531e6fb550 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1531e6fb610 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1531e6fb688 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1531e6fb6f8 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1531e6fb768 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1531e6fb7d8 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1531e6fb848 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1531e6fb8b8 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1531e6fb928 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1531e6fb998 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1531e6fba40 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1531e6fb9f0 'struct _iobuf' sugar
|   `-RecordType 0x1531e6fb5f0 'struct _iobuf'
|     `-Record 0x1531e6fb550 '_iobuf'
|-FunctionDecl 0x1531e6fbc78 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1531e6fbd48 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1531cbde680 'long long'
|-FunctionDecl 0x1531e746d48 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e6fbdb0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1531e747040 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1531e746e20 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1531e746e98 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1531e7473f0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1531e747120 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1531e7471a0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1531e747220 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1531e747640 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1531e7474d0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1531e747870 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1531e747730 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1531e747a20 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e747940 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1531e747bb0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1531e74ef28 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1531e74ed00 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1531e74ed80 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1531e74f0e0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e74f000 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1531e74f290 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e74f1b0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1531e74f440 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e74f360 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1531e74f5f0 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e74f510 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1531e74f780 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1531e74fae0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1531e74f848 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1531e74f938 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1531e754f38 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1531e74fbc0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1531e74fc40 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1531e754d60 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1531e7550f8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e755018 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1531e7553c0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1531e7551d0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1531e755250 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1531e755558 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1531e755948 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1531e7559e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e755a50 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1531e755ac8 prev 0x1531e755948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1531e755720 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1531e7557a0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1531e755b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e753010 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1531e752d40 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1531e752dc0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1531e752e40 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1531e753330 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1531e7533d0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1531e753438 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1531e7534b0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1531e753518 prev 0x1531e753330 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1531e7530f0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1531e753170 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1531e753610 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1531e7537d8 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1531e753658 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1531e7536d8 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1531e753a30 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1531e7538b8 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1531e753930 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1531e753bf0 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e753b10 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1531e750ed0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1531e753cc8 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1531e750d20 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1531e751368 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1531e751408 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1531e751470 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1531e7514d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1531e751540 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1531e7515c8 prev 0x1531e751368 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1531e750fb0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1531e751028 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7510a0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e751118 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1531e751ad0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1531e7516b8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1531e751730 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7517a8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e751820 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e751898 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1531e756040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1531e755d70 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1531e755df0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1531e755e68 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1531e7560f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7565b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1531e756240 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1531e7562c0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1531e756340 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1531e7563b8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1531e756960 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1531e756a00 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1531e756a68 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1531e756ae0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1531e756b48 prev 0x1531e756960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1531e756798 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1531e756818 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1531e756d28 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1531e756bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e754138 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e753e58 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1531e753ed8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1531e753f50 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e7541f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7544b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1531e754330 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1531e7543b0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1531e7547a0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e754588 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1531e754608 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1531e754680 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e754b00 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1531e754880 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1531e754958 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1531e756ef8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1531e754bd8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1531e754c58 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1531e754cd8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1531e757158 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1531e756fd8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1531e757508 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1531e757228 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1531e7572a8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1531e757328 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1531e757768 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1531e7575e8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1531e757c28 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1531e757cc8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1531e74fd10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1531e74fd78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1531e74fde0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1531e74fe68 prev 0x1531e757c28 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1531e757870 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1531e7578e8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e757960 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7579d8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1531e750030 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e74ff50 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1531e7501c0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1531e750348 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1531e750660 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1531e750418 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1531e7504b0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1531e750988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1531e750840 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1531e750a30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e750c50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e750b70 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1531e75af20 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1531e75add8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1531e75b0d0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e75aff0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1531e75b320 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1531e75b1a8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1531e75b228 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1531e75b548 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1531e75b5e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1531e75b658 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1531e75b6c0 prev 0x1531e75b548 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1531e75b400 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1531e75b7b0 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1531e75b8e0 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1531e75b800 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1531e75bb30 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1531e75b9b8 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1531e75ba30 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1531e75bcf0 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e75bc10 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1531e75bf38 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1531e75bde8 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1531e75c188 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1531e75c010 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1531e75c088 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1531e75c348 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1531e75c268 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1531e75c610 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1531e75c420 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1531e75c4a0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1531e75c7d0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1531e75c6f0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1531e75ca60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1531e75c980 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1531e75cb08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1531e75cd00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1531e75cc28 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1531e75deb0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1531e75e158 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1531e75e1f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1531e75e268 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1531e75e2d0 prev 0x1531e75e158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1531e75e040 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1531e75e4a8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1531e75e378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e75e820 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e75e5f0 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1531e75e668 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e75e8d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e75eaf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1531e75ea18 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1531e75ed48 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e75ebd0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1531e75ec48 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7590b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1531e758e98 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1531e758f18 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1531e759168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e759390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e7592b0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1531e7595b8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1531e759468 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1531e7597a0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1531e759bf0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1531e759868 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1531e7598e8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1531e759968 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1531e7599e0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e75d0f0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1531e759ce0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e75cde0 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e75ce58 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e75ced8 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1531e75d4c8 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1531e75d1e0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e75d258 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e75d2d8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1531e75d690 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1531e75d5b0 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1531e75da60 <line:304:70> col:70 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1531e75db00 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1531e75db68 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1531e75dbe0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1531e75dc48 prev 0x1531e75da60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 used sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1531e75d828 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1531e75d8a8 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1531e757dd8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1531e75dcf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7581c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e757ee8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1531e757f68 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1531e757fe0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e758280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e758548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1531e7583c8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1531e758448 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1531e758840 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e758628 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1531e7586a8 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1531e758720 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e758cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1531e7589e8 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1531e758a60 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e758ae0 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1531e760e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7613b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e761028 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1531e7610a0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e761120 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1531e761198 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e761470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7617d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1531e7615b8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1531e761630 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7616b0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1531e761b68 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e7618b8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1531e761930 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7619b0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1531e761a28 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e759db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1531e759e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e75a110 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1531e759f98 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1531e75a408 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1531e75a1e8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1531e75a260 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1531e75a688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1531e75a5a8 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1531e75a730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e75a9f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1531e75a878 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1531e75a8f0 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1531e762ea0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1531e762f40 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1531e762fa8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1531e763010 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1531e763090 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1531e7630f8 prev 0x1531e762ea0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1531e75aac8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1531e75ab48 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1531e75abc0 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1531e7631f8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1531e7634a0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1531e763540 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1531e7635a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1531e763610 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1531e763690 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1531e7636f8 prev 0x1531e7634a0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1531e763240 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1531e7632c0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1531e763338 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1531e7637f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1531e763a58 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1531e763840 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1531e7638c0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1531e763938 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e763d50 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1531e763b38 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1531e763bb8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1531e763c30 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e7640a8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1531e764148 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1531e7641b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1531e764228 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1531e764290 prev 0x1531e7640a8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1531e763e50 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1531e763ec8 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1531e764388 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1531e764588 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1531e764628 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1531e764690 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1531e764708 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1531e764770 prev 0x1531e764588 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1531e7643d8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1531e764450 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1531e764868 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1531e764a30 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1531e7648b8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1531e764930 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e764c88 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1531e764b10 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1531e764b88 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e765228 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1531e7652c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1531e765330 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1531e765398 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1531e765400 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1531e765488 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1531e7654f0 prev 0x1531e765228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1531e764e60 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e764ed8 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e764f58 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1531e764fd0 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1531e7656e0 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1531e7655b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e765b58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1531e765730 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e7657a8 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e765820 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7658a0 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1531e765918 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e761f90 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1531e765c50 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e765cc8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e765d40 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e765dc0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1531e761e30 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e762360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1531e762148 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1531e7621c0 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e762240 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1531e762418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7628d0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1531e762620 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1531e762698 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e762718 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1531e762790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1531e762990 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e762d88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1531e762ad8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e762b50 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e762bd0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1531e762c48 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e76e038 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1531e76dd60 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1531e76dde0 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1531e76de58 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e76e3e0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1531e76e480 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1531e76e4e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1531e76e560 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1531e76e5c8 prev 0x1531e76e3e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1531e76e1e0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1531e76e260 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1531e76e7a8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1531e76e678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e76ebd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1531e76ec70 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1531e768cc0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1531e768d28 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1531e768da8 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1531e768e10 prev 0x1531e76ebd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1531e76e8b8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1531e76e938 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1531e76e9b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1531e768ff8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1531e768ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7692a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1531e769340 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1531e7693a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1531e769410 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1531e769490 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1531e7694f8 prev 0x1531e7692a0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1531e769048 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1531e7690c8 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1531e769140 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1531e7695f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1531e7697c0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1531e769648 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1531e7696c0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e769ab8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1531e7698a0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e769918 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e769998 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1531e76eed8 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1531e769ba0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e769c18 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e76ed20 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1531e76ed98 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e76f140 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1531e76efc0 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1531e76f040 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1531e76f300 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1531e76f220 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1531e76f5f0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1531e76f3d8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1531e76f450 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e76f4d0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1531e76f8e8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1531e76f6d0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1531e76f750 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1531e76f7c8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e76fb48 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1531e76f9d0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1531e76fa48 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e769e88 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1531e76fc28 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1531e76fca0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e769cd0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1531e769d48 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e76a058 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1531e769f78 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1531e76a2a8 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1531e76a130 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1531e76a1a8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e76a468 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e76a388 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1531e76a5f8 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1531e76a840 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e76a6c8 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1531e76a740 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e76aa98 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e76a920 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1531e76a998 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e76ad20 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e76ab78 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1531e76abf0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e76b0c8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e76ae00 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1531e76ae78 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e76aef0 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e76b3c0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e76b1b0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1531e76b228 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e76b2a0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e76b6b8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e76b4a8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1531e76b520 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e76b598 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e76b9b0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e76b798 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1531e76b818 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1531e76b890 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e767cb0 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e76ba90 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1531e76bb10 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1531e76bb88 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e767fa8 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e767d90 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1531e767e10 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1531e767e88 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e768400 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e768088 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1531e768108 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1531e768180 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e7681f8 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e768798 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e7684e8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1531e768568 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1531e7685e0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e768658 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e768b30 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e768880 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1531e768900 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1531e768978 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e7689f0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e7700e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e76fe08 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e76fe88 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1531e76ff00 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e7701a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e770670 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e7702e8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e770360 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7703e0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1531e770458 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e770a10 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e770760 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e7707d8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e770858 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1531e7708d0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e772fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e770c00 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e770c80 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1531e772d60 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1531e772dd8 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1531e773090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7735f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e7731d8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e773250 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7732d0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1531e773348 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e7733c0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e773a38 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e7736f0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e773768 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7737e8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1531e773860 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e7738d8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e773ca8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e773b30 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1531e773ba8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e771ef8 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e771d80 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1531e771df8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7721e8 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e771fd8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1531e772050 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e7720c8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e7724e0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e7722d0 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1531e772348 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e7723c0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e772938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e772688 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e772700 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e772780 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1531e7727f8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e7729f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e76bd98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e772b40 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e772bb8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e772c38 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1531e772cb0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e76c2b8 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e76be88 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e76bf00 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e76bf78 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e76bff8 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1531e76c070 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e76c800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e76c4b8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e76c530 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e76c5b0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1531e76c628 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1531e76c6a0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1531e76c8c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e770d98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e76ca18 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e76ca90 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e76cb10 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1531e76cb88 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e76cc00 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e771360 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e770e90 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e770f08 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e770f80 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e771000 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1531e771078 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e7710f0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e771720 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1531e771458 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1531e7714d0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1531e771550 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1531e771970 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1531e771800 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1531e771b88 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1531e773ea8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1531e771c50 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1531e771cc8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1531e7740c0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1531e773f80 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1531e774268 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1531e774190 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1531e7743f0 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1531e774628 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1531e7744b8 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1531e774530 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1531e7747d8 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1531e774700 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1531e774a88 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1531e7748a8 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e774920 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1531e779eb0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1531e774b60 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1531e774be0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1531e774c58 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1531e77a1b0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1531e779f90 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e77a008 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1531e77a4a8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e77a288 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1531e77a300 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e77a7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1531e77a640 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1531e77a858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e77ab18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1531e77a998 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1531e775e00 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e77abe8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1531e77ac60 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e776050 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e775ed8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1531e775f50 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e7762b8 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1531e776128 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e776468 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1531e776388 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e776618 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1531e776538 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e7769b8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e7766e8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1531e776760 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e7767d8 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e776ca8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e776a98 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1531e776b10 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e776b88 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e77aff0 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e77ade0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1531e77ae58 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e77aed0 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e77b2e0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e77b0d0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1531e77b148 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e77b1c0 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e77b5e0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e77b3c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e77b438 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e77b830 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e77b6b8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e77b730 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e77ba80 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e77b908 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e77b980 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e77bcd0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e77bb58 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e77bbd0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e778088 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e777db0 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1531e777e28 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e777ea0 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e7784e0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e778168 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1531e7781e0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e778258 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e7782d0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e778898 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e7785c8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1531e778640 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e7786b8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e778b88 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e778978 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1531e7789f0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e778a68 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e776ec0 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e778c68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e778ce0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e776da0 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e777248 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e776fa0 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e777018 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e777090 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e777108 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e7776b0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e777330 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7773a8 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e777420 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e777498 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e777bb8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e777798 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e777810 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e777888 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e777900 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e777978 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e77c000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e77bdf0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e77be68 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e77bee0 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1531e77c0b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e77c560 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e77c2b8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e77c330 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e77c3a8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e77c420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1531e77c620 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e77c8d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e77c760 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1531e77c7d8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e77ca90 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1531e77c9b0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e778dc0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e77cb60 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1531e77cbd8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e77cc50 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e779018 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e778ea0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e778f18 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e779300 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e7790f0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e779168 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7791e0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e779688 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e7793e0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e779458 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7794d0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e779548 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e779850 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1531e779770 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e779a98 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e779920 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e779998 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e774d80 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e779b70 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e779be8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e774fd0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e774e58 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e774ed0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e775220 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e7750a8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e775120 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7755c8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e7752f8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e775370 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e7753e8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e7758b8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e7756a8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e775720 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e775798 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e775ba8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e775998 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e775a10 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e775a88 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e781028 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e775c88 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1531e775d00 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e780e40 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e781318 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e781108 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1531e781180 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e7811f8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e781608 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e7813f8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1531e781470 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e7814e8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e781a60 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e7816e8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1531e781760 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e7817d8 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e781850 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e77ee20 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e781b48 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1531e781bc0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e781c38 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e781cb0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e77f1b0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e77ef08 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1531e77ef80 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e77eff8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e77f070 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e77f620 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e77f298 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e77f310 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e77f388 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e77f400 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e77f9b0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e77f708 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e77f780 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e77f7f8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e77f870 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e77fd40 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e77fa98 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e77fb10 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e77fb88 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e77fc00 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e782278 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e781e60 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e781ed8 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e781f50 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e781fc8 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e782040 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e7826a8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e782368 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7823e0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e782458 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e7824d0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e782548 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e782ad8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e782798 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e782810 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e782888 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e782900 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e782978 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e782d40 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e782bc8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e782c40 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e782fd8 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e782e60 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e782ed8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7832c0 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e7830b0 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e783128 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e7831a0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e783710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e783468 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7834e0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e783558 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e7835d0 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e7837d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e783d48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e783918 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e783990 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e783a08 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e783a80 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e783af8 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7842c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e783f80 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e783ff8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e784070 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e7840e8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1531e784160 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1531e784388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e784990 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e7844d0 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e784548 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7845c0 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e784638 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e7846b0 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e784728 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e77ce40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e784c58 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e784cd0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1531e77cef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1531e77d008 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1531e77d588 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e77d2c0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e77d338 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e77d3b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1531e77d640 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1531e77d758 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1531e77dcf8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e77da18 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e77da90 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e77db08 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1531e77ddb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1531e77dee8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1531e77e520 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e77e1a8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e77e220 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e77e298 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1531e77e310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1531e77e5e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1531e77e700 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1531e77ea08 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1531e77e828 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1531e77e8a0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e77e918 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1531e7865a0 <line:37:1, line:44:1>
|   |-DeclStmt 0x1531e77eb50 <line:38:5, col:21>
|   | `-VarDecl 0x1531e77eae8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1531e77ebe8 <line:39:5, col:13>
|   | `-VarDecl 0x1531e77eb80 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1531e785fc0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1531e785fa8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1531e785ec0 <col:34> '<builtin fn type>' Function 0x1531e77ecd8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1531e785ef8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1531e77eae8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1531e785f30 <col:29> 'const wchar_t *' lvalue ParmVar 0x1531e77e918 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1531e786280 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1531e785ff0 <col:5> 'int' lvalue Var 0x1531e77eb80 '_Ret' 'int'
|   | `-CallExpr 0x1531e7861c0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1531e7861a8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1531e786028 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1531e782278 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1531e786208 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e786048 <col:27> 'wchar_t *' lvalue ParmVar 0x1531e77e828 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1531e786220 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e786068 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1531e77e8a0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1531e786238 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e786088 <col:44> 'const wchar_t *' lvalue ParmVar 0x1531e77e918 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1531e786250 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1531e786110 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1531e7860e8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1531e7860a8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1531e786268 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1531e786130 <col:59> 'va_list':'char *' lvalue Var 0x1531e77eae8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1531e786530 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1531e786518 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1531e786468 <col:34> '<builtin fn type>' Function 0x1531e786300 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1531e7864a0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1531e77eae8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1531e786590 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1531e786578 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1531e786558 <col:12> 'int' lvalue Var 0x1531e77eb80 '_Ret' 'int'
|-FunctionDecl 0x1531e77ecd8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1531e77ed78 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1531e77ede8 <col:34> Implicit
|-FunctionDecl 0x1531e786300 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1531e7863a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1531e786410 <col:34> Implicit
|-FunctionDecl 0x1531e786898 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1531e7865f0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1531e786668 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7866e0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e786758 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1531e786b80 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1531e786b70 <line:51:5, col:62>
|     `-CallExpr 0x1531e786ab0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1531e786a98 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1531e786970 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1531e782278 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1531e786af8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e786990 <col:27> 'wchar_t *' lvalue ParmVar 0x1531e7865f0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1531e786b10 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e7869b0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1531e786668 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1531e786b28 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e7869d0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1531e7866e0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1531e786b40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1531e786a58 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1531e786a30 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1531e7869f0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1531e786b58 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1531e786a78 <col:59> 'va_list':'char *' lvalue ParmVar 0x1531e786758 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1531e792f70 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1531e786ba8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1531e786c20 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e786c98 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e786d10 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1531e7934e8 <line:61:1, line:68:1>
|   |-DeclStmt 0x1531e7930c0 <line:62:5, col:21>
|   | `-VarDecl 0x1531e793058 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1531e793158 <line:63:5, col:13>
|   | `-VarDecl 0x1531e7930f0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1531e793200 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1531e7931e8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1531e793170 <col:34> '<builtin fn type>' Function 0x1531e77ecd8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1531e793190 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1531e793058 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1531e7931c8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1531e786d10 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1531e793400 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1531e793230 <col:5> 'int' lvalue Var 0x1531e7930f0 '_Ret' 'int'
|   | `-CallExpr 0x1531e793340 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1531e793328 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1531e793268 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1531e782278 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1531e793388 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e793288 <col:27> 'wchar_t *' lvalue ParmVar 0x1531e786ba8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1531e7933a0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e7932a8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1531e786c20 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1531e7933b8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e7932c8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1531e786c98 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1531e7933d0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e7932e8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1531e786d10 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1531e7933e8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1531e793308 <col:64> 'va_list':'char *' lvalue Var 0x1531e793058 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1531e793478 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1531e793460 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1531e793420 <col:34> '<builtin fn type>' Function 0x1531e786300 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1531e793440 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1531e793058 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1531e7934d8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1531e7934c0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1531e7934a0 <col:12> 'int' lvalue Var 0x1531e7930f0 '_Ret' 'int'
|-FunctionDecl 0x1531e793878 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1531e793538 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1531e7935b0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e793628 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e7936a0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1531e793718 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1531e793b00 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1531e793af0 <line:75:5, col:67>
|     `-CallExpr 0x1531e793a30 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1531e793a18 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1531e793958 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1531e782278 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1531e793a78 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e793978 <col:27> 'wchar_t *' lvalue ParmVar 0x1531e793538 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1531e793a90 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e793998 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1531e7935b0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1531e793aa8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e7939b8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1531e793628 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1531e793ac0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e7939d8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1531e7936a0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1531e793ad8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1531e7939f8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1531e793718 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1531e793d48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e793b28 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1531e793ba0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1531e793fc0 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1531e793e20 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e793e98 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e7942a8 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1531e794098 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e794110 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1531e794188 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1531e7945c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e794448 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1531e7944c0 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1531e794670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e794a80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e794870 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1531e7948e8 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e794960 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e794b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e794df0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e794c78 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1531e794cf0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e7920f8 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e794ec8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1531e791f60 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e791fd8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7924d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e792298 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1531e792310 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1531e792580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e792a58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e792780 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1531e7927f8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e792870 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e792b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e792dc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e792c50 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1531e792cc8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e797148 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e792ea0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1531e796fb0 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e797028 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7975c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e7972e8 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1531e797360 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7973d8 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1531e797680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e797c00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e797880 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1531e7978f8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e797970 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e7979e8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e797cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e795000 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e797e00 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1531e797e78 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e797ef0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e795388 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e7950e0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1531e795158 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7951d0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e795248 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e795610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1531e795530 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1531e7956b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e795a30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e7958b8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1531e795930 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e795ae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e795d00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1531e795c20 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1531e795fa0 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1531e795dd0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1531e795e48 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e796298 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1531e796080 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1531e7960f8 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1531e796648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e796430 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1531e7964a8 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1531e7966f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e796b00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e796840 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1531e7968b8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1531e796930 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1531e78ff40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1531e796ca0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1531e796d18 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1531e796d90 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1531e78fff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7904a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1531e790140 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1531e7901b8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1531e790230 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1531e7902a8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1531e790700 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1531e790590 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1531e790940 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e7907d0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1531e790848 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1531e790af8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1531e790a18 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1531e790de8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e790bc8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1531e790c40 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e79e1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1531e79e0f0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1531e79e270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e79e488 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1531e79e3b0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1531e79e6c8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1531e79e558 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1531e79e5d0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1531e79e910 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1531e79e7a0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1531e79e818 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1531e79eac0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1531e79e9e8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1531e79ec68 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1531e79eb90 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1531e79ee18 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e79ed38 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1531e79d010 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1531e79eee8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1531e79d388 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1531e79d0e8 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1531e79d160 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e79d1d8 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e79d250 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1531e79d7b0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1531e79d478 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1531e79d4f0 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e79d568 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e79d5e0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e79d658 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1531e79dac0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1531e79d8a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1531e79d920 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1531e79d9a0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1531e79dc80 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1531e79dba0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1531e79df70 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1531e79dd50 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1531e79ddd0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1531e79de50 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1531e79c120 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1531e79c040 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1531e79c498 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1531e79c1f8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1531e79c270 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e79c2e8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e79c360 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1531e79c700 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1531e79c588 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1531e79c600 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1531e79ca40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1531e79c8c0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1531e79c940 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1531e79caf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1531e79cda8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1531e79ce48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1531e79f1c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1531e79f048 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1531e79f0c8 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1531e79f270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1531e79f528 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1531e79f5c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1531e79f868 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1531e79f788 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1531e79f910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1531e79fb90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1531e79fc30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1531e79fed8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1531e79fdf8 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1531e79ff80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1531e798258 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1531e798178 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1531e798300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1531e798640 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1531e7984c8 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1531e798540 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1531e7986f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1531e7989a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1531e798a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x1531e798d18 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1531e798cb0 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1531e798c50 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1531e798c00 'int (void)' sugar
|     | `-FunctionProtoType 0x1531e6fb190 'int (void)' cdecl
|     |   `-BuiltinType 0x1531cbde640 'int'
|     `-ParenType 0x1531e798c00 'int (void)' sugar
|       `-FunctionProtoType 0x1531e6fb190 'int (void)' cdecl
|         `-BuiltinType 0x1531cbde640 'int'
|-RecordDecl 0x1531e798d70 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x1531e798e30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1531e798ea8 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x1531e798f18 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x1531e7a50b0 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x1531e798f70 'struct _div_t' sugar
|   `-RecordType 0x1531e798e10 'struct _div_t'
|     `-Record 0x1531e798d70 '_div_t'
|-RecordDecl 0x1531e7a5120 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x1531e7a51e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1531e7a5258 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x1531e7a52c8 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x1531e7a5378 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x1531e7a5320 'struct _ldiv_t' sugar
|   `-RecordType 0x1531e7a51c0 'struct _ldiv_t'
|     `-Record 0x1531e7a5120 '_ldiv_t'
|-RecordDecl 0x1531e7a53e8 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x1531e7a54a0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1531e7a5518 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x1531e7a5588 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x1531e7a5638 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x1531e7a55e0 'struct _lldiv_t' sugar
|   `-RecordType 0x1531e7a5480 'struct _lldiv_t'
|     `-Record 0x1531e7a53e8 '_lldiv_t'
|-RecordDecl 0x1531e7a56d0 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x1531e7a5790 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1531e7a5890 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x1531e7a5948 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x1531e7a58f0 'struct _LDOUBLE' sugar
|   `-RecordType 0x1531e7a5770 '_LDOUBLE'
|     `-Record 0x1531e7a56d0 ''
|-RecordDecl 0x1531e7a59b8 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x1531e7a5a88 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x1531e7a5b38 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x1531e7a5ae0 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x1531e7a5a50 '_CRT_DOUBLE'
|     `-Record 0x1531e7a59b8 ''
|-RecordDecl 0x1531e7a5ba8 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x1531e7a5c78 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x1531e7a5d28 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x1531e7a5cd0 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x1531e7a5c40 '_CRT_FLOAT'
|     `-Record 0x1531e7a5ba8 ''
|-RecordDecl 0x1531e7a5d98 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x1531e7a5e68 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x1531e7a5f18 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x1531e7a5ec0 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x1531e7a5e30 '_LONGDOUBLE'
|     `-Record 0x1531e7a5d98 ''
|-RecordDecl 0x1531e7a5fb0 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x1531e7a60a0 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1531e7a61a0 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x1531e7a6258 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x1531e7a6200 'struct _LDBL12' sugar
|   `-RecordType 0x1531e7a6050 '_LDBL12'
|     `-Record 0x1531e7a5fb0 ''
|-TypedefDecl 0x1531e7a6450 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1531e7a63f0 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1531e7a6390 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1531e7a6340 'void (void)' sugar
|     | `-FunctionProtoType 0x1531e6a7c30 'void (void)' cdecl
|     |   `-BuiltinType 0x1531cbde5a0 'void'
|     `-ParenType 0x1531e7a6340 'void (void)' sugar
|       `-FunctionProtoType 0x1531e6a7c30 'void (void)' cdecl
|         `-BuiltinType 0x1531cbde5a0 'void'
|-FunctionDecl 0x1531e7a6650 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x1531e7a64e0 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1531e7a6868 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x1531e7a6cb8 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x1531e7a6c30 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x1531e7a6bd0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x1531e7a6b80 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x1531e6e3db0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x1531cbde5a0 'void'
|     |   |-PointerType 0x1531e6a8000 'const wchar_t *'
|     |   | `-QualType 0x1531e6a7fb1 'const wchar_t' const
|     |   |   `-TypedefType 0x1531e6a7fb0 'wchar_t' sugar
|     |   |     |-Typedef 0x1531e6a78a0 'wchar_t'
|     |   |     `-BuiltinType 0x1531cbde6c0 'unsigned short'
|     |   |-PointerType 0x1531e6a8000 'const wchar_t *'
|     |   | `-QualType 0x1531e6a7fb1 'const wchar_t' const
|     |   |   `-TypedefType 0x1531e6a7fb0 'wchar_t' sugar
|     |   |     |-Typedef 0x1531e6a78a0 'wchar_t'
|     |   |     `-BuiltinType 0x1531cbde6c0 'unsigned short'
|     |   |-PointerType 0x1531e6a8000 'const wchar_t *'
|     |   | `-QualType 0x1531e6a7fb1 'const wchar_t' const
|     |   |   `-TypedefType 0x1531e6a7fb0 'wchar_t' sugar
|     |   |     |-Typedef 0x1531e6a78a0 'wchar_t'
|     |   |     `-BuiltinType 0x1531cbde6c0 'unsigned short'
|     |   |-BuiltinType 0x1531cbde6e0 'unsigned int'
|     |   `-TypedefType 0x1531e6a8210 'uintptr_t' sugar
|     |     |-Typedef 0x1531cbdf3c0 'uintptr_t'
|     |     `-BuiltinType 0x1531cbde720 'unsigned long long'
|     `-ParenType 0x1531e7a6b80 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x1531e6e3db0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x1531cbde5a0 'void'
|         |-PointerType 0x1531e6a8000 'const wchar_t *'
|         | `-QualType 0x1531e6a7fb1 'const wchar_t' const
|         |   `-TypedefType 0x1531e6a7fb0 'wchar_t' sugar
|         |     |-Typedef 0x1531e6a78a0 'wchar_t'
|         |     `-BuiltinType 0x1531cbde6c0 'unsigned short'
|         |-PointerType 0x1531e6a8000 'const wchar_t *'
|         | `-QualType 0x1531e6a7fb1 'const wchar_t' const
|         |   `-TypedefType 0x1531e6a7fb0 'wchar_t' sugar
|         |     |-Typedef 0x1531e6a78a0 'wchar_t'
|         |     `-BuiltinType 0x1531cbde6c0 'unsigned short'
|         |-PointerType 0x1531e6a8000 'const wchar_t *'
|         | `-QualType 0x1531e6a7fb1 'const wchar_t' const
|         |   `-TypedefType 0x1531e6a7fb0 'wchar_t' sugar
|         |     |-Typedef 0x1531e6a78a0 'wchar_t'
|         |     `-BuiltinType 0x1531cbde6c0 'unsigned short'
|         |-BuiltinType 0x1531cbde6e0 'unsigned int'
|         `-TypedefType 0x1531e6a8210 'uintptr_t' sugar
|           |-Typedef 0x1531cbdf3c0 'uintptr_t'
|           `-BuiltinType 0x1531cbde720 'unsigned long long'
|-FunctionDecl 0x1531e7a6eb0 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x1531e7a6d40 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x1531e7a3098 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x1531e7a3280 <line:245:9, col:41> col:30 used _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1531e7a3490 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1531e7a3350 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1531e7a36e0 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1531e7a3568 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x1531e7a3900 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x1531e7a3b40 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x1531e7a39d0 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x1531e7a3d90 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x1531e7a3c18 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x1531e7aa0e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x1531e7aa180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7aa440 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x1531e7aa4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1531e7aa628 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x1531e7aa6c0 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x1531e7aa7b0 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x1531e7aa848 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x1531e7aa8e0 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x1531e7aaa38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x1531e7aaaa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1531e7aaca0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x1531e7aad08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7aafc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x1531e7aae50 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x1531e7ab260 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x1531e7ab0f0 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x1531e7ab3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x1531e7ab460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7ab680 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1531e7ab5a8 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x1531e7ab830 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1531e7ab758 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x1531e7aba80 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1531e7abb20 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1531e7abb90 prev 0x1531e7aba80 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1531e7ab908 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x1531e7abd40 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1531e7abde0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1531e7abe50 prev 0x1531e7abd40 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1531e7abc68 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x1531e7abfd8 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x1531e7a4080 prev 0x1531e7abfd8 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1531e7a4340 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1531e7a4150 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x1531e7a41d0 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x1531e7a4500 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x1531e7a45a0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1531e7a4610 <col:19> Implicit
| `-ConstAttr 0x1531e7a4668 <col:19> Implicit
|-FunctionDecl 0x1531e7a4690 prev 0x1531e7a4500 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x1531e7a4420 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x1531e7a4780 <col:19> Inherited Implicit
| `-ConstAttr 0x1531e7a47a8 <col:19> Inherited Implicit
|-FunctionDecl 0x1531e7a4938 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x1531e7a49d8 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x1531e7a4a48 <col:19> Implicit
| `-ConstAttr 0x1531e7a4aa0 <col:19> Implicit
|-FunctionDecl 0x1531e7a4ac8 prev 0x1531e7a4938 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x1531e7a47e8 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x1531e7a4bb8 <col:19> Inherited Implicit
| `-ConstAttr 0x1531e7a4be0 <col:19> Inherited Implicit
|-FunctionDecl 0x1531e7a4d68 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x1531e7a4e08 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x1531e7a4e78 <col:19> Implicit
| `-ConstAttr 0x1531e7a4ed0 <col:19> Implicit
|-FunctionDecl 0x1531e7a4ef8 prev 0x1531e7a4d68 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x1531e7a4c20 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x1531e7a4fe8 <col:19> Inherited Implicit
| `-ConstAttr 0x1531e7a5010 <col:19> Inherited Implicit
|-FunctionDecl 0x1531e7b1218 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x1531e7b1150 <col:35> col:42 'long long'
|-FunctionDecl 0x1531e7b1518 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x1531e7b13b0 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1531e7b1738 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x1531e7b15f0 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x1531e7b1a30 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x1531e7b1810 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x1531e7b1888 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7b1bf0 <line:430:43, col:86> col:58 used atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1531e7b1b10 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x1531e7b1ef0 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x1531e7b1cc8 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1531e7b1d40 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7ac100 <line:432:24, col:67> col:39 used atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x1531e7b1fd0 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x1531e7ac400 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x1531e7ac1d8 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1531e7ac250 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7ac628 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1531e7ac4e0 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x1531e7ac920 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1531e7ac700 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1531e7ac778 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7ad220 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1531e7aca00 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x1531e7aca80 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x1531e7acaf8 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7acb70 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7aced0 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1531e7acf50 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x1531e7ad9a8 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1531e7ad320 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x1531e7ad3a0 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x1531e7ad418 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7ad490 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7ad768 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1531e7b2160 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1531e7adaa0 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x1531e7adb18 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7adb90 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7addf8 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1531e7ade78 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x1531e7b2728 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1531e7b2258 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x1531e7b22d0 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7b2348 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7b2528 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1531e7b2928 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x1531e7b29c8 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x1531e7b2a38 <col:47> Implicit
| `-ConstAttr 0x1531e7b2a90 <col:47> Implicit
|-FunctionDecl 0x1531e7b2ab8 prev 0x1531e7b2928 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x1531e7b2818 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x1531e7b2ba8 <col:47> Inherited Implicit
| `-ConstAttr 0x1531e7b2bd0 <col:47> Inherited Implicit
|-FunctionDecl 0x1531e7b2d58 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x1531e7b2df8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x1531e7b2e68 <col:47> Implicit
| `-ConstAttr 0x1531e7b2ec0 <col:47> Implicit
|-FunctionDecl 0x1531e7b2ee8 prev 0x1531e7b2d58 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x1531e7b2c10 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x1531e7b2fd8 <col:47> Inherited Implicit
| `-ConstAttr 0x1531e7b3000 <col:47> Inherited Implicit
|-FunctionDecl 0x1531e7ae158 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x1531e7ae1f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x1531e7ae268 <col:49> Implicit
| `-ConstAttr 0x1531e7ae2c0 <col:49> Implicit
|-FunctionDecl 0x1531e7ae2e8 prev 0x1531e7ae158 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x1531e7b3040 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x1531e7ae3d8 <col:49> Inherited Implicit
| `-ConstAttr 0x1531e7ae400 <col:49> Inherited Implicit
|-FunctionDecl 0x1531e7ae688 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x1531e7ae468 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x1531e7ae4e8 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x1531e7ae978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1531e7ae828 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x1531e7aea20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7aef38 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1531e7aebb8 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1531e7aec38 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e7aecb0 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7aed30 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x1531e7b3340 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x1531e7af028 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x1531e7af0a0 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x1531e7b3170 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x1531e7b37a8 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x1531e7b3428 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x1531e7b34a8 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e7b3520 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7b35a0 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1531e7b3bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1531e7b3958 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x1531e7b39d8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1531e7b3a58 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1531e7b3cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7b0188 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x1531e7b3df8 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1531e7b3e78 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e7b3ef0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7b3f70 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x1531e7b05d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x1531e7b0338 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x1531e7b03b8 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e7b0438 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x1531e7b0690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7b0b58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x1531e7b07d8 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1531e7b0858 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e7b08d0 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7b0950 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x1531e7b0fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x1531e7b0d08 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x1531e7b0d88 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e7b0e08 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x1531e7b1060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7af310 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1531e7af230 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x1531e7af560 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1531e7af3e8 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x1531e7af460 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7af8d8 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1531e7af640 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x1531e7af6c0 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x1531e7af740 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x1531e7afd40 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1531e7af9c0 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x1531e7afa40 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x1531e7afac0 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x1531e7afb38 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7b5190 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1531e7afe30 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x1531e7afeb0 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x1531e7aff30 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x1531e7b5600 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1531e7b5278 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x1531e7b52f8 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x1531e7b5378 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x1531e7b53f0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7b5938 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x1531e7b5718 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x1531e7b5798 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x1531e7b5c58 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x1531e7b5a38 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x1531e7b5ab8 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x1531e7b60b8 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x1531e7b5d38 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x1531e7b5db8 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e7b5e30 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7b5eb0 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x1531e7bc578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1531e7bc2d8 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x1531e7bc358 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x1531e7bc3d8 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x1531e7bc630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7bc9a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x1531e7bc778 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x1531e7bc7f0 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e7bcd48 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e7bca80 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x1531e7bcaf8 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7bcb70 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7bcfa0 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x1531e7bce30 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x1531e7b8288 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x1531e7bd078 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1531e7bd0f0 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7b8588 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1531e7b8368 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1531e7b83e0 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e7b8930 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e7b8668 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1531e7b86e0 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7b8758 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7b8ce8 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1531e7b8a10 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1531e7b8a90 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x1531e7b8b08 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e7b61a0 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e7b8dc8 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1531e7b8e48 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x1531e7b8ec0 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7b8f38 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7b66a0 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x1531e7b6288 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1531e7b6300 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7b6378 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7b63f8 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x1531e7b6470 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e7b6b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1531e7b6850 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e7b68d0 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x1531e7b6948 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e7b6bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7ba238 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e7b6d18 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1531e7b6d90 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7b6e08 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7b6e88 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x1531e7b6f00 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7b6f78 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7ba768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e7ba3f0 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e7ba470 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x1531e7ba4e8 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7ba560 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e7ba828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7baa28 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1531e7babd8 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e7baaf8 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x1531e7badf0 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x1531e7bacb0 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x1531e7bb0b0 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x1531e7bb150 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e7bb1f0 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1531e7bb268 prev 0x1531e7bb0b0 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x1531e7baec8 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1531e7baf48 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x1531e7bb618 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1531e7bb348 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x1531e7bb3c8 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x1531e7bb440 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7bb998 <line:544:39> col:39 implicit used strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1531e7bba38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1531e7bbaa0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1531e7bbb08 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1531e7bbb88 prev 0x1531e7bb998 <col:24, col:130> col:39 used strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x1531e7bb700 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x1531e7bb780 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x1531e7bb800 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1531e7bbff0 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1531e7bbc70 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1531e7bbcf0 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x1531e7bbd70 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x1531e7bbde8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7bd330 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1531e7bd3d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1531e7bd438 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1531e7bd4a0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1531e7bd520 prev 0x1531e7bd330 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1531e7bc0e0 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1531e7bc160 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x1531e7bd210 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x1531e7bd8c0 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1531e7bd608 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1531e7bd688 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x1531e7bd708 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x1531e7bd780 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7bdc48 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1531e7bdce8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1531e7bdd50 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1531e7bddb8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1531e7bde38 prev 0x1531e7bdc48 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x1531e7bd9b0 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1531e7bda30 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x1531e7bdab0 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1531e7b9280 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1531e7bdf20 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x1531e7bdfa0 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x1531e7be020 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x1531e7be098 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7b9590 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1531e7b9630 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1531e7b9698 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1531e7b9700 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1531e7b9780 prev 0x1531e7b9590 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1531e7b9370 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x1531e7b93f0 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x1531e7b9470 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1531e7b9b20 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1531e7b9868 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x1531e7b98e8 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x1531e7b9968 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1531e7b99e0 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7b9e00 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x1531e7b9ea0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e7b9f08 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1531e7b9f80 prev 0x1531e7b9e00 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x1531e7b9c10 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x1531e7b9c90 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x1531e7be398 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1531e7ba060 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x1531e7ba0e0 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x1531e7ba158 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7be670 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x1531e7be710 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e7be778 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1531e7be7f0 prev 0x1531e7be670 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x1531e7be480 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1531e7be500 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x1531e7beba8 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1531e7be8d0 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1531e7be950 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x1531e7be9c8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7bed70 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1531e7bec90 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x1531e7c0240 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x1531e7bee48 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1531e7beec8 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e7bef40 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7befc0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1531e7c0688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1531e7c03f0 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x1531e7c0470 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x1531e7c04f0 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x1531e7c0740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7c0b70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x1531e7c0948 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1531e7c09c0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1531e7c0c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7c10f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1531e7c0e28 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1531e7c0ea0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1531e7c0f18 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e7c11b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7c16c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x1531e7c1350 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x1531e7c13d0 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x1531e7c1448 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7c14c0 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x1531e7c1bd0 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1531e7c17b8 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x1531e7c1838 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x1531e7c18b0 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c1928 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1531e7c19a0 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7c20e0 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e7c1cc0 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1531e7c1d40 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x1531e7c1db8 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c1e30 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1531e7c1ea8 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e7bf5d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e7bf308 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x1531e7bf380 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1531e7bf3f8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e7bf688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7bfc88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e7bf7c8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1531e7bf848 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x1531e7bf8c0 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7bf938 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1531e7bf9b0 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7bfa28 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7c82c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e7bfe48 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x1531e7bfec0 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1531e7bff38 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7bffb0 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e7c8380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7c86e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x1531e7c8780 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1531e7c87e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e7c8860 prev 0x1531e7c86e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x1531e7c84c0 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c8538 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1531e7c8910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1531e7c8968 <line:615:33> restrict
|-FunctionDecl 0x1531e7c8b00 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1531e7c89c0 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x1531e7c8ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1531e7c8da8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x1531e7c8e48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e7c8eb8 prev 0x1531e7c8da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x1531e7c8c28 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1531e7c8f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1531e7c8fb8 <line:615:33> restrict
|-FunctionDecl 0x1531e7c4280 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x1531e7c4320 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x1531e7c4388 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e7c4400 prev 0x1531e7c4280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x1531e7c9010 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x1531e7c9088 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1531e7c44b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1531e7c4508 <line:615:33> restrict
|-FunctionDecl 0x1531e7c4828 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1531e7c4560 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x1531e7c45d8 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c4650 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1531e7c48e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1531e7c4938 <line:615:33> restrict
|-FunctionDecl 0x1531e7c4a68 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1531e7c4990 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x1531e7c4b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1531e7c4d08 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x1531e7c4b90 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c4c08 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1531e7c4db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1531e7c4e10 <line:615:33> restrict
|-FunctionDecl 0x1531e7c5128 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x1531e7c4e60 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c4ed8 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c4f50 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1531e7c51e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1531e7c5238 <line:615:33> restrict
|-FunctionDecl 0x1531e7c94f8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1531e7c92e8 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x1531e7c9360 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c93d8 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1531e7c95b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1531e7c9608 <line:615:33> restrict
|-FunctionDecl 0x1531e7c99d0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1531e7c9660 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x1531e7c96d8 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c9750 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c97c8 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1531e7c9a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1531e7c9ae8 <line:615:33> restrict
|-FunctionDecl 0x1531e7c9de8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1531e7c9b40 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x1531e7c9bb8 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c9c30 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7c9ca8 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1531e7c9ea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1531e7c9f00 <line:615:33> restrict
|-FunctionDecl 0x1531e7ca398 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1531e7c9f58 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x1531e7c9fd0 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7ca048 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7ca0c0 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7ca138 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1531e7ca460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1531e7ca4b8 <line:615:33> restrict
|-FunctionDecl 0x1531e7ca7d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x1531e7ca510 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x1531e7ca588 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7ca600 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e7cac28 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1531e7ca8b8 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x1531e7ca930 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7ca9a8 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7caa28 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x1531e7cb0a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x1531e7cadd8 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x1531e7cae50 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e7caed0 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x1531e7cb158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7c35e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1531e7c3270 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x1531e7c32e8 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7c3360 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7c33e0 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x1531e7c3a60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x1531e7c3798 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x1531e7c3810 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e7c3890 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x1531e7c3b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7c3fd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1531e7c3c60 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x1531e7c3cd8 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7c3d50 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7c3dd0 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x1531e7c6490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x1531e7c4188 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x1531e7c4200 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e7c62b8 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x1531e7c6548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7c68b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1531e7c6688 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e7c6708 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1531e7c6c58 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1531e7c6988 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e7c6a08 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1531e7c6a80 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7c7018 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1531e7c6d38 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e7c6db8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1531e7c6e38 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1531e7c74c0 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1531e7c70f8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e7c7178 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1531e7c71f8 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x1531e7c72b0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7c7888 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1531e7c75a8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e7c7628 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1531e7c76a8 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x1531e7c7cf0 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1531e7c7968 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e7c79e8 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1531e7c7a68 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x1531e7c7ae0 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7c80b8 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1531e7c7dd8 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e7c7e58 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1531e7c7ed8 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1531e7cc580 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1531e7c8198 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e7c8218 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1531e7cc300 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x1531e7cc378 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7cc948 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1531e7cc668 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e7cc6e8 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1531e7cc768 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1531e7ccdb0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1531e7cca28 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e7ccaa8 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1531e7ccb28 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1531e7ccba0 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7cd0c0 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1531e7cce98 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e7ccf18 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1531e7cb468 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1531e7cd198 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e7cd218 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1531e7cd290 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7cb770 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1531e7cb548 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e7cb5c8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1531e7cbb18 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1531e7cb848 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e7cb8c8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1531e7cb940 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7cbe30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1531e7cbcb8 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x1531e7cbed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7c5338 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1531e7cc018 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1531e7cc090 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7cc108 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7cc180 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x1531e7c56f0 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e7c5428 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x1531e7c54a0 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x1531e7c5518 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x1531e7c58b0 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1531e7c57d0 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x1531e7c5af8 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x1531e7c5980 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x1531e7c5df0 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1531e7c5bc8 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e7c5c40 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7c5fa8 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1531e7c5ec8 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x1531e7cd350 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1531e7c6078 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e7c60f0 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7cd5a8 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x1531e7cd428 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x1531e7cd8a0 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1531e7cd678 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e7cd6f0 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7cdaf8 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1531e7cd978 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x1531e7cddf0 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1531e7cdbc8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e7cdc40 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7ce248 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1531e7cded0 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1531e7cdf48 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7cdfc0 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7ce040 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x1531e7ce6e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x1531e7ce410 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x1531e7ce488 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7ce508 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x1531e7ce798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7cec58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1531e7ce8e0 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1531e7ce958 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7ce9d0 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7cea50 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x1531e7cf0d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x1531e7cee08 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x1531e7cee80 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1531e7cef00 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1531e7cf188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e75eee0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1531e75ee00 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x1531e75f128 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1531e75efb0 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e75f028 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e75f420 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1531e75f200 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e75f280 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1531e75f300 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1531e75f7b8 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1531e75f500 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e75f580 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1531e75f600 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x1531e75f678 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e75fac0 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1531e75f8a0 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e75f920 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1531e75f9a0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1531e883178 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1531e75fba0 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1531e75fc20 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1531e75fca0 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x1531e75fd18 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e883538 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x1531e883268 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x1531e8832e8 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x1531e883360 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e883af8 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1531e883620 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e883698 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e883718 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1531e883798 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x1531e883818 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x1531e883898 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x1531e883ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1531e883cb8 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1531e883d38 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x1531e883db8 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x1531e883e38 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x1531e8840b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8805c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1531e8801d0 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e880248 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e8802c8 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1531e880348 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x1531e8803c8 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x1531e880448 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x1531e880a40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1531e880780 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1531e880800 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x1531e880880 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x1531e880900 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x1531e880b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e880fc8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x1531e880c48 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e880cc0 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e880d40 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x1531e880dc0 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x1531e8864a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1531e886208 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x1531e886288 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x1531e886308 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x1531e886560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e886940 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x1531e886718 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x1531e886798 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x1531e886cc0 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x1531e886a98 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x1531e886b18 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x1531e887040 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x1531e886e18 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x1531e886e98 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x1531e8843e8 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1531e884110 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x1531e884190 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x1531e884208 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e884798 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1531e8844c8 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x1531e884548 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x1531e8845c0 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e884b48 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x1531e884878 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x1531e8848f8 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x1531e884970 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e884e20 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1531e884ec0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1531e884f28 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1531e884fa0 <col:46> Implicit
|-FunctionDecl 0x1531e884ff8 prev 0x1531e884e20 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1531e884c30 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1531e884cb0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1531e887140 <col:46> Inherited Implicit
|-FunctionDecl 0x1531e887300 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1531e8873a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1531e887408 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1531e887480 <col:46> Implicit
|-FunctionDecl 0x1531e8874d8 prev 0x1531e887300 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1531e887180 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1531e887200 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1531e8875d0 <col:46> Inherited Implicit
|-FunctionDecl 0x1531e887ae8 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1531e887610 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x1531e887688 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e887708 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x1531e887788 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x1531e887808 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x1531e887888 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x1531e888090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1531e887ca8 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x1531e887d28 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x1531e887da8 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x1531e887e28 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x1531e887ea8 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x1531e885148 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e885420 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1531e8852b0 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1531e8855d8 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1531e8854f8 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x1531e885898 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x1531e8856b0 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x1531e885730 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x1531e885b60 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1531e885c00 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1531e885c68 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1531e885ce0 <col:30> Implicit
|-FunctionDecl 0x1531e885d38 prev 0x1531e885b60 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1531e885978 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1531e8859f8 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1531e885e30 <col:30> Inherited Implicit
|-FunctionDecl 0x1531e886060 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1531e888150 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1531e8881b8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1531e888230 <col:34> Implicit
|-FunctionDecl 0x1531e888288 prev 0x1531e886060 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1531e885e70 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1531e885ef0 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1531e888380 <col:34> Inherited Implicit
|-FunctionDecl 0x1531e888540 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1531e8885e0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1531e888648 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1531e8886c0 <col:30> Implicit
|-FunctionDecl 0x1531e888718 prev 0x1531e888540 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1531e8883c0 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1531e888440 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1531e888810 <col:30> Inherited Implicit
|-FunctionDecl 0x1531e8889d0 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1531e888a70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1531e888ad8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1531e888b50 <col:34> Implicit
|-FunctionDecl 0x1531e888ba8 prev 0x1531e8889d0 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1531e888850 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1531e8888d0 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1531e888ca0 <col:34> Inherited Implicit
|-FunctionDecl 0x1531e889058 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x1531e888ce0 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x1531e888d60 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x1531e888de0 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x1531e888e58 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8894d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x1531e889238 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x1531e8892b8 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x1531e889338 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x1531e889588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e889b70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x1531e889790 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x1531e889810 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x1531e889890 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x1531e889910 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x1531e889990 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x1531e889c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8823e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x1531e889d80 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x1531e889e00 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x1531e889e78 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e889ef8 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x1531e889f70 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e889ff0 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x1531e88a068 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e88a0e8 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x1531e8820f0 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e882790 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1531e8824f8 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x1531e882578 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x1531e8825f8 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x1531e882b30 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e882870 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x1531e8828e8 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x1531e882960 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8901d0 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e882c10 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x1531e882c88 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e882d00 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1531e882d78 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1531e882df0 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1531e882e68 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x1531e8907a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e890388 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x1531e890400 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1531e890478 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1531e8904f0 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1531e890568 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x1531e890868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e890a88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1531e8909a8 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x1531e890d78 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e890b58 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x1531e890bd0 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x1531e88d1a0 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e890e50 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1531e890ec8 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1531e890f40 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x1531e890fb8 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e88d610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1531e88d348 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1531e88d3c0 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1531e88d438 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x1531e88d6c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e88dce0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1531e88d8c8 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1531e88d940 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1531e88d9b8 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1531e88da30 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1531e88daa8 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x1531e88dda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7dcf10 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e88dee8 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1531e88df60 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1531e88dfd8 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e88e050 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1531e88e0c8 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7dcab0 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1531e7dcb28 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7dcba0 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x1531e7dcc18 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e7dd230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x1531e7dd128 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x1531e7dd2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x1531e7dd6c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1531e7dd4e8 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x1531e7dd568 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x1531e7dd778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x1531e7ddac0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x1531e7dd980 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x1531e7ddb68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x1531e7de0d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1531e7dde10 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1531e7dde90 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x1531e7ddf10 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x1531e7ddf90 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x1531e7de190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x1531e7de288 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7de7c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1531e7de500 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1531e7de580 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x1531e7de600 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x1531e7de680 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x1531e7de880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x1531e7de978 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e72b828 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1531e72b608 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x1531e72b688 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x1531e72b708 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x1531e72b8e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x1531e72b9d8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e72be70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1531e72bc50 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x1531e72bcd0 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e72bd50 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x1531e72bf28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x1531e72c020 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e72c4b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1531e72c298 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x1531e72c318 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x1531e72c398 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x1531e72c570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x1531e72c668 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e72c900 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1531e72c820 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x1531e72c9a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x1531e72cd88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1531e72cb70 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x1531e72cbf0 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x1531e72cc70 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x1531e72ce40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x1531e72d2e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1531e72d0c8 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x1531e72d148 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x1531e72d1c8 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x1531e72d3a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x1531e72f4e0 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e72f6c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1531e72f5f0 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1531e72fb20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1531e72f7a0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1531e72f820 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1531e72f8a0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1531e72f918 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e72fee8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1531e72ff88 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1531e72fff0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1531e730058 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e7300d8 prev 0x1531e72fee8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1531e72fc10 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1531e72fc90 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1531e72fd08 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e730498 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1531e7301c0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1531e730240 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1531e7302b8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e730900 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e730580 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1531e730600 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1531e730678 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7306f0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e730c08 <line:51:32> col:32 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1531e730ca8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1531e730d10 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1531e730d78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e730df8 prev 0x1531e730c08 <col:16, col:144> col:32 used memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1531e7309f0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1531e730a70 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1531e730ae8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e7311b8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1531e731258 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1531e7312c0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1531e731328 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e7313a8 prev 0x1531e7311b8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1531e730ee0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1531e730f60 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1531e730fd8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e736848 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1531e7364d0 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1531e736548 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7365c8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1531e736640 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1531e736c08 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1531e736ca8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1531e736d10 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1531e736d78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e736df8 prev 0x1531e736c08 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1531e736938 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1531e7369b8 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1531e736a30 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e737238 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1531e7372d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1531e737340 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1531e7373a8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1531e737410 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e737498 prev 0x1531e737238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1531e736f80 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1531e737000 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1531e737080 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1531e7370f8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e737558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1531e737938 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1531e737720 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1531e7377a0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1531e737818 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e7379f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1531e737de0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1531e737b18 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1531e737b90 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e737c10 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1531e738170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1531e737f88 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1531e738008 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1531e738220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e738650 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1531e738368 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1531e7383e0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1531e738460 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1531e7389e0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1531e738a80 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1531e738ae8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1531e738b60 prev 0x1531e7389e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1531e7387f8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1531e738878 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1531e738c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e738f68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1531e738d58 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1531e738dd0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1531e738e50 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1531e739290 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1531e739330 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1531e739398 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1531e739410 prev 0x1531e739290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1531e739110 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1531e739190 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1531e7394c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e739788 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1531e739828 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e739890 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1531e739908 prev 0x1531e739788 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1531e739608 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1531e739688 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1531e739ac0 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1531e739b60 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1531e739bd0 prev 0x1531e739ac0 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1531e7399e8 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1531e739e18 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1531e739ca8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1531e739d20 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e73a068 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1531e739ef8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1531e739f70 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1531e73a398 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1531e73a388 <line:132:5, col:51>
|     `-ConditionalOperator 0x1531e73a358 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1531e73a1c8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1531e73a1a8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1531e73a178 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1531e73a130 <col:13> 'const char *' lvalue ParmVar 0x1531e739ef8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1531e73a190 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1531e73a150 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1531e73a340 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1531e73a1e8 <col:24> 'int' 0
|       `-CallExpr 0x1531e73a2e0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1531e73a2c8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1531e73a210 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1531e739e18 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1531e73a310 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1531e73a230 <col:36> 'const char *' lvalue ParmVar 0x1531e739ef8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1531e73a328 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1531e73a250 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1531e739f70 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e73a6a0 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1531e73a3c8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1531e73a440 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1531e73a4f0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1531e73a568 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1531e73a9a8 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1531e73aa48 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1531e73aab0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1531e73ab18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e73ab98 prev 0x1531e73a9a8 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1531e73a790 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1531e73a810 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1531e73a888 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e73ad60 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1531e73ac80 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1531e73b020 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1531e73b0c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e73b128 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1531e73b1a0 prev 0x1531e73b020 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1531e73ae38 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1531e73aeb8 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1531e73b400 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1531e73b280 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1531e73b300 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1531e73b660 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1531e73b4e0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1531e73b560 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1531e73ba18 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1531e73b740 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1531e73b7c0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1531e73b838 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e73bc80 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1531e73bb00 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1531e73bb80 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1531e73bf78 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1531e73bd60 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1531e73bde0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1531e73be58 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e73c1e0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1531e73c060 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1531e73c0e0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1531e73c500 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1531e73c2c0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1531e73c340 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1531e73c3b8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e73c8b8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1531e73c5e8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1531e73c668 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1531e73c6e0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e73cd20 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e73c9a0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1531e73ca20 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1531e73ca98 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e73cb10 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e73d028 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1531e73ce10 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1531e73ce90 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1531e73cf08 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e73d3c0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e73d110 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1531e73d190 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1531e73d208 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e73d280 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e73d6d8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1531e73d778 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e73d7e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1531e73d858 prev 0x1531e73d6d8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1531e73d4b0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1531e73d530 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1531e73dad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1531e73d9f8 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1531e73db80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e73df50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1531e73dcc8 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1531e73dd40 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e73ddc0 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1531e73e228 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1531e73e2c8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1531e73e338 prev 0x1531e73e228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1531e73e0f8 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1531e73e3e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e73e750 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1531e73e540 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1531e73e5b8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e73e638 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1531e73ea18 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1531e73e838 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1531e73e8b0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e73ec98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1531e73ebb8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1531e73ed40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e73f150 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e73ee88 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1531e73ef00 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e73ef78 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e73f520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1531e73f2f8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1531e73f370 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e73f5d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e73fa88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1531e73f718 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1531e73f790 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1531e73f810 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1531e73f888 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1531e73fe50 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1531e73fef0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1531e73ff58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e73ffc0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e740040 prev 0x1531e73fe50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1531e73fc38 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1531e73fcb8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1531e73fd30 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e7400f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e740458 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1531e740520 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1531e740588 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e7405f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e740670 prev 0x1531e740458 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1531e740240 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1531e7402c0 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1531e740338 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e740970 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1531e740758 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1531e7407d8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1531e740850 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e740d08 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e740a58 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1531e740ad8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1531e740b50 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e740bc8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7410a0 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1531e740df8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1531e740e70 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1531e740ef0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1531e740f68 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1531e741468 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1531e741508 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1531e741570 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e7415d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e741658 prev 0x1531e741468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1531e741250 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1531e7412d0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1531e741348 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e741710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e741bc8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1531e741858 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1531e7418d0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e741950 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1531e7419c8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e742048 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1531e741d78 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1531e741df8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1531e741e70 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e742100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e7423c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1531e742468 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e742530 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1531e7425a8 prev 0x1531e7423c8 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1531e742248 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1531e7422c8 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1531e742808 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1531e7428a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e742910 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1531e742988 prev 0x1531e742808 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1531e742688 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1531e742708 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1531e742b48 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1531e742a68 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1531e742d98 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1531e742e38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e742ea0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1531e742f18 prev 0x1531e742d98 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1531e742c20 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1531e742ca0 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1531e743178 <line:203:70> col:70 implicit used strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1531e743218 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e743280 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1531e7432f8 prev 0x1531e743178 <col:54, col:130> col:70 used strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1531e742ff8 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1531e743078 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1531e743618 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1531e7436b8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1531e743720 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1531e743798 prev 0x1531e743618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1531e743498 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1531e743518 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1531e743848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e743c28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1531e743990 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1531e743a10 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1531e743a90 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1531e743e80 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1531e743d10 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1531e743d88 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e744100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1531e744020 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1531e7441a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e744540 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e7442f0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1531e744368 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e7443e0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e744860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1531e7446e8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1531e744760 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e744910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e744d20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1531e744dc0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1531e744e28 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1531e744e90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e744f10 prev 0x1531e744d20 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1531e744a58 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1531e744ad8 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1531e744b50 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e745368 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e744ff8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1531e745078 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1531e7450f0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e745168 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e7455d8 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1531e745678 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1531e7456e8 prev 0x1531e7455d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1531e7454f8 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1531e745790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1531e745ad8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1531e745958 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1531e7459d8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1531e745b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1531e745ed0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1531e745d50 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1531e745dd0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1531e745f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1531e746228 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1531e746148 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1531e7462d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1531e8c41b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1531e746498 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1531e8c4020 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1531e8c4098 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e8c4270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1531e8c4650 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1531e8c4438 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1531e8c44b8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1531e8c4530 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e8c4708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1531e8c49b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1531e8c48d0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1531e8c4a58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1531e8c4da0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1531e8c4c20 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1531e8c4ca0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1531e8c4e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1531e8c50f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1531e8c5018 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1531e8c51a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1531e8c5398 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1531e8c52c0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1531e8c5730 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1531e8c5468 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1531e8c54e0 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1531e8c5558 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1531e8c5ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8c58d0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e8c5948 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1531e8c5b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8c5ef8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1531e8c5f98 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1531e8c6030 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1531e8c60a8 prev 0x1531e8c5ef8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1531e8c5cd8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e8c5d50 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1531e8c6360 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1531e8c6400 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1531e8c6468 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1531e8c64e0 prev 0x1531e8c6360 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1531e8c6180 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1531e8c61f8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1531e8c67c0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1531e8c65b8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1531e8c6630 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1531e8c66a8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1531e8c6ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8c6960 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e8c69d8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1531e8c6b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8c6ed8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8c6cc0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e8c6d38 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1531e8c7120 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1531e8c71c0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1531e8c7230 prev 0x1531e8c7120 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1531e8c6fb0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1531e8c7518 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e8c7300 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1531e8c7378 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8c7760 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1531e8c75f0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1531e8c7668 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1531e8c7af8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1531e8c7ae8 <line:307:5, col:56>
|     `-ConditionalOperator 0x1531e8c7ab8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1531e8c7920 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1531e8c7900 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1531e8c78d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1531e8c7828 <col:13> 'const wchar_t *' lvalue ParmVar 0x1531e8c75f0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1531e8c78e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1531e8c78b0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1531e8c7888 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1531e8c7848 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1531e8c7aa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1531e8c7940 <col:29> 'int' 0
|       `-CallExpr 0x1531e8c7a40 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1531e8c7a28 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1531e8c7968 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1531e8c7518 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1531e8c7a70 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1531e8c7988 <col:41> 'const wchar_t *' lvalue ParmVar 0x1531e8c75f0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1531e8c7a88 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1531e8c79a8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1531e8c7668 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8c7e88 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1531e8c7b20 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1531e8c7b98 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1531e8c7c10 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1531e8c7c88 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1531e8c8248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e8c8040 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e8c80b8 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1531e8c8130 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e8c8300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8c8708 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1531e8c87a8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1531e8c8810 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1531e8c8878 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1531e8c88f8 prev 0x1531e8c8708 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1531e8c8440 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8c84b8 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1531e8c8530 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8c8c78 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1531e8c89d8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1531e8c8a50 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1531e8c8ac8 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1531e8c8b40 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1531e8c9028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e8c8e20 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1531e8c8e98 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1531e8c8f10 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e8c90e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8c9390 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8c9220 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e8c9298 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1531e8c95d8 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1531e8c9468 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e8c94e0 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1531e8c9820 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8c96b0 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e8c9728 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1531e8c9a68 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8c98f8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1531e8c9970 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1531e8c9d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8c9c00 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1531e8c9c78 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1531e8c9e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8cb260 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1531e8c9f60 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1531e8c9fd8 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1531e8cb088 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1531e8cb580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1531e8cb408 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1531e8cb628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8cba30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1531e8cb768 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1531e8cb7e0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e8cb860 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1531e8cbca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1531e8cbbd0 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1531e8cbd50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8cc110 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1531e8cbe90 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1531e8cbf08 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e8cbf80 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1531e8cc368 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8cc1f0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1531e8cc268 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1531e8cc708 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1531e8cc440 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8cc4b8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1531e8cc530 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e8cc9f8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e8cc7e8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8cc860 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1531e8cc8d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8cce50 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e8ccad8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8ccb50 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1531e8ccbc8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e8ccc40 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e8d5388 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1531e8ccf38 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1531e8ccfb0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e8d5110 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1531e8d5188 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8d57f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1531e8d5530 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1531e8d55a8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1531e8d5620 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e8d58a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8d5ac0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1531e8d59e8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1531e8d5e50 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1531e8d5b90 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1531e8d5c08 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e8d5c80 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1531e8d6208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1531e8d5ff0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1531e8d6068 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1531e8d62b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8d6568 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e8d63f8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1531e8d6470 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8d67d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1531e8d6700 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1531e8d6880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8d6c80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e8d69c0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1531e8d6a38 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e8d6ab0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e8d7038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1531e8d6e20 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1531e8d6e98 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e8db140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8db3f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e8db280 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1531e8db2f8 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8db660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1531e8db588 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1531e8db708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8dba50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e8db848 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1531e8db8c0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e8db938 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e8dbd60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1531e8dbbf0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1531e8dbc68 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1531e8dbe10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1531e8dc210 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e8dbf50 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1531e8dbfc8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1531e8dc040 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8dc658 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e8dc2f0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1531e8dc368 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1531e8dc3e0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e8dc458 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e8dc8b8 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8dc740 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1531e8dc7b8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1531e8dcba0 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1531e8dc990 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8dca08 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1531e8dca80 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e8dcdf8 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8dcc80 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1531e8dccf8 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1531e8cd0d0 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1531e8dced0 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8dcf48 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1531e8dcfc0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e8cd3c0 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e8cd1b0 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8cd228 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1531e8cd2a0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8cd748 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e8cd4a0 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8cd518 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1531e8cd590 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e8cd608 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e8cda40 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e8cd830 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8cd8a8 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1531e8cd920 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1531e8cddc8 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1531e8cdb20 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8cdb98 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1531e8cdc10 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1531e8cdc88 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1531e8ce028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1531e8cdf50 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1531e8ce0d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1531e8ce408 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8ce290 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8ce308 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1531e8ce4b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1531e8ce888 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1531e8ce678 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8ce6f0 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1531e8ce768 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e8ce940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1531e8ced08 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1531e8ceb00 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1531e8ceb78 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1531e8cebf0 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1531e8cedc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1531e8dd150 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1531e8cef80 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1531e8dd1f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1531e8dd528 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1531e8dd3b8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1531e8dd430 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1531e8dd5d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1531e8dd870 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1531e8dd798 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1531e8dd918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1531e8ddbb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1531e8ddad8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1531e8ddc58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1531e8ddf90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1531e8dde18 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1531e8dde90 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1531e8de040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x1531e8de430 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 used _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x1531e8de160 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x1531e8de1d8 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x1531e8de258 <col:98, col:107> col:107 _Line 'unsigned int'
|-TypedefDecl 0x1531e8de518 <D:\Microsoft Visual Studio 12.0\VC\include\signal.h:28:1, col:13> col:13 sig_atomic_t 'int'
| `-BuiltinType 0x1531cbde640 'int'
|-FunctionDecl 0x1531e8de6d0 <line:88:1, col:45> col:25 __pxcptinfoptrs 'void **(void) __attribute__((cdecl))':'void **(void)' extern
|-FunctionDecl 0x1531e8dec20 <line:94:9, col:100> col:33 signal 'void (*(int, void (*)(int) __attribute__((cdecl))))(int) __attribute__((cdecl)) __attribute__((cdecl))'
| |-ParmVarDecl 0x1531e8de7a0 <col:45, col:49> col:49 _SigNum 'int'
| `-ParmVarDecl 0x1531e8de9a8 <col:67, col:83> col:83 _Func 'void (*)(int) __attribute__((cdecl))'
|-FunctionDecl 0x1531e8dede0 <line:97:9, col:43> col:21 raise 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1531e8ded00 <col:32, col:36> col:36 _SigNum 'int'
|-FunctionDecl 0x1531e8df040 <.//openssl//file_jk/after\apps/apps.h:43:1, col:55> col:5 used app_RAND_load_file 'int (const char *, int)'
| |-ParmVarDecl 0x1531e8deeb8 <col:24, col:36> col:36 file 'const char *'
| `-ParmVarDecl 0x1531e8def38 <col:42, col:46> col:46 dont_warn 'int'
|-FunctionDecl 0x1531e8df210 <line:44:1, col:41> col:5 app_RAND_write_file 'int (const char *)'
| `-ParmVarDecl 0x1531e8df160 <col:25, col:37> col:37 file 'const char *'
|-FunctionDecl 0x1531e8df368 <line:48:1, col:36> col:6 app_RAND_allow_write_file 'void (void)'
|-FunctionDecl 0x1531e8df520 <line:49:1, col:36> col:6 used app_RAND_load_files 'long (char *)'
| `-ParmVarDecl 0x1531e8df438 <col:26, col:32> col:32 file 'char *'
|-VarDecl 0x1531e8df5f8 <line:54:1, col:14> col:14 default_config_file 'char *' extern
|-VarDecl 0x1531e8df690 <line:55:1, col:13> col:13 invalid bio_in 'int *' extern
|-VarDecl 0x1531e8df710 <line:56:1, col:13> col:13 invalid bio_out 'int *' extern
|-VarDecl 0x1531e8df790 <line:57:1, col:13> col:13 invalid bio_err 'int *' extern
|-FunctionDecl 0x1531e8df8f0 <line:58:1, col:27> col:6 invalid dup_bio_in 'int *(int)'
| `-ParmVarDecl 0x1531e8df810 <col:17, col:21> col:21 format 'int'
|-FunctionDecl 0x1531e8dfa60 <line:59:1, col:28> col:6 invalid dup_bio_out 'int *(int)'
| `-ParmVarDecl 0x1531e8df9b0 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x1531e8dfbd0 <line:60:1, col:28> col:6 invalid dup_bio_err 'int *(int)'
| `-ParmVarDecl 0x1531e8dfb20 <col:18, col:22> col:22 format 'int'
|-FunctionDecl 0x1531e8dfec0 <line:61:1, col:66> col:6 invalid bio_open_owner 'int *(const char *, int, int)'
| |-ParmVarDecl 0x1531e8dfc90 <col:21, col:33> col:33 filename 'const char *'
| |-ParmVarDecl 0x1531e8dfd10 <col:43, col:47> col:47 format 'int'
| `-ParmVarDecl 0x1531e8dfd90 <col:55, col:59> col:59 private 'int'
|-FunctionDecl 0x1531e8e01c0 <line:62:1, col:66> col:6 invalid bio_open_default 'int *(const char *, char, int)'
| |-ParmVarDecl 0x1531e8dff90 <col:23, col:35> col:35 filename 'const char *'
| |-ParmVarDecl 0x1531e8e0008 <col:45, col:50> col:50 mode 'char'
| `-ParmVarDecl 0x1531e8e0088 <col:56, col:60> col:60 format 'int'
|-FunctionDecl 0x1531e8e0478 <line:63:1, col:72> col:6 invalid bio_open_default_quiet 'int *(const char *, char, int)'
| |-ParmVarDecl 0x1531e8e0290 <col:29, col:41> col:41 filename 'const char *'
| |-ParmVarDecl 0x1531e8e0308 <col:51, col:56> col:56 mode 'char'
| `-ParmVarDecl 0x1531e8e0388 <col:62, col:66> col:66 format 'int'
|-FunctionDecl 0x1531e8e0630 <line:64:1, col:43> col:7 invalid app_load_config 'int *(const char *)'
| `-ParmVarDecl 0x1531e8e0548 <col:23, col:35> col:35 filename 'const char *'
|-FunctionDecl 0x1531e8e07a0 <line:65:1, col:49> col:7 invalid app_load_config_quiet 'int *(const char *)'
| `-ParmVarDecl 0x1531e8e06f0 <col:29, col:41> col:41 filename 'const char *'
|-FunctionDecl 0x1531e8e0930 <line:66:1, col:40> col:5 invalid app_load_modules 'int (const int *)'
| `-ParmVarDecl 0x1531e8e0860 <col:22, col:34> col:34 invalid config 'const int *'
|-FunctionDecl 0x1531e8e0a90 <line:67:1, col:23> col:6 unbuffer 'void (FILE *)'
| `-ParmVarDecl 0x1531e8e09e8 <col:15, col:21> col:21 fp 'FILE *'
|-FunctionDecl 0x1531e8e0c28 <line:68:1, col:27> col:6 invalid wait_for_async 'void (int *)'
| `-ParmVarDecl 0x1531e8e0b68 <col:21, col:26> col:26 invalid s 'int *'
|-FunctionDecl 0x1531e8e0da8 <line:73:1, col:52> col:6 invalid corrupt_signature 'void (const int *)'
| `-ParmVarDecl 0x1531e8e0ce8 <col:24, col:43> col:43 invalid signature 'const int *'
|-FunctionDecl 0x1531e8e3180 <line:74:1, line:75:28> line:74:5 invalid set_cert_times 'int (int *, const char *, const char *, int)'
| |-ParmVarDecl 0x1531e8e0e68 <col:20, col:26> col:26 invalid x 'int *'
| |-ParmVarDecl 0x1531e8e0ee8 <col:29, col:41> col:41 startdate 'const char *'
| |-ParmVarDecl 0x1531e8e0f68 <col:52, col:64> col:64 enddate 'const char *'
| `-ParmVarDecl 0x1531e8e0fe8 <line:75:20, col:24> col:24 days 'int'
|-VarDecl 0x1531e8e32b8 <line:291:1, col:32> col:19 OPT_HELP_STR 'const char []' extern
|-VarDecl 0x1531e8e3358 <line:292:1, col:32> col:19 OPT_MORE_STR 'const char []' extern
|-RecordDecl 0x1531e8e33d8 <line:293:9, line:304:1> line:293:16 struct options_st definition
| |-FieldDecl 0x1531e8e34a8 <line:294:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x1531e8e3518 <line:295:5, col:9> col:9 retval 'int'
| |-FieldDecl 0x1531e8e3588 <line:302:5, col:9> col:9 valtype 'int'
| `-FieldDecl 0x1531e8e35f8 <line:303:5, col:17> col:17 helpstr 'const char *'
|-TypedefDecl 0x1531e8e36a8 <line:293:1, line:304:3> col:3 referenced OPTIONS 'struct options_st':'struct options_st'
| `-ElaboratedType 0x1531e8e3650 'struct options_st' sugar
|   `-RecordType 0x1531e8e3470 'struct options_st'
|     `-Record 0x1531e8e33d8 'options_st'
|-RecordDecl 0x1531e8e3718 <line:311:9, line:314:1> line:311:16 struct string_int_pair_st definition
| |-FieldDecl 0x1531e8e37e8 <line:312:5, col:17> col:17 name 'const char *'
| `-FieldDecl 0x1531e8e3858 <line:313:5, col:9> col:9 retval 'int'
|-TypedefDecl 0x1531e8e3908 <line:311:1, line:314:3> col:3 referenced OPT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x1531e8e38b0 'struct string_int_pair_st' sugar
|   `-RecordType 0x1531e8e37b0 'struct string_int_pair_st'
|     `-Record 0x1531e8e3718 'string_int_pair_st'
|-TypedefDecl 0x1531e8e3980 <line:311:1, line:314:13> col:13 STRINT_PAIR 'struct string_int_pair_st':'struct string_int_pair_st'
| `-ElaboratedType 0x1531e8e38b0 'struct string_int_pair_st' sugar
|   `-RecordType 0x1531e8e37b0 'struct string_int_pair_st'
|     `-Record 0x1531e8e3718 'string_int_pair_st'
|-FunctionDecl 0x1531e8e3ac0 <line:334:1, col:37> col:7 used opt_progname 'char *(const char *)'
| `-ParmVarDecl 0x1531e8e3a10 <col:20, col:32> col:32 argv0 'const char *'
|-FunctionDecl 0x1531e8e3c50 <line:335:1, col:23> col:7 opt_getprog 'char *(void)'
|-FunctionDecl 0x1531e8e4010 <line:336:1, col:52> col:7 used opt_init 'char *(int, char **, const OPTIONS *)'
| |-ParmVarDecl 0x1531e8e3d20 <col:16, col:20> col:20 ac 'int'
| |-ParmVarDecl 0x1531e8e3da0 <col:24, col:31> col:31 av 'char **'
| `-ParmVarDecl 0x1531e8e3e98 <col:35, col:51> col:51 o 'const OPTIONS *'
|-FunctionDecl 0x1531e8e4180 <line:337:1, col:18> col:5 used opt_next 'int (void)'
|-FunctionDecl 0x1531e8e4480 <line:338:1, col:63> col:5 used opt_format 'int (const char *, unsigned long, int *)'
| |-ParmVarDecl 0x1531e8e4250 <col:16, col:28> col:28 s 'const char *'
| |-ParmVarDecl 0x1531e8e42d0 <col:31, col:45> col:45 flags 'unsigned long'
| `-ParmVarDecl 0x1531e8e4350 <col:52, col:57> col:57 result 'int *'
|-FunctionDecl 0x1531e8e46f0 <line:339:1, col:41> col:5 opt_int 'int (const char *, int *)'
| |-ParmVarDecl 0x1531e8e4568 <col:13, col:25> col:25 arg 'const char *'
| `-ParmVarDecl 0x1531e8e45e8 <col:30, col:35> col:35 result 'int *'
|-FunctionDecl 0x1531e8e4960 <line:340:1, col:53> col:5 opt_ulong 'int (const char *, unsigned long *)'
| |-ParmVarDecl 0x1531e8e47d0 <col:15, col:27> col:27 arg 'const char *'
| `-ParmVarDecl 0x1531e8e4850 <col:32, col:47> col:47 result 'unsigned long *'
|-FunctionDecl 0x1531e8e4c00 <line:341:1, col:43> col:5 opt_long 'int (const char *, long *)'
| |-ParmVarDecl 0x1531e8e4a40 <col:14, col:26> col:26 arg 'const char *'
| `-ParmVarDecl 0x1531e8e4af0 <col:31, col:37> col:37 result 'long *'
|-FunctionDecl 0x1531e8e4fd0 <line:352:1, col:66> col:5 used opt_pair 'int (const char *, const OPT_PAIR *, int *)'
| |-ParmVarDecl 0x1531e8e4ce0 <col:14, col:26> col:26 arg 'const char *'
| |-ParmVarDecl 0x1531e8e4dd8 <col:31, col:48> col:48 pairs 'const OPT_PAIR *'
| `-ParmVarDecl 0x1531e8e4e58 <col:55, col:60> col:60 result 'int *'
|-FunctionDecl 0x1531e8e9290 <line:353:1, col:60> col:5 invalid opt_cipher 'int (const char *, const int **)'
| |-ParmVarDecl 0x1531e8e50b8 <col:16, col:28> col:28 name 'const char *'
| `-ParmVarDecl 0x1531e8e91b0 <col:34, col:53> col:53 invalid cipherp 'const int **'
|-FunctionDecl 0x1531e8e9480 <line:354:1, col:48> col:5 invalid opt_md 'int (const char *, const int **)'
| |-ParmVarDecl 0x1531e8e9358 <col:12, col:24> col:24 name 'const char *'
| `-ParmVarDecl 0x1531e8e93e0 <col:30, col:45> col:45 invalid mdp 'const int **'
|-FunctionDecl 0x1531e8e95d0 <line:355:1, col:19> col:7 used opt_arg 'char *(void)'
|-FunctionDecl 0x1531e8e9728 <line:356:1, col:20> col:7 used opt_flag 'char *(void)'
|-FunctionDecl 0x1531e8e9880 <line:357:1, col:23> col:7 opt_unknown 'char *(void)'
|-FunctionDecl 0x1531e8e99d8 <line:358:1, col:21> col:7 opt_reset 'char *(void)'
|-FunctionDecl 0x1531e8e9b30 <line:359:1, col:21> col:8 opt_rest 'char **(void)'
|-FunctionDecl 0x1531e8e9c88 <line:360:1, col:22> col:5 used opt_num_rest 'int (void)'
|-FunctionDecl 0x1531e8e9eb0 <line:361:1, col:45> col:5 invalid opt_verify 'int (int, int *)'
| |-ParmVarDecl 0x1531e8e9d58 <col:16, col:20> col:20 i 'int'
| `-ParmVarDecl 0x1531e8e9dd8 <col:23, col:42> col:42 invalid vpm 'int *'
|-FunctionDecl 0x1531e8ea078 <line:362:1, col:35> col:6 used opt_help 'void (const OPTIONS *)'
| `-ParmVarDecl 0x1531e8e9f70 <col:15, col:31> col:31 list 'const OPTIONS *'
|-FunctionDecl 0x1531e8ea2e0 <line:363:1, col:56> col:5 opt_format_error 'int (const char *, unsigned long)'
| |-ParmVarDecl 0x1531e8ea150 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x1531e8ea1d0 <col:37, col:51> col:51 flags 'unsigned long'
|-RecordDecl 0x1531e8ea3a8 <line:365:9, line:369:1> line:365:16 struct args_st definition
| |-FieldDecl 0x1531e8ea478 <line:366:5, col:9> col:9 size 'int'
| |-FieldDecl 0x1531e8ea4e8 <line:367:5, col:9> col:9 argc 'int'
| `-FieldDecl 0x1531e8ea558 <line:368:5, col:12> col:12 argv 'char **'
|-TypedefDecl 0x1531e8ea608 <line:365:1, line:369:3> col:3 referenced ARGS 'struct args_st':'struct args_st'
| `-ElaboratedType 0x1531e8ea5b0 'struct args_st' sugar
|   `-RecordType 0x1531e8ea440 'struct args_st'
|     `-Record 0x1531e8ea3a8 'args_st'
|-FunctionDecl 0x1531e8ea8d0 <line:376:1, col:41> col:8 copy_argv 'char **(int *, char **)'
| |-ParmVarDecl 0x1531e8ea690 <col:18, col:23> col:23 argc 'int *'
| `-ParmVarDecl 0x1531e8ea780 <col:29, col:40> col:35 argv 'char **':'char **'
|-FunctionDecl 0x1531e8eac18 <line:381:1, col:45> col:6 win32_utf8argv 'void (int *, char ***)'
| |-ParmVarDecl 0x1531e8ea9b0 <col:21, col:26> col:26 argc 'int *'
| `-ParmVarDecl 0x1531e8eaad0 <col:32, col:44> col:39 argv 'char ***':'char ***'
|-RecordDecl 0x1531e8eace0 <line:385:9, line:388:1> line:385:16 struct pw_cb_data definition
| |-FieldDecl 0x1531e8eadb8 <line:386:5, col:17> col:17 referenced password 'const void *'
| `-FieldDecl 0x1531e8eae28 <line:387:5, col:17> col:17 referenced prompt_info 'const char *'
|-TypedefDecl 0x1531e8eaed8 <line:385:1, line:388:3> col:3 referenced PW_CB_DATA 'struct pw_cb_data':'struct pw_cb_data'
| `-ElaboratedType 0x1531e8eae80 'struct pw_cb_data' sugar
|   `-RecordType 0x1531e8ead80 'struct pw_cb_data'
|     `-Record 0x1531e8eace0 'pw_cb_data'
|-FunctionDecl 0x1531e8e1320 <line:390:1, col:77> col:5 used password_callback 'int (char *, int, int, PW_CB_DATA *)'
| |-ParmVarDecl 0x1531e8eaf60 <col:23, col:29> col:29 buf 'char *'
| |-ParmVarDecl 0x1531e8eafe0 <col:34, col:38> col:38 bufsiz 'int'
| |-ParmVarDecl 0x1531e8eb060 <col:46, col:50> col:50 verify 'int'
| `-ParmVarDecl 0x1531e8e1170 <col:58, col:70> col:70 cb_data 'PW_CB_DATA *'
|-FunctionDecl 0x1531e8e1498 <line:392:1, col:25> col:5 setup_ui_method 'int (void)'
|-FunctionDecl 0x1531e8e15e8 <line:393:1, col:28> col:6 destroy_ui_method 'void (void)'
|-FunctionDecl 0x1531e8e18f0 <line:395:1, col:37> col:5 chopup_args 'int (ARGS *, char *)'
| |-ParmVarDecl 0x1531e8e1728 <col:17, col:23> col:23 arg 'ARGS *'
| `-ParmVarDecl 0x1531e8e17a8 <col:28, col:34> col:34 buf 'char *'
|-FunctionDecl 0x1531e8e1d08 <line:401:1, line:402:43> line:401:6 invalid print_bignum_var 'void (int *, const int *, const char *, int, unsigned char *)'
| |-ParmVarDecl 0x1531e8e19d0 <col:23, <invalid sloc>> col:28 invalid 'int *'
| |-ParmVarDecl 0x1531e8e1a50 <col:30, <invalid sloc>> col:44 invalid 'const int *'
| |-ParmVarDecl 0x1531e8e1ad0 <col:46, col:56> col:57 'const char *'
| |-ParmVarDecl 0x1531e8e1b50 <line:402:23> col:26 'int'
| `-ParmVarDecl 0x1531e8e1c00 <col:28, col:42> col:43 'unsigned char *'
|-FunctionDecl 0x1531e8e2058 <line:403:1, col:65> col:6 invalid print_array 'void (int *, const char *, int, const unsigned char *)'
| |-ParmVarDecl 0x1531e8e1de8 <col:18, <invalid sloc>> col:23 invalid 'int *'
| |-ParmVarDecl 0x1531e8e1e68 <col:25, col:36> col:37 'const char *'
| |-ParmVarDecl 0x1531e8e1ee8 <col:39> col:42 'int'
| `-ParmVarDecl 0x1531e8e1f68 <col:44, col:64> col:65 'const unsigned char *'
|-FunctionDecl 0x1531e8e22c0 <line:404:1, col:54> col:5 set_cert_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x1531e8e2130 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x1531e8e21b0 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x1531e8e24f0 <line:405:1, col:54> col:5 set_name_ex 'int (unsigned long *, const char *)'
| |-ParmVarDecl 0x1531e8e23a0 <col:17, col:32> col:32 flags 'unsigned long *'
| `-ParmVarDecl 0x1531e8e2420 <col:39, col:51> col:51 arg 'const char *'
|-FunctionDecl 0x1531e8e2760 <line:406:1, col:49> col:5 set_ext_copy 'int (int *, const char *)'
| |-ParmVarDecl 0x1531e8e25d0 <col:18, col:23> col:23 copy_type 'int *'
| `-ParmVarDecl 0x1531e8e2650 <col:34, col:46> col:46 arg 'const char *'
|-FunctionDecl 0x1531e8e2a30 <line:407:1, col:58> col:5 invalid copy_extensions 'int (int *, int *, int)'
| |-ParmVarDecl 0x1531e8e2840 <col:21, col:27> col:27 invalid x 'int *'
| |-ParmVarDecl 0x1531e8e28c0 <col:30, col:40> col:40 invalid req 'int *'
| `-ParmVarDecl 0x1531e8e2940 <col:45, col:49> col:49 copy_type 'int'
|-FunctionDecl 0x1531e8e2de0 <line:408:1, col:78> col:5 used app_passwd 'int (const char *, const char *, char **, char **)'
| |-ParmVarDecl 0x1531e8e2b00 <col:16, col:28> col:28 arg1 'const char *'
| |-ParmVarDecl 0x1531e8e2b80 <col:34, col:46> col:46 arg2 'const char *'
| |-ParmVarDecl 0x1531e8e2c00 <col:52, col:59> col:59 pass1 'char **'
| `-ParmVarDecl 0x1531e8e2c80 <col:66, col:73> col:73 pass2 'char **'
|-FunctionDecl 0x1531e8e2f68 <line:409:1, col:31> col:5 invalid add_oid_section 'int (int *)'
| `-ParmVarDecl 0x1531e8e2ed0 <col:21, col:27> col:27 invalid conf 'int *'
|-FunctionDecl 0x1531e8e52c0 <line:410:1, col:71> col:7 invalid load_cert 'int *(const char *, int, const char *)'
| |-ParmVarDecl 0x1531e8e3028 <col:17, col:29> col:29 file 'const char *'
| |-ParmVarDecl 0x1531e8e30a8 <col:35, col:39> col:39 format 'int'
| `-ParmVarDecl 0x1531e8e5190 <col:47, col:59> col:59 cert_descrip 'const char *'
|-FunctionDecl 0x1531e8e5520 <line:411:1, col:50> col:11 invalid load_crl 'int *(const char *, int)'
| |-ParmVarDecl 0x1531e8e5390 <col:20, col:32> col:32 infile 'const char *'
| `-ParmVarDecl 0x1531e8e5410 <col:40, col:44> col:44 format 'int'
|-FunctionDecl 0x1531e8e5980 <line:412:1, line:413:72> line:412:11 invalid load_key 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x1531e8e55e8 <col:20, col:32> col:32 file 'const char *'
| |-ParmVarDecl 0x1531e8e5668 <col:38, col:42> col:42 format 'int'
| |-ParmVarDecl 0x1531e8e56e8 <col:50, col:54> col:54 maybe_stdin 'int'
| |-ParmVarDecl 0x1531e8e5768 <line:413:20, col:32> col:32 pass 'const char *'
| |-ParmVarDecl 0x1531e8e57e8 <col:38, col:46> col:46 invalid e 'int *'
| `-ParmVarDecl 0x1531e8e5868 <col:49, col:61> col:61 key_descrip 'const char *'
|-FunctionDecl 0x1531e8e5da8 <line:414:1, line:415:75> line:414:11 invalid load_pubkey 'int *(const char *, int, int, const char *, int *, const char *)'
| |-ParmVarDecl 0x1531e8e5a68 <col:23, col:35> col:35 file 'const char *'
| |-ParmVarDecl 0x1531e8e5ae8 <col:41, col:45> col:45 format 'int'
| |-ParmVarDecl 0x1531e8e5b68 <col:53, col:57> col:57 maybe_stdin 'int'
| |-ParmVarDecl 0x1531e8e5be8 <line:415:23, col:35> col:35 pass 'const char *'
| |-ParmVarDecl 0x1531e8e5c68 <col:41, col:49> col:49 invalid e 'int *'
| `-ParmVarDecl 0x1531e8e5ce8 <col:52, col:64> col:64 key_descrip 'const char *'
|-FunctionDecl 0x1531e8e60d0 <line:416:1, line:417:58> line:416:5 invalid load_certs 'int (const char *, int (*)())'
| |-ParmVarDecl 0x1531e8e5e90 <col:16, col:28> col:28 file 'const char *'
| `-ParmVarDecl 0x1531e8e5fb0 <col:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1531e8e62c8 <line:418:1, line:419:57> line:418:5 invalid load_crls 'int (const char *, int (*)())'
| |-ParmVarDecl 0x1531e8e6198 <col:15, col:27> col:27 file 'const char *'
| `-ParmVarDecl 0x1531e8e6228 <col:33, <invalid sloc>> col:33 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1531e8e6670 <line:420:1, line:421:52> line:420:13 invalid setup_verify 'int *(const char *, const char *, int, int)'
| |-ParmVarDecl 0x1531e8e6390 <col:26, col:38> col:38 CAfile 'const char *'
| |-ParmVarDecl 0x1531e8e6410 <col:46, col:58> col:58 CApath 'const char *'
| |-ParmVarDecl 0x1531e8e6490 <line:421:26, col:30> col:30 noCAfile 'int'
| `-ParmVarDecl 0x1531e8e6510 <col:40, col:44> col:44 noCApath 'int'
|-FunctionDecl 0x1531e8e6a50 <line:422:1, line:424:49> line:422:12 invalid ctx_set_verify_locations 'int (int *, const char *, const char *, int, int)'
| |-ParmVarDecl 0x1531e8e6748 <col:37, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x1531e8e67c8 <col:51, col:63> col:63 CAfile 'const char *'
| |-ParmVarDecl 0x1531e8e6848 <line:423:37, col:49> col:49 CApath 'const char *'
| |-ParmVarDecl 0x1531e8e68c8 <col:57, col:61> col:61 noCAfile 'int'
| `-ParmVarDecl 0x1531e8e6948 <line:424:37, col:41> col:41 noCApath 'int'
|-FunctionDecl 0x1531e8e6c50 <line:433:1, col:66> col:12 invalid ctx_set_ctlog_list_file 'int (int *, const char *)'
| |-ParmVarDecl 0x1531e8e6b30 <col:36, col:45> col:45 invalid ctx 'int *'
| `-ParmVarDecl 0x1531e8e6bb0 <col:50, col:62> col:62 path 'const char *'
|-FunctionDecl 0x1531e8e6e68 <line:437:1, col:51> col:9 invalid setup_engine 'int *(const char *, int)'
| |-ParmVarDecl 0x1531e8e6d18 <col:22, col:34> col:34 engine 'const char *'
| `-ParmVarDecl 0x1531e8e6d98 <col:42, col:46> col:46 debug 'int'
|-FunctionDecl 0x1531e8e6fc0 <line:438:1, col:30> col:6 invalid release_engine 'void (int *)'
| `-ParmVarDecl 0x1531e8e6f30 <col:21, col:29> col:29 invalid e 'int *'
|-FunctionDecl 0x1531e8e74b0 <line:441:1, line:445:49> line:441:16 invalid process_responder 'int *(int *, const char *, const char *, const char *, int, int (*)())'
| |-ParmVarDecl 0x1531e8e7080 <col:34, col:48> col:48 invalid req 'int *'
| |-ParmVarDecl 0x1531e8e7100 <line:442:34, col:46> col:46 host 'const char *'
| |-ParmVarDecl 0x1531e8e71a0 <col:52, col:64> col:64 path 'const char *'
| |-ParmVarDecl 0x1531e8e7220 <line:443:34, col:46> col:46 port 'const char *'
| |-ParmVarDecl 0x1531e8e72a0 <col:52, col:56> col:56 use_ssl 'int'
| `-ParmVarDecl 0x1531e8e7330 <line:444:34, <invalid sloc>> col:34 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1531e8e78e0 <line:449:1, line:450:66> line:449:5 invalid unpack_revinfo 'int (int **, int *, int **, int **, const char *)'
| |-ParmVarDecl 0x1531e8e75c8 <col:20, col:32> col:32 invalid prevtm 'int **'
| |-ParmVarDecl 0x1531e8e7648 <col:40, col:45> col:45 preason 'int *'
| |-ParmVarDecl 0x1531e8e76d0 <col:54, col:68> col:68 invalid phold 'int **'
| |-ParmVarDecl 0x1531e8e7758 <line:450:20, col:43> col:43 invalid pinvtm 'int **'
| `-ParmVarDecl 0x1531e8e77d8 <col:51, col:63> col:63 str 'const char *'
|-RecordDecl 0x1531e8e79a8 <line:465:9, line:467:1> line:465:16 struct db_attr_st definition
| `-FieldDecl 0x1531e8e7a78 <line:466:5, col:9> col:9 unique_subject 'int'
|-TypedefDecl 0x1531e8e7b28 <line:465:1, line:467:3> col:3 referenced DB_ATTR 'struct db_attr_st':'struct db_attr_st'
| `-ElaboratedType 0x1531e8e7ad0 'struct db_attr_st' sugar
|   `-RecordType 0x1531e8e7a40 'struct db_attr_st'
|     `-Record 0x1531e8e79a8 'db_attr_st'
|-RecordDecl 0x1531e8e7b98 <line:468:9, line:471:1> line:468:16 invalid struct ca_db_st definition
| |-FieldDecl 0x1531e8e7c80 <line:469:5, col:13> col:13 attributes 'DB_ATTR':'struct db_attr_st'
| `-FieldDecl 0x1531e8e7cf0 <line:470:5, col:13> col:13 invalid db 'int *'
|-TypedefDecl 0x1531e8e7df8 <line:468:1, line:471:3> col:3 referenced CA_DB 'struct ca_db_st':'struct ca_db_st'
| `-ElaboratedType 0x1531e8e7da0 'struct ca_db_st' sugar
|   `-RecordType 0x1531e8e7c30 'struct ca_db_st'
|     `-Record 0x1531e8e7b98 'ca_db_st'
|-FunctionDecl 0x1531e8e8010 <line:473:1, col:42> col:7 used app_malloc 'void *(int, const char *)'
| |-ParmVarDecl 0x1531e8e7e80 <col:18, col:22> col:22 sz 'int'
| `-ParmVarDecl 0x1531e8e7f00 <col:26, col:38> col:38 what 'const char *'
|-FunctionDecl 0x1531e8e82e0 <line:474:1, col:77> col:9 invalid load_serial 'int *(const char *, int, int **)'
| |-ParmVarDecl 0x1531e8e80f0 <col:21, col:33> col:33 serialfile 'const char *'
| |-ParmVarDecl 0x1531e8e8170 <col:45, col:49> col:49 create 'int'
| `-ParmVarDecl 0x1531e8e81f8 <col:57, col:72> col:72 invalid retai 'int **'
|-FunctionDecl 0x1531e8e8630 <line:475:1, line:476:37> line:475:5 invalid save_serial 'int (const char *, const char *, const int *, int **)'
| |-ParmVarDecl 0x1531e8e83b0 <col:17, col:29> col:29 serialfile 'const char *'
| |-ParmVarDecl 0x1531e8e8430 <col:41, col:53> col:53 suffix 'const char *'
| |-ParmVarDecl 0x1531e8e84b0 <col:61, col:75> col:75 invalid serial 'const int *'
| `-ParmVarDecl 0x1531e8e8538 <line:476:17, col:32> col:32 invalid retai 'int **'
|-FunctionDecl 0x1531e8e8940 <line:477:1, line:478:41> line:477:5 rotate_serial 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x1531e8e8708 <col:19, col:31> col:31 serialfile 'const char *'
| |-ParmVarDecl 0x1531e8e8788 <col:43, col:55> col:55 new_suffix 'const char *'
| `-ParmVarDecl 0x1531e8e8808 <line:478:19, col:31> col:31 old_suffix 'const char *'
|-FunctionDecl 0x1531e8e8b80 <line:479:1, col:44> col:5 invalid rand_serial 'int (int *, int *)'
| |-ParmVarDecl 0x1531e8e8a28 <col:17, col:25> col:25 invalid b 'int *'
| `-ParmVarDecl 0x1531e8e8aa8 <col:28, col:42> col:42 invalid ai 'int *'
|-FunctionDecl 0x1531e8e8ed8 <line:480:1, col:54> col:8 load_index 'CA_DB *(const char *, DB_ATTR *)'
| |-ParmVarDecl 0x1531e8e8c68 <col:19, col:31> col:31 dbfile 'const char *'
| `-ParmVarDecl 0x1531e8e8d38 <col:39, col:48> col:48 dbattr 'DB_ATTR *'
|-FunctionDecl 0x1531e8e90c0 <line:481:1, col:26> col:5 index_index 'int (CA_DB *)'
| `-ParmVarDecl 0x1531e8e8fb0 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x1531e7e22a0 <line:482:1, col:65> col:5 save_index 'int (const char *, const char *, CA_DB *)'
| |-ParmVarDecl 0x1531e7e2030 <col:16, col:28> col:28 dbfile 'const char *'
| |-ParmVarDecl 0x1531e7e20b0 <col:36, col:48> col:48 suffix 'const char *'
| `-ParmVarDecl 0x1531e7e2128 <col:56, col:63> col:63 db 'CA_DB *'
|-FunctionDecl 0x1531e7e2578 <line:483:1, line:484:40> line:483:5 rotate_index 'int (const char *, const char *, const char *)'
| |-ParmVarDecl 0x1531e7e2388 <col:18, col:30> col:30 dbfile 'const char *'
| |-ParmVarDecl 0x1531e7e2408 <col:38, col:50> col:50 new_suffix 'const char *'
| `-ParmVarDecl 0x1531e7e2488 <line:484:18, col:30> col:30 old_suffix 'const char *'
|-FunctionDecl 0x1531e7e2768 <line:485:1, col:26> col:6 free_index 'void (CA_DB *)'
| `-ParmVarDecl 0x1531e7e2658 <col:17, col:24> col:24 db 'CA_DB *'
|-FunctionDecl 0x1531e7e29a0 <line:489:1, col:70> col:5 invalid index_name_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x1531e7e2840 <col:20, col:43> col:43 invalid a 'const int *'
| `-ParmVarDecl 0x1531e7e28c0 <col:46, col:69> col:69 invalid b 'const int *'
|-FunctionDecl 0x1531e7e2bb8 <line:490:1, col:41> col:5 parse_yesno 'int (const char *, int)'
| |-ParmVarDecl 0x1531e7e2a68 <col:17, col:29> col:29 str 'const char *'
| `-ParmVarDecl 0x1531e7e2ae8 <col:34, col:38> col:38 def 'int'
|-FunctionDecl 0x1531e7e2ed0 <line:492:1, col:65> col:12 invalid parse_name 'int *(const char *, long, int)'
| |-ParmVarDecl 0x1531e7e2c98 <col:23, col:35> col:35 str 'const char *'
| |-ParmVarDecl 0x1531e7e2d18 <col:40, col:45> col:45 chtype 'long'
| `-ParmVarDecl 0x1531e7e2d98 <col:53, col:57> col:57 multirdn 'int'
|-FunctionDecl 0x1531e7e3230 <line:493:1, line:494:52> line:493:5 invalid args_verify 'int (char ***, int *, int *, int **)'
| |-ParmVarDecl 0x1531e7e2fa8 <col:17, col:25> col:25 pargs 'char ***'
| |-ParmVarDecl 0x1531e7e3028 <col:32, col:37> col:37 pargc 'int *'
| |-ParmVarDecl 0x1531e7e30a8 <line:494:17, col:22> col:22 badarg 'int *'
| `-ParmVarDecl 0x1531e7e3130 <col:30, col:50> col:50 invalid pm 'int **'
|-FunctionDecl 0x1531e7e3398 <line:495:1, col:40> col:6 invalid policies_print 'void (int *)'
| `-ParmVarDecl 0x1531e7e3308 <col:21, col:37> col:37 invalid ctx 'int *'
|-FunctionDecl 0x1531e7e3670 <line:496:1, col:56> col:5 invalid bio_to_mem 'int (unsigned char **, int, int *)'
| |-ParmVarDecl 0x1531e7e3488 <col:16, col:32> col:32 out 'unsigned char **'
| |-ParmVarDecl 0x1531e7e3508 <col:37, col:41> col:41 maxlen 'int'
| `-ParmVarDecl 0x1531e7e3588 <col:49, col:54> col:54 invalid in 'int *'
|-FunctionDecl 0x1531e7e3860 <line:497:1, col:58> col:5 invalid pkey_ctrl_string 'int (int *, const char *)'
| |-ParmVarDecl 0x1531e7e3740 <col:22, col:36> col:36 invalid ctx 'int *'
| `-ParmVarDecl 0x1531e7e37c0 <col:41, col:53> col:53 value 'const char *'
|-FunctionDecl 0x1531e7e3bb0 <line:498:1, line:499:62> line:498:5 invalid init_gen_str 'int (int **, const char *, int *, int)'
| |-ParmVarDecl 0x1531e7e3930 <col:18, col:33> col:33 invalid pctx 'int **'
| |-ParmVarDecl 0x1531e7e39b0 <line:499:18, col:30> col:30 algname 'const char *'
| |-ParmVarDecl 0x1531e7e3a30 <col:39, col:47> col:47 invalid e 'int *'
| `-ParmVarDecl 0x1531e7e3ab0 <col:50, col:54> col:54 do_param 'int'
|-FunctionDecl 0x1531e7e3f60 <line:500:1, line:501:51> line:500:5 invalid do_X509_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x1531e7e3c88 <col:18, col:24> col:24 invalid x 'int *'
| |-ParmVarDecl 0x1531e7e3d08 <col:27, col:37> col:37 invalid pkey 'int *'
| |-ParmVarDecl 0x1531e7e3d88 <col:43, col:57> col:57 invalid md 'const int *'
| `-ParmVarDecl 0x1531e7e3e18 <line:501:18, <invalid sloc>> col:18 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1531e7ee2e8 <line:502:1, line:503:55> line:502:5 invalid do_X509_REQ_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x1531e7ee0a8 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x1531e7ee128 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x1531e7ee1a8 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x1531e7ee238 <line:503:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1531e7ee600 <line:504:1, line:505:55> line:504:5 invalid do_X509_CRL_sign 'int (int *, int *, const int *, int (*)())'
| |-ParmVarDecl 0x1531e7ee3c0 <col:22, col:32> col:32 invalid x 'int *'
| |-ParmVarDecl 0x1531e7ee440 <col:35, col:45> col:45 invalid pkey 'int *'
| |-ParmVarDecl 0x1531e7ee4c0 <col:51, col:65> col:65 invalid md 'const int *'
| `-ParmVarDecl 0x1531e7ee550 <line:505:22, <invalid sloc>> col:22 invalid STACK_OF 'int (*)()':'int (*)()'
|-VarDecl 0x1531e7ee6d8 <line:507:1, col:14> col:14 used psk_key 'char *' extern
|-FunctionDecl 0x1531e7ee930 <line:510:1, col:64> col:16 used next_protos_parse 'unsigned char *(size_t *, const char *)'
| |-ParmVarDecl 0x1531e7ee768 <col:34, col:42> col:42 outlen 'size_t *'
| `-ParmVarDecl 0x1531e7ee7e8 <col:50, col:62> col:62 in 'const char *'
|-FunctionDecl 0x1531e7eed18 <line:512:1, line:514:67> line:512:6 invalid print_cert_checks 'void (int *, int *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1531e7eea10 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x1531e7eea90 <col:34, col:40> col:40 invalid x 'int *'
| |-ParmVarDecl 0x1531e7eeb10 <line:513:24, col:36> col:36 checkhost 'const char *'
| |-ParmVarDecl 0x1531e7eeb90 <line:514:24, col:36> col:36 checkemail 'const char *'
| `-ParmVarDecl 0x1531e7eec10 <col:48, col:60> col:60 checkip 'const char *'
|-FunctionDecl 0x1531e7eee88 <line:516:1, col:45> col:6 invalid store_setup_crl_download 'void (int *)'
| `-ParmVarDecl 0x1531e7eedf8 <col:31, col:43> col:43 invalid st 'int *'
|-FunctionDecl 0x1531e7eefe0 <line:551:1, col:27> col:5 app_isdir 'int (const char *)'
| `-ParmVarDecl 0x1531e7eef48 <col:15, col:26> col:27 'const char *'
|-FunctionDecl 0x1531e7ef1f0 <line:552:1, col:38> col:5 app_access 'int (const char *, int)'
| |-ParmVarDecl 0x1531e7ef0b8 <col:16, col:27> col:28 'const char *'
| `-ParmVarDecl 0x1531e7ef138 <col:30, col:34> col:34 flag 'int'
|-FunctionDecl 0x1531e7ef358 <line:553:1, col:22> col:5 used fileno_stdin 'int (void)'
|-FunctionDecl 0x1531e7ef4b0 <line:554:1, col:23> col:5 used fileno_stdout 'int (void)'
|-FunctionDecl 0x1531e7ef6e0 <line:555:1, col:31> col:5 used raw_read_stdin 'int (void *, int)'
| |-ParmVarDecl 0x1531e7ef580 <col:20, col:25> col:26 'void *'
| `-ParmVarDecl 0x1531e7ef600 <col:28> col:31 'int'
|-FunctionDecl 0x1531e7ef920 <line:556:1, col:39> col:5 used raw_write_stdout 'int (const void *, int)'
| |-ParmVarDecl 0x1531e7ef7c0 <col:22, col:33> col:34 'const void *'
| `-ParmVarDecl 0x1531e7ef840 <col:36> col:39 'int'
|-FunctionDecl 0x1531e7efb90 <line:560:1, col:45> col:8 app_tminterval 'double (int, int)'
| |-ParmVarDecl 0x1531e7efa00 <col:23, col:27> col:27 stop 'int'
| `-ParmVarDecl 0x1531e7efa80 <col:33, col:37> col:37 usertime 'int'
|-RecordDecl 0x1531e7efc58 <line:562:9, line:567:1> line:562:16 struct verify_options_st definition
| |-FieldDecl 0x1531e7efd28 <line:563:5, col:9> col:9 referenced depth 'int'
| |-FieldDecl 0x1531e7efd98 <line:564:5, col:9> col:9 referenced quiet 'int'
| |-FieldDecl 0x1531e7efe08 <line:565:5, col:9> col:9 error 'int'
| `-FieldDecl 0x1531e7efe78 <line:566:5, col:9> col:9 referenced return_error 'int'
|-TypedefDecl 0x1531e7eff28 <line:562:1, line:567:3> col:3 referenced VERIFY_CB_ARGS 'struct verify_options_st':'struct verify_options_st'
| `-ElaboratedType 0x1531e7efed0 'struct verify_options_st' sugar
|   `-RecordType 0x1531e7efcf0 'struct verify_options_st'
|     `-Record 0x1531e7efc58 'verify_options_st'
|-VarDecl 0x1531e7effd0 <line:569:1, col:23> col:23 used verify_args 'VERIFY_CB_ARGS':'struct verify_options_st' extern
|-TypedefDecl 0x1531e7e4308 <.//openssl//file_jk/after\apps/s_apps.h:48:1, col:69> col:15 referenced do_server_cb 'int (*)(int, int, unsigned char *)'
| `-PointerType 0x1531e7e4290 'int (*)(int, int, unsigned char *)'
|   `-ParenType 0x1531e7e4230 'int (int, int, unsigned char *)' sugar
|     `-FunctionProtoType 0x1531e7e41f0 'int (int, int, unsigned char *)' cdecl
|       |-BuiltinType 0x1531cbde640 'int'
|       |-BuiltinType 0x1531cbde640 'int'
|       |-BuiltinType 0x1531cbde640 'int'
|       `-PointerType 0x1531e8e1bc0 'unsigned char *'
|         `-BuiltinType 0x1531cbde6a0 'unsigned char'
|-FunctionDecl 0x1531e7e4980 <line:49:1, line:52:50> line:49:5 do_server 'int (int *, const char *, const char *, int, int, do_server_cb, unsigned char *, int)'
| |-ParmVarDecl 0x1531e7e4378 <col:15, col:20> col:20 accept_sock 'int *'
| |-ParmVarDecl 0x1531e7e43f8 <col:33, col:45> col:45 host 'const char *'
| |-ParmVarDecl 0x1531e7e4478 <col:51, col:63> col:63 port 'const char *'
| |-ParmVarDecl 0x1531e7e44f8 <line:50:15, col:19> col:19 family 'int'
| |-ParmVarDecl 0x1531e7e4578 <col:27, col:31> col:31 type 'int'
| |-ParmVarDecl 0x1531e7e4610 <line:51:15, col:28> col:28 cb 'do_server_cb':'int (*)(int, int, unsigned char *)'
| |-ParmVarDecl 0x1531e7e4690 <line:52:15, col:30> col:30 context 'unsigned char *'
| `-ParmVarDecl 0x1531e7e4710 <col:39, col:43> col:43 naccept 'int'
|-FunctionDecl 0x1531e7e4bb0 <line:64:1, col:39> col:5 invalid ssl_print_tmp_key 'int (int *, int *)'
| |-ParmVarDecl 0x1531e7e4a90 <col:23, col:28> col:28 invalid out 'int *'
| `-ParmVarDecl 0x1531e7e4b10 <col:33, col:38> col:38 invalid s 'int *'
|-FunctionDecl 0x1531e7e4fa8 <line:65:1, line:66:37> line:65:5 used init_client 'int (int *, const char *, const char *, int, int)'
| |-ParmVarDecl 0x1531e7e4c78 <col:17, col:22> col:22 sock 'int *'
| |-ParmVarDecl 0x1531e7e4cf8 <col:28, col:40> col:40 host 'const char *'
| |-ParmVarDecl 0x1531e7e4d78 <col:46, col:58> col:58 port 'const char *'
| |-ParmVarDecl 0x1531e7e4df8 <line:66:17, col:21> col:21 family 'int'
| `-ParmVarDecl 0x1531e7e4e78 <col:29, col:33> col:33 type 'int'
|-FunctionDecl 0x1531e7e5150 <line:67:1, col:23> col:5 should_retry 'int (int)'
| `-ParmVarDecl 0x1531e7e50a0 <col:18, col:22> col:22 i 'int'
|-FunctionDecl 0x1531e7e55c0 <line:69:1, line:70:53> line:69:6 invalid bio_dump_callback 'long (int *, int, const char *, int, long, long)'
| |-ParmVarDecl 0x1531e7e5228 <col:24, col:29> col:29 invalid bio 'int *'
| |-ParmVarDecl 0x1531e7e52a8 <col:34, col:38> col:38 cmd 'int'
| |-ParmVarDecl 0x1531e7e5328 <col:43, col:55> col:55 argp 'const char *'
| |-ParmVarDecl 0x1531e7e53a8 <line:70:24, col:28> col:28 argi 'int'
| |-ParmVarDecl 0x1531e7e5428 <col:34, col:39> col:39 argl 'long'
| `-ParmVarDecl 0x1531e7e54a8 <col:45, col:50> col:50 ret 'long'
|-FunctionDecl 0x1531e7e58c0 <line:80:1, line:81:54> line:80:5 invalid generate_cookie_callback 'int (int *, unsigned char *, unsigned int *)'
| |-ParmVarDecl 0x1531e7e56a8 <col:30, col:35> col:35 invalid ssl 'int *'
| |-ParmVarDecl 0x1531e7e5728 <col:40, col:55> col:55 cookie 'unsigned char *'
| `-ParmVarDecl 0x1531e7e57d0 <line:81:30, col:44> col:44 cookie_len 'unsigned int *'
|-FunctionDecl 0x1531e7e5b80 <line:82:1, line:83:51> line:82:5 invalid verify_cookie_callback 'int (int *, const unsigned char *, unsigned int)'
| |-ParmVarDecl 0x1531e7e5990 <col:28, col:33> col:33 invalid ssl 'int *'
| |-ParmVarDecl 0x1531e7e5a10 <col:38, col:59> col:59 cookie 'const unsigned char *'
| `-ParmVarDecl 0x1531e7e5a90 <line:83:28, col:41> col:41 cookie_len 'unsigned int'
|-RecordDecl 0x1531e7e5c38 <line:85:9, col:16> col:16 struct ssl_excert_st
|-TypedefDecl 0x1531e7e5d48 <col:1, col:30> col:30 referenced SSL_EXCERT 'struct ssl_excert_st':'struct ssl_excert_st'
| `-ElaboratedType 0x1531e7e5cf0 'struct ssl_excert_st' sugar
|   `-RecordType 0x1531e7e5cd0 'struct ssl_excert_st'
|     `-Record 0x1531e7e5c38 'ssl_excert_st'
|-FunctionDecl 0x1531e7e0020 <line:87:1, col:54> col:6 invalid ssl_ctx_set_excert 'void (int *, SSL_EXCERT *)'
| |-ParmVarDecl 0x1531e7e5dd0 <col:25, col:34> col:34 invalid ctx 'int *'
| `-ParmVarDecl 0x1531e7e5ec8 <col:39, col:51> col:51 exc 'SSL_EXCERT *'
|-FunctionDecl 0x1531e7e01e8 <line:88:1, col:37> col:6 used ssl_excert_free 'void (SSL_EXCERT *)'
| `-ParmVarDecl 0x1531e7e00e0 <col:22, col:34> col:34 exc 'SSL_EXCERT *'
|-FunctionDecl 0x1531e7e04f0 <line:89:1, col:46> col:5 used args_excert 'int (int, SSL_EXCERT **)'
| |-ParmVarDecl 0x1531e7e02c0 <col:17, col:21> col:21 option 'int'
| `-ParmVarDecl 0x1531e7e03a0 <col:29, col:42> col:42 pexc 'SSL_EXCERT **'
|-FunctionDecl 0x1531e7e06e0 <line:90:1, col:34> col:5 used load_excert 'int (SSL_EXCERT **)'
| `-ParmVarDecl 0x1531e7e05d0 <col:17, col:30> col:30 pexc 'SSL_EXCERT **'
|-FunctionDecl 0x1531e7e0908 <line:91:1, col:42> col:6 invalid print_verify_detail 'void (int *, int *)'
| |-ParmVarDecl 0x1531e7e07b8 <col:26, col:31> col:31 invalid s 'int *'
| `-ParmVarDecl 0x1531e7e0838 <col:34, col:39> col:39 invalid bio 'int *'
|-FunctionDecl 0x1531e7e0a60 <line:92:1, col:30> col:6 invalid print_ssl_summary 'void (int *)'
| `-ParmVarDecl 0x1531e7e09d0 <col:24, col:29> col:29 invalid s 'int *'
|-VarDecl 0x1531e7e0b20 <.//openssl//file_jk/after\apps\s_client.c:86:1, col:14> col:14 used prog 'char *' static
|-VarDecl 0x1531e7e0bb8 <line:87:1, col:22> col:12 used c_debug 'int' static cinit
| `-IntegerLiteral 0x1531e7e0c20 <col:22> 'int' 0
|-VarDecl 0x1531e7e0c78 <line:88:1, col:26> col:12 used c_showcerts 'int' static cinit
| `-IntegerLiteral 0x1531e7e0ce0 <col:26> 'int' 0
|-VarDecl 0x1531e7e0d38 <line:89:1, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:89:14 used keymatexportlabel 'char *' static cinit
| `-ImplicitCastExpr 0x1531e7e0e40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x1531e7e0e08 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x1531e7e0de0 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x1531e7e0da0 <col:26> 'int' 0
|-VarDecl 0x1531e7e0e70 <.//openssl//file_jk/after\apps\s_client.c:90:1, col:30> col:12 used keymatexportlen 'int' static cinit
| `-IntegerLiteral 0x1531e7e0ed8 <col:30> 'int' 20
|-VarDecl 0x1531e7e0f30 <line:91:1, col:13> col:13 invalid bio_c_out 'int *' static
|-VarDecl 0x1531e7e1038 <line:92:1, col:22> col:12 used c_quiet 'int' static cinit
| `-IntegerLiteral 0x1531e7e10a0 <col:22> 'int' 0
|-FunctionDecl 0x1531e7e12d8 <line:94:1, col:54> col:13 invalid print_stuff 'void (int *, int *, int)' static
| |-ParmVarDecl 0x1531e7e10f8 <col:25, col:30> col:30 invalid berr 'int *'
| |-ParmVarDecl 0x1531e7e1178 <col:36, col:41> col:41 invalid con 'int *'
| `-ParmVarDecl 0x1531e7e11f8 <col:46, col:50> col:50 full 'int'
|-FunctionDecl 0x1531e7e1500 <line:96:1, col:42> col:12 invalid ocsp_resp_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x1531e7e13a8 <col:25, col:30> col:30 invalid s 'int *'
| `-ParmVarDecl 0x1531e7e1428 <col:33, col:39> col:39 arg 'void *'
|-VarDecl 0x1531e7e15c8 <line:99:1, col:12> col:12 used saved_errno 'int' static
|-FunctionDecl 0x1531e7e16e0 <line:101:1, line:105:1> line:101:13 used save_errno 'void (void)' static
| `-CompoundStmt 0x1531e7e19b8 <line:102:1, line:105:1>
|   |-BinaryOperator 0x1531e7e18c0 <line:103:5, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:246:27> 'int' '='
|   | |-DeclRefExpr 0x1531e7e1798 <.//openssl//file_jk/after\apps\s_client.c:103:5> 'int' lvalue Var 0x1531e7e15c8 'saved_errno' 'int'
|   | `-ImplicitCastExpr 0x1531e7e18a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:246:17, col:27> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x1531e7e1888 <col:17, col:27> 'int' lvalue
|   |     `-UnaryOperator 0x1531e7e1870 <col:18, col:26> 'int' lvalue prefix '*' cannot overflow
|   |       `-CallExpr 0x1531e7e1850 <col:19, col:26> 'int *'
|   |         `-ImplicitCastExpr 0x1531e7e1838 <col:19> 'int *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |           `-DeclRefExpr 0x1531e7e17b8 <col:19> 'int *(void) __attribute__((cdecl))':'int *(void)' Function 0x1531e7a3280 '_errno' 'int *(void) __attribute__((cdecl))':'int *(void)'
|   `-BinaryOperator 0x1531e7e1998 <col:17, .//openssl//file_jk/after\apps\s_client.c:104:13> 'int' '='
|     |-ParenExpr 0x1531e7e1950 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:246:17, col:27> 'int' lvalue
|     | `-UnaryOperator 0x1531e7e1938 <col:18, col:26> 'int' lvalue prefix '*' cannot overflow
|     |   `-CallExpr 0x1531e7e1918 <col:19, col:26> 'int *'
|     |     `-ImplicitCastExpr 0x1531e7e1900 <col:19> 'int *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|     |       `-DeclRefExpr 0x1531e7e18e0 <col:19> 'int *(void) __attribute__((cdecl))':'int *(void)' Function 0x1531e7a3280 '_errno' 'int *(void) __attribute__((cdecl))':'int *(void)'
|     `-IntegerLiteral 0x1531e7e1970 <.//openssl//file_jk/after\apps\s_client.c:104:13> 'int' 0
|-FunctionDecl 0x1531e7e1a78 <line:107:1, line:112:1> line:107:12 used restore_errno 'int (void)' static
| `-CompoundStmt 0x1531e7e1db8 <line:108:1, line:112:1>
|   |-DeclStmt 0x1531e7e1c58 <line:109:5, col:20>
|   | `-VarDecl 0x1531e7e1b48 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:246:27> .//openssl//file_jk/after\apps\s_client.c:109:9 used ret 'int' cinit
|   |   `-ImplicitCastExpr 0x1531e7e1c40 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:246:17, col:27> 'int' <LValueToRValue>
|   |     `-ParenExpr 0x1531e7e1c20 <col:17, col:27> 'int' lvalue
|   |       `-UnaryOperator 0x1531e7e1c08 <col:18, col:26> 'int' lvalue prefix '*' cannot overflow
|   |         `-CallExpr 0x1531e7e1be8 <col:19, col:26> 'int *'
|   |           `-ImplicitCastExpr 0x1531e7e1bd0 <col:19> 'int *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |             `-DeclRefExpr 0x1531e7e1bb0 <col:19> 'int *(void) __attribute__((cdecl))':'int *(void)' Function 0x1531e7a3280 '_errno' 'int *(void) __attribute__((cdecl))':'int *(void)'
|   |-BinaryOperator 0x1531e7e1d38 <col:17, .//openssl//file_jk/after\apps\s_client.c:110:13> 'int' '='
|   | |-ParenExpr 0x1531e7e1ce0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:246:17, col:27> 'int' lvalue
|   | | `-UnaryOperator 0x1531e7e1cc8 <col:18, col:26> 'int' lvalue prefix '*' cannot overflow
|   | |   `-CallExpr 0x1531e7e1ca8 <col:19, col:26> 'int *'
|   | |     `-ImplicitCastExpr 0x1531e7e1c90 <col:19> 'int *(*)(void) __attribute__((cdecl))' <FunctionToPointerDecay>
|   | |       `-DeclRefExpr 0x1531e7e1c70 <col:19> 'int *(void) __attribute__((cdecl))':'int *(void)' Function 0x1531e7a3280 '_errno' 'int *(void) __attribute__((cdecl))':'int *(void)'
|   | `-ImplicitCastExpr 0x1531e7e1d20 <.//openssl//file_jk/after\apps\s_client.c:110:13> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e7e1d00 <col:13> 'int' lvalue Var 0x1531e7e15c8 'saved_errno' 'int'
|   `-ReturnStmt 0x1531e7e1da8 <line:111:5, col:12>
|     `-ImplicitCastExpr 0x1531e7e1d90 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1531e7e1d58 <col:12> 'int' lvalue Var 0x1531e7e1b48 'ret' 'int'
|-FunctionDecl 0x1531e7e1e88 <line:114:1, line:133:1> line:114:13 invalid do_ssl_shutdown 'void (int *)' static
| |-ParmVarDecl 0x1531e7e1df8 <col:29, col:34> col:34 invalid ssl 'int *'
| `-CompoundStmt 0x1531e7ea4c0 <line:115:1, line:133:1>
|   |-DeclStmt 0x1531e7e1fc8 <line:116:5, col:12>
|   | `-VarDecl 0x1531e7e1f60 <col:5, col:9> col:9 used ret 'int'
|   `-DoStmt 0x1531e7ea4a0 <line:118:5, line:132:21>
|     |-CompoundStmt 0x1531e7ea408 <line:118:8, line:132:5>
|     | `-IfStmt 0x1531e7ea3f0 <line:121:9, line:131:9>
|     |   |-BinaryOperator 0x1531e7ea1e0 <line:121:13, col:19> 'int' '<'
|     |   | |-ImplicitCastExpr 0x1531e7ea1c8 <col:13> 'int' <LValueToRValue>
|     |   | | `-DeclRefExpr 0x1531e7ea180 <col:13> 'int' lvalue Var 0x1531e7e1f60 'ret' 'int'
|     |   | `-IntegerLiteral 0x1531e7ea1a0 <col:19> 'int' 0
|     |   `-CompoundStmt 0x1531e7ea3d8 <col:22, line:131:9>
|     |     `-BinaryOperator 0x1531e7ea3b8 <line:130:13, col:19> 'int' '='
|     |       |-DeclRefExpr 0x1531e7ea370 <col:13> 'int' lvalue Var 0x1531e7e1f60 'ret' 'int'
|     |       `-IntegerLiteral 0x1531e7ea390 <col:19> 'int' 0
|     `-BinaryOperator 0x1531e7ea480 <line:132:14, col:20> 'int' '<'
|       |-ImplicitCastExpr 0x1531e7ea468 <col:14> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e7ea420 <col:14> 'int' lvalue Var 0x1531e7e1f60 'ret' 'int'
|       `-IntegerLiteral 0x1531e7ea440 <col:20> 'int' 0
|-VarDecl 0x1531e7ea4f8 <line:137:1, col:29> col:14 used psk_identity 'char *' static cinit
| `-ImplicitCastExpr 0x1531e7ea5d8 <col:29> 'char *' <ArrayToPointerDecay>
|   `-StringLiteral 0x1531e7ea598 <col:29> 'char [16]' lvalue "Client_identity"
|-FunctionDecl 0x1531e7ea9a0 <line:142:1, line:197:1> line:142:21 invalid psk_client_cb 'unsigned int (int *, const char *, char *, unsigned int, unsigned char *, unsigned int)' static
| |-ParmVarDecl 0x1531e7ea608 <col:35, col:40> col:40 invalid ssl 'int *'
| |-ParmVarDecl 0x1531e7ea688 <col:45, col:57> col:57 used hint 'const char *'
| |-ParmVarDecl 0x1531e7ea708 <col:63, col:69> col:69 used identity 'char *'
| |-ParmVarDecl 0x1531e7ea788 <line:143:35, col:48> col:48 used max_identity_len 'unsigned int'
| |-ParmVarDecl 0x1531e7ea808 <line:144:35, col:50> col:50 used psk 'unsigned char *'
| |-ParmVarDecl 0x1531e7ea888 <line:145:35, col:48> col:48 used max_psk_len 'unsigned int'
| `-CompoundStmt 0x1531e7e8468 <line:146:1, line:197:1>
|   |-DeclStmt 0x1531e7eab08 <line:147:5, col:12>
|   | `-VarDecl 0x1531e7eaaa0 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x1531e7eaba0 <line:148:5, col:17>
|   | `-VarDecl 0x1531e7eab38 <col:5, col:10> col:10 used key_len 'long'
|   |-DeclStmt 0x1531e7eac38 <line:149:5, col:23>
|   | `-VarDecl 0x1531e7eabd0 <col:5, col:20> col:20 used key 'unsigned char *'
|   |-IfStmt 0x1531e7eb048 <line:153:5, line:158:12> has_else
|   | |-UnaryOperator 0x1531e7eae50 <line:153:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1531e7eae38 <col:10> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1531e7eae00 <col:10> 'const char *' lvalue ParmVar 0x1531e7ea688 'hint' 'const char *'
|   | |-CompoundStmt 0x1531e7eaf48 <col:16, line:158:5>
|   | `-NullStmt 0x1531e7eb040 <col:12>
|   |-BinaryOperator 0x1531e7eb360 <line:164:5, col:70> 'int' '='
|   | |-DeclRefExpr 0x1531e7eb070 <col:5> 'int' lvalue Var 0x1531e7eaaa0 'ret' 'int'
|   | `-CallExpr 0x1531e7eb2c0 <col:11, col:70> 'int'
|   |   |-ImplicitCastExpr 0x1531e7eb2a8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1531e7eb198 <col:11> 'int ()' Function 0x1531e7eb0d0 'BIO_snprintf' 'int ()'
|   |   |-ImplicitCastExpr 0x1531e7eb300 <col:24> 'char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e7eb1b8 <col:24> 'char *' lvalue ParmVar 0x1531e7ea708 'identity' 'char *'
|   |   |-ImplicitCastExpr 0x1531e7eb318 <col:34> 'unsigned int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e7eb1f0 <col:34> 'unsigned int' lvalue ParmVar 0x1531e7ea788 'max_identity_len' 'unsigned int'
|   |   |-ImplicitCastExpr 0x1531e7eb330 <col:52> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x1531e7eb268 <col:52> 'char [3]' lvalue "%s"
|   |   `-ImplicitCastExpr 0x1531e7eb348 <col:58> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1531e7eb288 <col:58> 'char *' lvalue Var 0x1531e7ea4f8 'psk_identity' 'char *'
|   |-IfStmt 0x1531e7eb558 <line:165:5, line:166:14>
|   | |-BinaryOperator 0x1531e7eb4d0 <line:165:9, col:40> 'int' '||'
|   | | |-BinaryOperator 0x1531e7eb3e0 <col:9, col:15> 'int' '<'
|   | | | |-ImplicitCastExpr 0x1531e7eb3c8 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1531e7eb380 <col:9> 'int' lvalue Var 0x1531e7eaaa0 'ret' 'int'
|   | | | `-IntegerLiteral 0x1531e7eb3a0 <col:15> 'int' 0
|   | | `-BinaryOperator 0x1531e7eb4b0 <col:20, col:40> 'int' '>'
|   | |   |-CStyleCastExpr 0x1531e7eb450 <col:20, col:34> 'unsigned int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x1531e7eb438 <col:34> 'int' <LValueToRValue> part_of_explicit_cast
|   | |   |   `-DeclRefExpr 0x1531e7eb400 <col:34> 'int' lvalue Var 0x1531e7eaaa0 'ret' 'int'
|   | |   `-ImplicitCastExpr 0x1531e7eb498 <col:40> 'unsigned int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1531e7eb478 <col:40> 'unsigned int' lvalue ParmVar 0x1531e7ea788 'max_identity_len' 'unsigned int'
|   | `-GotoStmt 0x1531e7eb540 <line:166:9, col:14> 'out_err' 0x1531e7eb4f0
|   |-BinaryOperator 0x1531e7eb8b0 <line:172:5, col:47> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1531e7eb680 <col:5> 'unsigned char *' lvalue Var 0x1531e7eabd0 'key' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1531e7eb898 <col:11, col:47> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x1531e7eb850 <col:11, col:47> 'int'
|   |     |-ImplicitCastExpr 0x1531e7eb838 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1531e7eb7a8 <col:11> 'int ()' Function 0x1531e7eb6e0 'OPENSSL_hexstr2buf' 'int ()'
|   |     |-ImplicitCastExpr 0x1531e7eb880 <col:30> 'char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1531e7eb7c8 <col:30> 'char *' lvalue Var 0x1531e7ee6d8 'psk_key' 'char *'
|   |     `-UnaryOperator 0x1531e7eb820 <col:39, col:40> 'long *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x1531e7eb7e8 <col:40> 'long' lvalue Var 0x1531e7eab38 'key_len' 'long'
|   |-IfStmt 0x1531e7ebaf8 <line:173:5, line:177:5>
|   | |-BinaryOperator 0x1531e7eb9a8 <line:173:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1531e7eb978 <.//openssl//file_jk/after\apps\s_client.c:173:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e7eb8d0 <col:9> 'unsigned char *' lvalue Var 0x1531e7eabd0 'key' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x1531e7eb990 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1531e7eb958 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e7eb930 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e7eb8f0 <col:26> 'int' 0
|   | `-CompoundStmt 0x1531e7ebae0 <.//openssl//file_jk/after\apps\s_client.c:173:22, line:177:5>
|   |   `-ReturnStmt 0x1531e7ebad0 <line:176:9, col:16>
|   |     `-ImplicitCastExpr 0x1531e7ebab8 <col:16> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x1531e7eba90 <col:16> 'int' 0
|   |-IfStmt 0x1531e7ebf90 <line:178:5, line:184:5>
|   | |-BinaryOperator 0x1531e7ebc90 <line:178:9, col:50> 'int' '||'
|   | | |-BinaryOperator 0x1531e7ebba0 <col:9, <built-in>:30:21> 'int' '>'
|   | | | |-ImplicitCastExpr 0x1531e7ebb70 <.//openssl//file_jk/after\apps\s_client.c:178:9> 'unsigned int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1531e7ebb10 <col:9> 'unsigned int' lvalue ParmVar 0x1531e7ea888 'max_psk_len' 'unsigned int'
|   | | | `-ImplicitCastExpr 0x1531e7ebb88 <<built-in>:30:21> 'unsigned int' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1531e7ebb48 <col:21> 'int' 2147483647
|   | | `-BinaryOperator 0x1531e7ebc70 <.//openssl//file_jk/after\apps\s_client.c:178:34, col:50> 'int' '>'
|   | |   |-ImplicitCastExpr 0x1531e7ebc58 <col:34> 'long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1531e7ebbc0 <col:34> 'long' lvalue Var 0x1531e7eab38 'key_len' 'long'
|   | |   `-CStyleCastExpr 0x1531e7ebc30 <col:44, col:50> 'long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1531e7ebc18 <col:50> 'unsigned int' <LValueToRValue> part_of_explicit_cast
|   | |       `-DeclRefExpr 0x1531e7ebbe0 <col:50> 'unsigned int' lvalue ParmVar 0x1531e7ea888 'max_psk_len' 'unsigned int'
|   | `-CompoundStmt 0x1531e7ebf70 <col:63, line:184:5>
|   |   |-CallExpr 0x1531e7ebee0 <line:182:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1531e7ebec8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1531e7ebe88 <col:9> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1531e7ebf08 <col:22> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1531e7ebea8 <col:22> 'unsigned char *' lvalue Var 0x1531e7eabd0 'key' 'unsigned char *'
|   |   `-ReturnStmt 0x1531e7ebf60 <line:183:9, col:16>
|   |     `-ImplicitCastExpr 0x1531e7ebf48 <col:16> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x1531e7ebf20 <col:16> 'int' 0
|   |-CallExpr 0x1531e7e80c0 <line:186:5, col:29> 'void *'
|   | |-ImplicitCastExpr 0x1531e7e80a8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e7ebfa8 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x1531e7313a8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x1531e7e8110 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1531e7e80f8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1531e7ebfc8 <col:12> 'unsigned char *' lvalue ParmVar 0x1531e7ea808 'psk' 'unsigned char *'
|   | |-ImplicitCastExpr 0x1531e7e8140 <col:17> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1531e7e8128 <col:17> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1531e7ec000 <col:17> 'unsigned char *' lvalue Var 0x1531e7eabd0 'key' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1531e7e8170 <col:22> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1531e7e8158 <col:22> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1531e7ec020 <col:22> 'long' lvalue Var 0x1531e7eab38 'key_len' 'long'
|   |-CallExpr 0x1531e7e81e0 <line:187:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x1531e7e81c8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e7e8188 <col:5> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1531e7e8208 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e7e81a8 <col:18> 'unsigned char *' lvalue Var 0x1531e7eabd0 'key' 'unsigned char *'
|   |-ReturnStmt 0x1531e7e8358 <line:192:5, col:12>
|   | `-ImplicitCastExpr 0x1531e7e8340 <col:12> 'unsigned int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1531e7e8328 <col:12> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1531e7e8308 <col:12> 'long' lvalue Var 0x1531e7eab38 'key_len' 'long'
|   |-LabelStmt 0x1531e7e8400 <line:193:2, col:9> 'out_err'
|   | `-NullStmt 0x1531e7e83f8 <col:9>
|   `-ReturnStmt 0x1531e7e8458 <line:196:5, col:12>
|     `-ImplicitCastExpr 0x1531e7e8440 <col:12> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x1531e7e8418 <col:12> 'int' 0
|-RecordDecl 0x1531e7e84e8 <line:201:9, line:204:1> line:201:16 invalid struct tlsextctx_st definition
| |-FieldDecl 0x1531e7e85b8 <line:202:5, col:10> col:10 invalid biodebug 'int *'
| `-FieldDecl 0x1531e7e8628 <line:203:5, col:9> col:9 referenced ack 'int'
|-TypedefDecl 0x1531e7e86d8 <line:201:1, line:204:3> col:3 referenced tlsextctx 'struct tlsextctx_st':'struct tlsextctx_st'
| `-ElaboratedType 0x1531e7e8680 'struct tlsextctx_st' sugar
|   `-RecordType 0x1531e7e8580 'struct tlsextctx_st'
|     `-Record 0x1531e7e84e8 'tlsextctx_st'
|-FunctionDecl 0x1531e7e8950 <line:206:1, line:216:1> line:206:12 invalid ssl_servername_cb 'int (int *, int *, void *)' static
| |-ParmVarDecl 0x1531e7e8760 <col:30, col:35> col:35 invalid s 'int *'
| |-ParmVarDecl 0x1531e7e87e0 <col:38, col:43> col:43 ad 'int *'
| |-ParmVarDecl 0x1531e7e8860 <col:47, col:53> col:53 used arg 'void *'
| `-CompoundStmt 0x1531e7e91a0 <line:207:1, line:216:1>
|   |-DeclStmt 0x1531e7e8b98 <line:208:5, col:37>
|   | `-VarDecl 0x1531e7e8aa8 <col:5, col:34> col:16 used p 'tlsextctx *' cinit
|   |   `-CStyleCastExpr 0x1531e7e8b70 <col:20, col:34> 'tlsextctx *' <BitCast>
|   |     `-ImplicitCastExpr 0x1531e7e8b58 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1531e7e8b10 <col:34> 'void *' lvalue ParmVar 0x1531e7e8860 'arg' 'void *'
|   `-DeclStmt 0x1531e7e8d40 <line:209:5, col:70>
|     `-VarDecl 0x1531e7e8bc8 <col:5, col:17> col:17 used hn 'const char *'
|-RecordDecl 0x1531e7e91c0 <line:221:9, line:228:1> line:221:16 struct srp_arg_st definition
| |-FieldDecl 0x1531e7e9298 <line:222:5, col:11> col:11 referenced srppassin 'char *'
| |-FieldDecl 0x1531e7e9308 <line:223:5, col:11> col:11 referenced srplogin 'char *'
| |-FieldDecl 0x1531e7e9378 <line:224:5, col:9> col:9 referenced msg 'int'
| |-FieldDecl 0x1531e7e93e8 <line:225:5, col:9> col:9 referenced debug 'int'
| |-FieldDecl 0x1531e7e9458 <line:226:5, col:9> col:9 referenced amp 'int'
| `-FieldDecl 0x1531e7e94c8 <line:227:5, col:9> col:9 referenced strength 'int'
|-TypedefDecl 0x1531e7e9578 <line:221:1, line:228:3> col:3 referenced SRP_ARG 'struct srp_arg_st':'struct srp_arg_st'
| `-ElaboratedType 0x1531e7e9520 'struct srp_arg_st' sugar
|   `-RecordType 0x1531e7e9260 'struct srp_arg_st'
|     `-Record 0x1531e7e91c0 'srp_arg_st'
|-FunctionDecl 0x1531e7e9720 <line:232:1, line:252:1> line:232:12 invalid srp_Verify_N_and_g 'int (const int *, const int *)' static
| |-ParmVarDecl 0x1531e7e9600 <col:31, col:45> col:45 invalid N 'const int *'
| |-ParmVarDecl 0x1531e7e9680 <col:48, col:62> col:62 invalid g 'const int *'
| `-CompoundStmt 0x1531e7f49a8 <line:233:1, line:252:1>
|   |-DeclStmt 0x1531e7f46f0 <line:237:5, line:246:47>
|   | `-VarDecl 0x1531e7e9ae8 <line:237:5, col:9> col:9 used ret 'int'
|   `-ReturnStmt 0x1531e7f4998 <line:251:5, col:12>
|     `-ImplicitCastExpr 0x1531e7f4980 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1531e7f4948 <col:12> 'int' lvalue Var 0x1531e7e9ae8 'ret' 'int'
|-FunctionDecl 0x1531e7f4b00 <line:270:1, line:304:1> line:270:12 invalid ssl_srp_verify_param_cb 'int (int *, void *)' static
| |-ParmVarDecl 0x1531e7f49e0 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1531e7f4a60 <col:44, col:50> col:50 used arg 'void *'
| `-CompoundStmt 0x1531e7f5d68 <line:271:1, line:304:1>
|   |-DeclStmt 0x1531e7f4d48 <line:272:5, col:38>
|   | `-VarDecl 0x1531e7f4c58 <col:5, col:35> col:14 used srp_arg 'SRP_ARG *' cinit
|   |   `-CStyleCastExpr 0x1531e7f4d20 <col:24, col:35> 'SRP_ARG *' <BitCast>
|   |     `-ImplicitCastExpr 0x1531e7f4d08 <col:35> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1531e7f4cc0 <col:35> 'void *' lvalue ParmVar 0x1531e7f4a60 'arg' 'void *'
|   |-IfStmt 0x1531e7f51f0 <line:275:5, line:276:16>
|   | |-OpaqueValueExpr 0x1531e7f51d8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1531e7f51c8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1531e7f51a0 <col:16> 'int' 0
|   |-IfStmt 0x1531e7f5768 <line:277:5, line:284:5>
|   | |-BinaryOperator 0x1531e7f5408 <line:277:9, col:59> 'int' '||'
|   | | |-BinaryOperator 0x1531e7f5320 <col:9, col:36> 'int' '||'
|   | | | |-ImplicitCastExpr 0x1531e7f52f0 <col:9, col:18> 'int' <LValueToRValue>
|   | | | | `-MemberExpr 0x1531e7f5258 <col:9, col:18> 'int' lvalue ->debug 0x1531e7e93e8
|   | | | |   `-ImplicitCastExpr 0x1531e7f5240 <col:9> 'SRP_ARG *' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x1531e7f5208 <col:9> 'SRP_ARG *' lvalue Var 0x1531e7f4c58 'srp_arg' 'SRP_ARG *'
|   | | | `-ImplicitCastExpr 0x1531e7f5308 <col:27, col:36> 'int' <LValueToRValue>
|   | | |   `-MemberExpr 0x1531e7f52c0 <col:27, col:36> 'int' lvalue ->msg 0x1531e7e9378
|   | | |     `-ImplicitCastExpr 0x1531e7f52a8 <col:27> 'SRP_ARG *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1531e7f5288 <col:27> 'SRP_ARG *' lvalue Var 0x1531e7f4c58 'srp_arg' 'SRP_ARG *'
|   | | `-BinaryOperator 0x1531e7f53e8 <col:43, col:59> 'int' '=='
|   | |   |-ImplicitCastExpr 0x1531e7f53d0 <col:43, col:52> 'int' <LValueToRValue>
|   | |   | `-MemberExpr 0x1531e7f5378 <col:43, col:52> 'int' lvalue ->amp 0x1531e7e9458
|   | |   |   `-ImplicitCastExpr 0x1531e7f5360 <col:43> 'SRP_ARG *' <LValueToRValue>
|   | |   |     `-DeclRefExpr 0x1531e7f5340 <col:43> 'SRP_ARG *' lvalue Var 0x1531e7f4c58 'srp_arg' 'SRP_ARG *'
|   | |   `-IntegerLiteral 0x1531e7f53a8 <col:59> 'int' 1
|   | `-CompoundStmt 0x1531e7f5758 <col:62, line:284:5>
|   |-IfStmt 0x1531e7f58e0 <line:286:5, line:287:16>
|   | |-OpaqueValueExpr 0x1531e7f58c8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1531e7f58b8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1531e7f5890 <col:16> 'int' 1
|   |-IfStmt 0x1531e7f5c80 <line:289:5, line:301:5>
|   | |-BinaryOperator 0x1531e7f59a0 <line:289:9, col:25> 'int' '=='
|   | | |-ImplicitCastExpr 0x1531e7f5988 <col:9, col:18> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1531e7f5930 <col:9, col:18> 'int' lvalue ->amp 0x1531e7e9458
|   | | |   `-ImplicitCastExpr 0x1531e7f5918 <col:9> 'SRP_ARG *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1531e7f58f8 <col:9> 'SRP_ARG *' lvalue Var 0x1531e7f4c58 'srp_arg' 'SRP_ARG *'
|   | | `-IntegerLiteral 0x1531e7f5960 <col:25> 'int' 1
|   | `-CompoundStmt 0x1531e7f5c68 <col:28, line:301:5>
|   |   `-IfStmt 0x1531e7f5c50 <line:299:9, line:300:20>
|   |     |-OpaqueValueExpr 0x1531e7f5c38 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x1531e7f5c28 <col:13, col:20>
|   |       `-IntegerLiteral 0x1531e7f5c00 <col:20> 'int' 1
|   `-ReturnStmt 0x1531e7f5d58 <line:303:5, col:12>
|     `-IntegerLiteral 0x1531e7f5d30 <col:12> 'int' 0
|-FunctionDecl 0x1531e7f5f20 <line:308:1, line:325:1> line:308:14 invalid ssl_give_srp_client_pwd_cb 'char *(int *, void *)' static
| |-ParmVarDecl 0x1531e7f5dc0 <col:41, col:46> col:46 invalid s 'int *'
| |-ParmVarDecl 0x1531e7f5e40 <col:49, col:55> col:55 used arg 'void *'
| `-CompoundStmt 0x1531e7f6c90 <line:309:1, line:325:1>
|   |-DeclStmt 0x1531e7f60f8 <line:310:5, col:38>
|   | `-VarDecl 0x1531e7f5ff8 <col:5, col:35> col:14 used srp_arg 'SRP_ARG *' cinit
|   |   `-CStyleCastExpr 0x1531e7f60d0 <col:24, col:35> 'SRP_ARG *' <BitCast>
|   |     `-ImplicitCastExpr 0x1531e7f60a8 <col:35> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1531e7f6060 <col:35> 'void *' lvalue ParmVar 0x1531e7f5e40 'arg' 'void *'
|   |-DeclStmt 0x1531e7f6348 <line:311:5, col:67>
|   | `-VarDecl 0x1531e7f6128 <col:5, col:66> col:11 used pass 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e7f6330 <col:18, col:66> 'char *' <BitCast>
|   |     `-CallExpr 0x1531e7f62d0 <col:18, col:66> 'void *'
|   |       |-ImplicitCastExpr 0x1531e7f62b8 <col:18> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1531e7f6190 <col:18> 'void *(int, const char *)' Function 0x1531e8e8010 'app_malloc' 'void *(int, const char *)'
|   |       |-BinaryOperator 0x1531e7f6200 <line:306:21, line:311:42> 'int' '+'
|   |       | |-IntegerLiteral 0x1531e7f61b0 <line:306:21> 'int' 1024
|   |       | `-IntegerLiteral 0x1531e7f61d8 <line:311:42> 'int' 1
|   |       `-ImplicitCastExpr 0x1531e7f6318 <col:45> 'const char *' <NoOp>
|   |         `-ImplicitCastExpr 0x1531e7f6300 <col:45> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x1531e7f6258 <col:45> 'char [20]' lvalue "SRP password buffer"
|   |-DeclStmt 0x1531e7f63d8 <line:312:5, col:22>
|   | `-VarDecl 0x1531e7f6370 <col:5, col:16> col:16 used cb_tmp 'PW_CB_DATA':'struct pw_cb_data'
|   |-DeclStmt 0x1531e7f6470 <line:313:5, col:10>
|   | `-VarDecl 0x1531e7f6408 <col:5, col:9> col:9 used l 'int'
|   |-BinaryOperator 0x1531e7f65e0 <line:315:5, col:40> 'const void *' '='
|   | |-MemberExpr 0x1531e7f64c0 <col:5, col:12> 'const void *' lvalue .password 0x1531e8eadb8
|   | | `-DeclRefExpr 0x1531e7f6488 <col:5> 'PW_CB_DATA':'struct pw_cb_data' lvalue Var 0x1531e7f6370 'cb_tmp' 'PW_CB_DATA':'struct pw_cb_data'
|   | `-ImplicitCastExpr 0x1531e7f65c8 <col:23, col:40> 'const void *' <BitCast>
|   |   `-CStyleCastExpr 0x1531e7f65a0 <col:23, col:40> 'char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1531e7f6588 <col:31, col:40> 'char *' <LValueToRValue> part_of_explicit_cast
|   |       `-MemberExpr 0x1531e7f6540 <col:31, col:40> 'char *' lvalue ->srppassin 0x1531e7e9298
|   |         `-ImplicitCastExpr 0x1531e7f6528 <col:31> 'SRP_ARG *' <LValueToRValue>
|   |           `-DeclRefExpr 0x1531e7f64f0 <col:31> 'SRP_ARG *' lvalue Var 0x1531e7f5ff8 'srp_arg' 'SRP_ARG *'
|   |-BinaryOperator 0x1531e7f66d8 <line:316:5, col:26> 'const char *' '='
|   | |-MemberExpr 0x1531e7f6620 <col:5, col:12> 'const char *' lvalue .prompt_info 0x1531e8eae28
|   | | `-DeclRefExpr 0x1531e7f6600 <col:5> 'PW_CB_DATA':'struct pw_cb_data' lvalue Var 0x1531e7f6370 'cb_tmp' 'PW_CB_DATA':'struct pw_cb_data'
|   | `-ImplicitCastExpr 0x1531e7f66c0 <col:26> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e7f66a8 <col:26> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f6688 <col:26> 'char [9]' lvalue "SRP user"
|   |-IfStmt 0x1531e7f6b18 <line:317:5, line:321:5>
|   | |-BinaryOperator 0x1531e7f6940 <line:317:9, col:65> 'int' '<'
|   | | |-ParenExpr 0x1531e7f68f8 <col:9, col:61> 'int'
|   | | | `-BinaryOperator 0x1531e7f68d8 <col:10, col:60> 'int' '='
|   | | |   |-DeclRefExpr 0x1531e7f66f8 <col:10> 'int' lvalue Var 0x1531e7f6408 'l' 'int'
|   | | |   `-CallExpr 0x1531e7f6880 <col:14, col:60> 'int'
|   | | |     |-ImplicitCastExpr 0x1531e7f6868 <col:14> 'int (*)(char *, int, int, PW_CB_DATA *)' <FunctionToPointerDecay>
|   | | |     | `-DeclRefExpr 0x1531e7f6730 <col:14> 'int (char *, int, int, PW_CB_DATA *)' Function 0x1531e8e1320 'password_callback' 'int (char *, int, int, PW_CB_DATA *)'
|   | | |     |-ImplicitCastExpr 0x1531e7f68c0 <col:32> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1531e7f6750 <col:32> 'char *' lvalue Var 0x1531e7f6128 'pass' 'char *'
|   | | |     |-IntegerLiteral 0x1531e7f6788 <line:306:21> 'int' 1024
|   | | |     |-IntegerLiteral 0x1531e7f67b0 <line:317:50> 'int' 0
|   | | |     `-UnaryOperator 0x1531e7f67f8 <col:53, col:54> 'PW_CB_DATA *' prefix '&' cannot overflow
|   | | |       `-DeclRefExpr 0x1531e7f67d8 <col:54> 'PW_CB_DATA':'struct pw_cb_data' lvalue Var 0x1531e7f6370 'cb_tmp' 'PW_CB_DATA':'struct pw_cb_data'
|   | | `-IntegerLiteral 0x1531e7f6918 <col:65> 'int' 0
|   | `-CompoundStmt 0x1531e7f6af8 <col:68, line:321:5>
|   |   |-CallExpr 0x1531e7f6a08 <line:319:9, col:26> 'int'
|   |   | |-ImplicitCastExpr 0x1531e7f69f0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1531e7f69b0 <col:9> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1531e7f6a30 <col:22> 'char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1531e7f69d0 <col:22> 'char *' lvalue Var 0x1531e7f6128 'pass' 'char *'
|   |   `-ReturnStmt 0x1531e7f6ae8 <line:320:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x1531e7f6ad0 <col:17, col:27> 'char *' <NullToPointer>
|   |       `-ParenExpr 0x1531e7f6ab0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1531e7f6a88 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1531e7f6a48 <col:26> 'int' 0
|   |-BinaryOperator 0x1531e7f6c28 <.//openssl//file_jk/after\apps\s_client.c:322:5, col:19> 'char' '='
|   | |-UnaryOperator 0x1531e7f6be0 <col:5, col:15> 'char' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x1531e7f6bc0 <col:6, col:15> 'char *'
|   | |   `-BinaryOperator 0x1531e7f6ba0 <col:7, col:14> 'char *' '+'
|   | |     |-ImplicitCastExpr 0x1531e7f6b70 <col:7> 'char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1531e7f6b30 <col:7> 'char *' lvalue Var 0x1531e7f6128 'pass' 'char *'
|   | |     `-ImplicitCastExpr 0x1531e7f6b88 <col:14> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1531e7f6b50 <col:14> 'int' lvalue Var 0x1531e7f6408 'l' 'int'
|   | `-ImplicitCastExpr 0x1531e7f6c10 <col:19> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x1531e7f6bf8 <col:19> 'int' 0
|   `-ReturnStmt 0x1531e7f6c80 <line:324:5, col:12>
|     `-ImplicitCastExpr 0x1531e7f6c68 <col:12> 'char *' <LValueToRValue>
|       `-DeclRefExpr 0x1531e7f6c48 <col:12> 'char *' lvalue Var 0x1531e7f6128 'pass' 'char *'
|-VarDecl 0x1531e7f6d00 <line:329:1, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:329:14 used srtp_profiles 'char *' static cinit
| `-ImplicitCastExpr 0x1531e7f6e08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   `-ParenExpr 0x1531e7f6dd0 <col:17, col:27> 'void *'
|     `-CStyleCastExpr 0x1531e7f6da8 <col:18, col:26> 'void *' <NullToPointer>
|       `-IntegerLiteral 0x1531e7f6d68 <col:26> 'int' 0
|-RecordDecl 0x1531e7f6e20 <.//openssl//file_jk/after\apps\s_client.c:333:9, line:337:1> line:333:16 struct tlsextnextprotoctx_st definition
| |-FieldDecl 0x1531e7f6ef8 <line:334:5, col:20> col:20 referenced data 'unsigned char *'
| |-FieldDecl 0x1531e7f6f60 <line:335:5, col:12> col:12 referenced len 'size_t':'unsigned long long'
| `-FieldDecl 0x1531e7f6fd0 <line:336:5, col:9> col:9 referenced status 'int'
|-TypedefDecl 0x1531e7f7088 <line:333:1, line:337:3> col:3 referenced tlsextnextprotoctx 'struct tlsextnextprotoctx_st':'struct tlsextnextprotoctx_st'
| `-ElaboratedType 0x1531e7f7030 'struct tlsextnextprotoctx_st' sugar
|   `-RecordType 0x1531e7f6ec0 'struct tlsextnextprotoctx_st'
|     `-Record 0x1531e7f6e20 'tlsextnextprotoctx_st'
|-VarDecl 0x1531e7f7130 <line:339:1, col:27> col:27 used next_proto 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st' static
|-FunctionDecl 0x1531e7f7570 <line:341:1, line:363:1> line:341:12 invalid next_proto_cb 'int (int *, unsigned char **, unsigned char *, const unsigned char *, unsigned int, void *)' static
| |-ParmVarDecl 0x1531e7f71c8 <col:26, col:31> col:31 invalid s 'int *'
| |-ParmVarDecl 0x1531e7f7250 <col:34, col:50> col:50 used out 'unsigned char **'
| |-ParmVarDecl 0x1531e7f72d0 <col:55, col:70> col:70 used outlen 'unsigned char *'
| |-ParmVarDecl 0x1531e7f7350 <line:342:26, col:47> col:47 used in 'const unsigned char *'
| |-ParmVarDecl 0x1531e7f73d0 <col:51, col:64> col:64 used inlen 'unsigned int'
| |-ParmVarDecl 0x1531e7f7450 <line:343:26, col:32> col:32 used arg 'void *'
| `-CompoundStmt 0x1531e7f8460 <line:344:1, line:363:1>
|   |-DeclStmt 0x1531e7f7798 <line:345:5, col:34>
|   | `-VarDecl 0x1531e7f76c8 <col:5, col:31> col:25 used ctx 'tlsextnextprotoctx *' cinit
|   |   `-ImplicitCastExpr 0x1531e7f7780 <col:31> 'tlsextnextprotoctx *' <BitCast>
|   |     `-ImplicitCastExpr 0x1531e7f7768 <col:31> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1531e7f7730 <col:31> 'void *' lvalue ParmVar 0x1531e7f7450 'arg' 'void *'
|   |-IfStmt 0x1531e7f7fd8 <line:347:5, line:358:5>
|   | |-UnaryOperator 0x1531e7f77e8 <line:347:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1531e7f77d0 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1531e7f77b0 <col:10> 'int' lvalue Var 0x1531e7e1038 'c_quiet' 'int'
|   | `-CompoundStmt 0x1531e7f7fb8 <col:19, line:358:5>
|   |   |-DeclStmt 0x1531e7f7880 <line:349:9, col:19>
|   |   | `-VarDecl 0x1531e7f7818 <col:9, col:18> col:18 used i 'unsigned int'
|   |   `-ForStmt 0x1531e7f7f18 <line:351:9, line:356:9>
|   |     |-BinaryOperator 0x1531e7f7968 <line:351:14, col:18> 'unsigned int' '='
|   |     | |-DeclRefExpr 0x1531e7f78f0 <col:14> 'unsigned int' lvalue Var 0x1531e7f7818 'i' 'unsigned int'
|   |     | `-ImplicitCastExpr 0x1531e7f7950 <col:18> 'unsigned int' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1531e7f7928 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1531e7f7a10 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1531e7f79e0 <col:21> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1531e7f7988 <col:21> 'unsigned int' lvalue Var 0x1531e7f7818 'i' 'unsigned int'
|   |     | `-ImplicitCastExpr 0x1531e7f79f8 <col:25> 'unsigned int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1531e7f79a8 <col:25> 'unsigned int' lvalue ParmVar 0x1531e7f73d0 'inlen' 'unsigned int'
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x1531e7f7f00 <col:33, line:356:9>
|   |       `-CompoundAssignOperator 0x1531e7f7ed0 <line:355:13, col:26> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |         |-DeclRefExpr 0x1531e7f7d90 <col:13> 'unsigned int' lvalue Var 0x1531e7f7818 'i' 'unsigned int'
|   |         `-ImplicitCastExpr 0x1531e7f7eb8 <col:18, col:26> 'unsigned int' <IntegralCast>
|   |           `-BinaryOperator 0x1531e7f7e98 <col:18, col:26> 'int' '+'
|   |             |-ImplicitCastExpr 0x1531e7f7e80 <col:18, col:22> 'int' <IntegralCast>
|   |             | `-ImplicitCastExpr 0x1531e7f7e68 <col:18, col:22> 'unsigned char' <LValueToRValue>
|   |             |   `-ArraySubscriptExpr 0x1531e7f7e20 <col:18, col:22> 'const unsigned char' lvalue
|   |             |     |-ImplicitCastExpr 0x1531e7f7df0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |             |     | `-DeclRefExpr 0x1531e7f7db0 <col:18> 'const unsigned char *' lvalue ParmVar 0x1531e7f7350 'in' 'const unsigned char *'
|   |             |     `-ImplicitCastExpr 0x1531e7f7e08 <col:21> 'unsigned int' <LValueToRValue>
|   |             |       `-DeclRefExpr 0x1531e7f7dd0 <col:21> 'unsigned int' lvalue Var 0x1531e7f7818 'i' 'unsigned int'
|   |             `-IntegerLiteral 0x1531e7f7e40 <col:26> 'int' 1
|   `-BinaryOperator 0x1531e7f8440 <line:360:5, line:361:74> 'int' '='
|     |-MemberExpr 0x1531e7f8040 <line:360:5, col:10> 'int' lvalue ->status 0x1531e7f6fd0
|     | `-ImplicitCastExpr 0x1531e7f8028 <col:5> 'tlsextnextprotoctx *' <LValueToRValue>
|     |   `-DeclRefExpr 0x1531e7f7ff0 <col:5> 'tlsextnextprotoctx *' lvalue Var 0x1531e7f76c8 'ctx' 'tlsextnextprotoctx *'
|     `-CallExpr 0x1531e7f8360 <line:361:9, col:74> 'int'
|       |-ImplicitCastExpr 0x1531e7f8348 <col:9> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1531e7f81a8 <col:9> 'int ()' Function 0x1531e7f80e0 'SSL_select_next_proto' 'int ()'
|       |-ImplicitCastExpr 0x1531e7f83b0 <col:31> 'unsigned char **' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e7f81c8 <col:31> 'unsigned char **' lvalue ParmVar 0x1531e7f7250 'out' 'unsigned char **'
|       |-ImplicitCastExpr 0x1531e7f83c8 <col:36> 'unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e7f8200 <col:36> 'unsigned char *' lvalue ParmVar 0x1531e7f72d0 'outlen' 'unsigned char *'
|       |-ImplicitCastExpr 0x1531e7f83e0 <col:44> 'const unsigned char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e7f8238 <col:44> 'const unsigned char *' lvalue ParmVar 0x1531e7f7350 'in' 'const unsigned char *'
|       |-ImplicitCastExpr 0x1531e7f83f8 <col:48> 'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e7f8258 <col:48> 'unsigned int' lvalue ParmVar 0x1531e7f73d0 'inlen' 'unsigned int'
|       |-ImplicitCastExpr 0x1531e7f8410 <col:55, col:60> 'unsigned char *' <LValueToRValue>
|       | `-MemberExpr 0x1531e7f82b0 <col:55, col:60> 'unsigned char *' lvalue ->data 0x1531e7f6ef8
|       |   `-ImplicitCastExpr 0x1531e7f8298 <col:55> 'tlsextnextprotoctx *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1531e7f8278 <col:55> 'tlsextnextprotoctx *' lvalue Var 0x1531e7f76c8 'ctx' 'tlsextnextprotoctx *'
|       `-ImplicitCastExpr 0x1531e7f8428 <col:66, col:71> 'size_t':'unsigned long long' <LValueToRValue>
|         `-MemberExpr 0x1531e7f8318 <col:66, col:71> 'size_t':'unsigned long long' lvalue ->len 0x1531e7f6f60
|           `-ImplicitCastExpr 0x1531e7f8300 <col:66> 'tlsextnextprotoctx *' <LValueToRValue>
|             `-DeclRefExpr 0x1531e7f82e0 <col:66> 'tlsextnextprotoctx *' lvalue Var 0x1531e7f76c8 'ctx' 'tlsextnextprotoctx *'
|-FunctionDecl 0x1531e7f8890 <line:366:1, line:384:1> line:366:12 invalid serverinfo_cli_parse_cb 'int (int *, unsigned int, const unsigned char *, size_t, int *, void *)' static
| |-ParmVarDecl 0x1531e7f84a0 <col:36, col:41> col:41 invalid s 'int *'
| |-ParmVarDecl 0x1531e7f8520 <col:44, col:57> col:57 used ext_type 'unsigned int'
| |-ParmVarDecl 0x1531e7f85a0 <line:367:36, col:57> col:57 used in 'const unsigned char *'
| |-ParmVarDecl 0x1531e7f8618 <col:61, col:68> col:68 used inlen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1531e7f8698 <line:368:36, col:41> col:41 al 'int *'
| |-ParmVarDecl 0x1531e7f8718 <col:45, col:51> col:51 arg 'void *'
| `-CompoundStmt 0x1531e7f9790 <line:369:1, line:384:1>
|   |-DeclStmt 0x1531e7f8a80 <line:370:5, col:23>
|   | `-VarDecl 0x1531e7f8a18 <col:5, col:22> col:10 used pem_name 'char [100]'
|   |-DeclStmt 0x1531e7f8be8 <line:371:5, col:37>
|   | `-VarDecl 0x1531e7f8b80 <col:5, col:36> col:19 used ext_buf 'unsigned char [65540]'
|   |-BinaryOperator 0x1531e7f8d48 <line:374:5, col:30> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1531e7f8c78 <col:5, col:14> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1531e7f8c60 <col:5> 'unsigned char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1531e7f8c00 <col:5> 'unsigned char [65540]' lvalue Var 0x1531e7f8b80 'ext_buf' 'unsigned char [65540]'
|   | | `-IntegerLiteral 0x1531e7f8c38 <col:13> 'int' 0
|   | `-ImplicitCastExpr 0x1531e7f8d30 <col:18, col:30> 'unsigned char' <IntegralCast>
|   |   `-BinaryOperator 0x1531e7f8d10 <col:18, col:30> 'unsigned int' '>>'
|   |     |-ImplicitCastExpr 0x1531e7f8cf8 <col:18> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1531e7f8c98 <col:18> 'unsigned int' lvalue ParmVar 0x1531e7f8520 'ext_type' 'unsigned int'
|   |     `-IntegerLiteral 0x1531e7f8cd0 <col:30> 'int' 8
|   |-BinaryOperator 0x1531e7f8e98 <line:375:5, col:29> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1531e7f8dc8 <col:5, col:14> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1531e7f8db0 <col:5> 'unsigned char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1531e7f8d68 <col:5> 'unsigned char [65540]' lvalue Var 0x1531e7f8b80 'ext_buf' 'unsigned char [65540]'
|   | | `-IntegerLiteral 0x1531e7f8d88 <col:13> 'int' 1
|   | `-ImplicitCastExpr 0x1531e7f8e80 <col:18, col:29> 'unsigned char' <IntegralCast>
|   |   `-BinaryOperator 0x1531e7f8e60 <col:18, col:29> 'unsigned int' '&'
|   |     |-ImplicitCastExpr 0x1531e7f8e30 <col:18> 'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1531e7f8de8 <col:18> 'unsigned int' lvalue ParmVar 0x1531e7f8520 'ext_type' 'unsigned int'
|   |     `-ImplicitCastExpr 0x1531e7f8e48 <col:29> 'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x1531e7f8e08 <col:29> 'int' 255
|   |-BinaryOperator 0x1531e7f8fe8 <line:376:5, col:27> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1531e7f8f18 <col:5, col:14> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1531e7f8f00 <col:5> 'unsigned char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1531e7f8eb8 <col:5> 'unsigned char [65540]' lvalue Var 0x1531e7f8b80 'ext_buf' 'unsigned char [65540]'
|   | | `-IntegerLiteral 0x1531e7f8ed8 <col:13> 'int' 2
|   | `-ImplicitCastExpr 0x1531e7f8fd0 <col:18, col:27> 'unsigned char' <IntegralCast>
|   |   `-BinaryOperator 0x1531e7f8fb0 <col:18, col:27> 'size_t':'unsigned long long' '>>'
|   |     |-ImplicitCastExpr 0x1531e7f8f98 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1531e7f8f38 <col:18> 'size_t':'unsigned long long' lvalue ParmVar 0x1531e7f8618 'inlen' 'size_t':'unsigned long long'
|   |     `-IntegerLiteral 0x1531e7f8f70 <col:27> 'int' 8
|   |-BinaryOperator 0x1531e7f9138 <line:377:5, col:26> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1531e7f9068 <col:5, col:14> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1531e7f9050 <col:5> 'unsigned char *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x1531e7f9008 <col:5> 'unsigned char [65540]' lvalue Var 0x1531e7f8b80 'ext_buf' 'unsigned char [65540]'
|   | | `-IntegerLiteral 0x1531e7f9028 <col:13> 'int' 3
|   | `-ImplicitCastExpr 0x1531e7f9120 <col:18, col:26> 'unsigned char' <IntegralCast>
|   |   `-BinaryOperator 0x1531e7f9100 <col:18, col:26> 'unsigned long long' '&'
|   |     |-ImplicitCastExpr 0x1531e7f90d0 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1531e7f9088 <col:18> 'size_t':'unsigned long long' lvalue ParmVar 0x1531e7f8618 'inlen' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x1531e7f90e8 <col:26> 'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x1531e7f90a8 <col:26> 'int' 255
|   |-CallExpr 0x1531e7f9298 <line:378:5, col:34> 'void *'
|   | |-ImplicitCastExpr 0x1531e7f9280 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e7f9158 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x1531e7313a8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x1531e7f92d0 <col:12, col:22> 'void *' <BitCast>
|   | | `-BinaryOperator 0x1531e7f91d8 <col:12, col:22> 'unsigned char *' '+'
|   | |   |-ImplicitCastExpr 0x1531e7f91c0 <col:12> 'unsigned char *' <ArrayToPointerDecay>
|   | |   | `-DeclRefExpr 0x1531e7f9178 <col:12> 'unsigned char [65540]' lvalue Var 0x1531e7f8b80 'ext_buf' 'unsigned char [65540]'
|   | |   `-IntegerLiteral 0x1531e7f9198 <col:22> 'int' 4
|   | |-ImplicitCastExpr 0x1531e7f9300 <col:25> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1531e7f92e8 <col:25> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1531e7f91f8 <col:25> 'const unsigned char *' lvalue ParmVar 0x1531e7f85a0 'in' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x1531e7f9318 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e7f9230 <col:29> 'size_t':'unsigned long long' lvalue ParmVar 0x1531e7f8618 'inlen' 'size_t':'unsigned long long'
|   |-CallExpr 0x1531e7f9498 <line:380:5, line:381:26> 'int'
|   | |-ImplicitCastExpr 0x1531e7f9480 <line:380:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e7f9330 <col:5> 'int ()' Function 0x1531e7eb0d0 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x1531e7f94d8 <col:18> 'char *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x1531e7f9350 <col:18> 'char [100]' lvalue Var 0x1531e7f8a18 'pem_name' 'char [100]'
|   | |-UnaryExprOrTypeTraitExpr 0x1531e7f93c8 <col:28, col:43> 'unsigned long long' sizeof
|   | | `-ParenExpr 0x1531e7f93a8 <col:34, col:43> 'char [100]' lvalue
|   | |   `-DeclRefExpr 0x1531e7f9388 <col:35> 'char [100]' lvalue Var 0x1531e7f8a18 'pem_name' 'char [100]' non_odr_use_unevaluated
|   | |-ImplicitCastExpr 0x1531e7f94f0 <col:46> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x1531e7f9428 <col:46> 'char [28]' lvalue "SERVERINFO FOR EXTENSION %d"
|   | `-ImplicitCastExpr 0x1531e7f9508 <line:381:18> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e7f9460 <col:18> 'unsigned int' lvalue ParmVar 0x1531e7f8520 'ext_type' 'unsigned int'
|   `-ReturnStmt 0x1531e7f9780 <line:383:5, col:12>
|     `-IntegerLiteral 0x1531e7f9758 <col:12> 'int' 1
|-FunctionDecl 0x1531e7f99f0 <line:390:1, line:427:1> line:390:21 invalid hexdecode 'int (const char **, void *)' static
| |-ParmVarDecl 0x1531e7f9860 <col:31, col:44> col:44 used inptr 'const char **'
| |-ParmVarDecl 0x1531e7f98e0 <col:51, col:57> col:57 used result 'void *'
| `-CompoundStmt 0x1531e7fb058 <line:391:1, line:427:1>
|   |-DeclStmt 0x1531e7f9bc0 <line:392:5, col:51>
|   | `-VarDecl 0x1531e7f9ad8 <col:5, col:45> col:21 used out 'unsigned char **' cinit
|   |   `-CStyleCastExpr 0x1531e7f9b98 <col:27, col:45> 'unsigned char **' <BitCast>
|   |     `-ImplicitCastExpr 0x1531e7f9b80 <col:45> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       `-DeclRefExpr 0x1531e7f9b40 <col:45> 'void *' lvalue ParmVar 0x1531e7f98e0 'result' 'void *'
|   |-DeclStmt 0x1531e7f9cc0 <line:393:5, col:28>
|   | `-VarDecl 0x1531e7f9bf0 <col:5, col:23> col:17 used in 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1531e7f9ca8 <col:22, col:23> 'const char *' <LValueToRValue>
|   |     `-UnaryOperator 0x1531e7f9c90 <col:22, col:23> 'const char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1531e7f9c78 <col:23> 'const char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x1531e7f9c58 <col:23> 'const char **' lvalue ParmVar 0x1531e7f9860 'inptr' 'const char **'
|   |-DeclStmt 0x1531e7f9fd8 <line:394:5, col:65>
|   | `-VarDecl 0x1531e7f9cf0 <col:5, col:64> col:20 used ret 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1531e7f9fc0 <col:26, col:64> 'unsigned char *' <BitCast>
|   |     `-CallExpr 0x1531e7f9f48 <col:26, col:64> 'void *'
|   |       |-ImplicitCastExpr 0x1531e7f9f30 <col:26> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1531e7f9d58 <col:26> 'void *(int, const char *)' Function 0x1531e8e8010 'app_malloc' 'void *(int, const char *)'
|   |       |-ImplicitCastExpr 0x1531e7f9f78 <col:37, col:50> 'int' <IntegralCast>
|   |       | `-BinaryOperator 0x1531e7f9eb0 <col:37, col:50> 'unsigned long long' '/'
|   |       |   |-CallExpr 0x1531e7f9e30 <col:37, col:46> 'unsigned long long'
|   |       |   | |-ImplicitCastExpr 0x1531e7f9e18 <col:37> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       |   | | `-DeclRefExpr 0x1531e7f9d78 <col:37> 'unsigned long long (const char *)' Function 0x1531e739bd0 'strlen' 'unsigned long long (const char *)'
|   |       |   | `-ImplicitCastExpr 0x1531e7f9e58 <col:44> 'const char *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x1531e7f9d98 <col:44> 'const char *' lvalue Var 0x1531e7f9bf0 'in' 'const char *'
|   |       |   `-ImplicitCastExpr 0x1531e7f9e98 <col:50> 'unsigned long long' <IntegralCast>
|   |       |     `-IntegerLiteral 0x1531e7f9e70 <col:50> 'int' 2
|   |       `-ImplicitCastExpr 0x1531e7f9fa8 <col:53> 'const char *' <NoOp>
|   |         `-ImplicitCastExpr 0x1531e7f9f90 <col:53> 'char *' <ArrayToPointerDecay>
|   |           `-StringLiteral 0x1531e7f9f08 <col:53> 'char [10]' lvalue "hexdecode"
|   |-DeclStmt 0x1531e7fa0c0 <line:395:5, col:28>
|   | `-VarDecl 0x1531e7fa008 <col:5, col:25> col:20 used cp 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1531e7fa0a8 <col:25> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1531e7fa070 <col:25> 'unsigned char *' lvalue Var 0x1531e7f9cf0 'ret' 'unsigned char *'
|   |-DeclStmt 0x1531e7fa198 <line:397:5, col:19>
|   | `-VarDecl 0x1531e7fa108 <col:5, col:18> col:9 used nibble 'int' cinit
|   |   `-IntegerLiteral 0x1531e7fa170 <col:18> 'int' 0
|   |-IfStmt 0x1531e7fa2f8 <line:399:5, line:400:17>
|   | |-BinaryOperator 0x1531e7fa288 <line:399:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1531e7fa258 <.//openssl//file_jk/after\apps\s_client.c:399:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e7fa1b0 <col:9> 'unsigned char *' lvalue Var 0x1531e7f9cf0 'ret' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x1531e7fa270 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1531e7fa238 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e7fa210 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e7fa1d0 <col:26> 'int' 0
|   | `-ReturnStmt 0x1531e7fa2e8 <.//openssl//file_jk/after\apps\s_client.c:400:9, col:17>
|   |   `-UnaryOperator 0x1531e7fa2d0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1531e7fa2a8 <col:17> 'int' 1
|   |-ForStmt 0x1531e7fac90 <line:402:5, line:419:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x1531e7fa388 <line:402:20, col:21> 'char' <LValueToRValue>
|   | | `-UnaryOperator 0x1531e7fa370 <col:20, col:21> 'const char' lvalue prefix '*' cannot overflow
|   | |   `-ImplicitCastExpr 0x1531e7fa358 <col:21> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1531e7fa338 <col:21> 'const char *' lvalue Var 0x1531e7f9bf0 'in' 'const char *'
|   | |-UnaryOperator 0x1531e7fa3c0 <col:25, col:27> 'const char *' prefix '++'
|   | | `-DeclRefExpr 0x1531e7fa3a0 <col:27> 'const char *' lvalue Var 0x1531e7f9bf0 'in' 'const char *'
|   | `-CompoundStmt 0x1531e7fac58 <col:31, line:419:5>
|   |   |-DeclStmt 0x1531e7fa458 <line:403:9, col:14>
|   |   | `-VarDecl 0x1531e7fa3f0 <col:9, col:13> col:13 used x 'int'
|   |   |-IfStmt 0x1531e7fa628 <line:405:9, line:406:13>
|   |   | |-CallExpr 0x1531e7fa5e0 <line:405:13, col:29> 'int'
|   |   | | |-ImplicitCastExpr 0x1531e7fa5c8 <col:13> 'int (*)(int)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x1531e7fa470 <col:13> 'int (int)' Function 0x1531e6f0b80 'isspace' 'int (int)'
|   |   | | `-ImplicitCastExpr 0x1531e7fa608 <.//openssl//file_jk/after\apps/apps.h:41:16, col:35> 'int' <IntegralCast>
|   |   | |   `-ParenExpr 0x1531e7fa578 <col:16, col:35> 'unsigned char'
|   |   | |     `-CStyleCastExpr 0x1531e7fa550 <col:17, col:34> 'unsigned char' <IntegralCast>
|   |   | |       `-ImplicitCastExpr 0x1531e7fa538 <col:32, col:34> 'char' <LValueToRValue> part_of_explicit_cast
|   |   | |         `-ParenExpr 0x1531e7fa518 <col:32, col:34> 'const char' lvalue
|   |   | |           `-UnaryOperator 0x1531e7fa4c8 <.//openssl//file_jk/after\apps\s_client.c:405:25, col:26> 'const char' lvalue prefix '*' cannot overflow
|   |   | |             `-ImplicitCastExpr 0x1531e7fa4b0 <col:26> 'const char *' <LValueToRValue>
|   |   | |               `-DeclRefExpr 0x1531e7fa490 <col:26> 'const char *' lvalue Var 0x1531e7f9bf0 'in' 'const char *'
|   |   | `-ContinueStmt 0x1531e7fa620 <line:406:13>
|   |   |-BinaryOperator 0x1531e7fa848 <line:407:9, col:36> 'int' '='
|   |   | |-DeclRefExpr 0x1531e7fa640 <col:9> 'int' lvalue Var 0x1531e7fa3f0 'x' 'int'
|   |   | `-CallExpr 0x1531e7fa7f0 <col:13, col:36> 'int'
|   |   |   |-ImplicitCastExpr 0x1531e7fa7d8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1531e7fa768 <col:13> 'int ()' Function 0x1531e7fa6a0 'OPENSSL_hexchar2int' 'int ()'
|   |   |   `-ImplicitCastExpr 0x1531e7fa830 <col:33, col:34> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1531e7fa818 <col:33, col:34> 'char' <LValueToRValue>
|   |   |       `-UnaryOperator 0x1531e7fa7c0 <col:33, col:34> 'const char' lvalue prefix '*' cannot overflow
|   |   |         `-ImplicitCastExpr 0x1531e7fa7a8 <col:34> 'const char *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x1531e7fa788 <col:34> 'const char *' lvalue Var 0x1531e7f9bf0 'in' 'const char *'
|   |   |-IfStmt 0x1531e7fa9d8 <line:408:9, line:411:9>
|   |   | |-BinaryOperator 0x1531e7fa8c8 <line:408:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1531e7fa8b0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1531e7fa868 <col:13> 'int' lvalue Var 0x1531e7fa3f0 'x' 'int'
|   |   | | `-IntegerLiteral 0x1531e7fa888 <col:17> 'int' 0
|   |   | `-CompoundStmt 0x1531e7fa9b8 <col:20, line:411:9>
|   |   |   |-CallExpr 0x1531e7fa940 <line:409:13, col:29> 'int'
|   |   |   | |-ImplicitCastExpr 0x1531e7fa928 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1531e7fa8e8 <col:13> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x1531e7fa968 <col:26> 'unsigned char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1531e7fa908 <col:26> 'unsigned char *' lvalue Var 0x1531e7f9cf0 'ret' 'unsigned char *'
|   |   |   `-ReturnStmt 0x1531e7fa9a8 <line:410:13, col:20>
|   |   |     `-IntegerLiteral 0x1531e7fa980 <col:20> 'int' 0
|   |   `-IfStmt 0x1531e7fac30 <line:413:9, line:418:9> has_else
|   |     |-BinaryOperator 0x1531e7fab38 <line:413:13, col:30> 'int' '=='
|   |     | |-ParenExpr 0x1531e7faaf0 <col:13, col:25> 'int'
|   |     | | `-CompoundAssignOperator 0x1531e7faac0 <col:14, col:24> 'int' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |   |-DeclRefExpr 0x1531e7faa60 <col:14> 'int' lvalue Var 0x1531e7fa108 'nibble' 'int'
|   |     | |   `-IntegerLiteral 0x1531e7faa98 <col:24> 'int' 1
|   |     | `-IntegerLiteral 0x1531e7fab10 <col:30> 'int' 0
|   |     |-CompoundStmt 0x1531e7fabe8 <col:33, line:416:9>
|   |     `-CompoundStmt 0x1531e7fac20 <col:16, line:418:9>
|   |-IfStmt 0x1531e7fae38 <line:420:5, line:423:5>
|   | |-BinaryOperator 0x1531e7fad28 <line:420:9, col:19> 'int' '!='
|   | | |-ImplicitCastExpr 0x1531e7fad10 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e7facc8 <col:9> 'int' lvalue Var 0x1531e7fa108 'nibble' 'int'
|   | | `-IntegerLiteral 0x1531e7face8 <col:19> 'int' 0
|   | `-CompoundStmt 0x1531e7fae18 <col:22, line:423:5>
|   |   |-CallExpr 0x1531e7fada0 <line:421:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1531e7fad88 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1531e7fad48 <col:9> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1531e7fadc8 <col:22> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1531e7fad68 <col:22> 'unsigned char *' lvalue Var 0x1531e7f9cf0 'ret' 'unsigned char *'
|   |   `-ReturnStmt 0x1531e7fae08 <line:422:9, col:16>
|   |     `-IntegerLiteral 0x1531e7fade0 <col:16> 'int' 0
|   |-BinaryOperator 0x1531e7faed8 <line:424:5, col:14> 'const char *' '='
|   | |-UnaryOperator 0x1531e7fae88 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1531e7fae70 <col:6> 'const char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1531e7fae50 <col:6> 'const char **' lvalue ParmVar 0x1531e7f9860 'inptr' 'const char **'
|   | `-ImplicitCastExpr 0x1531e7faec0 <col:14> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e7faea0 <col:14> 'const char *' lvalue Var 0x1531e7f9bf0 'in' 'const char *'
|   `-ReturnStmt 0x1531e7fb048 <line:426:5, col:28>
|     `-ImplicitCastExpr 0x1531e7fb030 <col:12, col:28> 'int' <IntegralCast>
|       `-BinaryOperator 0x1531e7fb010 <col:12, col:28> 'long long' '-'
|         |-ImplicitCastExpr 0x1531e7faff8 <col:12> 'unsigned char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1531e7faef8 <col:12> 'unsigned char *' lvalue Var 0x1531e7fa008 'cp' 'unsigned char *'
|         `-ParenExpr 0x1531e7fafd8 <col:17, col:28> 'unsigned char *'
|           `-BinaryOperator 0x1531e7fafb8 <col:18, col:25> 'unsigned char *' '='
|             |-UnaryOperator 0x1531e7faf68 <col:18, col:19> 'unsigned char *' lvalue prefix '*' cannot overflow
|             | `-ImplicitCastExpr 0x1531e7faf50 <col:19> 'unsigned char **' <LValueToRValue>
|             |   `-DeclRefExpr 0x1531e7faf18 <col:19> 'unsigned char **' lvalue Var 0x1531e7f9ad8 'out' 'unsigned char **'
|             `-ImplicitCastExpr 0x1531e7fafa0 <col:25> 'unsigned char *' <LValueToRValue>
|               `-DeclRefExpr 0x1531e7faf80 <col:25> 'unsigned char *' lvalue Var 0x1531e7f9cf0 'ret' 'unsigned char *'
|-FunctionDecl 0x1531e7fb220 <line:433:1, line:455:1> line:433:21 invalid checked_uint8 'int (const char **, void *)' static
| |-ParmVarDecl 0x1531e7fb0d0 <col:35, col:48> col:48 used inptr 'const char **'
| |-ParmVarDecl 0x1531e7fb150 <col:55, col:61> col:61 out 'void *'
| `-CompoundStmt 0x1531e7f0160 <line:434:1, line:455:1>
|   |-DeclStmt 0x1531e7fb3d0 <line:436:5, col:28>
|   | `-VarDecl 0x1531e7fb300 <col:5, col:23> col:17 used in 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1531e7fb3b8 <col:22, col:23> 'const char *' <LValueToRValue>
|   |     `-UnaryOperator 0x1531e7fb3a0 <col:22, col:23> 'const char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1531e7fb388 <col:23> 'const char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x1531e7fb368 <col:23> 'const char **' lvalue ParmVar 0x1531e7fb0d0 'inptr' 'const char **'
|   |-DeclStmt 0x1531e7fb468 <line:437:5, col:15>
|   | `-VarDecl 0x1531e7fb400 <col:5, col:11> col:11 used endp 'char *'
|   |-DeclStmt 0x1531e7fb500 <line:438:5, col:11>
|   | `-VarDecl 0x1531e7fb498 <col:5, col:10> col:10 used v 'long'
|   |-DeclStmt 0x1531e7fb598 <line:439:5, col:10>
|   | `-VarDecl 0x1531e7fb530 <col:5, col:9> col:9 used e 'int'
|   |-CallExpr 0x1531e7fb5e8 <line:441:5, col:16> 'void'
|   | `-ImplicitCastExpr 0x1531e7fb5d0 <col:5> 'void (*)(void)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x1531e7fb5b0 <col:5> 'void (void)' Function 0x1531e7e16e0 'save_errno' 'void (void)'
|   |-BinaryOperator 0x1531e7fb7c0 <line:442:5, col:29> 'long' '='
|   | |-DeclRefExpr 0x1531e7fb608 <col:5> 'long' lvalue Var 0x1531e7fb498 'v' 'long'
|   | `-CallExpr 0x1531e7fb770 <col:9, col:29> 'long'
|   |   |-ImplicitCastExpr 0x1531e7fb758 <col:9> 'long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1531e7fb640 <col:9> 'long (const char *, char **, int)' Function 0x1531e7bbb88 'strtol' 'long (const char *, char **, int)'
|   |   |-ImplicitCastExpr 0x1531e7fb7a8 <col:16> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e7fb660 <col:16> 'const char *' lvalue Var 0x1531e7fb300 'in' 'const char *'
|   |   |-UnaryOperator 0x1531e7fb6d0 <col:20, col:21> 'char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x1531e7fb698 <col:21> 'char *' lvalue Var 0x1531e7fb400 'endp' 'char *'
|   |   `-IntegerLiteral 0x1531e7fb6e8 <col:27> 'int' 10
|   |-BinaryOperator 0x1531e7fb870 <line:443:5, col:23> 'int' '='
|   | |-DeclRefExpr 0x1531e7fb7e0 <col:5> 'int' lvalue Var 0x1531e7fb530 'e' 'int'
|   | `-CallExpr 0x1531e7fb850 <col:9, col:23> 'int'
|   |   `-ImplicitCastExpr 0x1531e7fb838 <col:9> 'int (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x1531e7fb818 <col:9> 'int (void)' Function 0x1531e7e1a78 'restore_errno' 'int (void)'
|   |-IfStmt 0x1531e7fbe30 <line:445:5, line:449:5>
|   | |-OpaqueValueExpr 0x1531e7fbe18 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e7fbe00 <line:447:39, line:449:5>
|   |   `-ReturnStmt 0x1531e7fbdf0 <line:448:9, col:17>
|   |     `-UnaryOperator 0x1531e7fbdd8 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1531e7fbdb0 <col:17> 'int' 1
|   |-ForStmt 0x1531e7fc098 <line:450:5, line:451:9>
|   | |-BinaryOperator 0x1531e7fbeb8 <line:450:10, col:15> 'const char *' '='
|   | | |-DeclRefExpr 0x1531e7fbe48 <col:10> 'const char *' lvalue Var 0x1531e7fb300 'in' 'const char *'
|   | | `-ImplicitCastExpr 0x1531e7fbea0 <col:15> 'const char *' <NoOp>
|   | |   `-ImplicitCastExpr 0x1531e7fbe88 <col:15> 'char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1531e7fbe68 <col:15> 'char *' lvalue Var 0x1531e7fb400 'endp' 'char *'
|   | |-<<<NULL>>>
|   | |-CallExpr 0x1531e7fc018 <col:21, col:37> 'int'
|   | | |-ImplicitCastExpr 0x1531e7fc000 <col:21> 'int (*)(int)' <FunctionToPointerDecay>
|   | | | `-DeclRefExpr 0x1531e7fbed8 <col:21> 'int (int)' Function 0x1531e6f0b80 'isspace' 'int (int)'
|   | | `-ImplicitCastExpr 0x1531e7fc040 <.//openssl//file_jk/after\apps/apps.h:41:16, col:35> 'int' <IntegralCast>
|   | |   `-ParenExpr 0x1531e7fbfe0 <col:16, col:35> 'unsigned char'
|   | |     `-CStyleCastExpr 0x1531e7fbfb8 <col:17, col:34> 'unsigned char' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x1531e7fbfa0 <col:32, col:34> 'char' <LValueToRValue> part_of_explicit_cast
|   | |         `-ParenExpr 0x1531e7fbf80 <col:32, col:34> 'const char' lvalue
|   | |           `-UnaryOperator 0x1531e7fbf30 <.//openssl//file_jk/after\apps\s_client.c:450:33, col:34> 'const char' lvalue prefix '*' cannot overflow
|   | |             `-ImplicitCastExpr 0x1531e7fbf18 <col:34> 'const char *' <LValueToRValue>
|   | |               `-DeclRefExpr 0x1531e7fbef8 <col:34> 'const char *' lvalue Var 0x1531e7fb300 'in' 'const char *'
|   | |-UnaryOperator 0x1531e7fc078 <col:40, col:42> 'const char *' prefix '++'
|   | | `-DeclRefExpr 0x1531e7fc058 <col:42> 'const char *' lvalue Var 0x1531e7fb300 'in' 'const char *'
|   | `-ContinueStmt 0x1531e7fc090 <line:451:9>
|   |-BinaryOperator 0x1531e7f0108 <line:453:5, col:14> 'const char *' '='
|   | |-UnaryOperator 0x1531e7f00b8 <col:5, col:6> 'const char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1531e7f00a0 <col:6> 'const char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1531e7fc0d0 <col:6> 'const char **' lvalue ParmVar 0x1531e7fb0d0 'inptr' 'const char **'
|   | `-ImplicitCastExpr 0x1531e7f00f0 <col:14> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e7f00d0 <col:14> 'const char *' lvalue Var 0x1531e7fb300 'in' 'const char *'
|   `-ReturnStmt 0x1531e7f0150 <line:454:5, col:12>
|     `-IntegerLiteral 0x1531e7f0128 <col:12> 'int' 1
|-RecordDecl 0x1531e7f01c8 <line:457:1, line:461:1> line:457:8 invalid struct tlsa_field definition
| |-FieldDecl 0x1531e7f0298 <line:458:5, col:11> col:11 referenced var 'void *'
| |-FieldDecl 0x1531e7f0308 <line:459:5, col:17> col:17 referenced name 'const char *'
| `-FieldDecl 0x1531e7f0580 <line:460:5, <invalid sloc>> col:5 invalid ossl_ssize_t 'int ((int *))(const char **, void *)'
|-FunctionDecl 0x1531e7f0710 <line:463:1, line:507:1> line:463:12 invalid tlsa_import_rr 'int (int *, const char *)' static
| |-ParmVarDecl 0x1531e7f05f0 <col:27, col:32> col:32 invalid con 'int *'
| |-ParmVarDecl 0x1531e7f0670 <col:37, col:49> col:49 used rrdata 'const char *'
| `-CompoundStmt 0x1531e7f1b30 <line:464:1, line:507:1>
|   |-DeclStmt 0x1531e7f0858 <line:466:5, col:25>
|   | `-VarDecl 0x1531e7f07f0 <col:5, col:20> col:20 invalid usage 'int' static
|   |-DeclStmt 0x1531e7f08f0 <line:467:5, col:28>
|   | `-VarDecl 0x1531e7f0888 <col:5, col:20> col:20 invalid selector 'int' static
|   |-DeclStmt 0x1531e7f0988 <line:468:5, col:25>
|   | `-VarDecl 0x1531e7f0920 <col:5, col:20> col:20 invalid mtype 'int' static
|   |-DeclStmt 0x1531e7f0a20 <line:469:5, col:31>
|   | `-VarDecl 0x1531e7f09b8 <col:5, col:27> col:27 used data 'unsigned char *' static
|   |-DeclStmt 0x1531e7f0d38 <line:470:5, line:476:6>
|   | `-VarDecl 0x1531e7f0af8 <line:470:5, col:42> col:30 used tlsa_fields 'struct tlsa_field []' static
|   |-DeclStmt 0x1531e7f0e38 <line:477:5, col:25>
|   | `-VarDecl 0x1531e7f0dd0 <col:5, col:24> col:24 used f 'struct tlsa_field *'
|   |-DeclStmt 0x1531e7f0ed0 <line:478:5, col:12>
|   | `-VarDecl 0x1531e7f0e68 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x1531e7f0fb8 <line:479:5, col:28>
|   | `-VarDecl 0x1531e7f0f00 <col:5, col:22> col:17 used cp 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1531e7f0fa0 <col:22> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1531e7f0f68 <col:22> 'const char *' lvalue ParmVar 0x1531e7f0670 'rrdata' 'const char *'
|   |-ForStmt 0x1531e7f1428 <line:482:5, line:489:5>
|   | |-BinaryOperator 0x1531e7f1058 <line:482:10, col:14> 'struct tlsa_field *' '='
|   | | |-DeclRefExpr 0x1531e7f0fd0 <col:10> 'struct tlsa_field *' lvalue Var 0x1531e7f0dd0 'f' 'struct tlsa_field *'
|   | | `-ImplicitCastExpr 0x1531e7f1040 <col:14> 'struct tlsa_field *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1531e7f1008 <col:14> 'struct tlsa_field []' lvalue Var 0x1531e7f0af8 'tlsa_fields' 'struct tlsa_field []'
|   | |-<<<NULL>>>
|   | |-ImplicitCastExpr 0x1531e7f10e0 <col:27, col:30> 'void *' <LValueToRValue>
|   | | `-MemberExpr 0x1531e7f10b0 <col:27, col:30> 'void *' lvalue ->var 0x1531e7f0298
|   | |   `-ImplicitCastExpr 0x1531e7f1098 <col:27> 'struct tlsa_field *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1531e7f1078 <col:27> 'struct tlsa_field *' lvalue Var 0x1531e7f0dd0 'f' 'struct tlsa_field *'
|   | |-UnaryOperator 0x1531e7f1118 <col:35, col:37> 'struct tlsa_field *' prefix '++'
|   | | `-DeclRefExpr 0x1531e7f10f8 <col:37> 'struct tlsa_field *' lvalue Var 0x1531e7f0dd0 'f' 'struct tlsa_field *'
|   | `-CompoundStmt 0x1531e7f1410 <col:40, line:489:5>
|   |   `-IfStmt 0x1531e7f13f8 <line:484:9, line:488:9>
|   |     |-OpaqueValueExpr 0x1531e7f13e0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e7f13c8 <line:484:50, line:488:9>
|   |       `-ReturnStmt 0x1531e7f13b8 <line:487:13, col:20>
|   |         `-IntegerLiteral 0x1531e7f1390 <col:20> 'int' 0
|   |-CallExpr 0x1531e7f1620 <line:492:5, col:22> 'int'
|   | |-ImplicitCastExpr 0x1531e7f1608 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e7f15c8 <col:5> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1531e7f1648 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e7f15e8 <col:18> 'unsigned char *' lvalue Var 0x1531e7f09b8 'data' 'unsigned char *'
|   |-IfStmt 0x1531e7f18e0 <line:494:5, line:499:5>
|   | |-BinaryOperator 0x1531e7f16c0 <line:494:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x1531e7f16a8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e7f1660 <col:9> 'int' lvalue Var 0x1531e7f0e68 'ret' 'int'
|   | | `-IntegerLiteral 0x1531e7f1680 <col:16> 'int' 0
|   | `-CompoundStmt 0x1531e7f18c8 <col:19, line:499:5>
|   |   `-ReturnStmt 0x1531e7f18b8 <line:498:9, col:16>
|   |     `-IntegerLiteral 0x1531e7f1890 <col:16> 'int' 0
|   |-IfStmt 0x1531e7f1ad0 <line:500:5, line:505:5>
|   | |-BinaryOperator 0x1531e7f1958 <line:500:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1531e7f1940 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e7f18f8 <col:9> 'int' lvalue Var 0x1531e7f0e68 'ret' 'int'
|   | | `-IntegerLiteral 0x1531e7f1918 <col:15> 'int' 0
|   | `-CompoundStmt 0x1531e7f1ab8 <col:18, line:505:5>
|   |   `-ReturnStmt 0x1531e7f1aa8 <line:504:9, col:16>
|   |     `-IntegerLiteral 0x1531e7f1a80 <col:16> 'int' 0
|   `-ReturnStmt 0x1531e7f1b20 <line:506:5, col:12>
|     `-ImplicitCastExpr 0x1531e7f1b08 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1531e7f1ae8 <col:12> 'int' lvalue Var 0x1531e7f0e68 'ret' 'int'
|-FunctionDecl 0x1531e7f1d70 <line:509:1, line:521:1> line:509:12 invalid tlsa_import_rrset 'int (int *, int (*)())' static
| |-ParmVarDecl 0x1531e7f1bc0 <col:30, col:35> col:35 invalid con 'int *'
| |-ParmVarDecl 0x1531e7f1c50 <col:40, <invalid sloc>> col:40 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x1531e7ec608 <line:510:1, line:521:1>
|   |-DeclStmt 0x1531e7f1fc8 <line:511:5, col:43>
|   | `-VarDecl 0x1531e7f1e50 <col:5, col:9> col:9 used num 'int'
|   |-DeclStmt 0x1531e7f2088 <line:512:5, col:18>
|   | `-VarDecl 0x1531e7f1ff8 <col:5, col:17> col:9 used count 'int' cinit
|   |   `-IntegerLiteral 0x1531e7f2060 <col:17> 'int' 0
|   |-DeclStmt 0x1531e7ec100 <line:513:5, col:10>
|   | `-VarDecl 0x1531e7ec098 <col:5, col:9> col:9 used i 'int'
|   |-ForStmt 0x1531e7ec540 <line:515:5, line:519:5>
|   | |-BinaryOperator 0x1531e7ec178 <line:515:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1531e7ec118 <col:10> 'int' lvalue Var 0x1531e7ec098 'i' 'int'
|   | | `-IntegerLiteral 0x1531e7ec150 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1531e7ec220 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1531e7ec1f0 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e7ec198 <col:17> 'int' lvalue Var 0x1531e7ec098 'i' 'int'
|   | | `-ImplicitCastExpr 0x1531e7ec208 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1531e7ec1b8 <col:21> 'int' lvalue Var 0x1531e7f1e50 'num' 'int'
|   | |-UnaryOperator 0x1531e7ec260 <col:26, col:28> 'int' prefix '++'
|   | | `-DeclRefExpr 0x1531e7ec240 <col:28> 'int' lvalue Var 0x1531e7ec098 'i' 'int'
|   | `-CompoundStmt 0x1531e7ec520 <col:31, line:519:5>
|   |   |-DeclStmt 0x1531e7ec428 <line:516:9, col:57>
|   |   | `-VarDecl 0x1531e7ec290 <col:9, col:15> col:15 used rrdata 'char *'
|   |   `-IfStmt 0x1531e7ec508 <line:517:9, line:518:15>
|   |     |-OpaqueValueExpr 0x1531e7ec4f0 <<invalid sloc>> '_Bool'
|   |     `-UnaryOperator 0x1531e7ec4d8 <col:13, col:15> 'int' prefix '++'
|   |       `-DeclRefExpr 0x1531e7ec4a0 <col:15> 'int' lvalue Var 0x1531e7f1ff8 'count' 'int'
|   `-ReturnStmt 0x1531e7ec5f8 <line:520:5, col:20>
|     `-BinaryOperator 0x1531e7ec5d8 <col:12, col:20> 'int' '>'
|       |-ImplicitCastExpr 0x1531e7ec5c0 <col:12> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x1531e7ec578 <col:12> 'int' lvalue Var 0x1531e7f1ff8 'count' 'int'
|       `-IntegerLiteral 0x1531e7ec598 <col:20> 'int' 0
|-EnumDecl 0x1531e7ec640 <line:523:9, line:559:1> line:523:14 OPTION_choice
| |-EnumConstantDecl 0x1531e7ec778 <line:524:5, col:16> col:5 referenced OPT_ERR 'int'
| | `-ConstantExpr 0x1531e7ec760 <col:15, col:16> 'int'
| |   `-UnaryOperator 0x1531e7ec748 <col:15, col:16> 'int' prefix '-'
| |     `-IntegerLiteral 0x1531e7ec720 <col:16> 'int' 1
| |-EnumConstantDecl 0x1531e7ec810 <col:19, col:29> col:19 referenced OPT_EOF 'int'
| | `-ConstantExpr 0x1531e7ec7f8 <col:29> 'int'
| |   `-IntegerLiteral 0x1531e7ec7d0 <col:29> 'int' 0
| |-EnumConstantDecl 0x1531e7ec868 <col:32> col:32 referenced OPT_HELP 'int'
| |-EnumConstantDecl 0x1531e7ec8c0 <line:525:5> col:5 referenced OPT_4 'int'
| |-EnumConstantDecl 0x1531e7ec918 <col:12> col:12 referenced OPT_6 'int'
| |-EnumConstantDecl 0x1531e7ec970 <col:19> col:19 referenced OPT_HOST 'int'
| |-EnumConstantDecl 0x1531e7ec9c8 <col:29> col:29 referenced OPT_PORT 'int'
| |-EnumConstantDecl 0x1531e7eca20 <col:39> col:39 referenced OPT_CONNECT 'int'
| |-EnumConstantDecl 0x1531e7eca78 <col:52> col:52 referenced OPT_UNIX 'int'
| |-EnumConstantDecl 0x1531e7ecad0 <line:526:5> col:5 referenced OPT_XMPPHOST 'int'
| |-EnumConstantDecl 0x1531e7ecb28 <col:19> col:19 referenced OPT_VERIFY 'int'
| |-EnumConstantDecl 0x1531e7ecb80 <line:527:5> col:5 referenced OPT_CERT 'int'
| |-EnumConstantDecl 0x1531e7ecbd8 <col:15> col:15 referenced OPT_CRL 'int'
| |-EnumConstantDecl 0x1531e7ecc30 <col:24> col:24 referenced OPT_CRL_DOWNLOAD 'int'
| |-EnumConstantDecl 0x1531e7ecc88 <col:42> col:42 referenced OPT_SESS_OUT 'int'
| |-EnumConstantDecl 0x1531e7ecce0 <col:56> col:56 referenced OPT_SESS_IN 'int'
| |-EnumConstantDecl 0x1531e7ecd38 <line:528:5> col:5 referenced OPT_CERTFORM 'int'
| |-EnumConstantDecl 0x1531e7ecd90 <col:19> col:19 referenced OPT_CRLFORM 'int'
| |-EnumConstantDecl 0x1531e7ecde8 <col:32> col:32 referenced OPT_VERIFY_RET_ERROR 'int'
| |-EnumConstantDecl 0x1531e7ece40 <col:54> col:54 referenced OPT_VERIFY_QUIET 'int'
| |-EnumConstantDecl 0x1531e7ece98 <line:529:5> col:5 referenced OPT_BRIEF 'int'
| |-EnumConstantDecl 0x1531e7ecef0 <col:16> col:16 referenced OPT_PREXIT 'int'
| |-EnumConstantDecl 0x1531e7ecf48 <col:28> col:28 referenced OPT_CRLF 'int'
| |-EnumConstantDecl 0x1531e7ecfa0 <col:38> col:38 referenced OPT_QUIET 'int'
| |-EnumConstantDecl 0x1531e7ecff8 <col:49> col:49 referenced OPT_NBIO 'int'
| |-EnumConstantDecl 0x1531e7ed050 <line:530:5> col:5 referenced OPT_SSL_CLIENT_ENGINE 'int'
| |-EnumConstantDecl 0x1531e7ed0a8 <col:28> col:28 referenced OPT_RAND 'int'
| |-EnumConstantDecl 0x1531e7ed100 <col:38> col:38 referenced OPT_IGN_EOF 'int'
| |-EnumConstantDecl 0x1531e7ed158 <col:51> col:51 referenced OPT_NO_IGN_EOF 'int'
| |-EnumConstantDecl 0x1531e7ed1b0 <line:531:5> col:5 referenced OPT_DEBUG 'int'
| |-EnumConstantDecl 0x1531e7ed208 <col:16> col:16 referenced OPT_TLSEXTDEBUG 'int'
| |-EnumConstantDecl 0x1531e7ed260 <col:33> col:33 referenced OPT_STATUS 'int'
| |-EnumConstantDecl 0x1531e7ed2b8 <col:45> col:45 referenced OPT_WDEBUG 'int'
| |-EnumConstantDecl 0x1531e7ed310 <line:532:5> col:5 referenced OPT_MSG 'int'
| |-EnumConstantDecl 0x1531e7ed368 <col:14> col:14 referenced OPT_MSGFILE 'int'
| |-EnumConstantDecl 0x1531e7ed3c0 <col:27> col:27 referenced OPT_ENGINE 'int'
| |-EnumConstantDecl 0x1531e7ed418 <col:39> col:39 referenced OPT_TRACE 'int'
| |-EnumConstantDecl 0x1531e7ed470 <col:50> col:50 referenced OPT_SECURITY_DEBUG 'int'
| |-EnumConstantDecl 0x1531e7ed4c8 <line:533:5> col:5 referenced OPT_SECURITY_DEBUG_VERBOSE 'int'
| |-EnumConstantDecl 0x1531e7ed520 <col:33> col:33 referenced OPT_SHOWCERTS 'int'
| |-EnumConstantDecl 0x1531e7ed578 <col:48> col:48 referenced OPT_NBIO_TEST 'int'
| |-EnumConstantDecl 0x1531e7ed5d0 <col:63> col:63 referenced OPT_STATE 'int'
| |-EnumConstantDecl 0x1531e7ed628 <line:535:5> col:5 referenced OPT_PSK_IDENTITY 'int'
| |-EnumConstantDecl 0x1531e7ed680 <col:23> col:23 referenced OPT_PSK 'int'
| |-EnumConstantDecl 0x1531e7ed6d8 <line:538:5> col:5 referenced OPT_SRPUSER 'int'
| |-EnumConstantDecl 0x1531e7ed730 <col:18> col:18 referenced OPT_SRPPASS 'int'
| |-EnumConstantDecl 0x1531e7ed788 <col:31> col:31 referenced OPT_SRP_STRENGTH 'int'
| |-EnumConstantDecl 0x1531e7ed7e0 <col:49> col:49 referenced OPT_SRP_LATEUSER 'int'
| |-EnumConstantDecl 0x1531e7ed838 <line:539:5> col:5 referenced OPT_SRP_MOREGROUPS 'int'
| |-EnumConstantDecl 0x1531e7ed890 <line:541:5> col:5 referenced OPT_SSL3 'int'
| |-EnumConstantDecl 0x1531e7ed8e8 <col:15> col:15 referenced OPT_SSL_CONFIG 'int'
| |-EnumConstantDecl 0x1531e7ed940 <line:542:5> col:5 referenced OPT_TLS1_2 'int'
| |-EnumConstantDecl 0x1531e7ed998 <col:17> col:17 referenced OPT_TLS1_1 'int'
| |-EnumConstantDecl 0x1531e7ed9f0 <col:29> col:29 referenced OPT_TLS1 'int'
| |-EnumConstantDecl 0x1531e7eda48 <col:39> col:39 referenced OPT_DTLS 'int'
| |-EnumConstantDecl 0x1531e7edaa0 <col:49> col:49 referenced OPT_DTLS1 'int'
| |-EnumConstantDecl 0x1531e7edaf8 <line:543:5> col:5 referenced OPT_DTLS1_2 'int'
| |-EnumConstantDecl 0x1531e7edb50 <col:18> col:18 referenced OPT_TIMEOUT 'int'
| |-EnumConstantDecl 0x1531e7edba8 <col:31> col:31 referenced OPT_MTU 'int'
| |-EnumConstantDecl 0x1531e7edc00 <col:40> col:40 referenced OPT_KEYFORM 'int'
| |-EnumConstantDecl 0x1531e7edc58 <col:53> col:53 referenced OPT_PASS 'int'
| |-EnumConstantDecl 0x1531e7edcb0 <line:544:5> col:5 referenced OPT_CERT_CHAIN 'int'
| |-EnumConstantDecl 0x1531e7edd08 <col:21> col:21 referenced OPT_CAPATH 'int'
| |-EnumConstantDecl 0x1531e7edd60 <col:33> col:33 referenced OPT_NOCAPATH 'int'
| |-EnumConstantDecl 0x1531e7eddb8 <col:47> col:47 referenced OPT_CHAINCAPATH 'int'
| |-EnumConstantDecl 0x1531e7ede10 <line:545:9> col:9 referenced OPT_VERIFYCAPATH 'int'
| |-EnumConstantDecl 0x1531e7ede68 <line:546:5> col:5 referenced OPT_KEY 'int'
| |-EnumConstantDecl 0x1531e7edec0 <col:14> col:14 referenced OPT_RECONNECT 'int'
| |-EnumConstantDecl 0x1531e7edf18 <col:29> col:29 referenced OPT_BUILD_CHAIN 'int'
| |-EnumConstantDecl 0x1531e7edf70 <col:46> col:46 referenced OPT_CAFILE 'int'
| |-EnumConstantDecl 0x1531e7edfc8 <col:58> col:58 referenced OPT_NOCAFILE 'int'
| |-EnumConstantDecl 0x1531e7ee020 <line:547:5> col:5 referenced OPT_CHAINCAFILE 'int'
| |-EnumConstantDecl 0x1531e7fc100 <col:22> col:22 referenced OPT_VERIFYCAFILE 'int'
| |-EnumConstantDecl 0x1531e7fc158 <col:40> col:40 referenced OPT_NEXTPROTONEG 'int'
| |-EnumConstantDecl 0x1531e7fc1b0 <col:58> col:58 referenced OPT_ALPN 'int'
| |-EnumConstantDecl 0x1531e7fc208 <line:548:5> col:5 referenced OPT_SERVERINFO 'int'
| |-EnumConstantDecl 0x1531e7fc260 <col:21> col:21 referenced OPT_STARTTLS 'int'
| |-EnumConstantDecl 0x1531e7fc2b8 <col:35> col:35 referenced OPT_SERVERNAME 'int'
| |-EnumConstantDecl 0x1531e7fc310 <line:549:5> col:5 referenced OPT_USE_SRTP 'int'
| |-EnumConstantDecl 0x1531e7fc368 <col:19> col:19 referenced OPT_KEYMATEXPORT 'int'
| |-EnumConstantDecl 0x1531e7fc3c0 <col:37> col:37 referenced OPT_KEYMATEXPORTLEN 'int'
| |-EnumConstantDecl 0x1531e7fc418 <col:58> col:58 referenced OPT_SMTPHOST 'int'
| |-EnumConstantDecl 0x1531e7fc470 <line:550:5> col:5 referenced OPT_ASYNC 'int'
| |-EnumConstantDecl 0x1531e7fc4c8 <col:16> col:16 referenced OPT_SPLIT_SEND_FRAG 'int'
| |-EnumConstantDecl 0x1531e7fc520 <col:37> col:37 referenced OPT_MAX_PIPELINES 'int'
| |-EnumConstantDecl 0x1531e7fc578 <col:56> col:56 referenced OPT_READ_BUF 'int'
| |-EnumConstantDecl 0x1531e7fc610 <.//openssl//file_jk/after\apps/apps.h:81:9, col:22> col:9 referenced OPT_V__FIRST 'int'
| | `-ConstantExpr 0x1531e7fc5f8 <col:22> 'int'
| |   `-IntegerLiteral 0x1531e7fc5d0 <col:22> 'int' 2000
| |-EnumConstantDecl 0x1531e7fc668 <line:82:9> col:9 referenced OPT_V_POLICY 'int'
| |-EnumConstantDecl 0x1531e7fc6c0 <col:23> col:23 referenced OPT_V_PURPOSE 'int'
| |-EnumConstantDecl 0x1531e7fc718 <col:38> col:38 referenced OPT_V_VERIFY_NAME 'int'
| |-EnumConstantDecl 0x1531e7fc770 <col:57> col:57 referenced OPT_V_VERIFY_DEPTH 'int'
| |-EnumConstantDecl 0x1531e7fc7c8 <line:83:9> col:9 referenced OPT_V_ATTIME 'int'
| |-EnumConstantDecl 0x1531e7fc820 <col:23> col:23 referenced OPT_V_VERIFY_HOSTNAME 'int'
| |-EnumConstantDecl 0x1531e7fc878 <col:46> col:46 referenced OPT_V_VERIFY_EMAIL 'int'
| |-EnumConstantDecl 0x1531e7fc8d0 <line:84:9> col:9 referenced OPT_V_VERIFY_IP 'int'
| |-EnumConstantDecl 0x1531e7fc928 <col:26> col:26 referenced OPT_V_IGNORE_CRITICAL 'int'
| |-EnumConstantDecl 0x1531e7fc980 <col:49> col:49 referenced OPT_V_ISSUER_CHECKS 'int'
| |-EnumConstantDecl 0x1531e7fc9d8 <line:85:9> col:9 referenced OPT_V_CRL_CHECK 'int'
| |-EnumConstantDecl 0x1531e7fca30 <col:26> col:26 referenced OPT_V_CRL_CHECK_ALL 'int'
| |-EnumConstantDecl 0x1531e7fca88 <col:47> col:47 referenced OPT_V_POLICY_CHECK 'int'
| |-EnumConstantDecl 0x1531e7fcae0 <line:86:9> col:9 referenced OPT_V_EXPLICIT_POLICY 'int'
| |-EnumConstantDecl 0x1531e7fcb38 <col:32> col:32 referenced OPT_V_INHIBIT_ANY 'int'
| |-EnumConstantDecl 0x1531e7fcb90 <col:51> col:51 referenced OPT_V_INHIBIT_MAP 'int'
| |-EnumConstantDecl 0x1531e7fcbe8 <line:87:9> col:9 referenced OPT_V_X509_STRICT 'int'
| |-EnumConstantDecl 0x1531e7fcc40 <col:28> col:28 referenced OPT_V_EXTENDED_CRL 'int'
| |-EnumConstantDecl 0x1531e7fcc98 <col:48> col:48 referenced OPT_V_USE_DELTAS 'int'
| |-EnumConstantDecl 0x1531e7fccf0 <line:88:9> col:9 referenced OPT_V_POLICY_PRINT 'int'
| |-EnumConstantDecl 0x1531e7fcd48 <col:29> col:29 referenced OPT_V_CHECK_SS_SIG 'int'
| |-EnumConstantDecl 0x1531e7fcda0 <col:49> col:49 referenced OPT_V_TRUSTED_FIRST 'int'
| |-EnumConstantDecl 0x1531e7fcdf8 <line:89:9> col:9 referenced OPT_V_SUITEB_128_ONLY 'int'
| |-EnumConstantDecl 0x1531e7fce50 <col:32> col:32 referenced OPT_V_SUITEB_128 'int'
| |-EnumConstantDecl 0x1531e7fcea8 <col:50> col:50 referenced OPT_V_SUITEB_192 'int'
| |-EnumConstantDecl 0x1531e7fcf00 <line:90:9> col:9 referenced OPT_V_PARTIAL_CHAIN 'int'
| |-EnumConstantDecl 0x1531e7fcf58 <col:30> col:30 referenced OPT_V_NO_ALT_CHAINS 'int'
| |-EnumConstantDecl 0x1531e7fcfb0 <col:51> col:51 referenced OPT_V_NO_CHECK_TIME 'int'
| |-EnumConstantDecl 0x1531e7fd008 <line:91:9> col:9 referenced OPT_V_VERIFY_AUTH_LEVEL 'int'
| |-EnumConstantDecl 0x1531e7fd060 <col:34> col:34 referenced OPT_V_ALLOW_PROXY_CERTS 'int'
| |-EnumConstantDecl 0x1531e7fd0b8 <line:92:9> col:9 referenced OPT_V__LAST 'int'
| |-EnumConstantDecl 0x1531e7fd150 <line:181:9, col:22> col:9 referenced OPT_X__FIRST 'int'
| | `-ConstantExpr 0x1531e7fd138 <col:22> 'int'
| |   `-IntegerLiteral 0x1531e7fd110 <col:22> 'int' 1000
| |-EnumConstantDecl 0x1531e7fd1a8 <line:182:9> col:9 referenced OPT_X_KEY 'int'
| |-EnumConstantDecl 0x1531e7fd200 <col:20> col:20 referenced OPT_X_CERT 'int'
| |-EnumConstantDecl 0x1531e7fd258 <col:32> col:32 referenced OPT_X_CHAIN 'int'
| |-EnumConstantDecl 0x1531e7fd2b0 <col:45> col:45 referenced OPT_X_CHAIN_BUILD 'int'
| |-EnumConstantDecl 0x1531e7fd308 <line:183:9> col:9 referenced OPT_X_CERTFORM 'int'
| |-EnumConstantDecl 0x1531e7fd360 <col:25> col:25 referenced OPT_X_KEYFORM 'int'
| |-EnumConstantDecl 0x1531e7fd3b8 <line:184:9> col:9 referenced OPT_X__LAST 'int'
| |-EnumConstantDecl 0x1531e7fd450 <line:211:9, col:22> col:9 referenced OPT_S__FIRST 'int'
| | `-ConstantExpr 0x1531e7fd438 <col:22> 'int'
| |   `-IntegerLiteral 0x1531e7fd410 <col:22> 'int' 3000
| |-EnumConstantDecl 0x1531e7fd4a8 <line:212:9> col:9 referenced OPT_S_NOSSL3 'int'
| |-EnumConstantDecl 0x1531e7fd500 <col:23> col:23 referenced OPT_S_NOTLS1 'int'
| |-EnumConstantDecl 0x1531e7fd558 <col:37> col:37 referenced OPT_S_NOTLS1_1 'int'
| |-EnumConstantDecl 0x1531e7fd5b0 <col:53> col:53 referenced OPT_S_NOTLS1_2 'int'
| |-EnumConstantDecl 0x1531e7fd608 <line:213:9> col:9 referenced OPT_S_BUGS 'int'
| |-EnumConstantDecl 0x1531e7fd660 <col:21> col:21 referenced OPT_S_NO_COMP 'int'
| |-EnumConstantDecl 0x1531e7fd6b8 <col:36> col:36 referenced OPT_S_NOTICKET 'int'
| |-EnumConstantDecl 0x1531e7fd710 <line:214:9> col:9 referenced OPT_S_SERVERPREF 'int'
| |-EnumConstantDecl 0x1531e7fd768 <col:27> col:27 referenced OPT_S_LEGACYRENEG 'int'
| |-EnumConstantDecl 0x1531e7fd7c0 <col:46> col:46 referenced OPT_S_LEGACYCONN 'int'
| |-EnumConstantDecl 0x1531e7fd818 <line:215:9> col:9 referenced OPT_S_ONRESUMP 'int'
| |-EnumConstantDecl 0x1531e7fd870 <col:25> col:25 referenced OPT_S_NOLEGACYCONN 'int'
| |-EnumConstantDecl 0x1531e7fd8c8 <col:45> col:45 referenced OPT_S_STRICT 'int'
| |-EnumConstantDecl 0x1531e7fd920 <col:59> col:59 referenced OPT_S_SIGALGS 'int'
| |-EnumConstantDecl 0x1531e7fd978 <line:216:9> col:9 referenced OPT_S_CLIENTSIGALGS 'int'
| |-EnumConstantDecl 0x1531e7fd9d0 <col:30> col:30 referenced OPT_S_CURVES 'int'
| |-EnumConstantDecl 0x1531e7fda28 <col:44> col:44 referenced OPT_S_NAMEDCURVE 'int'
| |-EnumConstantDecl 0x1531e7fda80 <col:62> col:62 referenced OPT_S_CIPHER 'int'
| |-EnumConstantDecl 0x1531e7fdad8 <line:217:9> col:9 referenced OPT_S_DEBUGBROKE 'int'
| |-EnumConstantDecl 0x1531e7fdb30 <col:27> col:27 referenced OPT_S_COMP 'int'
| |-EnumConstantDecl 0x1531e7fdb88 <col:39> col:39 referenced OPT_S_MINPROTO 'int'
| |-EnumConstantDecl 0x1531e7fdbe0 <col:55> col:55 referenced OPT_S_MAXPROTO 'int'
| |-EnumConstantDecl 0x1531e7fdc38 <line:218:9> col:9 referenced OPT_S_NO_RENEGOTIATION 'int'
| |-EnumConstantDecl 0x1531e7fdc90 <col:33> col:33 referenced OPT_S__LAST 'int'
| |-EnumConstantDecl 0x1531e7fdce8 <.//openssl//file_jk/after\apps\s_client.c:554:5> col:5 referenced OPT_FALLBACKSCSV 'int'
| |-EnumConstantDecl 0x1531e7fdd40 <col:23> col:23 referenced OPT_NOCMDS 'int'
| |-EnumConstantDecl 0x1531e7fdd98 <col:35> col:35 referenced OPT_PROXY 'int'
| |-EnumConstantDecl 0x1531e7fddf0 <col:46> col:46 referenced OPT_DANE_TLSA_DOMAIN 'int'
| |-EnumConstantDecl 0x1531e7fde48 <line:556:5> col:5 referenced OPT_CT 'int'
| |-EnumConstantDecl 0x1531e7fdea0 <col:13> col:13 referenced OPT_NOCT 'int'
| |-EnumConstantDecl 0x1531e7fdef8 <col:23> col:23 referenced OPT_CTLOG_FILE 'int'
| |-EnumConstantDecl 0x1531e7fdf50 <line:558:5> col:5 referenced OPT_DANE_TLSA_RRDATA 'int'
| `-EnumConstantDecl 0x1531e7fdfa8 <col:27> col:27 referenced OPT_DANE_EE_NO_NAME 'int'
|-TypedefDecl 0x1531e7fe058 <line:523:1, line:559:3> col:3 referenced OPTION_CHOICE 'enum OPTION_choice':'enum OPTION_choice'
| `-ElaboratedType 0x1531e7fe000 'enum OPTION_choice' sugar
|   `-EnumType 0x1531e7ec700 'enum OPTION_choice'
|     `-Enum 0x1531e7ec640 'OPTION_choice'
|-VarDecl 0x1531e800168 <line:561:1, line:731:1> line:561:9 used s_client_options 'OPTIONS [150]' cinit
| `-InitListExpr 0x1531e80af98 <col:30, line:731:1> 'OPTIONS [150]'
|   |-InitListExpr 0x1531e80afe8 <line:562:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80b060 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80b048 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8001d0 <col:6> 'char [5]' lvalue "help"
|   | |-DeclRefExpr 0x1531e8001f0 <col:14> 'int' EnumConstant 0x1531e7ec868 'OPT_HELP' 'int'
|   | |-CharacterLiteral 0x1531e800210 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80b090 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80b078 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e800228 <col:29> 'char [21]' lvalue "Display this summary"
|   |-InitListExpr 0x1531e80b0c0 <line:563:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80b138 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80b120 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8002b8 <col:6> 'char [5]' lvalue "host"
|   | |-DeclRefExpr 0x1531e8002d8 <col:14> 'int' EnumConstant 0x1531e7ec970 'OPT_HOST' 'int'
|   | |-CharacterLiteral 0x1531e8002f8 <col:24> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80b168 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80b150 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e800310 <col:29> 'char [21]' lvalue "Use -connect instead"
|   |-InitListExpr 0x1531e80b1a0 <line:564:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80b218 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80b200 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8003a0 <col:6> 'char [5]' lvalue "port"
|   | |-DeclRefExpr 0x1531e8003c0 <col:14> 'int' EnumConstant 0x1531e7ec9c8 'OPT_PORT' 'int'
|   | |-CharacterLiteral 0x1531e8003e0 <col:24> 'int' 112
|   | `-ImplicitCastExpr 0x1531e80b248 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80b230 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8003f8 <col:29> 'char [21]' lvalue "Use -connect instead"
|   |-InitListExpr 0x1531e80b290 <line:565:5, line:566:54> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80b308 <line:565:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80b2f0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8004c8 <col:6> 'char [8]' lvalue "connect"
|   | |-DeclRefExpr 0x1531e8004e8 <col:17> 'int' EnumConstant 0x1531e7eca20 'OPT_CONNECT' 'int'
|   | |-CharacterLiteral 0x1531e800508 <col:30> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80b338 <line:566:6, col:51> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80b320 <col:6, col:51> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e800558 <col:6, col:51> 'char [43]' lvalue "TCP/IP where to connect (default is :4433)"
|   |-InitListExpr 0x1531e80b360 <line:567:5, line:568:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80b3d8 <line:567:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80b3c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e800608 <col:6> 'char [6]' lvalue "proxy"
|   | |-DeclRefExpr 0x1531e800628 <col:15> 'int' EnumConstant 0x1531e7fdd98 'OPT_PROXY' 'int'
|   | |-CharacterLiteral 0x1531e800648 <col:26> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80b408 <line:568:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80b3f0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e800698 <col:6> 'char [50]' lvalue "Connect to via specified proxy to the real server"
|   |-InitListExpr 0x1531e80b470 <line:572:5, col:38> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80b4e8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80b4d0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e800748 <col:6> 'char [2]' lvalue "4"
|   | |-DeclRefExpr 0x1531e800768 <col:11> 'int' EnumConstant 0x1531e7ec8c0 'OPT_4' 'int'
|   | |-CharacterLiteral 0x1531e800788 <col:18> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80b518 <col:23> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80b500 <col:23> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8007d8 <col:23> 'char [14]' lvalue "Use IPv4 only"
|   |-InitListExpr 0x1531e80b540 <line:576:5, col:72> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80b5b8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80b5a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e800898 <col:6> 'char [7]' lvalue "verify"
|   | |-DeclRefExpr 0x1531e8008b8 <col:16> 'int' EnumConstant 0x1531e7ecb28 'OPT_VERIFY' 'int'
|   | |-CharacterLiteral 0x1531e8008d8 <col:28> 'int' 112
|   | `-ImplicitCastExpr 0x1531e80b5e8 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80b5d0 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e800928 <col:33> 'char [38]' lvalue "Turn on peer certificate verification"
|   |-InitListExpr 0x1531e80b610 <line:577:5, col:74> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80b688 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80b670 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8009c8 <col:6> 'char [5]' lvalue "cert"
|   | |-DeclRefExpr 0x1531e8009e8 <col:14> 'int' EnumConstant 0x1531e7ecb80 'OPT_CERT' 'int'
|   | |-CharacterLiteral 0x1531e800a08 <col:24> 'int' 60
|   | `-ImplicitCastExpr 0x1531e80b6b8 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80b6a0 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e800a20 <col:29> 'char [44]' lvalue "Certificate file to use, PEM format assumed"
|   |-InitListExpr 0x1531e80b6e0 <line:578:5, line:579:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80b758 <line:578:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80b740 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e800ac8 <col:6> 'char [9]' lvalue "certform"
|   | |-DeclRefExpr 0x1531e800ae8 <col:18> 'int' EnumConstant 0x1531e7ecd38 'OPT_CERTFORM' 'int'
|   | |-CharacterLiteral 0x1531e800b08 <col:32> 'int' 70
|   | `-ImplicitCastExpr 0x1531e80b788 <line:579:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80b770 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e800b20 <col:6> 'char [44]' lvalue "Certificate format (PEM or DER) PEM default"
|   |-InitListExpr 0x1531e80b830 <line:580:5, col:74> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80b8a8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80b890 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e800bc8 <col:6> 'char [4]' lvalue "key"
|   | |-DeclRefExpr 0x1531e800be8 <col:13> 'int' EnumConstant 0x1531e7ede68 'OPT_KEY' 'int'
|   | |-CharacterLiteral 0x1531e800c08 <col:22> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80b8d8 <col:27> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80b8c0 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e800c58 <col:27> 'char [46]' lvalue "Private key file to use, if not in -cert file"
|   |-InitListExpr 0x1531e80b900 <line:581:5, col:80> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80b978 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80b960 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e800d00 <col:6> 'char [8]' lvalue "keyform"
|   | |-DeclRefExpr 0x1531e800d20 <col:17> 'int' EnumConstant 0x1531e7edc00 'OPT_KEYFORM' 'int'
|   | |-CharacterLiteral 0x1531e800d40 <col:30> 'int' 69
|   | `-ImplicitCastExpr 0x1531e80b9a8 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80b990 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e800d58 <col:35> 'char [44]' lvalue "Key format (PEM, DER or engine) PEM default"
|   |-InitListExpr 0x1531e80b9d0 <line:582:5, col:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80ba48 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80ba30 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e800e00 <col:6> 'char [5]' lvalue "pass"
|   | |-DeclRefExpr 0x1531e800e20 <col:14> 'int' EnumConstant 0x1531e7edc58 'OPT_PASS' 'int'
|   | |-CharacterLiteral 0x1531e800e40 <col:24> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80ba78 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80ba60 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e800e98 <col:29> 'char [36]' lvalue "Private key file pass phrase source"
|   |-InitListExpr 0x1531e80baa0 <line:583:5, col:63> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80bb18 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80bb00 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e800f38 <col:6> 'char [7]' lvalue "CApath"
|   | |-DeclRefExpr 0x1531e800f58 <col:16> 'int' EnumConstant 0x1531e7edd08 'OPT_CAPATH' 'int'
|   | |-CharacterLiteral 0x1531e800f78 <col:28> 'int' 47
|   | `-ImplicitCastExpr 0x1531e80bb48 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80bb30 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e800f90 <col:33> 'char [29]' lvalue "PEM format directory of CA's"
|   |-InitListExpr 0x1531e80bb70 <line:584:5, col:58> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80bbe8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80bbd0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e801028 <col:6> 'char [7]' lvalue "CAfile"
|   | |-DeclRefExpr 0x1531e801048 <col:16> 'int' EnumConstant 0x1531e7edf70 'OPT_CAFILE' 'int'
|   | |-CharacterLiteral 0x1531e801068 <col:28> 'int' 60
|   | `-ImplicitCastExpr 0x1531e80bc18 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80bc00 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8010b8 <col:33> 'char [24]' lvalue "PEM format file of CA's"
|   |-InitListExpr 0x1531e80bc40 <line:585:5, line:586:49> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80bcb8 <line:585:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80bca0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e801148 <col:6> 'char [10]' lvalue "no-CAfile"
|   | |-DeclRefExpr 0x1531e801170 <col:19> 'int' EnumConstant 0x1531e7edfc8 'OPT_NOCAFILE' 'int'
|   | |-CharacterLiteral 0x1531e801190 <col:33> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80bce8 <line:586:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80bcd0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8011a8 <col:6> 'char [42]' lvalue "Do not load the default certificates file"
|   |-InitListExpr 0x1531e80bd10 <line:587:5, line:588:72> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80bd88 <line:587:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80bd70 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e801250 <col:6> 'char [10]' lvalue "no-CApath"
|   | |-DeclRefExpr 0x1531e801278 <col:19> 'int' EnumConstant 0x1531e7edd60 'OPT_NOCAPATH' 'int'
|   | |-CharacterLiteral 0x1531e801298 <col:33> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80bdb8 <line:588:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80bda0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8012e8 <col:6> 'char [65]' lvalue "Do not load certificates from the default certificates directory"
|   |-InitListExpr 0x1531e80bde0 <line:589:5, col:76> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80be58 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80be40 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8013a0 <col:6> 'char [17]' lvalue "dane_tlsa_domain"
|   | |-DeclRefExpr 0x1531e8013c8 <col:26> 'int' EnumConstant 0x1531e7fddf0 'OPT_DANE_TLSA_DOMAIN' 'int'
|   | |-CharacterLiteral 0x1531e8013e8 <col:48> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80be88 <col:53> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80be70 <col:53> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e801438 <col:53> 'char [22]' lvalue "DANE TLSA base domain"
|   |-InitListExpr 0x1531e80bfb0 <line:590:5, line:591:42> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80c028 <line:590:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80c010 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8014c8 <col:6> 'char [17]' lvalue "dane_tlsa_rrdata"
|   | |-DeclRefExpr 0x1531e8014f0 <col:26> 'int' EnumConstant 0x1531e7fdf50 'OPT_DANE_TLSA_RRDATA' 'int'
|   | |-CharacterLiteral 0x1531e801510 <col:48> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80c058 <line:591:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80c040 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e801568 <col:6> 'char [35]' lvalue "DANE TLSA rrdata presentation form"
|   |-InitListExpr 0x1531e80c080 <line:592:5, line:593:65> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80c0f8 <line:592:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80c0e0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e801608 <col:6> 'char [22]' lvalue "dane_ee_no_namechecks"
|   | |-DeclRefExpr 0x1531e801638 <col:31> 'int' EnumConstant 0x1531e7fdfa8 'OPT_DANE_EE_NO_NAME' 'int'
|   | |-CharacterLiteral 0x1531e801658 <col:52> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80c128 <line:593:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80c110 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8016a8 <col:6> 'char [58]' lvalue "Disable name checks when matching DANE-EE(3) TLSA records"
|   |-InitListExpr 0x1531e804140 <line:594:5, line:595:64> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8041b8 <line:594:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8041a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e801760 <col:6> 'char [10]' lvalue "reconnect"
|   | |-DeclRefExpr 0x1531e801788 <col:19> 'int' EnumConstant 0x1531e7edec0 'OPT_RECONNECT' 'int'
|   | |-CharacterLiteral 0x1531e8017a8 <col:34> 'int' 45
|   | `-ImplicitCastExpr 0x1531e8041e8 <line:595:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8041d0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8017f8 <col:6> 'char [57]' lvalue "Drop and re-make the connection with the same Session-ID"
|   |-InitListExpr 0x1531e804210 <line:596:5, line:597:48> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804288 <line:596:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e804270 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8018a8 <col:6> 'char [10]' lvalue "showcerts"
|   | |-DeclRefExpr 0x1531e8018d0 <col:19> 'int' EnumConstant 0x1531e7ed520 'OPT_SHOWCERTS' 'int'
|   | |-CharacterLiteral 0x1531e8018f0 <col:34> 'int' 45
|   | `-ImplicitCastExpr 0x1531e8042b8 <line:597:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8042a0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e801948 <col:6> 'char [41]' lvalue "Show all certificates sent by the server"
|   |-InitListExpr 0x1531e8042e0 <line:598:5, col:45> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804358 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e804340 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8019e8 <col:6> 'char [6]' lvalue "debug"
|   | |-DeclRefExpr 0x1531e801a08 <col:15> 'int' EnumConstant 0x1531e7ed1b0 'OPT_DEBUG' 'int'
|   | |-CharacterLiteral 0x1531e801a28 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1531e804388 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e804370 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e801a78 <col:31> 'char [13]' lvalue "Extra output"
|   |-InitListExpr 0x1531e8043b0 <line:599:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804428 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e804410 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e801b00 <col:6> 'char [4]' lvalue "msg"
|   | |-DeclRefExpr 0x1531e801b20 <col:13> 'int' EnumConstant 0x1531e7ed310 'OPT_MSG' 'int'
|   | |-CharacterLiteral 0x1531e801b40 <col:22> 'int' 45
|   | `-ImplicitCastExpr 0x1531e804458 <col:27> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e804440 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e801b98 <col:27> 'char [23]' lvalue "Show protocol messages"
|   |-InitListExpr 0x1531e804480 <line:600:5, line:601:64> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8044f8 <line:600:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8044e0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e801c28 <col:6> 'char [8]' lvalue "msgfile"
|   | |-DeclRefExpr 0x1531e801c48 <col:17> 'int' EnumConstant 0x1531e7ed368 'OPT_MSGFILE' 'int'
|   | |-CharacterLiteral 0x1531e801c68 <col:30> 'int' 62
|   | `-ImplicitCastExpr 0x1531e804528 <line:601:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e804510 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e801c80 <col:6> 'char [57]' lvalue "File to send output of -msg or -trace, instead of stdout"
|   |-InitListExpr 0x1531e804550 <line:602:5, col:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8045c8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8045b0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e801d30 <col:6> 'char [10]' lvalue "nbio_test"
|   | |-DeclRefExpr 0x1531e801d58 <col:19> 'int' EnumConstant 0x1531e7ed578 'OPT_NBIO_TEST' 'int'
|   | |-CharacterLiteral 0x1531e801d78 <col:34> 'int' 45
|   | `-ImplicitCastExpr 0x1531e8045f8 <col:39> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8045e0 <col:39> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e801dc8 <col:39> 'char [26]' lvalue "More ssl protocol testing"
|   |-InitListExpr 0x1531e804620 <line:603:5, col:53> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804698 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e804680 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e801e60 <col:6> 'char [6]' lvalue "state"
|   | |-DeclRefExpr 0x1531e801e80 <col:15> 'int' EnumConstant 0x1531e7ed5d0 'OPT_STATE' 'int'
|   | |-CharacterLiteral 0x1531e801ea0 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1531e8046c8 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8046b0 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e801eb8 <col:31> 'char [21]' lvalue "Print the ssl states"
|   |-InitListExpr 0x1531e8046f0 <line:604:5, col:65> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804768 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e804750 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e801f48 <col:6> 'char [5]' lvalue "crlf"
|   | |-DeclRefExpr 0x1531e801f68 <col:14> 'int' EnumConstant 0x1531e7ecf48 'OPT_CRLF' 'int'
|   | |-CharacterLiteral 0x1531e801f88 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1531e804798 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e804780 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e801fa0 <col:29> 'char [35]' lvalue "Convert LF from terminal into CRLF"
|   |-InitListExpr 0x1531e8047c0 <line:605:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804838 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e804820 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e802040 <col:6> 'char [6]' lvalue "quiet"
|   | |-DeclRefExpr 0x1531e802060 <col:15> 'int' EnumConstant 0x1531e7ecfa0 'OPT_QUIET' 'int'
|   | |-CharacterLiteral 0x1531e802080 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1531e804868 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e804850 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8020d8 <col:31> 'char [19]' lvalue "No s_client output"
|   |-InitListExpr 0x1531e804890 <line:606:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804908 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8048f0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fe170 <col:6> 'char [8]' lvalue "ign_eof"
|   | |-DeclRefExpr 0x1531e7fe190 <col:17> 'int' EnumConstant 0x1531e7ed100 'OPT_IGN_EOF' 'int'
|   | |-CharacterLiteral 0x1531e7fe1b0 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x1531e804938 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e804920 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fe1c8 <col:35> 'char [39]' lvalue "Ignore input eof (default when -quiet)"
|   |-InitListExpr 0x1531e804960 <line:607:5, col:65> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8049d8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8049c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fe2a8 <col:6> 'char [11]' lvalue "no_ign_eof"
|   | |-DeclRefExpr 0x1531e7fe2d0 <col:20> 'int' EnumConstant 0x1531e7ed158 'OPT_NO_IGN_EOF' 'int'
|   | |-CharacterLiteral 0x1531e7fe2f0 <col:36> 'int' 45
|   | `-ImplicitCastExpr 0x1531e804a08 <col:41> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8049f0 <col:41> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fe308 <col:41> 'char [23]' lvalue "Don't ignore input eof"
|   |-InitListExpr 0x1531e804a30 <line:608:5, line:609:64> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804aa8 <line:608:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e804a90 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fe398 <col:6> 'char [9]' lvalue "starttls"
|   | |-DeclRefExpr 0x1531e7fe3b8 <col:18> 'int' EnumConstant 0x1531e7fc260 'OPT_STARTTLS' 'int'
|   | |-CharacterLiteral 0x1531e7fe3d8 <col:32> 'int' 115
|   | `-ImplicitCastExpr 0x1531e804ad8 <line:609:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e804ac0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fe3f0 <col:6> 'char [57]' lvalue "Use the appropriate STARTTLS command before starting TLS"
|   |-InitListExpr 0x1531e804b00 <line:610:5, line:611:52> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804b78 <line:610:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e804b60 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fe4a0 <col:6> 'char [9]' lvalue "xmpphost"
|   | |-DeclRefExpr 0x1531e7fe4c0 <col:18> 'int' EnumConstant 0x1531e7ecad0 'OPT_XMPPHOST' 'int'
|   | |-CharacterLiteral 0x1531e7fe4e0 <col:32> 'int' 115
|   | `-ImplicitCastExpr 0x1531e804ba8 <line:611:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e804b90 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fe4f8 <col:6> 'char [43]' lvalue "Host to use with \"-starttls xmpp[-server]\""
|   |-InitListExpr 0x1531e804bd0 <line:612:5, line:613:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804c48 <line:612:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e804c30 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fe5a0 <col:6> 'char [5]' lvalue "rand"
|   | |-DeclRefExpr 0x1531e7fe5c0 <col:14> 'int' EnumConstant 0x1531e7ed0a8 'OPT_RAND' 'int'
|   | |-CharacterLiteral 0x1531e7fe5e0 <col:24> 'int' 115
|   | `-ImplicitCastExpr 0x1531e804c78 <line:613:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e804c60 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fe5f8 <col:6> 'char [50]' lvalue "Load the file(s) into the random number generator"
|   |-InitListExpr 0x1531e804ea0 <line:614:5, col:67> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804f18 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e804f00 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fe6a8 <col:6> 'char [9]' lvalue "sess_out"
|   | |-DeclRefExpr 0x1531e7fe6c8 <col:18> 'int' EnumConstant 0x1531e7ecc88 'OPT_SESS_OUT' 'int'
|   | |-CharacterLiteral 0x1531e7fe6e8 <col:32> 'int' 62
|   | `-ImplicitCastExpr 0x1531e804f48 <col:37> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e804f30 <col:37> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fe700 <col:37> 'char [29]' lvalue "File to write SSL session to"
|   |-InitListExpr 0x1531e804f70 <line:615:5, col:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e804fe8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e804fd0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fe798 <col:6> 'char [8]' lvalue "sess_in"
|   | |-DeclRefExpr 0x1531e7fe7b8 <col:17> 'int' EnumConstant 0x1531e7ecce0 'OPT_SESS_IN' 'int'
|   | |-CharacterLiteral 0x1531e7fe7d8 <col:30> 'int' 60
|   | `-ImplicitCastExpr 0x1531e805018 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805000 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fe7f0 <col:35> 'char [30]' lvalue "File to read SSL session from"
|   |-InitListExpr 0x1531e805040 <line:616:5, line:617:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8050b8 <line:616:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8050a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fe888 <col:6> 'char [9]' lvalue "use_srtp"
|   | |-DeclRefExpr 0x1531e7fe8a8 <col:18> 'int' EnumConstant 0x1531e7fc310 'OPT_USE_SRTP' 'int'
|   | |-CharacterLiteral 0x1531e7fe8c8 <col:32> 'int' 115
|   | `-ImplicitCastExpr 0x1531e8050e8 <line:617:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8050d0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fe918 <col:6> 'char [62]' lvalue "Offer SRTP key management with a colon-separated profile list"
|   |-InitListExpr 0x1531e805110 <line:618:5, line:619:42> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805188 <line:618:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805170 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fe9d0 <col:6> 'char [13]' lvalue "keymatexport"
|   | |-DeclRefExpr 0x1531e7fe9f8 <col:22> 'int' EnumConstant 0x1531e7fc368 'OPT_KEYMATEXPORT' 'int'
|   | |-CharacterLiteral 0x1531e7fea18 <col:40> 'int' 115
|   | `-ImplicitCastExpr 0x1531e8051b8 <line:619:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8051a0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fea30 <col:6> 'char [35]' lvalue "Export keying material using label"
|   |-InitListExpr 0x1531e8051e0 <line:620:5, line:621:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805258 <line:620:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805240 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fead0 <col:6> 'char [16]' lvalue "keymatexportlen"
|   | |-DeclRefExpr 0x1531e7feaf8 <col:25> 'int' EnumConstant 0x1531e7fc3c0 'OPT_KEYMATEXPORTLEN' 'int'
|   | |-CharacterLiteral 0x1531e7feb18 <col:46> 'int' 112
|   | `-ImplicitCastExpr 0x1531e805288 <line:621:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805270 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7feb68 <col:6> 'char [49]' lvalue "Export len bytes of keying material (default 20)"
|   |-InitListExpr 0x1531e8052b0 <line:622:5, col:70> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805328 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805310 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fec10 <col:6> 'char [14]' lvalue "fallback_scsv"
|   | |-DeclRefExpr 0x1531e7fec38 <col:23> 'int' EnumConstant 0x1531e7fdce8 'OPT_FALLBACKSCSV' 'int'
|   | |-CharacterLiteral 0x1531e7fec58 <col:41> 'int' 45
|   | `-ImplicitCastExpr 0x1531e805358 <col:46> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805340 <col:46> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fec70 <col:46> 'char [23]' lvalue "Send the fallback SCSV"
|   |-InitListExpr 0x1531e805380 <line:623:5, col:73> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8053f8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8053e0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fed00 <col:6> 'char [5]' lvalue "name"
|   | |-DeclRefExpr 0x1531e7fed20 <col:14> 'int' EnumConstant 0x1531e7fc418 'OPT_SMTPHOST' 'int'
|   | |-CharacterLiteral 0x1531e7fed40 <col:28> 'int' 115
|   | `-ImplicitCastExpr 0x1531e805428 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805410 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fed98 <col:33> 'char [37]' lvalue "Hostname to use for \"-starttls smtp\""
|   |-InitListExpr 0x1531e805450 <line:624:5, col:44> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8054c8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8054b0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fee38 <col:6> 'char [4]' lvalue "CRL"
|   | |-DeclRefExpr 0x1531e7fee58 <col:13> 'int' EnumConstant 0x1531e7ecbd8 'OPT_CRL' 'int'
|   | |-CharacterLiteral 0x1531e7fee78 <col:22> 'int' 60
|   | `-ImplicitCastExpr 0x1531e8054f8 <col:27> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8054e0 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fee90 <col:27> 'char [16]' lvalue "CRL file to use"
|   |-InitListExpr 0x1531e805520 <line:625:5, col:84> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805598 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805580 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fef18 <col:6> 'char [13]' lvalue "crl_download"
|   | |-DeclRefExpr 0x1531e7fef40 <col:22> 'int' EnumConstant 0x1531e7ecc30 'OPT_CRL_DOWNLOAD' 'int'
|   | |-CharacterLiteral 0x1531e7fef60 <col:40> 'int' 45
|   | `-ImplicitCastExpr 0x1531e8055c8 <col:45> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8055b0 <col:45> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fef78 <col:45> 'char [38]' lvalue "Download CRL from distribution points"
|   |-InitListExpr 0x1531e8055f0 <line:626:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805668 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805650 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ff018 <col:6> 'char [8]' lvalue "CRLform"
|   | |-DeclRefExpr 0x1531e7ff038 <col:17> 'int' EnumConstant 0x1531e7ecd90 'OPT_CRLFORM' 'int'
|   | |-CharacterLiteral 0x1531e7ff058 <col:30> 'int' 70
|   | `-ImplicitCastExpr 0x1531e805698 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805680 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ff070 <col:35> 'char [39]' lvalue "CRL format (PEM or DER) PEM is default"
|   |-InitListExpr 0x1531e8056c0 <line:627:5, line:628:46> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805738 <line:627:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805720 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ff110 <col:6> 'char [20]' lvalue "verify_return_error"
|   | |-DeclRefExpr 0x1531e7ff140 <col:29> 'int' EnumConstant 0x1531e7ecde8 'OPT_VERIFY_RET_ERROR' 'int'
|   | |-CharacterLiteral 0x1531e7ff160 <col:51> 'int' 45
|   | `-ImplicitCastExpr 0x1531e805768 <line:628:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805750 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ff178 <col:6> 'char [39]' lvalue "Close connection on verification error"
|   |-InitListExpr 0x1531e805790 <line:629:5, col:79> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805808 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8057f0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ff218 <col:6> 'char [13]' lvalue "verify_quiet"
|   | |-DeclRefExpr 0x1531e7ff240 <col:22> 'int' EnumConstant 0x1531e7ece40 'OPT_VERIFY_QUIET' 'int'
|   | |-CharacterLiteral 0x1531e7ff260 <col:40> 'int' 45
|   | `-ImplicitCastExpr 0x1531e805838 <col:45> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805820 <col:45> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ff278 <col:45> 'char [33]' lvalue "Restrict verify output to errors"
|   |-InitListExpr 0x1531e805860 <line:630:5, line:631:65> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8058d8 <line:630:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8058c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ff310 <col:6> 'char [6]' lvalue "brief"
|   | |-DeclRefExpr 0x1531e7ff330 <col:15> 'int' EnumConstant 0x1531e7ece98 'OPT_BRIEF' 'int'
|   | |-CharacterLiteral 0x1531e7ff350 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1531e805908 <line:631:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8058f0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ff368 <col:6> 'char [58]' lvalue "Restrict output to brief summary of connection parameters"
|   |-InitListExpr 0x1531e805930 <line:632:5, line:633:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8059a8 <line:632:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805990 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ff420 <col:6> 'char [7]' lvalue "prexit"
|   | |-DeclRefExpr 0x1531e7ff440 <col:16> 'int' EnumConstant 0x1531e7ecef0 'OPT_PREXIT' 'int'
|   | |-CharacterLiteral 0x1531e7ff460 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x1531e8059d8 <line:633:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8059c0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ff478 <col:6> 'char [49]' lvalue "Print session information when the program exits"
|   |-InitListExpr 0x1531e805a00 <line:634:5, line:635:38> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805a78 <line:634:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805a60 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ff520 <col:6> 'char [15]' lvalue "security_debug"
|   | |-DeclRefExpr 0x1531e7ff548 <col:24> 'int' EnumConstant 0x1531e7ed470 'OPT_SECURITY_DEBUG' 'int'
|   | |-CharacterLiteral 0x1531e7ff568 <col:44> 'int' 45
|   | `-ImplicitCastExpr 0x1531e805aa8 <line:635:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805a90 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ff5b8 <col:6> 'char [31]' lvalue "Enable security debug messages"
|   |-InitListExpr 0x1531e805ad0 <line:636:5, line:637:41> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805b48 <line:636:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805b30 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ff650 <col:6> 'char [23]' lvalue "security_debug_verbose"
|   | |-DeclRefExpr 0x1531e7ff680 <col:32> 'int' EnumConstant 0x1531e7ed4c8 'OPT_SECURITY_DEBUG_VERBOSE' 'int'
|   | |-CharacterLiteral 0x1531e7ff6a0 <col:60> 'int' 45
|   | `-ImplicitCastExpr 0x1531e805b78 <line:637:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805b60 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ff6f8 <col:6> 'char [34]' lvalue "Output more security debug output"
|   |-InitListExpr 0x1531e805ba0 <line:638:5, line:639:46> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805c18 <line:638:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805c00 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ff798 <col:6> 'char [11]' lvalue "cert_chain"
|   | |-DeclRefExpr 0x1531e7ff7c0 <col:20> 'int' EnumConstant 0x1531e7edcb0 'OPT_CERT_CHAIN' 'int'
|   | |-CharacterLiteral 0x1531e7ff7e0 <col:36> 'int' 60
|   | `-ImplicitCastExpr 0x1531e805c48 <line:639:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805c30 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ff7f8 <col:6> 'char [39]' lvalue "Certificate chain file (in PEM format)"
|   |-InitListExpr 0x1531e805c70 <line:640:5, line:641:71> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805ce8 <line:640:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805cd0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ff8d8 <col:6> 'char [12]' lvalue "chainCApath"
|   | |-DeclRefExpr 0x1531e7ff900 <col:21> 'int' EnumConstant 0x1531e7eddb8 'OPT_CHAINCAPATH' 'int'
|   | |-CharacterLiteral 0x1531e7ff920 <col:38> 'int' 47
|   | `-ImplicitCastExpr 0x1531e805d18 <line:641:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805d00 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ff938 <col:6> 'char [64]' lvalue "Use dir as certificate store path to build CA certificate chain"
|   |-InitListExpr 0x1531e805d40 <line:642:5, line:643:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805db8 <line:642:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805da0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ff9f0 <col:6> 'char [13]' lvalue "verifyCApath"
|   | |-DeclRefExpr 0x1531e7ffa18 <col:22> 'int' EnumConstant 0x1531e7ede10 'OPT_VERIFYCAPATH' 'int'
|   | |-CharacterLiteral 0x1531e7ffa38 <col:40> 'int' 47
|   | `-ImplicitCastExpr 0x1531e805de8 <line:643:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805dd0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ffa88 <col:6> 'char [59]' lvalue "Use dir as certificate store path to verify CA certificate"
|   |-InitListExpr 0x1531e805e10 <line:644:5, col:68> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805e88 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805e70 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ffb40 <col:6> 'char [12]' lvalue "build_chain"
|   | |-DeclRefExpr 0x1531e7ffb68 <col:21> 'int' EnumConstant 0x1531e7edf18 'OPT_BUILD_CHAIN' 'int'
|   | |-CharacterLiteral 0x1531e7ffb88 <col:38> 'int' 45
|   | `-ImplicitCastExpr 0x1531e805eb8 <col:43> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805ea0 <col:43> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ffba0 <col:43> 'char [24]' lvalue "Build certificate chain"
|   |-InitListExpr 0x1531e805ee0 <line:645:5, line:646:50> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e805f58 <line:645:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e805f40 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ffc30 <col:6> 'char [12]' lvalue "chainCAfile"
|   | |-DeclRefExpr 0x1531e7ffc58 <col:21> 'int' EnumConstant 0x1531e7ee020 'OPT_CHAINCAFILE' 'int'
|   | |-CharacterLiteral 0x1531e7ffc78 <col:38> 'int' 60
|   | `-ImplicitCastExpr 0x1531e805f88 <line:646:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e805f70 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ffc90 <col:6> 'char [43]' lvalue "CA file for certificate chain (PEM format)"
|   |-InitListExpr 0x1531e805fb0 <line:647:5, line:648:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e806028 <line:647:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e806010 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ffd38 <col:6> 'char [13]' lvalue "verifyCAfile"
|   | |-DeclRefExpr 0x1531e7ffd60 <col:22> 'int' EnumConstant 0x1531e7fc100 'OPT_VERIFYCAFILE' 'int'
|   | |-CharacterLiteral 0x1531e7ffd80 <col:40> 'int' 60
|   | `-ImplicitCastExpr 0x1531e806058 <line:648:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e806040 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ffd98 <col:6> 'char [50]' lvalue "CA file for certificate verification (PEM format)"
|   |-InitListExpr 0x1531e806080 <line:649:5, col:77> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8060f8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8060e0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7ffe48 <col:6> 'char [11]' lvalue "nocommands"
|   | |-DeclRefExpr 0x1531e7ffe70 <col:20> 'int' EnumConstant 0x1531e7fdd40 'OPT_NOCMDS' 'int'
|   | |-CharacterLiteral 0x1531e7ffe90 <col:32> 'int' 45
|   | `-ImplicitCastExpr 0x1531e806128 <col:37> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e806110 <col:37> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7ffea8 <col:37> 'char [39]' lvalue "Do not use interactive command letters"
|   |-InitListExpr 0x1531e80c190 <line:650:5, line:651:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80c208 <line:650:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80c1f0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7fff48 <col:6> 'char [11]' lvalue "servername"
|   | |-DeclRefExpr 0x1531e7fff70 <col:20> 'int' EnumConstant 0x1531e7fc2b8 'OPT_SERVERNAME' 'int'
|   | |-CharacterLiteral 0x1531e7fff90 <col:36> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80c238 <line:651:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80c220 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7fffa8 <col:6> 'char [44]' lvalue "Set TLS extension servername in ClientHello"
|   |-InitListExpr 0x1531e80c260 <line:652:5, line:653:47> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80c2d8 <line:652:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80c2c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e800050 <col:6> 'char [12]' lvalue "tlsextdebug"
|   | |-DeclRefExpr 0x1531e800078 <col:21> 'int' EnumConstant 0x1531e7ed208 'OPT_TLSEXTDEBUG' 'int'
|   | |-CharacterLiteral 0x1531e800098 <col:38> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80c308 <line:653:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80c2f0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f20b0 <col:6> 'char [40]' lvalue "Hex dump of all TLS extensions received"
|   |-InitListExpr 0x1531e80c330 <line:655:5, col:73> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80c3a8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80c390 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f2150 <col:6> 'char [7]' lvalue "status"
|   | |-DeclRefExpr 0x1531e7f2170 <col:16> 'int' EnumConstant 0x1531e7ed260 'OPT_STATUS' 'int'
|   | |-CharacterLiteral 0x1531e7f2190 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80c3d8 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80c3c0 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f21a8 <col:33> 'char [39]' lvalue "Request certificate status from server"
|   |-InitListExpr 0x1531e80c400 <line:657:5, line:658:74> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80c478 <line:657:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80c460 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f2248 <col:6> 'char [11]' lvalue "serverinfo"
|   | |-DeclRefExpr 0x1531e7f2270 <col:20> 'int' EnumConstant 0x1531e7fc208 'OPT_SERVERINFO' 'int'
|   | |-CharacterLiteral 0x1531e7f2290 <col:36> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80c4a8 <line:658:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80c490 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f22e8 <col:6> 'char [67]' lvalue "types  Send empty ClientHello extensions (comma-separated numbers)"
|   |-InitListExpr 0x1531e80c4d0 <line:659:5, line:660:91> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80c548 <line:659:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80c530 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f23a8 <col:6> 'char [5]' lvalue "alpn"
|   | |-DeclRefExpr 0x1531e7f23c8 <col:14> 'int' EnumConstant 0x1531e7fc1b0 'OPT_ALPN' 'int'
|   | |-CharacterLiteral 0x1531e7f23e8 <col:24> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80c578 <line:660:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80c560 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f2438 <col:6> 'char [84]' lvalue "Enable ALPN extension, considering named protocols supported (comma-separated list)"
|   |-InitListExpr 0x1531e80c5a0 <line:661:5, col:63> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80c618 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80c600 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f2508 <col:6> 'char [6]' lvalue "async"
|   | |-DeclRefExpr 0x1531e7f2528 <col:15> 'int' EnumConstant 0x1531e7fc470 'OPT_ASYNC' 'int'
|   | |-CharacterLiteral 0x1531e7f2548 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80c648 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80c630 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f2560 <col:31> 'char [31]' lvalue "Support asynchronous operation"
|   |-InitListExpr 0x1531e80c670 <line:662:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80c6e8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80c6d0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f25f8 <col:6> 'char [11]' lvalue "ssl_config"
|   | |-DeclRefExpr 0x1531e7f2620 <col:20> 'int' EnumConstant 0x1531e7ed8e8 'OPT_SSL_CONFIG' 'int'
|   | |-CharacterLiteral 0x1531e7f2640 <col:36> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80c718 <col:41> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80c700 <col:41> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f2658 <col:41> 'char [33]' lvalue "Use specified configuration file"
|   |-InitListExpr 0x1531e80c740 <line:663:5, line:664:53> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80c7b8 <line:663:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80c7a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f26f0 <col:6> 'char [16]' lvalue "split_send_frag"
|   | |-DeclRefExpr 0x1531e7f2718 <col:25> 'int' EnumConstant 0x1531e7fc4c8 'OPT_SPLIT_SEND_FRAG' 'int'
|   | |-CharacterLiteral 0x1531e7f2738 <col:46> 'int' 110
|   | `-ImplicitCastExpr 0x1531e80c7e8 <line:664:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80c7d0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f2750 <col:6> 'char [46]' lvalue "Size used to split data for encrypt pipelines"
|   |-InitListExpr 0x1531e80c810 <line:665:5, line:666:62> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80c888 <line:665:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80c870 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f27f8 <col:6> 'char [14]' lvalue "max_pipelines"
|   | |-DeclRefExpr 0x1531e7f2820 <col:23> 'int' EnumConstant 0x1531e7fc520 'OPT_MAX_PIPELINES' 'int'
|   | |-CharacterLiteral 0x1531e7f2840 <col:42> 'int' 110
|   | `-ImplicitCastExpr 0x1531e80c8b8 <line:666:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80c8a0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f2898 <col:6> 'char [55]' lvalue "Maximum number of encrypt/decrypt pipelines to be used"
|   |-InitListExpr 0x1531e80cce0 <line:667:5, line:668:59> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80cd58 <line:667:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80cd40 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f2948 <col:6> 'char [9]' lvalue "read_buf"
|   | |-DeclRefExpr 0x1531e7f2968 <col:18> 'int' EnumConstant 0x1531e7fc578 'OPT_READ_BUF' 'int'
|   | |-CharacterLiteral 0x1531e7f2988 <col:32> 'int' 110
|   | `-ImplicitCastExpr 0x1531e80cd88 <line:668:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80cd70 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f29a0 <col:6> 'char [52]' lvalue "Default read buffer size to be used for connections"
|   |-InitListExpr 0x1531e80cdb0 <.//openssl//file_jk/after\apps/apps.h:221:9, col:60> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80ce28 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80ce10 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f2a50 <col:10> 'char [8]' lvalue "no_ssl3"
|   | |-DeclRefExpr 0x1531e7f2a70 <col:21> 'int' EnumConstant 0x1531e7fd4a8 'OPT_S_NOSSL3' 'int'
|   | |-CharacterLiteral 0x1531e7f2a90 <col:35> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80ce58 <col:39> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80ce40 <col:39> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f2aa8 <col:39> 'char [19]' lvalue "Just disable SSLv3"
|   |-InitListExpr 0x1531e80ce80 <line:222:9, col:60> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80cef8 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80cee0 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f2b38 <col:10> 'char [8]' lvalue "no_tls1"
|   | |-DeclRefExpr 0x1531e7f2b58 <col:21> 'int' EnumConstant 0x1531e7fd500 'OPT_S_NOTLS1' 'int'
|   | |-CharacterLiteral 0x1531e7f2b78 <col:35> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80cf28 <col:40> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80cf10 <col:40> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f2b90 <col:40> 'char [19]' lvalue "Just disable TLSv1"
|   |-InitListExpr 0x1531e80cf50 <line:223:9, col:67> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80cfc8 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80cfb0 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f2c20 <col:10> 'char [10]' lvalue "no_tls1_1"
|   | |-DeclRefExpr 0x1531e7f2c48 <col:23> 'int' EnumConstant 0x1531e7fd558 'OPT_S_NOTLS1_1' 'int'
|   | |-CharacterLiteral 0x1531e7f2c68 <col:39> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80cff8 <col:44> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80cfe0 <col:44> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f2c80 <col:44> 'char [21]' lvalue "Just disable TLSv1.1"
|   |-InitListExpr 0x1531e80d020 <line:224:9, col:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d098 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d080 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f2d10 <col:10> 'char [10]' lvalue "no_tls1_2"
|   | |-DeclRefExpr 0x1531e7f2d38 <col:23> 'int' EnumConstant 0x1531e7fd5b0 'OPT_S_NOTLS1_2' 'int'
|   | |-CharacterLiteral 0x1531e7f2d58 <col:39> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d0c8 <col:44> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d0b0 <col:44> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f2d70 <col:44> 'char [21]' lvalue "Just disable TLSv1.2"
|   |-InitListExpr 0x1531e80d0f0 <line:225:9, col:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d168 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d150 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f2e00 <col:10> 'char [5]' lvalue "bugs"
|   | |-DeclRefExpr 0x1531e7f2e20 <col:18> 'int' EnumConstant 0x1531e7fd608 'OPT_S_BUGS' 'int'
|   | |-CharacterLiteral 0x1531e7f2e40 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d198 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d180 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f2e58 <col:35> 'char [30]' lvalue "Turn on SSL bug compatibility"
|   |-InitListExpr 0x1531e80d1c0 <line:226:9, col:81> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d238 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d220 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f2ef0 <col:10> 'char [8]' lvalue "no_comp"
|   | |-DeclRefExpr 0x1531e7f2f10 <col:21> 'int' EnumConstant 0x1531e7fd660 'OPT_S_NO_COMP' 'int'
|   | |-CharacterLiteral 0x1531e7f2f30 <col:36> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d268 <col:41> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d250 <col:41> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f2f48 <col:41> 'char [38]' lvalue "Disable SSL/TLS compression (default)"
|   |-InitListExpr 0x1531e80d290 <line:227:9, col:67> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d308 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d2f0 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f2fe8 <col:10> 'char [5]' lvalue "comp"
|   | |-DeclRefExpr 0x1531e7f3008 <col:18> 'int' EnumConstant 0x1531e7fdb30 'OPT_S_COMP' 'int'
|   | |-CharacterLiteral 0x1531e7f3028 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d338 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d320 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f3040 <col:35> 'char [30]' lvalue "Use SSL/TLS-level compression"
|   |-InitListExpr 0x1531e80d360 <line:228:9, line:229:49> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d3d8 <line:228:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d3c0 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f30d8 <col:10> 'char [10]' lvalue "no_ticket"
|   | |-DeclRefExpr 0x1531e7f3100 <col:23> 'int' EnumConstant 0x1531e7fd6b8 'OPT_S_NOTICKET' 'int'
|   | |-CharacterLiteral 0x1531e7f3120 <col:39> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d408 <line:229:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d3f0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f3138 <col:13> 'char [35]' lvalue "Disable use of TLS session tickets"
|   |-InitListExpr 0x1531e80d430 <line:230:9, col:80> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d4a8 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d490 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f31d8 <col:10> 'char [11]' lvalue "serverpref"
|   | |-DeclRefExpr 0x1531e7f3200 <col:24> 'int' EnumConstant 0x1531e7fd710 'OPT_S_SERVERPREF' 'int'
|   | |-CharacterLiteral 0x1531e7f3220 <col:42> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d4d8 <col:47> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d4c0 <col:47> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f3278 <col:47> 'char [32]' lvalue "Use server's cipher preferences"
|   |-InitListExpr 0x1531e80d500 <line:231:9, line:232:61> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d578 <line:231:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d560 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f3310 <col:10> 'char [21]' lvalue "legacy_renegotiation"
|   | |-DeclRefExpr 0x1531e7f3340 <col:34> 'int' EnumConstant 0x1531e7fd768 'OPT_S_LEGACYRENEG' 'int'
|   | |-CharacterLiteral 0x1531e7f3360 <col:53> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d5a8 <line:232:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d590 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f33b8 <col:13> 'char [47]' lvalue "Enable use of legacy renegotiation (dangerous)"
|   |-InitListExpr 0x1531e80d5d0 <line:233:9, line:234:41> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d648 <line:233:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d630 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f3460 <col:10> 'char [17]' lvalue "no_renegotiation"
|   | |-DeclRefExpr 0x1531e7f3488 <col:30> 'int' EnumConstant 0x1531e7fdc38 'OPT_S_NO_RENEGOTIATION' 'int'
|   | |-CharacterLiteral 0x1531e7f34a8 <col:54> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d678 <line:234:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d660 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f34f8 <col:13> 'char [27]' lvalue "Disable all renegotiation."
|   |-InitListExpr 0x1531e80d6a0 <line:235:9, line:236:72> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d718 <line:235:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d700 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f3590 <col:10> 'char [22]' lvalue "legacy_server_connect"
|   | |-DeclRefExpr 0x1531e7f35c0 <col:35> 'int' EnumConstant 0x1531e7fd7c0 'OPT_S_LEGACYCONN' 'int'
|   | |-CharacterLiteral 0x1531e7f35e0 <col:53> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d748 <line:236:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d730 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f35f8 <col:13> 'char [58]' lvalue "Allow initial connection to servers that don't support RI"
|   |-InitListExpr 0x1531e80d770 <line:237:9, line:238:59> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d7e8 <line:237:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d7d0 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f36b0 <col:10> 'char [23]' lvalue "no_resumption_on_reneg"
|   | |-DeclRefExpr 0x1531e7f36e0 <col:36> 'int' EnumConstant 0x1531e7fd818 'OPT_S_ONRESUMP' 'int'
|   | |-CharacterLiteral 0x1531e7f3700 <col:52> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d818 <line:238:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d800 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f3758 <col:13> 'char [45]' lvalue "Disallow session resumption on renegotiation"
|   |-InitListExpr 0x1531e80d840 <line:239:9, line:240:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d8b8 <line:239:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d8a0 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f3838 <col:10> 'char [25]' lvalue "no_legacy_server_connect"
|   | |-DeclRefExpr 0x1531e7f3868 <col:38> 'int' EnumConstant 0x1531e7fd870 'OPT_S_NOLEGACYCONN' 'int'
|   | |-CharacterLiteral 0x1531e7f3888 <col:58> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d8e8 <line:240:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d8d0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f38d8 <col:13> 'char [61]' lvalue "Disallow initial connection to servers that don't support RI"
|   |-InitListExpr 0x1531e80d910 <line:241:9, line:242:68> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80d988 <line:241:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80d970 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f3990 <col:10> 'char [7]' lvalue "strict"
|   | |-DeclRefExpr 0x1531e7f39b0 <col:20> 'int' EnumConstant 0x1531e7fd8c8 'OPT_S_STRICT' 'int'
|   | |-CharacterLiteral 0x1531e7f39d0 <col:34> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80d9b8 <line:242:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80d9a0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f3a28 <col:13> 'char [54]' lvalue "Enforce strict certificate checks as per TLS standard"
|   |-InitListExpr 0x1531e80d9e0 <line:243:9, line:244:70> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80da58 <line:243:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80da40 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f3ad8 <col:10> 'char [8]' lvalue "sigalgs"
|   | |-DeclRefExpr 0x1531e7f3af8 <col:21> 'int' EnumConstant 0x1531e7fd920 'OPT_S_SIGALGS' 'int'
|   | |-CharacterLiteral 0x1531e7f3b18 <col:36> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80da88 <line:244:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80da70 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f3b30 <col:13> 'char [55]' lvalue "Signature algorithms to support (colon-separated list)"
|   |-InitListExpr 0x1531e80dab0 <line:245:9, line:247:54> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80db28 <line:245:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80db10 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f3be0 <col:10> 'char [15]' lvalue "client_sigalgs"
|   | |-DeclRefExpr 0x1531e7f3c08 <col:28> 'int' EnumConstant 0x1531e7fd978 'OPT_S_CLIENTSIGALGS' 'int'
|   | |-CharacterLiteral 0x1531e7f3c28 <col:49> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80db58 <line:246:13, line:247:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80db40 <line:246:13, line:247:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f3c78 <line:246:13, line:247:13> 'char [93]' lvalue "Signature algorithms to support for client certificate authentication (colon-separated list)"
|   |-InitListExpr 0x1531e80db80 <line:248:9, line:249:67> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80dbf8 <line:248:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80dbe0 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f3d50 <col:10> 'char [7]' lvalue "curves"
|   | |-DeclRefExpr 0x1531e7f3d70 <col:20> 'int' EnumConstant 0x1531e7fd9d0 'OPT_S_CURVES' 'int'
|   | |-CharacterLiteral 0x1531e7f3d90 <col:34> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80dc28 <line:249:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80dc10 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f3da8 <col:13> 'char [52]' lvalue "Elliptic curves to advertise (colon-separated list)"
|   |-InitListExpr 0x1531e80dc50 <line:250:9, line:251:64> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80dcc8 <line:250:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80dcb0 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f3e58 <col:10> 'char [12]' lvalue "named_curve"
|   | |-DeclRefExpr 0x1531e7f3e80 <col:25> 'int' EnumConstant 0x1531e7fda28 'OPT_S_NAMEDCURVE' 'int'
|   | |-CharacterLiteral 0x1531e7f3ea0 <col:43> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80dcf8 <line:251:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80dce0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f3eb8 <col:13> 'char [49]' lvalue "Elliptic curve used for ECDHE (server-side only)"
|   |-InitListExpr 0x1531e80dd20 <line:252:9, col:71> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80dd98 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80dd80 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f3f60 <col:10> 'char [7]' lvalue "cipher"
|   | |-DeclRefExpr 0x1531e7f3f80 <col:20> 'int' EnumConstant 0x1531e7fda80 'OPT_S_CIPHER' 'int'
|   | |-CharacterLiteral 0x1531e7f3fa0 <col:34> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80ddc8 <col:39> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80ddb0 <col:39> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e7f3fb8 <col:39> 'char [31]' lvalue "Specify cipher list to be used"
|   |-InitListExpr 0x1531e80ddf0 <line:253:9, col:96> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80de68 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80de50 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e7f4050 <col:10> 'char [13]' lvalue "min_protocol"
|   | |-DeclRefExpr 0x1531e7f4078 <col:26> 'int' EnumConstant 0x1531e7fdb88 'OPT_S_MINPROTO' 'int'
|   | |-CharacterLiteral 0x1531e7f4098 <col:42> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80de98 <col:47> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80de80 <col:47> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e806188 <col:47> 'char [48]' lvalue "Specify the minimum protocol version to be used"
|   |-InitListExpr 0x1531e80dec0 <line:254:9, col:96> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80df38 <col:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80df20 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806230 <col:10> 'char [13]' lvalue "max_protocol"
|   | |-DeclRefExpr 0x1531e806258 <col:26> 'int' EnumConstant 0x1531e7fdbe0 'OPT_S_MAXPROTO' 'int'
|   | |-CharacterLiteral 0x1531e806278 <col:42> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80df68 <col:47> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80df50 <col:47> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e806290 <col:47> 'char [48]' lvalue "Specify the maximum protocol version to be used"
|   |-InitListExpr 0x1531e80df90 <line:255:9, line:256:76> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e008 <line:255:10> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80dff0 <col:10> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806338 <col:10> 'char [22]' lvalue "debug_broken_protocol"
|   | |-DeclRefExpr 0x1531e806368 <col:35> 'int' EnumConstant 0x1531e7fdad8 'OPT_S_DEBUGBROKE' 'int'
|   | |-CharacterLiteral 0x1531e806388 <col:53> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80e038 <line:256:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e020 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8063a0 <col:13> 'char [62]' lvalue "Perform all sorts of protocol violations for testing purposes"
|   |-InitListExpr 0x1531e80e060 <line:95:9, col:82> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e0d8 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e0c0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806458 <col:11> 'char [7]' lvalue "policy"
|   | |-DeclRefExpr 0x1531e806478 <col:21> 'int' EnumConstant 0x1531e7fc668 'OPT_V_POLICY' 'int'
|   | |-CharacterLiteral 0x1531e806498 <col:35> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80e108 <col:40> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e0f0 <col:40> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8064b0 <col:40> 'char [41]' lvalue "adds policy to the acceptable policy set"
|   |-InitListExpr 0x1531e80e130 <line:96:9, line:97:40> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e1c8 <line:96:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e1b0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806550 <col:11> 'char [8]' lvalue "purpose"
|   | |-DeclRefExpr 0x1531e806570 <col:22> 'int' EnumConstant 0x1531e7fc6c0 'OPT_V_PURPOSE' 'int'
|   | |-CharacterLiteral 0x1531e806590 <col:37> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80e1f8 <line:97:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e1e0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8065a8 <col:13> 'char [26]' lvalue "certificate chain purpose"
|   |-InitListExpr 0x1531e80e220 <line:98:9, col:76> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e298 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e280 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806640 <col:11> 'char [12]' lvalue "verify_name"
|   | |-DeclRefExpr 0x1531e806668 <col:26> 'int' EnumConstant 0x1531e7fc718 'OPT_V_VERIFY_NAME' 'int'
|   | |-CharacterLiteral 0x1531e806688 <col:45> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80e2c8 <col:50> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e2b0 <col:50> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8066a0 <col:50> 'char [25]' lvalue "verification policy name"
|   |-InitListExpr 0x1531e80e2f0 <line:99:9, line:100:33> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e368 <line:99:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e350 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806730 <col:11> 'char [13]' lvalue "verify_depth"
|   | |-DeclRefExpr 0x1531e806758 <col:27> 'int' EnumConstant 0x1531e7fc770 'OPT_V_VERIFY_DEPTH' 'int'
|   | |-CharacterLiteral 0x1531e806778 <col:47> 'int' 110
|   | `-ImplicitCastExpr 0x1531e80e398 <line:100:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e380 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8067c8 <col:13> 'char [18]' lvalue "chain depth limit"
|   |-InitListExpr 0x1531e80e3c0 <line:101:9, line:102:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e438 <line:101:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e420 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806858 <col:11> 'char [11]' lvalue "auth_level"
|   | |-DeclRefExpr 0x1531e806880 <col:25> 'int' EnumConstant 0x1531e7fd008 'OPT_V_VERIFY_AUTH_LEVEL' 'int'
|   | |-CharacterLiteral 0x1531e8068a0 <col:50> 'int' 110
|   | `-ImplicitCastExpr 0x1531e80e468 <line:102:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e450 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8068b8 <col:13> 'char [36]' lvalue "chain authentication security level"
|   |-InitListExpr 0x1531e80e490 <line:103:9, col:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e508 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e4f0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806958 <col:11> 'char [7]' lvalue "attime"
|   | |-DeclRefExpr 0x1531e806978 <col:21> 'int' EnumConstant 0x1531e7fc7c8 'OPT_V_ATTIME' 'int'
|   | |-CharacterLiteral 0x1531e806998 <col:35> 'int' 77
|   | `-ImplicitCastExpr 0x1531e80e538 <col:40> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e520 <col:40> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e8069b0 <col:40> 'char [24]' lvalue "verification epoch time"
|   |-InitListExpr 0x1531e80e560 <line:104:9, line:105:38> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e5d8 <line:104:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e5c0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806a40 <col:11> 'char [16]' lvalue "verify_hostname"
|   | |-DeclRefExpr 0x1531e806a68 <col:30> 'int' EnumConstant 0x1531e7fc820 'OPT_V_VERIFY_HOSTNAME' 'int'
|   | |-CharacterLiteral 0x1531e806a88 <col:53> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80e608 <line:105:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e5f0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e806aa0 <col:13> 'char [23]' lvalue "expected peer hostname"
|   |-InitListExpr 0x1531e80e630 <line:106:9, line:107:35> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e6a8 <line:106:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e690 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806b30 <col:11> 'char [13]' lvalue "verify_email"
|   | |-DeclRefExpr 0x1531e806b58 <col:27> 'int' EnumConstant 0x1531e7fc878 'OPT_V_VERIFY_EMAIL' 'int'
|   | |-CharacterLiteral 0x1531e806b78 <col:47> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80e6d8 <line:107:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e6c0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e806b90 <col:13> 'char [20]' lvalue "expected peer email"
|   |-InitListExpr 0x1531e80e700 <line:108:9, line:109:40> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e778 <line:108:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e760 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806c20 <col:11> 'char [10]' lvalue "verify_ip"
|   | |-DeclRefExpr 0x1531e806c48 <col:24> 'int' EnumConstant 0x1531e7fc8d0 'OPT_V_VERIFY_IP' 'int'
|   | |-CharacterLiteral 0x1531e806c68 <col:41> 'int' 115
|   | `-ImplicitCastExpr 0x1531e80e7a8 <line:109:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e790 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e806c80 <col:13> 'char [25]' lvalue "expected peer IP address"
|   |-InitListExpr 0x1531e80e7d0 <line:110:9, line:111:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e848 <line:110:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e830 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806d10 <col:11> 'char [16]' lvalue "ignore_critical"
|   | |-DeclRefExpr 0x1531e806d38 <col:30> 'int' EnumConstant 0x1531e7fc928 'OPT_V_IGNORE_CRITICAL' 'int'
|   | |-CharacterLiteral 0x1531e806d58 <col:53> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80e878 <line:111:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e860 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e806d70 <col:13> 'char [37]' lvalue "permit unhandled critical extensions"
|   |-InitListExpr 0x1531e80e8a0 <line:112:9, col:68> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e918 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e900 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806e10 <col:11> 'char [14]' lvalue "issuer_checks"
|   | |-DeclRefExpr 0x1531e806e38 <col:28> 'int' EnumConstant 0x1531e7fc980 'OPT_V_ISSUER_CHECKS' 'int'
|   | |-CharacterLiteral 0x1531e806e58 <col:49> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80e948 <col:54> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80e930 <col:54> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e806e70 <col:54> 'char [13]' lvalue "(deprecated)"
|   |-InitListExpr 0x1531e80e970 <line:113:9, col:82> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80e9e8 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80e9d0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806ef8 <col:11> 'char [10]' lvalue "crl_check"
|   | |-DeclRefExpr 0x1531e806f20 <col:24> 'int' EnumConstant 0x1531e7fc9d8 'OPT_V_CRL_CHECK' 'int'
|   | |-CharacterLiteral 0x1531e806f40 <col:41> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80ea18 <col:46> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80ea00 <col:46> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e806f58 <col:46> 'char [34]' lvalue "check leaf certificate revocation"
|   |-InitListExpr 0x1531e80ea40 <line:114:9, col:84> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80eab8 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80eaa0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e806ff8 <col:11> 'char [14]' lvalue "crl_check_all"
|   | |-DeclRefExpr 0x1531e807020 <col:28> 'int' EnumConstant 0x1531e7fca30 'OPT_V_CRL_CHECK_ALL' 'int'
|   | |-CharacterLiteral 0x1531e807040 <col:49> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80eae8 <col:54> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80ead0 <col:54> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807058 <col:54> 'char [28]' lvalue "check full chain revocation"
|   |-InitListExpr 0x1531e80eb10 <line:115:9, col:83> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80eb88 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80eb70 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8070f0 <col:11> 'char [13]' lvalue "policy_check"
|   | |-DeclRefExpr 0x1531e807118 <col:27> 'int' EnumConstant 0x1531e7fca88 'OPT_V_POLICY_CHECK' 'int'
|   | |-CharacterLiteral 0x1531e807138 <col:47> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80ebb8 <col:52> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80eba0 <col:52> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807150 <col:52> 'char [30]' lvalue "perform rfc5280 policy checks"
|   |-InitListExpr 0x1531e80ebe0 <line:116:9, line:117:58> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80ec58 <line:116:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80ec40 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8071e8 <col:11> 'char [16]' lvalue "explicit_policy"
|   | |-DeclRefExpr 0x1531e807210 <col:30> 'int' EnumConstant 0x1531e7fcae0 'OPT_V_EXPLICIT_POLICY' 'int'
|   | |-CharacterLiteral 0x1531e807230 <col:53> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80ec88 <line:117:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80ec70 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807248 <col:13> 'char [44]' lvalue "set policy variable require-explicit-policy"
|   |-InitListExpr 0x1531e80ecb0 <line:118:9, line:119:53> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80ed28 <line:118:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80ed10 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8072f0 <col:11> 'char [12]' lvalue "inhibit_any"
|   | |-DeclRefExpr 0x1531e807318 <col:26> 'int' EnumConstant 0x1531e7fcb38 'OPT_V_INHIBIT_ANY' 'int'
|   | |-CharacterLiteral 0x1531e807338 <col:45> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80ed58 <line:119:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80ed40 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807350 <col:13> 'char [39]' lvalue "set policy variable inhibit-any-policy"
|   |-InitListExpr 0x1531e80ed80 <line:120:9, line:121:57> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80edf8 <line:120:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80ede0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8073f0 <col:11> 'char [12]' lvalue "inhibit_map"
|   | |-DeclRefExpr 0x1531e807418 <col:26> 'int' EnumConstant 0x1531e7fcb90 'OPT_V_INHIBIT_MAP' 'int'
|   | |-CharacterLiteral 0x1531e807438 <col:45> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80ee28 <line:121:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80ee10 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807450 <col:13> 'char [43]' lvalue "set policy variable inhibit-policy-mapping"
|   |-InitListExpr 0x1531e80ee50 <line:122:9, line:123:61> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80eec8 <line:122:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80eeb0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8074f8 <col:11> 'char [12]' lvalue "x509_strict"
|   | |-DeclRefExpr 0x1531e807520 <col:26> 'int' EnumConstant 0x1531e7fcbe8 'OPT_V_X509_STRICT' 'int'
|   | |-CharacterLiteral 0x1531e807540 <col:45> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80eef8 <line:123:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80eee0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807558 <col:13> 'char [47]' lvalue "disable certificate compatibility work-arounds"
|   |-InitListExpr 0x1531e80ef20 <line:124:9, line:125:43> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80ef98 <line:124:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80ef80 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e807600 <col:11> 'char [13]' lvalue "extended_crl"
|   | |-DeclRefExpr 0x1531e807628 <col:27> 'int' EnumConstant 0x1531e7fcc40 'OPT_V_EXTENDED_CRL' 'int'
|   | |-CharacterLiteral 0x1531e807648 <col:47> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80efc8 <line:125:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80efb0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807660 <col:13> 'char [29]' lvalue "enable extended CRL features"
|   |-InitListExpr 0x1531e80eff0 <line:126:9, line:127:29> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f068 <line:126:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f050 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8076f8 <col:11> 'char [11]' lvalue "use_deltas"
|   | |-DeclRefExpr 0x1531e807720 <col:25> 'int' EnumConstant 0x1531e7fcc98 'OPT_V_USE_DELTAS' 'int'
|   | |-CharacterLiteral 0x1531e807740 <col:43> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80f098 <line:127:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f080 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807758 <col:13> 'char [15]' lvalue "use delta CRLs"
|   |-InitListExpr 0x1531e80f0c0 <line:128:9, line:129:50> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f138 <line:128:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f120 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8077e0 <col:11> 'char [13]' lvalue "policy_print"
|   | |-DeclRefExpr 0x1531e807808 <col:27> 'int' EnumConstant 0x1531e7fccf0 'OPT_V_POLICY_PRINT' 'int'
|   | |-CharacterLiteral 0x1531e807828 <col:47> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80f168 <line:129:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f150 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807840 <col:13> 'char [36]' lvalue "print policy processing diagnostics"
|   |-InitListExpr 0x1531e80f190 <line:130:9, line:131:44> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f208 <line:130:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f1f0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8078e0 <col:11> 'char [13]' lvalue "check_ss_sig"
|   | |-DeclRefExpr 0x1531e807908 <col:27> 'int' EnumConstant 0x1531e7fcd48 'OPT_V_CHECK_SS_SIG' 'int'
|   | |-CharacterLiteral 0x1531e807928 <col:47> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80f238 <line:131:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f220 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807940 <col:13> 'char [30]' lvalue "check root CA self-signatures"
|   |-InitListExpr 0x1531e80f260 <line:132:9, line:133:50> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f2d8 <line:132:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f2c0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8079d8 <col:11> 'char [14]' lvalue "trusted_first"
|   | |-DeclRefExpr 0x1531e807a00 <col:28> 'int' EnumConstant 0x1531e7fcda0 'OPT_V_TRUSTED_FIRST' 'int'
|   | |-CharacterLiteral 0x1531e807a20 <col:49> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80f308 <line:133:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f2f0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807a38 <col:13> 'char [35]' lvalue "search trust store first (default)"
|   |-InitListExpr 0x1531e80f330 <line:134:9, col:85> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f3a8 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f390 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e807ad8 <col:11> 'char [16]' lvalue "suiteB_128_only"
|   | |-DeclRefExpr 0x1531e807b00 <col:30> 'int' EnumConstant 0x1531e7fcdf8 'OPT_V_SUITEB_128_ONLY' 'int'
|   | |-CharacterLiteral 0x1531e807b20 <col:53> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80f3d8 <col:58> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f3c0 <col:58> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807b38 <col:58> 'char [26]' lvalue "Suite B 128-bit-only mode"
|   |-InitListExpr 0x1531e80f400 <line:135:9, line:136:63> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f478 <line:135:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f460 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e807bd0 <col:11> 'char [11]' lvalue "suiteB_128"
|   | |-DeclRefExpr 0x1531e807bf8 <col:25> 'int' EnumConstant 0x1531e7fce50 'OPT_V_SUITEB_128' 'int'
|   | |-CharacterLiteral 0x1531e807c18 <col:43> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80f4a8 <line:136:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f490 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807c30 <col:13> 'char [49]' lvalue "Suite B 128-bit mode allowing 192-bit algorithms"
|   |-InitListExpr 0x1531e80f4d0 <line:137:9, col:76> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f548 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f530 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e807cd8 <col:11> 'char [11]' lvalue "suiteB_192"
|   | |-DeclRefExpr 0x1531e807d00 <col:25> 'int' EnumConstant 0x1531e7fcea8 'OPT_V_SUITEB_192' 'int'
|   | |-CharacterLiteral 0x1531e807d20 <col:43> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80f578 <col:48> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f560 <col:48> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807d38 <col:48> 'char [26]' lvalue "Suite B 192-bit-only mode"
|   |-InitListExpr 0x1531e80f5a0 <line:138:9, line:139:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f618 <line:138:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f600 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e807dd0 <col:11> 'char [14]' lvalue "partial_chain"
|   | |-DeclRefExpr 0x1531e807df8 <col:28> 'int' EnumConstant 0x1531e7fcf00 'OPT_V_PARTIAL_CHAIN' 'int'
|   | |-CharacterLiteral 0x1531e807e18 <col:49> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80f648 <line:139:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f630 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807e30 <col:13> 'char [55]' lvalue "accept chains anchored by intermediate trust-store CAs"
|   |-InitListExpr 0x1531e80f670 <line:140:9, col:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f6e8 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f6d0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e807ee0 <col:11> 'char [14]' lvalue "no_alt_chains"
|   | |-DeclRefExpr 0x1531e807f08 <col:28> 'int' EnumConstant 0x1531e7fcf58 'OPT_V_NO_ALT_CHAINS' 'int'
|   | |-CharacterLiteral 0x1531e807f28 <col:49> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80f718 <col:54> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f700 <col:54> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e807f40 <col:54> 'char [13]' lvalue "(deprecated)"
|   |-InitListExpr 0x1531e80f740 <line:141:9, col:89> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f7b8 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f7a0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e807fc8 <col:11> 'char [14]' lvalue "no_check_time"
|   | |-DeclRefExpr 0x1531e807ff0 <col:28> 'int' EnumConstant 0x1531e7fcfb0 'OPT_V_NO_CHECK_TIME' 'int'
|   | |-CharacterLiteral 0x1531e808010 <col:49> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80f7e8 <col:54> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f7d0 <col:54> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808028 <col:54> 'char [33]' lvalue "ignore certificate validity time"
|   |-InitListExpr 0x1531e80f810 <line:142:9, col:100> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f888 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f870 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8080c0 <col:11> 'char [18]' lvalue "allow_proxy_certs"
|   | |-DeclRefExpr 0x1531e8080f0 <col:32> 'int' EnumConstant 0x1531e7fd060 'OPT_V_ALLOW_PROXY_CERTS' 'int'
|   | |-CharacterLiteral 0x1531e808110 <col:57> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80f8b8 <col:62> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f8a0 <col:62> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808160 <col:62> 'char [36]' lvalue "allow the use of proxy certificates"
|   |-InitListExpr 0x1531e80f8e0 <line:187:9, col:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80f958 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80f940 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e808200 <col:11> 'char [5]' lvalue "xkey"
|   | |-DeclRefExpr 0x1531e808220 <col:19> 'int' EnumConstant 0x1531e7fd1a8 'OPT_X_KEY' 'int'
|   | |-CharacterLiteral 0x1531e808240 <col:30> 'int' 60
|   | `-ImplicitCastExpr 0x1531e80f988 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80f970 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808258 <col:35> 'char [30]' lvalue "key for Extended certificates"
|   |-InitListExpr 0x1531e80f9b0 <line:188:9, col:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80fa28 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80fa10 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8082f0 <col:11> 'char [6]' lvalue "xcert"
|   | |-DeclRefExpr 0x1531e808310 <col:20> 'int' EnumConstant 0x1531e7fd200 'OPT_X_CERT' 'int'
|   | |-CharacterLiteral 0x1531e808330 <col:32> 'int' 60
|   | `-ImplicitCastExpr 0x1531e80fa58 <col:37> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80fa40 <col:37> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808348 <col:37> 'char [31]' lvalue "cert for Extended certificates"
|   |-InitListExpr 0x1531e80fa80 <line:189:9, col:72> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80faf8 <col:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80fae0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8083e0 <col:11> 'char [7]' lvalue "xchain"
|   | |-DeclRefExpr 0x1531e808400 <col:21> 'int' EnumConstant 0x1531e7fd258 'OPT_X_CHAIN' 'int'
|   | |-CharacterLiteral 0x1531e808420 <col:34> 'int' 60
|   | `-ImplicitCastExpr 0x1531e80fb28 <col:39> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80fb10 <col:39> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808438 <col:39> 'char [32]' lvalue "chain for Extended certificates"
|   |-InitListExpr 0x1531e80fb50 <line:190:9, line:191:68> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80fbc8 <line:190:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80fbb0 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8084d0 <col:11> 'char [13]' lvalue "xchain_build"
|   | |-DeclRefExpr 0x1531e8084f8 <col:27> 'int' EnumConstant 0x1531e7fd2b0 'OPT_X_CHAIN_BUILD' 'int'
|   | |-CharacterLiteral 0x1531e808518 <col:46> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80fbf8 <line:191:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80fbe0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808530 <col:13> 'char [54]' lvalue "build certificate chain for the extended certificates"
|   |-InitListExpr 0x1531e80fc20 <line:192:9, line:193:72> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80fc98 <line:192:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80fc80 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8085e0 <col:11> 'char [10]' lvalue "xcertform"
|   | |-DeclRefExpr 0x1531e808608 <col:24> 'int' EnumConstant 0x1531e7fd308 'OPT_X_CERTFORM' 'int'
|   | |-CharacterLiteral 0x1531e808628 <col:40> 'int' 70
|   | `-ImplicitCastExpr 0x1531e80fcc8 <line:193:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80fcb0 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808640 <col:13> 'char [57]' lvalue "format of Extended certificate (PEM or DER) PEM default "
|   |-InitListExpr 0x1531e80fcf0 <line:194:9, line:195:76> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80fd68 <line:194:11> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80fd50 <col:11> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8086f0 <col:11> 'char [9]' lvalue "xkeyform"
|   | |-DeclRefExpr 0x1531e808710 <col:23> 'int' EnumConstant 0x1531e7fd360 'OPT_X_KEYFORM' 'int'
|   | |-CharacterLiteral 0x1531e808730 <col:38> 'int' 70
|   | `-ImplicitCastExpr 0x1531e80fd98 <line:195:13> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80fd80 <col:13> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808748 <col:13> 'char [62]' lvalue "format of Extended certificate's key (PEM or DER) PEM default"
|   |-InitListExpr 0x1531e80fdc0 <.//openssl//file_jk/after\apps\s_client.c:673:5, col:45> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80fe38 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80fe20 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e808800 <col:6> 'char [5]' lvalue "ssl3"
|   | |-DeclRefExpr 0x1531e808820 <col:14> 'int' EnumConstant 0x1531e7ed890 'OPT_SSL3' 'int'
|   | |-CharacterLiteral 0x1531e808840 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80fe68 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80fe50 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808858 <col:29> 'char [15]' lvalue "Just use SSLv3"
|   |-InitListExpr 0x1531e80fe90 <line:676:5, col:45> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80ff08 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80fef0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8088e0 <col:6> 'char [5]' lvalue "tls1"
|   | |-DeclRefExpr 0x1531e808900 <col:14> 'int' EnumConstant 0x1531e7ed9f0 'OPT_TLS1' 'int'
|   | |-CharacterLiteral 0x1531e808920 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1531e80ff38 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80ff20 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808938 <col:29> 'char [15]' lvalue "Just use TLSv1"
|   |-InitListExpr 0x1531e80ff60 <line:679:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e80ffd8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e80ffc0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8089c0 <col:6> 'char [7]' lvalue "tls1_1"
|   | |-DeclRefExpr 0x1531e8089e0 <col:16> 'int' EnumConstant 0x1531e7ed998 'OPT_TLS1_1' 'int'
|   | |-CharacterLiteral 0x1531e808a00 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x1531e810008 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e80fff0 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808a18 <col:33> 'char [17]' lvalue "Just use TLSv1.1"
|   |-InitListExpr 0x1531e810030 <line:682:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8100a8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e810090 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e808aa0 <col:6> 'char [7]' lvalue "tls1_2"
|   | |-DeclRefExpr 0x1531e808ac0 <col:16> 'int' EnumConstant 0x1531e7ed940 'OPT_TLS1_2' 'int'
|   | |-CharacterLiteral 0x1531e808ae0 <col:28> 'int' 45
|   | `-ImplicitCastExpr 0x1531e8100d8 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8100c0 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808af8 <col:33> 'char [17]' lvalue "Just use TLSv1.2"
|   |-InitListExpr 0x1531e8109b0 <line:685:5, col:54> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e810a28 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e810a10 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e808b80 <col:6> 'char [5]' lvalue "dtls"
|   | |-DeclRefExpr 0x1531e808ba0 <col:14> 'int' EnumConstant 0x1531e7eda48 'OPT_DTLS' 'int'
|   | |-CharacterLiteral 0x1531e808bc0 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1531e810a58 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e810a40 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808bd8 <col:29> 'char [24]' lvalue "Use any version of DTLS"
|   |-InitListExpr 0x1531e810a80 <line:686:5, line:687:55> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e810af8 <line:686:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e810ae0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e808c68 <col:6> 'char [8]' lvalue "timeout"
|   | |-DeclRefExpr 0x1531e808c88 <col:17> 'int' EnumConstant 0x1531e7edb50 'OPT_TIMEOUT' 'int'
|   | |-CharacterLiteral 0x1531e808ca8 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x1531e810b28 <line:687:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e810b10 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808cc0 <col:6> 'char [48]' lvalue "Enable send/receive timeout on DTLS connections"
|   |-InitListExpr 0x1531e810b50 <line:688:5, col:51> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e810bc8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e810bb0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e808d68 <col:6> 'char [4]' lvalue "mtu"
|   | |-DeclRefExpr 0x1531e808d88 <col:13> 'int' EnumConstant 0x1531e7edba8 'OPT_MTU' 'int'
|   | |-CharacterLiteral 0x1531e808da8 <col:22> 'int' 112
|   | `-ImplicitCastExpr 0x1531e810bf8 <col:27> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e810be0 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808dc0 <col:27> 'char [23]' lvalue "Set the link layer MTU"
|   |-InitListExpr 0x1531e810c20 <line:691:5, col:48> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e810c98 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e810c80 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e808e50 <col:6> 'char [6]' lvalue "dtls1"
|   | |-DeclRefExpr 0x1531e808e70 <col:15> 'int' EnumConstant 0x1531e7edaa0 'OPT_DTLS1' 'int'
|   | |-CharacterLiteral 0x1531e808e90 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1531e810cc8 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e810cb0 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808ea8 <col:31> 'char [16]' lvalue "Just use DTLSv1"
|   |-InitListExpr 0x1531e810cf0 <line:694:5, col:54> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e810d68 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e810d50 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e808f30 <col:6> 'char [8]' lvalue "dtls1_2"
|   | |-DeclRefExpr 0x1531e808f50 <col:17> 'int' EnumConstant 0x1531e7edaf8 'OPT_DTLS1_2' 'int'
|   | |-CharacterLiteral 0x1531e808f70 <col:30> 'int' 45
|   | `-ImplicitCastExpr 0x1531e810d98 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e810d80 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e808f88 <col:35> 'char [18]' lvalue "Just use DTLSv1.2"
|   |-InitListExpr 0x1531e810dc0 <line:697:5, col:71> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e810e38 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e810e20 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e809018 <col:6> 'char [6]' lvalue "trace"
|   | |-DeclRefExpr 0x1531e809038 <col:15> 'int' EnumConstant 0x1531e7ed418 'OPT_TRACE' 'int'
|   | |-CharacterLiteral 0x1531e809058 <col:26> 'int' 45
|   | `-ImplicitCastExpr 0x1531e810e68 <col:31> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e810e50 <col:31> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809070 <col:31> 'char [39]' lvalue "Show trace output of protocol messages"
|   |-InitListExpr 0x1531e810e90 <line:702:5, col:50> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e810f08 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e810ef0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e809110 <col:6> 'char [5]' lvalue "nbio"
|   | |-DeclRefExpr 0x1531e809130 <col:14> 'int' EnumConstant 0x1531e7ecff8 'OPT_NBIO' 'int'
|   | |-CharacterLiteral 0x1531e809150 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1531e810f38 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e810f20 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809168 <col:29> 'char [20]' lvalue "Use non-blocking IO"
|   |-InitListExpr 0x1531e810f60 <line:704:5, col:59> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e810fd8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e810fc0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8091f8 <col:6> 'char [13]' lvalue "psk_identity"
|   | |-DeclRefExpr 0x1531e809220 <col:22> 'int' EnumConstant 0x1531e7ed628 'OPT_PSK_IDENTITY' 'int'
|   | |-CharacterLiteral 0x1531e809240 <col:40> 'int' 115
|   | `-ImplicitCastExpr 0x1531e811008 <col:45> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e810ff0 <col:45> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809258 <col:45> 'char [13]' lvalue "PSK identity"
|   |-InitListExpr 0x1531e811030 <line:705:5, col:52> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8110a8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e811090 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8092e0 <col:6> 'char [4]' lvalue "psk"
|   | |-DeclRefExpr 0x1531e809300 <col:13> 'int' EnumConstant 0x1531e7ed680 'OPT_PSK' 'int'
|   | |-CharacterLiteral 0x1531e809320 <col:22> 'int' 115
|   | `-ImplicitCastExpr 0x1531e8110d8 <col:27> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8110c0 <col:27> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809338 <col:27> 'char [24]' lvalue "PSK in hex (without 0x)"
|   |-InitListExpr 0x1531e811100 <line:708:5, col:66> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e811178 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e811160 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8093c8 <col:6> 'char [8]' lvalue "srpuser"
|   | |-DeclRefExpr 0x1531e8093e8 <col:17> 'int' EnumConstant 0x1531e7ed6d8 'OPT_SRPUSER' 'int'
|   | |-CharacterLiteral 0x1531e809408 <col:30> 'int' 115
|   | `-ImplicitCastExpr 0x1531e8111a8 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e811190 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809420 <col:35> 'char [30]' lvalue "SRP authentication for 'user'"
|   |-InitListExpr 0x1531e8111d0 <line:709:5, col:56> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e811248 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e811230 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8094b8 <col:6> 'char [8]' lvalue "srppass"
|   | |-DeclRefExpr 0x1531e8094d8 <col:17> 'int' EnumConstant 0x1531e7ed730 'OPT_SRPPASS' 'int'
|   | |-CharacterLiteral 0x1531e8094f8 <col:30> 'int' 115
|   | `-ImplicitCastExpr 0x1531e811278 <col:35> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e811260 <col:35> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809510 <col:35> 'char [20]' lvalue "Password for 'user'"
|   |-InitListExpr 0x1531e8112a0 <line:710:5, line:711:52> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e811318 <line:710:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e811300 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8095a0 <col:6> 'char [13]' lvalue "srp_lateuser"
|   | |-DeclRefExpr 0x1531e8095c8 <col:22> 'int' EnumConstant 0x1531e7ed7e0 'OPT_SRP_LATEUSER' 'int'
|   | |-CharacterLiteral 0x1531e8095e8 <col:40> 'int' 45
|   | `-ImplicitCastExpr 0x1531e811348 <line:711:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e811330 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809600 <col:6> 'char [45]' lvalue "SRP username into second ClientHello message"
|   |-InitListExpr 0x1531e811370 <line:712:5, line:713:49> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8113e8 <line:712:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8113d0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8096a8 <col:6> 'char [15]' lvalue "srp_moregroups"
|   | |-DeclRefExpr 0x1531e8096d0 <col:24> 'int' EnumConstant 0x1531e7ed838 'OPT_SRP_MOREGROUPS' 'int'
|   | |-CharacterLiteral 0x1531e8096f0 <col:44> 'int' 45
|   | `-ImplicitCastExpr 0x1531e811418 <line:713:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e811400 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809708 <col:6> 'char [42]' lvalue "Tolerate other than the known g N values."
|   |-InitListExpr 0x1531e811440 <line:714:5, col:75> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8114b8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8114a0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8097b0 <col:6> 'char [13]' lvalue "srp_strength"
|   | |-DeclRefExpr 0x1531e8097d8 <col:22> 'int' EnumConstant 0x1531e7ed788 'OPT_SRP_STRENGTH' 'int'
|   | |-CharacterLiteral 0x1531e8097f8 <col:40> 'int' 112
|   | `-ImplicitCastExpr 0x1531e8114e8 <col:45> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8114d0 <col:45> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809810 <col:45> 'char [29]' lvalue "Minimal length in bits for N"
|   |-InitListExpr 0x1531e811510 <line:717:5, line:718:90> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e811588 <line:717:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e811570 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8098a8 <col:6> 'char [13]' lvalue "nextprotoneg"
|   | |-DeclRefExpr 0x1531e8098d0 <col:22> 'int' EnumConstant 0x1531e7fc158 'OPT_NEXTPROTONEG' 'int'
|   | |-CharacterLiteral 0x1531e8098f0 <col:40> 'int' 115
|   | `-ImplicitCastExpr 0x1531e8115b8 <line:718:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8115a0 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809948 <col:6> 'char [83]' lvalue "Enable NPN extension, considering named protocols supported (comma-separated list)"
|   |-InitListExpr 0x1531e8115e0 <line:721:5, col:73> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e811658 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e811640 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e809a18 <col:6> 'char [7]' lvalue "engine"
|   | |-DeclRefExpr 0x1531e809a38 <col:16> 'int' EnumConstant 0x1531e7ed3c0 'OPT_ENGINE' 'int'
|   | |-CharacterLiteral 0x1531e809a58 <col:28> 'int' 115
|   | `-ImplicitCastExpr 0x1531e811688 <col:33> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e811670 <col:33> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809a70 <col:33> 'char [39]' lvalue "Use engine, possibly a hardware device"
|   |-InitListExpr 0x1531e8116b0 <line:722:5, line:723:67> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e811728 <line:722:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e811710 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e809b10 <col:6> 'char [18]' lvalue "ssl_client_engine"
|   | |-DeclRefExpr 0x1531e809b40 <col:27> 'int' EnumConstant 0x1531e7ed050 'OPT_SSL_CLIENT_ENGINE' 'int'
|   | |-CharacterLiteral 0x1531e809b60 <col:50> 'int' 115
|   | `-ImplicitCastExpr 0x1531e811758 <line:723:6> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e811740 <col:6> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809bb8 <col:6> 'char [60]' lvalue "Specify engine to be used for client certificate operations"
|   |-InitListExpr 0x1531e811780 <line:726:5, col:78> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8117f8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8117e0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e809c70 <col:6> 'char [3]' lvalue "ct"
|   | |-DeclRefExpr 0x1531e809c90 <col:12> 'int' EnumConstant 0x1531e7fde48 'OPT_CT' 'int'
|   | |-CharacterLiteral 0x1531e809cb0 <col:20> 'int' 45
|   | `-ImplicitCastExpr 0x1531e811828 <col:25> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e811810 <col:25> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809cc8 <col:25> 'char [52]' lvalue "Request and parse SCTs (also enables OCSP stapling)"
|   |-InitListExpr 0x1531e811850 <line:727:5, col:69> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e8118c8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8118b0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e809d78 <col:6> 'char [5]' lvalue "noct"
|   | |-DeclRefExpr 0x1531e809d98 <col:14> 'int' EnumConstant 0x1531e7fdea0 'OPT_NOCT' 'int'
|   | |-CharacterLiteral 0x1531e809db8 <col:24> 'int' 45
|   | `-ImplicitCastExpr 0x1531e8118f8 <col:29> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8118e0 <col:29> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809dd0 <col:29> 'char [39]' lvalue "Do not request or parse SCTs (default)"
|   |-InitListExpr 0x1531e811920 <line:728:5, col:63> 'OPTIONS':'struct options_st'
|   | |-ImplicitCastExpr 0x1531e811998 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e811980 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e809e70 <col:6> 'char [10]' lvalue "ctlogfile"
|   | |-DeclRefExpr 0x1531e809e98 <col:19> 'int' EnumConstant 0x1531e7fdef8 'OPT_CTLOG_FILE' 'int'
|   | |-CharacterLiteral 0x1531e809eb8 <col:35> 'int' 60
|   | `-ImplicitCastExpr 0x1531e8119c8 <col:40> 'const char *' <NoOp>
|   |   `-ImplicitCastExpr 0x1531e8119b0 <col:40> 'char *' <ArrayToPointerDecay>
|   |     `-StringLiteral 0x1531e809ed0 <col:40> 'char [22]' lvalue "CT log list CONF file"
|   `-InitListExpr 0x1531e8119f0 <line:730:5, col:31> 'OPTIONS':'struct options_st'
|     |-ImplicitCastExpr 0x1531e811a50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|     | `-ParenExpr 0x1531e809fc8 <col:17, col:27> 'void *'
|     |   `-CStyleCastExpr 0x1531e809fa0 <col:18, col:26> 'void *' <NullToPointer>
|     |     `-IntegerLiteral 0x1531e809f60 <col:26> 'int' 0
|     |-DeclRefExpr 0x1531e809fe8 <.//openssl//file_jk/after\apps\s_client.c:730:12> 'int' EnumConstant 0x1531e7ec810 'OPT_EOF' 'int'
|     |-IntegerLiteral 0x1531e80a008 <col:21> 'int' 0
|     `-ImplicitCastExpr 0x1531e811a68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|       `-ParenExpr 0x1531e80a098 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x1531e80a070 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x1531e80a030 <col:26> 'int' 0
|-EnumDecl 0x1531e811af8 <.//openssl//file_jk/after\apps\s_client.c:733:9, line:744:1> line:733:14 PROTOCOL_choice
| |-EnumConstantDecl 0x1531e811bd0 <line:734:5> col:5 referenced PROTO_OFF 'int'
| |-EnumConstantDecl 0x1531e811c28 <line:735:5> col:5 referenced PROTO_SMTP 'int'
| |-EnumConstantDecl 0x1531e811c80 <line:736:5> col:5 referenced PROTO_POP3 'int'
| |-EnumConstantDecl 0x1531e811cd8 <line:737:5> col:5 referenced PROTO_IMAP 'int'
| |-EnumConstantDecl 0x1531e811d30 <line:738:5> col:5 referenced PROTO_FTP 'int'
| |-EnumConstantDecl 0x1531e811d88 <line:739:5> col:5 referenced PROTO_TELNET 'int'
| |-EnumConstantDecl 0x1531e811de0 <line:740:5> col:5 referenced PROTO_XMPP 'int'
| |-EnumConstantDecl 0x1531e811e38 <line:741:5> col:5 referenced PROTO_XMPP_SERVER 'int'
| |-EnumConstantDecl 0x1531e811e90 <line:742:5> col:5 referenced PROTO_CONNECT 'int'
| `-EnumConstantDecl 0x1531e811ee8 <line:743:5> col:5 referenced PROTO_IRC 'int'
|-TypedefDecl 0x1531e811f98 <line:733:1, line:744:3> col:3 referenced PROTOCOL_CHOICE 'enum PROTOCOL_choice':'enum PROTOCOL_choice'
| `-ElaboratedType 0x1531e811f40 'enum PROTOCOL_choice' sugar
|   `-EnumType 0x1531e811bb0 'enum PROTOCOL_choice'
|     `-Enum 0x1531e811af8 'PROTOCOL_choice'
|-VarDecl 0x1531e812088 <line:746:1, line:756:1> line:746:23 used services 'const OPT_PAIR [9]' static cinit
| `-InitListExpr 0x1531e802738 <col:36, line:756:1> 'const OPT_PAIR [9]'
|   |-InitListExpr 0x1531e802788 <line:747:5, col:24> 'OPT_PAIR':'struct string_int_pair_st'
|   | |-ImplicitCastExpr 0x1531e8027f0 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8027d8 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8120f0 <col:6> 'char [5]' lvalue "smtp"
|   | `-DeclRefExpr 0x1531e812110 <col:14> 'int' EnumConstant 0x1531e811c28 'PROTO_SMTP' 'int'
|   |-InitListExpr 0x1531e802820 <line:748:5, col:24> 'OPT_PAIR':'struct string_int_pair_st'
|   | |-ImplicitCastExpr 0x1531e802888 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e802870 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e812180 <col:6> 'char [5]' lvalue "pop3"
|   | `-DeclRefExpr 0x1531e802130 <col:14> 'int' EnumConstant 0x1531e811c80 'PROTO_POP3' 'int'
|   |-InitListExpr 0x1531e8028c0 <line:749:5, col:24> 'OPT_PAIR':'struct string_int_pair_st'
|   | |-ImplicitCastExpr 0x1531e802928 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e802910 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8021a0 <col:6> 'char [5]' lvalue "imap"
|   | `-DeclRefExpr 0x1531e8021c0 <col:14> 'int' EnumConstant 0x1531e811cd8 'PROTO_IMAP' 'int'
|   |-InitListExpr 0x1531e802970 <line:750:5, col:22> 'OPT_PAIR':'struct string_int_pair_st'
|   | |-ImplicitCastExpr 0x1531e8029d8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e8029c0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e802230 <col:6> 'char [4]' lvalue "ftp"
|   | `-DeclRefExpr 0x1531e802250 <col:13> 'int' EnumConstant 0x1531e811d30 'PROTO_FTP' 'int'
|   |-InitListExpr 0x1531e802a00 <line:751:5, col:24> 'OPT_PAIR':'struct string_int_pair_st'
|   | |-ImplicitCastExpr 0x1531e802a68 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e802a50 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8022c0 <col:6> 'char [5]' lvalue "xmpp"
|   | `-DeclRefExpr 0x1531e8022e0 <col:14> 'int' EnumConstant 0x1531e811de0 'PROTO_XMPP' 'int'
|   |-InitListExpr 0x1531e802ad0 <line:752:5, col:38> 'OPT_PAIR':'struct string_int_pair_st'
|   | |-ImplicitCastExpr 0x1531e802b38 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e802b20 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e802350 <col:6> 'char [12]' lvalue "xmpp-server"
|   | `-DeclRefExpr 0x1531e802378 <col:21> 'int' EnumConstant 0x1531e811e38 'PROTO_XMPP_SERVER' 'int'
|   |-InitListExpr 0x1531e802b60 <line:753:5, col:28> 'OPT_PAIR':'struct string_int_pair_st'
|   | |-ImplicitCastExpr 0x1531e802bc8 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e802bb0 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e8023e8 <col:6> 'char [7]' lvalue "telnet"
|   | `-DeclRefExpr 0x1531e802408 <col:16> 'int' EnumConstant 0x1531e811d88 'PROTO_TELNET' 'int'
|   |-InitListExpr 0x1531e802bf0 <line:754:5, col:22> 'OPT_PAIR':'struct string_int_pair_st'
|   | |-ImplicitCastExpr 0x1531e802c58 <col:6> 'const char *' <NoOp>
|   | | `-ImplicitCastExpr 0x1531e802c40 <col:6> 'char *' <ArrayToPointerDecay>
|   | |   `-StringLiteral 0x1531e802478 <col:6> 'char [4]' lvalue "irc"
|   | `-DeclRefExpr 0x1531e802498 <col:13> 'int' EnumConstant 0x1531e811ee8 'PROTO_IRC' 'int'
|   `-InitListExpr 0x1531e802c80 <line:755:5, col:13> 'OPT_PAIR':'struct string_int_pair_st'
|     |-ImplicitCastExpr 0x1531e802cd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|     | `-ParenExpr 0x1531e802570 <col:17, col:27> 'void *'
|     |   `-CStyleCastExpr 0x1531e802548 <col:18, col:26> 'void *' <NullToPointer>
|     |     `-IntegerLiteral 0x1531e802508 <col:26> 'int' 0
|     `-IntegerLiteral 0x1531e802590 <.//openssl//file_jk/after\apps\s_client.c:755:12> 'int' 0
|-FunctionDecl 0x1531e802f88 <line:767:1, line:773:1> line:767:13 used freeandcopy 'void (char **, const char *)' static
| |-ParmVarDecl 0x1531e802e00 <col:25, col:32> col:32 used dest 'char **'
| |-ParmVarDecl 0x1531e802e80 <col:38, col:50> col:50 used source 'const char *'
| `-CompoundStmt 0x1531e803548 <line:768:1, line:773:1>
|   |-CallExpr 0x1531e8030d8 <line:769:5, col:23> 'int'
|   | |-ImplicitCastExpr 0x1531e8030c0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e803050 <col:5> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1531e803100 <col:18, col:19> 'char *' <LValueToRValue>
|   |   `-UnaryOperator 0x1531e8030a8 <col:18, col:19> 'char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x1531e803090 <col:19> 'char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x1531e803070 <col:19> 'char **' lvalue ParmVar 0x1531e802e00 'dest' 'char **'
|   |-BinaryOperator 0x1531e803208 <line:770:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   | |-UnaryOperator 0x1531e803150 <.//openssl//file_jk/after\apps\s_client.c:770:5, col:6> 'char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1531e803138 <col:6> 'char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1531e803118 <col:6> 'char **' lvalue ParmVar 0x1531e802e00 'dest' 'char **'
|   | `-ImplicitCastExpr 0x1531e8031f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   `-ParenExpr 0x1531e8031d0 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x1531e8031a8 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x1531e803168 <col:26> 'int' 0
|   `-IfStmt 0x1531e803530 <.//openssl//file_jk/after\apps\s_client.c:771:5, line:772:38>
|     |-BinaryOperator 0x1531e803300 <line:771:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|     | |-ImplicitCastExpr 0x1531e8032d0 <.//openssl//file_jk/after\apps\s_client.c:771:9> 'const char *' <LValueToRValue>
|     | | `-DeclRefExpr 0x1531e803228 <col:9> 'const char *' lvalue ParmVar 0x1531e802e80 'source' 'const char *'
|     | `-ImplicitCastExpr 0x1531e8032e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|     |   `-ParenExpr 0x1531e8032b0 <col:17, col:27> 'void *'
|     |     `-CStyleCastExpr 0x1531e803288 <col:18, col:26> 'void *' <NullToPointer>
|     |       `-IntegerLiteral 0x1531e803248 <col:26> 'int' 0
|     `-BinaryOperator 0x1531e803510 <.//openssl//file_jk/after\apps\s_client.c:772:9, col:38> 'char *' '='
|       |-UnaryOperator 0x1531e803358 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow
|       | `-ImplicitCastExpr 0x1531e803340 <col:10> 'char **' <LValueToRValue>
|       |   `-DeclRefExpr 0x1531e803320 <col:10> 'char **' lvalue ParmVar 0x1531e802e00 'dest' 'char **'
|       `-ImplicitCastExpr 0x1531e8034f8 <col:17, col:38> 'char *' <IntegralToPointer>
|         `-CallExpr 0x1531e8034b8 <col:17, col:38> 'int'
|           |-ImplicitCastExpr 0x1531e8034a0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x1531e803460 <col:17> 'int ()' Function 0x1531e803398 'OPENSSL_strdup' 'int ()'
|           `-ImplicitCastExpr 0x1531e8034e0 <col:32> 'const char *' <LValueToRValue>
|             `-DeclRefExpr 0x1531e803480 <col:32> 'const char *' lvalue ParmVar 0x1531e802e80 'source' 'const char *'
|-FunctionDecl 0x1531e803710 <line:775:1, line:2525:1> line:775:5 s_client_main 'int (int, char **)'
| |-ParmVarDecl 0x1531e803588 <col:19, col:23> col:23 used argc 'int'
| |-ParmVarDecl 0x1531e803608 <col:29, col:36> col:36 used argv 'char **'
| `-CompoundStmt 0x1531e84db38 <line:776:1, line:2525:1>
|   |-DeclStmt 0x1531e803d30 <line:784:5, col:27>
|   | `-VarDecl 0x1531e803c28 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:784:17 used exc 'SSL_EXCERT *' cinit
|   |   `-ImplicitCastExpr 0x1531e803d18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'SSL_EXCERT *' <NullToPointer>
|   |     `-ParenExpr 0x1531e803cf8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e803cd0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e803c90 <col:26> 'int' 0
|   |-DeclStmt 0x1531e803f98 <.//openssl//file_jk/after\apps\s_client.c:787:5, col:34>
|   | `-VarDecl 0x1531e803e90 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:787:11 used dane_tlsa_domain 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e803f80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e803f60 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e803f38 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e803ef8 <col:26> 'int' 0
|   |-DeclStmt 0x1531e804100 <.//openssl//file_jk/after\apps\s_client.c:789:5, col:28>
|   | `-VarDecl 0x1531e804070 <col:5, col:27> col:9 used dane_ee_no_name 'int' cinit
|   |   `-IntegerLiteral 0x1531e8040d8 <col:27> 'int' 0
|   |-DeclStmt 0x1531e81a460 <line:791:5, col:49>
|   | `-VarDecl 0x1531e81a2b0 <col:5, col:23> col:23 invalid meth 'const int *'
|   |-DeclStmt 0x1531e81a6d0 <line:792:5, col:46>
|   | |-VarDecl 0x1531e81a490 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:792:17 used CApath 'const char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81a580 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81a560 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81a538 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81a4f8 <col:26> 'int' 0
|   | `-VarDecl 0x1531e81a5b0 <.//openssl//file_jk/after\apps\s_client.c:792:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:792:33 used CAfile 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1531e81a6a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e81a680 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e81a658 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e81a618 <col:26> 'int' 0
|   |-DeclStmt 0x1531e81a940 <.//openssl//file_jk/after\apps\s_client.c:793:5, col:36>
|   | |-VarDecl 0x1531e81a700 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:793:11 used cbuf 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81a7f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81a7d0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81a7a8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81a768 <col:26> 'int' 0
|   | `-VarDecl 0x1531e81a820 <.//openssl//file_jk/after\apps\s_client.c:793:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:793:25 used sbuf 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e81a910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e81a8f0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e81a8c8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e81a888 <col:26> 'int' 0
|   |-DeclStmt 0x1531e81acd8 <.//openssl//file_jk/after\apps\s_client.c:794:5, col:60>
|   | |-VarDecl 0x1531e81a970 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:794:11 used mbuf 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81aa60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81aa40 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81aa18 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81a9d8 <col:26> 'int' 0
|   | |-VarDecl 0x1531e81aa90 <.//openssl//file_jk/after\apps\s_client.c:794:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:794:25 used proxystr 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81ab80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81ab60 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81ab38 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81aaf8 <col:26> 'int' 0
|   | `-VarDecl 0x1531e81abb0 <.//openssl//file_jk/after\apps\s_client.c:794:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:794:43 used connectstr 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e81aca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e81ac80 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e81ac58 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e81ac18 <col:26> 'int' 0
|   |-DeclStmt 0x1531e81b070 <.//openssl//file_jk/after\apps\s_client.c:795:5, col:65>
|   | |-VarDecl 0x1531e81ad08 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:795:11 used cert_file 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81adf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81add8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81adb0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81ad70 <col:26> 'int' 0
|   | |-VarDecl 0x1531e81ae28 <.//openssl//file_jk/after\apps\s_client.c:795:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:795:30 used key_file 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81af18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81aef8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81aed0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81ae90 <col:26> 'int' 0
|   | `-VarDecl 0x1531e81af48 <.//openssl//file_jk/after\apps\s_client.c:795:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:795:48 used chain_file 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e81b038 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e81b018 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e81aff0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e81afb0 <col:26> 'int' 0
|   |-DeclStmt 0x1531e81b408 <.//openssl//file_jk/after\apps\s_client.c:796:5, col:58>
|   | |-VarDecl 0x1531e81b0a0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:796:11 used chCApath 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81b190 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81b170 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81b148 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81b108 <col:26> 'int' 0
|   | |-VarDecl 0x1531e81b1c0 <.//openssl//file_jk/after\apps\s_client.c:796:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:796:29 used chCAfile 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81b2b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81b290 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81b268 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81b228 <col:26> 'int' 0
|   | `-VarDecl 0x1531e81b2e0 <.//openssl//file_jk/after\apps\s_client.c:796:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:796:47 used host 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e81b3d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e81b3b0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e81b388 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e81b348 <col:26> 'int' 0
|   |-DeclStmt 0x1531e81b550 <.//openssl//file_jk/after\apps\s_client.c:797:5, col:38>
|   | `-VarDecl 0x1531e81b438 <col:5, col:37> col:11 used port 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e81b538 <col:18, col:37> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x1531e81b4f8 <col:18, col:37> 'int'
|   |       |-ImplicitCastExpr 0x1531e81b4e0 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1531e81b4a0 <col:18> 'int ()' Function 0x1531e803398 'OPENSSL_strdup' 'int ()'
|   |       `-ImplicitCastExpr 0x1531e81b520 <.//openssl//file_jk/after\apps/s_apps.h:45:25> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x1531e81b4c0 <col:25> 'char [5]' lvalue "4433"
|   |-DeclStmt 0x1531e81b688 <.//openssl//file_jk/after\apps\s_client.c:798:5, col:24>
|   | `-VarDecl 0x1531e81b580 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:798:11 used inrand 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e81b670 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e81b650 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e81b628 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e81b5e8 <col:26> 'int' 0
|   |-DeclStmt 0x1531e81bb48 <.//openssl//file_jk/after\apps\s_client.c:799:5, col:77>
|   | |-VarDecl 0x1531e81b6b8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:799:11 used passarg 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81b7a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81b788 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81b760 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81b720 <col:26> 'int' 0
|   | |-VarDecl 0x1531e81b7d8 <.//openssl//file_jk/after\apps\s_client.c:799:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:799:28 used pass 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81b8c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81b8a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81b880 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81b840 <col:26> 'int' 0
|   | |-VarDecl 0x1531e81b8f8 <.//openssl//file_jk/after\apps\s_client.c:799:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:799:42 used vfyCApath 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81b9e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81b9c8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81b9a0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81b960 <col:26> 'int' 0
|   | `-VarDecl 0x1531e81ba18 <.//openssl//file_jk/after\apps\s_client.c:799:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:799:61 used vfyCAfile 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e81bb08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e81bae8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e81bac0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e81ba80 <col:26> 'int' 0
|   |-DeclStmt 0x1531e81bf68 <.//openssl//file_jk/after\apps\s_client.c:800:5, col:65>
|   | |-VarDecl 0x1531e81bb78 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:800:11 used sess_in 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81bc68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81bc48 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81bc20 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81bbe0 <col:26> 'int' 0
|   | |-VarDecl 0x1531e81bc98 <.//openssl//file_jk/after\apps\s_client.c:800:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:800:28 used sess_out 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81bd88 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81bd68 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81bd40 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81bd00 <col:26> 'int' 0
|   | |-VarDecl 0x1531e81bdb8 <.//openssl//file_jk/after\apps\s_client.c:800:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:800:46 used crl_file 'char *' cinit
|   | | `-ImplicitCastExpr 0x1531e81bea8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   | |   `-ParenExpr 0x1531e81be88 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e81be60 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e81be20 <col:26> 'int' 0
|   | `-VarDecl 0x1531e81bed8 <.//openssl//file_jk/after\apps\s_client.c:800:5, col:64> col:64 used p 'char *'
|   |-DeclStmt 0x1531e81c0a0 <line:801:5, col:26>
|   | `-VarDecl 0x1531e81bf98 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:801:11 used xmpphost 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e81c088 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e81c068 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e81c040 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e81c000 <col:26> 'int' 0
|   |-DeclStmt 0x1531e81c190 <.//openssl//file_jk/after\apps\s_client.c:802:5, col:42>
|   | `-VarDecl 0x1531e81c0d0 <col:5, col:24> col:17 used ehlo 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1531e81c178 <col:24> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1531e81c160 <col:24> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x1531e81c138 <col:24> 'char [17]' lvalue "mail.example.com"
|   |-DeclStmt 0x1531e81c488 <line:803:5, col:38>
|   | |-RecordDecl 0x1531e81c200 <col:5, col:12> col:12 struct timeval
|   | |-VarDecl 0x1531e81c318 <col:5, col:20> col:20 invalid timeout 'struct timeval':'struct timeval'
|   | `-VarDecl 0x1531e81c400 <col:5, col:30> col:30 used timeoutp 'struct timeval *'
|   |-DeclStmt 0x1531e81c608 <line:805:5, col:35>
|   | |-VarDecl 0x1531e81c4b8 <col:5, col:20> col:9 used noCApath 'int' cinit
|   | | `-IntegerLiteral 0x1531e81c520 <col:20> 'int' 0
|   | `-VarDecl 0x1531e81c560 <col:5, col:34> col:23 used noCAfile 'int' cinit
|   |   `-IntegerLiteral 0x1531e81c5c8 <col:34> 'int' 0
|   |-DeclStmt 0x1531e81c900 <line:806:5, col:70>
|   | |-VarDecl 0x1531e81c638 <col:5, col:23> col:9 used build_chain 'int' cinit
|   | | `-IntegerLiteral 0x1531e81c6a0 <col:23> 'int' 0
|   | |-VarDecl 0x1531e81c6e0 <col:5, col:26> col:26 used cbuf_len 'int'
|   | |-VarDecl 0x1531e81c760 <col:5, col:36> col:36 used cbuf_off 'int'
|   | `-VarDecl 0x1531e81c7e0 <col:5, .//openssl//file_jk/after\apps/apps.h:530:43> .//openssl//file_jk/after\apps\s_client.c:806:46 used cert_format 'int' cinit
|   |   `-ParenExpr 0x1531e81c8b8 <.//openssl//file_jk/after\apps/apps.h:530:25, col:43> 'int'
|   |     `-BinaryOperator 0x1531e81c898 <col:26, line:524:26> 'int' '|'
|   |       |-IntegerLiteral 0x1531e81c848 <line:530:26> 'int' 5
|   |       `-IntegerLiteral 0x1531e81c870 <line:524:26> 'int' 32768
|   |-DeclStmt 0x1531e81cc48 <.//openssl//file_jk/after\apps\s_client.c:807:5, col:70>
|   | |-VarDecl 0x1531e81c930 <col:5, .//openssl//file_jk/after\apps/apps.h:530:43> .//openssl//file_jk/after\apps\s_client.c:807:9 used key_format 'int' cinit
|   | | `-ParenExpr 0x1531e81ca08 <.//openssl//file_jk/after\apps/apps.h:530:25, col:43> 'int'
|   | |   `-BinaryOperator 0x1531e81c9e8 <col:26, line:524:26> 'int' '|'
|   | |     |-IntegerLiteral 0x1531e81c998 <line:530:26> 'int' 5
|   | |     `-IntegerLiteral 0x1531e81c9c0 <line:524:26> 'int' 32768
|   | |-VarDecl 0x1531e81ca40 <.//openssl//file_jk/after\apps\s_client.c:807:5, col:41> col:34 used crlf 'int' cinit
|   | | `-IntegerLiteral 0x1531e81caa8 <col:41> 'int' 0
|   | |-VarDecl 0x1531e81cae8 <col:5, col:55> col:44 used full_log 'int' cinit
|   | | `-IntegerLiteral 0x1531e81cb50 <col:55> 'int' 1
|   | `-VarDecl 0x1531e81cb90 <col:5, col:69> col:58 used mbuf_len 'int' cinit
|   |   `-IntegerLiteral 0x1531e81cbf8 <col:69> 'int' 0
|   |-DeclStmt 0x1531e81cd08 <line:808:5, col:19>
|   | `-VarDecl 0x1531e81cc78 <col:5, col:18> col:9 used prexit 'int' cinit
|   |   `-IntegerLiteral 0x1531e81cce0 <col:18> 'int' 0
|   |-DeclStmt 0x1531e81cdc8 <line:809:5, col:19>
|   | `-VarDecl 0x1531e81cd38 <col:5, col:18> col:9 used sdebug 'int' cinit
|   |   `-IntegerLiteral 0x1531e81cda0 <col:18> 'int' 0
|   |-DeclStmt 0x1531e81cfd0 <line:810:5, col:64>
|   | |-VarDecl 0x1531e81cdf8 <col:5, col:21> col:9 used reconnect 'int' cinit
|   | | `-IntegerLiteral 0x1531e81ce60 <col:21> 'int' 0
|   | |-VarDecl 0x1531e81cea0 <col:5, col:24> col:24 used verify 'int'
|   | `-VarDecl 0x1531e81cf20 <col:5, col:63> col:50 used vpmtouched 'int' cinit
|   |   `-IntegerLiteral 0x1531e81cf88 <col:63> 'int' 0
|   |-DeclStmt 0x1531e81d510 <line:811:5, col:76>
|   | |-VarDecl 0x1531e81d000 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x1531e81d068 <col:15> 'int' 1
|   | |-VarDecl 0x1531e81d0a8 <col:5, col:28> col:18 used in_init 'int' cinit
|   | | `-IntegerLiteral 0x1531e81d110 <col:28> 'int' 1
|   | |-VarDecl 0x1531e81d150 <col:5, col:31> col:31 used i 'int'
|   | |-VarDecl 0x1531e81d1d0 <col:5, col:46> col:34 used nbio_test 'int' cinit
|   | | `-IntegerLiteral 0x1531e81d238 <col:46> 'int' 0
|   | |-VarDecl 0x1531e81d278 <col:5, col:54> col:49 used s 'int' cinit
|   | | `-UnaryOperator 0x1531e81d308 <col:53, col:54> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1531e81d2e0 <col:54> 'int' 1
|   | |-VarDecl 0x1531e81d338 <col:5, col:57> col:57 used k 'int'
|   | |-VarDecl 0x1531e81d3b8 <col:5, col:60> col:60 used width 'int'
|   | `-VarDecl 0x1531e81d438 <col:5, col:75> col:67 used state 'int' cinit
|   |   `-IntegerLiteral 0x1531e81d4a0 <col:75> 'int' 0
|   |-DeclStmt 0x1531e81d6f0 <line:812:5, col:43>
|   | |-VarDecl 0x1531e81d540 <col:5, col:9> col:9 used sbuf_len 'int'
|   | |-VarDecl 0x1531e81d5c0 <col:5, col:19> col:19 used sbuf_off 'int'
|   | `-VarDecl 0x1531e81d640 <col:5, col:42> col:29 used cmdletters 'int' cinit
|   |   `-IntegerLiteral 0x1531e81d6a8 <col:42> 'int' 1
|   |-DeclStmt 0x1531e81d820 <line:813:5, col:61>
|   | |-VarDecl 0x1531e81d720 <col:5, col:9> col:9 used socket_family 'int'
|   | `-VarDecl 0x1531e81d7a0 <col:5, col:36> col:36 used socket_type 'int'
|   |-DeclStmt 0x1531e81dab0 <line:814:5, col:78>
|   | |-VarDecl 0x1531e81d850 <col:5, col:26> col:9 used starttls_proto 'int' cinit
|   | | `-DeclRefExpr 0x1531e81d8b8 <col:26> 'int' EnumConstant 0x1531e811bd0 'PROTO_OFF' 'int'
|   | |-VarDecl 0x1531e81d8f0 <col:5, .//openssl//file_jk/after\apps/apps.h:530:43> .//openssl//file_jk/after\apps\s_client.c:814:37 used crl_format 'int' cinit
|   | | `-ParenExpr 0x1531e81d9c8 <.//openssl//file_jk/after\apps/apps.h:530:25, col:43> 'int'
|   | |   `-BinaryOperator 0x1531e81d9a8 <col:26, line:524:26> 'int' '|'
|   | |     |-IntegerLiteral 0x1531e81d958 <line:530:26> 'int' 5
|   | |     `-IntegerLiteral 0x1531e81d980 <line:524:26> 'int' 32768
|   | `-VarDecl 0x1531e81da00 <.//openssl//file_jk/after\apps\s_client.c:814:5, col:77> col:62 used crl_download 'int' cinit
|   |   `-IntegerLiteral 0x1531e81da68 <col:77> 'int' 0
|   |-DeclStmt 0x1531e81de00 <line:815:5, col:70>
|   | |-VarDecl 0x1531e81dae0 <col:5, col:9> col:9 used write_tty 'int'
|   | |-VarDecl 0x1531e81db60 <col:5, col:20> col:20 used read_tty 'int'
|   | |-VarDecl 0x1531e81dbe0 <col:5, col:30> col:30 used write_ssl 'int'
|   | |-VarDecl 0x1531e81dc60 <col:5, col:41> col:41 used read_ssl 'int'
|   | |-VarDecl 0x1531e81dce0 <col:5, col:51> col:51 used tty_on 'int'
|   | `-VarDecl 0x1531e81dd60 <col:5, col:59> col:59 used ssl_pending 'int'
|   |-DeclStmt 0x1531e81dec0 <line:817:5, col:19>
|   | `-VarDecl 0x1531e81de30 <col:5, col:18> col:9 used at_eof 'int' cinit
|   |   `-IntegerLiteral 0x1531e81de98 <col:18> 'int' 0
|   |-DeclStmt 0x1531e81df80 <line:819:5, col:25>
|   | `-VarDecl 0x1531e81def0 <col:5, col:24> col:9 used read_buf_len 'int' cinit
|   |   `-IntegerLiteral 0x1531e81df58 <col:24> 'int' 0
|   |-DeclStmt 0x1531e81e040 <line:820:5, col:26>
|   | `-VarDecl 0x1531e81dfb0 <col:5, col:25> col:9 used fallback_scsv 'int' cinit
|   |   `-IntegerLiteral 0x1531e81e018 <col:25> 'int' 0
|   |-DeclStmt 0x1531e81e118 <line:821:5, col:21>
|   | `-VarDecl 0x1531e81e070 <col:5, col:20> col:10 used randamt 'long' cinit
|   |   `-ImplicitCastExpr 0x1531e81e100 <col:20> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1531e81e0d8 <col:20> 'int' 0
|   |-DeclStmt 0x1531e81e1c8 <line:822:5, col:20>
|   | `-VarDecl 0x1531e81e160 <col:5, col:19> col:19 used o 'OPTION_CHOICE':'enum OPTION_choice'
|   |-DeclStmt 0x1531e812240 <line:824:5, col:28>
|   | `-VarDecl 0x1531e8121b0 <col:5, col:27> col:9 used enable_timeouts 'int' cinit
|   |   `-IntegerLiteral 0x1531e812218 <col:27> 'int' 0
|   |-DeclStmt 0x1531e812318 <line:825:5, col:24>
|   | `-VarDecl 0x1531e812270 <col:5, col:23> col:10 used socket_mtu 'long' cinit
|   |   `-ImplicitCastExpr 0x1531e812300 <col:23> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1531e8122d8 <col:23> 'int' 0
|   |-DeclStmt 0x1531e812560 <line:834:5, col:28>
|   | `-VarDecl 0x1531e812458 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:834:11 used servername 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e812548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e812528 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e812500 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e8124c0 <col:26> 'int' 0
|   |-DeclStmt 0x1531e812698 <.//openssl//file_jk/after\apps\s_client.c:835:5, col:31>
|   | `-VarDecl 0x1531e812590 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:835:17 used alpn_in 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1531e812680 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e812660 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e812638 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e8125f8 <col:26> 'int' 0
|   |-DeclStmt 0x1531e812878 <.//openssl//file_jk/after\apps\s_client.c:836:5, col:38>
|   | `-VarDecl 0x1531e8126c0 <col:5, col:15> col:15 invalid tlsextcbp 'tlsextctx':'struct tlsextctx_st'
|   |-DeclStmt 0x1531e8129b0 <line:837:5, col:34>
|   | `-VarDecl 0x1531e8128a8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:837:17 used ssl_config 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1531e812998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e812978 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e812950 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e812910 <col:26> 'int' 0
|   |-DeclStmt 0x1531e812ad8 <.//openssl//file_jk/after\apps\s_client.c:839:5, col:50>
|   | `-VarDecl 0x1531e812a70 <col:5, col:49> col:20 used serverinfo_types 'unsigned short [100]'
|   |-DeclStmt 0x1531e812ce0 <line:840:5, col:45>
|   | |-VarDecl 0x1531e812b08 <col:5, col:28> col:9 used serverinfo_count 'int' cinit
|   | | `-IntegerLiteral 0x1531e812b70 <col:28> 'int' 0
|   | |-VarDecl 0x1531e812bb0 <col:5, col:39> col:31 used start 'int' cinit
|   | | `-IntegerLiteral 0x1531e812c18 <col:39> 'int' 0
|   | `-VarDecl 0x1531e812c58 <col:5, col:42> col:42 used len 'int'
|   |-DeclStmt 0x1531e812e18 <line:842:5, col:41>
|   | `-VarDecl 0x1531e812d10 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:842:17 used next_proto_neg_in 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1531e812e00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e812de0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e812db8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e812d78 <col:26> 'int' 0
|   |-DeclStmt 0x1531e812f50 <.//openssl//file_jk/after\apps\s_client.c:845:5, col:25>
|   | `-VarDecl 0x1531e812e48 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:845:11 used srppass 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e812f38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e812f18 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e812ef0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e812eb0 <col:26> 'int' 0
|   |-DeclStmt 0x1531e813010 <.//openssl//file_jk/after\apps\s_client.c:846:5, col:25>
|   | `-VarDecl 0x1531e812f80 <col:5, col:24> col:9 used srp_lateuser 'int' cinit
|   |   `-IntegerLiteral 0x1531e812fe8 <col:24> 'int' 0
|   |-DeclStmt 0x1531e813370 <line:847:5, col:52>
|   | `-VarDecl 0x1531e813038 <col:5, col:51> col:13 used srp_arg 'SRP_ARG':'struct srp_arg_st' cinit
|   |   `-InitListExpr 0x1531e8132d0 <col:23, col:51> 'SRP_ARG':'struct srp_arg_st'
|   |     |-ImplicitCastExpr 0x1531e813340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     | `-ParenExpr 0x1531e813108 <col:17, col:27> 'void *'
|   |     |   `-CStyleCastExpr 0x1531e8130e0 <col:18, col:26> 'void *' <NullToPointer>
|   |     |     `-IntegerLiteral 0x1531e8130a0 <col:26> 'int' 0
|   |     |-ImplicitCastExpr 0x1531e813358 <col:17, col:27> 'char *' <NullToPointer>
|   |     | `-ParenExpr 0x1531e813190 <col:17, col:27> 'void *'
|   |     |   `-CStyleCastExpr 0x1531e813168 <col:18, col:26> 'void *' <NullToPointer>
|   |     |     `-IntegerLiteral 0x1531e813128 <col:26> 'int' 0
|   |     |-IntegerLiteral 0x1531e8131b0 <.//openssl//file_jk/after\apps\s_client.c:847:37> 'int' 0
|   |     |-IntegerLiteral 0x1531e8131d8 <col:40> 'int' 0
|   |     |-IntegerLiteral 0x1531e813200 <col:43> 'int' 0
|   |     `-IntegerLiteral 0x1531e813228 <col:46> 'int' 1024
|   |-DeclStmt 0x1531e8134a8 <line:850:5, col:28>
|   | `-VarDecl 0x1531e8133a0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\apps\s_client.c:850:11 used ctlog_file 'char *' cinit
|   |   `-ImplicitCastExpr 0x1531e813490 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e813470 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e813448 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e813408 <col:26> 'int' 0
|   |-DeclStmt 0x1531e813568 <.//openssl//file_jk/after\apps\s_client.c:851:5, col:26>
|   | `-VarDecl 0x1531e8134d8 <col:5, col:25> col:9 used ct_validation 'int' cinit
|   |   `-IntegerLiteral 0x1531e813540 <col:25> 'int' 0
|   |-DeclStmt 0x1531e813848 <line:853:5, col:72>
|   | |-VarDecl 0x1531e813598 <col:5, col:23> col:9 used min_version 'int' cinit
|   | | `-IntegerLiteral 0x1531e813600 <col:23> 'int' 0
|   | |-VarDecl 0x1531e813640 <col:5, col:40> col:26 used max_version 'int' cinit
|   | | `-IntegerLiteral 0x1531e8136a8 <col:40> 'int' 0
|   | |-VarDecl 0x1531e8136e8 <col:5, col:54> col:43 used prot_opt 'int' cinit
|   | | `-IntegerLiteral 0x1531e813750 <col:54> 'int' 0
|   | `-VarDecl 0x1531e813790 <col:5, col:71> col:57 used no_prot_opt 'int' cinit
|   |   `-IntegerLiteral 0x1531e8137f8 <col:71> 'int' 0
|   |-DeclStmt 0x1531e813908 <line:854:5, col:18>
|   | `-VarDecl 0x1531e813878 <col:5, col:17> col:9 used async 'int' cinit
|   |   `-IntegerLiteral 0x1531e8138e0 <col:17> 'int' 0
|   |-DeclStmt 0x1531e8139e0 <line:855:5, col:41>
|   | `-VarDecl 0x1531e813938 <col:5, col:40> col:18 used split_send_fragment 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1531e8139c8 <col:40> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x1531e8139a0 <col:40> 'int' 0
|   |-DeclStmt 0x1531e813ab8 <line:856:5, col:35>
|   | `-VarDecl 0x1531e813a10 <col:5, col:34> col:18 used max_pipelines 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x1531e813aa0 <col:34> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x1531e813a78 <col:34> 'int' 0
|   |-DeclStmt 0x1531e813dd0 <line:857:5, col:72>
|   | |-EnumDecl 0x1531e813ad0 <col:5, col:44> col:5
|   | | |-EnumConstantDecl 0x1531e813bb0 <col:12> col:12 referenced use_inet 'int'
|   | | |-EnumConstantDecl 0x1531e813c08 <col:22> col:22 referenced use_unix 'int'
|   | | `-EnumConstantDecl 0x1531e813c60 <col:32> col:32 referenced use_unknown 'int'
|   | `-VarDecl 0x1531e813d18 <col:5, col:61> col:46 used connect_type 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' cinit
|   |   `-ImplicitCastExpr 0x1531e813da0 <col:61> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' <IntegralCast>
|   |     `-DeclRefExpr 0x1531e813d80 <col:61> 'int' EnumConstant 0x1531e813c60 'use_unknown' 'int'
|   |-DeclStmt 0x1531e813e90 <line:858:5, col:22>
|   | `-VarDecl 0x1531e813e00 <col:5, col:21> col:9 used count4or6 'int' cinit
|   |   `-IntegerLiteral 0x1531e813e68 <col:21> 'int' 0
|   |-DeclStmt 0x1531e814170 <line:859:5, col:58>
|   | |-VarDecl 0x1531e813ec0 <col:5, col:18> col:9 used c_nbio 'int' cinit
|   | | `-IntegerLiteral 0x1531e813f28 <col:18> 'int' 0
|   | |-VarDecl 0x1531e813f68 <col:5, col:29> col:21 used c_msg 'int' cinit
|   | | `-IntegerLiteral 0x1531e813fd0 <col:29> 'int' 0
|   | |-VarDecl 0x1531e814010 <col:5, col:44> col:32 used c_ign_eof 'int' cinit
|   | | `-IntegerLiteral 0x1531e814078 <col:44> 'int' 0
|   | `-VarDecl 0x1531e8140b8 <col:5, col:57> col:47 used c_brief 'int' cinit
|   |   `-IntegerLiteral 0x1531e814120 <col:57> 'int' 0
|   |-DeclStmt 0x1531e818270 <line:860:5, col:26>
|   | `-VarDecl 0x1531e8181e0 <col:5, col:25> col:9 used c_tlsextdebug 'int' cinit
|   |   `-IntegerLiteral 0x1531e818248 <col:25> 'int' 0
|   |-DeclStmt 0x1531e818330 <line:862:5, col:25>
|   | `-VarDecl 0x1531e8182a0 <col:5, col:24> col:9 used c_status_req 'int' cinit
|   |   `-IntegerLiteral 0x1531e818308 <col:24> 'int' 0
|   |-BinaryOperator 0x1531e818658 <line:876:5, col:32> 'char *' '='
|   | |-DeclRefExpr 0x1531e818500 <col:5> 'char *' lvalue Var 0x1531e7e0b20 'prog' 'char *'
|   | `-CallExpr 0x1531e818600 <col:12, col:32> 'char *'
|   |   |-ImplicitCastExpr 0x1531e8185e8 <col:12> 'char *(*)(const char *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1531e818520 <col:12> 'char *(const char *)' Function 0x1531e8e3ac0 'opt_progname' 'char *(const char *)'
|   |   `-ImplicitCastExpr 0x1531e818640 <col:25, col:31> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x1531e818628 <col:25, col:31> 'char *' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x1531e8185a0 <col:25, col:31> 'char *' lvalue
|   |         |-ImplicitCastExpr 0x1531e818588 <col:25> 'char **' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1531e818540 <col:25> 'char **' lvalue ParmVar 0x1531e803608 'argv' 'char **'
|   |         `-IntegerLiteral 0x1531e818560 <col:30> 'int' 0
|   |-BinaryOperator 0x1531e8186c0 <line:877:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x1531e818678 <col:5> 'int' lvalue Var 0x1531e7e1038 'c_quiet' 'int'
|   | `-IntegerLiteral 0x1531e818698 <col:15> 'int' 0
|   |-BinaryOperator 0x1531e818728 <line:878:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x1531e8186e0 <col:5> 'int' lvalue Var 0x1531e7e0bb8 'c_debug' 'int'
|   | `-IntegerLiteral 0x1531e818700 <col:15> 'int' 0
|   |-BinaryOperator 0x1531e818790 <line:879:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x1531e818748 <col:5> 'int' lvalue Var 0x1531e7e0c78 'c_showcerts' 'int'
|   | `-IntegerLiteral 0x1531e818768 <col:19> 'int' 0
|   |-BinaryOperator 0x1531e818810 <line:880:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x1531e8187b0 <col:5> 'int' lvalue Var 0x1531e813ec0 'c_nbio' 'int'
|   | `-IntegerLiteral 0x1531e8187e8 <col:14> 'int' 0
|   |-IfStmt 0x1531e818cd8 <line:884:5, line:887:5>
|   | |-OpaqueValueExpr 0x1531e818cc0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e818ca8 <line:884:38, line:887:5>
|   |   `-GotoStmt 0x1531e818c90 <line:886:9, col:14> 'end' 0x1531e818c40
|   |-BinaryOperator 0x1531e818e68 <line:889:5, col:38> 'char *' '='
|   | |-DeclRefExpr 0x1531e818cf0 <col:5> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   | `-ImplicitCastExpr 0x1531e818e50 <col:12, col:38> 'char *' <BitCast>
|   |   `-CallExpr 0x1531e818df0 <col:12, col:38> 'void *'
|   |     |-ImplicitCastExpr 0x1531e818dd8 <col:12> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1531e818d28 <col:12> 'void *(int, const char *)' Function 0x1531e8e8010 'app_malloc' 'void *(int, const char *)'
|   |     |-BinaryOperator 0x1531e818d98 <line:83:17, col:22> 'int' '*'
|   |     | |-IntegerLiteral 0x1531e818d48 <col:17> 'int' 1024
|   |     | `-IntegerLiteral 0x1531e818d70 <col:22> 'int' 8
|   |     `-ImplicitCastExpr 0x1531e818e38 <line:889:32> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x1531e818e20 <col:32> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x1531e818db8 <col:32> 'char [5]' lvalue "cbuf"
|   |-BinaryOperator 0x1531e819000 <line:890:5, col:38> 'char *' '='
|   | |-DeclRefExpr 0x1531e818e88 <col:5> 'char *' lvalue Var 0x1531e81a820 'sbuf' 'char *'
|   | `-ImplicitCastExpr 0x1531e818fe8 <col:12, col:38> 'char *' <BitCast>
|   |   `-CallExpr 0x1531e818f88 <col:12, col:38> 'void *'
|   |     |-ImplicitCastExpr 0x1531e818f70 <col:12> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1531e818ec0 <col:12> 'void *(int, const char *)' Function 0x1531e8e8010 'app_malloc' 'void *(int, const char *)'
|   |     |-BinaryOperator 0x1531e818f30 <line:83:17, col:22> 'int' '*'
|   |     | |-IntegerLiteral 0x1531e818ee0 <col:17> 'int' 1024
|   |     | `-IntegerLiteral 0x1531e818f08 <col:22> 'int' 8
|   |     `-ImplicitCastExpr 0x1531e818fd0 <line:890:32> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x1531e818fb8 <col:32> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x1531e818f50 <col:32> 'char [5]' lvalue "sbuf"
|   |-BinaryOperator 0x1531e819198 <line:891:5, col:38> 'char *' '='
|   | |-DeclRefExpr 0x1531e819020 <col:5> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   | `-ImplicitCastExpr 0x1531e819180 <col:12, col:38> 'char *' <BitCast>
|   |   `-CallExpr 0x1531e819120 <col:12, col:38> 'void *'
|   |     |-ImplicitCastExpr 0x1531e819108 <col:12> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1531e819058 <col:12> 'void *(int, const char *)' Function 0x1531e8e8010 'app_malloc' 'void *(int, const char *)'
|   |     |-BinaryOperator 0x1531e8190c8 <line:83:17, col:22> 'int' '*'
|   |     | |-IntegerLiteral 0x1531e819078 <col:17> 'int' 1024
|   |     | `-IntegerLiteral 0x1531e8190a0 <col:22> 'int' 8
|   |     `-ImplicitCastExpr 0x1531e819168 <line:891:32> 'const char *' <NoOp>
|   |       `-ImplicitCastExpr 0x1531e819150 <col:32> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x1531e8190e8 <col:32> 'char [5]' lvalue "mbuf"
|   |-BinaryOperator 0x1531e8194d8 <line:895:5, col:49> 'char *' '='
|   | |-DeclRefExpr 0x1531e8192c8 <col:5> 'char *' lvalue Var 0x1531e7e0b20 'prog' 'char *'
|   | `-CallExpr 0x1531e8193e0 <col:12, col:49> 'char *'
|   |   |-ImplicitCastExpr 0x1531e8193c8 <col:12> 'char *(*)(int, char **, const OPTIONS *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1531e8192e8 <col:12> 'char *(int, char **, const OPTIONS *)' Function 0x1531e8e4010 'opt_init' 'char *(int, char **, const OPTIONS *)'
|   |   |-ImplicitCastExpr 0x1531e819418 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e819308 <col:21> 'int' lvalue ParmVar 0x1531e803588 'argc' 'int'
|   |   |-ImplicitCastExpr 0x1531e819430 <col:27> 'char **' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1531e819328 <col:27> 'char **' lvalue ParmVar 0x1531e803608 'argv' 'char **'
|   |   `-ImplicitCastExpr 0x1531e8194c0 <col:33> 'const OPTIONS *' <NoOp>
|   |     `-ImplicitCastExpr 0x1531e8194a8 <col:33> 'OPTIONS *' <ArrayToPointerDecay>
|   |       `-DeclRefExpr 0x1531e819348 <col:33> 'OPTIONS [150]' lvalue Var 0x1531e800168 's_client_options' 'OPTIONS [150]'
|   |-WhileStmt 0x1531e834a18 <line:896:5, line:1330:5>
|   | |-BinaryOperator 0x1531e819618 <line:896:12, col:32> 'int' '!='
|   | | |-ImplicitCastExpr 0x1531e819600 <col:12, col:27> 'int' <IntegralCast>
|   | | | `-ParenExpr 0x1531e8195c0 <col:12, col:27> 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |   `-BinaryOperator 0x1531e8195a0 <col:13, col:26> 'OPTION_CHOICE':'enum OPTION_choice' '='
|   | | |     |-DeclRefExpr 0x1531e8194f8 <col:13> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   | | |     `-ImplicitCastExpr 0x1531e819588 <col:17, col:26> 'OPTION_CHOICE':'enum OPTION_choice' <IntegralCast>
|   | | |       `-CallExpr 0x1531e819568 <col:17, col:26> 'int'
|   | | |         `-ImplicitCastExpr 0x1531e819550 <col:17> 'int (*)(void)' <FunctionToPointerDecay>
|   | | |           `-DeclRefExpr 0x1531e819530 <col:17> 'int (void)' Function 0x1531e8e4180 'opt_next' 'int (void)'
|   | | `-DeclRefExpr 0x1531e8195e0 <col:32> 'int' EnumConstant 0x1531e7ec810 'OPT_EOF' 'int'
|   | `-CompoundStmt 0x1531e8349d8 <col:41, line:1330:5>
|   |   |-IfStmt 0x1531e819b38 <line:898:9, line:903:9>
|   |   | |-BinaryOperator 0x1531e819a50 <line:898:13, line:759:81> 'int' '&&'
|   |   | | |-BinaryOperator 0x1531e8196c0 <line:898:13, col:29> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x1531e8196a8 <col:13> 'int' <IntegralCast>
|   |   | | | | `-ImplicitCastExpr 0x1531e819690 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x1531e819638 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' lvalue Var 0x1531e813d18 'connect_type' 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)'
|   |   | | | `-DeclRefExpr 0x1531e819670 <col:29> 'int' EnumConstant 0x1531e813c08 'use_unix' 'int'
|   |   | | `-ParenExpr 0x1531e819a30 <line:759:2, col:81> 'int'
|   |   | |   `-BinaryOperator 0x1531e819a10 <line:898:54, line:759:70> 'int' '||'
|   |   | |     |-BinaryOperator 0x1531e819960 <line:898:54, line:759:53> 'int' '||'
|   |   | |     | |-BinaryOperator 0x1531e8198b0 <line:898:54, line:759:36> 'int' '||'
|   |   | |     | | |-BinaryOperator 0x1531e819800 <line:898:54, line:759:22> 'int' '||'
|   |   | |     | | | |-BinaryOperator 0x1531e819750 <line:898:54, line:759:8> 'int' '=='
|   |   | |     | | | | |-ImplicitCastExpr 0x1531e819738 <line:898:54> 'int' <IntegralCast>
|   |   | |     | | | | | `-ImplicitCastExpr 0x1531e819720 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | |     | | | | |   `-DeclRefExpr 0x1531e8196e0 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | |     | | | | `-DeclRefExpr 0x1531e819700 <line:759:8> 'int' EnumConstant 0x1531e7ec8c0 'OPT_4' 'int'
|   |   | |     | | | `-BinaryOperator 0x1531e8197e0 <line:898:54, line:759:22> 'int' '=='
|   |   | |     | | |   |-ImplicitCastExpr 0x1531e8197c8 <line:898:54> 'int' <IntegralCast>
|   |   | |     | | |   | `-ImplicitCastExpr 0x1531e8197b0 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | |     | | |   |   `-DeclRefExpr 0x1531e819770 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | |     | | |   `-DeclRefExpr 0x1531e819790 <line:759:22> 'int' EnumConstant 0x1531e7ec918 'OPT_6' 'int'
|   |   | |     | | `-BinaryOperator 0x1531e819890 <line:898:54, line:759:36> 'int' '=='
|   |   | |     | |   |-ImplicitCastExpr 0x1531e819878 <line:898:54> 'int' <IntegralCast>
|   |   | |     | |   | `-ImplicitCastExpr 0x1531e819860 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | |     | |   |   `-DeclRefExpr 0x1531e819820 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | |     | |   `-DeclRefExpr 0x1531e819840 <line:759:36> 'int' EnumConstant 0x1531e7ec970 'OPT_HOST' 'int'
|   |   | |     | `-BinaryOperator 0x1531e819940 <line:898:54, line:759:53> 'int' '=='
|   |   | |     |   |-ImplicitCastExpr 0x1531e819928 <line:898:54> 'int' <IntegralCast>
|   |   | |     |   | `-ImplicitCastExpr 0x1531e819910 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x1531e8198d0 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | |     |   `-DeclRefExpr 0x1531e8198f0 <line:759:53> 'int' EnumConstant 0x1531e7ec9c8 'OPT_PORT' 'int'
|   |   | |     `-BinaryOperator 0x1531e8199f0 <line:898:54, line:759:70> 'int' '=='
|   |   | |       |-ImplicitCastExpr 0x1531e8199d8 <line:898:54> 'int' <IntegralCast>
|   |   | |       | `-ImplicitCastExpr 0x1531e8199c0 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | |       |   `-DeclRefExpr 0x1531e819980 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | |       `-DeclRefExpr 0x1531e8199a0 <line:759:70> 'int' EnumConstant 0x1531e7eca20 'OPT_CONNECT' 'int'
|   |   | `-CompoundStmt 0x1531e819b20 <line:898:58, line:903:9>
|   |   |   `-GotoStmt 0x1531e819b08 <line:902:13, col:18> 'end' 0x1531e818c40
|   |   |-IfStmt 0x1531e819d78 <line:904:9, line:909:9>
|   |   | |-BinaryOperator 0x1531e819c90 <line:904:13, line:760:39> 'int' '&&'
|   |   | | |-BinaryOperator 0x1531e819bc0 <line:904:13, col:29> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x1531e819ba8 <col:13> 'int' <IntegralCast>
|   |   | | | | `-ImplicitCastExpr 0x1531e819b90 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x1531e819b50 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' lvalue Var 0x1531e813d18 'connect_type' 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)'
|   |   | | | `-DeclRefExpr 0x1531e819b70 <col:29> 'int' EnumConstant 0x1531e813bb0 'use_inet' 'int'
|   |   | | `-ParenExpr 0x1531e819c70 <line:760:25, col:39> 'int'
|   |   | |   `-BinaryOperator 0x1531e819c50 <line:904:54, line:760:31> 'int' '=='
|   |   | |     |-ImplicitCastExpr 0x1531e819c38 <line:904:54> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x1531e819c20 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x1531e819be0 <col:54> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | |     `-DeclRefExpr 0x1531e819c00 <line:760:31> 'int' EnumConstant 0x1531e7eca78 'OPT_UNIX' 'int'
|   |   | `-CompoundStmt 0x1531e819d60 <line:904:58, line:909:9>
|   |   |   `-GotoStmt 0x1531e819d48 <line:908:13, col:18> 'end' 0x1531e818c40
|   |   |-IfStmt 0x1531e814398 <line:911:9, line:914:9>
|   |   | |-BinaryOperator 0x1531e8142e8 <line:763:2, line:911:45> 'int' '&&'
|   |   | | |-ParenExpr 0x1531e814230 <line:763:2, line:764:57> 'int'
|   |   | | | `-BinaryOperator 0x1531e814210 <line:911:26, line:764:46> 'int' '||'
|   |   | | |   |-BinaryOperator 0x1531e81a170 <line:911:26, line:764:28> 'int' '||'
|   |   | | |   | |-BinaryOperator 0x1531e81a0c0 <line:911:26, line:764:11> 'int' '||'
|   |   | | |   | | |-BinaryOperator 0x1531e81a010 <line:911:26, line:763:61> 'int' '||'
|   |   | | |   | | | |-BinaryOperator 0x1531e819f60 <line:911:26, line:763:42> 'int' '||'
|   |   | | |   | | | | |-BinaryOperator 0x1531e819eb0 <line:911:26, line:763:25> 'int' '||'
|   |   | | |   | | | | | |-BinaryOperator 0x1531e819e00 <line:911:26, line:763:8> 'int' '=='
|   |   | | |   | | | | | | |-ImplicitCastExpr 0x1531e819de8 <line:911:26> 'int' <IntegralCast>
|   |   | | |   | | | | | | | `-ImplicitCastExpr 0x1531e819dd0 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | | |   | | | | | | |   `-DeclRefExpr 0x1531e819d90 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | | |   | | | | | | `-DeclRefExpr 0x1531e819db0 <line:763:8> 'int' EnumConstant 0x1531e7ed890 'OPT_SSL3' 'int'
|   |   | | |   | | | | | `-BinaryOperator 0x1531e819e90 <line:911:26, line:763:25> 'int' '=='
|   |   | | |   | | | | |   |-ImplicitCastExpr 0x1531e819e78 <line:911:26> 'int' <IntegralCast>
|   |   | | |   | | | | |   | `-ImplicitCastExpr 0x1531e819e60 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | | |   | | | | |   |   `-DeclRefExpr 0x1531e819e20 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | | |   | | | | |   `-DeclRefExpr 0x1531e819e40 <line:763:25> 'int' EnumConstant 0x1531e7ed9f0 'OPT_TLS1' 'int'
|   |   | | |   | | | | `-BinaryOperator 0x1531e819f40 <line:911:26, line:763:42> 'int' '=='
|   |   | | |   | | | |   |-ImplicitCastExpr 0x1531e819f28 <line:911:26> 'int' <IntegralCast>
|   |   | | |   | | | |   | `-ImplicitCastExpr 0x1531e819f10 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | | |   | | | |   |   `-DeclRefExpr 0x1531e819ed0 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | | |   | | | |   `-DeclRefExpr 0x1531e819ef0 <line:763:42> 'int' EnumConstant 0x1531e7ed998 'OPT_TLS1_1' 'int'
|   |   | | |   | | | `-BinaryOperator 0x1531e819ff0 <line:911:26, line:763:61> 'int' '=='
|   |   | | |   | | |   |-ImplicitCastExpr 0x1531e819fd8 <line:911:26> 'int' <IntegralCast>
|   |   | | |   | | |   | `-ImplicitCastExpr 0x1531e819fc0 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | | |   | | |   |   `-DeclRefExpr 0x1531e819f80 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | | |   | | |   `-DeclRefExpr 0x1531e819fa0 <line:763:61> 'int' EnumConstant 0x1531e7ed940 'OPT_TLS1_2' 'int'
|   |   | | |   | | `-BinaryOperator 0x1531e81a0a0 <line:911:26, line:764:11> 'int' '=='
|   |   | | |   | |   |-ImplicitCastExpr 0x1531e81a088 <line:911:26> 'int' <IntegralCast>
|   |   | | |   | |   | `-ImplicitCastExpr 0x1531e81a070 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | | |   | |   |   `-DeclRefExpr 0x1531e81a030 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | | |   | |   `-DeclRefExpr 0x1531e81a050 <line:764:11> 'int' EnumConstant 0x1531e7eda48 'OPT_DTLS' 'int'
|   |   | | |   | `-BinaryOperator 0x1531e81a150 <line:911:26, line:764:28> 'int' '=='
|   |   | | |   |   |-ImplicitCastExpr 0x1531e81a138 <line:911:26> 'int' <IntegralCast>
|   |   | | |   |   | `-ImplicitCastExpr 0x1531e81a120 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | | |   |   |   `-DeclRefExpr 0x1531e81a0e0 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | | |   |   `-DeclRefExpr 0x1531e81a100 <line:764:28> 'int' EnumConstant 0x1531e7edaa0 'OPT_DTLS1' 'int'
|   |   | | |   `-BinaryOperator 0x1531e8141f0 <line:911:26, line:764:46> 'int' '=='
|   |   | | |     |-ImplicitCastExpr 0x1531e8141d8 <line:911:26> 'int' <IntegralCast>
|   |   | | |     | `-ImplicitCastExpr 0x1531e8141c0 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x1531e81a190 <col:26> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | | |     `-DeclRefExpr 0x1531e81a1b0 <line:764:46> 'int' EnumConstant 0x1531e7edaf8 'OPT_DTLS1_2' 'int'
|   |   | | `-BinaryOperator 0x1531e8142c8 <line:911:32, col:45> 'int' '>'
|   |   | |   |-UnaryOperator 0x1531e814288 <col:32, col:34> 'int' prefix '++'
|   |   | |   | `-DeclRefExpr 0x1531e814250 <col:34> 'int' lvalue Var 0x1531e8136e8 'prot_opt' 'int'
|   |   | |   `-IntegerLiteral 0x1531e8142a0 <col:45> 'int' 1
|   |   | `-CompoundStmt 0x1531e814380 <col:48, line:914:9>
|   |   |   `-GotoStmt 0x1531e814368 <line:913:13, col:18> 'end' 0x1531e818c40
|   |   |-IfStmt 0x1531e8146c0 <line:915:9, line:916:24>
|   |   | |-ParenExpr 0x1531e814650 <.//openssl//file_jk/after\apps/apps.h:285:2, line:286:25> 'int'
|   |   | | `-BinaryOperator 0x1531e814630 <.//openssl//file_jk/after\apps\s_client.c:915:29, .//openssl//file_jk/after\apps/apps.h:286:11> 'int' '||'
|   |   | |   |-BinaryOperator 0x1531e814580 <.//openssl//file_jk/after\apps\s_client.c:915:29, .//openssl//file_jk/after\apps/apps.h:285:50> 'int' '||'
|   |   | |   | |-BinaryOperator 0x1531e8144d0 <.//openssl//file_jk/after\apps\s_client.c:915:29, .//openssl//file_jk/after\apps/apps.h:285:29> 'int' '||'
|   |   | |   | | |-BinaryOperator 0x1531e814420 <.//openssl//file_jk/after\apps\s_client.c:915:29, .//openssl//file_jk/after\apps/apps.h:285:8> 'int' '=='
|   |   | |   | | | |-ImplicitCastExpr 0x1531e814408 <.//openssl//file_jk/after\apps\s_client.c:915:29> 'int' <IntegralCast>
|   |   | |   | | | | `-ImplicitCastExpr 0x1531e8143f0 <col:29> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | |   | | | |   `-DeclRefExpr 0x1531e8143b0 <col:29> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | |   | | | `-DeclRefExpr 0x1531e8143d0 <.//openssl//file_jk/after\apps/apps.h:285:8> 'int' EnumConstant 0x1531e7fd4a8 'OPT_S_NOSSL3' 'int'
|   |   | |   | | `-BinaryOperator 0x1531e8144b0 <.//openssl//file_jk/after\apps\s_client.c:915:29, .//openssl//file_jk/after\apps/apps.h:285:29> 'int' '=='
|   |   | |   | |   |-ImplicitCastExpr 0x1531e814498 <.//openssl//file_jk/after\apps\s_client.c:915:29> 'int' <IntegralCast>
|   |   | |   | |   | `-ImplicitCastExpr 0x1531e814480 <col:29> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | |   | |   |   `-DeclRefExpr 0x1531e814440 <col:29> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | |   | |   `-DeclRefExpr 0x1531e814460 <.//openssl//file_jk/after\apps/apps.h:285:29> 'int' EnumConstant 0x1531e7fd500 'OPT_S_NOTLS1' 'int'
|   |   | |   | `-BinaryOperator 0x1531e814560 <.//openssl//file_jk/after\apps\s_client.c:915:29, .//openssl//file_jk/after\apps/apps.h:285:50> 'int' '=='
|   |   | |   |   |-ImplicitCastExpr 0x1531e814548 <.//openssl//file_jk/after\apps\s_client.c:915:29> 'int' <IntegralCast>
|   |   | |   |   | `-ImplicitCastExpr 0x1531e814530 <col:29> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x1531e8144f0 <col:29> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | |   |   `-DeclRefExpr 0x1531e814510 <.//openssl//file_jk/after\apps/apps.h:285:50> 'int' EnumConstant 0x1531e7fd558 'OPT_S_NOTLS1_1' 'int'
|   |   | |   `-BinaryOperator 0x1531e814610 <.//openssl//file_jk/after\apps\s_client.c:915:29, .//openssl//file_jk/after\apps/apps.h:286:11> 'int' '=='
|   |   | |     |-ImplicitCastExpr 0x1531e8145f8 <.//openssl//file_jk/after\apps\s_client.c:915:29> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x1531e8145e0 <col:29> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |   | |     |   `-DeclRefExpr 0x1531e8145a0 <col:29> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |   | |     `-DeclRefExpr 0x1531e8145c0 <.//openssl//file_jk/after\apps/apps.h:286:11> 'int' EnumConstant 0x1531e7fd5b0 'OPT_S_NOTLS1_2' 'int'
|   |   | `-UnaryOperator 0x1531e8146a8 <.//openssl//file_jk/after\apps\s_client.c:916:13, col:24> 'int' postfix '++'
|   |   |   `-DeclRefExpr 0x1531e814670 <col:13> 'int' lvalue Var 0x1531e813790 'no_prot_opt' 'int'
|   |   |-IfStmt 0x1531e814888 <line:917:9, line:921:9>
|   |   | |-BinaryOperator 0x1531e814790 <line:917:13, col:30> 'int' '&&'
|   |   | | |-BinaryOperator 0x1531e814738 <col:13, col:25> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x1531e814720 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1531e8146d8 <col:13> 'int' lvalue Var 0x1531e8136e8 'prot_opt' 'int'
|   |   | | | `-IntegerLiteral 0x1531e8146f8 <col:25> 'int' 1
|   |   | | `-ImplicitCastExpr 0x1531e814778 <col:30> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1531e814758 <col:30> 'int' lvalue Var 0x1531e813790 'no_prot_opt' 'int'
|   |   | `-CompoundStmt 0x1531e814870 <col:43, line:921:9>
|   |   |   `-GotoStmt 0x1531e814858 <line:920:13, col:18> 'end' 0x1531e818c40
|   |   `-SwitchStmt 0x1531e8148f0 <line:923:9, line:1329:9>
|   |     |-ImplicitCastExpr 0x1531e8148d8 <line:923:17> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x1531e8148c0 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1531e8148a0 <col:17> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |     `-CompoundStmt 0x1531e834358 <col:20, line:1329:9>
|   |       |-CaseStmt 0x1531e814948 <line:924:9, line:926:9>
|   |       | |-ConstantExpr 0x1531e814930 <line:924:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e814910 <col:14> 'int' EnumConstant 0x1531e7ec810 'OPT_EOF' 'int'
|   |       | `-CaseStmt 0x1531e8149a8 <line:925:9, line:926:9>
|   |       |   |-ConstantExpr 0x1531e814990 <line:925:14> 'int'
|   |       |   | `-DeclRefExpr 0x1531e814970 <col:14> 'int' EnumConstant 0x1531e7ec778 'OPT_ERR' 'int'
|   |       |   `-LabelStmt 0x1531e814aa0 <line:926:2, col:9> 'opthelp'
|   |       |     `-NullStmt 0x1531e814a48 <col:9>
|   |       |-GotoStmt 0x1531e814ab8 <line:928:13, col:18> 'end' 0x1531e818c40
|   |       |-CaseStmt 0x1531e814b08 <line:929:9, line:930:38>
|   |       | |-ConstantExpr 0x1531e814af0 <line:929:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e814ad0 <col:14> 'int' EnumConstant 0x1531e7ec868 'OPT_HELP' 'int'
|   |       | `-CallExpr 0x1531e814be0 <line:930:13, col:38> 'void'
|   |       |   |-ImplicitCastExpr 0x1531e814bc8 <col:13> 'void (*)(const OPTIONS *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x1531e814b30 <col:13> 'void (const OPTIONS *)' Function 0x1531e8ea078 'opt_help' 'void (const OPTIONS *)'
|   |       |   `-ImplicitCastExpr 0x1531e814c20 <col:22> 'const OPTIONS *' <NoOp>
|   |       |     `-ImplicitCastExpr 0x1531e814c08 <col:22> 'OPTIONS *' <ArrayToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e814b50 <col:22> 'OPTIONS [150]' lvalue Var 0x1531e800168 's_client_options' 'OPTIONS [150]'
|   |       |-BinaryOperator 0x1531e814c98 <line:931:13, col:19> 'int' '='
|   |       | |-DeclRefExpr 0x1531e814c38 <col:13> 'int' lvalue Var 0x1531e81d000 'ret' 'int'
|   |       | `-IntegerLiteral 0x1531e814c70 <col:19> 'int' 0
|   |       |-GotoStmt 0x1531e814cb8 <line:932:13, col:18> 'end' 0x1531e818c40
|   |       |-CaseStmt 0x1531e814d08 <line:933:9, line:934:28>
|   |       | |-ConstantExpr 0x1531e814cf0 <line:933:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e814cd0 <col:14> 'int' EnumConstant 0x1531e7ec8c0 'OPT_4' 'int'
|   |       | `-BinaryOperator 0x1531e814d88 <line:934:13, col:28> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' '='
|   |       |   |-DeclRefExpr 0x1531e814d30 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' lvalue Var 0x1531e813d18 'connect_type' 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)'
|   |       |   `-ImplicitCastExpr 0x1531e814d70 <col:28> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' <IntegralCast>
|   |       |     `-DeclRefExpr 0x1531e814d50 <col:28> 'int' EnumConstant 0x1531e813bb0 'use_inet' 'int'
|   |       |-UnaryOperator 0x1531e814e18 <line:936:13, col:22> 'int' postfix '++'
|   |       | `-DeclRefExpr 0x1531e814de0 <col:13> 'int' lvalue Var 0x1531e813e00 'count4or6' 'int'
|   |       |-BreakStmt 0x1531e814e30 <line:937:13>
|   |       |-CaseStmt 0x1531e814e70 <line:945:9, line:946:28>
|   |       | |-ConstantExpr 0x1531e814e58 <line:945:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e814e38 <col:14> 'int' EnumConstant 0x1531e7ec970 'OPT_HOST' 'int'
|   |       | `-BinaryOperator 0x1531e814ef0 <line:946:13, col:28> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' '='
|   |       |   |-DeclRefExpr 0x1531e814e98 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' lvalue Var 0x1531e813d18 'connect_type' 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)'
|   |       |   `-ImplicitCastExpr 0x1531e814ed8 <col:28> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' <IntegralCast>
|   |       |     `-DeclRefExpr 0x1531e814eb8 <col:28> 'int' EnumConstant 0x1531e813bb0 'use_inet' 'int'
|   |       |-CallExpr 0x1531e815040 <line:947:13, col:41> 'void'
|   |       | |-ImplicitCastExpr 0x1531e815028 <col:13> 'void (*)(char **, const char *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1531e814f10 <col:13> 'void (char **, const char *)' Function 0x1531e802f88 'freeandcopy' 'void (char **, const char *)'
|   |       | |-UnaryOperator 0x1531e814f68 <col:25, col:26> 'char **' prefix '&' cannot overflow
|   |       | | `-DeclRefExpr 0x1531e814f30 <col:26> 'char *' lvalue Var 0x1531e81b2e0 'host' 'char *'
|   |       | `-ImplicitCastExpr 0x1531e815070 <col:32, col:40> 'const char *' <NoOp>
|   |       |   `-CallExpr 0x1531e814fe0 <col:32, col:40> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e814fc8 <col:32> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e814f80 <col:32> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e815088 <line:948:13>
|   |       |-CaseStmt 0x1531e8150c8 <line:949:9, line:950:28>
|   |       | |-ConstantExpr 0x1531e8150b0 <line:949:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e815090 <col:14> 'int' EnumConstant 0x1531e7ec9c8 'OPT_PORT' 'int'
|   |       | `-BinaryOperator 0x1531e815148 <line:950:13, col:28> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' '='
|   |       |   |-DeclRefExpr 0x1531e8150f0 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' lvalue Var 0x1531e813d18 'connect_type' 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)'
|   |       |   `-ImplicitCastExpr 0x1531e815130 <col:28> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' <IntegralCast>
|   |       |     `-DeclRefExpr 0x1531e815110 <col:28> 'int' EnumConstant 0x1531e813bb0 'use_inet' 'int'
|   |       |-CallExpr 0x1531e815248 <line:951:13, col:41> 'void'
|   |       | |-ImplicitCastExpr 0x1531e815230 <col:13> 'void (*)(char **, const char *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1531e815168 <col:13> 'void (char **, const char *)' Function 0x1531e802f88 'freeandcopy' 'void (char **, const char *)'
|   |       | |-UnaryOperator 0x1531e8151c0 <col:25, col:26> 'char **' prefix '&' cannot overflow
|   |       | | `-DeclRefExpr 0x1531e815188 <col:26> 'char *' lvalue Var 0x1531e81b438 'port' 'char *'
|   |       | `-ImplicitCastExpr 0x1531e815278 <col:32, col:40> 'const char *' <NoOp>
|   |       |   `-CallExpr 0x1531e815210 <col:32, col:40> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e8151f8 <col:32> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e8151d8 <col:32> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e815290 <line:952:13>
|   |       |-CaseStmt 0x1531e8152d0 <line:953:9, line:954:28>
|   |       | |-ConstantExpr 0x1531e8152b8 <line:953:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e815298 <col:14> 'int' EnumConstant 0x1531e7eca20 'OPT_CONNECT' 'int'
|   |       | `-BinaryOperator 0x1531e815350 <line:954:13, col:28> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' '='
|   |       |   |-DeclRefExpr 0x1531e8152f8 <col:13> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' lvalue Var 0x1531e813d18 'connect_type' 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)'
|   |       |   `-ImplicitCastExpr 0x1531e815338 <col:28> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:857:5)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:857:5)' <IntegralCast>
|   |       |     `-DeclRefExpr 0x1531e815318 <col:28> 'int' EnumConstant 0x1531e813bb0 'use_inet' 'int'
|   |       |-CallExpr 0x1531e815450 <line:955:13, col:47> 'void'
|   |       | |-ImplicitCastExpr 0x1531e815438 <col:13> 'void (*)(char **, const char *)' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x1531e815370 <col:13> 'void (char **, const char *)' Function 0x1531e802f88 'freeandcopy' 'void (char **, const char *)'
|   |       | |-UnaryOperator 0x1531e8153c8 <col:25, col:26> 'char **' prefix '&' cannot overflow
|   |       | | `-DeclRefExpr 0x1531e815390 <col:26> 'char *' lvalue Var 0x1531e81abb0 'connectstr' 'char *'
|   |       | `-ImplicitCastExpr 0x1531e815480 <col:38, col:46> 'const char *' <NoOp>
|   |       |   `-CallExpr 0x1531e815418 <col:38, col:46> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e815400 <col:38> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e8153e0 <col:38> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e815498 <line:956:13>
|   |       |-CaseStmt 0x1531e8154d8 <line:957:9, line:958:32>
|   |       | |-ConstantExpr 0x1531e8154c0 <line:957:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8154a0 <col:14> 'int' EnumConstant 0x1531e7fdd98 'OPT_PROXY' 'int'
|   |       | `-BinaryOperator 0x1531e815590 <line:958:13, col:32> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e815500 <col:13> 'char *' lvalue Var 0x1531e81aa90 'proxystr' 'char *'
|   |       |   `-CallExpr 0x1531e815570 <col:24, col:32> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e815558 <col:24> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e815538 <col:24> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BinaryOperator 0x1531e815608 <line:959:13, col:30> 'int' '='
|   |       | |-DeclRefExpr 0x1531e8155b0 <col:13> 'int' lvalue Var 0x1531e81d850 'starttls_proto' 'int'
|   |       | `-DeclRefExpr 0x1531e8155e8 <col:30> 'int' EnumConstant 0x1531e811e90 'PROTO_CONNECT' 'int'
|   |       |-BreakStmt 0x1531e815628 <line:960:13>
|   |       |-CaseStmt 0x1531e815668 <line:968:9, line:969:32>
|   |       | |-ConstantExpr 0x1531e815650 <line:968:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e815630 <col:14> 'int' EnumConstant 0x1531e7ecad0 'OPT_XMPPHOST' 'int'
|   |       | `-BinaryOperator 0x1531e815720 <line:969:13, col:32> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e815690 <col:13> 'char *' lvalue Var 0x1531e81bf98 'xmpphost' 'char *'
|   |       |   `-CallExpr 0x1531e815700 <col:24, col:32> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e8156e8 <col:24> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e8156c8 <col:24> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e815740 <line:970:13>
|   |       |-CaseStmt 0x1531e815780 <line:971:9, line:972:28>
|   |       | |-ConstantExpr 0x1531e815768 <line:971:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e815748 <col:14> 'int' EnumConstant 0x1531e7fc418 'OPT_SMTPHOST' 'int'
|   |       | `-BinaryOperator 0x1531e815850 <line:972:13, col:28> 'const char *' '='
|   |       |   |-DeclRefExpr 0x1531e8157a8 <col:13> 'const char *' lvalue Var 0x1531e81c0d0 'ehlo' 'const char *'
|   |       |   `-ImplicitCastExpr 0x1531e815838 <col:20, col:28> 'const char *' <NoOp>
|   |       |     `-CallExpr 0x1531e815818 <col:20, col:28> 'char *'
|   |       |       `-ImplicitCastExpr 0x1531e815800 <col:20> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |         `-DeclRefExpr 0x1531e8157e0 <col:20> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e815870 <line:973:13>
|   |       |-CaseStmt 0x1531e8158b0 <line:974:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e815898 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e815878 <col:14> 'int' EnumConstant 0x1531e7ecb28 'OPT_VERIFY' 'int'
|   |       | `-NullStmt 0x1531e815910 <<invalid sloc>>
|   |       |-BinaryOperator 0x1531e815a90 <line:976:13, col:47> 'int' '='
|   |       | |-MemberExpr 0x1531e815938 <col:13, col:25> 'int' lvalue .depth 0x1531e7efd28
|   |       | | `-DeclRefExpr 0x1531e815918 <col:13> 'VERIFY_CB_ARGS':'struct verify_options_st' lvalue Var 0x1531e7effd0 'verify_args' 'VERIFY_CB_ARGS':'struct verify_options_st'
|   |       | `-CallExpr 0x1531e815a50 <col:33, col:47> 'int'
|   |       |   |-ImplicitCastExpr 0x1531e815a38 <col:33> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x1531e815968 <col:33> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x1531e7b1bf0 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |       |   `-ImplicitCastExpr 0x1531e815a78 <col:38, col:46> 'const char *' <NoOp>
|   |       |     `-CallExpr 0x1531e8159c0 <col:38, col:46> 'char *'
|   |       |       `-ImplicitCastExpr 0x1531e8159a8 <col:38> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |         `-DeclRefExpr 0x1531e815988 <col:38> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e815c08 <line:979:13>
|   |       |-CaseStmt 0x1531e815c48 <line:980:9, line:981:33>
|   |       | |-ConstantExpr 0x1531e815c30 <line:980:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e815c10 <col:14> 'int' EnumConstant 0x1531e7ecb80 'OPT_CERT' 'int'
|   |       | `-BinaryOperator 0x1531e815d00 <line:981:13, col:33> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e815c70 <col:13> 'char *' lvalue Var 0x1531e81ad08 'cert_file' 'char *'
|   |       |   `-CallExpr 0x1531e815ce0 <col:25, col:33> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e815cc8 <col:25> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e815ca8 <col:25> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e815d20 <line:982:13>
|   |       |-CaseStmt 0x1531e815d60 <line:983:9, line:984:32>
|   |       | |-ConstantExpr 0x1531e815d48 <line:983:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e815d28 <col:14> 'int' EnumConstant 0x1531e7ecbd8 'OPT_CRL' 'int'
|   |       | `-BinaryOperator 0x1531e815e18 <line:984:13, col:32> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e815d88 <col:13> 'char *' lvalue Var 0x1531e81bdb8 'crl_file' 'char *'
|   |       |   `-CallExpr 0x1531e815df8 <col:24, col:32> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e815de0 <col:24> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e815dc0 <col:24> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e815e38 <line:985:13>
|   |       |-CaseStmt 0x1531e815e78 <line:986:9, line:987:28>
|   |       | |-ConstantExpr 0x1531e815e60 <line:986:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e815e40 <col:14> 'int' EnumConstant 0x1531e7ecc30 'OPT_CRL_DOWNLOAD' 'int'
|   |       | `-BinaryOperator 0x1531e815f00 <line:987:13, col:28> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e815ea0 <col:13> 'int' lvalue Var 0x1531e81da00 'crl_download' 'int'
|   |       |   `-IntegerLiteral 0x1531e815ed8 <col:28> 'int' 1
|   |       |-BreakStmt 0x1531e815f20 <line:988:13>
|   |       |-CaseStmt 0x1531e815f60 <line:989:9, line:990:32>
|   |       | |-ConstantExpr 0x1531e815f48 <line:989:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e815f28 <col:14> 'int' EnumConstant 0x1531e7ecc88 'OPT_SESS_OUT' 'int'
|   |       | `-BinaryOperator 0x1531e816018 <line:990:13, col:32> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e815f88 <col:13> 'char *' lvalue Var 0x1531e81bc98 'sess_out' 'char *'
|   |       |   `-CallExpr 0x1531e815ff8 <col:24, col:32> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e815fe0 <col:24> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e815fc0 <col:24> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e816038 <line:991:13>
|   |       |-CaseStmt 0x1531e816078 <line:992:9, line:993:31>
|   |       | |-ConstantExpr 0x1531e816060 <line:992:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e816040 <col:14> 'int' EnumConstant 0x1531e7ecce0 'OPT_SESS_IN' 'int'
|   |       | `-BinaryOperator 0x1531e816130 <line:993:13, col:31> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e8160a0 <col:13> 'char *' lvalue Var 0x1531e81bb78 'sess_in' 'char *'
|   |       |   `-CallExpr 0x1531e816110 <col:23, col:31> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e8160f8 <col:23> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e8160d8 <col:23> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e816150 <line:994:13>
|   |       |-CaseStmt 0x1531e816190 <line:995:9, line:997:22>
|   |       | |-ConstantExpr 0x1531e816178 <line:995:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e816158 <col:14> 'int' EnumConstant 0x1531e7ecd38 'OPT_CERTFORM' 'int'
|   |       | `-IfStmt 0x1531e816408 <line:996:13, line:997:22>
|   |       |   |-UnaryOperator 0x1531e8163d8 <line:996:17, col:68> 'int' prefix '!' cannot overflow
|   |       |   | `-CallExpr 0x1531e816370 <col:18, col:68> 'int'
|   |       |   |   |-ImplicitCastExpr 0x1531e816358 <col:18> 'int (*)(const char *, unsigned long, int *)' <FunctionToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x1531e8161d0 <col:18> 'int (const char *, unsigned long, int *)' Function 0x1531e8e4480 'opt_format' 'int (const char *, unsigned long, int *)'
|   |       |   |   |-ImplicitCastExpr 0x1531e8163a8 <col:29, col:37> 'const char *' <NoOp>
|   |       |   |   | `-CallExpr 0x1531e816228 <col:29, col:37> 'char *'
|   |       |   |   |   `-ImplicitCastExpr 0x1531e816210 <col:29> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |   |   |     `-DeclRefExpr 0x1531e8161f0 <col:29> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |   |   |-ImplicitCastExpr 0x1531e8163c0 <.//openssl//file_jk/after\apps/apps.h:317:34, col:43> 'unsigned long' <IntegralCast>
|   |       |   |   | `-ParenExpr 0x1531e8162b8 <col:34, col:43> 'long'
|   |       |   |   |   `-BinaryOperator 0x1531e816298 <col:35, col:42> 'long' '<<'
|   |       |   |   |     |-IntegerLiteral 0x1531e816248 <col:35> 'long' 1
|   |       |   |   |     `-IntegerLiteral 0x1531e816270 <col:42> 'int' 1
|   |       |   |   `-UnaryOperator 0x1531e816310 <.//openssl//file_jk/after\apps\s_client.c:996:56, col:57> 'int *' prefix '&' cannot overflow
|   |       |   |     `-DeclRefExpr 0x1531e8162d8 <col:57> 'int' lvalue Var 0x1531e81c7e0 'cert_format' 'int'
|   |       |   `-GotoStmt 0x1531e8163f0 <line:997:17, col:22> 'opthelp' 0x1531e814a50
|   |       |-BreakStmt 0x1531e816420 <line:998:13>
|   |       |-CaseStmt 0x1531e816460 <line:999:9, line:1001:22>
|   |       | |-ConstantExpr 0x1531e816448 <line:999:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e816428 <col:14> 'int' EnumConstant 0x1531e7ecd90 'OPT_CRLFORM' 'int'
|   |       | `-IfStmt 0x1531e816690 <line:1000:13, line:1001:22>
|   |       |   |-UnaryOperator 0x1531e816660 <line:1000:17, col:67> 'int' prefix '!' cannot overflow
|   |       |   | `-CallExpr 0x1531e8165f8 <col:18, col:67> 'int'
|   |       |   |   |-ImplicitCastExpr 0x1531e8165e0 <col:18> 'int (*)(const char *, unsigned long, int *)' <FunctionToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x1531e816488 <col:18> 'int (const char *, unsigned long, int *)' Function 0x1531e8e4480 'opt_format' 'int (const char *, unsigned long, int *)'
|   |       |   |   |-ImplicitCastExpr 0x1531e816630 <col:29, col:37> 'const char *' <NoOp>
|   |       |   |   | `-CallExpr 0x1531e8164e0 <col:29, col:37> 'char *'
|   |       |   |   |   `-ImplicitCastExpr 0x1531e8164c8 <col:29> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |   |   |     `-DeclRefExpr 0x1531e8164a8 <col:29> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |   |   |-ImplicitCastExpr 0x1531e816648 <.//openssl//file_jk/after\apps/apps.h:317:34, col:43> 'unsigned long' <IntegralCast>
|   |       |   |   | `-ParenExpr 0x1531e816570 <col:34, col:43> 'long'
|   |       |   |   |   `-BinaryOperator 0x1531e816550 <col:35, col:42> 'long' '<<'
|   |       |   |   |     |-IntegerLiteral 0x1531e816500 <col:35> 'long' 1
|   |       |   |   |     `-IntegerLiteral 0x1531e816528 <col:42> 'int' 1
|   |       |   |   `-UnaryOperator 0x1531e8165c8 <.//openssl//file_jk/after\apps\s_client.c:1000:56, col:57> 'int *' prefix '&' cannot overflow
|   |       |   |     `-DeclRefExpr 0x1531e816590 <col:57> 'int' lvalue Var 0x1531e81d8f0 'crl_format' 'int'
|   |       |   `-GotoStmt 0x1531e816678 <line:1001:17, col:22> 'opthelp' 0x1531e814a50
|   |       |-BreakStmt 0x1531e8166a8 <line:1002:13>
|   |       |-CaseStmt 0x1531e8166e8 <line:1003:9, line:1004:40>
|   |       | |-ConstantExpr 0x1531e8166d0 <line:1003:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8166b0 <col:14> 'int' EnumConstant 0x1531e7ecde8 'OPT_VERIFY_RET_ERROR' 'int'
|   |       | `-BinaryOperator 0x1531e816788 <line:1004:13, col:40> 'int' '='
|   |       |   |-MemberExpr 0x1531e816730 <col:13, col:25> 'int' lvalue .return_error 0x1531e7efe78
|   |       |   | `-DeclRefExpr 0x1531e816710 <col:13> 'VERIFY_CB_ARGS':'struct verify_options_st' lvalue Var 0x1531e7effd0 'verify_args' 'VERIFY_CB_ARGS':'struct verify_options_st'
|   |       |   `-IntegerLiteral 0x1531e816760 <col:40> 'int' 1
|   |       |-BreakStmt 0x1531e8167a8 <line:1005:13>
|   |       |-CaseStmt 0x1531e8167e8 <line:1006:9, line:1007:33>
|   |       | |-ConstantExpr 0x1531e8167d0 <line:1006:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8167b0 <col:14> 'int' EnumConstant 0x1531e7ece40 'OPT_VERIFY_QUIET' 'int'
|   |       | `-BinaryOperator 0x1531e816888 <line:1007:13, col:33> 'int' '='
|   |       |   |-MemberExpr 0x1531e816830 <col:13, col:25> 'int' lvalue .quiet 0x1531e7efd98
|   |       |   | `-DeclRefExpr 0x1531e816810 <col:13> 'VERIFY_CB_ARGS':'struct verify_options_st' lvalue Var 0x1531e7effd0 'verify_args' 'VERIFY_CB_ARGS':'struct verify_options_st'
|   |       |   `-IntegerLiteral 0x1531e816860 <col:33> 'int' 1
|   |       |-BreakStmt 0x1531e8168a8 <line:1008:13>
|   |       |-CaseStmt 0x1531e8168e8 <line:1009:9, line:1010:53>
|   |       | |-ConstantExpr 0x1531e8168d0 <line:1009:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8168b0 <col:14> 'int' EnumConstant 0x1531e7ece98 'OPT_BRIEF' 'int'
|   |       | `-BinaryOperator 0x1531e816a20 <line:1010:13, col:53> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e816910 <col:13> 'int' lvalue Var 0x1531e8140b8 'c_brief' 'int'
|   |       |   `-BinaryOperator 0x1531e816a00 <col:23, col:53> 'int' '='
|   |       |     |-MemberExpr 0x1531e816968 <col:23, col:35> 'int' lvalue .quiet 0x1531e7efd98
|   |       |     | `-DeclRefExpr 0x1531e816948 <col:23> 'VERIFY_CB_ARGS':'struct verify_options_st' lvalue Var 0x1531e7effd0 'verify_args' 'VERIFY_CB_ARGS':'struct verify_options_st'
|   |       |     `-BinaryOperator 0x1531e8169e0 <col:43, col:53> 'int' '='
|   |       |       |-DeclRefExpr 0x1531e816998 <col:43> 'int' lvalue Var 0x1531e7e1038 'c_quiet' 'int'
|   |       |       `-IntegerLiteral 0x1531e8169b8 <col:53> 'int' 1
|   |       |-BreakStmt 0x1531e816a40 <line:1011:13>
|   |       |-CaseStmt 0x1531e816a80 <line:1012:9, .//openssl//file_jk/after\apps/apps.h:259:41>
|   |       | |-ConstantExpr 0x1531e816a68 <col:9> 'int'
|   |       | | `-DeclRefExpr 0x1531e816a48 <col:9> 'int' EnumConstant 0x1531e7fd450 'OPT_S__FIRST' 'int'
|   |       | `-CaseStmt 0x1531e816ae0 <col:23, col:41>
|   |       |   |-ConstantExpr 0x1531e816ac8 <col:28> 'int'
|   |       |   | `-DeclRefExpr 0x1531e816aa8 <col:28> 'int' EnumConstant 0x1531e7fdc90 'OPT_S__LAST' 'int'
|   |       |   `-BreakStmt 0x1531e816b08 <col:41>
|   |       |-CaseStmt 0x1531e816b48 <line:260:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e816b30 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e816b10 <col:14> 'int' EnumConstant 0x1531e7fd4a8 'OPT_S_NOSSL3' 'int'
|   |       | `-CaseStmt 0x1531e816ba8 <line:261:9, <invalid sloc>>
|   |       |   |-ConstantExpr 0x1531e816b90 <col:14> 'int'
|   |       |   | `-DeclRefExpr 0x1531e816b70 <col:14> 'int' EnumConstant 0x1531e7fd500 'OPT_S_NOTLS1' 'int'
|   |       |   `-CaseStmt 0x1531e816c08 <line:262:9, <invalid sloc>>
|   |       |     |-ConstantExpr 0x1531e816bf0 <col:14> 'int'
|   |       |     | `-DeclRefExpr 0x1531e816bd0 <col:14> 'int' EnumConstant 0x1531e7fd558 'OPT_S_NOTLS1_1' 'int'
|   |       |     `-CaseStmt 0x1531e816c68 <line:263:9, <invalid sloc>>
|   |       |       |-ConstantExpr 0x1531e816c50 <col:14> 'int'
|   |       |       | `-DeclRefExpr 0x1531e816c30 <col:14> 'int' EnumConstant 0x1531e7fd5b0 'OPT_S_NOTLS1_2' 'int'
|   |       |       `-CaseStmt 0x1531e816cc8 <line:264:9, <invalid sloc>>
|   |       |         |-ConstantExpr 0x1531e816cb0 <col:14> 'int'
|   |       |         | `-DeclRefExpr 0x1531e816c90 <col:14> 'int' EnumConstant 0x1531e7fd608 'OPT_S_BUGS' 'int'
|   |       |         `-CaseStmt 0x1531e816d28 <line:265:9, <invalid sloc>>
|   |       |           |-ConstantExpr 0x1531e816d10 <col:14> 'int'
|   |       |           | `-DeclRefExpr 0x1531e816cf0 <col:14> 'int' EnumConstant 0x1531e7fd660 'OPT_S_NO_COMP' 'int'
|   |       |           `-CaseStmt 0x1531e816d88 <line:266:9, <invalid sloc>>
|   |       |             |-ConstantExpr 0x1531e816d70 <col:14> 'int'
|   |       |             | `-DeclRefExpr 0x1531e816d50 <col:14> 'int' EnumConstant 0x1531e7fdb30 'OPT_S_COMP' 'int'
|   |       |             `-CaseStmt 0x1531e816de8 <line:267:9, <invalid sloc>>
|   |       |               |-ConstantExpr 0x1531e816dd0 <col:14> 'int'
|   |       |               | `-DeclRefExpr 0x1531e816db0 <col:14> 'int' EnumConstant 0x1531e7fd6b8 'OPT_S_NOTICKET' 'int'
|   |       |               `-CaseStmt 0x1531e816e48 <line:268:9, <invalid sloc>>
|   |       |                 |-ConstantExpr 0x1531e816e30 <col:14> 'int'
|   |       |                 | `-DeclRefExpr 0x1531e816e10 <col:14> 'int' EnumConstant 0x1531e7fd710 'OPT_S_SERVERPREF' 'int'
|   |       |                 `-CaseStmt 0x1531e816ea8 <line:269:9, <invalid sloc>>
|   |       |                   |-ConstantExpr 0x1531e816e90 <col:14> 'int'
|   |       |                   | `-DeclRefExpr 0x1531e816e70 <col:14> 'int' EnumConstant 0x1531e7fd768 'OPT_S_LEGACYRENEG' 'int'
|   |       |                   `-CaseStmt 0x1531e816f08 <line:270:9, <invalid sloc>>
|   |       |                     |-ConstantExpr 0x1531e816ef0 <col:14> 'int'
|   |       |                     | `-DeclRefExpr 0x1531e816ed0 <col:14> 'int' EnumConstant 0x1531e7fd7c0 'OPT_S_LEGACYCONN' 'int'
|   |       |                     `-CaseStmt 0x1531e816f68 <line:271:9, <invalid sloc>>
|   |       |                       |-ConstantExpr 0x1531e816f50 <col:14> 'int'
|   |       |                       | `-DeclRefExpr 0x1531e816f30 <col:14> 'int' EnumConstant 0x1531e7fd818 'OPT_S_ONRESUMP' 'int'
|   |       |                       `-CaseStmt 0x1531e816fc8 <line:272:9, <invalid sloc>>
|   |       |                         |-ConstantExpr 0x1531e816fb0 <col:14> 'int'
|   |       |                         | `-DeclRefExpr 0x1531e816f90 <col:14> 'int' EnumConstant 0x1531e7fd870 'OPT_S_NOLEGACYCONN' 'int'
|   |       |                         `-CaseStmt 0x1531e817028 <line:273:9, <invalid sloc>>
|   |       |                           |-ConstantExpr 0x1531e817010 <col:14> 'int'
|   |       |                           | `-DeclRefExpr 0x1531e816ff0 <col:14> 'int' EnumConstant 0x1531e7fd8c8 'OPT_S_STRICT' 'int'
|   |       |                           `-CaseStmt 0x1531e817088 <line:274:9, <invalid sloc>>
|   |       |                             |-ConstantExpr 0x1531e817070 <col:14> 'int'
|   |       |                             | `-DeclRefExpr 0x1531e817050 <col:14> 'int' EnumConstant 0x1531e7fd920 'OPT_S_SIGALGS' 'int'
|   |       |                             `-CaseStmt 0x1531e8170e8 <line:275:9, <invalid sloc>>
|   |       |                               |-ConstantExpr 0x1531e8170d0 <col:14> 'int'
|   |       |                               | `-DeclRefExpr 0x1531e8170b0 <col:14> 'int' EnumConstant 0x1531e7fd978 'OPT_S_CLIENTSIGALGS' 'int'
|   |       |                               `-CaseStmt 0x1531e817148 <line:276:9, <invalid sloc>>
|   |       |                                 |-ConstantExpr 0x1531e817130 <col:14> 'int'
|   |       |                                 | `-DeclRefExpr 0x1531e817110 <col:14> 'int' EnumConstant 0x1531e7fd9d0 'OPT_S_CURVES' 'int'
|   |       |                                 `-CaseStmt 0x1531e8171a8 <line:277:9, <invalid sloc>>
|   |       |                                   |-ConstantExpr 0x1531e817190 <col:14> 'int'
|   |       |                                   | `-DeclRefExpr 0x1531e817170 <col:14> 'int' EnumConstant 0x1531e7fda28 'OPT_S_NAMEDCURVE' 'int'
|   |       |                                   `-CaseStmt 0x1531e817208 <line:278:9, <invalid sloc>>
|   |       |                                     |-ConstantExpr 0x1531e8171f0 <col:14> 'int'
|   |       |                                     | `-DeclRefExpr 0x1531e8171d0 <col:14> 'int' EnumConstant 0x1531e7fda80 'OPT_S_CIPHER' 'int'
|   |       |                                     `-CaseStmt 0x1531e817268 <line:279:9, <invalid sloc>>
|   |       |                                       |-ConstantExpr 0x1531e817250 <col:14> 'int'
|   |       |                                       | `-DeclRefExpr 0x1531e817230 <col:14> 'int' EnumConstant 0x1531e7fdb88 'OPT_S_MINPROTO' 'int'
|   |       |                                       `-CaseStmt 0x1531e8172c8 <line:280:9, <invalid sloc>>
|   |       |                                         |-ConstantExpr 0x1531e8172b0 <col:14> 'int'
|   |       |                                         | `-DeclRefExpr 0x1531e817290 <col:14> 'int' EnumConstant 0x1531e7fdbe0 'OPT_S_MAXPROTO' 'int'
|   |       |                                         `-CaseStmt 0x1531e817328 <line:281:9, <invalid sloc>>
|   |       |                                           |-ConstantExpr 0x1531e817310 <col:14> 'int'
|   |       |                                           | `-DeclRefExpr 0x1531e8172f0 <col:14> 'int' EnumConstant 0x1531e7fdc38 'OPT_S_NO_RENEGOTIATION' 'int'
|   |       |                                           `-CaseStmt 0x1531e817388 <line:282:9, <invalid sloc>>
|   |       |                                             |-ConstantExpr 0x1531e817370 <col:14> 'int'
|   |       |                                             | `-DeclRefExpr 0x1531e817350 <col:14> 'int' EnumConstant 0x1531e7fdad8 'OPT_S_DEBUGBROKE' 'int'
|   |       |                                             `-NullStmt 0x1531e817580 <<invalid sloc>>
|   |       |-IfStmt 0x1531e8178b0 <.//openssl//file_jk/after\apps\s_client.c:1015:13, line:1020:13>
|   |       | |-OpaqueValueExpr 0x1531e817898 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x1531e817880 <line:1017:66, line:1020:13>
|   |       |   `-GotoStmt 0x1531e817868 <line:1019:17, col:22> 'end' 0x1531e818c40
|   |       |-BreakStmt 0x1531e8178c8 <line:1021:13>
|   |       |-CaseStmt 0x1531e817908 <line:1022:9, .//openssl//file_jk/after\apps/apps.h:145:41>
|   |       | |-ConstantExpr 0x1531e8178f0 <col:9> 'int'
|   |       | | `-DeclRefExpr 0x1531e8178d0 <col:9> 'int' EnumConstant 0x1531e7fc610 'OPT_V__FIRST' 'int'
|   |       | `-CaseStmt 0x1531e817968 <col:23, col:41>
|   |       |   |-ConstantExpr 0x1531e817950 <col:28> 'int'
|   |       |   | `-DeclRefExpr 0x1531e817930 <col:28> 'int' EnumConstant 0x1531e7fd0b8 'OPT_V__LAST' 'int'
|   |       |   `-BreakStmt 0x1531e817990 <col:41>
|   |       |-CaseStmt 0x1531e8179d0 <line:146:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       | |-ConstantExpr 0x1531e8179b8 <.//openssl//file_jk/after\apps/apps.h:146:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e817998 <col:14> 'int' EnumConstant 0x1531e7fc668 'OPT_V_POLICY' 'int'
|   |       | `-CaseStmt 0x1531e817a30 <line:147:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |   |-ConstantExpr 0x1531e817a18 <.//openssl//file_jk/after\apps/apps.h:147:14> 'int'
|   |       |   | `-DeclRefExpr 0x1531e8179f8 <col:14> 'int' EnumConstant 0x1531e7fc6c0 'OPT_V_PURPOSE' 'int'
|   |       |   `-CaseStmt 0x1531e817a90 <line:148:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |     |-ConstantExpr 0x1531e817a78 <.//openssl//file_jk/after\apps/apps.h:148:14> 'int'
|   |       |     | `-DeclRefExpr 0x1531e817a58 <col:14> 'int' EnumConstant 0x1531e7fc718 'OPT_V_VERIFY_NAME' 'int'
|   |       |     `-CaseStmt 0x1531e817af0 <line:149:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |       |-ConstantExpr 0x1531e817ad8 <.//openssl//file_jk/after\apps/apps.h:149:14> 'int'
|   |       |       | `-DeclRefExpr 0x1531e817ab8 <col:14> 'int' EnumConstant 0x1531e7fc770 'OPT_V_VERIFY_DEPTH' 'int'
|   |       |       `-CaseStmt 0x1531e817b50 <line:150:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |         |-ConstantExpr 0x1531e817b38 <.//openssl//file_jk/after\apps/apps.h:150:14> 'int'
|   |       |         | `-DeclRefExpr 0x1531e817b18 <col:14> 'int' EnumConstant 0x1531e7fd008 'OPT_V_VERIFY_AUTH_LEVEL' 'int'
|   |       |         `-CaseStmt 0x1531e817bb0 <line:151:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |           |-ConstantExpr 0x1531e817b98 <.//openssl//file_jk/after\apps/apps.h:151:14> 'int'
|   |       |           | `-DeclRefExpr 0x1531e817b78 <col:14> 'int' EnumConstant 0x1531e7fc7c8 'OPT_V_ATTIME' 'int'
|   |       |           `-CaseStmt 0x1531e817c10 <line:152:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |             |-ConstantExpr 0x1531e817bf8 <.//openssl//file_jk/after\apps/apps.h:152:14> 'int'
|   |       |             | `-DeclRefExpr 0x1531e817bd8 <col:14> 'int' EnumConstant 0x1531e7fc820 'OPT_V_VERIFY_HOSTNAME' 'int'
|   |       |             `-CaseStmt 0x1531e817c70 <line:153:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |               |-ConstantExpr 0x1531e817c58 <.//openssl//file_jk/after\apps/apps.h:153:14> 'int'
|   |       |               | `-DeclRefExpr 0x1531e817c38 <col:14> 'int' EnumConstant 0x1531e7fc878 'OPT_V_VERIFY_EMAIL' 'int'
|   |       |               `-CaseStmt 0x1531e817cd0 <line:154:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                 |-ConstantExpr 0x1531e817cb8 <.//openssl//file_jk/after\apps/apps.h:154:14> 'int'
|   |       |                 | `-DeclRefExpr 0x1531e817c98 <col:14> 'int' EnumConstant 0x1531e7fc8d0 'OPT_V_VERIFY_IP' 'int'
|   |       |                 `-CaseStmt 0x1531e817d30 <line:155:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                   |-ConstantExpr 0x1531e817d18 <.//openssl//file_jk/after\apps/apps.h:155:14> 'int'
|   |       |                   | `-DeclRefExpr 0x1531e817cf8 <col:14> 'int' EnumConstant 0x1531e7fc928 'OPT_V_IGNORE_CRITICAL' 'int'
|   |       |                   `-CaseStmt 0x1531e817d90 <line:156:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                     |-ConstantExpr 0x1531e817d78 <.//openssl//file_jk/after\apps/apps.h:156:14> 'int'
|   |       |                     | `-DeclRefExpr 0x1531e817d58 <col:14> 'int' EnumConstant 0x1531e7fc980 'OPT_V_ISSUER_CHECKS' 'int'
|   |       |                     `-CaseStmt 0x1531e817df0 <line:157:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                       |-ConstantExpr 0x1531e817dd8 <.//openssl//file_jk/after\apps/apps.h:157:14> 'int'
|   |       |                       | `-DeclRefExpr 0x1531e817db8 <col:14> 'int' EnumConstant 0x1531e7fc9d8 'OPT_V_CRL_CHECK' 'int'
|   |       |                       `-CaseStmt 0x1531e817e50 <line:158:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                         |-ConstantExpr 0x1531e817e38 <.//openssl//file_jk/after\apps/apps.h:158:14> 'int'
|   |       |                         | `-DeclRefExpr 0x1531e817e18 <col:14> 'int' EnumConstant 0x1531e7fca30 'OPT_V_CRL_CHECK_ALL' 'int'
|   |       |                         `-CaseStmt 0x1531e817eb0 <line:159:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                           |-ConstantExpr 0x1531e817e98 <.//openssl//file_jk/after\apps/apps.h:159:14> 'int'
|   |       |                           | `-DeclRefExpr 0x1531e817e78 <col:14> 'int' EnumConstant 0x1531e7fca88 'OPT_V_POLICY_CHECK' 'int'
|   |       |                           `-CaseStmt 0x1531e817f10 <line:160:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                             |-ConstantExpr 0x1531e817ef8 <.//openssl//file_jk/after\apps/apps.h:160:14> 'int'
|   |       |                             | `-DeclRefExpr 0x1531e817ed8 <col:14> 'int' EnumConstant 0x1531e7fcae0 'OPT_V_EXPLICIT_POLICY' 'int'
|   |       |                             `-CaseStmt 0x1531e817f70 <line:161:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                               |-ConstantExpr 0x1531e817f58 <.//openssl//file_jk/after\apps/apps.h:161:14> 'int'
|   |       |                               | `-DeclRefExpr 0x1531e817f38 <col:14> 'int' EnumConstant 0x1531e7fcb38 'OPT_V_INHIBIT_ANY' 'int'
|   |       |                               `-CaseStmt 0x1531e817fd0 <line:162:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                 |-ConstantExpr 0x1531e817fb8 <.//openssl//file_jk/after\apps/apps.h:162:14> 'int'
|   |       |                                 | `-DeclRefExpr 0x1531e817f98 <col:14> 'int' EnumConstant 0x1531e7fcb90 'OPT_V_INHIBIT_MAP' 'int'
|   |       |                                 `-CaseStmt 0x1531e818030 <line:163:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                   |-ConstantExpr 0x1531e818018 <.//openssl//file_jk/after\apps/apps.h:163:14> 'int'
|   |       |                                   | `-DeclRefExpr 0x1531e817ff8 <col:14> 'int' EnumConstant 0x1531e7fcbe8 'OPT_V_X509_STRICT' 'int'
|   |       |                                   `-CaseStmt 0x1531e818090 <line:164:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                     |-ConstantExpr 0x1531e818078 <.//openssl//file_jk/after\apps/apps.h:164:14> 'int'
|   |       |                                     | `-DeclRefExpr 0x1531e818058 <col:14> 'int' EnumConstant 0x1531e7fcc40 'OPT_V_EXTENDED_CRL' 'int'
|   |       |                                     `-CaseStmt 0x1531e8180f0 <line:165:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                       |-ConstantExpr 0x1531e8180d8 <.//openssl//file_jk/after\apps/apps.h:165:14> 'int'
|   |       |                                       | `-DeclRefExpr 0x1531e8180b8 <col:14> 'int' EnumConstant 0x1531e7fcc98 'OPT_V_USE_DELTAS' 'int'
|   |       |                                       `-CaseStmt 0x1531e818150 <line:166:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                         |-ConstantExpr 0x1531e818138 <.//openssl//file_jk/after\apps/apps.h:166:14> 'int'
|   |       |                                         | `-DeclRefExpr 0x1531e818118 <col:14> 'int' EnumConstant 0x1531e7fccf0 'OPT_V_POLICY_PRINT' 'int'
|   |       |                                         `-CaseStmt 0x1531e825660 <line:167:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                           |-ConstantExpr 0x1531e818198 <.//openssl//file_jk/after\apps/apps.h:167:14> 'int'
|   |       |                                           | `-DeclRefExpr 0x1531e818178 <col:14> 'int' EnumConstant 0x1531e7fcd48 'OPT_V_CHECK_SS_SIG' 'int'
|   |       |                                           `-CaseStmt 0x1531e8256c0 <line:168:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                             |-ConstantExpr 0x1531e8256a8 <.//openssl//file_jk/after\apps/apps.h:168:14> 'int'
|   |       |                                             | `-DeclRefExpr 0x1531e825688 <col:14> 'int' EnumConstant 0x1531e7fcda0 'OPT_V_TRUSTED_FIRST' 'int'
|   |       |                                             `-CaseStmt 0x1531e825720 <line:169:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                               |-ConstantExpr 0x1531e825708 <.//openssl//file_jk/after\apps/apps.h:169:14> 'int'
|   |       |                                               | `-DeclRefExpr 0x1531e8256e8 <col:14> 'int' EnumConstant 0x1531e7fcdf8 'OPT_V_SUITEB_128_ONLY' 'int'
|   |       |                                               `-CaseStmt 0x1531e825780 <line:170:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                                 |-ConstantExpr 0x1531e825768 <.//openssl//file_jk/after\apps/apps.h:170:14> 'int'
|   |       |                                                 | `-DeclRefExpr 0x1531e825748 <col:14> 'int' EnumConstant 0x1531e7fce50 'OPT_V_SUITEB_128' 'int'
|   |       |                                                 `-CaseStmt 0x1531e8257e0 <line:171:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                                   |-ConstantExpr 0x1531e8257c8 <.//openssl//file_jk/after\apps/apps.h:171:14> 'int'
|   |       |                                                   | `-DeclRefExpr 0x1531e8257a8 <col:14> 'int' EnumConstant 0x1531e7fcea8 'OPT_V_SUITEB_192' 'int'
|   |       |                                                   `-CaseStmt 0x1531e825840 <line:172:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                                     |-ConstantExpr 0x1531e825828 <.//openssl//file_jk/after\apps/apps.h:172:14> 'int'
|   |       |                                                     | `-DeclRefExpr 0x1531e825808 <col:14> 'int' EnumConstant 0x1531e7fcf00 'OPT_V_PARTIAL_CHAIN' 'int'
|   |       |                                                     `-CaseStmt 0x1531e8258a0 <line:173:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                                       |-ConstantExpr 0x1531e825888 <.//openssl//file_jk/after\apps/apps.h:173:14> 'int'
|   |       |                                                       | `-DeclRefExpr 0x1531e825868 <col:14> 'int' EnumConstant 0x1531e7fcf58 'OPT_V_NO_ALT_CHAINS' 'int'
|   |       |                                                       `-CaseStmt 0x1531e825900 <line:174:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                                         |-ConstantExpr 0x1531e8258e8 <.//openssl//file_jk/after\apps/apps.h:174:14> 'int'
|   |       |                                                         | `-DeclRefExpr 0x1531e8258c8 <col:14> 'int' EnumConstant 0x1531e7fcfb0 'OPT_V_NO_CHECK_TIME' 'int'
|   |       |                                                         `-CaseStmt 0x1531e825960 <line:175:9, .//openssl//file_jk/after\apps\s_client.c:1024:22>
|   |       |                                                           |-ConstantExpr 0x1531e825948 <.//openssl//file_jk/after\apps/apps.h:175:14> 'int'
|   |       |                                                           | `-DeclRefExpr 0x1531e825928 <col:14> 'int' EnumConstant 0x1531e7fd060 'OPT_V_ALLOW_PROXY_CERTS' 'int'
|   |       |                                                           `-IfStmt 0x1531e8259d8 <.//openssl//file_jk/after\apps\s_client.c:1023:13, line:1024:22>
|   |       |                                                             |-OpaqueValueExpr 0x1531e8259c0 <<invalid sloc>> '_Bool'
|   |       |                                                             `-GotoStmt 0x1531e8259a8 <col:17, col:22> 'end' 0x1531e818c40
|   |       |-UnaryOperator 0x1531e825a28 <line:1025:13, col:23> 'int' postfix '++'
|   |       | `-DeclRefExpr 0x1531e8259f0 <col:13> 'int' lvalue Var 0x1531e81cf20 'vpmtouched' 'int'
|   |       |-BreakStmt 0x1531e825a40 <line:1026:13>
|   |       |-CaseStmt 0x1531e825a80 <line:1027:9, .//openssl//file_jk/after\apps/apps.h:198:41>
|   |       | |-ConstantExpr 0x1531e825a68 <col:9> 'int'
|   |       | | `-DeclRefExpr 0x1531e825a48 <col:9> 'int' EnumConstant 0x1531e7fd150 'OPT_X__FIRST' 'int'
|   |       | `-CaseStmt 0x1531e825ae0 <col:23, col:41>
|   |       |   |-ConstantExpr 0x1531e825ac8 <col:28> 'int'
|   |       |   | `-DeclRefExpr 0x1531e825aa8 <col:28> 'int' EnumConstant 0x1531e7fd3b8 'OPT_X__LAST' 'int'
|   |       |   `-BreakStmt 0x1531e825b08 <col:41>
|   |       |-CaseStmt 0x1531e825b48 <line:199:9, .//openssl//file_jk/after\apps\s_client.c:1029:22>
|   |       | |-ConstantExpr 0x1531e825b30 <.//openssl//file_jk/after\apps/apps.h:199:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e825b10 <col:14> 'int' EnumConstant 0x1531e7fd1a8 'OPT_X_KEY' 'int'
|   |       | `-CaseStmt 0x1531e825ba8 <line:200:9, .//openssl//file_jk/after\apps\s_client.c:1029:22>
|   |       |   |-ConstantExpr 0x1531e825b90 <.//openssl//file_jk/after\apps/apps.h:200:14> 'int'
|   |       |   | `-DeclRefExpr 0x1531e825b70 <col:14> 'int' EnumConstant 0x1531e7fd200 'OPT_X_CERT' 'int'
|   |       |   `-CaseStmt 0x1531e825c08 <line:201:9, .//openssl//file_jk/after\apps\s_client.c:1029:22>
|   |       |     |-ConstantExpr 0x1531e825bf0 <.//openssl//file_jk/after\apps/apps.h:201:14> 'int'
|   |       |     | `-DeclRefExpr 0x1531e825bd0 <col:14> 'int' EnumConstant 0x1531e7fd258 'OPT_X_CHAIN' 'int'
|   |       |     `-CaseStmt 0x1531e825c68 <line:202:9, .//openssl//file_jk/after\apps\s_client.c:1029:22>
|   |       |       |-ConstantExpr 0x1531e825c50 <.//openssl//file_jk/after\apps/apps.h:202:14> 'int'
|   |       |       | `-DeclRefExpr 0x1531e825c30 <col:14> 'int' EnumConstant 0x1531e7fd2b0 'OPT_X_CHAIN_BUILD' 'int'
|   |       |       `-CaseStmt 0x1531e825cc8 <line:203:9, .//openssl//file_jk/after\apps\s_client.c:1029:22>
|   |       |         |-ConstantExpr 0x1531e825cb0 <.//openssl//file_jk/after\apps/apps.h:203:14> 'int'
|   |       |         | `-DeclRefExpr 0x1531e825c90 <col:14> 'int' EnumConstant 0x1531e7fd308 'OPT_X_CERTFORM' 'int'
|   |       |         `-CaseStmt 0x1531e825d28 <line:204:9, .//openssl//file_jk/after\apps\s_client.c:1029:22>
|   |       |           |-ConstantExpr 0x1531e825d10 <.//openssl//file_jk/after\apps/apps.h:204:14> 'int'
|   |       |           | `-DeclRefExpr 0x1531e825cf0 <col:14> 'int' EnumConstant 0x1531e7fd360 'OPT_X_KEYFORM' 'int'
|   |       |           `-IfStmt 0x1531e825ee0 <.//openssl//file_jk/after\apps\s_client.c:1028:13, line:1029:22>
|   |       |             |-UnaryOperator 0x1531e825eb0 <line:1028:17, col:37> 'int' prefix '!' cannot overflow
|   |       |             | `-CallExpr 0x1531e825e50 <col:18, col:37> 'int'
|   |       |             |   |-ImplicitCastExpr 0x1531e825e38 <col:18> 'int (*)(int, SSL_EXCERT **)' <FunctionToPointerDecay>
|   |       |             |   | `-DeclRefExpr 0x1531e825d50 <col:18> 'int (int, SSL_EXCERT **)' Function 0x1531e7e04f0 'args_excert' 'int (int, SSL_EXCERT **)'
|   |       |             |   |-ImplicitCastExpr 0x1531e825e98 <col:30> 'int' <IntegralCast>
|   |       |             |   | `-ImplicitCastExpr 0x1531e825e80 <col:30> 'OPTION_CHOICE':'enum OPTION_choice' <LValueToRValue>
|   |       |             |   |   `-DeclRefExpr 0x1531e825d70 <col:30> 'OPTION_CHOICE':'enum OPTION_choice' lvalue Var 0x1531e81e160 'o' 'OPTION_CHOICE':'enum OPTION_choice'
|   |       |             |   `-UnaryOperator 0x1531e825dc8 <col:33, col:34> 'SSL_EXCERT **' prefix '&' cannot overflow
|   |       |             |     `-DeclRefExpr 0x1531e825d90 <col:34> 'SSL_EXCERT *' lvalue Var 0x1531e803c28 'exc' 'SSL_EXCERT *'
|   |       |             `-GotoStmt 0x1531e825ec8 <line:1029:17, col:22> 'end' 0x1531e818c40
|   |       |-BreakStmt 0x1531e825ef8 <line:1030:13>
|   |       |-CaseStmt 0x1531e825f38 <line:1031:9, line:1032:22>
|   |       | |-ConstantExpr 0x1531e825f20 <line:1031:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e825f00 <col:14> 'int' EnumConstant 0x1531e7ecef0 'OPT_PREXIT' 'int'
|   |       | `-BinaryOperator 0x1531e825fc0 <line:1032:13, col:22> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e825f60 <col:13> 'int' lvalue Var 0x1531e81cc78 'prexit' 'int'
|   |       |   `-IntegerLiteral 0x1531e825f98 <col:22> 'int' 1
|   |       |-BreakStmt 0x1531e825fe0 <line:1033:13>
|   |       |-CaseStmt 0x1531e826020 <line:1034:9, line:1035:20>
|   |       | |-ConstantExpr 0x1531e826008 <line:1034:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e825fe8 <col:14> 'int' EnumConstant 0x1531e7ecf48 'OPT_CRLF' 'int'
|   |       | `-BinaryOperator 0x1531e8260a8 <line:1035:13, col:20> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e826048 <col:13> 'int' lvalue Var 0x1531e81ca40 'crlf' 'int'
|   |       |   `-IntegerLiteral 0x1531e826080 <col:20> 'int' 1
|   |       |-BreakStmt 0x1531e8260c8 <line:1036:13>
|   |       |-CaseStmt 0x1531e826108 <line:1037:9, line:1038:35>
|   |       | |-ConstantExpr 0x1531e8260f0 <line:1037:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8260d0 <col:14> 'int' EnumConstant 0x1531e7ecfa0 'OPT_QUIET' 'int'
|   |       | `-BinaryOperator 0x1531e8261d0 <line:1038:13, col:35> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e826130 <col:13> 'int' lvalue Var 0x1531e7e1038 'c_quiet' 'int'
|   |       |   `-BinaryOperator 0x1531e8261b0 <col:23, col:35> 'int' '='
|   |       |     |-DeclRefExpr 0x1531e826150 <col:23> 'int' lvalue Var 0x1531e814010 'c_ign_eof' 'int'
|   |       |     `-IntegerLiteral 0x1531e826188 <col:35> 'int' 1
|   |       |-BreakStmt 0x1531e8261f0 <line:1039:13>
|   |       |-CaseStmt 0x1531e826230 <line:1040:9, line:1041:22>
|   |       | |-ConstantExpr 0x1531e826218 <line:1040:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8261f8 <col:14> 'int' EnumConstant 0x1531e7ecff8 'OPT_NBIO' 'int'
|   |       | `-BinaryOperator 0x1531e8262a0 <line:1041:13, col:22> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e826258 <col:13> 'int' lvalue Var 0x1531e813ec0 'c_nbio' 'int'
|   |       |   `-IntegerLiteral 0x1531e826278 <col:22> 'int' 1
|   |       |-BreakStmt 0x1531e8262c0 <line:1042:13>
|   |       |-CaseStmt 0x1531e826300 <line:1043:9, line:1044:26>
|   |       | |-ConstantExpr 0x1531e8262e8 <line:1043:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8262c8 <col:14> 'int' EnumConstant 0x1531e7fdd40 'OPT_NOCMDS' 'int'
|   |       | `-BinaryOperator 0x1531e826388 <line:1044:13, col:26> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e826328 <col:13> 'int' lvalue Var 0x1531e81d640 'cmdletters' 'int'
|   |       |   `-IntegerLiteral 0x1531e826360 <col:26> 'int' 0
|   |       |-BreakStmt 0x1531e8263a8 <line:1045:13>
|   |       |-CaseStmt 0x1531e8263e8 <line:1046:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e8263d0 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8263b0 <col:14> 'int' EnumConstant 0x1531e7ed3c0 'OPT_ENGINE' 'int'
|   |       | `-NullStmt 0x1531e826490 <<invalid sloc>>
|   |       |-BreakStmt 0x1531e826498 <line:1048:13>
|   |       |-CaseStmt 0x1531e8264d8 <line:1049:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e8264c0 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8264a0 <col:14> 'int' EnumConstant 0x1531e7ed050 'OPT_SSL_CLIENT_ENGINE' 'int'
|   |       | `-NullStmt 0x1531e8266a8 <<invalid sloc>>
|   |       |-IfStmt 0x1531e8267e0 <line:1052:13, line:1055:13>
|   |       | |-OpaqueValueExpr 0x1531e8267c8 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x1531e8267b0 <line:1052:44, line:1055:13>
|   |       |   `-GotoStmt 0x1531e826798 <line:1054:17, col:22> 'opthelp' 0x1531e814a50
|   |       |-BreakStmt 0x1531e8267f8 <line:1057:13>
|   |       |-CaseStmt 0x1531e826838 <line:1058:9, line:1059:30>
|   |       | |-ConstantExpr 0x1531e826820 <line:1058:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e826800 <col:14> 'int' EnumConstant 0x1531e7ed0a8 'OPT_RAND' 'int'
|   |       | `-BinaryOperator 0x1531e8268f0 <line:1059:13, col:30> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e826860 <col:13> 'char *' lvalue Var 0x1531e81b580 'inrand' 'char *'
|   |       |   `-CallExpr 0x1531e8268d0 <col:22, col:30> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e8268b8 <col:22> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e826898 <col:22> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e826910 <line:1060:13>
|   |       |-CaseStmt 0x1531e826950 <line:1061:9, line:1062:25>
|   |       | |-ConstantExpr 0x1531e826938 <line:1061:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e826918 <col:14> 'int' EnumConstant 0x1531e7ed100 'OPT_IGN_EOF' 'int'
|   |       | `-BinaryOperator 0x1531e8269c0 <line:1062:13, col:25> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e826978 <col:13> 'int' lvalue Var 0x1531e814010 'c_ign_eof' 'int'
|   |       |   `-IntegerLiteral 0x1531e826998 <col:25> 'int' 1
|   |       |-BreakStmt 0x1531e8269e0 <line:1063:13>
|   |       |-CaseStmt 0x1531e826a20 <line:1064:9, line:1065:25>
|   |       | |-ConstantExpr 0x1531e826a08 <line:1064:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8269e8 <col:14> 'int' EnumConstant 0x1531e7ed158 'OPT_NO_IGN_EOF' 'int'
|   |       | `-BinaryOperator 0x1531e826a90 <line:1065:13, col:25> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e826a48 <col:13> 'int' lvalue Var 0x1531e814010 'c_ign_eof' 'int'
|   |       |   `-IntegerLiteral 0x1531e826a68 <col:25> 'int' 0
|   |       |-BreakStmt 0x1531e826ab0 <line:1066:13>
|   |       |-CaseStmt 0x1531e826af0 <line:1067:9, line:1068:23>
|   |       | |-ConstantExpr 0x1531e826ad8 <line:1067:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e826ab8 <col:14> 'int' EnumConstant 0x1531e7ed1b0 'OPT_DEBUG' 'int'
|   |       | `-BinaryOperator 0x1531e826b60 <line:1068:13, col:23> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e826b18 <col:13> 'int' lvalue Var 0x1531e7e0bb8 'c_debug' 'int'
|   |       |   `-IntegerLiteral 0x1531e826b38 <col:23> 'int' 1
|   |       |-BreakStmt 0x1531e826b80 <line:1069:13>
|   |       |-CaseStmt 0x1531e826bc0 <line:1070:9, line:1071:29>
|   |       | |-ConstantExpr 0x1531e826ba8 <line:1070:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e826b88 <col:14> 'int' EnumConstant 0x1531e7ed208 'OPT_TLSEXTDEBUG' 'int'
|   |       | `-BinaryOperator 0x1531e826c48 <line:1071:13, col:29> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e826be8 <col:13> 'int' lvalue Var 0x1531e8181e0 'c_tlsextdebug' 'int'
|   |       |   `-IntegerLiteral 0x1531e826c20 <col:29> 'int' 1
|   |       |-BreakStmt 0x1531e826c68 <line:1072:13>
|   |       |-CaseStmt 0x1531e826ca8 <line:1073:9, line:1075:28>
|   |       | |-ConstantExpr 0x1531e826c90 <line:1073:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e826c70 <col:14> 'int' EnumConstant 0x1531e7ed260 'OPT_STATUS' 'int'
|   |       | `-BinaryOperator 0x1531e826d30 <line:1075:13, col:28> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e826cd0 <col:13> 'int' lvalue Var 0x1531e8182a0 'c_status_req' 'int'
|   |       |   `-IntegerLiteral 0x1531e826d08 <col:28> 'int' 1
|   |       |-BreakStmt 0x1531e826d50 <line:1077:13>
|   |       |-CaseStmt 0x1531e826d90 <line:1078:9, line:1082:13>
|   |       | |-ConstantExpr 0x1531e826d78 <line:1078:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e826d58 <col:14> 'int' EnumConstant 0x1531e7ed2b8 'OPT_WDEBUG' 'int'
|   |       | `-BreakStmt 0x1531e826db8 <line:1082:13>
|   |       |-CaseStmt 0x1531e826df8 <line:1083:9, line:1084:21>
|   |       | |-ConstantExpr 0x1531e826de0 <line:1083:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e826dc0 <col:14> 'int' EnumConstant 0x1531e7ed310 'OPT_MSG' 'int'
|   |       | `-BinaryOperator 0x1531e826e80 <line:1084:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e826e20 <col:13> 'int' lvalue Var 0x1531e813f68 'c_msg' 'int'
|   |       |   `-IntegerLiteral 0x1531e826e58 <col:21> 'int' 1
|   |       |-BreakStmt 0x1531e826ea0 <line:1085:13>
|   |       |-CaseStmt 0x1531e826ee0 <line:1086:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e826ec8 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e826ea8 <col:14> 'int' EnumConstant 0x1531e7ed368 'OPT_MSGFILE' 'int'
|   |       | `-NullStmt 0x1531e8270f0 <<invalid sloc>>
|   |       |-BreakStmt 0x1531e8270f8 <line:1088:13>
|   |       |-CaseStmt 0x1531e827138 <line:1089:9, line:1091:21>
|   |       | |-ConstantExpr 0x1531e827120 <line:1089:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e827100 <col:14> 'int' EnumConstant 0x1531e7ed418 'OPT_TRACE' 'int'
|   |       | `-BinaryOperator 0x1531e8271a8 <line:1091:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e827160 <col:13> 'int' lvalue Var 0x1531e813f68 'c_msg' 'int'
|   |       |   `-IntegerLiteral 0x1531e827180 <col:21> 'int' 2
|   |       |-BreakStmt 0x1531e8271c8 <line:1093:13>
|   |       |-CaseStmt 0x1531e827208 <line:1094:9, line:1095:22>
|   |       | |-ConstantExpr 0x1531e8271f0 <line:1094:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8271d0 <col:14> 'int' EnumConstant 0x1531e7ed470 'OPT_SECURITY_DEBUG' 'int'
|   |       | `-BinaryOperator 0x1531e827290 <line:1095:13, col:22> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e827230 <col:13> 'int' lvalue Var 0x1531e81cd38 'sdebug' 'int'
|   |       |   `-IntegerLiteral 0x1531e827268 <col:22> 'int' 1
|   |       |-BreakStmt 0x1531e8272b0 <line:1096:13>
|   |       |-CaseStmt 0x1531e8272f0 <line:1097:9, line:1098:22>
|   |       | |-ConstantExpr 0x1531e8272d8 <line:1097:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8272b8 <col:14> 'int' EnumConstant 0x1531e7ed4c8 'OPT_SECURITY_DEBUG_VERBOSE' 'int'
|   |       | `-BinaryOperator 0x1531e827360 <line:1098:13, col:22> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e827318 <col:13> 'int' lvalue Var 0x1531e81cd38 'sdebug' 'int'
|   |       |   `-IntegerLiteral 0x1531e827338 <col:22> 'int' 2
|   |       |-BreakStmt 0x1531e827380 <line:1099:13>
|   |       |-CaseStmt 0x1531e8273c0 <line:1100:9, line:1101:27>
|   |       | |-ConstantExpr 0x1531e8273a8 <line:1100:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e827388 <col:14> 'int' EnumConstant 0x1531e7ed520 'OPT_SHOWCERTS' 'int'
|   |       | `-BinaryOperator 0x1531e827430 <line:1101:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e8273e8 <col:13> 'int' lvalue Var 0x1531e7e0c78 'c_showcerts' 'int'
|   |       |   `-IntegerLiteral 0x1531e827408 <col:27> 'int' 1
|   |       |-BreakStmt 0x1531e827450 <line:1102:13>
|   |       |-CaseStmt 0x1531e827490 <line:1103:9, line:1104:25>
|   |       | |-ConstantExpr 0x1531e827478 <line:1103:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e827458 <col:14> 'int' EnumConstant 0x1531e7ed578 'OPT_NBIO_TEST' 'int'
|   |       | `-BinaryOperator 0x1531e827518 <line:1104:13, col:25> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e8274b8 <col:13> 'int' lvalue Var 0x1531e81d1d0 'nbio_test' 'int'
|   |       |   `-IntegerLiteral 0x1531e8274f0 <col:25> 'int' 1
|   |       |-BreakStmt 0x1531e827538 <line:1105:13>
|   |       |-CaseStmt 0x1531e827578 <line:1106:9, line:1107:21>
|   |       | |-ConstantExpr 0x1531e827560 <line:1106:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e827540 <col:14> 'int' EnumConstant 0x1531e7ed5d0 'OPT_STATE' 'int'
|   |       | `-BinaryOperator 0x1531e827600 <line:1107:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e8275a0 <col:13> 'int' lvalue Var 0x1531e81d438 'state' 'int'
|   |       |   `-IntegerLiteral 0x1531e8275d8 <col:21> 'int' 1
|   |       |-BreakStmt 0x1531e827620 <line:1108:13>
|   |       |-CaseStmt 0x1531e8316c0 <line:1110:9, line:1111:36>
|   |       | |-ConstantExpr 0x1531e827648 <line:1110:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e827628 <col:14> 'int' EnumConstant 0x1531e7ed628 'OPT_PSK_IDENTITY' 'int'
|   |       | `-BinaryOperator 0x1531e831760 <line:1111:13, col:36> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e8316e8 <col:13> 'char *' lvalue Var 0x1531e7ea4f8 'psk_identity' 'char *'
|   |       |   `-CallExpr 0x1531e831740 <col:28, col:36> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e831728 <col:28> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e831708 <col:28> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e831780 <line:1112:13>
|   |       |-CaseStmt 0x1531e8317c0 <line:1113:9, line:1119:13>
|   |       | |-ConstantExpr 0x1531e8317a8 <line:1113:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e831788 <col:14> 'int' EnumConstant 0x1531e7ed680 'OPT_PSK' 'int'
|   |       | `-ForStmt 0x1531e831bc0 <line:1114:13, line:1119:13>
|   |       |   |-BinaryOperator 0x1531e8318b8 <line:1114:18, col:40> 'char *' '='
|   |       |   | |-DeclRefExpr 0x1531e8317e8 <col:18> 'char *' lvalue Var 0x1531e81bed8 'p' 'char *'
|   |       |   | `-BinaryOperator 0x1531e831898 <col:22, col:40> 'char *' '='
|   |       |   |   |-DeclRefExpr 0x1531e831820 <col:22> 'char *' lvalue Var 0x1531e7ee6d8 'psk_key' 'char *'
|   |       |   |   `-CallExpr 0x1531e831878 <col:32, col:40> 'char *'
|   |       |   |     `-ImplicitCastExpr 0x1531e831860 <col:32> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |   |       `-DeclRefExpr 0x1531e831840 <col:32> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |   |-<<<NULL>>>
|   |       |   |-ImplicitCastExpr 0x1531e831928 <col:43, col:44> 'char' <LValueToRValue>
|   |       |   | `-UnaryOperator 0x1531e831910 <col:43, col:44> 'char' lvalue prefix '*' cannot overflow
|   |       |   |   `-ImplicitCastExpr 0x1531e8318f8 <col:44> 'char *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x1531e8318d8 <col:44> 'char *' lvalue Var 0x1531e81bed8 'p' 'char *'
|   |       |   |-UnaryOperator 0x1531e831960 <col:47, col:48> 'char *' postfix '++'
|   |       |   | `-DeclRefExpr 0x1531e831940 <col:47> 'char *' lvalue Var 0x1531e81bed8 'p' 'char *'
|   |       |   `-CompoundStmt 0x1531e831ba0 <col:52, line:1119:13>
|   |       |     |-IfStmt 0x1531e831b00 <line:1115:17, line:1116:21>
|   |       |     | |-CallExpr 0x1531e831ab8 <line:1115:21, col:37> 'int'
|   |       |     | | |-ImplicitCastExpr 0x1531e831aa0 <col:21> 'int (*)(int)' <FunctionToPointerDecay>
|   |       |     | | | `-DeclRefExpr 0x1531e831978 <col:21> 'int (int)' Function 0x1531e6f0560 'isxdigit' 'int (int)'
|   |       |     | | `-ImplicitCastExpr 0x1531e831ae0 <.//openssl//file_jk/after\apps/apps.h:41:16, col:35> 'int' <IntegralCast>
|   |       |     | |   `-ParenExpr 0x1531e831a80 <col:16, col:35> 'unsigned char'
|   |       |     | |     `-CStyleCastExpr 0x1531e831a58 <col:17, col:34> 'unsigned char' <IntegralCast>
|   |       |     | |       `-ImplicitCastExpr 0x1531e831a40 <col:32, col:34> 'char' <LValueToRValue> part_of_explicit_cast
|   |       |     | |         `-ParenExpr 0x1531e831a20 <col:32, col:34> 'char' lvalue
|   |       |     | |           `-UnaryOperator 0x1531e8319d0 <.//openssl//file_jk/after\apps\s_client.c:1115:34, col:35> 'char' lvalue prefix '*' cannot overflow
|   |       |     | |             `-ImplicitCastExpr 0x1531e8319b8 <col:35> 'char *' <LValueToRValue>
|   |       |     | |               `-DeclRefExpr 0x1531e831998 <col:35> 'char *' lvalue Var 0x1531e81bed8 'p' 'char *'
|   |       |     | `-ContinueStmt 0x1531e831af8 <line:1116:21>
|   |       |     `-GotoStmt 0x1531e831b88 <line:1118:17, col:22> 'end' 0x1531e818c40
|   |       |-BreakStmt 0x1531e831bf8 <line:1120:13>
|   |       |-CaseStmt 0x1531e831c38 <line:1123:9, line:1124:40>
|   |       | |-ConstantExpr 0x1531e831c20 <line:1123:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e831c00 <col:14> 'int' EnumConstant 0x1531e7ed6d8 'OPT_SRPUSER' 'int'
|   |       | `-BinaryOperator 0x1531e831d20 <line:1124:13, col:40> 'char *' '='
|   |       |   |-MemberExpr 0x1531e831c98 <col:13, col:21> 'char *' lvalue .srplogin 0x1531e7e9308
|   |       |   | `-DeclRefExpr 0x1531e831c60 <col:13> 'SRP_ARG':'struct srp_arg_st' lvalue Var 0x1531e813038 'srp_arg' 'SRP_ARG':'struct srp_arg_st'
|   |       |   `-CallExpr 0x1531e831d00 <col:32, col:40> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e831ce8 <col:32> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e831cc8 <col:32> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e831d98 <line:1127:13>
|   |       |-CaseStmt 0x1531e831dd8 <line:1128:9, line:1129:31>
|   |       | |-ConstantExpr 0x1531e831dc0 <line:1128:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e831da0 <col:14> 'int' EnumConstant 0x1531e7ed730 'OPT_SRPPASS' 'int'
|   |       | `-BinaryOperator 0x1531e831e90 <line:1129:13, col:31> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e831e00 <col:13> 'char *' lvalue Var 0x1531e812e48 'srppass' 'char *'
|   |       |   `-CallExpr 0x1531e831e70 <col:23, col:31> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e831e58 <col:23> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e831e38 <col:23> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e831ef0 <line:1132:13>
|   |       |-CaseStmt 0x1531e831f30 <line:1133:9, line:1134:46>
|   |       | |-ConstantExpr 0x1531e831f18 <line:1133:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e831ef8 <col:14> 'int' EnumConstant 0x1531e7ed788 'OPT_SRP_STRENGTH' 'int'
|   |       | `-BinaryOperator 0x1531e832078 <line:1134:13, col:46> 'int' '='
|   |       |   |-MemberExpr 0x1531e831f78 <col:13, col:21> 'int' lvalue .strength 0x1531e7e94c8
|   |       |   | `-DeclRefExpr 0x1531e831f58 <col:13> 'SRP_ARG':'struct srp_arg_st' lvalue Var 0x1531e813038 'srp_arg' 'SRP_ARG':'struct srp_arg_st'
|   |       |   `-CallExpr 0x1531e832038 <col:32, col:46> 'int'
|   |       |     |-ImplicitCastExpr 0x1531e832020 <col:32> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x1531e831fa8 <col:32> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x1531e7b1bf0 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |       |     `-ImplicitCastExpr 0x1531e832060 <col:37, col:45> 'const char *' <NoOp>
|   |       |       `-CallExpr 0x1531e832000 <col:37, col:45> 'char *'
|   |       |         `-ImplicitCastExpr 0x1531e831fe8 <col:37> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |           `-DeclRefExpr 0x1531e831fc8 <col:37> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e8321f8 <line:1139:13>
|   |       |-CaseStmt 0x1531e832238 <line:1140:9, line:1141:28>
|   |       | |-ConstantExpr 0x1531e832220 <line:1140:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832200 <col:14> 'int' EnumConstant 0x1531e7ed7e0 'OPT_SRP_LATEUSER' 'int'
|   |       | `-BinaryOperator 0x1531e8322c0 <line:1141:13, col:28> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e832260 <col:13> 'int' lvalue Var 0x1531e812f80 'srp_lateuser' 'int'
|   |       |   `-IntegerLiteral 0x1531e832298 <col:28> 'int' 1
|   |       |-BreakStmt 0x1531e832320 <line:1144:13>
|   |       |-CaseStmt 0x1531e832360 <line:1145:9, line:1146:27>
|   |       | |-ConstantExpr 0x1531e832348 <line:1145:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832328 <col:14> 'int' EnumConstant 0x1531e7ed838 'OPT_SRP_MOREGROUPS' 'int'
|   |       | `-BinaryOperator 0x1531e832400 <line:1146:13, col:27> 'int' '='
|   |       |   |-MemberExpr 0x1531e8323a8 <col:13, col:21> 'int' lvalue .amp 0x1531e7e9458
|   |       |   | `-DeclRefExpr 0x1531e832388 <col:13> 'SRP_ARG':'struct srp_arg_st' lvalue Var 0x1531e813038 'srp_arg' 'SRP_ARG':'struct srp_arg_st'
|   |       |   `-IntegerLiteral 0x1531e8323d8 <col:27> 'int' 1
|   |       |-BreakStmt 0x1531e832460 <line:1149:13>
|   |       |-CaseStmt 0x1531e8324a0 <line:1151:9, line:1152:34>
|   |       | |-ConstantExpr 0x1531e832488 <line:1151:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832468 <col:14> 'int' EnumConstant 0x1531e7ed8e8 'OPT_SSL_CONFIG' 'int'
|   |       | `-BinaryOperator 0x1531e832570 <line:1152:13, col:34> 'const char *' '='
|   |       |   |-DeclRefExpr 0x1531e8324c8 <col:13> 'const char *' lvalue Var 0x1531e8128a8 'ssl_config' 'const char *'
|   |       |   `-ImplicitCastExpr 0x1531e832558 <col:26, col:34> 'const char *' <NoOp>
|   |       |     `-CallExpr 0x1531e832538 <col:26, col:34> 'char *'
|   |       |       `-ImplicitCastExpr 0x1531e832520 <col:26> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |         `-DeclRefExpr 0x1531e832500 <col:26> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e832590 <line:1153:13>
|   |       |-CaseStmt 0x1531e8325d0 <line:1154:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e8325b8 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832598 <col:14> 'int' EnumConstant 0x1531e7ed890 'OPT_SSL3' 'int'
|   |       | `-NullStmt 0x1531e832618 <<invalid sloc>>
|   |       |-BreakStmt 0x1531e832658 <line:1157:13>
|   |       |-CaseStmt 0x1531e832698 <line:1158:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e832680 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832660 <col:14> 'int' EnumConstant 0x1531e7ed940 'OPT_TLS1_2' 'int'
|   |       | `-NullStmt 0x1531e8326e0 <<invalid sloc>>
|   |       |-BreakStmt 0x1531e832708 <line:1161:13>
|   |       |-CaseStmt 0x1531e832748 <line:1162:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e832730 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832710 <col:14> 'int' EnumConstant 0x1531e7ed998 'OPT_TLS1_1' 'int'
|   |       | `-NullStmt 0x1531e832790 <<invalid sloc>>
|   |       |-BreakStmt 0x1531e8327b8 <line:1165:13>
|   |       |-CaseStmt 0x1531e8327f8 <line:1166:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e8327e0 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8327c0 <col:14> 'int' EnumConstant 0x1531e7ed9f0 'OPT_TLS1' 'int'
|   |       | `-NullStmt 0x1531e832840 <<invalid sloc>>
|   |       |-BreakStmt 0x1531e832868 <line:1169:13>
|   |       |-CaseStmt 0x1531e8328a8 <line:1170:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e832890 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832870 <col:14> 'int' EnumConstant 0x1531e7eda48 'OPT_DTLS' 'int'
|   |       | `-NullStmt 0x1531e832a18 <<invalid sloc>>
|   |       |-BreakStmt 0x1531e832a58 <line:1175:13>
|   |       |-CaseStmt 0x1531e832a98 <line:1176:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e832a80 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832a60 <col:14> 'int' EnumConstant 0x1531e7edaa0 'OPT_DTLS1' 'int'
|   |       | `-NullStmt 0x1531e832b18 <<invalid sloc>>
|   |       |-BreakStmt 0x1531e832b80 <line:1183:13>
|   |       |-CaseStmt 0x1531e832bc0 <line:1184:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e832ba8 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832b88 <col:14> 'int' EnumConstant 0x1531e7edaf8 'OPT_DTLS1_2' 'int'
|   |       | `-NullStmt 0x1531e832c40 <<invalid sloc>>
|   |       |-BreakStmt 0x1531e832ca8 <line:1191:13>
|   |       |-CaseStmt 0x1531e832ce8 <line:1192:9, line:1194:31>
|   |       | |-ConstantExpr 0x1531e832cd0 <line:1192:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832cb0 <col:14> 'int' EnumConstant 0x1531e7edb50 'OPT_TIMEOUT' 'int'
|   |       | `-BinaryOperator 0x1531e832d70 <line:1194:13, col:31> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e832d10 <col:13> 'int' lvalue Var 0x1531e8121b0 'enable_timeouts' 'int'
|   |       |   `-IntegerLiteral 0x1531e832d48 <col:31> 'int' 1
|   |       |-BreakStmt 0x1531e832d90 <line:1196:13>
|   |       |-CaseStmt 0x1531e832dd0 <line:1197:9, line:1199:40>
|   |       | |-ConstantExpr 0x1531e832db8 <line:1197:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832d98 <col:14> 'int' EnumConstant 0x1531e7edba8 'OPT_MTU' 'int'
|   |       | `-BinaryOperator 0x1531e832f60 <line:1199:13, col:40> 'long' '='
|   |       |   |-DeclRefExpr 0x1531e832df8 <col:13> 'long' lvalue Var 0x1531e812270 'socket_mtu' 'long'
|   |       |   `-CallExpr 0x1531e832f20 <col:26, col:40> 'long'
|   |       |     |-ImplicitCastExpr 0x1531e832f08 <col:26> 'long (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x1531e832e30 <col:26> 'long (const char *) __attribute__((cdecl))':'long (const char *)' Function 0x1531e7ac100 'atol' 'long (const char *) __attribute__((cdecl))':'long (const char *)'
|   |       |     `-ImplicitCastExpr 0x1531e832f48 <col:31, col:39> 'const char *' <NoOp>
|   |       |       `-CallExpr 0x1531e832e88 <col:31, col:39> 'char *'
|   |       |         `-ImplicitCastExpr 0x1531e832e70 <col:31> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |           `-DeclRefExpr 0x1531e832e50 <col:31> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e832f80 <line:1201:13>
|   |       |-CaseStmt 0x1531e832fc0 <line:1202:9, line:1203:29>
|   |       | |-ConstantExpr 0x1531e832fa8 <line:1202:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e832f88 <col:14> 'int' EnumConstant 0x1531e7fdce8 'OPT_FALLBACKSCSV' 'int'
|   |       | `-BinaryOperator 0x1531e833048 <line:1203:13, col:29> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e832fe8 <col:13> 'int' lvalue Var 0x1531e81dfb0 'fallback_scsv' 'int'
|   |       |   `-IntegerLiteral 0x1531e833020 <col:29> 'int' 1
|   |       |-BreakStmt 0x1531e833068 <line:1204:13>
|   |       |-CaseStmt 0x1531e8330a8 <line:1205:9, line:1207:22>
|   |       | |-ConstantExpr 0x1531e833090 <line:1205:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e833070 <col:14> 'int' EnumConstant 0x1531e7edc00 'OPT_KEYFORM' 'int'
|   |       | `-IfStmt 0x1531e8333a8 <line:1206:13, line:1207:22>
|   |       |   |-UnaryOperator 0x1531e833378 <line:1206:17, col:64> 'int' prefix '!' cannot overflow
|   |       |   | `-CallExpr 0x1531e833310 <col:18, col:64> 'int'
|   |       |   |   |-ImplicitCastExpr 0x1531e8332f8 <col:18> 'int (*)(const char *, unsigned long, int *)' <FunctionToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x1531e8330d0 <col:18> 'int (const char *, unsigned long, int *)' Function 0x1531e8e4480 'opt_format' 'int (const char *, unsigned long, int *)'
|   |       |   |   |-ImplicitCastExpr 0x1531e833348 <col:29, col:37> 'const char *' <NoOp>
|   |       |   |   | `-CallExpr 0x1531e833128 <col:29, col:37> 'char *'
|   |       |   |   |   `-ImplicitCastExpr 0x1531e833110 <col:29> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |   |   |     `-DeclRefExpr 0x1531e8330f0 <col:29> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |   |   |-ImplicitCastExpr 0x1531e833360 <.//openssl//file_jk/after\apps/apps.h:327:26, col:58> 'unsigned long' <IntegralCast>
|   |       |   |   | `-ParenExpr 0x1531e833288 <col:26, col:58> 'long'
|   |       |   |   |   `-BinaryOperator 0x1531e833268 <line:317:34, line:320:43> 'long' '|'
|   |       |   |   |     |-ParenExpr 0x1531e8331b8 <line:317:34, col:43> 'long'
|   |       |   |   |     | `-BinaryOperator 0x1531e833198 <col:35, col:42> 'long' '<<'
|   |       |   |   |     |   |-IntegerLiteral 0x1531e833148 <col:35> 'long' 1
|   |       |   |   |     |   `-IntegerLiteral 0x1531e833170 <col:42> 'int' 1
|   |       |   |   |     `-ParenExpr 0x1531e833248 <line:320:34, col:43> 'long'
|   |       |   |   |       `-BinaryOperator 0x1531e833228 <col:35, col:42> 'long' '<<'
|   |       |   |   |         |-IntegerLiteral 0x1531e8331d8 <col:35> 'long' 1
|   |       |   |   |         `-IntegerLiteral 0x1531e833200 <col:42> 'int' 4
|   |       |   |   `-UnaryOperator 0x1531e8332e0 <.//openssl//file_jk/after\apps\s_client.c:1206:53, col:54> 'int *' prefix '&' cannot overflow
|   |       |   |     `-DeclRefExpr 0x1531e8332a8 <col:54> 'int' lvalue Var 0x1531e81c930 'key_format' 'int'
|   |       |   `-GotoStmt 0x1531e833390 <line:1207:17, col:22> 'opthelp' 0x1531e814a50
|   |       |-BreakStmt 0x1531e8333c0 <line:1208:13>
|   |       |-CaseStmt 0x1531e833400 <line:1209:9, line:1210:31>
|   |       | |-ConstantExpr 0x1531e8333e8 <line:1209:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8333c8 <col:14> 'int' EnumConstant 0x1531e7edc58 'OPT_PASS' 'int'
|   |       | `-BinaryOperator 0x1531e8334b8 <line:1210:13, col:31> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e833428 <col:13> 'char *' lvalue Var 0x1531e81b6b8 'passarg' 'char *'
|   |       |   `-CallExpr 0x1531e833498 <col:23, col:31> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e833480 <col:23> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e833460 <col:23> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e8334d8 <line:1211:13>
|   |       |-CaseStmt 0x1531e833518 <line:1212:9, line:1213:34>
|   |       | |-ConstantExpr 0x1531e833500 <line:1212:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8334e0 <col:14> 'int' EnumConstant 0x1531e7edcb0 'OPT_CERT_CHAIN' 'int'
|   |       | `-BinaryOperator 0x1531e8335d0 <line:1213:13, col:34> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e833540 <col:13> 'char *' lvalue Var 0x1531e81af48 'chain_file' 'char *'
|   |       |   `-CallExpr 0x1531e8335b0 <col:26, col:34> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e833598 <col:26> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e833578 <col:26> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e8335f0 <line:1214:13>
|   |       |-CaseStmt 0x1531e833630 <line:1215:9, line:1216:32>
|   |       | |-ConstantExpr 0x1531e833618 <line:1215:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8335f8 <col:14> 'int' EnumConstant 0x1531e7ede68 'OPT_KEY' 'int'
|   |       | `-BinaryOperator 0x1531e8276a8 <line:1216:13, col:32> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e833658 <col:13> 'char *' lvalue Var 0x1531e81ae28 'key_file' 'char *'
|   |       |   `-CallExpr 0x1531e827688 <col:24, col:32> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e827670 <col:24> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e833690 <col:24> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e8276c8 <line:1217:13>
|   |       |-CaseStmt 0x1531e827708 <line:1218:9, line:1219:25>
|   |       | |-ConstantExpr 0x1531e8276f0 <line:1218:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8276d0 <col:14> 'int' EnumConstant 0x1531e7edec0 'OPT_RECONNECT' 'int'
|   |       | `-BinaryOperator 0x1531e827790 <line:1219:13, col:25> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e827730 <col:13> 'int' lvalue Var 0x1531e81cdf8 'reconnect' 'int'
|   |       |   `-IntegerLiteral 0x1531e827768 <col:25> 'int' 5
|   |       |-BreakStmt 0x1531e8277b0 <line:1220:13>
|   |       |-CaseStmt 0x1531e8277f0 <line:1221:9, line:1222:30>
|   |       | |-ConstantExpr 0x1531e8277d8 <line:1221:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8277b8 <col:14> 'int' EnumConstant 0x1531e7edd08 'OPT_CAPATH' 'int'
|   |       | `-BinaryOperator 0x1531e8278c0 <line:1222:13, col:30> 'const char *' '='
|   |       |   |-DeclRefExpr 0x1531e827818 <col:13> 'const char *' lvalue Var 0x1531e81a490 'CApath' 'const char *'
|   |       |   `-ImplicitCastExpr 0x1531e8278a8 <col:22, col:30> 'const char *' <NoOp>
|   |       |     `-CallExpr 0x1531e827888 <col:22, col:30> 'char *'
|   |       |       `-ImplicitCastExpr 0x1531e827870 <col:22> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |         `-DeclRefExpr 0x1531e827850 <col:22> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e8278e0 <line:1223:13>
|   |       |-CaseStmt 0x1531e827920 <line:1224:9, line:1225:24>
|   |       | |-ConstantExpr 0x1531e827908 <line:1224:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8278e8 <col:14> 'int' EnumConstant 0x1531e7edd60 'OPT_NOCAPATH' 'int'
|   |       | `-BinaryOperator 0x1531e8279a8 <line:1225:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e827948 <col:13> 'int' lvalue Var 0x1531e81c4b8 'noCApath' 'int'
|   |       |   `-IntegerLiteral 0x1531e827980 <col:24> 'int' 1
|   |       |-BreakStmt 0x1531e8279c8 <line:1226:13>
|   |       |-CaseStmt 0x1531e827a08 <line:1227:9, line:1228:32>
|   |       | |-ConstantExpr 0x1531e8279f0 <line:1227:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8279d0 <col:14> 'int' EnumConstant 0x1531e7eddb8 'OPT_CHAINCAPATH' 'int'
|   |       | `-BinaryOperator 0x1531e827ac0 <line:1228:13, col:32> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e827a30 <col:13> 'char *' lvalue Var 0x1531e81b0a0 'chCApath' 'char *'
|   |       |   `-CallExpr 0x1531e827aa0 <col:24, col:32> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e827a88 <col:24> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e827a68 <col:24> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e827ae0 <line:1229:13>
|   |       |-CaseStmt 0x1531e827b20 <line:1230:9, line:1231:33>
|   |       | |-ConstantExpr 0x1531e827b08 <line:1230:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e827ae8 <col:14> 'int' EnumConstant 0x1531e7ede10 'OPT_VERIFYCAPATH' 'int'
|   |       | `-BinaryOperator 0x1531e827bd8 <line:1231:13, col:33> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e827b48 <col:13> 'char *' lvalue Var 0x1531e81b8f8 'vfyCApath' 'char *'
|   |       |   `-CallExpr 0x1531e827bb8 <col:25, col:33> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e827ba0 <col:25> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e827b80 <col:25> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e827bf8 <line:1232:13>
|   |       |-CaseStmt 0x1531e827c38 <line:1233:9, line:1234:27>
|   |       | |-ConstantExpr 0x1531e827c20 <line:1233:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e827c00 <col:14> 'int' EnumConstant 0x1531e7edf18 'OPT_BUILD_CHAIN' 'int'
|   |       | `-BinaryOperator 0x1531e827cc0 <line:1234:13, col:27> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e827c60 <col:13> 'int' lvalue Var 0x1531e81c638 'build_chain' 'int'
|   |       |   `-IntegerLiteral 0x1531e827c98 <col:27> 'int' 1
|   |       |-BreakStmt 0x1531e827ce0 <line:1235:13>
|   |       |-CaseStmt 0x1531e827d20 <line:1236:9, line:1237:30>
|   |       | |-ConstantExpr 0x1531e827d08 <line:1236:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e827ce8 <col:14> 'int' EnumConstant 0x1531e7edf70 'OPT_CAFILE' 'int'
|   |       | `-BinaryOperator 0x1531e827df0 <line:1237:13, col:30> 'const char *' '='
|   |       |   |-DeclRefExpr 0x1531e827d48 <col:13> 'const char *' lvalue Var 0x1531e81a5b0 'CAfile' 'const char *'
|   |       |   `-ImplicitCastExpr 0x1531e827dd8 <col:22, col:30> 'const char *' <NoOp>
|   |       |     `-CallExpr 0x1531e827db8 <col:22, col:30> 'char *'
|   |       |       `-ImplicitCastExpr 0x1531e827da0 <col:22> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |         `-DeclRefExpr 0x1531e827d80 <col:22> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e827e10 <line:1238:13>
|   |       |-CaseStmt 0x1531e827e50 <line:1239:9, line:1240:24>
|   |       | |-ConstantExpr 0x1531e827e38 <line:1239:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e827e18 <col:14> 'int' EnumConstant 0x1531e7edfc8 'OPT_NOCAFILE' 'int'
|   |       | `-BinaryOperator 0x1531e827ed8 <line:1240:13, col:24> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e827e78 <col:13> 'int' lvalue Var 0x1531e81c560 'noCAfile' 'int'
|   |       |   `-IntegerLiteral 0x1531e827eb0 <col:24> 'int' 1
|   |       |-BreakStmt 0x1531e827ef8 <line:1241:13>
|   |       |-CaseStmt 0x1531e827f38 <line:1243:9, line:1244:29>
|   |       | |-ConstantExpr 0x1531e827f20 <line:1243:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e827f00 <col:14> 'int' EnumConstant 0x1531e7fdea0 'OPT_NOCT' 'int'
|   |       | `-BinaryOperator 0x1531e827fc0 <line:1244:13, col:29> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e827f60 <col:13> 'int' lvalue Var 0x1531e8134d8 'ct_validation' 'int'
|   |       |   `-IntegerLiteral 0x1531e827f98 <col:29> 'int' 0
|   |       |-BreakStmt 0x1531e827fe0 <line:1245:13>
|   |       |-CaseStmt 0x1531e828020 <line:1246:9, line:1247:29>
|   |       | |-ConstantExpr 0x1531e828008 <line:1246:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e827fe8 <col:14> 'int' EnumConstant 0x1531e7fde48 'OPT_CT' 'int'
|   |       | `-BinaryOperator 0x1531e828090 <line:1247:13, col:29> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e828048 <col:13> 'int' lvalue Var 0x1531e8134d8 'ct_validation' 'int'
|   |       |   `-IntegerLiteral 0x1531e828068 <col:29> 'int' 1
|   |       |-BreakStmt 0x1531e8280b0 <line:1248:13>
|   |       |-CaseStmt 0x1531e8280f0 <line:1249:9, line:1250:34>
|   |       | |-ConstantExpr 0x1531e8280d8 <line:1249:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8280b8 <col:14> 'int' EnumConstant 0x1531e7fdef8 'OPT_CTLOG_FILE' 'int'
|   |       | `-BinaryOperator 0x1531e8281a8 <line:1250:13, col:34> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e828118 <col:13> 'char *' lvalue Var 0x1531e8133a0 'ctlog_file' 'char *'
|   |       |   `-CallExpr 0x1531e828188 <col:26, col:34> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e828170 <col:26> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e828150 <col:26> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e8281c8 <line:1251:13>
|   |       |-CaseStmt 0x1531e828208 <line:1253:9, line:1254:32>
|   |       | |-ConstantExpr 0x1531e8281f0 <line:1253:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8281d0 <col:14> 'int' EnumConstant 0x1531e7ee020 'OPT_CHAINCAFILE' 'int'
|   |       | `-BinaryOperator 0x1531e8282c0 <line:1254:13, col:32> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e828230 <col:13> 'char *' lvalue Var 0x1531e81b1c0 'chCAfile' 'char *'
|   |       |   `-CallExpr 0x1531e8282a0 <col:24, col:32> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e828288 <col:24> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e828268 <col:24> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e8282e0 <line:1255:13>
|   |       |-CaseStmt 0x1531e828320 <line:1256:9, line:1257:33>
|   |       | |-ConstantExpr 0x1531e828308 <line:1256:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8282e8 <col:14> 'int' EnumConstant 0x1531e7fc100 'OPT_VERIFYCAFILE' 'int'
|   |       | `-BinaryOperator 0x1531e8283d8 <line:1257:13, col:33> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e828348 <col:13> 'char *' lvalue Var 0x1531e81ba18 'vfyCAfile' 'char *'
|   |       |   `-CallExpr 0x1531e8283b8 <col:25, col:33> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e8283a0 <col:25> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e828380 <col:25> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e8283f8 <line:1258:13>
|   |       |-CaseStmt 0x1531e828438 <line:1259:9, line:1260:40>
|   |       | |-ConstantExpr 0x1531e828420 <line:1259:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e828400 <col:14> 'int' EnumConstant 0x1531e7fddf0 'OPT_DANE_TLSA_DOMAIN' 'int'
|   |       | `-BinaryOperator 0x1531e8284f0 <line:1260:13, col:40> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e828460 <col:13> 'char *' lvalue Var 0x1531e803e90 'dane_tlsa_domain' 'char *'
|   |       |   `-CallExpr 0x1531e8284d0 <col:32, col:40> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e8284b8 <col:32> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e828498 <col:32> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e828510 <line:1261:13>
|   |       |-CaseStmt 0x1531e828550 <line:1262:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x1531e828538 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e828518 <col:14> 'int' EnumConstant 0x1531e7fdf50 'OPT_DANE_TLSA_RRDATA' 'int'
|   |       | `-NullStmt 0x1531e828658 <<invalid sloc>>
|   |       |-IfStmt 0x1531e828820 <line:1265:13, line:1269:13>
|   |       | |-OpaqueValueExpr 0x1531e828808 <<invalid sloc>> '_Bool'
|   |       | `-CompoundStmt 0x1531e8287f0 <line:1266:70, line:1269:13>
|   |       |   `-GotoStmt 0x1531e8287d8 <line:1268:17, col:22> 'end' 0x1531e818c40
|   |       |-BreakStmt 0x1531e828838 <line:1270:13>
|   |       |-CaseStmt 0x1531e828878 <line:1271:9, line:1272:31>
|   |       | |-ConstantExpr 0x1531e828860 <line:1271:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e828840 <col:14> 'int' EnumConstant 0x1531e7fdfa8 'OPT_DANE_EE_NO_NAME' 'int'
|   |       | `-BinaryOperator 0x1531e828900 <line:1272:13, col:31> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e8288a0 <col:13> 'int' lvalue Var 0x1531e804070 'dane_ee_no_name' 'int'
|   |       |   `-IntegerLiteral 0x1531e8288d8 <col:31> 'int' 1
|   |       |-BreakStmt 0x1531e828920 <line:1273:13>
|   |       |-CaseStmt 0x1531e828960 <line:1274:9, line:1276:41>
|   |       | |-ConstantExpr 0x1531e828948 <line:1274:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e828928 <col:14> 'int' EnumConstant 0x1531e7fc158 'OPT_NEXTPROTONEG' 'int'
|   |       | `-BinaryOperator 0x1531e828a30 <line:1276:13, col:41> 'const char *' '='
|   |       |   |-DeclRefExpr 0x1531e828988 <col:13> 'const char *' lvalue Var 0x1531e812d10 'next_proto_neg_in' 'const char *'
|   |       |   `-ImplicitCastExpr 0x1531e828a18 <col:33, col:41> 'const char *' <NoOp>
|   |       |     `-CallExpr 0x1531e8289f8 <col:33, col:41> 'char *'
|   |       |       `-ImplicitCastExpr 0x1531e8289e0 <col:33> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |         `-DeclRefExpr 0x1531e8289c0 <col:33> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e828a50 <line:1278:13>
|   |       |-CaseStmt 0x1531e828a90 <line:1279:9, line:1280:31>
|   |       | |-ConstantExpr 0x1531e828a78 <line:1279:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e828a58 <col:14> 'int' EnumConstant 0x1531e7fc1b0 'OPT_ALPN' 'int'
|   |       | `-BinaryOperator 0x1531e828b60 <line:1280:13, col:31> 'const char *' '='
|   |       |   |-DeclRefExpr 0x1531e828ab8 <col:13> 'const char *' lvalue Var 0x1531e812590 'alpn_in' 'const char *'
|   |       |   `-ImplicitCastExpr 0x1531e828b48 <col:23, col:31> 'const char *' <NoOp>
|   |       |     `-CallExpr 0x1531e828b28 <col:23, col:31> 'char *'
|   |       |       `-ImplicitCastExpr 0x1531e828b10 <col:23> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |         `-DeclRefExpr 0x1531e828af0 <col:23> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e828b80 <line:1281:13>
|   |       |-CaseStmt 0x1531e828bc0 <line:1282:9, line:1283:25>
|   |       | |-ConstantExpr 0x1531e828ba8 <line:1282:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e828b88 <col:14> 'int' EnumConstant 0x1531e7fc208 'OPT_SERVERINFO' 'int'
|   |       | `-BinaryOperator 0x1531e828c60 <line:1283:13, col:25> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e828be8 <col:13> 'char *' lvalue Var 0x1531e81bed8 'p' 'char *'
|   |       |   `-CallExpr 0x1531e828c40 <col:17, col:25> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e828c28 <col:17> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e828c08 <col:17> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BinaryOperator 0x1531e828d98 <line:1284:13, col:27> 'int' '='
|   |       | |-DeclRefExpr 0x1531e828c80 <col:13> 'int' lvalue Var 0x1531e812c58 'len' 'int'
|   |       | `-ImplicitCastExpr 0x1531e828d80 <col:19, col:27> 'int' <IntegralCast>
|   |       |   `-CallExpr 0x1531e828d28 <col:19, col:27> 'unsigned long long'
|   |       |     |-ImplicitCastExpr 0x1531e828d10 <col:19> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x1531e828cb8 <col:19> 'unsigned long long (const char *)' Function 0x1531e739bd0 'strlen' 'unsigned long long (const char *)'
|   |       |     `-ImplicitCastExpr 0x1531e828d68 <col:26> 'const char *' <NoOp>
|   |       |       `-ImplicitCastExpr 0x1531e828d50 <col:26> 'char *' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x1531e828cd8 <col:26> 'char *' lvalue Var 0x1531e81bed8 'p' 'char *'
|   |       |-ForStmt 0x1531e829500 <line:1285:13, line:1292:13>
|   |       | |-BinaryOperator 0x1531e828eb8 <line:1285:18, col:33> 'int' ','
|   |       | | |-BinaryOperator 0x1531e828e18 <col:18, col:26> 'int' '='
|   |       | | | |-DeclRefExpr 0x1531e828db8 <col:18> 'int' lvalue Var 0x1531e812bb0 'start' 'int'
|   |       | | | `-IntegerLiteral 0x1531e828df0 <col:26> 'int' 0
|   |       | | `-BinaryOperator 0x1531e828e98 <col:29, col:33> 'int' '='
|   |       | |   |-DeclRefExpr 0x1531e828e38 <col:29> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |       | |   `-IntegerLiteral 0x1531e828e70 <col:33> 'int' 0
|   |       | |-<<<NULL>>>
|   |       | |-BinaryOperator 0x1531e828f48 <col:36, col:41> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x1531e828f18 <col:36> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1531e828ed8 <col:36> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |       | | `-ImplicitCastExpr 0x1531e828f30 <col:41> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1531e828ef8 <col:41> 'int' lvalue Var 0x1531e812c58 'len' 'int'
|   |       | |-UnaryOperator 0x1531e828f88 <col:46, col:48> 'int' prefix '++'
|   |       | | `-DeclRefExpr 0x1531e828f68 <col:48> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |       | `-CompoundStmt 0x1531e8294e8 <col:51, line:1292:13>
|   |       |   `-IfStmt 0x1531e8294d0 <line:1286:17, line:1291:17>
|   |       |     |-BinaryOperator 0x1531e829128 <line:1286:21, col:41> 'int' '||'
|   |       |     | |-BinaryOperator 0x1531e829010 <col:21, col:26> 'int' '=='
|   |       |     | | |-ImplicitCastExpr 0x1531e828fe0 <col:21> 'int' <LValueToRValue>
|   |       |     | | | `-DeclRefExpr 0x1531e828fa0 <col:21> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |       |     | | `-ImplicitCastExpr 0x1531e828ff8 <col:26> 'int' <LValueToRValue>
|   |       |     | |   `-DeclRefExpr 0x1531e828fc0 <col:26> 'int' lvalue Var 0x1531e812c58 'len' 'int'
|   |       |     | `-BinaryOperator 0x1531e829108 <col:33, col:41> 'int' '=='
|   |       |     |   |-ImplicitCastExpr 0x1531e8290f0 <col:33, col:36> 'int' <IntegralCast>
|   |       |     |   | `-ImplicitCastExpr 0x1531e8290d8 <col:33, col:36> 'char' <LValueToRValue>
|   |       |     |   |   `-ArraySubscriptExpr 0x1531e8290a0 <col:33, col:36> 'char' lvalue
|   |       |     |   |     |-ImplicitCastExpr 0x1531e829070 <col:33> 'char *' <LValueToRValue>
|   |       |     |   |     | `-DeclRefExpr 0x1531e829030 <col:33> 'char *' lvalue Var 0x1531e81bed8 'p' 'char *'
|   |       |     |   |     `-ImplicitCastExpr 0x1531e829088 <col:35> 'int' <LValueToRValue>
|   |       |     |   |       `-DeclRefExpr 0x1531e829050 <col:35> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |       |     |   `-CharacterLiteral 0x1531e8290c0 <col:41> 'int' 44
|   |       |     `-CompoundStmt 0x1531e8294a8 <col:46, line:1291:17>
|   |       |       |-BinaryOperator 0x1531e829328 <line:1287:21, col:72> 'unsigned short' '='
|   |       |       | |-ArraySubscriptExpr 0x1531e8291e8 <col:21, col:54> 'unsigned short' lvalue
|   |       |       | | |-ImplicitCastExpr 0x1531e8291b8 <col:21> 'unsigned short *' <ArrayToPointerDecay>
|   |       |       | | | `-DeclRefExpr 0x1531e829148 <col:21> 'unsigned short [100]' lvalue Var 0x1531e812a70 'serverinfo_types' 'unsigned short [100]'
|   |       |       | | `-ImplicitCastExpr 0x1531e8291d0 <col:38> 'int' <LValueToRValue>
|   |       |       | |   `-DeclRefExpr 0x1531e829180 <col:38> 'int' lvalue Var 0x1531e812b08 'serverinfo_count' 'int'
|   |       |       | `-ImplicitCastExpr 0x1531e829310 <col:58, col:72> 'unsigned short' <IntegralCast>
|   |       |       |   `-CallExpr 0x1531e8292d0 <col:58, col:72> 'int'
|   |       |       |     |-ImplicitCastExpr 0x1531e8292b8 <col:58> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |       |     | `-DeclRefExpr 0x1531e829208 <col:58> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x1531e7b1bf0 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |       |       |     `-ImplicitCastExpr 0x1531e8292f8 <col:63, col:67> 'const char *' <NoOp>
|   |       |       |       `-BinaryOperator 0x1531e829298 <col:63, col:67> 'char *' '+'
|   |       |       |         |-ImplicitCastExpr 0x1531e829268 <col:63> 'char *' <LValueToRValue>
|   |       |       |         | `-DeclRefExpr 0x1531e829228 <col:63> 'char *' lvalue Var 0x1531e81bed8 'p' 'char *'
|   |       |       |         `-ImplicitCastExpr 0x1531e829280 <col:67> 'int' <LValueToRValue>
|   |       |       |           `-DeclRefExpr 0x1531e829248 <col:67> 'int' lvalue Var 0x1531e812bb0 'start' 'int'
|   |       |       |-IfStmt 0x1531e8293d0 <line:1288:21, line:1289:25>
|   |       |       | |-BinaryOperator 0x1531e8293a8 <line:1288:25, line:838:22> 'int' '=='
|   |       |       | | |-UnaryOperator 0x1531e829368 <line:1288:25, col:27> 'int' prefix '++'
|   |       |       | | | `-DeclRefExpr 0x1531e829348 <col:27> 'int' lvalue Var 0x1531e812b08 'serverinfo_count' 'int'
|   |       |       | | `-IntegerLiteral 0x1531e829380 <line:838:22> 'int' 100
|   |       |       | `-BreakStmt 0x1531e8293c8 <line:1289:25>
|   |       |       `-BinaryOperator 0x1531e829488 <line:1290:21, col:33> 'int' '='
|   |       |         |-DeclRefExpr 0x1531e8293e8 <col:21> 'int' lvalue Var 0x1531e812bb0 'start' 'int'
|   |       |         `-BinaryOperator 0x1531e829468 <col:29, col:33> 'int' '+'
|   |       |           |-ImplicitCastExpr 0x1531e829450 <col:29> 'int' <LValueToRValue>
|   |       |           | `-DeclRefExpr 0x1531e829408 <col:29> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |       |           `-IntegerLiteral 0x1531e829428 <col:33> 'int' 1
|   |       |-BreakStmt 0x1531e829538 <line:1293:13>
|   |       |-CaseStmt 0x1531e829578 <line:1294:9, line:1296:22>
|   |       | |-ConstantExpr 0x1531e829560 <line:1294:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e829540 <col:14> 'int' EnumConstant 0x1531e7fc260 'OPT_STARTTLS' 'int'
|   |       | `-IfStmt 0x1531e8337d8 <line:1295:13, line:1296:22>
|   |       |   |-UnaryOperator 0x1531e8337a8 <line:1295:17, col:63> 'int' prefix '!' cannot overflow
|   |       |   | `-CallExpr 0x1531e833740 <col:18, col:63> 'int'
|   |       |   |   |-ImplicitCastExpr 0x1531e833728 <col:18> 'int (*)(const char *, const OPT_PAIR *, int *)' <FunctionToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x1531e8295a0 <col:18> 'int (const char *, const OPT_PAIR *, int *)' Function 0x1531e8e4fd0 'opt_pair' 'int (const char *, const OPT_PAIR *, int *)'
|   |       |   |   |-ImplicitCastExpr 0x1531e833778 <col:27, col:35> 'const char *' <NoOp>
|   |       |   |   | `-CallExpr 0x1531e8295f8 <col:27, col:35> 'char *'
|   |       |   |   |   `-ImplicitCastExpr 0x1531e8295e0 <col:27> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |   |   |     `-DeclRefExpr 0x1531e8295c0 <col:27> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |   |   |-ImplicitCastExpr 0x1531e833790 <col:38> 'const OPT_PAIR *' <ArrayToPointerDecay>
|   |       |   |   | `-DeclRefExpr 0x1531e829618 <col:38> 'const OPT_PAIR [9]' lvalue Var 0x1531e812088 'services' 'const OPT_PAIR [9]'
|   |       |   |   `-UnaryOperator 0x1531e829658 <col:48, col:49> 'int *' prefix '&' cannot overflow
|   |       |   |     `-DeclRefExpr 0x1531e829638 <col:49> 'int' lvalue Var 0x1531e81d850 'starttls_proto' 'int'
|   |       |   `-GotoStmt 0x1531e8337c0 <line:1296:17, col:22> 'end' 0x1531e818c40
|   |       |-BreakStmt 0x1531e8337f0 <line:1297:13>
|   |       |-CaseStmt 0x1531e833830 <line:1298:9, line:1299:34>
|   |       | |-ConstantExpr 0x1531e833818 <line:1298:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8337f8 <col:14> 'int' EnumConstant 0x1531e7fc2b8 'OPT_SERVERNAME' 'int'
|   |       | `-BinaryOperator 0x1531e8338e8 <line:1299:13, col:34> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e833858 <col:13> 'char *' lvalue Var 0x1531e812458 'servername' 'char *'
|   |       |   `-CallExpr 0x1531e8338c8 <col:26, col:34> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e8338b0 <col:26> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e833890 <col:26> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e833908 <line:1300:13>
|   |       |-CaseStmt 0x1531e833948 <line:1301:9, line:1302:37>
|   |       | |-ConstantExpr 0x1531e833930 <line:1301:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e833910 <col:14> 'int' EnumConstant 0x1531e7fc310 'OPT_USE_SRTP' 'int'
|   |       | `-BinaryOperator 0x1531e8339e8 <line:1302:13, col:37> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e833970 <col:13> 'char *' lvalue Var 0x1531e7f6d00 'srtp_profiles' 'char *'
|   |       |   `-CallExpr 0x1531e8339c8 <col:29, col:37> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e8339b0 <col:29> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e833990 <col:29> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e833a08 <line:1303:13>
|   |       |-CaseStmt 0x1531e833a48 <line:1304:9, line:1305:41>
|   |       | |-ConstantExpr 0x1531e833a30 <line:1304:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e833a10 <col:14> 'int' EnumConstant 0x1531e7fc368 'OPT_KEYMATEXPORT' 'int'
|   |       | `-BinaryOperator 0x1531e833ae8 <line:1305:13, col:41> 'char *' '='
|   |       |   |-DeclRefExpr 0x1531e833a70 <col:13> 'char *' lvalue Var 0x1531e7e0d38 'keymatexportlabel' 'char *'
|   |       |   `-CallExpr 0x1531e833ac8 <col:33, col:41> 'char *'
|   |       |     `-ImplicitCastExpr 0x1531e833ab0 <col:33> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |       `-DeclRefExpr 0x1531e833a90 <col:33> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e833b08 <line:1306:13>
|   |       |-CaseStmt 0x1531e833b48 <line:1307:9, line:1308:45>
|   |       | |-ConstantExpr 0x1531e833b30 <line:1307:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e833b10 <col:14> 'int' EnumConstant 0x1531e7fc3c0 'OPT_KEYMATEXPORTLEN' 'int'
|   |       | `-BinaryOperator 0x1531e833c60 <line:1308:13, col:45> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e833b70 <col:13> 'int' lvalue Var 0x1531e7e0e70 'keymatexportlen' 'int'
|   |       |   `-CallExpr 0x1531e833c20 <col:31, col:45> 'int'
|   |       |     |-ImplicitCastExpr 0x1531e833c08 <col:31> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x1531e833b90 <col:31> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x1531e7b1bf0 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |       |     `-ImplicitCastExpr 0x1531e833c48 <col:36, col:44> 'const char *' <NoOp>
|   |       |       `-CallExpr 0x1531e833be8 <col:36, col:44> 'char *'
|   |       |         `-ImplicitCastExpr 0x1531e833bd0 <col:36> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |           `-DeclRefExpr 0x1531e833bb0 <col:36> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e833c80 <line:1309:13>
|   |       |-CaseStmt 0x1531e833cc0 <line:1310:9, line:1311:21>
|   |       | |-ConstantExpr 0x1531e833ca8 <line:1310:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e833c88 <col:14> 'int' EnumConstant 0x1531e7fc470 'OPT_ASYNC' 'int'
|   |       | `-BinaryOperator 0x1531e833d48 <line:1311:13, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e833ce8 <col:13> 'int' lvalue Var 0x1531e813878 'async' 'int'
|   |       |   `-IntegerLiteral 0x1531e833d20 <col:21> 'int' 1
|   |       |-BreakStmt 0x1531e833d68 <line:1312:13>
|   |       |-CaseStmt 0x1531e833da8 <line:1313:9, line:1314:49>
|   |       | |-ConstantExpr 0x1531e833d90 <line:1313:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e833d70 <col:14> 'int' EnumConstant 0x1531e7fc4c8 'OPT_SPLIT_SEND_FRAG' 'int'
|   |       | `-BinaryOperator 0x1531e833ef0 <line:1314:13, col:49> 'unsigned int' '='
|   |       |   |-DeclRefExpr 0x1531e833dd0 <col:13> 'unsigned int' lvalue Var 0x1531e813938 'split_send_fragment' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x1531e833ed8 <col:35, col:49> 'unsigned int' <IntegralCast>
|   |       |     `-CallExpr 0x1531e833e98 <col:35, col:49> 'int'
|   |       |       |-ImplicitCastExpr 0x1531e833e80 <col:35> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |       | `-DeclRefExpr 0x1531e833e08 <col:35> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x1531e7b1bf0 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |       |       `-ImplicitCastExpr 0x1531e833ec0 <col:40, col:48> 'const char *' <NoOp>
|   |       |         `-CallExpr 0x1531e833e60 <col:40, col:48> 'char *'
|   |       |           `-ImplicitCastExpr 0x1531e833e48 <col:40> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |             `-DeclRefExpr 0x1531e833e28 <col:40> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-IfStmt 0x1531e834000 <line:1315:13, line:1321:13>
|   |       | |-BinaryOperator 0x1531e833f88 <line:1315:17, col:40> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x1531e833f58 <col:17> 'unsigned int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1531e833f10 <col:17> 'unsigned int' lvalue Var 0x1531e813938 'split_send_fragment' 'unsigned int'
|   |       | | `-ImplicitCastExpr 0x1531e833f70 <col:40> 'unsigned int' <IntegralCast>
|   |       | |   `-IntegerLiteral 0x1531e833f30 <col:40> 'int' 0
|   |       | `-CompoundStmt 0x1531e833ff0 <col:43, line:1321:13>
|   |       |-BreakStmt 0x1531e834018 <line:1322:13>
|   |       |-CaseStmt 0x1531e834058 <line:1323:9, line:1324:43>
|   |       | |-ConstantExpr 0x1531e834040 <line:1323:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e834020 <col:14> 'int' EnumConstant 0x1531e7fc520 'OPT_MAX_PIPELINES' 'int'
|   |       | `-BinaryOperator 0x1531e8341a0 <line:1324:13, col:43> 'unsigned int' '='
|   |       |   |-DeclRefExpr 0x1531e834080 <col:13> 'unsigned int' lvalue Var 0x1531e813a10 'max_pipelines' 'unsigned int'
|   |       |   `-ImplicitCastExpr 0x1531e834188 <col:29, col:43> 'unsigned int' <IntegralCast>
|   |       |     `-CallExpr 0x1531e834148 <col:29, col:43> 'int'
|   |       |       |-ImplicitCastExpr 0x1531e834130 <col:29> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |       | `-DeclRefExpr 0x1531e8340b8 <col:29> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x1531e7b1bf0 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |       |       `-ImplicitCastExpr 0x1531e834170 <col:34, col:42> 'const char *' <NoOp>
|   |       |         `-CallExpr 0x1531e834110 <col:34, col:42> 'char *'
|   |       |           `-ImplicitCastExpr 0x1531e8340f8 <col:34> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |             `-DeclRefExpr 0x1531e8340d8 <col:34> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       |-BreakStmt 0x1531e8341c0 <line:1325:13>
|   |       |-CaseStmt 0x1531e834200 <line:1326:9, line:1327:42>
|   |       | |-ConstantExpr 0x1531e8341e8 <line:1326:14> 'int'
|   |       | | `-DeclRefExpr 0x1531e8341c8 <col:14> 'int' EnumConstant 0x1531e7fc578 'OPT_READ_BUF' 'int'
|   |       | `-BinaryOperator 0x1531e834330 <line:1327:13, col:42> 'int' '='
|   |       |   |-DeclRefExpr 0x1531e834228 <col:13> 'int' lvalue Var 0x1531e81def0 'read_buf_len' 'int'
|   |       |   `-CallExpr 0x1531e8342f0 <col:28, col:42> 'int'
|   |       |     |-ImplicitCastExpr 0x1531e8342d8 <col:28> 'int (*)(const char *) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x1531e834260 <col:28> 'int (const char *) __attribute__((cdecl))':'int (const char *)' Function 0x1531e7b1bf0 'atoi' 'int (const char *) __attribute__((cdecl))':'int (const char *)'
|   |       |     `-ImplicitCastExpr 0x1531e834318 <col:33, col:41> 'const char *' <NoOp>
|   |       |       `-CallExpr 0x1531e8342b8 <col:33, col:41> 'char *'
|   |       |         `-ImplicitCastExpr 0x1531e8342a0 <col:33> 'char *(*)(void)' <FunctionToPointerDecay>
|   |       |           `-DeclRefExpr 0x1531e834280 <col:33> 'char *(void)' Function 0x1531e8e95d0 'opt_arg' 'char *(void)'
|   |       `-BreakStmt 0x1531e834350 <line:1328:13>
|   |-IfStmt 0x1531e834b58 <line:1331:5, line:1334:5>
|   | |-BinaryOperator 0x1531e834a90 <line:1331:9, col:22> 'int' '>='
|   | | |-ImplicitCastExpr 0x1531e834a78 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e834a30 <col:9> 'int' lvalue Var 0x1531e813e00 'count4or6' 'int'
|   | | `-IntegerLiteral 0x1531e834a50 <col:22> 'int' 2
|   | `-CompoundStmt 0x1531e834b40 <col:25, line:1334:5>
|   |   `-GotoStmt 0x1531e834b28 <line:1333:9, col:14> 'opthelp' 0x1531e814a50
|   |-BinaryOperator 0x1531e834be8 <line:1335:5, col:25> 'int' '='
|   | |-DeclRefExpr 0x1531e834b70 <col:5> 'int' lvalue ParmVar 0x1531e803588 'argc' 'int'
|   | `-CallExpr 0x1531e834bc8 <col:12, col:25> 'int'
|   |   `-ImplicitCastExpr 0x1531e834bb0 <col:12> 'int (*)(void)' <FunctionToPointerDecay>
|   |     `-DeclRefExpr 0x1531e834b90 <col:12> 'int (void)' Function 0x1531e8e9c88 'opt_num_rest' 'int (void)'
|   |-IfStmt 0x1531e834ca0 <line:1336:5, line:1337:14>
|   | |-BinaryOperator 0x1531e834c68 <line:1336:9, col:17> 'int' '!='
|   | | |-ImplicitCastExpr 0x1531e834c50 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e834c08 <col:9> 'int' lvalue ParmVar 0x1531e803588 'argc' 'int'
|   | | `-IntegerLiteral 0x1531e834c28 <col:17> 'int' 0
|   | `-GotoStmt 0x1531e834c88 <line:1337:9, col:14> 'opthelp' 0x1531e814a50
|   |-IfStmt 0x1531e82bed8 <line:1339:5, line:1372:5> has_else
|   | |-ImplicitCastExpr 0x1531e834cd8 <line:1339:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e834cb8 <col:9> 'char *' lvalue Var 0x1531e81aa90 'proxystr' 'char *'
|   | |-CompoundStmt 0x1531e835690 <col:19, line:1356:5>
|   | | |-DeclStmt 0x1531e834d70 <line:1340:9, col:16>
|   | | | `-VarDecl 0x1531e834d08 <col:9, col:13> col:13 used res 'int'
|   | | |-DeclStmt 0x1531e834f10 <line:1341:9, col:48>
|   | | | |-VarDecl 0x1531e834da0 <col:9, col:26> col:15 used tmp_host 'char *' cinit
|   | | | | `-ImplicitCastExpr 0x1531e834e28 <col:26> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1531e834e08 <col:26> 'char *' lvalue Var 0x1531e81b2e0 'host' 'char *'
|   | | | `-VarDecl 0x1531e834e58 <col:9, col:44> col:33 used tmp_port 'char *' cinit
|   | | |   `-ImplicitCastExpr 0x1531e834ee0 <col:44> 'char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1531e834ec0 <col:44> 'char *' lvalue Var 0x1531e81b438 'port' 'char *'
|   | | |-IfStmt 0x1531e8350d0 <line:1342:9, line:1345:9>
|   | | | |-BinaryOperator 0x1531e835000 <line:1342:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x1531e834fd0 <.//openssl//file_jk/after\apps\s_client.c:1342:13> 'char *' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x1531e834f28 <col:13> 'char *' lvalue Var 0x1531e81abb0 'connectstr' 'char *'
|   | | | | `-ImplicitCastExpr 0x1531e834fe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | | | |   `-ParenExpr 0x1531e834fb0 <col:17, col:27> 'void *'
|   | | | |     `-CStyleCastExpr 0x1531e834f88 <col:18, col:26> 'void *' <NullToPointer>
|   | | | |       `-IntegerLiteral 0x1531e834f48 <col:26> 'int' 0
|   | | | `-CompoundStmt 0x1531e8350b8 <.//openssl//file_jk/after\apps\s_client.c:1342:33, line:1345:9>
|   | | |   `-GotoStmt 0x1531e8350a0 <line:1344:13, col:18> 'opthelp' 0x1531e814a50
|   | | |-IfStmt 0x1531e835400 <line:1347:9, line:1348:34>
|   | | | |-BinaryOperator 0x1531e835348 <line:1347:13, col:25> 'int' '!='
|   | | | | |-ImplicitCastExpr 0x1531e835318 <col:13> 'char *' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x1531e8352c0 <col:13> 'char *' lvalue Var 0x1531e834da0 'tmp_host' 'char *'
|   | | | | `-ImplicitCastExpr 0x1531e835330 <col:25> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1531e8352f8 <col:25> 'char *' lvalue Var 0x1531e81b2e0 'host' 'char *'
|   | | | `-CallExpr 0x1531e8353c0 <line:1348:13, col:34> 'int'
|   | | |   |-ImplicitCastExpr 0x1531e8353a8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x1531e835368 <col:13> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   | | |   `-ImplicitCastExpr 0x1531e8353e8 <col:26> 'char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1531e835388 <col:26> 'char *' lvalue Var 0x1531e834da0 'tmp_host' 'char *'
|   | | |-IfStmt 0x1531e835558 <line:1349:9, line:1350:34>
|   | | | |-BinaryOperator 0x1531e8354a0 <line:1349:13, col:25> 'int' '!='
|   | | | | |-ImplicitCastExpr 0x1531e835470 <col:13> 'char *' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x1531e835418 <col:13> 'char *' lvalue Var 0x1531e834e58 'tmp_port' 'char *'
|   | | | | `-ImplicitCastExpr 0x1531e835488 <col:25> 'char *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1531e835450 <col:25> 'char *' lvalue Var 0x1531e81b438 'port' 'char *'
|   | | | `-CallExpr 0x1531e835518 <line:1350:13, col:34> 'int'
|   | | |   |-ImplicitCastExpr 0x1531e835500 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x1531e8354c0 <col:13> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   | | |   `-ImplicitCastExpr 0x1531e835540 <col:26> 'char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1531e8354e0 <col:26> 'char *' lvalue Var 0x1531e834e58 'tmp_port' 'char *'
|   | | `-IfStmt 0x1531e835678 <line:1351:9, line:1355:9>
|   | |   |-UnaryOperator 0x1531e8355a8 <line:1351:13, col:14> 'int' prefix '!' cannot overflow
|   | |   | `-ImplicitCastExpr 0x1531e835590 <col:14> 'int' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1531e835570 <col:14> 'int' lvalue Var 0x1531e834d08 'res' 'int'
|   | |   `-CompoundStmt 0x1531e835660 <col:19, line:1355:9>
|   | |     `-GotoStmt 0x1531e835648 <line:1354:13, col:18> 'end' 0x1531e818c40
|   | `-CompoundStmt 0x1531e82bea0 <line:1356:12, line:1372:5>
|   |   |-DeclStmt 0x1531e82b738 <line:1357:9, col:20>
|   |   | `-VarDecl 0x1531e82b6a8 <col:9, col:19> col:13 used res 'int' cinit
|   |   |   `-IntegerLiteral 0x1531e82b710 <col:19> 'int' 1
|   |   |-DeclStmt 0x1531e82b8d8 <line:1358:9, col:48>
|   |   | |-VarDecl 0x1531e82b768 <col:9, col:26> col:15 used tmp_host 'char *' cinit
|   |   | | `-ImplicitCastExpr 0x1531e82b7f0 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1531e82b7d0 <col:26> 'char *' lvalue Var 0x1531e81b2e0 'host' 'char *'
|   |   | `-VarDecl 0x1531e82b820 <col:9, col:44> col:33 used tmp_port 'char *' cinit
|   |   |   `-ImplicitCastExpr 0x1531e82b8a8 <col:44> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1531e82b888 <col:44> 'char *' lvalue Var 0x1531e81b438 'port' 'char *'
|   |   |-IfStmt 0x1531e82bc10 <line:1362:9, line:1363:34>
|   |   | |-BinaryOperator 0x1531e82bb58 <line:1362:13, col:25> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1531e82bb28 <col:13> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1531e82bad0 <col:13> 'char *' lvalue Var 0x1531e82b768 'tmp_host' 'char *'
|   |   | | `-ImplicitCastExpr 0x1531e82bb40 <col:25> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1531e82bb08 <col:25> 'char *' lvalue Var 0x1531e81b2e0 'host' 'char *'
|   |   | `-CallExpr 0x1531e82bbd0 <line:1363:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x1531e82bbb8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1531e82bb78 <col:13> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   |   |   `-ImplicitCastExpr 0x1531e82bbf8 <col:26> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1531e82bb98 <col:26> 'char *' lvalue Var 0x1531e82b768 'tmp_host' 'char *'
|   |   |-IfStmt 0x1531e82bd68 <line:1364:9, line:1365:34>
|   |   | |-BinaryOperator 0x1531e82bcb0 <line:1364:13, col:25> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1531e82bc80 <col:13> 'char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1531e82bc28 <col:13> 'char *' lvalue Var 0x1531e82b820 'tmp_port' 'char *'
|   |   | | `-ImplicitCastExpr 0x1531e82bc98 <col:25> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1531e82bc60 <col:25> 'char *' lvalue Var 0x1531e81b438 'port' 'char *'
|   |   | `-CallExpr 0x1531e82bd28 <line:1365:13, col:34> 'int'
|   |   |   |-ImplicitCastExpr 0x1531e82bd10 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1531e82bcd0 <col:13> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   |   |   `-ImplicitCastExpr 0x1531e82bd50 <col:26> 'char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1531e82bcf0 <col:26> 'char *' lvalue Var 0x1531e82b820 'tmp_port' 'char *'
|   |   `-IfStmt 0x1531e82be88 <line:1366:9, line:1371:9>
|   |     |-UnaryOperator 0x1531e82bdb8 <line:1366:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x1531e82bda0 <col:14> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1531e82bd80 <col:14> 'int' lvalue Var 0x1531e82b6a8 'res' 'int'
|   |     `-CompoundStmt 0x1531e82be70 <col:19, line:1371:9>
|   |       `-GotoStmt 0x1531e82be58 <line:1370:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e82bfc0 <line:1382:5, line:1385:5>
|   | |-OpaqueValueExpr 0x1531e82bfa8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e82bf90 <line:1382:57, line:1385:5>
|   |   `-GotoStmt 0x1531e82bf78 <line:1384:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e82c090 <line:1387:5, line:1390:5>
|   | |-OpaqueValueExpr 0x1531e82c078 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e82c060 <line:1387:44, line:1390:5>
|   |   `-GotoStmt 0x1531e82c048 <line:1389:9, col:14> 'end' 0x1531e818c40
|   |-BinaryOperator 0x1531e82c138 <line:1393:5, col:26> 'int' '='
|   | |-MemberExpr 0x1531e82c0c8 <col:5, col:16> 'int' lvalue .status 0x1531e7f6fd0
|   | | `-DeclRefExpr 0x1531e82c0a8 <col:5> 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st' lvalue Var 0x1531e7f7130 'next_proto' 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st'
|   | `-UnaryOperator 0x1531e82c120 <col:25, col:26> 'int' prefix '-'
|   |   `-IntegerLiteral 0x1531e82c0f8 <col:26> 'int' 1
|   |-IfStmt 0x1531e82c6c8 <line:1394:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   | |-ImplicitCastExpr 0x1531e82c1d8 <.//openssl//file_jk/after\apps\s_client.c:1394:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e82c1b8 <col:9> 'const char *' lvalue Var 0x1531e812d10 'next_proto_neg_in' 'const char *'
|   | |-CompoundStmt 0x1531e82c598 <col:28, line:1401:5>
|   | | |-BinaryOperator 0x1531e82c3a8 <line:1395:9, line:1396:65> 'unsigned char *' '='
|   | | | |-MemberExpr 0x1531e82c210 <line:1395:9, col:20> 'unsigned char *' lvalue .data 0x1531e7f6ef8
|   | | | | `-DeclRefExpr 0x1531e82c1f0 <col:9> 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st' lvalue Var 0x1531e7f7130 'next_proto' 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st'
|   | | | `-CallExpr 0x1531e82c360 <line:1396:13, col:65> 'unsigned char *'
|   | | |   |-ImplicitCastExpr 0x1531e82c348 <col:13> 'unsigned char *(*)(size_t *, const char *)' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x1531e82c240 <col:13> 'unsigned char *(size_t *, const char *)' Function 0x1531e7ee930 'next_protos_parse' 'unsigned char *(size_t *, const char *)'
|   | | |   |-UnaryOperator 0x1531e82c2b0 <col:31, col:43> 'size_t *' prefix '&' cannot overflow
|   | | |   | `-MemberExpr 0x1531e82c280 <col:32, col:43> 'size_t':'unsigned long long' lvalue .len 0x1531e7f6f60
|   | | |   |   `-DeclRefExpr 0x1531e82c260 <col:32> 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st' lvalue Var 0x1531e7f7130 'next_proto' 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st'
|   | | |   `-ImplicitCastExpr 0x1531e82c390 <col:48> 'const char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1531e82c2c8 <col:48> 'const char *' lvalue Var 0x1531e812d10 'next_proto_neg_in' 'const char *'
|   | | `-IfStmt 0x1531e82c580 <line:1397:9, line:1400:9>
|   | |   |-BinaryOperator 0x1531e82c4d0 <line:1397:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   | |-ImplicitCastExpr 0x1531e82c4a0 <.//openssl//file_jk/after\apps\s_client.c:1397:13, col:24> 'unsigned char *' <LValueToRValue>
|   | |   | | `-MemberExpr 0x1531e82c3e8 <col:13, col:24> 'unsigned char *' lvalue .data 0x1531e7f6ef8
|   | |   | |   `-DeclRefExpr 0x1531e82c3c8 <col:13> 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st' lvalue Var 0x1531e7f7130 'next_proto' 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st'
|   | |   | `-ImplicitCastExpr 0x1531e82c4b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   |   `-ParenExpr 0x1531e82c480 <col:17, col:27> 'void *'
|   | |   |     `-CStyleCastExpr 0x1531e82c458 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |       `-IntegerLiteral 0x1531e82c418 <col:26> 'int' 0
|   | |   `-CompoundStmt 0x1531e82c568 <.//openssl//file_jk/after\apps\s_client.c:1397:38, line:1400:9>
|   | |     `-GotoStmt 0x1531e82c550 <line:1399:13, col:18> 'end' 0x1531e818c40
|   | `-BinaryOperator 0x1531e82c6a8 <line:1402:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'unsigned char *' '='
|   |   |-MemberExpr 0x1531e82c5d8 <.//openssl//file_jk/after\apps\s_client.c:1402:9, col:20> 'unsigned char *' lvalue .data 0x1531e7f6ef8
|   |   | `-DeclRefExpr 0x1531e82c5b8 <col:9> 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st' lvalue Var 0x1531e7f7130 'next_proto' 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st'
|   |   `-ImplicitCastExpr 0x1531e82c690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1531e82c670 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1531e82c648 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1531e82c608 <col:26> 'int' 0
|   |-IfStmt 0x1531e82ca08 <.//openssl//file_jk/after\apps\s_client.c:1405:5, line:1408:5>
|   | |-UnaryOperator 0x1531e82c970 <line:1405:9, col:47> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1531e82c8d0 <col:10, col:47> 'int'
|   | |   |-ImplicitCastExpr 0x1531e82c8b8 <col:10> 'int (*)(const char *, const char *, char **, char **)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1531e82c6f0 <col:10> 'int (const char *, const char *, char **, char **)' Function 0x1531e8e2de0 'app_passwd' 'int (const char *, const char *, char **, char **)'
|   | |   |-ImplicitCastExpr 0x1531e82c928 <col:21> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x1531e82c910 <col:21> 'char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1531e82c710 <col:21> 'char *' lvalue Var 0x1531e81b6b8 'passarg' 'char *'
|   | |   |-ImplicitCastExpr 0x1531e82c940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   | |   | `-ParenExpr 0x1531e82c798 <col:17, col:27> 'void *'
|   | |   |   `-CStyleCastExpr 0x1531e82c770 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |     `-IntegerLiteral 0x1531e82c730 <col:26> 'int' 0
|   | |   |-UnaryOperator 0x1531e82c7f0 <.//openssl//file_jk/after\apps\s_client.c:1405:36, col:37> 'char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1531e82c7b8 <col:37> 'char *' lvalue Var 0x1531e81b7d8 'pass' 'char *'
|   | |   `-ImplicitCastExpr 0x1531e82c958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char **' <NullToPointer>
|   | |     `-ParenExpr 0x1531e82c870 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x1531e82c848 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x1531e82c808 <col:26> 'int' 0
|   | `-CompoundStmt 0x1531e82c9f0 <.//openssl//file_jk/after\apps\s_client.c:1405:50, line:1408:5>
|   |   `-GotoStmt 0x1531e82c9d8 <line:1407:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e82cb90 <line:1410:5, line:1411:20>
|   | |-BinaryOperator 0x1531e82caf8 <line:1410:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1531e82cac8 <.//openssl//file_jk/after\apps\s_client.c:1410:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e82ca20 <col:9> 'char *' lvalue Var 0x1531e81ae28 'key_file' 'char *'
|   | | `-ImplicitCastExpr 0x1531e82cae0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1531e82caa8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e82ca80 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e82ca40 <col:26> 'int' 0
|   | `-BinaryOperator 0x1531e82cb70 <.//openssl//file_jk/after\apps\s_client.c:1411:9, col:20> 'char *' '='
|   |   |-DeclRefExpr 0x1531e82cb18 <col:9> 'char *' lvalue Var 0x1531e81ae28 'key_file' 'char *'
|   |   `-ImplicitCastExpr 0x1531e82cb58 <col:20> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1531e82cb38 <col:20> 'char *' lvalue Var 0x1531e81ad08 'cert_file' 'char *'
|   |-IfStmt 0x1531e82cdc8 <line:1413:5, line:1420:5>
|   | |-ImplicitCastExpr 0x1531e82cbc8 <line:1413:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e82cba8 <col:9> 'char *' lvalue Var 0x1531e81ae28 'key_file' 'char *'
|   | `-CompoundStmt 0x1531e82cdb0 <col:19, line:1420:5>
|   |   `-IfStmt 0x1531e82cd98 <line:1416:9, line:1419:9>
|   |     |-OpaqueValueExpr 0x1531e82cd80 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e82cd68 <line:1416:26, line:1419:9>
|   |       `-GotoStmt 0x1531e82cd50 <line:1418:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e82cfa8 <line:1422:5, line:1428:5>
|   | |-ImplicitCastExpr 0x1531e82ce00 <line:1422:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e82cde0 <col:9> 'char *' lvalue Var 0x1531e81ad08 'cert_file' 'char *'
|   | `-CompoundStmt 0x1531e82cf90 <col:20, line:1428:5>
|   |   `-IfStmt 0x1531e82cf78 <line:1424:9, line:1427:9>
|   |     |-OpaqueValueExpr 0x1531e82cf60 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e82cf48 <line:1424:27, line:1427:9>
|   |       `-GotoStmt 0x1531e82cf30 <line:1426:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e82d1c0 <line:1430:5, line:1434:5>
|   | |-ImplicitCastExpr 0x1531e82cfe0 <line:1430:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e82cfc0 <col:9> 'char *' lvalue Var 0x1531e81af48 'chain_file' 'char *'
|   | `-CompoundStmt 0x1531e82d1a8 <col:21, line:1434:5>
|   |   `-IfStmt 0x1531e82d190 <line:1431:9, line:1433:18>
|   |     |-OpaqueValueExpr 0x1531e82d178 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1531e82d160 <col:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e8379d8 <line:1436:5, line:1451:5>
|   | |-ImplicitCastExpr 0x1531e82d1f8 <line:1436:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e82d1d8 <col:9> 'char *' lvalue Var 0x1531e81bdb8 'crl_file' 'char *'
|   | `-CompoundStmt 0x1531e8379b8 <col:19, line:1451:5>
|   |   |-IfStmt 0x1531e82d480 <line:1439:9, line:1443:9>
|   |   | |-OpaqueValueExpr 0x1531e82d468 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1531e82d450 <line:1439:26, line:1443:9>
|   |   |   `-GotoStmt 0x1531e82d438 <line:1442:13, col:18> 'end' 0x1531e818c40
|   |   `-IfStmt 0x1531e8379a0 <line:1445:9, line:1450:9>
|   |     |-OpaqueValueExpr 0x1531e837988 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e837970 <line:1445:59, line:1450:9>
|   |       `-GotoStmt 0x1531e837958 <line:1449:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e837b18 <line:1453:5, line:1454:14>
|   | |-UnaryOperator 0x1531e837ae8 <line:1453:9, col:26> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1531e837ac0 <col:10, col:26> 'int'
|   | |   |-ImplicitCastExpr 0x1531e837aa8 <col:10> 'int (*)(SSL_EXCERT **)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1531e8379f0 <col:10> 'int (SSL_EXCERT **)' Function 0x1531e7e06e0 'load_excert' 'int (SSL_EXCERT **)'
|   | |   `-UnaryOperator 0x1531e837a30 <col:22, col:23> 'SSL_EXCERT **' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x1531e837a10 <col:23> 'SSL_EXCERT *' lvalue Var 0x1531e803c28 'exc' 'SSL_EXCERT *'
|   | `-GotoStmt 0x1531e837b00 <line:1454:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e838008 <line:1456:5, line:1460:5>
|   | |-BinaryOperator 0x1531e837f18 <line:1456:9, line:1457:25> 'int' '&&'
|   | | |-BinaryOperator 0x1531e837d98 <line:1456:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   | | | |-UnaryOperator 0x1531e837c88 <.//openssl//file_jk/after\apps\s_client.c:1456:9, col:36> 'int' prefix '!' cannot overflow
|   | | | | `-CallExpr 0x1531e837c40 <col:10, col:36> 'int'
|   | | | |   |-ImplicitCastExpr 0x1531e837c28 <col:10> 'int (*)(const char *, int)' <FunctionToPointerDecay>
|   | | | |   | `-DeclRefExpr 0x1531e837b30 <col:10> 'int (const char *, int)' Function 0x1531e8df040 'app_RAND_load_file' 'int (const char *, int)'
|   | | | |   |-ImplicitCastExpr 0x1531e837c70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   | | | |   | `-ParenExpr 0x1531e837bb8 <col:17, col:27> 'void *'
|   | | | |   |   `-CStyleCastExpr 0x1531e837b90 <col:18, col:26> 'void *' <NullToPointer>
|   | | | |   |     `-IntegerLiteral 0x1531e837b50 <col:26> 'int' 0
|   | | | |   `-IntegerLiteral 0x1531e837bd8 <.//openssl//file_jk/after\apps\s_client.c:1456:35> 'int' 1
|   | | | `-BinaryOperator 0x1531e837d78 <col:41, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1531e837d48 <.//openssl//file_jk/after\apps\s_client.c:1456:41> 'char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1531e837ca0 <col:41> 'char *' lvalue Var 0x1531e81b580 'inrand' 'char *'
|   | | |   `-ImplicitCastExpr 0x1531e837d60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | | |     `-ParenExpr 0x1531e837d28 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x1531e837d00 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x1531e837cc0 <col:26> 'int' 0
|   | | `-UnaryOperator 0x1531e837f00 <.//openssl//file_jk/after\apps\s_client.c:1457:12, col:25> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x1531e837ee0 <col:13, col:25> 'int'
|   | |     `-ImplicitCastExpr 0x1531e837ec8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |       `-DeclRefExpr 0x1531e837ea8 <col:13> 'int ()' Function 0x1531e837de0 'RAND_status' 'int ()'
|   | `-CompoundStmt 0x1531e837ff8 <col:28, line:1460:5>
|   |-IfStmt 0x1531e8382c0 <line:1461:5, line:1464:5>
|   | |-BinaryOperator 0x1531e8380f8 <line:1461:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1531e8380c8 <.//openssl//file_jk/after\apps\s_client.c:1461:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e838020 <col:9> 'char *' lvalue Var 0x1531e81b580 'inrand' 'char *'
|   | | `-ImplicitCastExpr 0x1531e8380e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1531e8380a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e838080 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e838040 <col:26> 'int' 0
|   | `-CompoundStmt 0x1531e8382a8 <.//openssl//file_jk/after\apps\s_client.c:1461:25, line:1464:5>
|   |   `-BinaryOperator 0x1531e838210 <line:1462:9, col:45> 'long' '='
|   |     |-DeclRefExpr 0x1531e838118 <col:9> 'long' lvalue Var 0x1531e81e070 'randamt' 'long'
|   |     `-CallExpr 0x1531e8381d0 <col:19, col:45> 'long'
|   |       |-ImplicitCastExpr 0x1531e8381b8 <col:19> 'long (*)(char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1531e838150 <col:19> 'long (char *)' Function 0x1531e8df520 'app_RAND_load_files' 'long (char *)'
|   |       `-ImplicitCastExpr 0x1531e8381f8 <col:39> 'char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1531e838170 <col:39> 'char *' lvalue Var 0x1531e81b580 'inrand' 'char *'
|   |-IfStmt 0x1531e8388d8 <line:1466:5, line:1473:5>
|   | |-OpaqueValueExpr 0x1531e8388c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e8388a8 <line:1466:28, line:1473:5>
|   |   `-IfStmt 0x1531e838880 <line:1467:9, line:1471:16> has_else
|   |     |-BinaryOperator 0x1531e8383e8 <line:1467:13, col:25> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x1531e8383d0 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1531e838360 <col:13> 'int' lvalue Var 0x1531e7e1038 'c_quiet' 'int'
|   |     | `-UnaryOperator 0x1531e8383b8 <col:24, col:25> 'int' prefix '!' cannot overflow
|   |     |   `-ImplicitCastExpr 0x1531e8383a0 <col:25> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1531e838380 <col:25> 'int' lvalue Var 0x1531e7e0bb8 'c_debug' 'int'
|   |     |-CompoundStmt 0x1531e838750 <col:34, line:1471:9>
|   |     `-NullStmt 0x1531e838878 <col:16>
|   |-IfStmt 0x1531e838bf8 <line:1475:5, line:1478:5>
|   | |-UnaryOperator 0x1531e838b60 <line:1475:9, col:60> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1531e838ac0 <col:10, col:60> 'int'
|   | |   |-ImplicitCastExpr 0x1531e838aa8 <col:10> 'int (*)(const char *, const char *, char **, char **)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1531e8388f0 <col:10> 'int (const char *, const char *, char **, char **)' Function 0x1531e8e2de0 'app_passwd' 'int (const char *, const char *, char **, char **)'
|   | |   |-ImplicitCastExpr 0x1531e838b18 <col:21> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x1531e838b00 <col:21> 'char *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x1531e838910 <col:21> 'char *' lvalue Var 0x1531e812e48 'srppass' 'char *'
|   | |   |-ImplicitCastExpr 0x1531e838b30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <NullToPointer>
|   | |   | `-ParenExpr 0x1531e838998 <col:17, col:27> 'void *'
|   | |   |   `-CStyleCastExpr 0x1531e838970 <col:18, col:26> 'void *' <NullToPointer>
|   | |   |     `-IntegerLiteral 0x1531e838930 <col:26> 'int' 0
|   | |   |-UnaryOperator 0x1531e838a08 <.//openssl//file_jk/after\apps\s_client.c:1475:36, col:45> 'char **' prefix '&' cannot overflow
|   | |   | `-MemberExpr 0x1531e8389d8 <col:37, col:45> 'char *' lvalue .srppassin 0x1531e7e9298
|   | |   |   `-DeclRefExpr 0x1531e8389b8 <col:37> 'SRP_ARG':'struct srp_arg_st' lvalue Var 0x1531e813038 'srp_arg' 'SRP_ARG':'struct srp_arg_st'
|   | |   `-ImplicitCastExpr 0x1531e838b48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char **' <NullToPointer>
|   | |     `-ParenExpr 0x1531e838a88 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x1531e838a60 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x1531e838a20 <col:26> 'int' 0
|   | `-CompoundStmt 0x1531e838be0 <.//openssl//file_jk/after\apps\s_client.c:1475:63, line:1478:5>
|   |   `-GotoStmt 0x1531e838bc8 <line:1477:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e838e10 <line:1482:5, line:1485:5>
|   | |-OpaqueValueExpr 0x1531e838df8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e838de0 <line:1482:22, line:1485:5>
|   |   `-GotoStmt 0x1531e838dc8 <line:1484:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e8390d0 <line:1490:5, line:1491:14>
|   | |-OpaqueValueExpr 0x1531e8390b8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1531e8390a0 <col:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e839388 <line:1493:5, line:1500:5>
|   | |-ImplicitCastExpr 0x1531e839108 <line:1493:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e8390e8 <col:9> 'const char *' lvalue Var 0x1531e8128a8 'ssl_config' 'const char *'
|   | `-CompoundStmt 0x1531e839370 <col:21, line:1500:5>
|   |   `-IfStmt 0x1531e839358 <line:1494:9, line:1499:9>
|   |     |-OpaqueValueExpr 0x1531e839340 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e839328 <line:1494:51, line:1499:9>
|   |       `-GotoStmt 0x1531e839310 <line:1498:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e8395a8 <line:1502:5, line:1504:14>
|   | |-OpaqueValueExpr 0x1531e839590 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1531e839578 <col:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e8297e0 <line:1505:5, line:1507:14>
|   | |-OpaqueValueExpr 0x1531e8297c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1531e8297b0 <col:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e8299e8 <line:1509:5, line:1513:5>
|   | |-OpaqueValueExpr 0x1531e8299d0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e8299b8 <line:1509:54, line:1513:5>
|   |   `-GotoStmt 0x1531e8299a0 <line:1512:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e829b58 <line:1515:5, line:1517:5>
|   | |-ImplicitCastExpr 0x1531e829a20 <line:1515:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e829a00 <col:9> 'int' lvalue Var 0x1531e813878 'async' 'int'
|   | `-CompoundStmt 0x1531e829b48 <col:16, line:1517:5>
|   |-IfStmt 0x1531e829d48 <line:1518:5, line:1520:5>
|   | |-BinaryOperator 0x1531e829be8 <line:1518:9, col:31> 'int' '>'
|   | | |-ImplicitCastExpr 0x1531e829bb8 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e829b70 <col:9> 'unsigned int' lvalue Var 0x1531e813938 'split_send_fragment' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1531e829bd0 <col:31> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1531e829b90 <col:31> 'int' 0
|   | `-CompoundStmt 0x1531e829d38 <col:34, line:1520:5>
|   |-IfStmt 0x1531e829f38 <line:1521:5, line:1523:5>
|   | |-BinaryOperator 0x1531e829dd8 <line:1521:9, col:25> 'int' '>'
|   | | |-ImplicitCastExpr 0x1531e829da8 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e829d60 <col:9> 'unsigned int' lvalue Var 0x1531e813a10 'max_pipelines' 'unsigned int'
|   | | `-ImplicitCastExpr 0x1531e829dc0 <col:25> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x1531e829d80 <col:25> 'int' 0
|   | `-CompoundStmt 0x1531e829f28 <col:28, line:1523:5>
|   |-IfStmt 0x1531e82a110 <line:1525:5, line:1527:5>
|   | |-BinaryOperator 0x1531e829fb0 <line:1525:9, col:24> 'int' '>'
|   | | |-ImplicitCastExpr 0x1531e829f98 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e829f50 <col:9> 'int' lvalue Var 0x1531e81def0 'read_buf_len' 'int'
|   | | `-IntegerLiteral 0x1531e829f70 <col:24> 'int' 0
|   | `-CompoundStmt 0x1531e82a100 <col:27, line:1527:5>
|   |-IfStmt 0x1531e82a398 <line:1529:5, line:1534:5>
|   | |-OpaqueValueExpr 0x1531e82a380 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e82a368 <line:1530:47, line:1534:5>
|   |   `-GotoStmt 0x1531e82a350 <line:1533:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e82a700 <line:1536:5, line:1544:5>
|   | |-OpaqueValueExpr 0x1531e82a6e8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e82a6d0 <line:1536:28, line:1544:5>
|   |   `-IfStmt 0x1531e82a698 <line:1537:9, line:1542:9>
|   |     |-OpaqueValueExpr 0x1531e82a680 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e82a668 <line:1537:70, line:1542:9>
|   |       `-GotoStmt 0x1531e82a650 <line:1541:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e82a9c8 <line:1548:5, line:1552:5>
|   | |-BinaryOperator 0x1531e82a7f0 <line:1548:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1531e82a7c0 <.//openssl//file_jk/after\apps\s_client.c:1548:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e82a718 <col:9> 'char *' lvalue Var 0x1531e7ee6d8 'psk_key' 'char *'
|   | | `-ImplicitCastExpr 0x1531e82a7d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1531e82a7a0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e82a778 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e82a738 <col:26> 'int' 0
|   | `-CompoundStmt 0x1531e82a9b8 <.//openssl//file_jk/after\apps\s_client.c:1548:26, line:1552:5>
|   |-IfStmt 0x1531e82ad20 <line:1555:5, line:1562:5>
|   | |-BinaryOperator 0x1531e82aab8 <line:1555:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1531e82aa88 <.//openssl//file_jk/after\apps\s_client.c:1555:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e82a9e0 <col:9> 'char *' lvalue Var 0x1531e7f6d00 'srtp_profiles' 'char *'
|   | | `-ImplicitCastExpr 0x1531e82aaa0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1531e82aa68 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e82aa40 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e82aa00 <col:26> 'int' 0
|   | `-CompoundStmt 0x1531e82ad08 <.//openssl//file_jk/after\apps\s_client.c:1555:32, line:1562:5>
|   |   `-IfStmt 0x1531e82acf0 <line:1557:9, line:1561:9>
|   |     |-OpaqueValueExpr 0x1531e82acd8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e82acc0 <line:1557:67, line:1561:9>
|   |       `-GotoStmt 0x1531e82aca8 <line:1560:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e82b638 <line:1572:5, line:1586:5>
|   | |-ImplicitCastExpr 0x1531e82af60 <line:1572:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e82af40 <col:9> 'const char *' lvalue Var 0x1531e812590 'alpn_in' 'const char *'
|   | `-CompoundStmt 0x1531e82b600 <col:18, line:1586:5>
|   |   |-DeclStmt 0x1531e82aff0 <line:1573:9, col:24>
|   |   | `-VarDecl 0x1531e82af88 <col:9, col:16> col:16 used alpn_len 'size_t':'unsigned long long'
|   |   |-DeclStmt 0x1531e82b178 <line:1574:9, col:68>
|   |   | `-VarDecl 0x1531e82b020 <col:9, col:67> col:24 used alpn 'unsigned char *' cinit
|   |   |   `-CallExpr 0x1531e82b130 <col:31, col:67> 'unsigned char *'
|   |   |     |-ImplicitCastExpr 0x1531e82b118 <col:31> 'unsigned char *(*)(size_t *, const char *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1531e82b088 <col:31> 'unsigned char *(size_t *, const char *)' Function 0x1531e7ee930 'next_protos_parse' 'unsigned char *(size_t *, const char *)'
|   |   |     |-UnaryOperator 0x1531e82b0e0 <col:49, col:50> 'size_t *' prefix '&' cannot overflow
|   |   |     | `-DeclRefExpr 0x1531e82b0a8 <col:50> 'size_t':'unsigned long long' lvalue Var 0x1531e82af88 'alpn_len' 'size_t':'unsigned long long'
|   |   |     `-ImplicitCastExpr 0x1531e82b160 <col:60> 'const char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1531e82b0f8 <col:60> 'const char *' lvalue Var 0x1531e812590 'alpn_in' 'const char *'
|   |   |-IfStmt 0x1531e82b328 <line:1576:9, line:1579:9>
|   |   | |-BinaryOperator 0x1531e82b280 <line:1576:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1531e82b250 <.//openssl//file_jk/after\apps\s_client.c:1576:13> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1531e82b190 <col:13> 'unsigned char *' lvalue Var 0x1531e82b020 'alpn' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x1531e82b268 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   |   | |   `-ParenExpr 0x1531e82b230 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1531e82b208 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1531e82b1c8 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x1531e82b310 <.//openssl//file_jk/after\apps\s_client.c:1576:27, line:1579:9>
|   |   |   `-GotoStmt 0x1531e82b2f8 <line:1578:13, col:18> 'end' 0x1531e818c40
|   |   |-IfStmt 0x1531e82b550 <line:1581:9, line:1584:9>
|   |   | |-OpaqueValueExpr 0x1531e82b538 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1531e82b520 <line:1581:64, line:1584:9>
|   |   |   `-GotoStmt 0x1531e82b508 <line:1583:13, col:18> 'end' 0x1531e818c40
|   |   `-CallExpr 0x1531e82b5c0 <line:1585:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x1531e82b5a8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1531e82b568 <col:9> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x1531e82b5e8 <col:22> 'unsigned char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1531e82b588 <col:22> 'unsigned char *' lvalue Var 0x1531e82b020 'alpn' 'unsigned char *'
|   |-ForStmt 0x1531e835d08 <line:1588:5, line:1597:5>
|   | |-BinaryOperator 0x1531e835708 <line:1588:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1531e82b650 <col:10> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   | | `-IntegerLiteral 0x1531e8356e0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1531e835798 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1531e835768 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e835728 <col:17> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   | | `-ImplicitCastExpr 0x1531e835780 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1531e835748 <col:21> 'int' lvalue Var 0x1531e812b08 'serverinfo_count' 'int'
|   | |-UnaryOperator 0x1531e8357d8 <col:39, col:40> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1531e8357b8 <col:39> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   | `-CompoundStmt 0x1531e835cf0 <col:44, line:1597:5>
|   |   `-IfStmt 0x1531e835cd8 <line:1589:9, line:1596:9>
|   |     |-OpaqueValueExpr 0x1531e835cc0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e835cb0 <line:1592:76, line:1596:9>
|   |-IfStmt 0x1531e836020 <line:1604:5, line:1608:5>
|   | |-OpaqueValueExpr 0x1531e836008 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e835ff0 <line:1605:64, line:1608:5>
|   |   `-GotoStmt 0x1531e835fd8 <line:1607:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e836278 <line:1610:5, line:1623:5>
|   | |-OpaqueValueExpr 0x1531e836260 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e836240 <line:1610:52, line:1623:5>
|   |   |-IfStmt 0x1531e8360e0 <line:1611:9, line:1614:9>
|   |   | |-ImplicitCastExpr 0x1531e836078 <line:1611:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1531e836058 <col:13> 'int' lvalue Var 0x1531e8134d8 'ct_validation' 'int'
|   |   | `-CompoundStmt 0x1531e8360c8 <col:28, line:1614:9>
|   |   |   `-GotoStmt 0x1531e8360b0 <line:1613:13, col:18> 'end' 0x1531e818c40
|   |   `-CallExpr 0x1531e836220 <line:1622:9, col:25> 'int'
|   |     `-ImplicitCastExpr 0x1531e836208 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |       `-DeclRefExpr 0x1531e8361e8 <col:9> 'int ()' Function 0x1531e836120 'ERR_clear_error' 'int ()'
|   |-IfStmt 0x1531e8364a8 <line:1628:5, line:1631:5>
|   | |-OpaqueValueExpr 0x1531e836490 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e836478 <line:1628:77, line:1631:5>
|   |   `-GotoStmt 0x1531e836460 <line:1630:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e836750 <line:1635:5, line:1636:14>
|   | |-OpaqueValueExpr 0x1531e836738 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1531e836720 <col:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e836a90 <line:1638:5, line:1642:5>
|   | |-BinaryOperator 0x1531e836840 <line:1638:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1531e836810 <.//openssl//file_jk/after\apps\s_client.c:1638:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e836768 <col:9> 'char *' lvalue Var 0x1531e812458 'servername' 'char *'
|   | | `-ImplicitCastExpr 0x1531e836828 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1531e8367f0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e8367c8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e836788 <col:26> 'int' 0
|   | `-CompoundStmt 0x1531e836a80 <.//openssl//file_jk/after\apps\s_client.c:1638:29, line:1642:5>
|   |-IfStmt 0x1531e837518 <line:1644:5, line:1657:5>
|   | |-ImplicitCastExpr 0x1531e836af8 <line:1644:9, col:17> 'char *' <LValueToRValue>
|   | | `-MemberExpr 0x1531e836ac8 <col:9, col:17> 'char *' lvalue .srplogin 0x1531e7e9308
|   | |   `-DeclRefExpr 0x1531e836aa8 <col:9> 'SRP_ARG':'struct srp_arg_st' lvalue Var 0x1531e813038 'srp_arg' 'SRP_ARG':'struct srp_arg_st'
|   | `-CompoundStmt 0x1531e8374f0 <col:27, line:1657:5>
|   |   |-IfStmt 0x1531e836d60 <line:1645:9, line:1648:9>
|   |   | |-OpaqueValueExpr 0x1531e836d48 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1531e836d30 <line:1645:80, line:1648:9>
|   |   |   `-GotoStmt 0x1531e836d18 <line:1647:13, col:18> 'end' 0x1531e818c40
|   |   |-BinaryOperator 0x1531e836e00 <line:1649:9, col:23> 'int' '='
|   |   | |-MemberExpr 0x1531e836d98 <col:9, col:17> 'int' lvalue .msg 0x1531e7e9378
|   |   | | `-DeclRefExpr 0x1531e836d78 <col:9> 'SRP_ARG':'struct srp_arg_st' lvalue Var 0x1531e813038 'srp_arg' 'SRP_ARG':'struct srp_arg_st'
|   |   | `-ImplicitCastExpr 0x1531e836de8 <col:23> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1531e836dc8 <col:23> 'int' lvalue Var 0x1531e813f68 'c_msg' 'int'
|   |   `-BinaryOperator 0x1531e836ea8 <line:1650:9, col:25> 'int' '='
|   |     |-MemberExpr 0x1531e836e40 <col:9, col:17> 'int' lvalue .debug 0x1531e7e93e8
|   |     | `-DeclRefExpr 0x1531e836e20 <col:9> 'SRP_ARG':'struct srp_arg_st' lvalue Var 0x1531e813038 'srp_arg' 'SRP_ARG':'struct srp_arg_st'
|   |     `-ImplicitCastExpr 0x1531e836e90 <col:25> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1531e836e70 <col:25> 'int' lvalue Var 0x1531e7e0bb8 'c_debug' 'int'
|   |-IfStmt 0x1531e839930 <line:1660:5, line:1668:5>
|   | |-BinaryOperator 0x1531e837608 <line:1660:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1531e8375d8 <.//openssl//file_jk/after\apps\s_client.c:1660:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e837530 <col:9> 'char *' lvalue Var 0x1531e803e90 'dane_tlsa_domain' 'char *'
|   | | `-ImplicitCastExpr 0x1531e8375f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1531e8375b8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e837590 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e837550 <col:26> 'int' 0
|   | `-CompoundStmt 0x1531e839918 <.//openssl//file_jk/after\apps\s_client.c:1660:35, line:1668:5>
|   |   `-IfStmt 0x1531e839900 <line:1661:9, line:1667:9>
|   |     |-OpaqueValueExpr 0x1531e8398e8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e8398d0 <line:1661:44, line:1667:9>
|   |       `-GotoStmt 0x1531e8398b8 <line:1666:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e83a3c8 <line:1671:5, line:1692:5>
|   | |-ImplicitCastExpr 0x1531e839a78 <line:1671:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e839a58 <col:9> 'char *' lvalue Var 0x1531e81bb78 'sess_in' 'char *'
|   | `-CompoundStmt 0x1531e83a3a0 <col:18, line:1692:5>
|   |   |-IfStmt 0x1531e839c48 <line:1674:9, line:1678:9>
|   |   | |-OpaqueValueExpr 0x1531e839c30 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1531e839c18 <line:1674:20, line:1678:9>
|   |   |   `-GotoStmt 0x1531e839c00 <line:1677:13, col:18> 'end' 0x1531e818c40
|   |   |-IfStmt 0x1531e83a098 <line:1681:9, line:1685:9>
|   |   | |-OpaqueValueExpr 0x1531e83a080 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1531e83a068 <line:1681:20, line:1685:9>
|   |   |   `-GotoStmt 0x1531e83a050 <line:1684:13, col:18> 'end' 0x1531e818c40
|   |   `-IfStmt 0x1531e83a278 <line:1686:9, line:1690:9>
|   |     |-OpaqueValueExpr 0x1531e83a260 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e83a248 <line:1686:42, line:1690:9>
|   |       `-GotoStmt 0x1531e83a230 <line:1689:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e83a848 <line:1697:5, line:1703:5>
|   | |-BinaryOperator 0x1531e83a600 <line:1697:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1531e83a5d0 <.//openssl//file_jk/after\apps\s_client.c:1697:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e83a528 <col:9> 'char *' lvalue Var 0x1531e812458 'servername' 'char *'
|   | | `-ImplicitCastExpr 0x1531e83a5e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1531e83a5b0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e83a588 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e83a548 <col:26> 'int' 0
|   | `-CompoundStmt 0x1531e83a830 <.//openssl//file_jk/after\apps\s_client.c:1697:29, line:1703:5>
|   |   `-IfStmt 0x1531e83a818 <line:1698:9, line:1702:9>
|   |     |-OpaqueValueExpr 0x1531e83a800 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e83a7e8 <line:1698:57, line:1702:9>
|   |       `-GotoStmt 0x1531e83a7d0 <line:1701:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e83b1d8 <line:1705:5, line:1728:5> has_else
|   | |-BinaryOperator 0x1531e83a938 <line:1705:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1531e83a908 <.//openssl//file_jk/after\apps\s_client.c:1705:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1531e83a860 <col:9> 'char *' lvalue Var 0x1531e803e90 'dane_tlsa_domain' 'char *'
|   | | `-ImplicitCastExpr 0x1531e83a920 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1531e83a8e8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1531e83a8c0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1531e83a880 <col:26> 'int' 0
|   | |-CompoundStmt 0x1531e83aff0 <.//openssl//file_jk/after\apps\s_client.c:1705:35, line:1724:5>
|   | | |-IfStmt 0x1531e83aba8 <line:1706:9, line:1711:9>
|   | | | |-OpaqueValueExpr 0x1531e83ab90 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x1531e83ab78 <line:1706:58, line:1711:9>
|   | | |   `-GotoStmt 0x1531e83ab60 <line:1710:13, col:18> 'end' 0x1531e818c40
|   | | |-IfStmt 0x1531e83ad80 <line:1712:9, line:1716:9>
|   | | | |-OpaqueValueExpr 0x1531e83ad68 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x1531e83ad50 <line:1712:38, line:1716:9>
|   | | |   `-GotoStmt 0x1531e83ad38 <line:1715:13, col:18> 'end' 0x1531e818c40
|   | | `-IfStmt 0x1531e83ae90 <line:1717:9, line:1721:9>
|   | |   |-OpaqueValueExpr 0x1531e83ae78 <<invalid sloc>> '_Bool'
|   | |   `-CompoundStmt 0x1531e83ae60 <line:1717:59, line:1721:9>
|   | |     `-GotoStmt 0x1531e83ae48 <line:1720:13, col:18> 'end' 0x1531e818c40
|   | `-IfStmt 0x1531e83b1c0 <line:1724:12, line:1728:5>
|   |   |-OpaqueValueExpr 0x1531e83b1a8 <<invalid sloc>> '_Bool'
|   |   `-CompoundStmt 0x1531e83b190 <line:1724:41, line:1728:5>
|   |     `-GotoStmt 0x1531e83b178 <line:1727:9, col:14> 'end' 0x1531e818c40
|   |-LabelStmt 0x1531e82f7c8 <line:1730:2, line:1735:5> 're_start'
|   | `-IfStmt 0x1531e82f760 <line:1731:5, line:1735:5>
|   |   |-BinaryOperator 0x1531e83b430 <line:1731:9, col:68> 'int' '=='
|   |   | |-CallExpr 0x1531e83b330 <col:9, col:63> 'int'
|   |   | | |-ImplicitCastExpr 0x1531e83b318 <col:9> 'int (*)(int *, const char *, const char *, int, int)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x1531e83b200 <col:9> 'int (int *, const char *, const char *, int, int)' Function 0x1531e7e4fa8 'init_client' 'int (int *, const char *, const char *, int, int)'
|   |   | | |-UnaryOperator 0x1531e83b258 <col:21, col:22> 'int *' prefix '&' cannot overflow
|   |   | | | `-DeclRefExpr 0x1531e83b220 <col:22> 'int' lvalue Var 0x1531e81d278 's' 'int'
|   |   | | |-ImplicitCastExpr 0x1531e83b390 <col:25> 'const char *' <NoOp>
|   |   | | | `-ImplicitCastExpr 0x1531e83b378 <col:25> 'char *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1531e83b270 <col:25> 'char *' lvalue Var 0x1531e81b2e0 'host' 'char *'
|   |   | | |-ImplicitCastExpr 0x1531e83b3c0 <col:31> 'const char *' <NoOp>
|   |   | | | `-ImplicitCastExpr 0x1531e83b3a8 <col:31> 'char *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1531e83b290 <col:31> 'char *' lvalue Var 0x1531e81b438 'port' 'char *'
|   |   | | |-ImplicitCastExpr 0x1531e83b3d8 <col:37> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1531e83b2b0 <col:37> 'int' lvalue Var 0x1531e81d720 'socket_family' 'int'
|   |   | | `-ImplicitCastExpr 0x1531e83b3f0 <col:52> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1531e83b2d0 <col:52> 'int' lvalue Var 0x1531e81d7a0 'socket_type' 'int'
|   |   | `-IntegerLiteral 0x1531e83b408 <col:68> 'int' 0
|   |   `-CompoundStmt 0x1531e82f740 <col:71, line:1735:5>
|   |     |-CallExpr 0x1531e82f6e8 <line:1733:9, col:26> 'int'
|   |     | |-ImplicitCastExpr 0x1531e82f6d0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1531e83b6d8 <col:9> 'int ()' Function 0x1531e83b610 'BIO_closesocket' 'int ()'
|   |     | `-ImplicitCastExpr 0x1531e82f710 <col:25> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1531e82f6b0 <col:25> 'int' lvalue Var 0x1531e81d278 's' 'int'
|   |     `-GotoStmt 0x1531e82f728 <line:1734:9, col:14> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e82fb28 <line:1738:5, line:1744:5>
|   | |-ImplicitCastExpr 0x1531e82f868 <line:1738:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e82f848 <col:9> 'int' lvalue Var 0x1531e813ec0 'c_nbio' 'int'
|   | `-CompoundStmt 0x1531e82fb10 <col:17, line:1744:5>
|   |   `-IfStmt 0x1531e82faa0 <line:1739:9, line:1742:9>
|   |     |-UnaryOperator 0x1531e82fa38 <line:1739:13, col:34> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x1531e82f9f0 <col:14, col:34> 'int'
|   |     |   |-ImplicitCastExpr 0x1531e82f9d8 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x1531e82f970 <col:14> 'int ()' Function 0x1531e82f8a8 'BIO_socket_nbio' 'int ()'
|   |     |   |-ImplicitCastExpr 0x1531e82fa20 <col:30> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1531e82f990 <col:30> 'int' lvalue Var 0x1531e81d278 's' 'int'
|   |     |   `-IntegerLiteral 0x1531e82f9b0 <col:33> 'int' 1
|   |     `-CompoundStmt 0x1531e82fa88 <col:37, line:1742:9>
|   |       `-GotoStmt 0x1531e82fa70 <line:1741:13, col:18> 'end' 0x1531e818c40
|   |-IfStmt 0x1531e8311f8 <line:1746:5, line:1795:9> has_else
|   | |-OpaqueValueExpr 0x1531e8311e0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1531e831070 <line:1746:36, line:1793:5>
|   | | |-DeclStmt 0x1531e82fcf8 <line:1747:9, col:40>
|   | | | |-RecordDecl 0x1531e82fb60 <col:9, col:15> col:15 union BIO_sock_info_u
|   | | | `-VarDecl 0x1531e82fc78 <col:9, col:31> col:31 invalid peer_info 'union BIO_sock_info_u':'union BIO_sock_info_u'
|   | | |-IfStmt 0x1531e830150 <line:1750:9, line:1754:9>
|   | | | |-OpaqueValueExpr 0x1531e830138 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x1531e830118 <line:1750:56, line:1754:9>
|   | | |   |-CallExpr 0x1531e8300c0 <line:1752:13, col:30> 'int'
|   | | |   | |-ImplicitCastExpr 0x1531e8300a8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x1531e830068 <col:13> 'int ()' Function 0x1531e83b610 'BIO_closesocket' 'int ()'
|   | | |   | `-ImplicitCastExpr 0x1531e8300e8 <col:29> 'int' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x1531e830088 <col:29> 'int' lvalue Var 0x1531e81d278 's' 'int'
|   | | |   `-GotoStmt 0x1531e830100 <line:1753:13, col:18> 'end' 0x1531e818c40
|   | | |-IfStmt 0x1531e830538 <line:1755:9, line:1761:9>
|   | | | |-OpaqueValueExpr 0x1531e830520 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x1531e830500 <line:1755:67, line:1761:9>
|   | | |   |-CallExpr 0x1531e8304a8 <line:1759:13, col:30> 'int'
|   | | |   | |-ImplicitCastExpr 0x1531e830490 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | | `-DeclRefExpr 0x1531e830450 <col:13> 'int ()' Function 0x1531e83b610 'BIO_closesocket' 'int ()'
|   | | |   | `-ImplicitCastExpr 0x1531e8304d0 <col:29> 'int' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x1531e830470 <col:29> 'int' lvalue Var 0x1531e81d278 's' 'int'
|   | | |   `-GotoStmt 0x1531e8304e8 <line:1760:13, col:18> 'end' 0x1531e818c40
|   | | |-IfStmt 0x1531e830970 <line:1767:9, line:1775:9>
|   | | | |-ImplicitCastExpr 0x1531e830728 <line:1767:13> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1531e830708 <col:13> 'int' lvalue Var 0x1531e8121b0 'enable_timeouts' 'int'
|   | | | `-CompoundStmt 0x1531e830960 <col:30, line:1775:9>
|   | | `-IfStmt 0x1531e831048 <line:1777:9, line:1792:13> has_else
|   | |   |-ImplicitCastExpr 0x1531e8309a8 <line:1777:13> 'long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1531e830988 <col:13> 'long' lvalue Var 0x1531e812270 'socket_mtu' 'long'
|   | |   |-CompoundStmt 0x1531e830f50 <col:25, line:1790:9>
|   | |   | |-IfStmt 0x1531e830c28 <line:1778:13, line:1783:13>
|   | |   | | |-OpaqueValueExpr 0x1531e830c10 <<invalid sloc>> '_Bool'
|   | |   | | `-CompoundStmt 0x1531e830bf8 <line:1778:58, line:1783:13>
|   | |   | |   `-GotoStmt 0x1531e830be0 <line:1782:17, col:22> 'shut' 0x1531e830b90
|   | |   | `-IfStmt 0x1531e830f38 <line:1785:13, line:1789:13>
|   | |   |   |-OpaqueValueExpr 0x1531e830f20 <<invalid sloc>> '_Bool'
|   | |   |   `-CompoundStmt 0x1531e830f08 <line:1785:54, line:1789:13>
|   | |   |     `-GotoStmt 0x1531e830ef0 <line:1788:17, col:22> 'shut' 0x1531e830b90
|   | |   `-NullStmt 0x1531e831040 <line:1792:13>
|   | `-NullStmt 0x1531e8311d8 <line:1795:9>
|   |-IfStmt 0x1531e831520 <line:1797:5, line:1802:5>
|   | |-ImplicitCastExpr 0x1531e831240 <line:1797:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e831220 <col:9> 'int' lvalue Var 0x1531e81d1d0 'nbio_test' 'int'
|   | `-CompoundStmt 0x1531e831510 <col:20, line:1802:5>
|   |-IfStmt 0x1531e83b808 <line:1804:5, line:1807:5>
|   | |-ImplicitCastExpr 0x1531e831558 <line:1804:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e831538 <col:9> 'int' lvalue Var 0x1531e7e0bb8 'c_debug' 'int'
|   | `-CompoundStmt 0x1531e83b7f8 <col:18, line:1807:5>
|   |-IfStmt 0x1531e83bb28 <line:1808:5, line:1816:5>
|   | |-ImplicitCastExpr 0x1531e83b840 <line:1808:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e83b820 <col:9> 'int' lvalue Var 0x1531e813f68 'c_msg' 'int'
|   | `-CompoundStmt 0x1531e83bb18 <col:16, line:1816:5>
|   |-IfStmt 0x1531e83bda8 <line:1818:5, line:1821:5>
|   | |-ImplicitCastExpr 0x1531e83bb60 <line:1818:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e83bb40 <col:9> 'int' lvalue Var 0x1531e8181e0 'c_tlsextdebug' 'int'
|   | `-CompoundStmt 0x1531e83bd98 <col:24, line:1821:5>
|   |-IfStmt 0x1531e83c138 <line:1823:5, line:1827:5>
|   | |-ImplicitCastExpr 0x1531e83bde0 <line:1823:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e83bdc0 <col:9> 'int' lvalue Var 0x1531e8182a0 'c_status_req' 'int'
|   | `-CompoundStmt 0x1531e83c128 <col:23, line:1827:5>
|   |-IfStmt 0x1531e83c658 <line:1834:5, line:1837:9> has_else
|   | |-OpaqueValueExpr 0x1531e83c640 <<invalid sloc>> '_Bool'
|   | |-BinaryOperator 0x1531e83c5b0 <line:1835:9, col:34> 'int' '='
|   | | |-DeclRefExpr 0x1531e83c4d8 <col:9> 'int' lvalue Var 0x1531e81d3b8 'width' 'int'
|   | | `-BinaryOperator 0x1531e83c590 <col:17, col:34> 'int' '+'
|   | |   |-CallExpr 0x1531e83c548 <col:17, col:30> 'int'
|   | |   | `-ImplicitCastExpr 0x1531e83c530 <col:17> 'int (*)(void)' <FunctionToPointerDecay>
|   | |   |   `-DeclRefExpr 0x1531e83c510 <col:17> 'int (void)' Function 0x1531e7ef358 'fileno_stdin' 'int (void)'
|   | |   `-IntegerLiteral 0x1531e83c568 <col:34> 'int' 1
|   | `-NullStmt 0x1531e83c638 <line:1837:9>
|   |-BinaryOperator 0x1531e83c6e0 <line:1839:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x1531e83c680 <col:5> 'int' lvalue Var 0x1531e81db60 'read_tty' 'int'
|   | `-IntegerLiteral 0x1531e83c6b8 <col:16> 'int' 1
|   |-BinaryOperator 0x1531e83c760 <line:1840:5, col:17> 'int' '='
|   | |-DeclRefExpr 0x1531e83c700 <col:5> 'int' lvalue Var 0x1531e81dae0 'write_tty' 'int'
|   | `-IntegerLiteral 0x1531e83c738 <col:17> 'int' 0
|   |-BinaryOperator 0x1531e83c7e0 <line:1841:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x1531e83c780 <col:5> 'int' lvalue Var 0x1531e81dce0 'tty_on' 'int'
|   | `-IntegerLiteral 0x1531e83c7b8 <col:14> 'int' 0
|   |-BinaryOperator 0x1531e83c860 <line:1842:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x1531e83c800 <col:5> 'int' lvalue Var 0x1531e81dc60 'read_ssl' 'int'
|   | `-IntegerLiteral 0x1531e83c838 <col:16> 'int' 1
|   |-BinaryOperator 0x1531e83c8e0 <line:1843:5, col:17> 'int' '='
|   | |-DeclRefExpr 0x1531e83c880 <col:5> 'int' lvalue Var 0x1531e81dbe0 'write_ssl' 'int'
|   | `-IntegerLiteral 0x1531e83c8b8 <col:17> 'int' 1
|   |-BinaryOperator 0x1531e83c960 <line:1845:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x1531e83c900 <col:5> 'int' lvalue Var 0x1531e81c6e0 'cbuf_len' 'int'
|   | `-IntegerLiteral 0x1531e83c938 <col:16> 'int' 0
|   |-BinaryOperator 0x1531e83c9e0 <line:1846:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x1531e83c980 <col:5> 'int' lvalue Var 0x1531e81c760 'cbuf_off' 'int'
|   | `-IntegerLiteral 0x1531e83c9b8 <col:16> 'int' 0
|   |-BinaryOperator 0x1531e83ca60 <line:1847:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x1531e83ca00 <col:5> 'int' lvalue Var 0x1531e81d540 'sbuf_len' 'int'
|   | `-IntegerLiteral 0x1531e83ca38 <col:16> 'int' 0
|   |-BinaryOperator 0x1531e83cae0 <line:1848:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x1531e83ca80 <col:5> 'int' lvalue Var 0x1531e81d5c0 'sbuf_off' 'int'
|   | `-IntegerLiteral 0x1531e83cab8 <col:16> 'int' 0
|   |-SwitchStmt 0x1531e83cba8 <line:1850:5, line:2112:5>
|   | |-ImplicitCastExpr 0x1531e83cb90 <line:1850:13, col:31> 'int' <IntegralCast>
|   | | `-CStyleCastExpr 0x1531e83cb68 <col:13, col:31> 'PROTOCOL_CHOICE':'enum PROTOCOL_choice' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1531e83cb50 <col:31> 'int' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x1531e83cb20 <col:31> 'int' lvalue Var 0x1531e81d850 'starttls_proto' 'int'
|   | `-CompoundStmt 0x1531e84b8d0 <col:47, line:2112:5>
|   |   |-CaseStmt 0x1531e83cc00 <line:1851:5, line:1852:9>
|   |   | |-ConstantExpr 0x1531e83cbe8 <line:1851:10> 'int'
|   |   | | `-DeclRefExpr 0x1531e83cbc8 <col:10> 'int' EnumConstant 0x1531e811bd0 'PROTO_OFF' 'int'
|   |   | `-BreakStmt 0x1531e83cc28 <line:1852:9>
|   |   |-CaseStmt 0x1531e83cc68 <line:1853:5, line:1889:9>
|   |   | |-ConstantExpr 0x1531e83cc50 <line:1853:10> 'int'
|   |   | | `-DeclRefExpr 0x1531e83cc30 <col:10> 'int' EnumConstant 0x1531e811c28 'PROTO_SMTP' 'int'
|   |   | `-CompoundStmt 0x1531e82dc48 <line:1854:9, line:1889:9>
|   |   |   |-DeclStmt 0x1531e83cd38 <line:1863:13, col:28>
|   |   |   | `-VarDecl 0x1531e83cca8 <col:13, col:27> col:17 used foundit 'int' cinit
|   |   |   |   `-IntegerLiteral 0x1531e83cd10 <col:27> 'int' 0
|   |   |   |-DoStmt 0x1531e83d288 <line:1867:13, line:1870:50>
|   |   |   | |-CompoundStmt 0x1531e83d0f0 <line:1867:16, line:1869:13>
|   |   |   | `-BinaryOperator 0x1531e83d268 <line:1870:20, col:47> 'int' '&&'
|   |   |   |   |-BinaryOperator 0x1531e83d160 <col:20, col:31> 'int' '>'
|   |   |   |   | |-ImplicitCastExpr 0x1531e83d148 <col:20> 'int' <LValueToRValue>
|   |   |   |   | | `-DeclRefExpr 0x1531e83d100 <col:20> 'int' lvalue Var 0x1531e81cb90 'mbuf_len' 'int'
|   |   |   |   | `-IntegerLiteral 0x1531e83d120 <col:31> 'int' 3
|   |   |   |   `-BinaryOperator 0x1531e83d248 <col:36, col:47> 'int' '=='
|   |   |   |     |-ImplicitCastExpr 0x1531e83d230 <col:36, col:42> 'int' <IntegralCast>
|   |   |   |     | `-ImplicitCastExpr 0x1531e83d218 <col:36, col:42> 'char' <LValueToRValue>
|   |   |   |     |   `-ArraySubscriptExpr 0x1531e83d1e0 <col:36, col:42> 'char' lvalue
|   |   |   |     |     |-ImplicitCastExpr 0x1531e83d1c8 <col:36> 'char *' <LValueToRValue>
|   |   |   |     |     | `-DeclRefExpr 0x1531e83d180 <col:36> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |   |     |     `-IntegerLiteral 0x1531e83d1a0 <col:41> 'int' 3
|   |   |   |     `-CharacterLiteral 0x1531e83d200 <col:47> 'int' 45
|   |   |   `-DoStmt 0x1531e82d828 <line:1874:13, line:1879:50>
|   |   |     |-CompoundStmt 0x1531e83d6e8 <line:1874:16, line:1878:13>
|   |   |     | `-IfStmt 0x1531e83d6d0 <line:1876:17, line:1877:31>
|   |   |     |   |-CallExpr 0x1531e83d5c0 <line:1876:21, col:44> 'char *'
|   |   |     |   | |-ImplicitCastExpr 0x1531e83d5a8 <col:21> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |     |   | | `-DeclRefExpr 0x1531e83d4f0 <col:21> 'char *(const char *, const char *)' Function 0x1531e7432f8 'strstr' 'char *(const char *, const char *)'
|   |   |     |   | |-ImplicitCastExpr 0x1531e83d608 <col:28> 'const char *' <NoOp>
|   |   |     |   | | `-ImplicitCastExpr 0x1531e83d5f0 <col:28> 'char *' <LValueToRValue>
|   |   |     |   | |   `-DeclRefExpr 0x1531e83d510 <col:28> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |     |   | `-ImplicitCastExpr 0x1531e83d638 <col:34> 'const char *' <NoOp>
|   |   |     |   |   `-ImplicitCastExpr 0x1531e83d620 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |     |   |     `-StringLiteral 0x1531e83d530 <col:34> 'char [9]' lvalue "STARTTLS"
|   |   |     |   `-BinaryOperator 0x1531e83d6b0 <line:1877:21, col:31> 'int' '='
|   |   |     |     |-DeclRefExpr 0x1531e83d650 <col:21> 'int' lvalue Var 0x1531e83cca8 'foundit' 'int'
|   |   |     |     `-IntegerLiteral 0x1531e83d688 <col:31> 'int' 1
|   |   |     `-BinaryOperator 0x1531e82d808 <line:1879:20, col:47> 'int' '&&'
|   |   |       |-BinaryOperator 0x1531e82d700 <col:20, col:31> 'int' '>'
|   |   |       | |-ImplicitCastExpr 0x1531e82d6e8 <col:20> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x1531e82d6a0 <col:20> 'int' lvalue Var 0x1531e81cb90 'mbuf_len' 'int'
|   |   |       | `-IntegerLiteral 0x1531e82d6c0 <col:31> 'int' 3
|   |   |       `-BinaryOperator 0x1531e82d7e8 <col:36, col:47> 'int' '=='
|   |   |         |-ImplicitCastExpr 0x1531e82d7d0 <col:36, col:42> 'int' <IntegralCast>
|   |   |         | `-ImplicitCastExpr 0x1531e82d7b8 <col:36, col:42> 'char' <LValueToRValue>
|   |   |         |   `-ArraySubscriptExpr 0x1531e82d780 <col:36, col:42> 'char' lvalue
|   |   |         |     |-ImplicitCastExpr 0x1531e82d768 <col:36> 'char *' <LValueToRValue>
|   |   |         |     | `-DeclRefExpr 0x1531e82d720 <col:36> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |         |     `-IntegerLiteral 0x1531e82d740 <col:41> 'int' 3
|   |   |         `-CharacterLiteral 0x1531e82d7a0 <col:47> 'int' 45
|   |   |-BreakStmt 0x1531e82dc70 <line:1890:9>
|   |   |-CaseStmt 0x1531e82dcb0 <line:1891:5, line:1900:9>
|   |   | |-ConstantExpr 0x1531e82dc98 <line:1891:10> 'int'
|   |   | | `-DeclRefExpr 0x1531e82dc78 <col:10> 'int' EnumConstant 0x1531e811c80 'PROTO_POP3' 'int'
|   |   | `-CompoundStmt 0x1531e82dfa8 <line:1892:9, line:1900:9>
|   |   |   `-IfStmt 0x1531e82df90 <line:1896:13, line:1899:13>
|   |   |     |-BinaryOperator 0x1531e82def8 <line:1896:17, col:28> 'int' '<'
|   |   |     | |-ImplicitCastExpr 0x1531e82dee0 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1531e82de98 <col:17> 'int' lvalue Var 0x1531e81cb90 'mbuf_len' 'int'
|   |   |     | `-IntegerLiteral 0x1531e82deb8 <col:28> 'int' 0
|   |   |     `-CompoundStmt 0x1531e82df78 <col:31, line:1899:13>
|   |   |       `-GotoStmt 0x1531e82df60 <line:1898:17, col:22> 'end' 0x1531e818c40
|   |   |-BreakStmt 0x1531e82dfc0 <line:1901:9>
|   |   |-CaseStmt 0x1531e82e000 <line:1902:5, line:1927:9>
|   |   | |-ConstantExpr 0x1531e82dfe8 <line:1902:10> 'int'
|   |   | | `-DeclRefExpr 0x1531e82dfc8 <col:10> 'int' EnumConstant 0x1531e811cd8 'PROTO_IMAP' 'int'
|   |   | `-CompoundStmt 0x1531e82e958 <line:1903:9, line:1927:9>
|   |   |   |-DeclStmt 0x1531e82e0d0 <line:1904:13, col:28>
|   |   |   | `-VarDecl 0x1531e82e040 <col:13, col:27> col:17 used foundit 'int' cinit
|   |   |   |   `-IntegerLiteral 0x1531e82e0a8 <col:27> 'int' 0
|   |   |   `-DoStmt 0x1531e82e718 <line:1912:13, line:1917:50>
|   |   |     |-CompoundStmt 0x1531e82e578 <line:1912:16, line:1916:13>
|   |   |     | `-IfStmt 0x1531e82e560 <line:1914:17, line:1915:31>
|   |   |     |   |-CallExpr 0x1531e82e450 <line:1914:21, col:44> 'char *'
|   |   |     |   | |-ImplicitCastExpr 0x1531e82e438 <col:21> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |     |   | | `-DeclRefExpr 0x1531e82e3a8 <col:21> 'char *(const char *, const char *)' Function 0x1531e7432f8 'strstr' 'char *(const char *, const char *)'
|   |   |     |   | |-ImplicitCastExpr 0x1531e82e498 <col:28> 'const char *' <NoOp>
|   |   |     |   | | `-ImplicitCastExpr 0x1531e82e480 <col:28> 'char *' <LValueToRValue>
|   |   |     |   | |   `-DeclRefExpr 0x1531e82e3c8 <col:28> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |     |   | `-ImplicitCastExpr 0x1531e82e4c8 <col:34> 'const char *' <NoOp>
|   |   |     |   |   `-ImplicitCastExpr 0x1531e82e4b0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |     |   |     `-StringLiteral 0x1531e82e3e8 <col:34> 'char [9]' lvalue "STARTTLS"
|   |   |     |   `-BinaryOperator 0x1531e82e540 <line:1915:21, col:31> 'int' '='
|   |   |     |     |-DeclRefExpr 0x1531e82e4e0 <col:21> 'int' lvalue Var 0x1531e82e040 'foundit' 'int'
|   |   |     |     `-IntegerLiteral 0x1531e82e518 <col:31> 'int' 1
|   |   |     `-BinaryOperator 0x1531e82e6f8 <line:1917:20, col:47> 'int' '&&'
|   |   |       |-BinaryOperator 0x1531e82e5f0 <col:20, col:31> 'int' '>'
|   |   |       | |-ImplicitCastExpr 0x1531e82e5d8 <col:20> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x1531e82e590 <col:20> 'int' lvalue Var 0x1531e81cb90 'mbuf_len' 'int'
|   |   |       | `-IntegerLiteral 0x1531e82e5b0 <col:31> 'int' 3
|   |   |       `-BinaryOperator 0x1531e82e6d8 <col:36, col:47> 'int' '!='
|   |   |         |-ImplicitCastExpr 0x1531e82e6c0 <col:36, col:42> 'int' <IntegralCast>
|   |   |         | `-ImplicitCastExpr 0x1531e82e6a8 <col:36, col:42> 'char' <LValueToRValue>
|   |   |         |   `-ArraySubscriptExpr 0x1531e82e670 <col:36, col:42> 'char' lvalue
|   |   |         |     |-ImplicitCastExpr 0x1531e82e658 <col:36> 'char *' <LValueToRValue>
|   |   |         |     | `-DeclRefExpr 0x1531e82e610 <col:36> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |         |     `-IntegerLiteral 0x1531e82e630 <col:41> 'int' 0
|   |   |         `-CharacterLiteral 0x1531e82e690 <col:47> 'int' 46
|   |   |-BreakStmt 0x1531e82e978 <line:1928:9>
|   |   |-CaseStmt 0x1531e82e9b8 <line:1929:5, line:1943:9>
|   |   | |-ConstantExpr 0x1531e82e9a0 <line:1929:10> 'int'
|   |   | | `-DeclRefExpr 0x1531e82e980 <col:10> 'int' EnumConstant 0x1531e811d30 'PROTO_FTP' 'int'
|   |   | `-CompoundStmt 0x1531e82ee98 <line:1930:9, line:1943:9>
|   |   |   `-DoStmt 0x1531e82ed20 <line:1934:13, line:1937:50>
|   |   |     |-CompoundStmt 0x1531e82eb88 <line:1934:16, line:1936:13>
|   |   |     `-BinaryOperator 0x1531e82ed00 <line:1937:20, col:47> 'int' '&&'
|   |   |       |-BinaryOperator 0x1531e82ebf8 <col:20, col:31> 'int' '>'
|   |   |       | |-ImplicitCastExpr 0x1531e82ebe0 <col:20> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x1531e82eb98 <col:20> 'int' lvalue Var 0x1531e81cb90 'mbuf_len' 'int'
|   |   |       | `-IntegerLiteral 0x1531e82ebb8 <col:31> 'int' 3
|   |   |       `-BinaryOperator 0x1531e82ece0 <col:36, col:47> 'int' '=='
|   |   |         |-ImplicitCastExpr 0x1531e82ecc8 <col:36, col:42> 'int' <IntegralCast>
|   |   |         | `-ImplicitCastExpr 0x1531e82ecb0 <col:36, col:42> 'char' <LValueToRValue>
|   |   |         |   `-ArraySubscriptExpr 0x1531e82ec78 <col:36, col:42> 'char' lvalue
|   |   |         |     |-ImplicitCastExpr 0x1531e82ec60 <col:36> 'char *' <LValueToRValue>
|   |   |         |     | `-DeclRefExpr 0x1531e82ec18 <col:36> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |         |     `-IntegerLiteral 0x1531e82ec38 <col:41> 'int' 3
|   |   |         `-CharacterLiteral 0x1531e82ec98 <col:47> 'int' 45
|   |   |-BreakStmt 0x1531e82eeb0 <line:1944:9>
|   |   |-CaseStmt 0x1531e82eef0 <line:1945:5, line:1975:9>
|   |   | |-ConstantExpr 0x1531e82eed8 <line:1945:10> 'int'
|   |   | | `-DeclRefExpr 0x1531e82eeb8 <col:10> 'int' EnumConstant 0x1531e811de0 'PROTO_XMPP' 'int'
|   |   | `-CaseStmt 0x1531e82ef50 <line:1946:5, line:1975:9>
|   |   |   |-ConstantExpr 0x1531e82ef38 <line:1946:10> 'int'
|   |   |   | `-DeclRefExpr 0x1531e82ef18 <col:10> 'int' EnumConstant 0x1531e811e38 'PROTO_XMPP_SERVER' 'int'
|   |   |   `-CompoundStmt 0x1531e8440d0 <line:1947:9, line:1975:9>
|   |   |     |-DeclStmt 0x1531e82f020 <line:1948:13, col:25>
|   |   |     | `-VarDecl 0x1531e82ef90 <col:13, col:24> col:17 used seen 'int' cinit
|   |   |     |   `-IntegerLiteral 0x1531e82eff8 <col:24> 'int' 0
|   |   |     |-BinaryOperator 0x1531e82f590 <line:1955:13, col:26> 'char' '='
|   |   |     | |-ArraySubscriptExpr 0x1531e82f530 <col:13, col:22> 'char' lvalue
|   |   |     | | |-ImplicitCastExpr 0x1531e82f500 <col:13> 'char *' <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x1531e82f4c0 <col:13> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |     | | `-ImplicitCastExpr 0x1531e82f518 <col:18> 'int' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x1531e82f4e0 <col:18> 'int' lvalue Var 0x1531e82ef90 'seen' 'int'
|   |   |     | `-ImplicitCastExpr 0x1531e82f578 <col:26> 'char' <IntegralCast>
|   |   |     |   `-IntegerLiteral 0x1531e82f550 <col:26> 'int' 0
|   |   |     |-WhileStmt 0x1531e843c28 <line:1956:13, line:1967:13>
|   |   |     | |-BinaryOperator 0x1531e843978 <line:1956:20, line:1959:84> 'int' '&&'
|   |   |     | | |-UnaryOperator 0x1531e8437e0 <line:1956:20, line:1957:78> 'int' prefix '!' cannot overflow
|   |   |     | | | `-CallExpr 0x1531e843750 <line:1956:21, line:1957:78> 'char *'
|   |   |     | | |   |-ImplicitCastExpr 0x1531e82f670 <line:1956:21> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |     | | |   | `-DeclRefExpr 0x1531e82f5b0 <col:21> 'char *(const char *, const char *)' Function 0x1531e7432f8 'strstr' 'char *(const char *, const char *)'
|   |   |     | | |   |-ImplicitCastExpr 0x1531e843798 <line:1957:21> 'const char *' <NoOp>
|   |   |     | | |   | `-ImplicitCastExpr 0x1531e843780 <col:21> 'char *' <LValueToRValue>
|   |   |     | | |   |   `-DeclRefExpr 0x1531e82f5d0 <col:21> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |     | | |   `-ImplicitCastExpr 0x1531e8437c8 <col:27> 'const char *' <NoOp>
|   |   |     | | |     `-ImplicitCastExpr 0x1531e8437b0 <col:27> 'char *' <ArrayToPointerDecay>
|   |   |     | | |       `-StringLiteral 0x1531e82f5f0 <col:27> 'char [50]' lvalue "<starttls xmlns='urn:ietf:params:xml:ns:xmpp-tls'"
|   |   |     | | `-UnaryOperator 0x1531e843960 <line:1958:23, line:1959:84> 'int' prefix '!' cannot overflow
|   |   |     | |   `-CallExpr 0x1531e8438d0 <line:1958:24, line:1959:84> 'char *'
|   |   |     | |     |-ImplicitCastExpr 0x1531e8438b8 <line:1958:24> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |     | |     | `-DeclRefExpr 0x1531e8437f8 <col:24> 'char *(const char *, const char *)' Function 0x1531e7432f8 'strstr' 'char *(const char *, const char *)'
|   |   |     | |     |-ImplicitCastExpr 0x1531e843918 <col:31> 'const char *' <NoOp>
|   |   |     | |     | `-ImplicitCastExpr 0x1531e843900 <col:31> 'char *' <LValueToRValue>
|   |   |     | |     |   `-DeclRefExpr 0x1531e843818 <col:31> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |     | |     `-ImplicitCastExpr 0x1531e843948 <line:1959:31> 'const char *' <NoOp>
|   |   |     | |       `-ImplicitCastExpr 0x1531e843930 <col:31> 'char *' <ArrayToPointerDecay>
|   |   |     | |         `-StringLiteral 0x1531e843838 <col:31> 'char [50]' lvalue "<starttls xmlns=\"urn:ietf:params:xml:ns:xmpp-tls\""
|   |   |     | `-CompoundStmt 0x1531e843c08 <line:1960:13, line:1967:13>
|   |   |     |   |-IfStmt 0x1531e843b00 <line:1963:17, line:1964:26>
|   |   |     |   | |-BinaryOperator 0x1531e843ac8 <line:1963:21, col:29> 'int' '<='
|   |   |     |   | | |-ImplicitCastExpr 0x1531e843ab0 <col:21> 'int' <LValueToRValue>
|   |   |     |   | | | `-DeclRefExpr 0x1531e843a68 <col:21> 'int' lvalue Var 0x1531e82ef90 'seen' 'int'
|   |   |     |   | | `-IntegerLiteral 0x1531e843a88 <col:29> 'int' 0
|   |   |     |   | `-GotoStmt 0x1531e843ae8 <line:1964:21, col:26> 'shut' 0x1531e830b90
|   |   |     |   `-BinaryOperator 0x1531e843be8 <line:1966:17, col:30> 'char' '='
|   |   |     |     |-ArraySubscriptExpr 0x1531e843b88 <col:17, col:26> 'char' lvalue
|   |   |     |     | |-ImplicitCastExpr 0x1531e843b58 <col:17> 'char *' <LValueToRValue>
|   |   |     |     | | `-DeclRefExpr 0x1531e843b18 <col:17> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |     |     | `-ImplicitCastExpr 0x1531e843b70 <col:22> 'int' <LValueToRValue>
|   |   |     |     |   `-DeclRefExpr 0x1531e843b38 <col:22> 'int' lvalue Var 0x1531e82ef90 'seen' 'int'
|   |   |     |     `-ImplicitCastExpr 0x1531e843bd0 <col:30> 'char' <IntegralCast>
|   |   |     |       `-IntegerLiteral 0x1531e843ba8 <col:30> 'int' 0
|   |   |     |-BinaryOperator 0x1531e843e50 <line:1971:13, col:26> 'char' '='
|   |   |     | |-ArraySubscriptExpr 0x1531e843df0 <col:13, col:22> 'char' lvalue
|   |   |     | | |-ImplicitCastExpr 0x1531e843dc0 <col:13> 'char *' <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x1531e843d80 <col:13> 'char *' lvalue Var 0x1531e81a820 'sbuf' 'char *'
|   |   |     | | `-ImplicitCastExpr 0x1531e843dd8 <col:18> 'int' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x1531e843da0 <col:18> 'int' lvalue Var 0x1531e82ef90 'seen' 'int'
|   |   |     | `-ImplicitCastExpr 0x1531e843e38 <col:26> 'char' <IntegralCast>
|   |   |     |   `-IntegerLiteral 0x1531e843e10 <col:26> 'int' 0
|   |   |     |-IfStmt 0x1531e843fd8 <line:1972:13, line:1973:22>
|   |   |     | |-UnaryOperator 0x1531e843fa8 <line:1972:17, col:41> 'int' prefix '!' cannot overflow
|   |   |     | | `-CallExpr 0x1531e843f18 <col:18, col:41> 'char *'
|   |   |     | |   |-ImplicitCastExpr 0x1531e843f00 <col:18> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |   |     | |   | `-DeclRefExpr 0x1531e843e70 <col:18> 'char *(const char *, const char *)' Function 0x1531e7432f8 'strstr' 'char *(const char *, const char *)'
|   |   |     | |   |-ImplicitCastExpr 0x1531e843f60 <col:25> 'const char *' <NoOp>
|   |   |     | |   | `-ImplicitCastExpr 0x1531e843f48 <col:25> 'char *' <LValueToRValue>
|   |   |     | |   |   `-DeclRefExpr 0x1531e843e90 <col:25> 'char *' lvalue Var 0x1531e81a820 'sbuf' 'char *'
|   |   |     | |   `-ImplicitCastExpr 0x1531e843f90 <col:31> 'const char *' <NoOp>
|   |   |     | |     `-ImplicitCastExpr 0x1531e843f78 <col:31> 'char *' <ArrayToPointerDecay>
|   |   |     | |       `-StringLiteral 0x1531e843eb0 <col:31> 'char [9]' lvalue "<proceed"
|   |   |     | `-GotoStmt 0x1531e843fc0 <line:1973:17, col:22> 'shut' 0x1531e830b90
|   |   |     `-BinaryOperator 0x1531e8440b0 <line:1974:13, col:23> 'char' '='
|   |   |       |-ArraySubscriptExpr 0x1531e844050 <col:13, col:19> 'char' lvalue
|   |   |       | |-ImplicitCastExpr 0x1531e844038 <col:13> 'char *' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x1531e843ff0 <col:13> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |       | `-IntegerLiteral 0x1531e844010 <col:18> 'int' 0
|   |   |       `-ImplicitCastExpr 0x1531e844098 <col:23> 'char' <IntegralCast>
|   |   |         `-IntegerLiteral 0x1531e844070 <col:23> 'int' 0
|   |   |-BreakStmt 0x1531e844110 <line:1976:9>
|   |   |-CaseStmt 0x1531e844150 <line:1977:5, line:2005:9>
|   |   | |-ConstantExpr 0x1531e844138 <line:1977:10> 'int'
|   |   | | `-DeclRefExpr 0x1531e844118 <col:10> 'int' EnumConstant 0x1531e811d88 'PROTO_TELNET' 'int'
|   |   | `-CompoundStmt 0x1531e8453a0 <line:1978:9, line:2005:9>
|   |   |   |-DeclStmt 0x1531e844488 <line:1979:13, line:1982:14>
|   |   |   | `-VarDecl 0x1531e844200 <line:1979:13, line:1982:13> line:1979:40 used tls_do 'const unsigned char [3]' static cinit
|   |   |   |   `-InitListExpr 0x1531e844348 <col:51, line:1982:13> 'const unsigned char [3]'
|   |   |   |     |-ImplicitCastExpr 0x1531e844388 <line:1981:20> 'unsigned char' <IntegralCast>
|   |   |   |     | `-IntegerLiteral 0x1531e844268 <col:20> 'int' 255
|   |   |   |     |-ImplicitCastExpr 0x1531e8443a8 <col:27> 'unsigned char' <IntegralCast>
|   |   |   |     | `-IntegerLiteral 0x1531e844290 <col:27> 'int' 253
|   |   |   |     `-ImplicitCastExpr 0x1531e8443d0 <col:32> 'unsigned char' <IntegralCast>
|   |   |   |       `-IntegerLiteral 0x1531e8442b8 <col:32> 'int' 46
|   |   |   |-DeclStmt 0x1531e8446d0 <line:1983:13, line:1986:14>
|   |   |   | `-VarDecl 0x1531e8444c8 <line:1983:13, line:1986:13> line:1983:40 used tls_will 'const unsigned char [3]' static cinit
|   |   |   |   `-InitListExpr 0x1531e844610 <col:53, line:1986:13> 'const unsigned char [3]'
|   |   |   |     |-ImplicitCastExpr 0x1531e844650 <line:1985:20> 'unsigned char' <IntegralCast>
|   |   |   |     | `-IntegerLiteral 0x1531e844530 <col:20> 'int' 255
|   |   |   |     |-ImplicitCastExpr 0x1531e844670 <col:25> 'unsigned char' <IntegralCast>
|   |   |   |     | `-IntegerLiteral 0x1531e844558 <col:25> 'int' 251
|   |   |   |     `-ImplicitCastExpr 0x1531e844698 <col:30> 'unsigned char' <IntegralCast>
|   |   |   |       `-IntegerLiteral 0x1531e844580 <col:30> 'int' 46
|   |   |   |-DeclStmt 0x1531e844aa8 <line:1987:13, line:1990:14>
|   |   |   | `-VarDecl 0x1531e844710 <line:1987:13, line:1990:13> line:1987:40 used tls_follows 'const unsigned char [6]' static cinit
|   |   |   |   `-InitListExpr 0x1531e8448e8 <col:56, line:1990:13> 'const unsigned char [6]'
|   |   |   |     |-ImplicitCastExpr 0x1531e844928 <line:1989:20> 'unsigned char' <IntegralCast>
|   |   |   |     | `-IntegerLiteral 0x1531e844778 <col:20> 'int' 255
|   |   |   |     |-ImplicitCastExpr 0x1531e844948 <col:25> 'unsigned char' <IntegralCast>
|   |   |   |     | `-IntegerLiteral 0x1531e8447a0 <col:25> 'int' 250
|   |   |   |     |-ImplicitCastExpr 0x1531e844970 <col:30> 'unsigned char' <IntegralCast>
|   |   |   |     | `-IntegerLiteral 0x1531e8447c8 <col:30> 'int' 46
|   |   |   |     |-ImplicitCastExpr 0x1531e8449a8 <col:40> 'unsigned char' <IntegralCast>
|   |   |   |     | `-IntegerLiteral 0x1531e8447f0 <col:40> 'int' 1
|   |   |   |     |-ImplicitCastExpr 0x1531e8449c0 <col:48> 'unsigned char' <IntegralCast>
|   |   |   |     | `-IntegerLiteral 0x1531e844818 <col:48> 'int' 255
|   |   |   |     `-ImplicitCastExpr 0x1531e844a18 <col:53> 'unsigned char' <IntegralCast>
|   |   |   |       `-IntegerLiteral 0x1531e844840 <col:53> 'int' 240
|   |   |   |-DeclStmt 0x1531e844b40 <line:1991:13, col:22>
|   |   |   | `-VarDecl 0x1531e844ad8 <col:13, col:17> col:17 used bytes 'int'
|   |   |   |-IfStmt 0x1531e844f00 <line:1995:13, line:1996:22>
|   |   |   | |-BinaryOperator 0x1531e844ec8 <line:1995:17, col:58> 'int' '||'
|   |   |   | | |-BinaryOperator 0x1531e844ca0 <col:17, col:26> 'int' '!='
|   |   |   | | | |-ImplicitCastExpr 0x1531e844c88 <col:17> 'int' <LValueToRValue>
|   |   |   | | | | `-DeclRefExpr 0x1531e844c40 <col:17> 'int' lvalue Var 0x1531e844ad8 'bytes' 'int'
|   |   |   | | | `-IntegerLiteral 0x1531e844c60 <col:26> 'int' 3
|   |   |   | | `-BinaryOperator 0x1531e844ea8 <col:31, col:58> 'int' '!='
|   |   |   | |   |-CallExpr 0x1531e844dd0 <col:31, col:53> 'int'
|   |   |   | |   | |-ImplicitCastExpr 0x1531e844db8 <col:31> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | |   | | `-DeclRefExpr 0x1531e844cc0 <col:31> 'int (const void *, const void *, unsigned long long)' Function 0x1531e730df8 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   |   |   | |   | |-ImplicitCastExpr 0x1531e844e20 <col:38> 'const void *' <BitCast>
|   |   |   | |   | | `-ImplicitCastExpr 0x1531e844e08 <col:38> 'char *' <LValueToRValue>
|   |   |   | |   | |   `-DeclRefExpr 0x1531e844ce0 <col:38> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |   | |   | |-ImplicitCastExpr 0x1531e844e50 <col:44> 'const void *' <BitCast>
|   |   |   | |   | | `-ImplicitCastExpr 0x1531e844e38 <col:44> 'const unsigned char *' <ArrayToPointerDecay>
|   |   |   | |   | |   `-DeclRefExpr 0x1531e844d00 <col:44> 'const unsigned char [3]' lvalue Var 0x1531e844200 'tls_do' 'const unsigned char [3]'
|   |   |   | |   | `-ImplicitCastExpr 0x1531e844e68 <col:52> 'unsigned long long' <IntegralCast>
|   |   |   | |   |   `-IntegerLiteral 0x1531e844d38 <col:52> 'int' 3
|   |   |   | |   `-IntegerLiteral 0x1531e844e80 <col:58> 'int' 0
|   |   |   | `-GotoStmt 0x1531e844ee8 <line:1996:17, col:22> 'shut' 0x1531e830b90
|   |   |   `-IfStmt 0x1531e845388 <line:2003:13, line:2004:22>
|   |   |     |-BinaryOperator 0x1531e845350 <line:2003:17, col:63> 'int' '||'
|   |   |     | |-BinaryOperator 0x1531e845168 <col:17, col:26> 'int' '!='
|   |   |     | | |-ImplicitCastExpr 0x1531e845150 <col:17> 'int' <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x1531e845108 <col:17> 'int' lvalue Var 0x1531e844ad8 'bytes' 'int'
|   |   |     | | `-IntegerLiteral 0x1531e845128 <col:26> 'int' 6
|   |   |     | `-BinaryOperator 0x1531e845330 <col:31, col:63> 'int' '!='
|   |   |     |   |-CallExpr 0x1531e845258 <col:31, col:58> 'int'
|   |   |     |   | |-ImplicitCastExpr 0x1531e845240 <col:31> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |     |   | | `-DeclRefExpr 0x1531e845188 <col:31> 'int (const void *, const void *, unsigned long long)' Function 0x1531e730df8 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   |   |     |   | |-ImplicitCastExpr 0x1531e8452a8 <col:38> 'const void *' <BitCast>
|   |   |     |   | | `-ImplicitCastExpr 0x1531e845290 <col:38> 'char *' <LValueToRValue>
|   |   |     |   | |   `-DeclRefExpr 0x1531e8451a8 <col:38> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |     |   | |-ImplicitCastExpr 0x1531e8452d8 <col:44> 'const void *' <BitCast>
|   |   |     |   | | `-ImplicitCastExpr 0x1531e8452c0 <col:44> 'const unsigned char *' <ArrayToPointerDecay>
|   |   |     |   | |   `-DeclRefExpr 0x1531e8451c8 <col:44> 'const unsigned char [6]' lvalue Var 0x1531e844710 'tls_follows' 'const unsigned char [6]'
|   |   |     |   | `-ImplicitCastExpr 0x1531e8452f0 <col:57> 'unsigned long long' <IntegralCast>
|   |   |     |   |   `-IntegerLiteral 0x1531e8451e8 <col:57> 'int' 6
|   |   |     |   `-IntegerLiteral 0x1531e845308 <col:63> 'int' 0
|   |   |     `-GotoStmt 0x1531e845370 <line:2004:17, col:22> 'shut' 0x1531e830b90
|   |   |-BreakStmt 0x1531e8453e0 <line:2006:9>
|   |   |-CaseStmt 0x1531e845420 <line:2007:5, line:2049:9>
|   |   | |-ConstantExpr 0x1531e845408 <line:2007:10> 'int'
|   |   | | `-DeclRefExpr 0x1531e8453e8 <col:10> 'int' EnumConstant 0x1531e811e90 'PROTO_CONNECT' 'int'
|   |   | `-CompoundStmt 0x1531e846238 <line:2008:9, line:2049:9>
|   |   |   |-DeclStmt 0x1531e845760 <line:2009:13, line:2013:38>
|   |   |   | |-EnumDecl 0x1531e845448 <line:2009:13, line:2013:13> line:2009:13
|   |   |   | | |-EnumConstantDecl 0x1531e845520 <line:2010:17> col:17 referenced error_proto 'int'
|   |   |   | | |-EnumConstantDecl 0x1531e845578 <line:2011:17> col:17 referenced error_connect 'int'
|   |   |   | | `-EnumConstantDecl 0x1531e8455d0 <line:2012:17> col:17 referenced success 'int'
|   |   |   | `-VarDecl 0x1531e845688 <line:2009:13, line:2013:25> col:15 used foundit 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' cinit
|   |   |   |   `-ImplicitCastExpr 0x1531e845710 <col:25> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' <IntegralCast>
|   |   |   |     `-DeclRefExpr 0x1531e8456f0 <col:25> 'int' EnumConstant 0x1531e845578 'error_connect' 'int'
|   |   |   |-IfStmt 0x1531e845e98 <line:2026:13, line:2036:13> has_else
|   |   |   | |-BinaryOperator 0x1531e845a78 <line:2026:17, col:28> 'int' '!='
|   |   |   | | |-ImplicitCastExpr 0x1531e845a60 <col:17, col:23> 'int' <IntegralCast>
|   |   |   | | | `-ImplicitCastExpr 0x1531e845a48 <col:17, col:23> 'char' <LValueToRValue>
|   |   |   | | |   `-ArraySubscriptExpr 0x1531e845a10 <col:17, col:23> 'char' lvalue
|   |   |   | | |     |-ImplicitCastExpr 0x1531e8459f8 <col:17> 'char *' <LValueToRValue>
|   |   |   | | |     | `-DeclRefExpr 0x1531e8459b0 <col:17> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |   | | |     `-IntegerLiteral 0x1531e8459d0 <col:22> 'int' 8
|   |   |   | | `-CharacterLiteral 0x1531e845a30 <col:28> 'int' 32
|   |   |   | |-CompoundStmt 0x1531e845bc0 <col:33, line:2031:13>
|   |   |   | | `-BinaryOperator 0x1531e845ba0 <line:2030:17, col:27> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' '='
|   |   |   | |   |-DeclRefExpr 0x1531e845b30 <col:17> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' lvalue Var 0x1531e845688 'foundit' 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)'
|   |   |   | |   `-ImplicitCastExpr 0x1531e845b88 <col:27> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' <IntegralCast>
|   |   |   | |     `-DeclRefExpr 0x1531e845b68 <col:27> 'int' EnumConstant 0x1531e845520 'error_proto' 'int'
|   |   |   | `-IfStmt 0x1531e845e70 <line:2031:20, line:2036:13> has_else
|   |   |   |   |-BinaryOperator 0x1531e845ca0 <line:2031:24, col:35> 'int' '!='
|   |   |   |   | |-ImplicitCastExpr 0x1531e845c88 <col:24, col:30> 'int' <IntegralCast>
|   |   |   |   | | `-ImplicitCastExpr 0x1531e845c70 <col:24, col:30> 'char' <LValueToRValue>
|   |   |   |   | |   `-ArraySubscriptExpr 0x1531e845c38 <col:24, col:30> 'char' lvalue
|   |   |   |   | |     |-ImplicitCastExpr 0x1531e845c20 <col:24> 'char *' <LValueToRValue>
|   |   |   |   | |     | `-DeclRefExpr 0x1531e845bd8 <col:24> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |   |   |   | |     `-IntegerLiteral 0x1531e845bf8 <col:29> 'int' 9
|   |   |   |   | `-CharacterLiteral 0x1531e845c58 <col:35> 'int' 50
|   |   |   |   |-CompoundStmt 0x1531e845dd0 <col:40, line:2034:13>
|   |   |   |   `-CompoundStmt 0x1531e845e58 <col:20, line:2036:13>
|   |   |   |     `-BinaryOperator 0x1531e845e38 <line:2035:17, col:27> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' '='
|   |   |   |       |-DeclRefExpr 0x1531e845de0 <col:17> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' lvalue Var 0x1531e845688 'foundit' 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)'
|   |   |   |       `-ImplicitCastExpr 0x1531e845e20 <col:27> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' <IntegralCast>
|   |   |   |         `-DeclRefExpr 0x1531e845e00 <col:27> 'int' EnumConstant 0x1531e8455d0 'success' 'int'
|   |   |   |-IfStmt 0x1531e8460e8 <line:2037:13, line:2042:13>
|   |   |   | |-BinaryOperator 0x1531e845f30 <line:2037:17, col:28> 'int' '!='
|   |   |   | | |-ImplicitCastExpr 0x1531e845f18 <col:17> 'int' <IntegralCast>
|   |   |   | | | `-ImplicitCastExpr 0x1531e845f00 <col:17> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' <LValueToRValue>
|   |   |   | | |   `-DeclRefExpr 0x1531e845ec0 <col:17> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' lvalue Var 0x1531e845688 'foundit' 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)'
|   |   |   | | `-DeclRefExpr 0x1531e845ee0 <col:28> 'int' EnumConstant 0x1531e845520 'error_proto' 'int'
|   |   |   | `-CompoundStmt 0x1531e8460d0 <col:41, line:2042:13>
|   |   |   |   `-DoStmt 0x1531e8460b0 <line:2039:17, line:2041:38>
|   |   |   |     |-CompoundStmt 0x1531e846020 <line:2039:20, line:2041:17>
|   |   |   |     `-BinaryOperator 0x1531e846090 <col:26, col:37> 'int' '>'
|   |   |   |       |-ImplicitCastExpr 0x1531e846078 <col:26> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x1531e846030 <col:26> 'int' lvalue Var 0x1531e81cb90 'mbuf_len' 'int'
|   |   |   |       `-IntegerLiteral 0x1531e846050 <col:37> 'int' 2
|   |   |   `-IfStmt 0x1531e846220 <line:2046:13, line:2048:13>
|   |   |     |-BinaryOperator 0x1531e8461d0 <line:2046:17, col:28> 'int' '!='
|   |   |     | |-ImplicitCastExpr 0x1531e8461b8 <col:17> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x1531e8461a0 <col:17> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x1531e846160 <col:17> 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)' lvalue Var 0x1531e845688 'foundit' 'enum (anonymous enum at .//openssl//file_jk/after\apps\s_client.c:2009:13)':'enum (anonymous at .//openssl//file_jk/after\apps\s_client.c:2009:13)'
|   |   |     | `-DeclRefExpr 0x1531e846180 <col:28> 'int' EnumConstant 0x1531e8455d0 'success' 'int'
|   |   |     `-CompoundStmt 0x1531e846208 <col:37, line:2048:13>
|   |   |       `-GotoStmt 0x1531e8461f0 <line:2047:17, col:22> 'shut' 0x1531e830b90
|   |   |-BreakStmt 0x1531e846268 <line:2050:9>
|   |   `-CaseStmt 0x1531e8462a8 <line:2051:5, line:2111:9>
|   |     |-ConstantExpr 0x1531e846290 <line:2051:10> 'int'
|   |     | `-DeclRefExpr 0x1531e846270 <col:10> 'int' EnumConstant 0x1531e811ee8 'PROTO_IRC' 'int'
|   |     `-CompoundStmt 0x1531e84b8a8 <line:2052:9, line:2111:9>
|   |       |-DeclStmt 0x1531e846350 <line:2053:13, col:24>
|   |       | `-VarDecl 0x1531e8462e8 <col:13, col:17> col:17 used numeric 'int'
|   |       |-DoStmt 0x1531e847650 <line:2061:13, line:2101:36>
|   |       | |-CompoundStmt 0x1531e847598 <line:2061:16, line:2101:13>
|   |       | | |-BinaryOperator 0x1531e846570 <line:2062:17, col:27> 'int' '='
|   |       | | | |-DeclRefExpr 0x1531e846510 <col:17> 'int' lvalue Var 0x1531e8462e8 'numeric' 'int'
|   |       | | | `-IntegerLiteral 0x1531e846548 <col:27> 'int' 0
|   |       | | |-IfStmt 0x1531e846ca0 <line:2075:17, line:2084:17>
|   |       | | | |-OpaqueValueExpr 0x1531e846c88 <<invalid sloc>> '_Bool'
|   |       | | | `-CompoundStmt 0x1531e846c70 <line:2079:46, line:2084:17>
|   |       | | |   `-BreakStmt 0x1531e846c68 <line:2083:21>
|   |       | | |-IfStmt 0x1531e847048 <line:2087:17, line:2088:21>
|   |       | | | |-BinaryOperator 0x1531e847020 <line:2087:21, col:73> 'int' '||'
|   |       | | | | |-BinaryOperator 0x1531e846de8 <col:21, col:32> 'int' '<'
|   |       | | | | | |-ImplicitCastExpr 0x1531e846dd0 <col:21> 'int' <LValueToRValue>
|   |       | | | | | | `-DeclRefExpr 0x1531e846d88 <col:21> 'int' lvalue Var 0x1531e81cb90 'mbuf_len' 'int'
|   |       | | | | | `-IntegerLiteral 0x1531e846da8 <col:32> 'int' 1
|   |       | | | | `-BinaryOperator 0x1531e847000 <col:37, col:73> 'int' '!='
|   |       | | | |   |-CallExpr 0x1531e846f40 <col:37, col:68> 'int'
|   |       | | | |   | |-ImplicitCastExpr 0x1531e846f28 <col:37> 'int (*)(const char *restrict, const char *restrict, ...)' <FunctionToPointerDecay>
|   |       | | | |   | | `-DeclRefExpr 0x1531e846e08 <col:37> 'int (const char *restrict, const char *restrict, ...)' Function 0x1531e75dc48 'sscanf' 'int (const char *restrict, const char *restrict, ...)'
|   |       | | | |   | |-ImplicitCastExpr 0x1531e846f90 <col:44> 'const char *' <NoOp>
|   |       | | | |   | | `-ImplicitCastExpr 0x1531e846f78 <col:44> 'char *' <LValueToRValue>
|   |       | | | |   | |   `-DeclRefExpr 0x1531e846e28 <col:44> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |       | | | |   | |-ImplicitCastExpr 0x1531e846fc0 <col:50> 'const char *' <NoOp>
|   |       | | | |   | | `-ImplicitCastExpr 0x1531e846fa8 <col:50> 'char *' <ArrayToPointerDecay>
|   |       | | | |   | |   `-StringLiteral 0x1531e846e48 <col:50> 'char [7]' lvalue "%*s %d"
|   |       | | | |   | `-UnaryOperator 0x1531e846e88 <col:60, col:61> 'int *' prefix '&' cannot overflow
|   |       | | | |   |   `-DeclRefExpr 0x1531e846e68 <col:61> 'int' lvalue Var 0x1531e8462e8 'numeric' 'int'
|   |       | | | |   `-IntegerLiteral 0x1531e846fd8 <col:73> 'int' 1
|   |       | | | `-BreakStmt 0x1531e847040 <line:2088:21>
|   |       | | |-IfStmt 0x1531e847450 <line:2091:17, line:2095:17>
|   |       | | | |-BinaryOperator 0x1531e847398 <line:2091:21, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |       | | | | |-ParenExpr 0x1531e847180 <.//openssl//file_jk/after\apps\s_client.c:2091:21, col:54> 'int'
|   |       | | | | | `-BinaryOperator 0x1531e847160 <col:22, col:51> 'int' '||'
|   |       | | | | |   |-BinaryOperator 0x1531e8470c0 <col:22, col:33> 'int' '=='
|   |       | | | | |   | |-ImplicitCastExpr 0x1531e8470a8 <col:22> 'int' <LValueToRValue>
|   |       | | | | |   | | `-DeclRefExpr 0x1531e847060 <col:22> 'int' lvalue Var 0x1531e8462e8 'numeric' 'int'
|   |       | | | | |   | `-IntegerLiteral 0x1531e847080 <col:33> 'int' 451
|   |       | | | | |   `-BinaryOperator 0x1531e847140 <col:40, col:51> 'int' '=='
|   |       | | | | |     |-ImplicitCastExpr 0x1531e847128 <col:40> 'int' <LValueToRValue>
|   |       | | | | |     | `-DeclRefExpr 0x1531e8470e0 <col:40> 'int' lvalue Var 0x1531e8462e8 'numeric' 'int'
|   |       | | | | |     `-IntegerLiteral 0x1531e847100 <col:51> 'int' 421
|   |       | | | | `-BinaryOperator 0x1531e847378 <line:2092:24, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |       | | | |   |-CallExpr 0x1531e847248 <.//openssl//file_jk/after\apps\s_client.c:2092:24, col:47> 'char *'
|   |       | | | |   | |-ImplicitCastExpr 0x1531e847230 <col:24> 'char *(*)(const char *, const char *)' <FunctionToPointerDecay>
|   |       | | | |   | | `-DeclRefExpr 0x1531e8471a0 <col:24> 'char *(const char *, const char *)' Function 0x1531e7432f8 'strstr' 'char *(const char *, const char *)'
|   |       | | | |   | |-ImplicitCastExpr 0x1531e847290 <col:31> 'const char *' <NoOp>
|   |       | | | |   | | `-ImplicitCastExpr 0x1531e847278 <col:31> 'char *' <LValueToRValue>
|   |       | | | |   | |   `-DeclRefExpr 0x1531e8471c0 <col:31> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   |       | | | |   | `-ImplicitCastExpr 0x1531e8472c0 <col:37> 'const char *' <NoOp>
|   |       | | | |   |   `-ImplicitCastExpr 0x1531e8472a8 <col:37> 'char *' <ArrayToPointerDecay>
|   |       | | | |   |     `-StringLiteral 0x1531e8471e0 <col:37> 'char [9]' lvalue "STARTTLS"
|   |       | | | |   `-ImplicitCastExpr 0x1531e847360 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |       | | | |     `-ParenExpr 0x1531e847340 <col:17, col:27> 'void *'
|   |       | | | |       `-CStyleCastExpr 0x1531e847318 <col:18, col:26> 'void *' <NullToPointer>
|   |       | | | |         `-IntegerLiteral 0x1531e8472d8 <col:26> 'int' 0
|   |       | | | `-CompoundStmt 0x1531e847438 <.//openssl//file_jk/after\apps\s_client.c:2092:58, line:2095:17>
|   |       | | |   `-BreakStmt 0x1531e847430 <line:2094:21>
|   |       | | `-IfStmt 0x1531e847580 <line:2096:17, line:2100:17>
|   |       | |   |-BinaryOperator 0x1531e8474c8 <line:2096:21, col:32> 'int' '=='
|   |       | |   | |-ImplicitCastExpr 0x1531e8474b0 <col:21> 'int' <LValueToRValue>
|   |       | |   | | `-DeclRefExpr 0x1531e847468 <col:21> 'int' lvalue Var 0x1531e8462e8 'numeric' 'int'
|   |       | |   | `-IntegerLiteral 0x1531e847488 <col:32> 'int' 691
|   |       | |   `-CompoundStmt 0x1531e847568 <col:37, line:2100:17>
|   |       | |     `-BreakStmt 0x1531e847560 <line:2099:21>
|   |       | `-BinaryOperator 0x1531e847630 <line:2101:22, col:33> 'int' '!='
|   |       |   |-ImplicitCastExpr 0x1531e847618 <col:22> 'int' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1531e8475d0 <col:22> 'int' lvalue Var 0x1531e8462e8 'numeric' 'int'
|   |       |   `-IntegerLiteral 0x1531e8475f0 <col:33> 'int' 670
|   |       `-IfStmt 0x1531e84b890 <line:2106:13, line:2110:13>
|   |         |-BinaryOperator 0x1531e847730 <line:2106:17, col:28> 'int' '!='
|   |         | |-ImplicitCastExpr 0x1531e847718 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1531e8476d0 <col:17> 'int' lvalue Var 0x1531e8462e8 'numeric' 'int'
|   |         | `-IntegerLiteral 0x1531e8476f0 <col:28> 'int' 670
|   |         `-CompoundStmt 0x1531e84b870 <col:33, line:2110:13>
|   |           |-BinaryOperator 0x1531e84b838 <line:2108:17, col:23> 'int' '='
|   |           | |-DeclRefExpr 0x1531e84b7f0 <col:17> 'int' lvalue Var 0x1531e81d000 'ret' 'int'
|   |           | `-IntegerLiteral 0x1531e84b810 <col:23> 'int' 1
|   |           `-GotoStmt 0x1531e84b858 <line:2109:17, col:22> 'shut' 0x1531e830b90
|   |-ForStmt 0x1531e848230 <line:2114:5, line:2457:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1531e848200 <line:2114:14, line:2457:5>
|   |   |-IfStmt 0x1531e84bcf8 <line:2118:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> has_else
|   |   | |-OpaqueValueExpr 0x1531e84bce0 <<invalid sloc>> '_Bool'
|   |   | |-NullStmt 0x1531e84bcd8 <.//openssl//file_jk/after\apps\s_client.c:2119:13>
|   |   | `-BinaryOperator 0x1531e84bcb8 <line:2121:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'struct timeval *' '='
|   |   |   |-DeclRefExpr 0x1531e84bbf8 <.//openssl//file_jk/after\apps\s_client.c:2121:13> 'struct timeval *' lvalue Var 0x1531e81c400 'timeoutp' 'struct timeval *'
|   |   |   `-ImplicitCastExpr 0x1531e84bca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct timeval *' <NullToPointer>
|   |   |     `-ParenExpr 0x1531e84bc80 <col:17, col:27> 'void *'
|   |   |       `-CStyleCastExpr 0x1531e84bc58 <col:18, col:26> 'void *' <NullToPointer>
|   |   |         `-IntegerLiteral 0x1531e84bc18 <col:26> 'int' 0
|   |   |-IfStmt 0x1531e84caf8 <.//openssl//file_jk/after\apps\s_client.c:2123:9, line:2166:9> has_else
|   |   | |-OpaqueValueExpr 0x1531e84cae0 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1531e84c028 <line:2123:65, line:2126:9>
|   |   | | |-BinaryOperator 0x1531e84bfa0 <line:2124:13, col:23> 'int' '='
|   |   | | | |-DeclRefExpr 0x1531e84bf40 <col:13> 'int' lvalue Var 0x1531e81d0a8 'in_init' 'int'
|   |   | | | `-IntegerLiteral 0x1531e84bf78 <col:23> 'int' 1
|   |   | | `-BinaryOperator 0x1531e84c008 <line:2125:13, col:22> 'int' '='
|   |   | |   |-DeclRefExpr 0x1531e84bfc0 <col:13> 'int' lvalue Var 0x1531e81dce0 'tty_on' 'int'
|   |   | |   `-IntegerLiteral 0x1531e84bfe0 <col:22> 'int' 0
|   |   | `-CompoundStmt 0x1531e84cac0 <line:2126:16, line:2166:9>
|   |   |   |-BinaryOperator 0x1531e84c090 <line:2127:13, col:22> 'int' '='
|   |   |   | |-DeclRefExpr 0x1531e84c048 <col:13> 'int' lvalue Var 0x1531e81dce0 'tty_on' 'int'
|   |   |   | `-IntegerLiteral 0x1531e84c068 <col:22> 'int' 1
|   |   |   `-IfStmt 0x1531e84caa8 <line:2128:13, line:2165:13>
|   |   |     |-ImplicitCastExpr 0x1531e84c0d0 <line:2128:17> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1531e84c0b0 <col:17> 'int' lvalue Var 0x1531e81d0a8 'in_init' 'int'
|   |   |     `-CompoundStmt 0x1531e84ca68 <col:26, line:2165:13>
|   |   |       |-BinaryOperator 0x1531e84c130 <line:2129:17, col:27> 'int' '='
|   |   |       | |-DeclRefExpr 0x1531e84c0e8 <col:17> 'int' lvalue Var 0x1531e81d0a8 'in_init' 'int'
|   |   |       | `-IntegerLiteral 0x1531e84c108 <col:27> 'int' 0
|   |   |       |-IfStmt 0x1531e84c588 <line:2131:17, line:2139:17>
|   |   |       | |-ImplicitCastExpr 0x1531e84c170 <line:2131:21> 'char *' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x1531e84c150 <col:21> 'char *' lvalue Var 0x1531e81bc98 'sess_out' 'char *'
|   |   |       | `-CompoundStmt 0x1531e84c570 <col:31, line:2139:17>
|   |   |       |   `-IfStmt 0x1531e84c548 <line:2133:21, line:2137:25> has_else
|   |   |       |     |-OpaqueValueExpr 0x1531e84c530 <<invalid sloc>> '_Bool'
|   |   |       |     |-CompoundStmt 0x1531e84c4a0 <line:2133:31, line:2136:21>
|   |   |       |     `-NullStmt 0x1531e84c528 <line:2137:25>
|   |   |       |-IfStmt 0x1531e84c638 <line:2140:17, line:2143:17>
|   |   |       | |-ImplicitCastExpr 0x1531e84c5c0 <line:2140:21> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x1531e84c5a0 <col:21> 'int' lvalue Var 0x1531e8140b8 'c_brief' 'int'
|   |   |       | `-CompoundStmt 0x1531e84c628 <col:30, line:2143:17>
|   |   |       |-IfStmt 0x1531e84c740 <line:2146:17, line:2147:29>
|   |   |       | |-BinaryOperator 0x1531e84c6e8 <line:2146:21, col:32> 'int' '>'
|   |   |       | | |-ImplicitCastExpr 0x1531e84c6d0 <col:21> 'int' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x1531e84c688 <col:21> 'int' lvalue Var 0x1531e81cae8 'full_log' 'int'
|   |   |       | | `-IntegerLiteral 0x1531e84c6a8 <col:32> 'int' 0
|   |   |       | `-UnaryOperator 0x1531e84c728 <line:2147:21, col:29> 'int' postfix '--'
|   |   |       |   `-DeclRefExpr 0x1531e84c708 <col:21> 'int' lvalue Var 0x1531e81cae8 'full_log' 'int'
|   |   |       |-IfStmt 0x1531e84c8d0 <line:2149:17, line:2154:17>
|   |   |       | |-ImplicitCastExpr 0x1531e84c778 <line:2149:21> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x1531e84c758 <col:21> 'int' lvalue Var 0x1531e81d850 'starttls_proto' 'int'
|   |   |       | `-CompoundStmt 0x1531e84c8b8 <col:37, line:2154:17>
|   |   |       |   `-IfStmt 0x1531e84c8a0 <line:2152:21, line:2153:42>
|   |   |       |     |-UnaryOperator 0x1531e84c828 <line:2152:25, col:26> 'int' prefix '!' cannot overflow
|   |   |       |     | `-ImplicitCastExpr 0x1531e84c810 <col:26> 'int' <LValueToRValue>
|   |   |       |     |   `-DeclRefExpr 0x1531e84c7f0 <col:26> 'int' lvalue Var 0x1531e81cdf8 'reconnect' 'int'
|   |   |       |     `-BinaryOperator 0x1531e84c880 <line:2153:25, col:42> 'int' '='
|   |   |       |       |-DeclRefExpr 0x1531e84c840 <col:25> 'int' lvalue Var 0x1531e81d850 'starttls_proto' 'int'
|   |   |       |       `-DeclRefExpr 0x1531e84c860 <col:42> 'int' EnumConstant 0x1531e811bd0 'PROTO_OFF' 'int'
|   |   |       `-IfStmt 0x1531e84ca50 <line:2156:17, line:2164:17>
|   |   |         |-ImplicitCastExpr 0x1531e84c908 <line:2156:21> 'int' <LValueToRValue>
|   |   |         | `-DeclRefExpr 0x1531e84c8e8 <col:21> 'int' lvalue Var 0x1531e81cdf8 'reconnect' 'int'
|   |   |         `-CompoundStmt 0x1531e84ca30 <col:32, line:2164:17>
|   |   |           |-UnaryOperator 0x1531e84c940 <line:2157:21, col:30> 'int' postfix '--'
|   |   |           | `-DeclRefExpr 0x1531e84c920 <col:21> 'int' lvalue Var 0x1531e81cdf8 'reconnect' 'int'
|   |   |           `-GotoStmt 0x1531e84ca18 <line:2163:21, col:26> 're_start' 0x1531e82f778
|   |   |-IfStmt 0x1531e84d2a0 <line:2170:9, line:2236:9>
|   |   | |-UnaryOperator 0x1531e84ccc0 <line:2170:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1531e84cca8 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1531e84cc88 <col:14> 'int' lvalue Var 0x1531e81dd60 'ssl_pending' 'int'
|   |   | `-CompoundStmt 0x1531e84d280 <col:27, line:2236:9>
|   |   |   |-IfStmt 0x1531e84cf08 <line:2172:13, line:2184:13>
|   |   |   | |-ImplicitCastExpr 0x1531e84ccf8 <line:2172:17> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1531e84ccd8 <col:17> 'int' lvalue Var 0x1531e81dce0 'tty_on' 'int'
|   |   |   | `-CompoundStmt 0x1531e84cef8 <col:25, line:2184:13>
|   |   |   `-IfStmt 0x1531e84d268 <line:2230:13, line:2235:13>
|   |   |     |-BinaryOperator 0x1531e84d178 <line:2230:17, col:21> 'int' '<'
|   |   |     | |-ImplicitCastExpr 0x1531e84d160 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1531e84d118 <col:17> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |   |     | `-IntegerLiteral 0x1531e84d138 <col:21> 'int' 0
|   |   |     `-CompoundStmt 0x1531e84d250 <col:24, line:2235:13>
|   |   |       `-GotoStmt 0x1531e84d238 <line:2233:17, col:22> 'shut' 0x1531e830b90
|   |   `-IfStmt 0x1531e8481d8 <line:2241:9, line:2456:9> has_else
|   |     |-OpaqueValueExpr 0x1531e8481c0 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x1531e84a7f8 <line:2241:67, line:2306:9>
|   |     `-IfStmt 0x1531e848198 <line:2311:14, line:2456:9> has_else
|   |       |-OpaqueValueExpr 0x1531e848180 <<invalid sloc>> '_Bool'
|   |       |-CompoundStmt 0x1531e84aed8 <line:2313:9, line:2332:9>
|   |       | |-BinaryOperator 0x1531e84aaa0 <line:2317:13, col:61> 'int' '='
|   |       | | |-DeclRefExpr 0x1531e84a8d0 <col:13> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |       | | `-CallExpr 0x1531e84aa40 <col:17, col:61> 'int'
|   |       | |   |-ImplicitCastExpr 0x1531e84aa28 <col:17> 'int (*)(const void *, int)' <FunctionToPointerDecay>
|   |       | |   | `-DeclRefExpr 0x1531e84a8f0 <col:17> 'int (const void *, int)' Function 0x1531e7ef920 'raw_write_stdout' 'int (const void *, int)'
|   |       | |   |-ImplicitCastExpr 0x1531e84aa70 <col:34, col:50> 'const void *' <BitCast>
|   |       | |   | `-UnaryOperator 0x1531e84a9c0 <col:34, col:50> 'char *' prefix '&' cannot overflow
|   |       | |   |   `-ParenExpr 0x1531e84a9a0 <col:35, col:50> 'char' lvalue
|   |       | |   |     `-ArraySubscriptExpr 0x1531e84a980 <col:36, col:49> 'char' lvalue
|   |       | |   |       |-ImplicitCastExpr 0x1531e84a950 <col:36> 'char *' <LValueToRValue>
|   |       | |   |       | `-DeclRefExpr 0x1531e84a910 <col:36> 'char *' lvalue Var 0x1531e81a820 'sbuf' 'char *'
|   |       | |   |       `-ImplicitCastExpr 0x1531e84a968 <col:41> 'int' <LValueToRValue>
|   |       | |   |         `-DeclRefExpr 0x1531e84a930 <col:41> 'int' lvalue Var 0x1531e81d5c0 'sbuf_off' 'int'
|   |       | |   `-ImplicitCastExpr 0x1531e84aa88 <col:53> 'int' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x1531e84a9d8 <col:53> 'int' lvalue Var 0x1531e81d540 'sbuf_len' 'int'
|   |       | |-IfStmt 0x1531e84ac20 <line:2319:13, line:2324:13>
|   |       | | |-BinaryOperator 0x1531e84ab20 <line:2319:17, col:22> 'int' '<='
|   |       | | | |-ImplicitCastExpr 0x1531e84ab08 <col:17> 'int' <LValueToRValue>
|   |       | | | | `-DeclRefExpr 0x1531e84aac0 <col:17> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |       | | | `-IntegerLiteral 0x1531e84aae0 <col:22> 'int' 0
|   |       | | `-CompoundStmt 0x1531e84ac00 <col:25, line:2324:13>
|   |       | |   |-BinaryOperator 0x1531e84abc8 <line:2321:17, col:23> 'int' '='
|   |       | |   | |-DeclRefExpr 0x1531e84ab80 <col:17> 'int' lvalue Var 0x1531e81d000 'ret' 'int'
|   |       | |   | `-IntegerLiteral 0x1531e84aba0 <col:23> 'int' 0
|   |       | |   `-GotoStmt 0x1531e84abe8 <line:2322:17, col:22> 'shut' 0x1531e830b90
|   |       | |-CompoundAssignOperator 0x1531e84ac90 <line:2326:13, col:25> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | | |-DeclRefExpr 0x1531e84ac38 <col:13> 'int' lvalue Var 0x1531e81d540 'sbuf_len' 'int'
|   |       | | `-ImplicitCastExpr 0x1531e84ac78 <col:25> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1531e84ac58 <col:25> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |       | |-NullStmt 0x1531e84acc0 <col:27>
|   |       | |-CompoundAssignOperator 0x1531e84ad20 <line:2327:13, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | | |-DeclRefExpr 0x1531e84acc8 <col:13> 'int' lvalue Var 0x1531e81d5c0 'sbuf_off' 'int'
|   |       | | `-ImplicitCastExpr 0x1531e84ad08 <col:25> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1531e84ace8 <col:25> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |       | `-IfStmt 0x1531e84aec0 <line:2328:13, line:2331:13>
|   |       |   |-BinaryOperator 0x1531e84adb0 <line:2328:17, col:29> 'int' '<='
|   |       |   | |-ImplicitCastExpr 0x1531e84ad98 <col:17> 'int' <LValueToRValue>
|   |       |   | | `-DeclRefExpr 0x1531e84ad50 <col:17> 'int' lvalue Var 0x1531e81d540 'sbuf_len' 'int'
|   |       |   | `-IntegerLiteral 0x1531e84ad70 <col:29> 'int' 0
|   |       |   `-CompoundStmt 0x1531e84aea0 <col:32, line:2331:13>
|   |       |     |-BinaryOperator 0x1531e84ae18 <line:2329:17, col:28> 'int' '='
|   |       |     | |-DeclRefExpr 0x1531e84add0 <col:17> 'int' lvalue Var 0x1531e81dc60 'read_ssl' 'int'
|   |       |     | `-IntegerLiteral 0x1531e84adf0 <col:28> 'int' 1
|   |       |     `-BinaryOperator 0x1531e84ae80 <line:2330:17, col:29> 'int' '='
|   |       |       |-DeclRefExpr 0x1531e84ae38 <col:17> 'int' lvalue Var 0x1531e81dae0 'write_tty' 'int'
|   |       |       `-IntegerLiteral 0x1531e84ae58 <col:29> 'int' 0
|   |       `-IfStmt 0x1531e848158 <line:2332:16, line:2456:9> has_else
|   |         |-OpaqueValueExpr 0x1531e848140 <<invalid sloc>> '_Bool'
|   |         |-CompoundStmt 0x1531e83de48 <line:2332:72, line:2395:9>
|   |         `-IfStmt 0x1531e848128 <line:2400:14, line:2456:9>
|   |           |-OpaqueValueExpr 0x1531e848110 <<invalid sloc>> '_Bool'
|   |           `-CompoundStmt 0x1531e8480d0 <line:2402:9, line:2456:9>
|   |             |-IfStmt 0x1531e83f1d8 <line:2403:13, line:2422:49> has_else
|   |             | |-ImplicitCastExpr 0x1531e83def0 <line:2403:17> 'int' <LValueToRValue>
|   |             | | `-DeclRefExpr 0x1531e83ded0 <col:17> 'int' lvalue Var 0x1531e81ca40 'crlf' 'int'
|   |             | |-CompoundStmt 0x1531e83f030 <col:23, line:2421:13>
|   |             | | |-DeclStmt 0x1531e83e020 <line:2404:17, col:30>
|   |             | | | |-VarDecl 0x1531e83df20 <col:17, col:21> col:21 used j 'int'
|   |             | | | `-VarDecl 0x1531e83dfa0 <col:17, col:24> col:24 used lf_num 'int'
|   |             | | |-BinaryOperator 0x1531e83e1f0 <line:2406:17, col:53> 'int' '='
|   |             | | | |-DeclRefExpr 0x1531e83e038 <col:17> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |             | | | `-CallExpr 0x1531e83e190 <col:21, col:53> 'int'
|   |             | | |   |-ImplicitCastExpr 0x1531e83e178 <col:21> 'int (*)(void *, int)' <FunctionToPointerDecay>
|   |             | | |   | `-DeclRefExpr 0x1531e83e058 <col:21> 'int (void *, int)' Function 0x1531e7ef6e0 'raw_read_stdin' 'int (void *, int)'
|   |             | | |   |-ImplicitCastExpr 0x1531e83e1d8 <col:36> 'void *' <BitCast>
|   |             | | |   | `-ImplicitCastExpr 0x1531e83e1c0 <col:36> 'char *' <LValueToRValue>
|   |             | | |   |   `-DeclRefExpr 0x1531e83e078 <col:36> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   |             | | |   `-BinaryOperator 0x1531e83e130 <line:83:17, line:2406:52> 'int' '/'
|   |             | | |     |-BinaryOperator 0x1531e83e0e8 <line:83:17, col:22> 'int' '*'
|   |             | | |     | |-IntegerLiteral 0x1531e83e098 <col:17> 'int' 1024
|   |             | | |     | `-IntegerLiteral 0x1531e83e0c0 <col:22> 'int' 8
|   |             | | |     `-IntegerLiteral 0x1531e83e108 <line:2406:52> 'int' 2
|   |             | | |-BinaryOperator 0x1531e83e270 <line:2407:17, col:26> 'int' '='
|   |             | | | |-DeclRefExpr 0x1531e83e210 <col:17> 'int' lvalue Var 0x1531e83dfa0 'lf_num' 'int'
|   |             | | | `-IntegerLiteral 0x1531e83e248 <col:26> 'int' 0
|   |             | | |-ForStmt 0x1531e83e520 <line:2409:17, line:2411:31>
|   |             | | | |-BinaryOperator 0x1531e83e2f0 <line:2409:22, col:26> 'int' '='
|   |             | | | | |-DeclRefExpr 0x1531e83e290 <col:22> 'int' lvalue Var 0x1531e83df20 'j' 'int'
|   |             | | | | `-IntegerLiteral 0x1531e83e2c8 <col:26> 'int' 0
|   |             | | | |-<<<NULL>>>
|   |             | | | |-BinaryOperator 0x1531e83e380 <col:29, col:33> 'int' '<'
|   |             | | | | |-ImplicitCastExpr 0x1531e83e350 <col:29> 'int' <LValueToRValue>
|   |             | | | | | `-DeclRefExpr 0x1531e83e310 <col:29> 'int' lvalue Var 0x1531e83df20 'j' 'int'
|   |             | | | | `-ImplicitCastExpr 0x1531e83e368 <col:33> 'int' <LValueToRValue>
|   |             | | | |   `-DeclRefExpr 0x1531e83e330 <col:33> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |             | | | |-UnaryOperator 0x1531e83e3c0 <col:36, col:37> 'int' postfix '++'
|   |             | | | | `-DeclRefExpr 0x1531e83e3a0 <col:36> 'int' lvalue Var 0x1531e83df20 'j' 'int'
|   |             | | | `-IfStmt 0x1531e83e508 <line:2410:21, line:2411:31>
|   |             | | |   |-BinaryOperator 0x1531e83e4b0 <line:2410:25, col:36> 'int' '=='
|   |             | | |   | |-ImplicitCastExpr 0x1531e83e498 <col:25, col:31> 'int' <IntegralCast>
|   |             | | |   | | `-ImplicitCastExpr 0x1531e83e480 <col:25, col:31> 'char' <LValueToRValue>
|   |             | | |   | |   `-ArraySubscriptExpr 0x1531e83e448 <col:25, col:31> 'char' lvalue
|   |             | | |   | |     |-ImplicitCastExpr 0x1531e83e418 <col:25> 'char *' <LValueToRValue>
|   |             | | |   | |     | `-DeclRefExpr 0x1531e83e3d8 <col:25> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   |             | | |   | |     `-ImplicitCastExpr 0x1531e83e430 <col:30> 'int' <LValueToRValue>
|   |             | | |   | |       `-DeclRefExpr 0x1531e83e3f8 <col:30> 'int' lvalue Var 0x1531e83df20 'j' 'int'
|   |             | | |   | `-CharacterLiteral 0x1531e83e468 <col:36> 'int' 10
|   |             | | |   `-UnaryOperator 0x1531e83e4f0 <line:2411:25, col:31> 'int' postfix '++'
|   |             | | |     `-DeclRefExpr 0x1531e83e4d0 <col:25> 'int' lvalue Var 0x1531e83dfa0 'lf_num' 'int'
|   |             | | |-ForStmt 0x1531e83eb80 <line:2412:17, line:2419:17>
|   |             | | | |-BinaryOperator 0x1531e83e5f8 <line:2412:22, col:30> 'int' '='
|   |             | | | | |-DeclRefExpr 0x1531e83e558 <col:22> 'int' lvalue Var 0x1531e83df20 'j' 'int'
|   |             | | | | `-BinaryOperator 0x1531e83e5d8 <col:26, col:30> 'int' '-'
|   |             | | | |   |-ImplicitCastExpr 0x1531e83e5c0 <col:26> 'int' <LValueToRValue>
|   |             | | | |   | `-DeclRefExpr 0x1531e83e578 <col:26> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |             | | | |   `-IntegerLiteral 0x1531e83e598 <col:30> 'int' 1
|   |             | | | |-<<<NULL>>>
|   |             | | | |-BinaryOperator 0x1531e83e678 <col:33, col:38> 'int' '>='
|   |             | | | | |-ImplicitCastExpr 0x1531e83e660 <col:33> 'int' <LValueToRValue>
|   |             | | | | | `-DeclRefExpr 0x1531e83e618 <col:33> 'int' lvalue Var 0x1531e83df20 'j' 'int'
|   |             | | | | `-IntegerLiteral 0x1531e83e638 <col:38> 'int' 0
|   |             | | | |-UnaryOperator 0x1531e83e6b8 <col:41, col:42> 'int' postfix '--'
|   |             | | | | `-DeclRefExpr 0x1531e83e698 <col:41> 'int' lvalue Var 0x1531e83df20 'j' 'int'
|   |             | | | `-CompoundStmt 0x1531e83eb60 <col:46, line:2419:17>
|   |             | | |   |-BinaryOperator 0x1531e83e860 <line:2413:21, col:46> 'char' '='
|   |             | | |   | |-ArraySubscriptExpr 0x1531e83e798 <col:21, col:36> 'char' lvalue
|   |             | | |   | | |-ImplicitCastExpr 0x1531e83e780 <col:21> 'char *' <LValueToRValue>
|   |             | | |   | | | `-DeclRefExpr 0x1531e83e6d0 <col:21> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   |             | | |   | | `-BinaryOperator 0x1531e83e760 <col:26, col:30> 'int' '+'
|   |             | | |   | |   |-ImplicitCastExpr 0x1531e83e730 <col:26> 'int' <LValueToRValue>
|   |             | | |   | |   | `-DeclRefExpr 0x1531e83e6f0 <col:26> 'int' lvalue Var 0x1531e83df20 'j' 'int'
|   |             | | |   | |   `-ImplicitCastExpr 0x1531e83e748 <col:30> 'int' <LValueToRValue>
|   |             | | |   | |     `-DeclRefExpr 0x1531e83e710 <col:30> 'int' lvalue Var 0x1531e83dfa0 'lf_num' 'int'
|   |             | | |   | `-ImplicitCastExpr 0x1531e83e848 <col:40, col:46> 'char' <LValueToRValue>
|   |             | | |   |   `-ArraySubscriptExpr 0x1531e83e828 <col:40, col:46> 'char' lvalue
|   |             | | |   |     |-ImplicitCastExpr 0x1531e83e7f8 <col:40> 'char *' <LValueToRValue>
|   |             | | |   |     | `-DeclRefExpr 0x1531e83e7b8 <col:40> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   |             | | |   |     `-ImplicitCastExpr 0x1531e83e810 <col:45> 'int' <LValueToRValue>
|   |             | | |   |       `-DeclRefExpr 0x1531e83e7d8 <col:45> 'int' lvalue Var 0x1531e83df20 'j' 'int'
|   |             | | |   `-IfStmt 0x1531e83eb48 <line:2414:21, line:2418:21>
|   |             | | |     |-BinaryOperator 0x1531e83e958 <line:2414:25, col:36> 'int' '=='
|   |             | | |     | |-ImplicitCastExpr 0x1531e83e940 <col:25, col:31> 'int' <IntegralCast>
|   |             | | |     | | `-ImplicitCastExpr 0x1531e83e928 <col:25, col:31> 'char' <LValueToRValue>
|   |             | | |     | |   `-ArraySubscriptExpr 0x1531e83e8f0 <col:25, col:31> 'char' lvalue
|   |             | | |     | |     |-ImplicitCastExpr 0x1531e83e8c0 <col:25> 'char *' <LValueToRValue>
|   |             | | |     | |     | `-DeclRefExpr 0x1531e83e880 <col:25> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   |             | | |     | |     `-ImplicitCastExpr 0x1531e83e8d8 <col:30> 'int' <LValueToRValue>
|   |             | | |     | |       `-DeclRefExpr 0x1531e83e8a0 <col:30> 'int' lvalue Var 0x1531e83df20 'j' 'int'
|   |             | | |     | `-CharacterLiteral 0x1531e83e910 <col:36> 'int' 10
|   |             | | |     `-CompoundStmt 0x1531e83eb20 <col:42, line:2418:21>
|   |             | | |       |-UnaryOperator 0x1531e83e998 <line:2415:25, col:31> 'int' postfix '--'
|   |             | | |       | `-DeclRefExpr 0x1531e83e978 <col:25> 'int' lvalue Var 0x1531e83dfa0 'lf_num' 'int'
|   |             | | |       |-UnaryOperator 0x1531e83e9d0 <line:2416:25, col:26> 'int' postfix '++'
|   |             | | |       | `-DeclRefExpr 0x1531e83e9b0 <col:25> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |             | | |       `-BinaryOperator 0x1531e83eb00 <line:2417:25, col:44> 'char' '='
|   |             | | |         |-ArraySubscriptExpr 0x1531e83eab0 <col:25, col:40> 'char' lvalue
|   |             | | |         | |-ImplicitCastExpr 0x1531e83ea98 <col:25> 'char *' <LValueToRValue>
|   |             | | |         | | `-DeclRefExpr 0x1531e83e9e8 <col:25> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   |             | | |         | `-BinaryOperator 0x1531e83ea78 <col:30, col:34> 'int' '+'
|   |             | | |         |   |-ImplicitCastExpr 0x1531e83ea48 <col:30> 'int' <LValueToRValue>
|   |             | | |         |   | `-DeclRefExpr 0x1531e83ea08 <col:30> 'int' lvalue Var 0x1531e83df20 'j' 'int'
|   |             | | |         |   `-ImplicitCastExpr 0x1531e83ea60 <col:34> 'int' <LValueToRValue>
|   |             | | |         |     `-DeclRefExpr 0x1531e83ea28 <col:34> 'int' lvalue Var 0x1531e83dfa0 'lf_num' 'int'
|   |             | | |         `-ImplicitCastExpr 0x1531e83eae8 <col:44> 'char' <IntegralCast>
|   |             | | |           `-CharacterLiteral 0x1531e83ead0 <col:44> 'int' 13
|   |             | | `-CStyleCastExpr 0x1531e83f008 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:29, col:128> 'void' <ToVoid>
|   |             | |   `-ParenExpr 0x1531e83efe8 <col:35, col:128> 'int'
|   |             | |     `-BinaryOperator 0x1531e83ef98 <col:37, col:126> 'int' '||'
|   |             | |       |-ParenExpr 0x1531e83ec88 <col:37, col:53> 'int'
|   |             | |       | `-UnaryOperator 0x1531e83ec70 <col:38, col:52> 'int' prefix '!' cannot overflow
|   |             | |       |   `-UnaryOperator 0x1531e83ec58 <col:39, col:52> 'int' prefix '!' cannot overflow
|   |             | |       |     `-ParenExpr 0x1531e83ec38 <col:40, col:52> 'int'
|   |             | |       |       `-BinaryOperator 0x1531e83ec18 <.//openssl//file_jk/after\apps\s_client.c:2420:24, col:34> 'int' '=='
|   |             | |       |         |-ImplicitCastExpr 0x1531e83ec00 <col:24> 'int' <LValueToRValue>
|   |             | |       |         | `-DeclRefExpr 0x1531e83ebb8 <col:24> 'int' lvalue Var 0x1531e83dfa0 'lf_num' 'int'
|   |             | |       |         `-IntegerLiteral 0x1531e83ebd8 <col:34> 'int' 0
|   |             | |       `-ParenExpr 0x1531e83ef78 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:58, col:126> 'int'
|   |             | |         `-BinaryOperator 0x1531e83ef58 <col:59, col:125> 'int' ','
|   |             | |           |-CallExpr 0x1531e83ee80 <col:59, col:122> 'void'
|   |             | |           | |-ImplicitCastExpr 0x1531e83ee68 <col:59> 'void (*)(const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |             | |           | | `-DeclRefExpr 0x1531e83eca8 <col:59> 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)' Function 0x1531e8de430 '_wassert' 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
|   |             | |           | |-ImplicitCastExpr 0x1531e83eed0 <<scratch space>:314:1> 'const wchar_t *' <NoOp>
|   |             | |           | | `-ImplicitCastExpr 0x1531e83eeb8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |             | |           | |   `-StringLiteral 0x1531e83ed08 <col:1> 'unsigned short [12]' lvalue L"lf_num == 0"
|   |             | |           | |-ImplicitCastExpr 0x1531e83ef00 <line:3:1> 'const wchar_t *' <NoOp>
|   |             | |           | | `-ImplicitCastExpr 0x1531e83eee8 <col:1> 'unsigned short *' <ArrayToPointerDecay>
|   |             | |           | |   `-StringLiteral 0x1531e83ed78 <col:1> 'unsigned short [42]' lvalue L".//openssl//file_jk/after\\apps\\s_client.c"
|   |             | |           | `-ImplicitCastExpr 0x1531e83ef18 <line:4:1> 'unsigned int' <IntegralCast>
|   |             | |           |   `-IntegerLiteral 0x1531e83ede8 <col:1> 'int' 2420
|   |             | |           `-IntegerLiteral 0x1531e83ef30 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:41:125> 'int' 0
|   |             | `-BinaryOperator 0x1531e83f1b8 <.//openssl//file_jk/after\apps\s_client.c:2422:17, col:49> 'int' '='
|   |             |   |-DeclRefExpr 0x1531e83f070 <col:17> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |             |   `-CallExpr 0x1531e83f158 <col:21, col:49> 'int'
|   |             |     |-ImplicitCastExpr 0x1531e83f140 <col:21> 'int (*)(void *, int)' <FunctionToPointerDecay>
|   |             |     | `-DeclRefExpr 0x1531e83f090 <col:21> 'int (void *, int)' Function 0x1531e7ef6e0 'raw_read_stdin' 'int (void *, int)'
|   |             |     |-ImplicitCastExpr 0x1531e83f1a0 <col:36> 'void *' <BitCast>
|   |             |     | `-ImplicitCastExpr 0x1531e83f188 <col:36> 'char *' <LValueToRValue>
|   |             |     |   `-DeclRefExpr 0x1531e83f0b0 <col:36> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   |             |     `-BinaryOperator 0x1531e83f120 <line:83:17, col:22> 'int' '*'
|   |             |       |-IntegerLiteral 0x1531e83f0d0 <col:17> 'int' 1024
|   |             |       `-IntegerLiteral 0x1531e83f0f8 <col:22> 'int' 8
|   |             |-IfStmt 0x1531e83f2e8 <line:2424:13, line:2425:26>
|   |             | |-BinaryOperator 0x1531e83f260 <line:2424:17, col:22> 'int' '=='
|   |             | | |-ImplicitCastExpr 0x1531e83f248 <col:17> 'int' <LValueToRValue>
|   |             | | | `-DeclRefExpr 0x1531e83f200 <col:17> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |             | | `-IntegerLiteral 0x1531e83f220 <col:22> 'int' 0
|   |             | `-BinaryOperator 0x1531e83f2c8 <line:2425:17, col:26> 'int' '='
|   |             |   |-DeclRefExpr 0x1531e83f280 <col:17> 'int' lvalue Var 0x1531e81de30 'at_eof' 'int'
|   |             |   `-IntegerLiteral 0x1531e83f2a0 <col:26> 'int' 1
|   |             |-IfStmt 0x1531e83f6b0 <line:2428:13, line:2432:13>
|   |             | |-BinaryOperator 0x1531e83f5b0 <line:2428:17, col:76> 'int' '&&'
|   |             | | |-ParenExpr 0x1531e83f350 <col:17, col:28> 'int'
|   |             | | | `-UnaryOperator 0x1531e83f338 <col:18, col:19> 'int' prefix '!' cannot overflow
|   |             | | |   `-ImplicitCastExpr 0x1531e83f320 <col:19> 'int' <LValueToRValue>
|   |             | | |     `-DeclRefExpr 0x1531e83f300 <col:19> 'int' lvalue Var 0x1531e814010 'c_ign_eof' 'int'
|   |             | | `-ParenExpr 0x1531e83f590 <col:33, col:76> 'int'
|   |             | |   `-BinaryOperator 0x1531e83f570 <col:34, col:75> 'int' '||'
|   |             | |     |-ParenExpr 0x1531e83f3f0 <col:34, col:41> 'int'
|   |             | |     | `-BinaryOperator 0x1531e83f3d0 <col:35, col:40> 'int' '<='
|   |             | |     |   |-ImplicitCastExpr 0x1531e83f3b8 <col:35> 'int' <LValueToRValue>
|   |             | |     |   | `-DeclRefExpr 0x1531e83f370 <col:35> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |             | |     |   `-IntegerLiteral 0x1531e83f390 <col:40> 'int' 0
|   |             | |     `-ParenExpr 0x1531e83f550 <col:46, col:75> 'int'
|   |             | |       `-BinaryOperator 0x1531e83f530 <col:47, col:65> 'int' '&&'
|   |             | |         |-BinaryOperator 0x1531e83f4d8 <col:47, col:58> 'int' '=='
|   |             | |         | |-ImplicitCastExpr 0x1531e83f4c0 <col:47, col:53> 'int' <IntegralCast>
|   |             | |         | | `-ImplicitCastExpr 0x1531e83f4a8 <col:47, col:53> 'char' <LValueToRValue>
|   |             | |         | |   `-ArraySubscriptExpr 0x1531e83f470 <col:47, col:53> 'char' lvalue
|   |             | |         | |     |-ImplicitCastExpr 0x1531e83f458 <col:47> 'char *' <LValueToRValue>
|   |             | |         | |     | `-DeclRefExpr 0x1531e83f410 <col:47> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   |             | |         | |     `-IntegerLiteral 0x1531e83f430 <col:52> 'int' 0
|   |             | |         | `-CharacterLiteral 0x1531e83f490 <col:58> 'int' 81
|   |             | |         `-ImplicitCastExpr 0x1531e83f518 <col:65> 'int' <LValueToRValue>
|   |             | |           `-DeclRefExpr 0x1531e83f4f8 <col:65> 'int' lvalue Var 0x1531e81d640 'cmdletters' 'int'
|   |             | `-CompoundStmt 0x1531e83f690 <col:79, line:2432:13>
|   |             |   |-BinaryOperator 0x1531e83f658 <line:2430:17, col:23> 'int' '='
|   |             |   | |-DeclRefExpr 0x1531e83f610 <col:17> 'int' lvalue Var 0x1531e81d000 'ret' 'int'
|   |             |   | `-IntegerLiteral 0x1531e83f630 <col:23> 'int' 0
|   |             |   `-GotoStmt 0x1531e83f678 <line:2431:17, col:22> 'shut' 0x1531e830b90
|   |             |-IfStmt 0x1531e847fd8 <line:2434:13, line:2452:13> has_else
|   |             | |-BinaryOperator 0x1531e8478f0 <line:2434:17, col:62> 'int' '&&'
|   |             | | |-ParenExpr 0x1531e847770 <col:17, col:28> 'int'
|   |             | | | `-UnaryOperator 0x1531e83f700 <col:18, col:19> 'int' prefix '!' cannot overflow
|   |             | | |   `-ImplicitCastExpr 0x1531e83f6e8 <col:19> 'int' <LValueToRValue>
|   |             | | |     `-DeclRefExpr 0x1531e83f6c8 <col:19> 'int' lvalue Var 0x1531e814010 'c_ign_eof' 'int'
|   |             | | `-ParenExpr 0x1531e8478d0 <col:33, col:62> 'int'
|   |             | |   `-BinaryOperator 0x1531e8478b0 <col:34, col:52> 'int' '&&'
|   |             | |     |-BinaryOperator 0x1531e847858 <col:34, col:45> 'int' '=='
|   |             | |     | |-ImplicitCastExpr 0x1531e847840 <col:34, col:40> 'int' <IntegralCast>
|   |             | |     | | `-ImplicitCastExpr 0x1531e847828 <col:34, col:40> 'char' <LValueToRValue>
|   |             | |     | |   `-ArraySubscriptExpr 0x1531e8477f0 <col:34, col:40> 'char' lvalue
|   |             | |     | |     |-ImplicitCastExpr 0x1531e8477d8 <col:34> 'char *' <LValueToRValue>
|   |             | |     | |     | `-DeclRefExpr 0x1531e847790 <col:34> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   |             | |     | |     `-IntegerLiteral 0x1531e8477b0 <col:39> 'int' 0
|   |             | |     | `-CharacterLiteral 0x1531e847810 <col:45> 'int' 82
|   |             | |     `-ImplicitCastExpr 0x1531e847898 <col:52> 'int' <LValueToRValue>
|   |             | |       `-DeclRefExpr 0x1531e847878 <col:52> 'int' lvalue Var 0x1531e81d640 'cmdletters' 'int'
|   |             | |-CompoundStmt 0x1531e847ad0 <col:65, line:2438:13>
|   |             | | `-BinaryOperator 0x1531e847ab0 <line:2437:17, col:28> 'int' '='
|   |             | |   |-DeclRefExpr 0x1531e847a68 <col:17> 'int' lvalue Var 0x1531e81c6e0 'cbuf_len' 'int'
|   |             | |   `-IntegerLiteral 0x1531e847a88 <col:28> 'int' 0
|   |             | `-IfStmt 0x1531e847fb0 <line:2440:18, line:2452:13> has_else
|   |             |   |-BinaryOperator 0x1531e847cb8 <line:2440:22, col:67> 'int' '&&'
|   |             |   | |-ParenExpr 0x1531e847b38 <col:22, col:33> 'int'
|   |             |   | | `-UnaryOperator 0x1531e847b20 <col:23, col:24> 'int' prefix '!' cannot overflow
|   |             |   | |   `-ImplicitCastExpr 0x1531e847b08 <col:24> 'int' <LValueToRValue>
|   |             |   | |     `-DeclRefExpr 0x1531e847ae8 <col:24> 'int' lvalue Var 0x1531e814010 'c_ign_eof' 'int'
|   |             |   | `-ParenExpr 0x1531e847c98 <col:38, col:67> 'int'
|   |             |   |   `-BinaryOperator 0x1531e847c78 <col:39, col:57> 'int' '&&'
|   |             |   |     |-BinaryOperator 0x1531e847c20 <col:39, col:50> 'int' '=='
|   |             |   |     | |-ImplicitCastExpr 0x1531e847c08 <col:39, col:45> 'int' <IntegralCast>
|   |             |   |     | | `-ImplicitCastExpr 0x1531e847bf0 <col:39, col:45> 'char' <LValueToRValue>
|   |             |   |     | |   `-ArraySubscriptExpr 0x1531e847bb8 <col:39, col:45> 'char' lvalue
|   |             |   |     | |     |-ImplicitCastExpr 0x1531e847ba0 <col:39> 'char *' <LValueToRValue>
|   |             |   |     | |     | `-DeclRefExpr 0x1531e847b58 <col:39> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   |             |   |     | |     `-IntegerLiteral 0x1531e847b78 <col:44> 'int' 0
|   |             |   |     | `-CharacterLiteral 0x1531e847bd8 <col:50> 'int' 66
|   |             |   |     `-ImplicitCastExpr 0x1531e847c60 <col:57> 'int' <LValueToRValue>
|   |             |   |       `-DeclRefExpr 0x1531e847c40 <col:57> 'int' lvalue Var 0x1531e81d640 'cmdletters' 'int'
|   |             |   |-CompoundStmt 0x1531e847e98 <col:70, line:2444:13>
|   |             |   | `-BinaryOperator 0x1531e847e78 <line:2443:17, col:28> 'int' '='
|   |             |   |   |-DeclRefExpr 0x1531e847e30 <col:17> 'int' lvalue Var 0x1531e81c6e0 'cbuf_len' 'int'
|   |             |   |   `-IntegerLiteral 0x1531e847e50 <col:28> 'int' 0
|   |             |   `-CompoundStmt 0x1531e847f90 <line:2446:18, line:2452:13>
|   |             |     |-BinaryOperator 0x1531e847f08 <line:2447:17, col:28> 'int' '='
|   |             |     | |-DeclRefExpr 0x1531e847eb0 <col:17> 'int' lvalue Var 0x1531e81c6e0 'cbuf_len' 'int'
|   |             |     | `-ImplicitCastExpr 0x1531e847ef0 <col:28> 'int' <LValueToRValue>
|   |             |     |   `-DeclRefExpr 0x1531e847ed0 <col:28> 'int' lvalue Var 0x1531e81d150 'i' 'int'
|   |             |     `-BinaryOperator 0x1531e847f70 <line:2448:17, col:28> 'int' '='
|   |             |       |-DeclRefExpr 0x1531e847f28 <col:17> 'int' lvalue Var 0x1531e81c760 'cbuf_off' 'int'
|   |             |       `-IntegerLiteral 0x1531e847f48 <col:28> 'int' 0
|   |             |-BinaryOperator 0x1531e848048 <line:2454:13, col:25> 'int' '='
|   |             | |-DeclRefExpr 0x1531e848000 <col:13> 'int' lvalue Var 0x1531e81dbe0 'write_ssl' 'int'
|   |             | `-IntegerLiteral 0x1531e848020 <col:25> 'int' 1
|   |             `-BinaryOperator 0x1531e8480b0 <line:2455:13, col:24> 'int' '='
|   |               |-DeclRefExpr 0x1531e848068 <col:13> 'int' lvalue Var 0x1531e81db60 'read_tty' 'int'
|   |               `-IntegerLiteral 0x1531e848088 <col:24> 'int' 0
|   |-BinaryOperator 0x1531e8482b0 <line:2459:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1531e848268 <col:5> 'int' lvalue Var 0x1531e81d000 'ret' 'int'
|   | `-IntegerLiteral 0x1531e848288 <col:11> 'int' 0
|   |-LabelStmt 0x1531e848330 <line:2460:2, col:6> 'shut'
|   | `-NullStmt 0x1531e848328 <col:6>
|   |-LabelStmt 0x1531e848760 <line:2490:2, line:2495:5> 'end'
|   | `-IfStmt 0x1531e848748 <line:2491:5, line:2495:5>
|   |   |-OpaqueValueExpr 0x1531e848730 <<invalid sloc>> '_Bool'
|   |   `-CompoundStmt 0x1531e848720 <line:2491:22, line:2495:5>
|   |-CallExpr 0x1531e848800 <line:2497:5, col:33> 'int'
|   | |-ImplicitCastExpr 0x1531e8487e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e848778 <col:5> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1531e848828 <col:18, col:29> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x1531e8487b8 <col:18, col:29> 'unsigned char *' lvalue .data 0x1531e7f6ef8
|   |     `-DeclRefExpr 0x1531e848798 <col:18> 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st' lvalue Var 0x1531e7f7130 'next_proto' 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st'
|   |-CallExpr 0x1531e848e08 <line:2504:5, col:22> 'int'
|   | |-ImplicitCastExpr 0x1531e848df0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e848db0 <col:5> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1531e848e30 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e848dd0 <col:18> 'char *' lvalue Var 0x1531e81b7d8 'pass' 'char *'
|   |-CallExpr 0x1531e848ed0 <line:2506:5, col:35> 'int'
|   | |-ImplicitCastExpr 0x1531e848eb8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e848e48 <col:5> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1531e848ef8 <col:18, col:26> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1531e848e88 <col:18, col:26> 'char *' lvalue .srppassin 0x1531e7e9298
|   |     `-DeclRefExpr 0x1531e848e68 <col:18> 'SRP_ARG':'struct srp_arg_st' lvalue Var 0x1531e813038 'srp_arg' 'SRP_ARG':'struct srp_arg_st'
|   |-CallExpr 0x1531e848f68 <line:2508:5, col:28> 'int'
|   | |-ImplicitCastExpr 0x1531e848f50 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e848f10 <col:5> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1531e848f90 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e848f30 <col:18> 'char *' lvalue Var 0x1531e81abb0 'connectstr' 'char *'
|   |-CallExpr 0x1531e849000 <line:2509:5, col:22> 'int'
|   | |-ImplicitCastExpr 0x1531e848fe8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e848fa8 <col:5> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1531e849028 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e848fc8 <col:18> 'char *' lvalue Var 0x1531e81b2e0 'host' 'char *'
|   |-CallExpr 0x1531e849098 <line:2510:5, col:22> 'int'
|   | |-ImplicitCastExpr 0x1531e849080 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e849040 <col:5> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1531e8490c0 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e849060 <col:18> 'char *' lvalue Var 0x1531e81b438 'port' 'char *'
|   |-CallExpr 0x1531e8492a0 <line:2512:5, col:24> 'void'
|   | |-ImplicitCastExpr 0x1531e849288 <col:5> 'void (*)(SSL_EXCERT *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e8491e8 <col:5> 'void (SSL_EXCERT *)' Function 0x1531e7e01e8 'ssl_excert_free' 'void (SSL_EXCERT *)'
|   | `-ImplicitCastExpr 0x1531e8492c8 <col:21> 'SSL_EXCERT *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1531e849208 <col:21> 'SSL_EXCERT *' lvalue Var 0x1531e803c28 'exc' 'SSL_EXCERT *'
|   |-CallExpr 0x1531e8496d8 <line:2516:5, col:37> 'int'
|   | |-ImplicitCastExpr 0x1531e8496c0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e849610 <col:5> 'int ()' Function 0x1531e849548 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x1531e849708 <col:24> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e849630 <col:24> 'char *' lvalue Var 0x1531e81a700 'cbuf' 'char *'
|   | `-BinaryOperator 0x1531e8496a0 <line:83:17, col:22> 'int' '*'
|   |   |-IntegerLiteral 0x1531e849650 <col:17> 'int' 1024
|   |   `-IntegerLiteral 0x1531e849678 <col:22> 'int' 8
|   |-CallExpr 0x1531e84d828 <line:2517:5, col:37> 'int'
|   | |-ImplicitCastExpr 0x1531e84d810 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e849720 <col:5> 'int ()' Function 0x1531e849548 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x1531e84d858 <col:24> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e849740 <col:24> 'char *' lvalue Var 0x1531e81a820 'sbuf' 'char *'
|   | `-BinaryOperator 0x1531e84d7f0 <line:83:17, col:22> 'int' '*'
|   |   |-IntegerLiteral 0x1531e84d7a0 <col:17> 'int' 1024
|   |   `-IntegerLiteral 0x1531e84d7c8 <col:22> 'int' 8
|   |-CallExpr 0x1531e84d938 <line:2518:5, col:37> 'int'
|   | |-ImplicitCastExpr 0x1531e84d920 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1531e84d870 <col:5> 'int ()' Function 0x1531e849548 'OPENSSL_clear_free' 'int ()'
|   | |-ImplicitCastExpr 0x1531e84d968 <col:24> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e84d890 <col:24> 'char *' lvalue Var 0x1531e81a970 'mbuf' 'char *'
|   | `-BinaryOperator 0x1531e84d900 <line:83:17, col:22> 'int' '*'
|   |   |-IntegerLiteral 0x1531e84d8b0 <col:17> 'int' 1024
|   |   `-IntegerLiteral 0x1531e84d8d8 <col:22> 'int' 8
|   `-ReturnStmt 0x1531e84db28 <line:2524:5, col:16>
|     `-ImplicitCastExpr 0x1531e84db10 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1531e84daf0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1531e84dad0 <col:13> 'int' lvalue Var 0x1531e81d000 'ret' 'int'
|-FunctionDecl 0x1531e84e188 <line:2527:1, line:2730:1> line:2527:13 invalid print_stuff 'void (int *, int *, int)' static
| |-ParmVarDecl 0x1531e84dfe8 <col:25, col:30> col:30 invalid bio 'int *'
| |-ParmVarDecl 0x1531e84e068 <col:35, col:40> col:40 invalid s 'int *'
| |-ParmVarDecl 0x1531e84e0e8 <col:43, col:47> col:47 used full 'int'
| `-CompoundStmt 0x1531e85dc70 <line:2528:1, line:2730:1>
|   |-DeclStmt 0x1531e84e3e0 <line:2530:5, col:21>
|   | `-VarDecl 0x1531e84e378 <col:5, col:20> col:10 used buf 'char [512]'
|   |-DeclStmt 0x1531e84e4b8 <line:2533:5, col:24>
|   | `-VarDecl 0x1531e84e450 <col:5, col:23> col:23 invalid c 'const int *'
|   |-DeclStmt 0x1531e84e550 <line:2535:5, col:10>
|   | `-VarDecl 0x1531e84e4e8 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x1531e84e5e8 <line:2537:5, col:40>
|   | `-VarDecl 0x1531e84e580 <col:5, col:24> col:24 invalid comp 'const int *'
|   |-DeclStmt 0x1531e84e680 <line:2539:5, col:34>
|   | `-VarDecl 0x1531e84e618 <col:5, col:20> col:20 used exportedkeymat 'unsigned char *'
|   |-DeclStmt 0x1531e84e828 <line:2541:5, col:44>
|   | `-VarDecl 0x1531e84e6b0 <col:5, col:20> col:20 invalid ctx 'const int *'
|   |-IfStmt 0x1531e843510 <line:2544:5, line:2633:5>
|   | |-ImplicitCastExpr 0x1531e84e878 <line:2544:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1531e84e840 <col:9> 'int' lvalue ParmVar 0x1531e84e0e8 'full' 'int'
|   | `-CompoundStmt 0x1531e8434d8 <col:15, line:2633:5>
|   |   |-DeclStmt 0x1531e84e938 <line:2545:9, col:28>
|   |   | `-VarDecl 0x1531e84e8a8 <col:9, col:27> col:13 used got_a_chain 'int' cinit
|   |   |   `-IntegerLiteral 0x1531e84e910 <col:27> 'int' 0
|   |   |-IfStmt 0x1531e84f628 <line:2548:9, line:2562:9>
|   |   | |-OpaqueValueExpr 0x1531e84f610 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1531e84f5f8 <line:2548:25, line:2562:9>
|   |   |   `-BinaryOperator 0x1531e84eb48 <line:2549:13, col:27> 'int' '='
|   |   |     |-DeclRefExpr 0x1531e84eae8 <col:13> 'int' lvalue Var 0x1531e84e8a8 'got_a_chain' 'int'
|   |   |     `-IntegerLiteral 0x1531e84eb20 <col:27> 'int' 1
|   |   |-IfStmt 0x1531e841bd8 <line:2566:9, line:2577:13> has_else
|   |   | |-OpaqueValueExpr 0x1531e841bc0 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1531e841b50 <line:2566:27, line:2576:9>
|   |   | `-NullStmt 0x1531e841bb8 <line:2577:13>
|   |   |-IfStmt 0x1531e842400 <line:2580:9, line:2590:9> has_else
|   |   | |-OpaqueValueExpr 0x1531e8423e8 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1531e842368 <line:2580:59, line:2588:9>
|   |   | `-CompoundStmt 0x1531e8423d8 <col:16, line:2590:9>
|   |   `-IfStmt 0x1531e843468 <line:2605:9, line:2625:9>
|   |     |-OpaqueValueExpr 0x1531e843450 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1531e843428 <line:2605:77, line:2625:9>
|   |       |-DeclStmt 0x1531e8427f0 <line:2606:13, col:33>
|   |       | `-FunctionDecl 0x1531e842740 parent 0x1531cbde548 <col:13, col:31> col:19 invalid STACK_OF 'const int ()'
|   |       |-DeclStmt 0x1531e842a48 <line:2607:13, col:64>
|   |       | `-VarDecl 0x1531e842820 <col:13, col:17> col:17 used sct_count 'int'
|   |       `-IfStmt 0x1531e843410 <line:2610:13, line:2624:13>
|   |         |-BinaryOperator 0x1531e842b48 <line:2610:17, col:29> 'int' '>'
|   |         | |-ImplicitCastExpr 0x1531e842b30 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1531e842ae8 <col:17> 'int' lvalue Var 0x1531e842820 'sct_count' 'int'
|   |         | `-IntegerLiteral 0x1531e842b08 <col:29> 'int' 0
|   |         `-CompoundStmt 0x1531e8433f0 <col:32, line:2624:13>
|   |           |-DeclStmt 0x1531e842cf8 <line:2611:17, col:77>
|   |           | `-VarDecl 0x1531e842b80 <col:17, col:36> col:36 invalid log_store 'const int *'
|   |           `-ForStmt 0x1531e843378 <line:2614:17, line:2622:17>
|   |             |-BinaryOperator 0x1531e842d98 <line:2614:22, col:26> 'int' '='
|   |             | |-DeclRefExpr 0x1531e842d50 <col:22> 'int' lvalue Var 0x1531e84e4e8 'i' 'int'
|   |             | `-IntegerLiteral 0x1531e842d70 <col:26> 'int' 0
|   |             |-<<<NULL>>>
|   |             |-BinaryOperator 0x1531e842e28 <col:29, col:33> 'int' '<'
|   |             | |-ImplicitCastExpr 0x1531e842df8 <col:29> 'int' <LValueToRValue>
|   |             | | `-DeclRefExpr 0x1531e842db8 <col:29> 'int' lvalue Var 0x1531e84e4e8 'i' 'int'
|   |             | `-ImplicitCastExpr 0x1531e842e10 <col:33> 'int' <LValueToRValue>
|   |             |   `-DeclRefExpr 0x1531e842dd8 <col:33> 'int' lvalue Var 0x1531e842820 'sct_count' 'int'
|   |             |-UnaryOperator 0x1531e842e68 <col:44, col:46> 'int' prefix '++'
|   |             | `-DeclRefExpr 0x1531e842e48 <col:46> 'int' lvalue Var 0x1531e84e4e8 'i' 'int'
|   |             `-CompoundStmt 0x1531e843368 <col:49, line:2622:17>
|   |-IfStmt 0x1531e83fc50 <line:2639:5, line:2645:5>
|   | |-OpaqueValueExpr 0x1531e83fc38 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1531e83fc28 <line:2639:23, line:2645:5>
|   |-IfStmt 0x1531e840788 <line:2674:5, line:2681:5>
|   | |-BinaryOperator 0x1531e8402d8 <line:2674:9, col:31> 'int' '!='
|   | | |-ImplicitCastExpr 0x1531e8402c0 <col:9, col:20> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1531e840250 <col:9, col:20> 'int' lvalue .status 0x1531e7f6fd0
|   | | |   `-DeclRefExpr 0x1531e840230 <col:9> 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st' lvalue Var 0x1531e7f7130 'next_proto' 'tlsextnextprotoctx':'struct tlsextnextprotoctx_st'
|   | | `-UnaryOperator 0x1531e8402a8 <col:30, col:31> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1531e840280 <col:31> 'int' 1
|   | `-CompoundStmt 0x1531e840768 <col:34, line:2681:5>
|   |   |-DeclStmt 0x1531e840378 <line:2675:9, col:35>
|   |   | `-VarDecl 0x1531e840310 <col:9, col:30> col:30 used proto 'const unsigned char *'
|   |   `-DeclStmt 0x1531e840410 <line:2676:9, col:31>
|   |     `-VarDecl 0x1531e8403a8 <col:9, col:22> col:22 used proto_len 'unsigned int'
|   |-CompoundStmt 0x1531e840cb8 <line:2683:5, line:2693:5>
|   | |-DeclStmt 0x1531e840820 <line:2684:9, col:35>
|   | | `-VarDecl 0x1531e8407b8 <col:9, col:30> col:30 used proto 'const unsigned char *'
|   | |-DeclStmt 0x1531e8408b8 <line:2685:9, col:31>
|   | | `-VarDecl 0x1531e840850 <col:9, col:22> col:22 used proto_len 'unsigned int'
|   | `-IfStmt 0x1531e840c90 <line:2687:9, line:2692:13> has_else
|   |   |-BinaryOperator 0x1531e840af8 <line:2687:13, col:25> 'int' '>'
|   |   | |-ImplicitCastExpr 0x1531e840ac8 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1531e840a80 <col:13> 'unsigned int' lvalue Var 0x1531e840850 'proto_len' 'unsigned int'
|   |   | `-ImplicitCastExpr 0x1531e840ae0 <col:25> 'unsigned int' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1531e840aa0 <col:25> 'int' 0
|   |   |-CompoundStmt 0x1531e840c28 <col:28, line:2691:9>
|   |   `-NullStmt 0x1531e840c88 <line:2692:13>
|   |-CompoundStmt 0x1531e840e50 <line:2696:5, line:2703:5>
|   `-IfStmt 0x1531e85dbd8 <line:2707:5, line:2725:5>
|     |-OpaqueValueExpr 0x1531e85dbc0 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1531e85db98 <line:2707:66, line:2725:5>
|       |-BinaryOperator 0x1531e8413a8 <line:2711:9, col:66> 'unsigned char *' '='
|       | |-DeclRefExpr 0x1531e841260 <col:9> 'unsigned char *' lvalue Var 0x1531e84e618 'exportedkeymat' 'unsigned char *'
|       | `-ImplicitCastExpr 0x1531e841390 <col:26, col:66> 'unsigned char *' <BitCast>
|       |   `-CallExpr 0x1531e841318 <col:26, col:66> 'void *'
|       |     |-ImplicitCastExpr 0x1531e841300 <col:26> 'void *(*)(int, const char *)' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x1531e841298 <col:26> 'void *(int, const char *)' Function 0x1531e8e8010 'app_malloc' 'void *(int, const char *)'
|       |     |-ImplicitCastExpr 0x1531e841348 <col:37> 'int' <LValueToRValue>
|       |     | `-DeclRefExpr 0x1531e8412b8 <col:37> 'int' lvalue Var 0x1531e7e0e70 'keymatexportlen' 'int'
|       |     `-ImplicitCastExpr 0x1531e841378 <col:54> 'const char *' <NoOp>
|       |       `-ImplicitCastExpr 0x1531e841360 <col:54> 'char *' <ArrayToPointerDecay>
|       |         `-StringLiteral 0x1531e8412d8 <col:54> 'char [11]' lvalue "export key"
|       |-IfStmt 0x1531e85dad8 <line:2712:9, line:2723:9> has_else
|       | |-OpaqueValueExpr 0x1531e85dac0 <<invalid sloc>> '_Bool'
|       | |-CompoundStmt 0x1531e841720 <line:2716:54, line:2718:9>
|       | `-CompoundStmt 0x1531e85dab0 <col:16, line:2723:9>
|       `-CallExpr 0x1531e85db58 <line:2724:9, col:36> 'int'
|         |-ImplicitCastExpr 0x1531e85db40 <col:9> 'int (*)()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1531e85db00 <col:9> 'int ()' Function 0x1531e7ebdc0 'OPENSSL_free' 'int ()'
|         `-ImplicitCastExpr 0x1531e85db80 <col:22> 'unsigned char *' <LValueToRValue>
|           `-DeclRefExpr 0x1531e85db20 <col:22> 'unsigned char *' lvalue Var 0x1531e84e618 'exportedkeymat' 'unsigned char *'
`-FunctionDecl 0x1531e85de18 <line:2733:1, line:2755:1> line:2733:12 invalid ocsp_resp_cb 'int (int *, void *)' static
  |-ParmVarDecl 0x1531e85dcf8 <col:25, col:30> col:30 invalid s 'int *'
  |-ParmVarDecl 0x1531e85dd78 <col:33, col:39> col:39 used arg 'void *'
  `-CompoundStmt 0x1531e85ef20 <line:2734:1, line:2755:1>
    |-DeclStmt 0x1531e85df60 <line:2735:5, col:27>
    | `-VarDecl 0x1531e85def8 <col:5, col:26> col:26 used p 'const unsigned char *'
    |-DeclStmt 0x1531e85dff8 <line:2736:5, col:12>
    | `-VarDecl 0x1531e85df90 <col:5, col:9> col:9 used len 'int'
    |-CallExpr 0x1531e85e240 <line:2739:5, col:36> 'int'
    | |-ImplicitCastExpr 0x1531e85e228 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1531e85e1a8 <col:5> 'int ()' Function 0x1531e82d300 'BIO_puts' 'int ()'
    | |-ImplicitCastExpr 0x1531e85e270 <col:14> 'void *' <LValueToRValue>
    | | `-DeclRefExpr 0x1531e85e1c8 <col:14> 'void *' lvalue ParmVar 0x1531e85dd78 'arg' 'void *'
    | `-ImplicitCastExpr 0x1531e85e288 <col:19> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x1531e85e200 <col:19> 'char [16]' lvalue "OCSP response: "
    |-IfStmt 0x1531e85e430 <line:2740:5, line:2743:5>
    | |-UnaryOperator 0x1531e85e2d8 <line:2740:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1531e85e2c0 <col:10> 'const unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1531e85e2a0 <col:10> 'const unsigned char *' lvalue Var 0x1531e85def8 'p' 'const unsigned char *'
    | `-CompoundStmt 0x1531e85e410 <col:13, line:2743:5>
    |   |-CallExpr 0x1531e85e378 <line:2741:9, col:43> 'int'
    |   | |-ImplicitCastExpr 0x1531e85e360 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1531e85e2f0 <col:9> 'int ()' Function 0x1531e82d300 'BIO_puts' 'int ()'
    |   | |-ImplicitCastExpr 0x1531e85e3a8 <col:18> 'void *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1531e85e310 <col:18> 'void *' lvalue ParmVar 0x1531e85dd78 'arg' 'void *'
    |   | `-ImplicitCastExpr 0x1531e85e3c0 <col:23> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x1531e85e330 <col:23> 'char [18]' lvalue "no response sent\n"
    |   `-ReturnStmt 0x1531e85e400 <line:2742:9, col:16>
    |     `-IntegerLiteral 0x1531e85e3d8 <col:16> 'int' 1
    |-IfStmt 0x1531e85ea78 <line:2745:5, line:2749:5>
    | |-OpaqueValueExpr 0x1531e85ea60 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1531e85ea38 <line:2745:15, line:2749:5>
    |   |-CallExpr 0x1531e85e728 <line:2746:9, col:47> 'int'
    |   | |-ImplicitCastExpr 0x1531e85e710 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1531e85e6a0 <col:9> 'int ()' Function 0x1531e82d300 'BIO_puts' 'int ()'
    |   | |-ImplicitCastExpr 0x1531e85e758 <col:18> 'void *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1531e85e6c0 <col:18> 'void *' lvalue ParmVar 0x1531e85dd78 'arg' 'void *'
    |   | `-ImplicitCastExpr 0x1531e85e770 <col:23> 'char *' <ArrayToPointerDecay>
    |   |   `-StringLiteral 0x1531e85e6e0 <col:23> 'char [22]' lvalue "response parse error\n"
    |   |-CallExpr 0x1531e85e990 <line:2747:9, col:47> 'int'
    |   | |-ImplicitCastExpr 0x1531e85e978 <col:9> 'int (*)()' <FunctionToPointerDecay>
    |   | | `-DeclRefExpr 0x1531e85e878 <col:9> 'int ()' Function 0x1531e85e7b0 'BIO_dump_indent' 'int ()'
    |   | |-ImplicitCastExpr 0x1531e85e9d0 <col:25> 'void *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1531e85e898 <col:25> 'void *' lvalue ParmVar 0x1531e85dd78 'arg' 'void *'
    |   | |-CStyleCastExpr 0x1531e85e908 <col:30, col:38> 'char *' <BitCast>
    |   | | `-ImplicitCastExpr 0x1531e85e8f0 <col:38> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
    |   | |   `-DeclRefExpr 0x1531e85e8b8 <col:38> 'const unsigned char *' lvalue Var 0x1531e85def8 'p' 'const unsigned char *'
    |   | |-ImplicitCastExpr 0x1531e85e9e8 <col:41> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1531e85e930 <col:41> 'int' lvalue Var 0x1531e85df90 'len' 'int'
    |   | `-IntegerLiteral 0x1531e85e950 <col:46> 'int' 4
    |   `-ReturnStmt 0x1531e85ea28 <line:2748:9, col:16>
    |     `-IntegerLiteral 0x1531e85ea00 <col:16> 'int' 0
    |-CallExpr 0x1531e85eb28 <line:2750:5, col:63> 'int'
    | |-ImplicitCastExpr 0x1531e85eb10 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1531e85ea90 <col:5> 'int ()' Function 0x1531e82d300 'BIO_puts' 'int ()'
    | |-ImplicitCastExpr 0x1531e85eb58 <col:14> 'void *' <LValueToRValue>
    | | `-DeclRefExpr 0x1531e85eab0 <col:14> 'void *' lvalue ParmVar 0x1531e85dd78 'arg' 'void *'
    | `-ImplicitCastExpr 0x1531e85eb70 <col:19> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x1531e85ead0 <col:19> 'char [41]' lvalue "\n======================================\n"
    |-CallExpr 0x1531e85ed78 <line:2752:5, col:61> 'int'
    | |-ImplicitCastExpr 0x1531e85ed60 <col:5> 'int (*)()' <FunctionToPointerDecay>
    | | `-DeclRefExpr 0x1531e85ece0 <col:5> 'int ()' Function 0x1531e82d300 'BIO_puts' 'int ()'
    | |-ImplicitCastExpr 0x1531e85eda8 <col:14> 'void *' <LValueToRValue>
    | | `-DeclRefExpr 0x1531e85ed00 <col:14> 'void *' lvalue ParmVar 0x1531e85dd78 'arg' 'void *'
    | `-ImplicitCastExpr 0x1531e85edc0 <col:19> 'char *' <ArrayToPointerDecay>
    |   `-StringLiteral 0x1531e85ed20 <col:19> 'char [40]' lvalue "======================================\n"
    `-ReturnStmt 0x1531e85ef10 <line:2754:5, col:12>
      `-IntegerLiteral 0x1531e85eee8 <col:12> 'int' 1
