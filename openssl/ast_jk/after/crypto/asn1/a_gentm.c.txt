TranslationUnitDecl 0x26232606e88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x26232607720 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x26232607420 '__int128'
|-TypedefDecl 0x26232607790 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x26232607440 'unsigned __int128'
|-TypedefDecl 0x26232607ac8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x26232607880 'struct __NSConstantString_tag'
|   `-Record 0x262326077e8 '__NSConstantString_tag'
|-TypedefDecl 0x26232607b38 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x26232607060 'unsigned long long'
|-TypedefDecl 0x26232607bd0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x26232607b90 'char *'
|   `-BuiltinType 0x26232606f20 'char'
|-TypedefDecl 0x26232607c40 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x26232607b90 'char *'
|   `-BuiltinType 0x26232606f20 'char'
|-TypedefDecl 0x26232607d00 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x26232607060 'unsigned long long'
|-TypedefDecl 0x26232607d70 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x26232607b90 'char *'
|   `-BuiltinType 0x26232606f20 'char'
|-FunctionDecl 0x26233fe0400 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x26233fe04a0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x26233fe0510 <col:21> Implicit
|-FunctionDecl 0x26233fe0568 prev 0x26233fe0400 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x26233fe0290 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x26233fe0658 <col:21> Inherited Implicit
|-TypedefDecl 0x26233fe0698 prev 0x26232607b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x26232607060 'unsigned long long'
|-TypedefDecl 0x26233fe0740 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x26233fe0710 'size_t' sugar
|   |-Typedef 0x26233fe0698 'size_t'
|   `-BuiltinType 0x26232607060 'unsigned long long'
|-TypedefDecl 0x26233fe07b0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x26232606fc0 'long long'
|-TypedefDecl 0x26233fe0820 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x26232606fc0 'long long'
|-TypedefDecl 0x26233fe0890 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x26232607000 'unsigned short'
|-TypedefDecl 0x26233fe0900 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x26232607000 'unsigned short'
|-TypedefDecl 0x26233fe0970 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x26232607000 'unsigned short'
|-TypedefDecl 0x26233fe09e0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x26232606f80 'int'
|-TypedefDecl 0x26233fe0a50 <line:567:1, col:19> col:19 referenced __time32_t 'long'
| `-BuiltinType 0x26232606fa0 'long'
|-TypedefDecl 0x26233fe0ac0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x26232606fc0 'long long'
|-TypedefDecl 0x26233fe0b50 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x26233fe0b20 '__time64_t' sugar
|   |-Typedef 0x26233fe0ac0 '__time64_t'
|   `-BuiltinType 0x26232606fc0 'long long'
|-FunctionDecl 0x26233fe0cc8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x26233fe0ee8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2623401c870 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x26233fe1028 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x26233fe10a0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x26233fe1118 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x26233fe1198 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2623401c610 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2623401c950 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2623401ca10 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2623401cb80 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2623401cb30 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2623401cad0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2623401c9f0 'struct threadlocaleinfostruct'
|       `-Record 0x26234020650 'threadlocaleinfostruct'
|-TypedefDecl 0x2623401cc90 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2623401cc40 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2623401cbe0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2623401cab0 'struct threadmbcinfostruct'
|       `-Record 0x2623401ca10 'threadmbcinfostruct'
|-RecordDecl 0x2623401cce8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2623401cda0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2623401ce60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2623401cef0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2623401cf80 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2623401d038 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2623401cfe0 'struct localeinfo_struct' sugar
|   `-RecordType 0x2623401ce40 'struct localeinfo_struct'
|     `-Record 0x2623401cda0 'localeinfo_struct'
|-TypedefDecl 0x2623401d110 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2623401d0c0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2623401cfe0 'struct localeinfo_struct' sugar
|     `-RecordType 0x2623401ce40 'struct localeinfo_struct'
|       `-Record 0x2623401cda0 'localeinfo_struct'
|-RecordDecl 0x2623401d188 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2623401d240 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2623401d2b8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2623401d378 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2623401d410 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2623401d480 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2623401d538 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2623401d4e0 'struct localerefcount' sugar
|   `-RecordType 0x2623401d220 'struct localerefcount'
|     `-Record 0x2623401d188 'localerefcount'
|-RecordDecl 0x26234020650 prev 0x2623401c950 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x262340206d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x26234020748 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x262340207b8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x26234020828 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x26234020898 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x26234020a58 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x26234020ac8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x26234020b38 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x26234020ba8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x26234020c18 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x26234020c88 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x26234020ce0 parent 0x26232606e88 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x26234020e70 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x26234020ee0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x26234020f50 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x26234020fc0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x26234021060 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x262340210d0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x262340211e0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x26234021318 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x262340213c8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x26234021370 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2623401c9f0 'struct threadlocaleinfostruct'
|     `-Record 0x26234020650 'threadlocaleinfostruct'
|-RecordDecl 0x26234021460 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x26234021520 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x26234021598 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x262340276c0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x26234027730 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x262340277a0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x26234027810 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x26234027880 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x262340278f0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x26234027960 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x26234027a10 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x262340279c0 'struct _iobuf' sugar
|   `-RecordType 0x26234021500 'struct _iobuf'
|     `-Record 0x26234021460 '_iobuf'
|-FunctionDecl 0x26234027c48 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x26234027d18 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x26232606fc0 'long long'
|-FunctionDecl 0x26234027ef8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26234027d80 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x262340281f0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x26234027fd0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x26234028048 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x262340285a0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x262340282d0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x26234028350 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x262340283d0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x262340308c0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x26234030750 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x26234030af0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x262340309b0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x26234030ca0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26234030bc0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x26234030e90 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26234031188 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x26234030f60 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x26234030fe0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x26234031340 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26234031260 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x262340314f0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26234031410 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x262340316a0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x262340315c0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x262340297e8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26234029708 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x26234029978 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26234029ce0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x26234029a40 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x26234029b38 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2623402a098 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x26234029dc0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x26234029e40 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x26234029eb8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2623402a258 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2623402a178 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2623402a520 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2623402a330 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2623402a3b0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x26234031760 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26234031b58 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x26234031bf8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x26234031c60 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x26234031cd8 prev 0x26234031b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x26234031930 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x262340319b0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x26234031d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234032200 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x26234031f30 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x26234031fb0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x26234032030 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x26234032520 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x262340325c0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x26234032628 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x262340326a0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2623402f740 prev 0x26234032520 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x262340322e0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x26234032360 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2623402f838 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2623402fa00 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2623402f880 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2623402f900 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2623402fc58 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2623402fae0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2623402fb58 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2623402fe88 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2623402fd38 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x26234030180 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2623402ff60 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2623402ffd8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x26234030618 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x262340306b8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2623402a6f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2623402a758 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2623402a7c0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2623402a848 prev 0x26234030618 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x26234030260 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x262340302d8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234030350 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340303c8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2623402ad50 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2623402a938 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2623402a9b0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623402aa28 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623402aaa0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2623402ab18 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x2623402b210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2623402af40 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2623402afc0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x2623402b038 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x2623402b2c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234032818 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2623402b410 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2623402b490 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x2623402b510 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x2623402b588 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x26234032bc0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x26234032c60 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x26234032cc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x26234032d40 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x26234032da8 prev 0x26234032bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x262340329f8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x26234032a78 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x26234032f88 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x26234032e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340333c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x262340330c8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x26234033148 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x262340331e0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26234033480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2623402b700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x262340335c0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x26234033640 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2623402b9f0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2623402b7d8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2623402b858 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2623402b8d0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2623402bd50 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x2623402bad0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2623402bba8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x2623402c108 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2623402be28 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x2623402bea8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x2623402bf28 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x2623402c368 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2623402c1e8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x262340337c8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2623402c438 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2623402c4b8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x2623402c538 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x26234033a28 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x262340338a8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x26234033ee8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x26234033f88 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x26234033ff0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x26234034058 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x262340340c0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x26234034148 prev 0x26234033ee8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x26234033b30 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x26234033ba8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234033c20 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26234033c98 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x26234034310 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26234034230 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x262340344a0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26234034628 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26234034950 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x262340346f8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x262340347a0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x26234034c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x26234034b30 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x26234034d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234034f40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26234034e60 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x26234035160 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x26234035018 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x26234035310 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x26234035230 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x26234035560 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x262340353e8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x26234035468 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x262340357a0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x26234035840 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x262340358b0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x26234035918 prev 0x262340357a0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x26234035640 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x26234035a08 <col:40> Inherited printf 1 2
|-FunctionDecl 0x26234035b38 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x26234035a58 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x26234035d88 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x26234035c10 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x26234035c88 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x26234035f48 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x26234035e68 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x26234036168 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x26234036020 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x262340363b8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x26234036240 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x262340362b8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x26234036578 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x26234036498 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x26234083fa0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x26234036650 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x262340366d0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x26234084160 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x26234084080 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x262340843f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x26234084310 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x26234084498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x26234084690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x262340845b8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x26234084820 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26234084ac8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x26234084b68 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x26234084bd8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x26234084c40 prev 0x26234084ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x262340849b0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x26234084e18 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x26234084ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340821c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26234081f88 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x26234082000 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26234082270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234082498 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x262340823b8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x262340826e8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26234082570 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x262340825e8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26234082aa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x26234082880 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x26234082900 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x26234082b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234082d80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x26234082ca0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x26234083008 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x26234082ec0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x262340831f0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x26234083640 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x262340832b8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x26234083338 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x262340833b8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x26234083430 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x26234083ac0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x26234083730 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x262340837a8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234083820 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340838a0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x26234084ee0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x26234083bb0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x26234083c28 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26234083ca8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x262340850a8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x26234084fc8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x26234085480 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x26234085520 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x26234085588 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x26234085600 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x26234085668 prev 0x26234085480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x26234085240 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x262340852c0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x26234085848 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x26234085718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234085c38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26234085958 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x262340859d8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x26234085a50 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26234085cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234085ff0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x26234085e38 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x26234085ef0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x262340862e8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x262340860d0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x26234086150 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x262340861c8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26234086778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x26234086490 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x26234086508 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234086588 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x26234086830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234086e00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26234086a70 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x26234086ae8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234086b68 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x26234086be0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26234086f00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234087260 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x26234087048 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x262340870c0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26234087140 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x262340875f8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26234087348 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x262340873c0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234087440 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x262340874b8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26234087858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x262340878f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234087bb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x26234087a40 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x26234087f10 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x26234087c88 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x26234087d00 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x26234088190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x262340880b0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x26234088238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340884f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x26234088380 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x262340883f8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x26234088910 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x262340889b0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x26234088a18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x26234088a80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26234088b00 <col:40> Implicit printf 2 0
|-FunctionDecl 0x26234088b68 prev 0x26234088910 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x262340885d0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x26234088650 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x262340886c8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x26234088c68 <col:40> Inherited printf 2 0
|-FunctionDecl 0x26234080ea0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x26234080f40 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x26234080fa8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x26234081010 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26234081090 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x262340810f8 prev 0x26234080ea0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x26234088cb0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x26234088d30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x26234088da8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x262340811f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x26234081458 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x26234081240 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x262340812c0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x26234081338 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234081750 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x26234081538 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x262340815b8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x26234081630 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234081a98 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x26234081b38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x26234081ba0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26234081c18 <col:40> Implicit printf 1 0
|-FunctionDecl 0x26234081c80 prev 0x26234081a98 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x26234081838 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x262340818b0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x26234081d78 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2623408a068 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2623408a108 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2623408a170 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2623408a1e8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2623408a250 prev 0x2623408a068 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x26234081dc8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x26234089f30 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2623408a348 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2623408a510 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2623408a398 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2623408a410 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408a768 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2623408a5f0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2623408a668 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408acc8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2623408ad68 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2623408add0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2623408ae38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2623408aea0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2623408cf60 <col:77> Implicit printf 3 0
|-FunctionDecl 0x2623408cfc8 prev 0x2623408acc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2623408a908 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2623408a980 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408aa00 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2623408aa78 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x2623408d1b8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x2623408d088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2623408d628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2623408d208 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x2623408d280 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408d2f8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408d378 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2623408d3f0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408da68 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2623408d720 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x2623408d798 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408d810 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408d890 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x2623408d908 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408de38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2623408dc20 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2623408dc98 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408dd18 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x2623408def0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2623408f3f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2623408f140 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2623408f1b8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408f238 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2623408f2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2623408f4b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2623408f8a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2623408f5f8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2623408f670 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408f6f0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2623408f768 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408fc68 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2623408f998 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2623408fa18 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2623408fa90 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234090030 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x262340900d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x26234090138 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x262340901b0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x26234090218 prev 0x26234090030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2623408fe10 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2623408fe90 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x262340903f8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x262340902c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234090820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x262340908c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x26234090928 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x26234090990 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26234090a10 <col:94> Implicit printf 2 0
|-FunctionDecl 0x26234090a78 prev 0x26234090820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x26234090508 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x26234090588 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x26234090600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x26234090c60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x26234090b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234088f20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x26234088fc0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x26234089028 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x26234089090 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x26234089110 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x26234089178 prev 0x26234088f20 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x26234090cb0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x26234090d30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x26234090da8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x26234089278 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x26234089440 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x262340892c8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x26234089340 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234089738 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x26234089520 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x26234089598 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26234089618 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x26234089ad0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x26234089820 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x26234089898 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234089918 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x26234089990 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234089d38 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x26234089bb8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x26234089c38 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x2623408bf50 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x26234089e18 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x2623408c240 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2623408c028 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x2623408c0a0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2623408c120 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x2623408c538 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2623408c320 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2623408c3a0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2623408c418 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408c798 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2623408c620 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x2623408c698 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408cb28 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2623408c878 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x2623408c8f0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408c970 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x2623408c9e8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408ccf8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2623408cc18 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x26234091fb0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2623408cdd0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2623408ce48 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234092170 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x26234092090 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x26234092300 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x26234092548 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x262340923d0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x26234092448 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340927a0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26234092628 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x262340926a0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340929f8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26234092880 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x262340928f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26234092da8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26234092ad8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x26234092b50 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26234092bc8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408b060 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26234092e90 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x26234092f08 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2623408af40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408b358 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2623408b148 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2623408b1c0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2623408b238 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408b650 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2623408b438 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2623408b4b8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2623408b530 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2623408b948 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2623408b730 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2623408b7b0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2623408b828 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2623408bc40 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2623408ba28 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2623408baa8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2623408bb20 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26234093120 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2623408bd20 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2623408bda0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2623408be18 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2623408be90 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340934b8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26234093208 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x26234093288 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x26234093300 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26234093378 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234093850 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340935a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x26234093620 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x26234093698 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26234093710 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234093ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26234093a00 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x26234093a80 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x26234093af8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x26234093da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340942e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26234093ee8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x26234093fd0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234094050 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x262340940c8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26234094680 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x262340943d0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x26234094448 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340944c8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x26234094540 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26234094bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26234094870 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x262340948f0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x26234094968 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x262340949e0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x26234094c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234095218 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26234094dd8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x26234094e50 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234094ed0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x26234094f48 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26234094fe0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234095658 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26234095310 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x26234095388 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234095408 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x26234095480 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340954f8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340958c8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x26234095750 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x262340957c8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26234095b20 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x262340959a8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x26234095a20 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x26234095e10 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26234095c00 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x26234095c78 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x26234095cf0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408e0a0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x26234095ef8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x26234095f70 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2623408df80 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623408e4f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2623408e248 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2623408e2c0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408e340 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2623408e3b8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2623408e5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2623408e9b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2623408e700 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2623408e778 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408e7f8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2623408e870 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2623409c050 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2623408eaa0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2623408eb18 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408eb90 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623408ec10 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2623408ec88 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2623409c590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2623409c248 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x2623409c2c0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623409c340 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x2623409c3b8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2623409c430 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2623409c658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2623409cad8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2623409c7a8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2623409c820 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623409c8a0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x2623409c918 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2623409c990 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623409d0c0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2623409cbd0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2623409cc48 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623409ccc0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623409cd40 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2623409cdb8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2623409ce30 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623409d480 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2623409d1b8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2623409d230 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2623409d2b0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2623409d6f0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2623409d580 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2623409d908 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2623409dbe8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2623409d9d0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2623409da48 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2623409de30 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2623409dcc0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x26234095ff0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2623409df00 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x26234096178 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x262340963b0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x26234096240 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x262340962b8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x26234096560 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x26234096488 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x26234096808 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x26234096630 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x262340966a8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x26234096bb0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x262340968e0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x26234096960 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x262340969d8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x26234096eb0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x26234096c90 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x26234096d08 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x262340971b8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x26234096f88 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x26234097010 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x262340974c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x26234097350 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x26234097568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x26234097828 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x262340976a8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x26234097b30 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x262340978f8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x26234097970 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x26234097d80 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x26234097c08 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x26234097c80 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2623409b040 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x26234097e58 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x2623409b1f0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2623409b110 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x2623409b3a0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2623409b2c0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x2623409b738 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2623409b470 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2623409b4e8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2623409b560 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623409ba28 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2623409b818 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2623409b890 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2623409b908 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623409bd18 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2623409bb08 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2623409bb80 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2623409bbf8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234098010 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2623409bdf8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2623409be70 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2623409bee8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234098310 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x262340980f0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26234098168 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234098560 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x262340983e8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26234098460 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340987b0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x26234098638 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340986b0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234098a00 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x26234098888 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26234098900 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234098db8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x26234098ad8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x26234098b50 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x26234098bc8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x2623409f290 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26234098e98 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x26234098f10 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234098f88 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2623409f080 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623409f648 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2623409f378 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2623409f3f0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2623409f468 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623409f938 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2623409f728 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x2623409f7a0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2623409f818 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623409fc28 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2623409fa18 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2623409fa90 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2623409fb08 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x2623409ffb0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2623409fd08 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2623409fd80 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623409fdf8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2623409fe70 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340993d0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x26234099048 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340990c0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234099138 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340991b0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x262340998d8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x262340994b8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x26234099530 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340995a8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234099620 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x26234099698 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x26234099c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x26234099a88 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x26234099b00 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x26234099b78 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x26234099d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2623409a260 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x26234099f50 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2623409a030 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2623409a0a8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2623409a120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2623409a320 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2623409a5d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2623409a460 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x2623409a4d8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x2623409a790 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2623409a6b0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x2623409aa70 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2623409a860 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2623409a8d8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2623409a950 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2623409acc8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2623409ab50 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2623409abc8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a3ef0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2623409ada0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2623409ae18 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2623409ae90 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x262340a4278 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x262340a3fd0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340a4048 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340a40c0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a4138 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a4440 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x262340a4360 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x262340a4688 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x262340a4510 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a4588 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a4990 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340a4760 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a47d8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340a4be0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340a4a68 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a4ae0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340a4e30 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340a4cb8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a4d30 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340a6208 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340a5f38 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a5fb0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340a6028 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a64f8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340a62e8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a6360 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340a63d8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a67e8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340a65d8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a6650 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340a66c8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a6ba8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340a68c8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x262340a6940 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a69b8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340a1ed0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340a6c88 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x262340a6d00 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a6d78 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340a21c0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340a1fb0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x262340a2028 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a20a0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340a2610 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340a22a0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x262340a2318 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a2390 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340a2408 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a29a0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340a26f8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x262340a2770 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a27e8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340a2860 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a2d30 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340a2a88 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x262340a2b00 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a2b78 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340a2bf0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340ac280 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340a2e18 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340abf70 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340abfe8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340ac060 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340ac610 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340ac368 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340ac3e0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340ac458 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340ac4d0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340ac9a0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340ac6f8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340ac770 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340ac7e8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340ac860 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340acea8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340aca88 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340acb00 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340acb78 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340acbf0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340acc68 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a5268 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340a4f28 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340a4fa0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340a5018 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a5090 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340a5108 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a5698 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340a5358 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340a53d0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340a5448 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a54c0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340a5538 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a5900 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340a5788 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a5800 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340a5b50 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340a59d8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a5a50 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340a5e38 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340a5c28 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a5ca0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340a5d18 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a72b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340a7010 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340a7088 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340a7100 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a7178 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x262340a7378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340a78e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340a74c0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340a7538 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340a75b0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340a7628 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a76a0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340a7e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340a7ae0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340a7b58 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340a7bd0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a7c48 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x262340a7cc0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x262340adf90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340ae5a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340ae0d8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x262340ae150 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340ae1c8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340ae240 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340ae2b8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340ae330 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340aeaa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x262340ae868 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x262340ae8e0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x262340aeb50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x262340aec68 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x262340af208 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x262340aef20 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x262340aefb0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340af028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x262340af2c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x262340af3d8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x262340af978 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340af698 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x262340af710 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340af788 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x262340afa30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x262340afb50 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x262340ad190 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340afe10 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x262340afe88 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340aff00 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x262340acf80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x262340ad250 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x262340ad370 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x262340ad678 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x262340ad498 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x262340ad510 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340ad588 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x262340b0250 <line:37:1, line:44:1>
|   |-DeclStmt 0x262340ad7c0 <line:38:5, col:21>
|   | `-VarDecl 0x262340ad758 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x262340ad858 <line:39:5, col:13>
|   | `-VarDecl 0x262340ad7f0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x262340adbb0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x262340adb98 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x262340adab0 <col:34> '<builtin fn type>' Function 0x262340ad948 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x262340adae8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x262340ad758 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x262340adb20 <col:29> 'const wchar_t *' lvalue ParmVar 0x262340ad588 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x262340ade70 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x262340adbe0 <col:5> 'int' lvalue Var 0x262340ad7f0 '_Ret' 'int'
|   | `-CallExpr 0x262340addb0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x262340add98 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x262340adc18 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x262340acea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x262340addf8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x262340adc38 <col:27> 'wchar_t *' lvalue ParmVar 0x262340ad498 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x262340ade10 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x262340adc58 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x262340ad510 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x262340ade28 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x262340adc78 <col:44> 'const wchar_t *' lvalue ParmVar 0x262340ad588 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x262340ade40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x262340add00 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x262340adcd8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x262340adc98 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x262340ade58 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x262340add20 <col:59> 'va_list':'char *' lvalue Var 0x262340ad758 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x262340b01e0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x262340b01c8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x262340b0118 <col:34> '<builtin fn type>' Function 0x262340affb0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x262340b0150 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x262340ad758 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x262340b0240 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x262340b0228 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x262340b0208 <col:12> 'int' lvalue Var 0x262340ad7f0 '_Ret' 'int'
|-FunctionDecl 0x262340ad948 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x262340ad9e8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x262340ada58 <col:34> Implicit
|-FunctionDecl 0x262340affb0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x262340b0050 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x262340b00c0 <col:34> Implicit
|-FunctionDecl 0x262340b0548 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x262340b02a0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x262340b0318 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340b0390 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340b0408 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x262340b0830 <line:50:1, line:52:1>
|   `-ReturnStmt 0x262340b0820 <line:51:5, col:62>
|     `-CallExpr 0x262340b0760 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x262340b0748 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x262340b0620 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x262340acea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x262340b07a8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x262340b0640 <col:27> 'wchar_t *' lvalue ParmVar 0x262340b02a0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x262340b07c0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x262340b0660 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x262340b0318 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x262340b07d8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x262340b0680 <col:44> 'const wchar_t *' lvalue ParmVar 0x262340b0390 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x262340b07f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x262340b0708 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x262340b06e0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x262340b06a0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x262340b0808 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x262340b0728 <col:59> 'va_list':'char *' lvalue ParmVar 0x262340b0408 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x262340b0ad0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x262340b0858 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x262340b08d0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340b0948 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340b09c0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x262340a8fe8 <line:61:1, line:68:1>
|   |-DeclStmt 0x262340b0c20 <line:62:5, col:21>
|   | `-VarDecl 0x262340b0bb8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x262340b0cb8 <line:63:5, col:13>
|   | `-VarDecl 0x262340b0c50 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x262340b0d60 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x262340b0d48 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x262340b0cd0 <col:34> '<builtin fn type>' Function 0x262340ad948 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x262340b0cf0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x262340b0bb8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x262340b0d28 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x262340b09c0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x262340b0f60 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x262340b0d90 <col:5> 'int' lvalue Var 0x262340b0c50 '_Ret' 'int'
|   | `-CallExpr 0x262340b0ea0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x262340b0e88 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x262340b0dc8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x262340acea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x262340b0ee8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x262340b0de8 <col:27> 'wchar_t *' lvalue ParmVar 0x262340b0858 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x262340b0f00 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x262340b0e08 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x262340b08d0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x262340b0f18 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x262340b0e28 <col:44> 'const wchar_t *' lvalue ParmVar 0x262340b0948 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x262340b0f30 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x262340b0e48 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x262340b09c0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x262340b0f48 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x262340b0e68 <col:64> 'va_list':'char *' lvalue Var 0x262340b0bb8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x262340a8f78 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x262340a8f60 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x262340b0f80 <col:34> '<builtin fn type>' Function 0x262340affb0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x262340a8f40 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x262340b0bb8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x262340a8fd8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x262340a8fc0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x262340a8fa0 <col:12> 'int' lvalue Var 0x262340b0c50 '_Ret' 'int'
|-FunctionDecl 0x262340a9378 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x262340a9038 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x262340a90b0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340a9128 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a91a0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x262340a9218 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x262340a9600 <line:74:1, line:76:1>
|   `-ReturnStmt 0x262340a95f0 <line:75:5, col:67>
|     `-CallExpr 0x262340a9530 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x262340a9518 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x262340a9458 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x262340acea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x262340a9578 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x262340a9478 <col:27> 'wchar_t *' lvalue ParmVar 0x262340a9038 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x262340a9590 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x262340a9498 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x262340a90b0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x262340a95a8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x262340a94b8 <col:44> 'const wchar_t *' lvalue ParmVar 0x262340a9128 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x262340a95c0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x262340a94d8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x262340a91a0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x262340a95d8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x262340a94f8 <col:64> 'va_list':'char *' lvalue ParmVar 0x262340a9218 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x262340a9848 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x262340a9628 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x262340a96a0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x262340a9a98 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x262340a9920 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340a9998 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340a9d80 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x262340a9b70 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340a9be8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x262340a9c60 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x262340b1138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x262340b0fc0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x262340b1038 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x262340b11e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340b15f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340b13e8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x262340b1460 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340b14d8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x262340b16b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340b1968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x262340b17f0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x262340b1868 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x262340b1c50 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340b1a40 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x262340b1ab8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340b1b30 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340a9fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x262340b1df0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x262340b1e68 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x262340aa070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340aa548 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340aa270 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x262340aa2e8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340aa360 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x262340aa600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340aa8b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x262340aa740 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x262340aa7b8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x262340aaba0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340aa990 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x262340aaa08 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340aaa80 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340b20b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x262340aad40 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x262340aadb8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340aae30 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x262340b2170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340b26f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340b2370 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x262340b23e8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340b2460 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340b24d8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x262340b27b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340b2b00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x262340b28f0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x262340b2968 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340b29e0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x262340b2e88 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340b2be0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x262340b2c58 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340b2cd0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340b2d48 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340ab110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x262340ab030 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x262340ab1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340ab530 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340ab3b8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340ab430 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x262340ab5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340ab800 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x262340ab720 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x262340aba48 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x262340ab8d0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340ab948 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340abd48 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x262340abb28 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x262340abba0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x262340b81d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x262340abee0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x262340b8030 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x262340b8288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340b8690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x262340b83d0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x262340b8448 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x262340b84c0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x262340b8af0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x262340b8830 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x262340b88a8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x262340b8920 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x262340b8ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340b6058 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x262340b8cf0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x262340b8d68 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x262340b8de0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x262340b8e58 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x262340b62b0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x262340b6140 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x262340b64f0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x262340b6380 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x262340b63f8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x262340b66a8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x262340b65c8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x262340b6998 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x262340b6778 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x262340b67f0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x262340b6c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x262340b6b30 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x262340b6cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340b6ec8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x262340b6df0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x262340b40e8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x262340b6f98 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x262340b3ff0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x262340b4330 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x262340b41c0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x262340b4238 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x262340b44e0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x262340b4408 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x262340b4688 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x262340b45b0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x262340b4838 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x262340b4758 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x262340b49e8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x262340b4908 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x262340b4d60 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x262340b4ac0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x262340b4b38 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340b4bb0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340b4c28 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x262340b9210 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x262340b4e50 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x262340b4ec8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340b4f40 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340b9040 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340b90b8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x262340b9520 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x262340b9300 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x262340b9380 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x262340b9400 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x262340b96e0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x262340b9600 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x262340b99d0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x262340b97b0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x262340b9830 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x262340b98b0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x262340b9b90 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x262340b9ab0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x262340b9f08 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x262340b9c68 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x262340b9ce0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340b9d58 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340b9dd0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x262340ba1c8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x262340ba050 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x262340ba0c8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x262340ba500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x262340ba380 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x262340ba400 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x262340ba5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x262340ba868 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x262340ba908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x262340bac48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x262340baad0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x262340bab50 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x262340bacf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x262340bb060 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x262340bb100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x262340bb3a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x262340bb2c0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x262340bb448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x262340bb6c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x262340bb768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x262340bba10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x262340bb930 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x262340bbab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x262340bbd98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x262340bbcb8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x262340bbe40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x262340bc1e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x262340bc070 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x262340bc0e8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x262340bc298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x262340bc558 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x262340bc5f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x262340bc748 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:89:1, col:14> col:14 referenced clock_t 'long'
| `-BuiltinType 0x26232606fa0 'long'
|-RecordDecl 0x262340bc7a0 <line:113:1, line:123:9> line:113:8 struct tm definition
| |-MaxFieldAlignmentAttr 0x262340bc860 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x262340bc8d8 <line:114:9, col:13> col:13 referenced tm_sec 'int'
| |-FieldDecl 0x262340bc948 <line:115:9, col:13> col:13 referenced tm_min 'int'
| |-FieldDecl 0x262340bc9b8 <line:116:9, col:13> col:13 referenced tm_hour 'int'
| |-FieldDecl 0x262340bca28 <line:117:9, col:13> col:13 referenced tm_mday 'int'
| |-FieldDecl 0x262340bca98 <line:118:9, col:13> col:13 referenced tm_mon 'int'
| |-FieldDecl 0x262340bcb08 <line:119:9, col:13> col:13 referenced tm_year 'int'
| |-FieldDecl 0x262340bcb78 <line:120:9, col:13> col:13 tm_wday 'int'
| |-FieldDecl 0x262340bcbe8 <line:121:9, col:13> col:13 tm_yday 'int'
| `-FieldDecl 0x262340bcc58 <line:122:9, col:13> col:13 tm_isdst 'int'
|-FunctionDecl 0x262340bcea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:147:99> col:84 __daylight 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x262340bcf40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340bf2c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:151:98> col:84 __dstbias 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x262340bf360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_dstbias instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340bf620 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:155:100> col:85 __timezone 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x262340bf6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340bf9e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:159:112> col:99 __tzname 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x262340bfa80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340bfd40 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:162:9, col:60> col:25 _get_daylight 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x262340bfbc8 <col:45, col:51> col:51 _Daylight 'int *'
|-FunctionDecl 0x262340bff90 <line:163:9, col:73> col:25 _get_dstbias 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x262340bfe18 <col:44, col:51> col:51 _Daylight_savings_bias 'long *'
|-FunctionDecl 0x262340c0188 <line:164:9, col:61> col:25 _get_timezone 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x262340c00b0 <col:45, col:52> col:52 _Timezone 'long *'
|-FunctionDecl 0x262340c0638 <line:165:9, col:150> col:25 _get_tzname 'errno_t (size_t *, char *, size_t, int) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, int)'
| |-ParmVarDecl 0x262340c02b8 <col:43, col:51> col:51 _ReturnValue 'size_t *'
| |-ParmVarDecl 0x262340c0338 <col:94, col:100> col:100 _Buffer 'char *'
| |-ParmVarDecl 0x262340c03b0 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340c0430 <col:140, col:144> col:144 _Index 'int'
|-FunctionDecl 0x262340c09f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:174:108> col:74 asctime 'char *(const struct tm *) __attribute__((cdecl))':'char *(const struct tm *)'
| |-ParmVarDecl 0x262340c0880 <col:87, col:105> col:105 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x262340c0aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using asctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340c0ec0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:176:28, col:170> col:44 asctime_s 'errno_t (char *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (char *, size_t, const struct tm *)'
| |-ParmVarDecl 0x262340c0be8 <col:106, col:112> col:112 _Buf 'char *'
| |-ParmVarDecl 0x262340c0c60 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340c0cf0 <col:149, col:167> col:167 _Tm 'const struct tm *'
|-FunctionDecl 0x262340be248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:180:98> col:60 _ctime32 'char *(const __time32_t *) __attribute__((cdecl))':'char *(const __time32_t *)'
| |-ParmVarDecl 0x262340be0c8 <col:74, col:93> col:93 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x262340be2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340be700 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:181:9, col:154> col:25 _ctime32_s 'errno_t (char *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x262340be438 <col:88, col:94> col:94 _Buf 'char *'
| |-ParmVarDecl 0x262340be4b0 <col:105, col:112> col:112 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340be528 <col:131, col:149> col:149 _Time 'const __time32_t *'
|-FunctionDecl 0x262340be948 <line:184:24, col:50> col:40 clock 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|-FunctionDecl 0x262340bec30 <line:185:9, col:82> col:24 _difftime32 'double (__time32_t, __time32_t) __attribute__((cdecl))':'double (__time32_t, __time32_t)'
| |-ParmVarDecl 0x262340bea10 <col:41, col:52> col:52 _Time1 '__time32_t':'long'
| `-ParmVarDecl 0x262340bea88 <col:65, col:76> col:76 _Time2 '__time32_t':'long'
|-FunctionDecl 0x262340befb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:187:120> col:81 _gmtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x262340bedc8 <col:96, col:115> col:115 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x262340cc010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340cc388 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:188:28, col:106> col:44 _gmtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x262340cc168 <col:61, col:72> col:72 _Tm 'struct tm *'
| `-ParmVarDecl 0x262340cc1e0 <col:82, col:101> col:101 _Time 'const __time32_t *'
|-FunctionDecl 0x262340cc618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:190:111> col:69 _localtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x262340cc528 <col:87, col:106> col:106 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x262340cc6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340cc990 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:191:9, col:91> col:25 _localtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x262340cc820 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x262340cc898 <col:67, col:86> col:86 _Time 'const __time32_t *'
|-FunctionDecl 0x262340ccdf8 <line:193:9, col:179> col:24 strftime 'size_t (char *, size_t, const char *, const struct tm *) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *)'
| |-ParmVarDecl 0x262340cca70 <col:62, col:69> col:69 _Buf 'char *'
| |-ParmVarDecl 0x262340ccae8 <col:80, col:87> col:87 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340ccb68 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x262340ccbf8 <col:158, col:176> col:176 _Tm 'const struct tm *'
|-FunctionDecl 0x262340d13a0 <line:194:9, col:199> col:24 _strftime_l 'size_t (char *, size_t, const char *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x262340ccee8 <col:59, col:65> col:65 _Buf 'char *'
| |-ParmVarDecl 0x262340ccf60 <col:76, col:83> col:83 _Max_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340d1060 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x262340d10f0 <col:151, col:168> col:168 _Tm 'const struct tm *'
| `-ParmVarDecl 0x262340d1168 <col:182, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340d1678 <line:196:28, col:142> col:44 _strdate_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x262340d1498 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x262340d1510 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x262340d18f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:198:79 _strdate 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x262340d1818 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x262340d19a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340d1c58 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:200:28, col:143> col:44 _strtime_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x262340d1ae8 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x262340d1b60 <col:124, col:131> col:131 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x262340d1ed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:202:79 _strtime 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x262340d1df8 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x262340d1f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340ce2d0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:204:9, col:64> col:28 _time32 '__time32_t (__time32_t *) __attribute__((cdecl))':'__time32_t (__time32_t *)'
| `-ParmVarDecl 0x262340ce158 <col:46, col:59> col:59 _Time '__time32_t *'
|-FunctionDecl 0x262340ce530 <line:205:9, col:61> col:28 _mktime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x262340ce3b8 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x262340ce6f0 <line:206:9, col:63> col:28 _mkgmtime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x262340ce618 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x262340ce878 <line:210:9, col:33> col:22 _tzset 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x262340ceb60 <line:214:24, col:97> col:39 used _difftime64 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
| |-ParmVarDecl 0x262340ce940 <col:56, col:67> col:67 _Time1 '__time64_t':'long long'
| `-ParmVarDecl 0x262340ce9b8 <col:80, col:91> col:91 _Time2 '__time64_t':'long long'
|-FunctionDecl 0x262340ceea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:215:98> col:60 used _ctime64 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |-ParmVarDecl 0x262340ced28 <col:74, col:93> col:93 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x262340cef50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340cd3e0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:216:9, col:132> col:25 used _ctime64_s 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x262340cd120 <col:65, col:71> col:71 _Buf 'char *'
| |-ParmVarDecl 0x262340cd198 <col:82, col:89> col:89 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340cd210 <col:108, col:127> col:127 _Time 'const __time64_t *'
|-FunctionDecl 0x262340cd708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:219:105> col:66 used _gmtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x262340cd580 <col:81, col:100> col:100 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x262340cd7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340cdb28 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:220:9, col:87> col:25 used _gmtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x262340cd908 <col:43, col:54> col:54 _Tm 'struct tm *'
| `-ParmVarDecl 0x262340cd980 <col:64, col:82> col:82 _Time 'const __time64_t *'
|-FunctionDecl 0x262340cddb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:222:111> col:69 used _localtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x262340cdcc8 <col:87, col:106> col:106 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x262340cde60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340d01c0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:223:9, col:90> col:25 used _localtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x262340d0050 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x262340d00c8 <col:67, col:85> col:85 _Time 'const __time64_t *'
|-FunctionDecl 0x262340d0420 <line:225:9, col:61> col:28 used _mktime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x262340d02b0 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x262340d05e0 <line:226:9, col:63> col:28 used _mkgmtime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x262340d0508 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x262340d0850 <line:227:9, col:64> col:28 used _time64 '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
| `-ParmVarDecl 0x262340d06d8 <col:46, col:59> col:59 _Time '__time64_t *'
|-FunctionDecl 0x262340d0bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:231:79> col:46 _getsystime 'unsigned int (struct tm *) __attribute__((cdecl))':'unsigned int (struct tm *)'
| |-ParmVarDecl 0x262340d0a38 <col:64, col:76> col:76 _Tm 'struct tm *'
| `-DeprecatedAttr 0x262340d0c60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x262340cb070 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:232:98> col:46 _setsystime 'unsigned int (struct tm *, unsigned int) __attribute__((cdecl))':'unsigned int (struct tm *, unsigned int)'
| |-ParmVarDecl 0x262340d0e88 <col:63, col:75> col:75 _Tm 'struct tm *'
| |-ParmVarDecl 0x262340d0f08 <col:80, col:89> col:89 _MilliSec 'unsigned int'
| `-DeprecatedAttr 0x262340cb120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x262340cb4b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:245:100> col:64 _wasctime 'wchar_t *(const struct tm *) __attribute__((cdecl))':'wchar_t *(const struct tm *)'
| |-ParmVarDecl 0x262340cb340 <col:79, col:97> col:97 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x262340cb558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wasctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340cb970 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:246:9, col:156> col:25 _wasctime_s 'errno_t (wchar_t *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const struct tm *)'
| |-ParmVarDecl 0x262340cb698 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x262340cb710 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340cb7a0 <col:135, col:153> col:153 _Tm 'const struct tm *'
|-FunctionDecl 0x262340cbc80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:249:102> col:64 _wctime32 'wchar_t *(const __time32_t *) __attribute__((cdecl))':'wchar_t *(const __time32_t *)'
| |-ParmVarDecl 0x262340cbb10 <col:79, col:97> col:97 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x262340cbd28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340ca130 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:250:9, col:159> col:25 _wctime32_s 'errno_t (wchar_t *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x262340cbe68 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x262340cbee0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340cbf58 <col:135, col:154> col:154 _Time 'const __time32_t *'
|-FunctionDecl 0x262340ca598 <line:253:9, col:186> col:24 wcsftime 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *)'
| |-ParmVarDecl 0x262340ca210 <col:62, col:72> col:72 _Buf 'wchar_t *'
| |-ParmVarDecl 0x262340ca288 <col:83, col:90> col:90 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340ca300 <col:134, col:150> col:150 _Format 'const wchar_t *'
| `-ParmVarDecl 0x262340ca390 <col:165, col:183> col:183 _Tm 'const struct tm *'
|-FunctionDecl 0x262340caab0 <line:254:9, col:214> col:24 _wcsftime_l 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x262340ca680 <col:65, col:75> col:75 _Buf 'wchar_t *'
| |-ParmVarDecl 0x262340ca6f8 <col:86, col:93> col:93 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340ca770 <col:137, col:152> col:152 _Format 'const wchar_t *'
| |-ParmVarDecl 0x262340ca800 <col:166, col:183> col:183 _Tm 'const struct tm *'
| `-ParmVarDecl 0x262340ca878 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x262340cad10 <line:256:9, col:128> col:25 _wstrdate_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x262340caba0 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x262340cac18 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x262340d70c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:258:82 _wstrdate 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x262340caea8 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x262340d7168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340d7418 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:260:9, col:128> col:25 _wstrtime_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x262340d72a8 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x262340d7320 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x262340d7688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:262:82 _wstrtime 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x262340d75b0 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x262340d7730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340d7aa0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:264:103> col:64 used _wctime64 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
| |-ParmVarDecl 0x262340d7930 <col:79, col:98> col:98 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x262340d7b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340d7f50 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:265:9, col:158> col:25 used _wctime64_s 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x262340d7c88 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x262340d7d00 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x262340d7d78 <col:135, col:153> col:153 _Time 'const __time64_t *'
|-FunctionDecl 0x262340d8210 <D:\Microsoft Visual Studio 12.0\VC\include\wtime.inl:44:1, line:50:1> line:44:37 _wctime 'wchar_t *(const time_t *) __attribute__((cdecl))':'wchar_t *(const time_t *)' static inline
| |-ParmVarDecl 0x262340d80d0 <col:45, col:60> col:60 used _Time 'const time_t *'
| `-CompoundStmt 0x262340d83d0 <line:45:1, line:50:1>
|   `-ReturnStmt 0x262340d83c0 <line:48:5, col:27>
|     `-CallExpr 0x262340d8380 <col:12, col:27> 'wchar_t *'
|       |-ImplicitCastExpr 0x262340d8368 <col:12> 'wchar_t *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x262340d82d0 <col:12> 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)' Function 0x262340d7aa0 '_wctime64' 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
|       `-ImplicitCastExpr 0x262340d83a8 <col:22> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x262340d82f0 <col:22> 'const time_t *' lvalue ParmVar 0x262340d80d0 '_Time' 'const time_t *'
|-FunctionDecl 0x262340d8680 <line:52:1, line:55:1> line:52:35 _wctime_s 'errno_t (wchar_t *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x262340d83f8 <col:97, col:106> col:106 used _Buffer 'wchar_t *'
| |-ParmVarDecl 0x262340d8470 <col:115, col:122> col:122 used _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340d84e8 <col:136, col:151> col:151 used _Time 'const time_t *'
| `-CompoundStmt 0x262340d88d0 <line:53:1, line:55:1>
|   `-ReturnStmt 0x262340d88c0 <line:54:5, col:52>
|     `-CallExpr 0x262340d8840 <col:12, col:52> 'errno_t':'int'
|       |-ImplicitCastExpr 0x262340d8828 <col:12> 'errno_t (*)(wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x262340d8750 <col:12> 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)' Function 0x262340d7f50 '_wctime64_s' 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x262340d8878 <col:24> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x262340d8770 <col:24> 'wchar_t *' lvalue ParmVar 0x262340d83f8 '_Buffer' 'wchar_t *'
|       |-ImplicitCastExpr 0x262340d8890 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x262340d8790 <col:33> 'size_t':'unsigned long long' lvalue ParmVar 0x262340d8470 '_SizeInWords' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x262340d88a8 <col:47> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x262340d87b0 <col:47> 'const time_t *' lvalue ParmVar 0x262340d84e8 '_Time' 'const time_t *'
|-FunctionDecl 0x262340d8ae0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:82:1, line:85:1> line:82:34 difftime 'double (time_t, time_t) __attribute__((cdecl))':'double (time_t, time_t)' static inline
| |-ParmVarDecl 0x262340d88f8 <col:43, col:50> col:50 used _Time1 'time_t':'long long'
| |-ParmVarDecl 0x262340d8970 <col:58, col:65> col:65 used _Time2 'time_t':'long long'
| `-CompoundStmt 0x262340d8cf0 <line:83:1, line:85:1>
|   `-ReturnStmt 0x262340d8ce0 <line:84:5, col:37>
|     `-CallExpr 0x262340d8c80 <col:12, col:37> 'double'
|       |-ImplicitCastExpr 0x262340d8c68 <col:12> 'double (*)(__time64_t, __time64_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x262340d8ba8 <col:12> 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)' Function 0x262340ceb60 '_difftime64' 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
|       |-ImplicitCastExpr 0x262340d8cb0 <col:24> 'time_t':'long long' <LValueToRValue>
|       | `-DeclRefExpr 0x262340d8bc8 <col:24> 'time_t':'long long' lvalue ParmVar 0x262340d88f8 '_Time1' 'time_t':'long long'
|       `-ImplicitCastExpr 0x262340d8cc8 <col:31> 'time_t':'long long' <LValueToRValue>
|         `-DeclRefExpr 0x262340d8be8 <col:31> 'time_t':'long long' lvalue ParmVar 0x262340d8970 '_Time2' 'time_t':'long long'
|-FunctionDecl 0x262340d8f28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:92:1> line:86:67 ctime 'char *(const time_t *) __attribute__((cdecl))':'char *(const time_t *)' static inline
| |-ParmVarDecl 0x262340d8dd8 <col:73, col:88> col:88 used _Time 'const time_t *'
| |-CompoundStmt 0x262340d51f0 <line:87:1, line:92:1>
| | `-ReturnStmt 0x262340d51e0 <line:90:5, col:26>
| |   `-CallExpr 0x262340d51a0 <col:12, col:26> 'char *'
| |     |-ImplicitCastExpr 0x262340d5188 <col:12> 'char *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x262340d50e8 <col:12> 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)' Function 0x262340ceea8 '_ctime64' 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x262340d51c8 <col:21> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x262340d5108 <col:21> 'const time_t *' lvalue ParmVar 0x262340d8dd8 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x262340d8fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using ctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340d54a0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:94:1, line:97:1> line:94:35 ctime_s 'errno_t (char *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x262340d5220 <col:43, col:49> col:49 used _Buffer 'char *'
| |-ParmVarDecl 0x262340d5298 <col:58, col:65> col:65 used _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x262340d5310 <col:79, col:94> col:94 used _Time 'const time_t *'
| `-CompoundStmt 0x262340d56f0 <line:95:1, line:97:1>
|   `-ReturnStmt 0x262340d56e0 <line:96:5, col:51>
|     `-CallExpr 0x262340d5660 <col:12, col:51> 'errno_t':'int'
|       |-ImplicitCastExpr 0x262340d5648 <col:12> 'errno_t (*)(char *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x262340d5570 <col:12> 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)' Function 0x262340cd3e0 '_ctime64_s' 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x262340d5698 <col:23> 'char *' <LValueToRValue>
|       | `-DeclRefExpr 0x262340d5590 <col:23> 'char *' lvalue ParmVar 0x262340d5220 '_Buffer' 'char *'
|       |-ImplicitCastExpr 0x262340d56b0 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x262340d55b0 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x262340d5298 '_SizeInBytes' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x262340d56c8 <col:46> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x262340d55d0 <col:46> 'const time_t *' lvalue ParmVar 0x262340d5310 '_Time' 'const time_t *'
|-FunctionDecl 0x262340d5938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:105:1> line:99:73 gmtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x262340d57d8 <col:80, col:95> col:95 used _Time 'const time_t *'
| |-CompoundStmt 0x262340d5c10 <line:100:1, line:105:1>
| | `-ReturnStmt 0x262340d5c00 <line:103:5, col:27>
| |   `-CallExpr 0x262340d5bc0 <col:12, col:27> 'struct tm *'
| |     |-ImplicitCastExpr 0x262340d5ba8 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x262340d5b10 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x262340cd708 '_gmtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x262340d5be8 <col:22> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x262340d5b30 <col:22> 'const time_t *' lvalue ParmVar 0x262340d57d8 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x262340d59e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gmtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340d5e28 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:107:1, line:110:1> line:107:35 gmtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x262340d5c50 <col:44, col:56> col:56 used _Tm 'struct tm *'
| |-ParmVarDecl 0x262340d5cc8 <col:61, col:76> col:76 used _Time 'const time_t *'
| `-CompoundStmt 0x262340d6030 <line:108:1, line:110:1>
|   `-ReturnStmt 0x262340d6020 <line:109:5, col:34>
|     `-CallExpr 0x262340d5fc0 <col:12, col:34> 'errno_t':'int'
|       |-ImplicitCastExpr 0x262340d5fa8 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x262340d5ef0 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x262340cdb28 '_gmtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x262340d5ff0 <col:24> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x262340d5f10 <col:24> 'struct tm *' lvalue ParmVar 0x262340d5c50 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x262340d6008 <col:29> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x262340d5f30 <col:29> 'const time_t *' lvalue ParmVar 0x262340d5cc8 '_Time' 'const time_t *'
|-FunctionDecl 0x262340d2230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:118:1> line:112:76 localtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x262340d2140 <col:86, col:101> col:101 used _Time 'const time_t *'
| |-CompoundStmt 0x262340d24b0 <line:113:1, line:118:1>
| | `-ReturnStmt 0x262340d24a0 <line:116:5, col:30>
| |   `-CallExpr 0x262340d2460 <col:12, col:30> 'struct tm *'
| |     |-ImplicitCastExpr 0x262340d2448 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x262340d2408 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x262340cddb8 '_localtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x262340d2488 <col:25> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x262340d2428 <col:25> 'const time_t *' lvalue ParmVar 0x262340d2140 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x262340d22d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340d2660 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:119:1, line:122:1> line:119:35 localtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x262340d24f0 <col:47, col:59> col:59 used _Tm 'struct tm *'
| |-ParmVarDecl 0x262340d2568 <col:64, col:79> col:79 used _Time 'const time_t *'
| `-CompoundStmt 0x262340d2810 <line:120:1, line:122:1>
|   `-ReturnStmt 0x262340d2800 <line:121:5, col:37>
|     `-CallExpr 0x262340d27a0 <col:12, col:37> 'errno_t':'int'
|       |-ImplicitCastExpr 0x262340d2788 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x262340d2728 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x262340d01c0 '_localtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x262340d27d0 <col:27> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x262340d2748 <col:27> 'struct tm *' lvalue ParmVar 0x262340d24f0 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x262340d27e8 <col:32> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x262340d2768 <col:32> 'const time_t *' lvalue ParmVar 0x262340d2568 '_Time' 'const time_t *'
|-FunctionDecl 0x262340d2990 <line:123:1, line:126:1> line:123:34 mktime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x262340d2850 <col:41, col:53> col:53 used _Tm 'struct tm *'
| `-CompoundStmt 0x262340d2b50 <line:124:1, line:126:1>
|   `-ReturnStmt 0x262340d2b40 <line:125:5, col:25>
|     `-CallExpr 0x262340d2b00 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x262340d2ae8 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x262340d2a50 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x262340d0420 '_mktime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x262340d2b28 <col:22> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x262340d2a70 <col:22> 'struct tm *' lvalue ParmVar 0x262340d2850 '_Tm' 'struct tm *'
|-FunctionDecl 0x262340d2c68 <line:127:1, line:130:1> line:127:34 _mkgmtime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x262340d2b90 <col:44, col:56> col:56 used _Tm 'struct tm *'
| `-CompoundStmt 0x262340d2dd0 <line:128:1, line:130:1>
|   `-ReturnStmt 0x262340d2dc0 <line:129:5, col:27>
|     `-CallExpr 0x262340d2d80 <col:12, col:27> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x262340d2d68 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x262340d2d28 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x262340d05e0 '_mkgmtime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x262340d2da8 <col:24> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x262340d2d48 <col:24> 'struct tm *' lvalue ParmVar 0x262340d2b90 '_Tm' 'struct tm *'
|-FunctionDecl 0x262340d2f70 <line:131:1, line:134:1> line:131:34 time 'time_t (time_t *) __attribute__((cdecl))':'time_t (time_t *)' static inline
| |-ParmVarDecl 0x262340d2e28 <col:39, col:48> col:48 used _Time 'time_t *'
| `-CompoundStmt 0x262340d3140 <line:132:1, line:134:1>
|   `-ReturnStmt 0x262340d3130 <line:133:5, col:25>
|     `-CallExpr 0x262340d30f0 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x262340d30d8 <col:12> '__time64_t (*)(__time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x262340d3030 <col:12> '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)' Function 0x262340d0850 '_time64' '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
|       `-ImplicitCastExpr 0x262340d3118 <col:20> 'time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x262340d3050 <col:20> 'time_t *' lvalue ParmVar 0x262340d2e28 '_Time' 'time_t *'
|-VarDecl 0x262340d3230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:291:67> col:67 daylight 'int' extern
| `-DeprecatedAttr 0x262340d3298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x262340d34a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:292:68> col:68 timezone 'long' extern
| `-DeprecatedAttr 0x262340d3508 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x262340d37a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:293:76> col:68 tzname 'char *[2]' extern
| `-DeprecatedAttr 0x262340d3808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x262340d3aa0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:297:63> col:53 tzset 'void (void) __attribute__((cdecl))':'void (void)'
| `-DeprecatedAttr 0x262340d3b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tzset. See online help for details." ""
|-FunctionDecl 0x262340d3e10 <.//openssl//file_jk/after\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x262340d3c78 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x262340d3cf8 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x262340d60b0 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x262340d3ee8 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x262340d3f68 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x262340d6160 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x262340d6238 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x262340d62a8 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x262340d6318 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x262340d6388 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x262340d63f8 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x262340d6468 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x262340d64d8 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x262340d6548 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x262340d65e8 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x262340d6788 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x262340d67f8 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x262340d6850 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x262340d6968 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x262340d6910 'struct mime_param_st' sugar
|   `-RecordType 0x262340d68f0 'struct mime_param_st'
|     `-Record 0x262340d6850 'mime_param_st'
|-FunctionDecl 0x262340d6b10 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x262340d6a10 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x262340d6bd0 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x262340d6ce8 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x262340d6c90 'struct mime_header_st' sugar
|   `-RecordType 0x262340d6c70 'struct mime_header_st'
|     `-Record 0x262340d6bd0 'mime_header_st'
|-FunctionDecl 0x262340d6e90 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x262340d6d90 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x262340d6fe0 <line:46:1, col:32> col:20 used _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x262340da248 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x262340da0f0 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x262340da170 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x262340da470 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x262340da318 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x262340da398 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x262340da730 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x262340da540 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x262340da5c0 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x262340da640 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x262340da968 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x262340da808 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x262340da888 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x262340dac20 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x262340daa38 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x262340daab8 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x262340dab38 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x262340daea0 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x262340dacf8 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x262340dad78 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x262340dadf8 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x262340db100 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x262340daf78 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x262340daff8 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x262340db2e8 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x262340db1d0 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x262340db250 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x262340db6a0 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x262340db3b0 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x262340db498 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x262340db520 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x262340db5a0 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x262340dba00 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x262340db780 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x262340db800 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x262340db880 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x262340db900 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x262340dbcc8 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x262340dbae0 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x262340dbb60 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x262340dbbe0 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x262340dbf40 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x262340dbda0 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x262340dbe20 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x262340dbea0 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x262340d40c0 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x262340dc018 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x262340dc098 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x262340d43b0 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x262340d4190 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x262340d4248 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x262340d42c8 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x262340d45e0 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x262340d4480 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x262340d4508 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x262340d4860 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x262340d46b0 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x262340d4738 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x262340d47b8 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x262340d4a58 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x262340d4930 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x262340d49b8 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x262340d4cd8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x262340d4b28 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x262340d4bb0 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x262340d4c30 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x262340dd120 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x262340d4da8 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x262340d4e28 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x262340d4eb0 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x262340d4f30 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x262340dd3e0 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x262340dd1f8 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x262340dd278 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x262340dd2f8 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x262340dd5e0 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:20:1, line:135:1> line:20:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x262340dd4c0 <col:32, col:43> col:43 used tm 'struct tm *'
| |-ParmVarDecl 0x262340dd540 <col:47, col:75> col:75 invalid d 'const int *'
| `-CompoundStmt 0x262340e1768 <line:21:1, line:135:1>
|   |-DeclStmt 0x262340dda80 <line:22:5, col:60>
|   | `-VarDecl 0x262340dd790 <col:5, col:59> col:22 used min 'const int [9]' static cinit
|   |   `-InitListExpr 0x262340dd9f8 <col:31, col:59> 'const int [9]'
|   |     |-IntegerLiteral 0x262340dd7f8 <col:33> 'int' 0
|   |     |-IntegerLiteral 0x262340dd820 <col:36> 'int' 0
|   |     |-IntegerLiteral 0x262340dd848 <col:39> 'int' 1
|   |     |-IntegerLiteral 0x262340dd870 <col:42> 'int' 1
|   |     |-IntegerLiteral 0x262340dd898 <col:45> 'int' 0
|   |     |-IntegerLiteral 0x262340dd8c0 <col:48> 'int' 0
|   |     |-IntegerLiteral 0x262340dd8e8 <col:51> 'int' 0
|   |     |-IntegerLiteral 0x262340dd910 <col:54> 'int' 0
|   |     `-IntegerLiteral 0x262340dd938 <col:57> 'int' 0
|   |-DeclStmt 0x262340dddf0 <line:23:5, col:69>
|   | `-VarDecl 0x262340ddb00 <col:5, col:68> col:22 used max 'const int [9]' static cinit
|   |   `-InitListExpr 0x262340ddd68 <col:31, col:68> 'const int [9]'
|   |     |-IntegerLiteral 0x262340ddb68 <col:33> 'int' 99
|   |     |-IntegerLiteral 0x262340ddb90 <col:37> 'int' 99
|   |     |-IntegerLiteral 0x262340ddbb8 <col:41> 'int' 12
|   |     |-IntegerLiteral 0x262340ddbe0 <col:45> 'int' 31
|   |     |-IntegerLiteral 0x262340ddc08 <col:49> 'int' 23
|   |     |-IntegerLiteral 0x262340ddc30 <col:53> 'int' 59
|   |     |-IntegerLiteral 0x262340ddc58 <col:57> 'int' 59
|   |     |-IntegerLiteral 0x262340ddc80 <col:61> 'int' 12
|   |     `-IntegerLiteral 0x262340ddca8 <col:65> 'int' 59
|   |-DeclStmt 0x262340dde88 <line:24:5, col:12>
|   | `-VarDecl 0x262340dde20 <col:5, col:11> col:11 used a 'char *'
|   |-DeclStmt 0x262340de0c8 <line:25:5, col:19>
|   | |-VarDecl 0x262340ddeb8 <col:5, col:9> col:9 used n 'int'
|   | |-VarDecl 0x262340ddf38 <col:5, col:12> col:12 used i 'int'
|   | |-VarDecl 0x262340ddfb8 <col:5, col:15> col:15 used l 'int'
|   | `-VarDecl 0x262340de038 <col:5, col:18> col:18 used o 'int'
|   |-IfStmt 0x262340df188 <line:27:5, line:28:18>
|   | |-OpaqueValueExpr 0x262340df170 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x262340df160 <col:9, col:18>
|   |   `-ParenExpr 0x262340df140 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x262340de0e0 <col:17> 'int' 0
|   |-BinaryOperator 0x262340df270 <line:31:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x262340df210 <col:5> 'int' lvalue Var 0x262340de038 'o' 'int'
|   | `-IntegerLiteral 0x262340df248 <col:9> 'int' 0
|   |-IfStmt 0x262340df378 <line:37:5, line:38:14>
|   | |-BinaryOperator 0x262340df2f0 <line:37:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x262340df2d8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x262340df290 <col:9> 'int' lvalue Var 0x262340ddfb8 'l' 'int'
|   | | `-IntegerLiteral 0x262340df2b0 <col:13> 'int' 13
|   | `-GotoStmt 0x262340df360 <line:38:9, col:14> 'err' 0x262340df310
|   |-ForStmt 0x262340e52a8 <line:39:5, line:85:5>
|   | |-BinaryOperator 0x262340df3f0 <line:39:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x262340df390 <col:10> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   | | `-IntegerLiteral 0x262340df3c8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x262340df470 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x262340df458 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x262340df410 <col:17> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   | | `-IntegerLiteral 0x262340df430 <col:21> 'int' 7
|   | |-UnaryOperator 0x262340df4b0 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x262340df490 <col:24> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   | `-CompoundStmt 0x262340e5250 <col:29, line:85:5>
|   |   |-IfStmt 0x262340dfab0 <line:40:9, line:45:9>
|   |   | |-BinaryOperator 0x262340df910 <line:40:13, col:73> 'int' '&&'
|   |   | | |-ParenExpr 0x262340df548 <col:13, col:20> 'int'
|   |   | | | `-BinaryOperator 0x262340df528 <col:14, col:19> 'int' '=='
|   |   | | |   |-ImplicitCastExpr 0x262340df510 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x262340df4c8 <col:14> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   | | |   `-IntegerLiteral 0x262340df4e8 <col:19> 'int' 6
|   |   | | `-ParenExpr 0x262340df8f0 <col:25, col:73> 'int'
|   |   | |   `-BinaryOperator 0x262340df8d0 <col:26, col:72> 'int' '||'
|   |   | |     |-BinaryOperator 0x262340df798 <col:26, col:55> 'int' '||'
|   |   | |     | |-ParenExpr 0x262340df660 <col:26, col:38> 'int'
|   |   | |     | | `-BinaryOperator 0x262340df640 <col:27, col:35> 'int' '=='
|   |   | |     | |   |-ImplicitCastExpr 0x262340df628 <col:27, col:30> 'int' <IntegralCast>
|   |   | |     | |   | `-ImplicitCastExpr 0x262340df610 <col:27, col:30> 'char' <LValueToRValue>
|   |   | |     | |   |   `-ArraySubscriptExpr 0x262340df5d8 <col:27, col:30> 'char' lvalue
|   |   | |     | |   |     |-ImplicitCastExpr 0x262340df5a8 <col:27> 'char *' <LValueToRValue>
|   |   | |     | |   |     | `-DeclRefExpr 0x262340df568 <col:27> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |     | |   |     `-ImplicitCastExpr 0x262340df5c0 <col:29> 'int' <LValueToRValue>
|   |   | |     | |   |       `-DeclRefExpr 0x262340df588 <col:29> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |     | |   `-CharacterLiteral 0x262340df5f8 <col:35> 'int' 90
|   |   | |     | `-ParenExpr 0x262340df778 <col:43, col:55> 'int'
|   |   | |     |   `-BinaryOperator 0x262340df758 <col:44, col:52> 'int' '=='
|   |   | |     |     |-ImplicitCastExpr 0x262340df740 <col:44, col:47> 'int' <IntegralCast>
|   |   | |     |     | `-ImplicitCastExpr 0x262340df728 <col:44, col:47> 'char' <LValueToRValue>
|   |   | |     |     |   `-ArraySubscriptExpr 0x262340df6f0 <col:44, col:47> 'char' lvalue
|   |   | |     |     |     |-ImplicitCastExpr 0x262340df6c0 <col:44> 'char *' <LValueToRValue>
|   |   | |     |     |     | `-DeclRefExpr 0x262340df680 <col:44> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |     |     |     `-ImplicitCastExpr 0x262340df6d8 <col:46> 'int' <LValueToRValue>
|   |   | |     |     |       `-DeclRefExpr 0x262340df6a0 <col:46> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |     |     `-CharacterLiteral 0x262340df710 <col:52> 'int' 43
|   |   | |     `-ParenExpr 0x262340df8b0 <col:60, col:72> 'int'
|   |   | |       `-BinaryOperator 0x262340df890 <col:61, col:69> 'int' '=='
|   |   | |         |-ImplicitCastExpr 0x262340df878 <col:61, col:64> 'int' <IntegralCast>
|   |   | |         | `-ImplicitCastExpr 0x262340df860 <col:61, col:64> 'char' <LValueToRValue>
|   |   | |         |   `-ArraySubscriptExpr 0x262340df828 <col:61, col:64> 'char' lvalue
|   |   | |         |     |-ImplicitCastExpr 0x262340df7f8 <col:61> 'char *' <LValueToRValue>
|   |   | |         |     | `-DeclRefExpr 0x262340df7b8 <col:61> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |         |     `-ImplicitCastExpr 0x262340df810 <col:63> 'int' <LValueToRValue>
|   |   | |         |       `-DeclRefExpr 0x262340df7d8 <col:63> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |         `-CharacterLiteral 0x262340df848 <col:69> 'int' 45
|   |   | `-CompoundStmt 0x262340dfa88 <col:76, line:45:9>
|   |   |   |-UnaryOperator 0x262340df950 <line:41:13, col:14> 'int' postfix '++'
|   |   |   | `-DeclRefExpr 0x262340df930 <col:13> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   |   |-IfStmt 0x262340dfa68 <line:42:13, line:43:30>
|   |   |   | |-ImplicitCastExpr 0x262340df9a0 <line:42:17> 'struct tm *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x262340df968 <col:17> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |   |   | `-BinaryOperator 0x262340dfa48 <line:43:17, col:30> 'int' '='
|   |   |   |   |-MemberExpr 0x262340df9f0 <col:17, col:21> 'int' lvalue ->tm_sec 0x262340bc8d8
|   |   |   |   | `-ImplicitCastExpr 0x262340df9d8 <col:17> 'struct tm *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x262340df9b8 <col:17> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |   |   |   `-IntegerLiteral 0x262340dfa20 <col:30> 'int' 0
|   |   |   `-BreakStmt 0x262340dfa80 <line:44:13>
|   |   |-IfStmt 0x262340dfd30 <line:46:9, line:47:18>
|   |   | |-BinaryOperator 0x262340dfcf8 <line:46:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x262340dfbc0 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x262340dfba0 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x262340dfb88 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x262340dfb70 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x262340dfb38 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x262340dfb08 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x262340dfac8 <col:14> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x262340dfb20 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x262340dfae8 <col:16> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x262340dfb58 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x262340dfcd8 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x262340dfcb8 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x262340dfca0 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x262340dfc88 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x262340dfc50 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x262340dfc20 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x262340dfbe0 <col:30> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x262340dfc38 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x262340dfc00 <col:32> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |     `-CharacterLiteral 0x262340dfc70 <col:37> 'int' 57
|   |   | `-GotoStmt 0x262340dfd18 <line:47:13, col:18> 'err' 0x262340df310
|   |   |-BinaryOperator 0x262340dfe78 <line:48:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x262340dfd48 <col:9> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   | `-BinaryOperator 0x262340dfe58 <col:13, col:20> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x262340dfe40 <col:13, col:16> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x262340dfe28 <col:13, col:16> 'char' <LValueToRValue>
|   |   |   |   `-ArraySubscriptExpr 0x262340dfdf0 <col:13, col:16> 'char' lvalue
|   |   |   |     |-ImplicitCastExpr 0x262340dfdc0 <col:13> 'char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x262340dfd80 <col:13> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   |   |     `-ImplicitCastExpr 0x262340dfdd8 <col:15> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x262340dfda0 <col:15> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   |   `-CharacterLiteral 0x262340dfe10 <col:20> 'int' 48
|   |   |-IfStmt 0x262340dff40 <line:49:9, line:50:18>
|   |   | |-BinaryOperator 0x262340dff08 <line:49:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x262340dfeb8 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x262340dfe98 <col:15> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x262340dfef0 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x262340dfed0 <col:19> 'int' lvalue Var 0x262340ddfb8 'l' 'int'
|   |   | `-GotoStmt 0x262340dff28 <line:50:13, col:18> 'err' 0x262340df310
|   |   |-IfStmt 0x262340dc1a0 <line:52:9, line:53:18>
|   |   | |-BinaryOperator 0x262340dc168 <line:52:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x262340e0050 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x262340e0030 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x262340e0018 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x262340e0000 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x262340dffc8 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x262340dff98 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x262340dff58 <col:14> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x262340dffb0 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x262340dff78 <col:16> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x262340dffe8 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x262340dc148 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x262340dc128 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x262340dc110 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x262340e0118 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x262340e00e0 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x262340e00b0 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x262340e0070 <col:30> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x262340e00c8 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x262340e0090 <col:32> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |     `-CharacterLiteral 0x262340e0100 <col:37> 'int' 57
|   |   | `-GotoStmt 0x262340dc188 <line:53:13, col:18> 'err' 0x262340df310
|   |   |-BinaryOperator 0x262340dc390 <line:54:9, col:31> 'int' '='
|   |   | |-DeclRefExpr 0x262340dc1b8 <col:9> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   | `-BinaryOperator 0x262340dc370 <col:13, col:31> 'int' '-'
|   |   |   |-BinaryOperator 0x262340dc338 <col:13, col:27> 'int' '+'
|   |   |   | |-ParenExpr 0x262340dc258 <col:13, col:20> 'int'
|   |   |   | | `-BinaryOperator 0x262340dc238 <col:14, col:18> 'int' '*'
|   |   |   | |   |-ImplicitCastExpr 0x262340dc220 <col:14> 'int' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x262340dc1d8 <col:14> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   |   | |   `-IntegerLiteral 0x262340dc1f8 <col:18> 'int' 10
|   |   |   | `-ImplicitCastExpr 0x262340dc320 <col:24, col:27> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x262340dc308 <col:24, col:27> 'char' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x262340dc2e8 <col:24, col:27> 'char' lvalue
|   |   |   |       |-ImplicitCastExpr 0x262340dc2b8 <col:24> 'char *' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x262340dc278 <col:24> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   |   |       `-ImplicitCastExpr 0x262340dc2d0 <col:26> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x262340dc298 <col:26> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   |   `-CharacterLiteral 0x262340dc358 <col:31> 'int' 48
|   |   |-IfStmt 0x262340dc458 <line:55:9, line:56:18>
|   |   | |-BinaryOperator 0x262340dc420 <line:55:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x262340dc3d0 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x262340dc3b0 <col:15> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x262340dc408 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x262340dc3e8 <col:19> 'int' lvalue Var 0x262340ddfb8 'l' 'int'
|   |   | `-GotoStmt 0x262340dc440 <line:56:13, col:18> 'err' 0x262340df310
|   |   |-IfStmt 0x262340dc718 <line:58:9, line:59:18>
|   |   | |-BinaryOperator 0x262340dc6e0 <line:58:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x262340dc588 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x262340dc568 <col:14, col:23> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x262340dc538 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x262340dc470 <col:14> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   | | |   `-ImplicitCastExpr 0x262340dc550 <col:18, col:23> 'int' <LValueToRValue>
|   |   | | |     `-ArraySubscriptExpr 0x262340dc518 <col:18, col:23> 'const int' lvalue
|   |   | | |       |-ImplicitCastExpr 0x262340dc4e8 <col:18> 'const int *' <ArrayToPointerDecay>
|   |   | | |       | `-DeclRefExpr 0x262340dc490 <col:18> 'const int [9]' lvalue Var 0x262340dd790 'min' 'const int [9]'
|   |   | | |       `-ImplicitCastExpr 0x262340dc500 <col:22> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x262340dc4c8 <col:22> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   | | `-ParenExpr 0x262340dc6c0 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x262340dc6a0 <col:30, col:39> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x262340dc670 <col:30> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x262340dc5a8 <col:30> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   | |     `-ImplicitCastExpr 0x262340dc688 <col:34, col:39> 'int' <LValueToRValue>
|   |   | |       `-ArraySubscriptExpr 0x262340dc650 <col:34, col:39> 'const int' lvalue
|   |   | |         |-ImplicitCastExpr 0x262340dc620 <col:34> 'const int *' <ArrayToPointerDecay>
|   |   | |         | `-DeclRefExpr 0x262340dc5c8 <col:34> 'const int [9]' lvalue Var 0x262340ddb00 'max' 'const int [9]'
|   |   | |         `-ImplicitCastExpr 0x262340dc638 <col:38> 'int' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x262340dc600 <col:38> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   | `-GotoStmt 0x262340dc700 <line:59:13, col:18> 'err' 0x262340df310
|   |   `-IfStmt 0x262340e5238 <line:60:9, line:84:9>
|   |     |-ImplicitCastExpr 0x262340dc750 <line:60:13> 'struct tm *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x262340dc730 <col:13> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |     `-CompoundStmt 0x262340e5220 <col:17, line:84:9>
|   |       `-SwitchStmt 0x262340dc7a0 <line:61:13, line:83:13>
|   |         |-ImplicitCastExpr 0x262340dc788 <line:61:21> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x262340dc768 <col:21> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |         `-CompoundStmt 0x262340e51a0 <col:24, line:83:13>
|   |           |-CaseStmt 0x262340dc800 <line:62:13, line:63:41>
|   |           | |-ConstantExpr 0x262340dc7e8 <line:62:18> 'int'
|   |           | | `-IntegerLiteral 0x262340dc7c0 <col:18> 'int' 0
|   |           | `-BinaryOperator 0x262340dc958 <line:63:17, col:41> 'int' '='
|   |           |   |-MemberExpr 0x262340dc860 <col:17, col:21> 'int' lvalue ->tm_year 0x262340bcb08
|   |           |   | `-ImplicitCastExpr 0x262340dc848 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x262340dc828 <col:17> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |           |   `-BinaryOperator 0x262340dc938 <col:31, col:41> 'int' '-'
|   |           |     |-BinaryOperator 0x262340dc8f0 <col:31, col:35> 'int' '*'
|   |           |     | |-ImplicitCastExpr 0x262340dc8d8 <col:31> 'int' <LValueToRValue>
|   |           |     | | `-DeclRefExpr 0x262340dc890 <col:31> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |           |     | `-IntegerLiteral 0x262340dc8b0 <col:35> 'int' 100
|   |           |     `-IntegerLiteral 0x262340dc910 <col:41> 'int' 1900
|   |           |-BreakStmt 0x262340dc978 <line:64:17>
|   |           |-CaseStmt 0x262340dc9c0 <line:65:13, line:66:32>
|   |           | |-ConstantExpr 0x262340dc9a8 <line:65:18> 'int'
|   |           | | `-IntegerLiteral 0x262340dc980 <col:18> 'int' 1
|   |           | `-CompoundAssignOperator 0x262340dca88 <line:66:17, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           |   |-MemberExpr 0x262340dca20 <col:17, col:21> 'int' lvalue ->tm_year 0x262340bcb08
|   |           |   | `-ImplicitCastExpr 0x262340dca08 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x262340dc9e8 <col:17> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x262340dca70 <col:32> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x262340dca50 <col:32> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |           |-BreakStmt 0x262340dcab8 <line:67:17>
|   |           |-CaseStmt 0x262340dcb00 <line:68:13, line:69:34>
|   |           | |-ConstantExpr 0x262340dcae8 <line:68:18> 'int'
|   |           | | `-IntegerLiteral 0x262340dcac0 <col:18> 'int' 2
|   |           | `-BinaryOperator 0x262340dcc10 <line:69:17, col:34> 'int' '='
|   |           |   |-MemberExpr 0x262340dcb60 <col:17, col:21> 'int' lvalue ->tm_mon 0x262340bca98
|   |           |   | `-ImplicitCastExpr 0x262340dcb48 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x262340dcb28 <col:17> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |           |   `-BinaryOperator 0x262340dcbf0 <col:30, col:34> 'int' '-'
|   |           |     |-ImplicitCastExpr 0x262340dcbd8 <col:30> 'int' <LValueToRValue>
|   |           |     | `-DeclRefExpr 0x262340dcb90 <col:30> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |           |     `-IntegerLiteral 0x262340dcbb0 <col:34> 'int' 1
|   |           |-BreakStmt 0x262340dcc30 <line:70:17>
|   |           |-CaseStmt 0x262340dcc78 <line:71:13, line:72:31>
|   |           | |-ConstantExpr 0x262340dcc60 <line:71:18> 'int'
|   |           | | `-IntegerLiteral 0x262340dcc38 <col:18> 'int' 3
|   |           | `-BinaryOperator 0x262340dcd40 <line:72:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x262340dccd8 <col:17, col:21> 'int' lvalue ->tm_mday 0x262340bca28
|   |           |   | `-ImplicitCastExpr 0x262340dccc0 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x262340dcca0 <col:17> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x262340dcd28 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x262340dcd08 <col:31> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |           |-BreakStmt 0x262340dcd60 <line:73:17>
|   |           |-CaseStmt 0x262340dcda8 <line:74:13, line:75:31>
|   |           | |-ConstantExpr 0x262340dcd90 <line:74:18> 'int'
|   |           | | `-IntegerLiteral 0x262340dcd68 <col:18> 'int' 4
|   |           | `-BinaryOperator 0x262340dce70 <line:75:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x262340dce08 <col:17, col:21> 'int' lvalue ->tm_hour 0x262340bc9b8
|   |           |   | `-ImplicitCastExpr 0x262340dcdf0 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x262340dcdd0 <col:17> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x262340dce58 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x262340dce38 <col:31> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |           |-BreakStmt 0x262340dce90 <line:76:17>
|   |           |-CaseStmt 0x262340dced8 <line:77:13, line:78:30>
|   |           | |-ConstantExpr 0x262340dcec0 <line:77:18> 'int'
|   |           | | `-IntegerLiteral 0x262340dce98 <col:18> 'int' 5
|   |           | `-BinaryOperator 0x262340dcfa0 <line:78:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x262340dcf38 <col:17, col:21> 'int' lvalue ->tm_min 0x262340bc948
|   |           |   | `-ImplicitCastExpr 0x262340dcf20 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x262340dcf00 <col:17> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x262340dcf88 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x262340dcf68 <col:30> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |           |-BreakStmt 0x262340dcfc0 <line:79:17>
|   |           |-CaseStmt 0x262340dd008 <line:80:13, line:81:30>
|   |           | |-ConstantExpr 0x262340dcff0 <line:80:18> 'int'
|   |           | | `-IntegerLiteral 0x262340dcfc8 <col:18> 'int' 6
|   |           | `-BinaryOperator 0x262340dd0d0 <line:81:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x262340dd068 <col:17, col:21> 'int' lvalue ->tm_sec 0x262340bc8d8
|   |           |   | `-ImplicitCastExpr 0x262340dd050 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x262340dd030 <col:17> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x262340dd0b8 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x262340dd098 <col:30> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |           `-BreakStmt 0x262340dd0f0 <line:82:17>
|   |-IfStmt 0x262340e5970 <line:90:5, line:99:5>
|   | |-BinaryOperator 0x262340e53b8 <line:90:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x262340e53a0 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x262340e5388 <col:9, col:12> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x262340e5350 <col:9, col:12> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x262340e5320 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x262340e52e0 <col:9> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   | | |     `-ImplicitCastExpr 0x262340e5338 <col:11> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x262340e5300 <col:11> 'int' lvalue Var 0x262340de038 'o' 'int'
|   | | `-CharacterLiteral 0x262340e5370 <col:17> 'int' 46
|   | `-CompoundStmt 0x262340e5940 <col:22, line:99:5>
|   |   |-IfStmt 0x262340e5480 <line:91:9, line:92:18>
|   |   | |-BinaryOperator 0x262340e5448 <line:91:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x262340e53f8 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x262340e53d8 <col:15> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x262340e5430 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x262340e5410 <col:19> 'int' lvalue Var 0x262340ddfb8 'l' 'int'
|   |   | `-GotoStmt 0x262340e5468 <line:92:13, col:18> 'err' 0x262340df310
|   |   |-BinaryOperator 0x262340e54f0 <line:93:9, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x262340e5498 <col:9> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   | `-ImplicitCastExpr 0x262340e54d8 <col:13> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x262340e54b8 <col:13> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   |-WhileStmt 0x262340e5868 <line:94:9, line:95:14>
|   |   | |-BinaryOperator 0x262340e5810 <line:94:16, col:57> 'int' '&&'
|   |   | | |-BinaryOperator 0x262340e5740 <col:16, col:45> 'int' '&&'
|   |   | | | |-ParenExpr 0x262340e5608 <col:16, col:28> 'int'
|   |   | | | | `-BinaryOperator 0x262340e55e8 <col:17, col:25> 'int' '>='
|   |   | | | |   |-ImplicitCastExpr 0x262340e55d0 <col:17, col:20> 'int' <IntegralCast>
|   |   | | | |   | `-ImplicitCastExpr 0x262340e55b8 <col:17, col:20> 'char' <LValueToRValue>
|   |   | | | |   |   `-ArraySubscriptExpr 0x262340e5580 <col:17, col:20> 'char' lvalue
|   |   | | | |   |     |-ImplicitCastExpr 0x262340e5550 <col:17> 'char *' <LValueToRValue>
|   |   | | | |   |     | `-DeclRefExpr 0x262340e5510 <col:17> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | | | |   |     `-ImplicitCastExpr 0x262340e5568 <col:19> 'int' <LValueToRValue>
|   |   | | | |   |       `-DeclRefExpr 0x262340e5530 <col:19> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | | | |   `-CharacterLiteral 0x262340e55a0 <col:25> 'int' 48
|   |   | | | `-ParenExpr 0x262340e5720 <col:33, col:45> 'int'
|   |   | | |   `-BinaryOperator 0x262340e5700 <col:34, col:42> 'int' '<='
|   |   | | |     |-ImplicitCastExpr 0x262340e56e8 <col:34, col:37> 'int' <IntegralCast>
|   |   | | |     | `-ImplicitCastExpr 0x262340e56d0 <col:34, col:37> 'char' <LValueToRValue>
|   |   | | |     |   `-ArraySubscriptExpr 0x262340e5698 <col:34, col:37> 'char' lvalue
|   |   | | |     |     |-ImplicitCastExpr 0x262340e5668 <col:34> 'char *' <LValueToRValue>
|   |   | | |     |     | `-DeclRefExpr 0x262340e5628 <col:34> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | | |     |     `-ImplicitCastExpr 0x262340e5680 <col:36> 'int' <LValueToRValue>
|   |   | | |     |       `-DeclRefExpr 0x262340e5648 <col:36> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | | |     `-CharacterLiteral 0x262340e56b8 <col:42> 'int' 57
|   |   | | `-ParenExpr 0x262340e57f0 <col:50, col:57> 'int'
|   |   | |   `-BinaryOperator 0x262340e57d0 <col:51, col:56> 'int' '<='
|   |   | |     |-ImplicitCastExpr 0x262340e57a0 <col:51> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x262340e5760 <col:51> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |     `-ImplicitCastExpr 0x262340e57b8 <col:56> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x262340e5780 <col:56> 'int' lvalue Var 0x262340ddfb8 'l' 'int'
|   |   | `-UnaryOperator 0x262340e5850 <line:95:13, col:14> 'int' postfix '++'
|   |   |   `-DeclRefExpr 0x262340e5830 <col:13> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   `-IfStmt 0x262340e5928 <line:97:9, line:98:18>
|   |     |-BinaryOperator 0x262340e58f0 <line:97:13, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x262340e58c0 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x262340e5880 <col:13> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |     | `-ImplicitCastExpr 0x262340e58d8 <col:18> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x262340e58a0 <col:18> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |     `-GotoStmt 0x262340e5910 <line:98:13, col:18> 'err' 0x262340df310
|   |-IfStmt 0x262340e1610 <line:101:5, line:131:5> has_else
|   | |-BinaryOperator 0x262340e5a60 <line:101:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x262340e5a48 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x262340e5a30 <col:9, col:12> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x262340e59f8 <col:9, col:12> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x262340e59c8 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x262340e5988 <col:9> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   | | |     `-ImplicitCastExpr 0x262340e59e0 <col:11> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x262340e59a8 <col:11> 'int' lvalue Var 0x262340de038 'o' 'int'
|   | | `-CharacterLiteral 0x262340e5a18 <col:17> 'int' 90
|   | |-UnaryOperator 0x262340e5aa0 <line:102:9, col:10> 'int' postfix '++'
|   | | `-DeclRefExpr 0x262340e5a80 <col:9> 'int' lvalue Var 0x262340de038 'o' 'int'
|   | `-IfStmt 0x262340e15e8 <line:103:10, line:131:5> has_else
|   |   |-BinaryOperator 0x262340e5ce8 <line:103:14, col:43> 'int' '||'
|   |   | |-ParenExpr 0x262340e5bb0 <col:14, col:26> 'int'
|   |   | | `-BinaryOperator 0x262340e5b90 <col:15, col:23> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x262340e5b78 <col:15, col:18> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x262340e5b60 <col:15, col:18> 'char' <LValueToRValue>
|   |   | |   |   `-ArraySubscriptExpr 0x262340e5b28 <col:15, col:18> 'char' lvalue
|   |   | |   |     |-ImplicitCastExpr 0x262340e5af8 <col:15> 'char *' <LValueToRValue>
|   |   | |   |     | `-DeclRefExpr 0x262340e5ab8 <col:15> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |   |     `-ImplicitCastExpr 0x262340e5b10 <col:17> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x262340e5ad8 <col:17> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |   `-CharacterLiteral 0x262340e5b48 <col:23> 'int' 43
|   |   | `-ParenExpr 0x262340e5cc8 <col:31, col:43> 'int'
|   |   |   `-BinaryOperator 0x262340e5ca8 <col:32, col:40> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x262340e5c90 <col:32, col:35> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x262340e5c78 <col:32, col:35> 'char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x262340e5c40 <col:32, col:35> 'char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x262340e5c10 <col:32> 'char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x262340e5bd0 <col:32> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   |     |     `-ImplicitCastExpr 0x262340e5c28 <col:34> 'int' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x262340e5bf0 <col:34> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   |     `-CharacterLiteral 0x262340e5c60 <col:40> 'int' 45
|   |   |-CompoundStmt 0x262340e14c0 <col:46, line:128:5>
|   |   | |-DeclStmt 0x262340e5fd8 <line:104:9, col:55>
|   |   | | |-VarDecl 0x262340e5d20 <col:9, col:42> col:13 used offsign 'int' cinit
|   |   | | | `-ConditionalOperator 0x262340e5ee8 <col:23, col:42> 'int'
|   |   | | |   |-BinaryOperator 0x262340e5e60 <col:23, col:31> 'int' '=='
|   |   | | |   | |-ImplicitCastExpr 0x262340e5e48 <col:23, col:26> 'int' <IntegralCast>
|   |   | | |   | | `-ImplicitCastExpr 0x262340e5e30 <col:23, col:26> 'char' <LValueToRValue>
|   |   | | |   | |   `-ArraySubscriptExpr 0x262340e5df8 <col:23, col:26> 'char' lvalue
|   |   | | |   | |     |-ImplicitCastExpr 0x262340e5dc8 <col:23> 'char *' <LValueToRValue>
|   |   | | |   | |     | `-DeclRefExpr 0x262340e5d88 <col:23> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | | |   | |     `-ImplicitCastExpr 0x262340e5de0 <col:25> 'int' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x262340e5da8 <col:25> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | | |   | `-CharacterLiteral 0x262340e5e18 <col:31> 'int' 45
|   |   | | |   |-IntegerLiteral 0x262340e5e80 <col:37> 'int' 1
|   |   | | |   `-UnaryOperator 0x262340e5ed0 <col:41, col:42> 'int' prefix '-'
|   |   | | |     `-IntegerLiteral 0x262340e5ea8 <col:42> 'int' 1
|   |   | | `-VarDecl 0x262340e5f30 <col:9, col:54> col:45 used offset 'int' cinit
|   |   | |   `-IntegerLiteral 0x262340e5f98 <col:54> 'int' 0
|   |   | |-UnaryOperator 0x262340e6010 <line:105:9, col:10> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x262340e5ff0 <col:9> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |-IfStmt 0x262340e6118 <line:106:9, line:107:18>
|   |   | | |-BinaryOperator 0x262340e60e0 <line:106:13, col:21> 'int' '>'
|   |   | | | |-BinaryOperator 0x262340e6088 <col:13, col:17> 'int' '+'
|   |   | | | | |-ImplicitCastExpr 0x262340e6070 <col:13> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x262340e6028 <col:13> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | | | | `-IntegerLiteral 0x262340e6048 <col:17> 'int' 4
|   |   | | | `-ImplicitCastExpr 0x262340e60c8 <col:21> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x262340e60a8 <col:21> 'int' lvalue Var 0x262340ddfb8 'l' 'int'
|   |   | | `-GotoStmt 0x262340e6100 <line:107:13, col:18> 'err' 0x262340df310
|   |   | |-ForStmt 0x262340e8148 <line:108:9, line:125:9>
|   |   | | |-BinaryOperator 0x262340e6178 <line:108:14, col:18> 'int' '='
|   |   | | | |-DeclRefExpr 0x262340e6130 <col:14> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   | | | `-IntegerLiteral 0x262340e6150 <col:18> 'int' 7
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator 0x262340e7220 <col:21, col:25> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x262340e7208 <col:21> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x262340e71c0 <col:21> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   | | | `-IntegerLiteral 0x262340e71e0 <col:25> 'int' 9
|   |   | | |-UnaryOperator 0x262340e7260 <col:28, col:29> 'int' postfix '++'
|   |   | | | `-DeclRefExpr 0x262340e7240 <col:28> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   | | `-CompoundStmt 0x262340e80f8 <col:33, line:125:9>
|   |   | |   |-IfStmt 0x262340e74e0 <line:109:13, line:110:22>
|   |   | |   | |-BinaryOperator 0x262340e74a8 <line:109:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x262340e7370 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x262340e7350 <col:18, col:25> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x262340e7338 <col:18, col:21> 'int' <IntegralCast>
|   |   | |   | | |   | `-ImplicitCastExpr 0x262340e7320 <col:18, col:21> 'char' <LValueToRValue>
|   |   | |   | | |   |   `-ArraySubscriptExpr 0x262340e72e8 <col:18, col:21> 'char' lvalue
|   |   | |   | | |   |     |-ImplicitCastExpr 0x262340e72b8 <col:18> 'char *' <LValueToRValue>
|   |   | |   | | |   |     | `-DeclRefExpr 0x262340e7278 <col:18> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |   | | |   |     `-ImplicitCastExpr 0x262340e72d0 <col:20> 'int' <LValueToRValue>
|   |   | |   | | |   |       `-DeclRefExpr 0x262340e7298 <col:20> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |   | | |   `-CharacterLiteral 0x262340e7308 <col:25> 'int' 48
|   |   | |   | | `-ParenExpr 0x262340e7488 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x262340e7468 <col:34, col:41> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x262340e7450 <col:34, col:37> 'int' <IntegralCast>
|   |   | |   | |     | `-ImplicitCastExpr 0x262340e7438 <col:34, col:37> 'char' <LValueToRValue>
|   |   | |   | |     |   `-ArraySubscriptExpr 0x262340e7400 <col:34, col:37> 'char' lvalue
|   |   | |   | |     |     |-ImplicitCastExpr 0x262340e73d0 <col:34> 'char *' <LValueToRValue>
|   |   | |   | |     |     | `-DeclRefExpr 0x262340e7390 <col:34> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |   | |     |     `-ImplicitCastExpr 0x262340e73e8 <col:36> 'int' <LValueToRValue>
|   |   | |   | |     |       `-DeclRefExpr 0x262340e73b0 <col:36> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |   | |     `-CharacterLiteral 0x262340e7420 <col:41> 'int' 57
|   |   | |   | `-GotoStmt 0x262340e74c8 <line:110:17, col:22> 'err' 0x262340df310
|   |   | |   |-BinaryOperator 0x262340e7610 <line:111:13, col:24> 'int' '='
|   |   | |   | |-DeclRefExpr 0x262340e74f8 <col:13> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   | |   | `-BinaryOperator 0x262340e75f0 <col:17, col:24> 'int' '-'
|   |   | |   |   |-ImplicitCastExpr 0x262340e75d8 <col:17, col:20> 'int' <IntegralCast>
|   |   | |   |   | `-ImplicitCastExpr 0x262340e75c0 <col:17, col:20> 'char' <LValueToRValue>
|   |   | |   |   |   `-ArraySubscriptExpr 0x262340e7588 <col:17, col:20> 'char' lvalue
|   |   | |   |   |     |-ImplicitCastExpr 0x262340e7558 <col:17> 'char *' <LValueToRValue>
|   |   | |   |   |     | `-DeclRefExpr 0x262340e7518 <col:17> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |   |   |     `-ImplicitCastExpr 0x262340e7570 <col:19> 'int' <LValueToRValue>
|   |   | |   |   |       `-DeclRefExpr 0x262340e7538 <col:19> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |   |   `-CharacterLiteral 0x262340e75a8 <col:24> 'int' 48
|   |   | |   |-UnaryOperator 0x262340e7650 <line:112:13, col:14> 'int' postfix '++'
|   |   | |   | `-DeclRefExpr 0x262340e7630 <col:13> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |   |-IfStmt 0x262340e78d0 <line:113:13, line:114:22>
|   |   | |   | |-BinaryOperator 0x262340e7898 <line:113:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x262340e7760 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x262340e7740 <col:18, col:25> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x262340e7728 <col:18, col:21> 'int' <IntegralCast>
|   |   | |   | | |   | `-ImplicitCastExpr 0x262340e7710 <col:18, col:21> 'char' <LValueToRValue>
|   |   | |   | | |   |   `-ArraySubscriptExpr 0x262340e76d8 <col:18, col:21> 'char' lvalue
|   |   | |   | | |   |     |-ImplicitCastExpr 0x262340e76a8 <col:18> 'char *' <LValueToRValue>
|   |   | |   | | |   |     | `-DeclRefExpr 0x262340e7668 <col:18> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |   | | |   |     `-ImplicitCastExpr 0x262340e76c0 <col:20> 'int' <LValueToRValue>
|   |   | |   | | |   |       `-DeclRefExpr 0x262340e7688 <col:20> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |   | | |   `-CharacterLiteral 0x262340e76f8 <col:25> 'int' 48
|   |   | |   | | `-ParenExpr 0x262340e7878 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x262340e7858 <col:34, col:41> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x262340e7840 <col:34, col:37> 'int' <IntegralCast>
|   |   | |   | |     | `-ImplicitCastExpr 0x262340e7828 <col:34, col:37> 'char' <LValueToRValue>
|   |   | |   | |     |   `-ArraySubscriptExpr 0x262340e77f0 <col:34, col:37> 'char' lvalue
|   |   | |   | |     |     |-ImplicitCastExpr 0x262340e77c0 <col:34> 'char *' <LValueToRValue>
|   |   | |   | |     |     | `-DeclRefExpr 0x262340e7780 <col:34> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |   | |     |     `-ImplicitCastExpr 0x262340e77d8 <col:36> 'int' <LValueToRValue>
|   |   | |   | |     |       `-DeclRefExpr 0x262340e77a0 <col:36> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |   | |     `-CharacterLiteral 0x262340e7810 <col:41> 'int' 57
|   |   | |   | `-GotoStmt 0x262340e78b8 <line:114:17, col:22> 'err' 0x262340df310
|   |   | |   |-BinaryOperator 0x262340e7ac0 <line:115:13, col:35> 'int' '='
|   |   | |   | |-DeclRefExpr 0x262340e78e8 <col:13> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   | |   | `-BinaryOperator 0x262340e7aa0 <col:17, col:35> 'int' '-'
|   |   | |   |   |-BinaryOperator 0x262340e7a68 <col:17, col:31> 'int' '+'
|   |   | |   |   | |-ParenExpr 0x262340e7988 <col:17, col:24> 'int'
|   |   | |   |   | | `-BinaryOperator 0x262340e7968 <col:18, col:22> 'int' '*'
|   |   | |   |   | |   |-ImplicitCastExpr 0x262340e7950 <col:18> 'int' <LValueToRValue>
|   |   | |   |   | |   | `-DeclRefExpr 0x262340e7908 <col:18> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   | |   |   | |   `-IntegerLiteral 0x262340e7928 <col:22> 'int' 10
|   |   | |   |   | `-ImplicitCastExpr 0x262340e7a50 <col:28, col:31> 'int' <IntegralCast>
|   |   | |   |   |   `-ImplicitCastExpr 0x262340e7a38 <col:28, col:31> 'char' <LValueToRValue>
|   |   | |   |   |     `-ArraySubscriptExpr 0x262340e7a18 <col:28, col:31> 'char' lvalue
|   |   | |   |   |       |-ImplicitCastExpr 0x262340e79e8 <col:28> 'char *' <LValueToRValue>
|   |   | |   |   |       | `-DeclRefExpr 0x262340e79a8 <col:28> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |   | |   |   |       `-ImplicitCastExpr 0x262340e7a00 <col:30> 'int' <LValueToRValue>
|   |   | |   |   |         `-DeclRefExpr 0x262340e79c8 <col:30> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | |   |   `-CharacterLiteral 0x262340e7a88 <col:35> 'int' 48
|   |   | |   |-IfStmt 0x262340e7d58 <line:116:13, line:117:22>
|   |   | |   | |-BinaryOperator 0x262340e7d20 <line:116:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x262340e7be0 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x262340e7bc0 <col:18, col:27> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x262340e7b90 <col:18> 'int' <LValueToRValue>
|   |   | |   | | |   | `-DeclRefExpr 0x262340e7ae0 <col:18> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   | |   | | |   `-ImplicitCastExpr 0x262340e7ba8 <col:22, col:27> 'int' <LValueToRValue>
|   |   | |   | | |     `-ArraySubscriptExpr 0x262340e7b70 <col:22, col:27> 'const int' lvalue
|   |   | |   | | |       |-ImplicitCastExpr 0x262340e7b40 <col:22> 'const int *' <ArrayToPointerDecay>
|   |   | |   | | |       | `-DeclRefExpr 0x262340e7b00 <col:22> 'const int [9]' lvalue Var 0x262340dd790 'min' 'const int [9]'
|   |   | |   | | |       `-ImplicitCastExpr 0x262340e7b58 <col:26> 'int' <LValueToRValue>
|   |   | |   | | |         `-DeclRefExpr 0x262340e7b20 <col:26> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   | |   | | `-ParenExpr 0x262340e7d00 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x262340e7ce0 <col:34, col:43> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x262340e7cb0 <col:34> 'int' <LValueToRValue>
|   |   | |   | |     | `-DeclRefExpr 0x262340e7c00 <col:34> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   | |   | |     `-ImplicitCastExpr 0x262340e7cc8 <col:38, col:43> 'int' <LValueToRValue>
|   |   | |   | |       `-ArraySubscriptExpr 0x262340e7c90 <col:38, col:43> 'const int' lvalue
|   |   | |   | |         |-ImplicitCastExpr 0x262340e7c60 <col:38> 'const int *' <ArrayToPointerDecay>
|   |   | |   | |         | `-DeclRefExpr 0x262340e7c20 <col:38> 'const int [9]' lvalue Var 0x262340ddb00 'max' 'const int [9]'
|   |   | |   | |         `-ImplicitCastExpr 0x262340e7c78 <col:42> 'int' <LValueToRValue>
|   |   | |   | |           `-DeclRefExpr 0x262340e7c40 <col:42> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   | |   | `-GotoStmt 0x262340e7d40 <line:117:17, col:22> 'err' 0x262340df310
|   |   | |   |-IfStmt 0x262340e80a8 <line:118:13, line:123:13>
|   |   | |   | |-ImplicitCastExpr 0x262340e7d90 <line:118:17> 'struct tm *' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x262340e7d70 <col:17> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |   | |   | `-CompoundStmt 0x262340e8090 <col:21, line:123:13>
|   |   | |   |   `-IfStmt 0x262340e8068 <line:119:17, line:122:35> has_else
|   |   | |   |     |-BinaryOperator 0x262340e7e08 <line:119:21, col:26> 'int' '=='
|   |   | |   |     | |-ImplicitCastExpr 0x262340e7df0 <col:21> 'int' <LValueToRValue>
|   |   | |   |     | | `-DeclRefExpr 0x262340e7da8 <col:21> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   | |   |     | `-IntegerLiteral 0x262340e7dc8 <col:26> 'int' 7
|   |   | |   |     |-BinaryOperator 0x262340e7ee0 <line:120:21, col:34> 'int' '='
|   |   | |   |     | |-DeclRefExpr 0x262340e7e28 <col:21> 'int' lvalue Var 0x262340e5f30 'offset' 'int'
|   |   | |   |     | `-BinaryOperator 0x262340e7ec0 <col:30, col:34> 'int' '*'
|   |   | |   |     |   |-ImplicitCastExpr 0x262340e7ea8 <col:30> 'int' <LValueToRValue>
|   |   | |   |     |   | `-DeclRefExpr 0x262340e7e60 <col:30> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   | |   |     |   `-IntegerLiteral 0x262340e7e80 <col:34> 'int' 3600
|   |   | |   |     `-IfStmt 0x262340e8050 <line:121:22, line:122:35>
|   |   | |   |       |-BinaryOperator 0x262340e7f60 <line:121:26, col:31> 'int' '=='
|   |   | |   |       | |-ImplicitCastExpr 0x262340e7f48 <col:26> 'int' <LValueToRValue>
|   |   | |   |       | | `-DeclRefExpr 0x262340e7f00 <col:26> 'int' lvalue Var 0x262340ddf38 'i' 'int'
|   |   | |   |       | `-IntegerLiteral 0x262340e7f20 <col:31> 'int' 8
|   |   | |   |       `-CompoundAssignOperator 0x262340e8020 <line:122:21, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   |         |-DeclRefExpr 0x262340e7f80 <col:21> 'int' lvalue Var 0x262340e5f30 'offset' 'int'
|   |   | |   |         `-BinaryOperator 0x262340e8000 <col:31, col:35> 'int' '*'
|   |   | |   |           |-ImplicitCastExpr 0x262340e7fe8 <col:31> 'int' <LValueToRValue>
|   |   | |   |           | `-DeclRefExpr 0x262340e7fa0 <col:31> 'int' lvalue Var 0x262340ddeb8 'n' 'int'
|   |   | |   |           `-IntegerLiteral 0x262340e7fc0 <col:35> 'int' 60
|   |   | |   `-UnaryOperator 0x262340e80e0 <line:124:13, col:14> 'int' postfix '++'
|   |   | |     `-DeclRefExpr 0x262340e80c0 <col:13> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |   | `-IfStmt 0x262340e14a8 <line:126:9, line:127:20>
|   |   |   |-BinaryOperator 0x262340e1450 <line:126:13, col:66> 'int' '&&'
|   |   |   | |-ImplicitCastExpr 0x262340e1438 <col:13> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x262340e8180 <col:13> 'int' lvalue Var 0x262340e5f30 'offset' 'int'
|   |   |   | `-UnaryOperator 0x262340e1420 <col:23, col:66> 'int' prefix '!' cannot overflow
|   |   |   |   `-CallExpr 0x262340e13d0 <col:24, col:66> 'int'
|   |   |   |     |-ImplicitCastExpr 0x262340e13b8 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x262340e1278 <col:24> 'int ()' Function 0x262340e11b0 'OPENSSL_gmtime_adj' 'int ()'
|   |   |   |     |-ImplicitCastExpr 0x262340e1408 <col:43> 'struct tm *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x262340e1298 <col:43> 'struct tm *' lvalue ParmVar 0x262340dd4c0 'tm' 'struct tm *'
|   |   |   |     |-IntegerLiteral 0x262340e12b8 <col:47> 'int' 0
|   |   |   |     `-BinaryOperator 0x262340e1368 <col:50, col:59> 'int' '*'
|   |   |   |       |-ImplicitCastExpr 0x262340e1338 <col:50> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x262340e12e0 <col:50> 'int' lvalue Var 0x262340e5f30 'offset' 'int'
|   |   |   |       `-ImplicitCastExpr 0x262340e1350 <col:59> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x262340e1300 <col:59> 'int' lvalue Var 0x262340e5d20 'offsign' 'int'
|   |   |   `-ReturnStmt 0x262340e1498 <line:127:13, col:20>
|   |   |     `-IntegerLiteral 0x262340e1470 <col:20> 'int' 0
|   |   `-IfStmt 0x262340e15d0 <line:128:12, line:131:5>
|   |     |-ImplicitCastExpr 0x262340e1588 <line:128:16, col:19> 'char' <LValueToRValue>
|   |     | `-ArraySubscriptExpr 0x262340e1568 <col:16, col:19> 'char' lvalue
|   |     |   |-ImplicitCastExpr 0x262340e1538 <col:16> 'char *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x262340e14f8 <col:16> 'char *' lvalue Var 0x262340dde20 'a' 'char *'
|   |     |   `-ImplicitCastExpr 0x262340e1550 <col:18> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x262340e1518 <col:18> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |     `-CompoundStmt 0x262340e15b8 <col:22, line:131:5>
|   |       `-GotoStmt 0x262340e15a0 <line:130:9, col:14> 'err' 0x262340df310
|   |-ReturnStmt 0x262340e16e8 <line:132:5, col:19>
|   | `-ParenExpr 0x262340e16c8 <col:12, col:19> 'int'
|   |   `-BinaryOperator 0x262340e16a8 <col:13, col:18> 'int' '=='
|   |     |-ImplicitCastExpr 0x262340e1678 <col:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x262340e1638 <col:13> 'int' lvalue Var 0x262340de038 'o' 'int'
|   |     `-ImplicitCastExpr 0x262340e1690 <col:18> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x262340e1658 <col:18> 'int' lvalue Var 0x262340ddfb8 'l' 'int'
|   `-LabelStmt 0x262340e1750 <line:133:2, line:134:14> 'err'
|     `-ReturnStmt 0x262340e1740 <col:5, col:14>
|       `-ParenExpr 0x262340e1720 <col:12, col:14> 'int'
|         `-IntegerLiteral 0x262340e16f8 <col:13> 'int' 0
|-FunctionDecl 0x262340e18c0 <line:137:1, line:140:1> line:137:5 invalid ASN1_GENERALIZEDTIME_check 'int (const int *)'
| |-ParmVarDecl 0x262340e17f0 <col:32, col:60> col:60 invalid d 'const int *'
| `-CompoundStmt 0x262340e1a08 <line:138:1, line:140:1>
|-FunctionDecl 0x262340e1b90 <line:142:1, line:158:1> line:142:5 invalid ASN1_GENERALIZEDTIME_set_string 'int (int *, const char *)'
| |-ParmVarDecl 0x262340e1a30 <col:37, col:59> col:59 invalid s 'int *'
| |-ParmVarDecl 0x262340e1ab0 <col:62, col:74> col:74 used str 'const char *'
| `-CompoundStmt 0x262340e42d0 <line:143:1, line:158:1>
|   `-IfStmt 0x262340e42a8 <line:149:5, line:157:18> has_else
|     |-OpaqueValueExpr 0x262340e4290 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x262340e4218 <line:149:41, line:156:5>
|     | |-IfStmt 0x262340e41a8 <line:150:9, line:154:9>
|     | | |-OpaqueValueExpr 0x262340e4190 <<invalid sloc>> '_Bool'
|     | | `-CompoundStmt 0x262340e2148 <line:150:24, line:154:9>
|     | |   `-IfStmt 0x262340e2130 <line:151:13, line:152:24>
|     | |     |-OpaqueValueExpr 0x262340e2118 <<invalid sloc>> '_Bool'
|     | |     `-ReturnStmt 0x262340e2108 <col:17, col:24>
|     | |       `-IntegerLiteral 0x262340e20e0 <col:24> 'int' 0
|     | `-ReturnStmt 0x262340e4208 <line:155:9, col:18>
|     |   `-ParenExpr 0x262340e41e8 <col:16, col:18> 'int'
|     |     `-IntegerLiteral 0x262340e41c0 <col:17> 'int' 1
|     `-ReturnStmt 0x262340e4280 <line:157:9, col:18>
|       `-ParenExpr 0x262340e4260 <col:16, col:18> 'int'
|         `-IntegerLiteral 0x262340e4238 <col:17> 'int' 0
|-FunctionDecl 0x262340e1c90 <line:147:16> col:16 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x262340e1d30 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x262340e4490 <line:160:1, line:164:1> line:160:23 invalid ASN1_GENERALIZEDTIME_set 'int *(int *, time_t)'
| |-ParmVarDecl 0x262340e4300 <col:48, col:70> col:70 invalid s 'int *'
| |-ParmVarDecl 0x262340e4378 <line:161:48, col:55> col:55 used t 'time_t':'long long'
| `-CompoundStmt 0x262340e46f0 <line:162:1, line:164:1>
|-FunctionDecl 0x262340e49e0 <line:166:1, line:216:1> line:166:23 invalid ASN1_GENERALIZEDTIME_adj 'int *(int *, time_t, int, long)'
| |-ParmVarDecl 0x262340e4718 <col:48, col:70> col:70 invalid s 'int *'
| |-ParmVarDecl 0x262340e4790 <line:167:48, col:55> col:55 used t 'time_t':'long long'
| |-ParmVarDecl 0x262340e4810 <col:58, col:62> col:62 used offset_day 'int'
| |-ParmVarDecl 0x262340e4890 <line:168:48, col:53> col:53 used offset_sec 'long'
| `-CompoundStmt 0x262340e3840 <line:169:1, line:216:1>
|   |-DeclStmt 0x262340e4b38 <line:170:5, col:12>
|   | `-VarDecl 0x262340e4ad0 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x262340e4be0 <line:171:5, col:18>
|   | `-VarDecl 0x262340e4b78 <col:5, col:16> col:16 used ts 'struct tm *'
|   |-DeclStmt 0x262340e4c80 <line:172:5, col:19>
|   | `-VarDecl 0x262340e4c18 <col:5, col:15> col:15 used data 'struct tm':'struct tm'
|   |-DeclStmt 0x262340e4d50 <line:173:5, col:20>
|   | `-VarDecl 0x262340e4ca8 <col:5, col:18> col:12 used len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x262340e4d38 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x262340e4d10 <col:18> 'int' 20
|   |-IfStmt 0x262340e5110 <line:180:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x262340e50f8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x262340e50e8 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:181:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x262340e50d0 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x262340e50b0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x262340e5088 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x262340e5048 <col:26> 'int' 0
|   |-BinaryOperator 0x262340e2358 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:183:5, col:34> 'struct tm *' '='
|   | |-DeclRefExpr 0x262340e5128 <col:5> 'struct tm *' lvalue Var 0x262340e4b78 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x262340e2340 <col:10, col:34> 'struct tm *' <IntegralToPointer>
|   |   `-CallExpr 0x262340e2310 <col:10, col:34> 'int'
|   |     |-ImplicitCastExpr 0x262340e22f8 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x262340e2238 <col:10> 'int ()' Function 0x262340e2170 'OPENSSL_gmtime' 'int ()'
|   |     |-UnaryOperator 0x262340e2290 <col:25, col:26> 'time_t *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x262340e2258 <col:26> 'time_t':'long long' lvalue ParmVar 0x262340e4790 't' 'time_t':'long long'
|   |     `-UnaryOperator 0x262340e22e0 <col:29, col:30> 'struct tm *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x262340e22a8 <col:30> 'struct tm':'struct tm' lvalue Var 0x262340e4c18 'data' 'struct tm':'struct tm'
|   |-IfStmt 0x262340e24d8 <line:184:5, line:185:14>
|   | |-BinaryOperator 0x262340e2450 <line:184:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x262340e2420 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:184:9> 'struct tm *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x262340e2378 <col:9> 'struct tm *' lvalue Var 0x262340e4b78 'ts' 'struct tm *'
|   | | `-ImplicitCastExpr 0x262340e2438 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct tm *' <BitCast>
|   | |   `-ParenExpr 0x262340e2400 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x262340e23d8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x262340e2398 <col:26> 'int' 0
|   | `-GotoStmt 0x262340e24c0 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:185:9, col:14> 'err' 0x262340e2470
|   |-IfStmt 0x262340e2728 <line:187:5, line:190:5>
|   | |-BinaryOperator 0x262340e2590 <line:187:9, col:23> 'int' '||'
|   | | |-ImplicitCastExpr 0x262340e2560 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x262340e24f0 <col:9> 'int' lvalue ParmVar 0x262340e4810 'offset_day' 'int'
|   | | `-ImplicitCastExpr 0x262340e2578 <col:23> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x262340e2528 <col:23> 'long' lvalue ParmVar 0x262340e4890 'offset_sec' 'long'
|   | `-CompoundStmt 0x262340e2710 <col:35, line:190:5>
|   |   `-IfStmt 0x262340e26f8 <line:188:9, line:189:18>
|   |     |-UnaryOperator 0x262340e26c8 <line:188:13, col:59> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x262340e2648 <col:14, col:59> 'int'
|   |     |   |-ImplicitCastExpr 0x262340e2630 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x262340e25b0 <col:14> 'int ()' Function 0x262340e11b0 'OPENSSL_gmtime_adj' 'int ()'
|   |     |   |-ImplicitCastExpr 0x262340e2680 <col:33> 'struct tm *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x262340e25d0 <col:33> 'struct tm *' lvalue Var 0x262340e4b78 'ts' 'struct tm *'
|   |     |   |-ImplicitCastExpr 0x262340e2698 <col:37> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x262340e25f0 <col:37> 'int' lvalue ParmVar 0x262340e4810 'offset_day' 'int'
|   |     |   `-ImplicitCastExpr 0x262340e26b0 <col:49> 'long' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x262340e2610 <col:49> 'long' lvalue ParmVar 0x262340e4890 'offset_sec' 'long'
|   |     `-GotoStmt 0x262340e26e0 <line:189:13, col:18> 'err' 0x262340e2470
|   |-IfStmt 0x262340e2eb8 <line:193:5, line:201:5>
|   | |-OpaqueValueExpr 0x262340e2ea0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x262340e2e80 <line:193:54, line:201:5>
|   |   |-BinaryOperator 0x262340e2a88 <line:194:9, col:31> 'char *' '='
|   |   | |-DeclRefExpr 0x262340e28c8 <col:9> 'char *' lvalue Var 0x262340e4ad0 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x262340e2a70 <col:13, col:31> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x262340e2a30 <col:13, col:31> 'int'
|   |   |     |-ImplicitCastExpr 0x262340e2a18 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x262340e29d8 <col:13> 'int ()' Function 0x262340e2910 'OPENSSL_malloc' 'int ()'
|   |   |     `-ImplicitCastExpr 0x262340e2a58 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x262340e29f8 <col:28> 'size_t':'unsigned long long' lvalue Var 0x262340e4ca8 'len' 'size_t':'unsigned long long'
|   |   `-IfStmt 0x262340e2ce0 <line:195:9, line:198:9>
|   |     |-BinaryOperator 0x262340e2b80 <line:195:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x262340e2b50 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:195:13> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x262340e2aa8 <col:13> 'char *' lvalue Var 0x262340e4ad0 'p' 'char *'
|   |     | `-ImplicitCastExpr 0x262340e2b68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |     |   `-ParenExpr 0x262340e2b30 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x262340e2b08 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x262340e2ac8 <col:26> 'int' 0
|   |     `-CompoundStmt 0x262340e2cc8 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:195:24, line:198:9>
|   |       `-GotoStmt 0x262340e2cb0 <line:197:13, col:18> 'err' 0x262340e2470
|   |-CallExpr 0x262340e3400 <line:203:5, line:205:28> 'int'
|   | |-ImplicitCastExpr 0x262340e33e8 <line:203:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x262340e2fc0 <col:5> 'int ()' Function 0x262340e2ef8 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x262340e3468 <col:18> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x262340e2fe0 <col:18> 'char *' lvalue Var 0x262340e4ad0 'p' 'char *'
|   | |-ImplicitCastExpr 0x262340e3480 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x262340e3000 <col:21> 'size_t':'unsigned long long' lvalue Var 0x262340e4ca8 'len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x262340e3498 <col:26> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x262340e3058 <col:26> 'char [26]' lvalue "%04d%02d%02d%02d%02d%02dZ"
|   | |-BinaryOperator 0x262340e3138 <col:55, col:69> 'int' '+'
|   | | |-ImplicitCastExpr 0x262340e3120 <col:55, col:59> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x262340e30c8 <col:55, col:59> 'int' lvalue ->tm_year 0x262340bcb08
|   | | |   `-ImplicitCastExpr 0x262340e30b0 <col:55> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x262340e3090 <col:55> 'struct tm *' lvalue Var 0x262340e4b78 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x262340e30f8 <col:69> 'int' 1900
|   | |-BinaryOperator 0x262340e3228 <line:204:18, col:31> 'int' '+'
|   | | |-ImplicitCastExpr 0x262340e3210 <col:18, col:22> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x262340e31b8 <col:18, col:22> 'int' lvalue ->tm_mon 0x262340bca98
|   | | |   `-ImplicitCastExpr 0x262340e31a0 <col:18> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x262340e3180 <col:18> 'struct tm *' lvalue Var 0x262340e4b78 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x262340e31e8 <col:31> 'int' 1
|   | |-ImplicitCastExpr 0x262340e34b0 <col:34, col:38> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x262340e3280 <col:34, col:38> 'int' lvalue ->tm_mday 0x262340bca28
|   | |   `-ImplicitCastExpr 0x262340e3268 <col:34> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x262340e3248 <col:34> 'struct tm *' lvalue Var 0x262340e4b78 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x262340e34c8 <col:47, col:51> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x262340e32e8 <col:47, col:51> 'int' lvalue ->tm_hour 0x262340bc9b8
|   | |   `-ImplicitCastExpr 0x262340e32d0 <col:47> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x262340e32b0 <col:47> 'struct tm *' lvalue Var 0x262340e4b78 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x262340e34e0 <col:60, col:64> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x262340e3350 <col:60, col:64> 'int' lvalue ->tm_min 0x262340bc948
|   | |   `-ImplicitCastExpr 0x262340e3338 <col:60> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x262340e3318 <col:60> 'struct tm *' lvalue Var 0x262340e4b78 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x262340e34f8 <line:205:18, col:22> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x262340e33b8 <col:18, col:22> 'int' lvalue ->tm_sec 0x262340bc8d8
|   |     `-ImplicitCastExpr 0x262340e33a0 <col:18> 'struct tm *' <LValueToRValue>
|   |       `-DeclRefExpr 0x262340e3380 <col:18> 'struct tm *' lvalue Var 0x262340e4b78 'ts' 'struct tm *'
|   |-LabelStmt 0x262340e3778 <line:212:2, col:5> 'err'
|   | `-NullStmt 0x262340e3770 <col:5>
|   `-ReturnStmt 0x262340e3830 <line:215:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x262340e3818 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x262340e37f8 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x262340e37d0 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x262340e3790 <col:26> 'int' 0
|-VarDecl 0x262340e3918 prev 0x262340d6fe0 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:218:1, line:221:1> line:218:13 used _asn1_mon 'const char *[12]' cinit
| `-InitListExpr 0x262340e3be8 <col:29, line:221:1> 'const char *[12]'
|   |-ImplicitCastExpr 0x262340e3ca0 <line:219:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x262340e3c88 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x262340e39b8 <col:5> 'char [4]' lvalue "Jan"
|   |-ImplicitCastExpr 0x262340e3cd0 <col:12> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x262340e3cb8 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x262340e39d8 <col:12> 'char [4]' lvalue "Feb"
|   |-ImplicitCastExpr 0x262340e3d00 <col:19> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x262340e3ce8 <col:19> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x262340e39f8 <col:19> 'char [4]' lvalue "Mar"
|   |-ImplicitCastExpr 0x262340e3d30 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x262340e3d18 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x262340e3a18 <col:26> 'char [4]' lvalue "Apr"
|   |-ImplicitCastExpr 0x262340e3d60 <col:33> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x262340e3d48 <col:33> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x262340e3a38 <col:33> 'char [4]' lvalue "May"
|   |-ImplicitCastExpr 0x262340e3d90 <col:40> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x262340e3d78 <col:40> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x262340e3a58 <col:40> 'char [4]' lvalue "Jun"
|   |-ImplicitCastExpr 0x262340e3dc0 <line:220:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x262340e3da8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x262340e3a78 <col:5> 'char [4]' lvalue "Jul"
|   |-ImplicitCastExpr 0x262340e3df0 <col:12> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x262340e3dd8 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x262340e3a98 <col:12> 'char [4]' lvalue "Aug"
|   |-ImplicitCastExpr 0x262340e3e20 <col:19> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x262340e3e08 <col:19> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x262340e3ab8 <col:19> 'char [4]' lvalue "Sep"
|   |-ImplicitCastExpr 0x262340e3e50 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x262340e3e38 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x262340e3ad8 <col:26> 'char [4]' lvalue "Oct"
|   |-ImplicitCastExpr 0x262340e3e80 <col:33> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x262340e3e68 <col:33> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x262340e3af8 <col:33> 'char [4]' lvalue "Nov"
|   `-ImplicitCastExpr 0x262340e3eb0 <col:40> 'const char *' <NoOp>
|     `-ImplicitCastExpr 0x262340e3e98 <col:40> 'char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x262340e3b18 <col:40> 'char [4]' lvalue "Dec"
`-FunctionDecl 0x262340e4040 <line:223:1, line:273:1> line:223:5 invalid ASN1_GENERALIZEDTIME_print 'int (int *, const int *)'
  |-ParmVarDecl 0x262340e3ee0 <col:32, col:37> col:37 invalid bp 'int *'
  |-ParmVarDecl 0x262340e3f60 <col:41, col:69> col:69 invalid tm 'const int *'
  `-CompoundStmt 0x262340efb00 <line:224:1, line:273:1>
    |-DeclStmt 0x262340e6218 <line:225:5, col:12>
    | `-VarDecl 0x262340e61b0 <col:5, col:11> col:11 used v 'char *'
    |-DeclStmt 0x262340e62d8 <line:226:5, col:16>
    | `-VarDecl 0x262340e6248 <col:5, col:15> col:9 used gmt 'int' cinit
    |   `-IntegerLiteral 0x262340e62b0 <col:15> 'int' 0
    |-DeclStmt 0x262340e6370 <line:227:5, col:10>
    | `-VarDecl 0x262340e6308 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x262340e67b0 <line:228:5, col:49>
    | |-VarDecl 0x262340e63a0 <col:5, col:13> col:9 used y 'int' cinit
    | | `-IntegerLiteral 0x262340e6408 <col:13> 'int' 0
    | |-VarDecl 0x262340e6448 <col:5, col:20> col:16 used M 'int' cinit
    | | `-IntegerLiteral 0x262340e64b0 <col:20> 'int' 0
    | |-VarDecl 0x262340e64f0 <col:5, col:27> col:23 used d 'int' cinit
    | | `-IntegerLiteral 0x262340e6558 <col:27> 'int' 0
    | |-VarDecl 0x262340e6598 <col:5, col:34> col:30 used h 'int' cinit
    | | `-IntegerLiteral 0x262340e6600 <col:34> 'int' 0
    | |-VarDecl 0x262340e6640 <col:5, col:41> col:37 used m 'int' cinit
    | | `-IntegerLiteral 0x262340e66a8 <col:41> 'int' 0
    | `-VarDecl 0x262340e66e8 <col:5, col:48> col:44 used s 'int' cinit
    |   `-IntegerLiteral 0x262340e6750 <col:48> 'int' 0
    |-DeclStmt 0x262340e68e8 <line:229:5, col:19>
    | `-VarDecl 0x262340e67e0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\asn1\a_gentm.c:229:11 used f 'char *' cinit
    |   `-ImplicitCastExpr 0x262340e68d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
    |     `-ParenExpr 0x262340e68b0 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x262340e6888 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x262340e6848 <col:26> 'int' 0
    |-DeclStmt 0x262340e69a8 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:230:5, col:18>
    | `-VarDecl 0x262340e6918 <col:5, col:17> col:9 used f_len 'int' cinit
    |   `-IntegerLiteral 0x262340e6980 <col:17> 'int' 0
    |-IfStmt 0x262340e6b18 <line:235:5, line:236:14>
    | |-BinaryOperator 0x262340e6a90 <line:235:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x262340e6a78 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x262340e6a30 <col:9> 'int' lvalue Var 0x262340e6308 'i' 'int'
    | | `-IntegerLiteral 0x262340e6a50 <col:13> 'int' 12
    | `-GotoStmt 0x262340e6b00 <line:236:9, col:14> 'err' 0x262340e6ab0
    |-IfStmt 0x262340e6cf0 <line:237:5, line:238:15>
    | |-BinaryOperator 0x262340e6c50 <line:237:9, col:21> 'int' '=='
    | | |-ImplicitCastExpr 0x262340e6c38 <col:9, col:16> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x262340e6c20 <col:9, col:16> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x262340e6be8 <col:9, col:16> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x262340e6bd0 <col:9> 'char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x262340e6b30 <col:9> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    | | |     `-BinaryOperator 0x262340e6bb0 <col:11, col:15> 'int' '-'
    | | |       |-ImplicitCastExpr 0x262340e6b98 <col:11> 'int' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x262340e6b50 <col:11> 'int' lvalue Var 0x262340e6308 'i' 'int'
    | | |       `-IntegerLiteral 0x262340e6b70 <col:15> 'int' 1
    | | `-CharacterLiteral 0x262340e6c08 <col:21> 'int' 90
    | `-BinaryOperator 0x262340e6cd0 <line:238:9, col:15> 'int' '='
    |   |-DeclRefExpr 0x262340e6c70 <col:9> 'int' lvalue Var 0x262340e6248 'gmt' 'int'
    |   `-IntegerLiteral 0x262340e6ca8 <col:15> 'int' 1
    |-ForStmt 0x262340e70a8 <line:239:5, line:241:18>
    | |-BinaryOperator 0x262340e6d50 <line:239:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x262340e6d08 <col:10> 'int' lvalue Var 0x262340e6308 'i' 'int'
    | | `-IntegerLiteral 0x262340e6d28 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x262340e6dd0 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x262340e6db8 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x262340e6d70 <col:17> 'int' lvalue Var 0x262340e6308 'i' 'int'
    | | `-IntegerLiteral 0x262340e6d90 <col:21> 'int' 12
    | |-UnaryOperator 0x262340e6e10 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x262340e6df0 <col:25> 'int' lvalue Var 0x262340e6308 'i' 'int'
    | `-IfStmt 0x262340e7090 <line:240:9, line:241:18>
    |   |-BinaryOperator 0x262340e7058 <line:240:13, col:40> 'int' '||'
    |   | |-ParenExpr 0x262340e6f20 <col:13, col:24> 'int'
    |   | | `-BinaryOperator 0x262340e6f00 <col:14, col:21> 'int' '>'
    |   | |   |-ImplicitCastExpr 0x262340e6ee8 <col:14, col:17> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x262340e6ed0 <col:14, col:17> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x262340e6e98 <col:14, col:17> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x262340e6e68 <col:14> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x262340e6e28 <col:14> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |   | |   |     `-ImplicitCastExpr 0x262340e6e80 <col:16> 'int' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x262340e6e48 <col:16> 'int' lvalue Var 0x262340e6308 'i' 'int'
    |   | |   `-CharacterLiteral 0x262340e6eb8 <col:21> 'int' 57
    |   | `-ParenExpr 0x262340e7038 <col:29, col:40> 'int'
    |   |   `-BinaryOperator 0x262340e7018 <col:30, col:37> 'int' '<'
    |   |     |-ImplicitCastExpr 0x262340e7000 <col:30, col:33> 'int' <IntegralCast>
    |   |     | `-ImplicitCastExpr 0x262340e6fe8 <col:30, col:33> 'char' <LValueToRValue>
    |   |     |   `-ArraySubscriptExpr 0x262340e6fb0 <col:30, col:33> 'char' lvalue
    |   |     |     |-ImplicitCastExpr 0x262340e6f80 <col:30> 'char *' <LValueToRValue>
    |   |     |     | `-DeclRefExpr 0x262340e6f40 <col:30> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |   |     |     `-ImplicitCastExpr 0x262340e6f98 <col:32> 'int' <LValueToRValue>
    |   |     |       `-DeclRefExpr 0x262340e6f60 <col:32> 'int' lvalue Var 0x262340e6308 'i' 'int'
    |   |     `-CharacterLiteral 0x262340e6fd0 <col:37> 'int' 48
    |   `-GotoStmt 0x262340e7078 <line:241:13, col:18> 'err' 0x262340e6ab0
    |-BinaryOperator 0x262340e0610 <line:242:5, line:243:42> 'int' '='
    | |-DeclRefExpr 0x262340e70e0 <line:242:5> 'int' lvalue Var 0x262340e63a0 'y' 'int'
    | `-BinaryOperator 0x262340e05f0 <col:9, line:243:42> 'int' '+'
    |   |-BinaryOperator 0x262340e04c8 <line:242:9, line:243:26> 'int' '+'
    |   | |-BinaryOperator 0x262340e0358 <line:242:9, col:46> 'int' '+'
    |   | | |-BinaryOperator 0x262340e01e8 <col:9, col:24> 'int' '*'
    |   | | | |-ParenExpr 0x262340e01a0 <col:9, col:20> 'int'
    |   | | | | `-BinaryOperator 0x262340e0180 <col:10, col:17> 'int' '-'
    |   | | | |   |-ImplicitCastExpr 0x262340e0168 <col:10, col:13> 'int' <IntegralCast>
    |   | | | |   | `-ImplicitCastExpr 0x262340e0150 <col:10, col:13> 'char' <LValueToRValue>
    |   | | | |   |   `-ArraySubscriptExpr 0x262340e7178 <col:10, col:13> 'char' lvalue
    |   | | | |   |     |-ImplicitCastExpr 0x262340e7160 <col:10> 'char *' <LValueToRValue>
    |   | | | |   |     | `-DeclRefExpr 0x262340e7118 <col:10> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |   | | | |   |     `-IntegerLiteral 0x262340e7138 <col:12> 'int' 0
    |   | | | |   `-CharacterLiteral 0x262340e7198 <col:17> 'int' 48
    |   | | | `-IntegerLiteral 0x262340e01c0 <col:24> 'int' 1000
    |   | | `-BinaryOperator 0x262340e0338 <col:31, col:46> 'int' '*'
    |   | |   |-ParenExpr 0x262340e02f0 <col:31, col:42> 'int'
    |   | |   | `-BinaryOperator 0x262340e02d0 <col:32, col:39> 'int' '-'
    |   | |   |   |-ImplicitCastExpr 0x262340e02b8 <col:32, col:35> 'int' <IntegralCast>
    |   | |   |   | `-ImplicitCastExpr 0x262340e02a0 <col:32, col:35> 'char' <LValueToRValue>
    |   | |   |   |   `-ArraySubscriptExpr 0x262340e0268 <col:32, col:35> 'char' lvalue
    |   | |   |   |     |-ImplicitCastExpr 0x262340e0250 <col:32> 'char *' <LValueToRValue>
    |   | |   |   |     | `-DeclRefExpr 0x262340e0208 <col:32> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |   | |   |   |     `-IntegerLiteral 0x262340e0228 <col:34> 'int' 1
    |   | |   |   `-CharacterLiteral 0x262340e0288 <col:39> 'int' 48
    |   | |   `-IntegerLiteral 0x262340e0310 <col:46> 'int' 100
    |   | `-BinaryOperator 0x262340e04a8 <line:243:11, col:26> 'int' '*'
    |   |   |-ParenExpr 0x262340e0460 <col:11, col:22> 'int'
    |   |   | `-BinaryOperator 0x262340e0440 <col:12, col:19> 'int' '-'
    |   |   |   |-ImplicitCastExpr 0x262340e0428 <col:12, col:15> 'int' <IntegralCast>
    |   |   |   | `-ImplicitCastExpr 0x262340e0410 <col:12, col:15> 'char' <LValueToRValue>
    |   |   |   |   `-ArraySubscriptExpr 0x262340e03d8 <col:12, col:15> 'char' lvalue
    |   |   |   |     |-ImplicitCastExpr 0x262340e03c0 <col:12> 'char *' <LValueToRValue>
    |   |   |   |     | `-DeclRefExpr 0x262340e0378 <col:12> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |   |   |   |     `-IntegerLiteral 0x262340e0398 <col:14> 'int' 2
    |   |   |   `-CharacterLiteral 0x262340e03f8 <col:19> 'int' 48
    |   |   `-IntegerLiteral 0x262340e0480 <col:26> 'int' 10
    |   `-ParenExpr 0x262340e05d0 <col:31, col:42> 'int'
    |     `-BinaryOperator 0x262340e05b0 <col:32, col:39> 'int' '-'
    |       |-ImplicitCastExpr 0x262340e0598 <col:32, col:35> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x262340e0580 <col:32, col:35> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x262340e0548 <col:32, col:35> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x262340e0530 <col:32> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x262340e04e8 <col:32> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |       |     `-IntegerLiteral 0x262340e0508 <col:34> 'int' 3
    |       `-CharacterLiteral 0x262340e0568 <col:39> 'int' 48
    |-BinaryOperator 0x262340e08e0 <line:244:5, col:40> 'int' '='
    | |-DeclRefExpr 0x262340e0630 <col:5> 'int' lvalue Var 0x262340e6448 'M' 'int'
    | `-BinaryOperator 0x262340e08c0 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x262340e0798 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x262340e0750 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x262340e0730 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x262340e0718 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x262340e0700 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x262340e06c8 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x262340e06b0 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x262340e0668 <col:10> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x262340e0688 <col:12> 'int' 4
    |   | |   `-CharacterLiteral 0x262340e06e8 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x262340e0770 <col:24> 'int' 10
    |   `-ParenExpr 0x262340e08a0 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x262340e0880 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x262340e0868 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x262340e0850 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x262340e0818 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x262340e0800 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x262340e07b8 <col:30> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |       |     `-IntegerLiteral 0x262340e07d8 <col:32> 'int' 5
    |       `-CharacterLiteral 0x262340e0838 <col:37> 'int' 48
    |-IfStmt 0x262340e0a78 <line:245:5, line:246:14>
    | |-BinaryOperator 0x262340e0a40 <line:245:9, col:27> 'int' '||'
    | | |-ParenExpr 0x262340e0980 <col:9, col:16> 'int'
    | | | `-BinaryOperator 0x262340e0960 <col:10, col:14> 'int' '>'
    | | |   |-ImplicitCastExpr 0x262340e0948 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x262340e0900 <col:10> 'int' lvalue Var 0x262340e6448 'M' 'int'
    | | |   `-IntegerLiteral 0x262340e0920 <col:14> 'int' 12
    | | `-ParenExpr 0x262340e0a20 <col:21, col:27> 'int'
    | |   `-BinaryOperator 0x262340e0a00 <col:22, col:26> 'int' '<'
    | |     |-ImplicitCastExpr 0x262340e09e8 <col:22> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x262340e09a0 <col:22> 'int' lvalue Var 0x262340e6448 'M' 'int'
    | |     `-IntegerLiteral 0x262340e09c0 <col:26> 'int' 1
    | `-GotoStmt 0x262340e0a60 <line:246:9, col:14> 'err' 0x262340e6ab0
    |-BinaryOperator 0x262340e0d40 <line:247:5, col:40> 'int' '='
    | |-DeclRefExpr 0x262340e0a90 <col:5> 'int' lvalue Var 0x262340e64f0 'd' 'int'
    | `-BinaryOperator 0x262340e0d20 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x262340e0bf8 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x262340e0bb0 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x262340e0b90 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x262340e0b78 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x262340e0b60 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x262340e0b28 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x262340e0b10 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x262340e0ac8 <col:10> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x262340e0ae8 <col:12> 'int' 6
    |   | |   `-CharacterLiteral 0x262340e0b48 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x262340e0bd0 <col:24> 'int' 10
    |   `-ParenExpr 0x262340e0d00 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x262340e0ce0 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x262340e0cc8 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x262340e0cb0 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x262340e0c78 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x262340e0c60 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x262340e0c18 <col:30> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |       |     `-IntegerLiteral 0x262340e0c38 <col:32> 'int' 7
    |       `-CharacterLiteral 0x262340e0c98 <col:37> 'int' 48
    |-BinaryOperator 0x262340e1010 <line:248:5, col:40> 'int' '='
    | |-DeclRefExpr 0x262340e0d60 <col:5> 'int' lvalue Var 0x262340e6598 'h' 'int'
    | `-BinaryOperator 0x262340e0ff0 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x262340e0ec8 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x262340e0e80 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x262340e0e60 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x262340e0e48 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x262340e0e30 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x262340e0df8 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x262340e0de0 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x262340e0d98 <col:10> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x262340e0db8 <col:12> 'int' 8
    |   | |   `-CharacterLiteral 0x262340e0e18 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x262340e0ea0 <col:24> 'int' 10
    |   `-ParenExpr 0x262340e0fd0 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x262340e0fb0 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x262340e0f98 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x262340e0f80 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x262340e0f48 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x262340e0f30 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x262340e0ee8 <col:30> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |       |     `-IntegerLiteral 0x262340e0f08 <col:32> 'int' 9
    |       `-CharacterLiteral 0x262340e0f68 <col:37> 'int' 48
    |-BinaryOperator 0x262340ee3c0 <line:249:5, col:42> 'int' '='
    | |-DeclRefExpr 0x262340e1030 <col:5> 'int' lvalue Var 0x262340e6640 'm' 'int'
    | `-BinaryOperator 0x262340ee3a0 <col:9, col:42> 'int' '+'
    |   |-BinaryOperator 0x262340ee278 <col:9, col:25> 'int' '*'
    |   | |-ParenExpr 0x262340ee230 <col:9, col:21> 'int'
    |   | | `-BinaryOperator 0x262340e1130 <col:10, col:18> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x262340e1118 <col:10, col:14> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x262340e1100 <col:10, col:14> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x262340e10c8 <col:10, col:14> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x262340e10b0 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x262340e1068 <col:10> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x262340e1088 <col:12> 'int' 10
    |   | |   `-CharacterLiteral 0x262340e10e8 <col:18> 'int' 48
    |   | `-IntegerLiteral 0x262340ee250 <col:25> 'int' 10
    |   `-ParenExpr 0x262340ee380 <col:30, col:42> 'int'
    |     `-BinaryOperator 0x262340ee360 <col:31, col:39> 'int' '-'
    |       |-ImplicitCastExpr 0x262340ee348 <col:31, col:35> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x262340ee330 <col:31, col:35> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x262340ee2f8 <col:31, col:35> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x262340ee2e0 <col:31> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x262340ee298 <col:31> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |       |     `-IntegerLiteral 0x262340ee2b8 <col:33> 'int' 11
    |       `-CharacterLiteral 0x262340ee318 <col:39> 'int' 48
    |-IfStmt 0x262340ef218 <line:250:5, line:262:5>
    | |-OpaqueValueExpr 0x262340ef200 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x262340ef1e0 <line:252:43, line:262:5>
    |   |-BinaryOperator 0x262340eead8 <line:253:9, col:46> 'int' '='
    |   | |-DeclRefExpr 0x262340ee828 <col:9> 'int' lvalue Var 0x262340e66e8 's' 'int'
    |   | `-BinaryOperator 0x262340eeab8 <col:13, col:46> 'int' '+'
    |   |   |-BinaryOperator 0x262340ee990 <col:13, col:29> 'int' '*'
    |   |   | |-ParenExpr 0x262340ee948 <col:13, col:25> 'int'
    |   |   | | `-BinaryOperator 0x262340ee928 <col:14, col:22> 'int' '-'
    |   |   | |   |-ImplicitCastExpr 0x262340ee910 <col:14, col:18> 'int' <IntegralCast>
    |   |   | |   | `-ImplicitCastExpr 0x262340ee8f8 <col:14, col:18> 'char' <LValueToRValue>
    |   |   | |   |   `-ArraySubscriptExpr 0x262340ee8c0 <col:14, col:18> 'char' lvalue
    |   |   | |   |     |-ImplicitCastExpr 0x262340ee8a8 <col:14> 'char *' <LValueToRValue>
    |   |   | |   |     | `-DeclRefExpr 0x262340ee860 <col:14> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |   |   | |   |     `-IntegerLiteral 0x262340ee880 <col:16> 'int' 12
    |   |   | |   `-CharacterLiteral 0x262340ee8e0 <col:22> 'int' 48
    |   |   | `-IntegerLiteral 0x262340ee968 <col:29> 'int' 10
    |   |   `-ParenExpr 0x262340eea98 <col:34, col:46> 'int'
    |   |     `-BinaryOperator 0x262340eea78 <col:35, col:43> 'int' '-'
    |   |       |-ImplicitCastExpr 0x262340eea60 <col:35, col:39> 'int' <IntegralCast>
    |   |       | `-ImplicitCastExpr 0x262340eea48 <col:35, col:39> 'char' <LValueToRValue>
    |   |       |   `-ArraySubscriptExpr 0x262340eea10 <col:35, col:39> 'char' lvalue
    |   |       |     |-ImplicitCastExpr 0x262340ee9f8 <col:35> 'char *' <LValueToRValue>
    |   |       |     | `-DeclRefExpr 0x262340ee9b0 <col:35> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |   |       |     `-IntegerLiteral 0x262340ee9d0 <col:37> 'int' 13
    |   |       `-CharacterLiteral 0x262340eea30 <col:43> 'int' 48
    |   `-IfStmt 0x262340ef1c8 <line:255:9, line:261:9>
    |     |-OpaqueValueExpr 0x262340ef1b0 <<invalid sloc>> '_Bool'
    |     `-CompoundStmt 0x262340ef180 <line:255:47, line:261:9>
    |       |-DeclStmt 0x262340eec88 <line:256:13, col:31>
    |       | `-VarDecl 0x262340eec20 <col:13, col:17> col:17 used l 'int'
    |       |-BinaryOperator 0x262340eed70 <line:257:13, col:22> 'char *' '='
    |       | |-DeclRefExpr 0x262340eeca0 <col:13> 'char *' lvalue Var 0x262340e67e0 'f' 'char *'
    |       | `-UnaryOperator 0x262340eed58 <col:17, col:22> 'char *' prefix '&' cannot overflow
    |       |   `-ArraySubscriptExpr 0x262340eed38 <col:18, col:22> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x262340eed20 <col:18> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x262340eecd8 <col:18> 'char *' lvalue Var 0x262340e61b0 'v' 'char *'
    |       |     `-IntegerLiteral 0x262340eecf8 <col:20> 'int' 14
    |       |-BinaryOperator 0x262340eedf0 <line:258:13, col:21> 'int' '='
    |       | |-DeclRefExpr 0x262340eed90 <col:13> 'int' lvalue Var 0x262340e6918 'f_len' 'int'
    |       | `-IntegerLiteral 0x262340eedc8 <col:21> 'int' 1
    |       `-WhileStmt 0x262340ef168 <line:259:13, line:260:19>
    |         |-BinaryOperator 0x262340ef110 <line:259:20, col:69> 'int' '&&'
    |         | |-BinaryOperator 0x262340eeff8 <col:20, col:50> 'int' '&&'
    |         | | |-BinaryOperator 0x262340eeee0 <col:20, col:33> 'int' '<'
    |         | | | |-BinaryOperator 0x262340eee70 <col:20, col:25> 'int' '+'
    |         | | | | |-IntegerLiteral 0x262340eee10 <col:20> 'int' 14
    |         | | | | `-ImplicitCastExpr 0x262340eee58 <col:25> 'int' <LValueToRValue>
    |         | | | |   `-DeclRefExpr 0x262340eee38 <col:25> 'int' lvalue Var 0x262340e6918 'f_len' 'int'
    |         | | | `-ImplicitCastExpr 0x262340eeec8 <col:33> 'int' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x262340eee90 <col:33> 'int' lvalue Var 0x262340eec20 'l' 'int'
    |         | | `-BinaryOperator 0x262340eefd8 <col:38, col:50> 'int' '>='
    |         | |   |-ImplicitCastExpr 0x262340eefc0 <col:38, col:45> 'int' <IntegralCast>
    |         | |   | `-ImplicitCastExpr 0x262340eefa8 <col:38, col:45> 'char' <LValueToRValue>
    |         | |   |   `-ArraySubscriptExpr 0x262340eef70 <col:38, col:45> 'char' lvalue
    |         | |   |     |-ImplicitCastExpr 0x262340eef40 <col:38> 'char *' <LValueToRValue>
    |         | |   |     | `-DeclRefExpr 0x262340eef00 <col:38> 'char *' lvalue Var 0x262340e67e0 'f' 'char *'
    |         | |   |     `-ImplicitCastExpr 0x262340eef58 <col:40> 'int' <LValueToRValue>
    |         | |   |       `-DeclRefExpr 0x262340eef20 <col:40> 'int' lvalue Var 0x262340e6918 'f_len' 'int'
    |         | |   `-CharacterLiteral 0x262340eef90 <col:50> 'int' 48
    |         | `-BinaryOperator 0x262340ef0f0 <col:57, col:69> 'int' '<='
    |         |   |-ImplicitCastExpr 0x262340ef0d8 <col:57, col:64> 'int' <IntegralCast>
    |         |   | `-ImplicitCastExpr 0x262340ef0c0 <col:57, col:64> 'char' <LValueToRValue>
    |         |   |   `-ArraySubscriptExpr 0x262340ef088 <col:57, col:64> 'char' lvalue
    |         |   |     |-ImplicitCastExpr 0x262340ef058 <col:57> 'char *' <LValueToRValue>
    |         |   |     | `-DeclRefExpr 0x262340ef018 <col:57> 'char *' lvalue Var 0x262340e67e0 'f' 'char *'
    |         |   |     `-ImplicitCastExpr 0x262340ef070 <col:59> 'int' <LValueToRValue>
    |         |   |       `-DeclRefExpr 0x262340ef038 <col:59> 'int' lvalue Var 0x262340e6918 'f_len' 'int'
    |         |   `-CharacterLiteral 0x262340ef0a8 <col:69> 'int' 57
    |         `-UnaryOperator 0x262340ef150 <line:260:17, col:19> 'int' prefix '++'
    |           `-DeclRefExpr 0x262340ef130 <col:19> 'int' lvalue Var 0x262340e6918 'f_len' 'int'
    |-IfStmt 0x262340ef8c0 <line:264:5, line:269:18> has_else
    | |-OpaqueValueExpr 0x262340ef8a8 <<invalid sloc>> '_Bool'
    | |-ReturnStmt 0x262340ef840 <line:267:9, col:18>
    | | `-ParenExpr 0x262340ef820 <col:16, col:18> 'int'
    | |   `-IntegerLiteral 0x262340ef7f8 <col:17> 'int' 0
    | `-ReturnStmt 0x262340ef898 <line:269:9, col:18>
    |   `-ParenExpr 0x262340ef878 <col:16, col:18> 'int'
    |     `-IntegerLiteral 0x262340ef850 <col:17> 'int' 1
    |-LabelStmt 0x262340efa90 <line:270:2, col:5> 'err'
    | `-NullStmt 0x262340efa88 <col:5>
    `-ReturnStmt 0x262340efaf0 <line:272:5, col:14>
      `-ParenExpr 0x262340efad0 <col:12, col:14> 'int'
        `-IntegerLiteral 0x262340efaa8 <col:13> 'int' 0
