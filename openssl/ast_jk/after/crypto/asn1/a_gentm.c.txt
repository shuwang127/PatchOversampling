TranslationUnitDecl 0x20e41555798 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x20e41556030 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x20e41555d30 '__int128'
|-TypedefDecl 0x20e415560a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x20e41555d50 'unsigned __int128'
|-TypedefDecl 0x20e415563d8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x20e41556190 'struct __NSConstantString_tag'
|   `-Record 0x20e415560f8 '__NSConstantString_tag'
|-TypedefDecl 0x20e41556448 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x20e41555970 'unsigned long long'
|-TypedefDecl 0x20e415564e0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x20e415564a0 'char *'
|   `-BuiltinType 0x20e41555830 'char'
|-TypedefDecl 0x20e41556550 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x20e415564a0 'char *'
|   `-BuiltinType 0x20e41555830 'char'
|-TypedefDecl 0x20e41556610 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x20e41555970 'unsigned long long'
|-TypedefDecl 0x20e41556680 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x20e415564a0 'char *'
|   `-BuiltinType 0x20e41555830 'char'
|-FunctionDecl 0x20e42ece410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20e42ece4b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x20e42ece520 <col:21> Implicit
|-FunctionDecl 0x20e42ece578 prev 0x20e42ece410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20e42ece2a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x20e42ece668 <col:21> Inherited Implicit
|-TypedefDecl 0x20e42ece6a8 prev 0x20e41556448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x20e41555970 'unsigned long long'
|-TypedefDecl 0x20e42ece750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x20e42ece720 'size_t' sugar
|   |-Typedef 0x20e42ece6a8 'size_t'
|   `-BuiltinType 0x20e41555970 'unsigned long long'
|-TypedefDecl 0x20e42ece7c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x20e415558d0 'long long'
|-TypedefDecl 0x20e42ece830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x20e415558d0 'long long'
|-TypedefDecl 0x20e42ece8a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x20e41555910 'unsigned short'
|-TypedefDecl 0x20e42ece910 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x20e41555910 'unsigned short'
|-TypedefDecl 0x20e42ece980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x20e41555910 'unsigned short'
|-TypedefDecl 0x20e42ece9f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x20e41555890 'int'
|-TypedefDecl 0x20e42ecea60 <line:567:1, col:19> col:19 referenced __time32_t 'long'
| `-BuiltinType 0x20e415558b0 'long'
|-TypedefDecl 0x20e42ecead0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x20e415558d0 'long long'
|-TypedefDecl 0x20e42eceb60 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x20e42eceb30 '__time64_t' sugar
|   |-Typedef 0x20e42ecead0 '__time64_t'
|   `-BuiltinType 0x20e415558d0 'long long'
|-FunctionDecl 0x20e42ececd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x20e42eceef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x20e42f0f1f0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x20e42ecf038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x20e42ecf0b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x20e42ecf128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x20e42ecf1a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x20e42f0ef90 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x20e42f0f2d0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x20e42f0f390 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x20e42f0f500 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x20e42f0f4b0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x20e42f0f450 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x20e42f0f370 'struct threadlocaleinfostruct'
|       `-Record 0x20e42f17010 'threadlocaleinfostruct'
|-TypedefDecl 0x20e42f0f610 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x20e42f0f5c0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x20e42f0f560 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x20e42f0f430 'struct threadmbcinfostruct'
|       `-Record 0x20e42f0f390 'threadmbcinfostruct'
|-RecordDecl 0x20e42f0f668 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x20e42f0f720 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x20e42f0f7e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e42f0f870 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x20e42f0f900 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x20e42f0f9b8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x20e42f0f960 'struct localeinfo_struct' sugar
|   `-RecordType 0x20e42f0f7c0 'struct localeinfo_struct'
|     `-Record 0x20e42f0f720 'localeinfo_struct'
|-TypedefDecl 0x20e42f0fa90 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x20e42f0fa40 'struct localeinfo_struct *'
|   `-ElaboratedType 0x20e42f0f960 'struct localeinfo_struct' sugar
|     `-RecordType 0x20e42f0f7c0 'struct localeinfo_struct'
|       `-Record 0x20e42f0f720 'localeinfo_struct'
|-RecordDecl 0x20e42f0fb08 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x20e42f0fbc0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e42f0fc38 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x20e42f0fcf8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x20e42f0fd90 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x20e42f0fe00 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x20e42f0feb8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x20e42f0fe60 'struct localerefcount' sugar
|   `-RecordType 0x20e42f0fba0 'struct localerefcount'
|     `-Record 0x20e42f0fb08 'localerefcount'
|-RecordDecl 0x20e42f17010 prev 0x20e42f0f2d0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x20e42f17090 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e42f17108 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x20e42f17178 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x20e42f171e8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x20e42f17258 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x20e42f17418 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x20e42f17488 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x20e42f174f8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x20e42f17568 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x20e42f175d8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x20e42f17648 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x20e42f176a0 parent 0x20e41555798 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x20e42f17830 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x20e42f178a0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x20e42f17910 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x20e42f17980 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x20e42f17a20 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x20e42f17a90 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x20e42f17ba0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x20e42f17cd8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x20e42f17d88 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x20e42f17d30 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x20e42f0f370 'struct threadlocaleinfostruct'
|     `-Record 0x20e42f17010 'threadlocaleinfostruct'
|-RecordDecl 0x20e42f17e20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x20e42f17ee0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e42f17f58 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x20e42f18020 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x20e42f18090 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x20e42f18100 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x20e42f18170 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x20e42f181e0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x20e42f18250 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x20e42f182c0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x20e42f18370 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x20e42f18320 'struct _iobuf' sugar
|   `-RecordType 0x20e42f17ec0 'struct _iobuf'
|     `-Record 0x20e42f17e20 '_iobuf'
|-FunctionDecl 0x20e42f185a8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x20e42f18678 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x20e415558d0 'long long'
|-FunctionDecl 0x20e42f18858 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42f186e0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x20e42f18b50 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e42f18930 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x20e42f189a8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x20e42f18f00 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x20e42f18c30 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x20e42f18cb0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x20e42f18d30 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x20e42f21220 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e42f210b0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x20e42f21450 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x20e42f21310 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x20e42f21600 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42f21520 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x20e42f217f0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e42f21ae8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x20e42f218c0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x20e42f21940 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x20e42f21ca0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42f21bc0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x20e42f21e50 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42f21d70 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x20e42f22000 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42f21f20 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x20e42f1d178 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42f1d098 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x20e42f1d308 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e42f1d670 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x20e42f1d3d0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x20e42f1d4c8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x20e42f1da28 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x20e42f1d750 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x20e42f1d7d0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x20e42f1d848 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x20e42f1dbe8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42f1db08 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x20e42f1deb0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x20e42f1dcc0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x20e42f1dd40 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x20e42f1f090 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e42f1f488 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x20e42f1f528 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20e42f1f590 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20e42f1f608 prev 0x20e42f1f488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x20e42f1f260 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x20e42f1f2e0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x20e42f1f6b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f1fb30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x20e42f1f860 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x20e42f1f8e0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x20e42f1f960 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x20e42f1fe50 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x20e42f1fef0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x20e42f1ff58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20e42f1ffd0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x20e42f200a0 prev 0x20e42f1fe50 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e42f1fc10 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20e42f1fc90 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x20e42f20198 <col:40> Inherited printf 2 3
|-FunctionDecl 0x20e42f20360 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e42f201e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20e42f20260 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20e42f205b8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e42f20440 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x20e42f204b8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x20e42f207e8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e42f20698 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x20e42f20ae0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x20e42f208c0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x20e42f20938 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x20e42f20f78 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x20e42f21018 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20e42f1e080 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20e42f1e0e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x20e42f1e150 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x20e42f1e1d8 prev 0x20e42f20f78 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20e42f20bc0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x20e42f20c38 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f20cb0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f20d28 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x20e42f1e6e0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e42f1e2c8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x20e42f1e340 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f1e3b8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f1e430 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f1e4a8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x20e42f1eba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x20e42f1e8d0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x20e42f1e950 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x20e42f1e9c8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x20e42f1ec58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f1a0e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x20e42f1eda0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x20e42f1ee20 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x20e42f1eea0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x20e42f1ef18 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x20e42f1a490 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x20e42f1a530 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x20e42f1a598 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20e42f1a610 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x20e42f1a678 prev 0x20e42f1a490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x20e42f1a2c8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x20e42f1a348 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x20e42f1a858 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x20e42f1a728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f1ac98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f1a998 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x20e42f1aa18 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x20e42f1aab0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e42f1ad50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f220c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e42f1ae90 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x20e42f1af10 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20e42f223b0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f22198 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e42f22218 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20e42f22290 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f22710 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x20e42f22490 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x20e42f22568 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x20e42f22ac8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x20e42f227e8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x20e42f22868 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x20e42f228e8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x20e42f22d28 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20e42f22ba8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x20e42f23118 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x20e42f22df8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20e42f22e78 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x20e42f22ef8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x20e42f23378 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x20e42f231f8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x20e42f23838 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x20e42f238d8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x20e42f23940 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20e42f239a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x20e42f23a10 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x20e42f23a98 prev 0x20e42f23838 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20e42f23480 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x20e42f234f8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f23570 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f235e8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x20e42f23c60 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42f23b80 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x20e42f23df0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e42f23f78 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e42f262c0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x20e42f24048 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x20e42f26110 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20e42f265e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20e42f264a0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x20e42f26690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f268b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42f267d0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x20e42f26ad0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x20e42f26988 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x20e42f26c80 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42f26ba0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x20e42f26ed0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x20e42f26d58 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x20e42f26dd8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x20e42f250f0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x20e42f25190 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20e42f25200 <col:40> Implicit printf 1 2
|-FunctionDecl 0x20e42f25268 prev 0x20e42f250f0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x20e42f26fb0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x20e42f25358 <col:40> Inherited printf 1 2
|-FunctionDecl 0x20e42f25488 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e42f253a8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x20e42f256d8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e42f25560 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x20e42f255d8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x20e42f25898 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e42f257b8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x20e42f25ab8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20e42f25970 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x20e42f25d08 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e42f25b90 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x20e42f25c08 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x20e42f25ec8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20e42f25de8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x20e42f75050 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20e42f25fa0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x20e42f26020 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x20e42f75210 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20e42f75130 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x20e42f754a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x20e42f753c0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x20e42f75548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x20e42f75740 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e42f75668 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x20e42f758d0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e42f75b78 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x20e42f75c18 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20e42f75c88 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x20e42f75cf0 prev 0x20e42f75b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x20e42f75a60 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x20e42f75ec8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x20e42f75d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f782c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f78088 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x20e42f78100 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e42f78370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f78598 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e42f784b8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x20e42f787e8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f78670 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x20e42f786e8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f78ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x20e42f78980 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x20e42f78a00 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x20e42f78c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f78e80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e42f78da0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x20e42f79108 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x20e42f78fc0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x20e42f792f0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x20e42f79740 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x20e42f793b8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20e42f79438 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x20e42f794b8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x20e42f79530 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20e42f79bc0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e42f79830 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f798a8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f79920 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f799a0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x20e42f71f50 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e42f79cb0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f79d28 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f79da8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x20e42f72118 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e42f72038 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x20e42f724f0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x20e42f72590 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e42f725f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20e42f72670 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x20e42f726d8 prev 0x20e42f724f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x20e42f722b0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x20e42f72330 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x20e42f728b8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x20e42f72788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f72ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f729c8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x20e42f72a48 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x20e42f72ac0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e42f72d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f7a0d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x20e42f72ea8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x20e42f79fd0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x20e42f7a3c8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f7a1b0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x20e42f7a230 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x20e42f7a2a8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f7a858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e42f7a570 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x20e42f7a5e8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7a668 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x20e42f7a910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f7aee0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f7ab50 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x20e42f7abc8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7ac48 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x20e42f7acc0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e42f72f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f732c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e42f730a8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x20e42f73120 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f731a0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x20e42f73658 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f733a8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x20e42f73420 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f734a0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x20e42f73518 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f738b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x20e42f73958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f73c10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x20e42f73aa0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x20e42f76fa0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x20e42f73ce8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x20e42f73d60 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20e42f77220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20e42f77140 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x20e42f772c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f77588 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e42f77410 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x20e42f77488 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x20e42f779a0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e42f77a40 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x20e42f77aa8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e42f77b10 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e42f77b90 <col:40> Implicit printf 2 0
|-FunctionDecl 0x20e42f77bf8 prev 0x20e42f779a0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e42f77660 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x20e42f776e0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x20e42f77758 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e42f77cf8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x20e42f7afe0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e42f7b080 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x20e42f7b0e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e42f7b150 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e42f7b1d0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x20e42f7b238 prev 0x20e42f7afe0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20e42f77d40 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20e42f77dc0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20e42f77e38 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e42f7b338 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20e42f7b598 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20e42f7b380 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20e42f7b400 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x20e42f7b478 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f7b890 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20e42f7b678 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20e42f7b6f8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x20e42f7b770 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f7bbd8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e42f7bc78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e42f7bce0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e42f7bd58 <col:40> Implicit printf 1 0
|-FunctionDecl 0x20e42f7bdc0 prev 0x20e42f7bbd8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e42f7b978 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x20e42f7b9f0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e42f7beb8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x20e42f740a8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e42f74148 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e42f741b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e42f74228 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x20e42f74290 prev 0x20e42f740a8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20e42f7bf08 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x20e42f73f70 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e42f74388 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x20e42f74550 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e42f743d8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x20e42f74450 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f747a8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e42f74630 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20e42f746a8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f74d08 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e42f74da8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20e42f74e10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20e42f74e78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e42f74ee0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e42f7bff0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x20e42f7c058 prev 0x20e42f74d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e42f74948 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f749c0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f74a40 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20e42f74ab8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x20e42f7c248 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x20e42f7c118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f7c6b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e42f7c298 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f7c310 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7c388 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7c408 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x20e42f7c480 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f7caf8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e42f7c7b0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f7c828 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7c8a0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7c920 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x20e42f7c998 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f7cec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e42f7ccb0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20e42f7cd28 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7cda8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x20e42f7cf80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f7d470 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e42f7d1c0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20e42f7d238 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7d2b8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x20e42f7d330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20e42f7d530 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f7d928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e42f7d678 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f7d6f0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7d770 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20e42f7d7e8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f7dce8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x20e42f7da18 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x20e42f7da98 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x20e42f7db10 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f76030 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x20e42f760d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20e42f76138 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20e42f761b0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x20e42f76218 prev 0x20e42f76030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x20e42f7de90 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20e42f7df10 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x20e42f763f8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x20e42f762c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f76820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e42f768c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20e42f76928 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20e42f76990 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e42f76a10 <col:94> Implicit printf 2 0
|-FunctionDecl 0x20e42f76a78 prev 0x20e42f76820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20e42f76508 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20e42f76588 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x20e42f76600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x20e42f76c60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x20e42f76b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f80030 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20e42f800d0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e42f80138 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20e42f801a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20e42f80220 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x20e42f80288 prev 0x20e42f80030 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20e42f76cb0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x20e42f76d30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20e42f76da8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20e42f80388 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20e42f80550 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e42f803d8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x20e42f80450 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f80848 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e42f80630 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f806a8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f80728 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x20e42f80be0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e42f80930 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f809a8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f80a28 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20e42f80aa0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f80e48 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20e42f80cc8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x20e42f80d48 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x20e42f81040 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e42f80f28 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x20e42f81330 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20e42f81118 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x20e42f81190 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f81210 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x20e42f81628 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20e42f81410 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e42f81490 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x20e42f81508 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f81888 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e42f81710 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x20e42f81788 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f81c18 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20e42f81968 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x20e42f819e0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f81a60 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x20e42f81ad8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f81de8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20e42f81d08 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x20e42f84070 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20e42f81ec0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20e42f81f38 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f84230 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20e42f84150 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x20e42f843c0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20e42f84608 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f84490 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x20e42f84508 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f84860 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f846e8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20e42f84760 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f84ab8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f84940 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20e42f849b8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f84e68 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f84b98 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x20e42f84c10 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f84c88 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f82170 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f84f50 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20e42f84fc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f82050 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f82468 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f82258 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20e42f822d0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f82348 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f82760 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f82548 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20e42f825c8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x20e42f82640 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f82a58 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f82840 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e42f828c0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20e42f82938 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f82d50 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f82b38 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e42f82bb8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20e42f82c30 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f851e0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f82e30 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e42f82eb0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x20e42f82f28 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f82fa0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f85578 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f852c8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e42f85348 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x20e42f853c0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f85438 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f85910 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f85660 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e42f856e0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x20e42f85758 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f857d0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f85da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f85ac0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f85b40 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x20e42f85bb8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e42f85e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f83370 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f85fa8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f83060 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f830e0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x20e42f83158 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f83710 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f83460 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f834d8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f83558 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x20e42f835d0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f83c60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f83900 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f83980 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x20e42f839f8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e42f83a70 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20e42f83d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f862c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f83e68 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f83ee0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f83f60 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x20e42f83fd8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f86090 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f86708 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f863c0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f86438 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f864b8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x20e42f86530 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f865a8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f86978 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f86800 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20e42f86878 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f86bd0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f86a58 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x20e42f86ad0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f86ec0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f86cb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20e42f86d28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f86da0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f7f150 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f86fa8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x20e42f87020 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f7f030 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f7f5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f7f2f8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f7f370 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7f3f0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x20e42f7f468 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e42f7f668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f7fa60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f7f7b0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f7f828 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7f8a8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x20e42f7f920 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f870a0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f7fb50 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f7fbc8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7fc40 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f7fcc0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x20e42f7fd38 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f875e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f87298 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f87310 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f87390 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x20e42f87408 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e42f87480 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20e42f876a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f87b28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f877f8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f87870 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f878f0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x20e42f87968 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f879e0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f8c150 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f87c20 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x20e42f87c98 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f87d10 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f87d90 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20e42f87e08 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f87e80 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f8c510 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x20e42f8c248 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e42f8c2c0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x20e42f8c340 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x20e42f8c780 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20e42f8c610 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x20e42f8c998 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x20e42f8cc78 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20e42f8ca60 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20e42f8cad8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x20e42f8cec0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x20e42f8cd50 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20e42f8e110 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20e42f8cf90 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x20e42f8e298 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x20e42f8e4d0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20e42f8e360 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20e42f8e3d8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x20e42f8e680 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x20e42f8e5a8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20e42f8e928 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x20e42f8e750 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e42f8e7c8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x20e42f8ecd0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x20e42f8ea00 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20e42f8ea80 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x20e42f8eaf8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x20e42f8efd0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20e42f8edb0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20e42f8ee28 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20e42f8d2b8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x20e42f8f0a8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x20e42f8d110 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20e42f8d5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20e42f8d450 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x20e42f8d668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f8d928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x20e42f8d7a8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x20e42f8dc30 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f8d9f8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x20e42f8da70 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f8de80 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f8dd08 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x20e42f8dd80 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f890c0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e42f8df58 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f89270 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e42f89190 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f89420 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e42f89340 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f897b8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f894f0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20e42f89568 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f895e0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f89aa8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f89898 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x20e42f89910 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f89988 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f89d98 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f89b88 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e42f89c00 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f89c78 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f880b0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f89e78 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20e42f89ef0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f89f68 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f883b0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f88190 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f88208 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f88600 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f88488 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f88500 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f88850 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f886d8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f88750 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f88aa0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f88928 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f889a0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f88e58 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f88b78 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20e42f88bf0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f88c68 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f90340 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f88f38 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20e42f88fb0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f89028 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f90130 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f906f8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f90428 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e42f904a0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f90518 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f909e8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f907d8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x20e42f90850 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f908c8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f90cd8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f90ac8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f90b40 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f90bb8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f91060 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f90db8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f90e30 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f90ea8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f90f20 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f8a480 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f8a0f8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f8a170 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f8a1e8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f8a260 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f8a988 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f8a568 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f8a5e0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f8a658 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f8a6d0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f8a748 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f8ad48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f8ab38 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e42f8abb0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f8ac28 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e42f8ae00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f8b310 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f8b000 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e42f8b0e0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f8b158 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f8b1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20e42f8b3d0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f8b688 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f8b510 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x20e42f8b588 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f8b840 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e42f8b760 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f8bb20 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f8b910 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e42f8b988 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f8ba00 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f8bd78 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f8bc00 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f8bc78 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f94fa0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f8be50 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f8bec8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42f8bf40 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f95328 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f95080 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f950f8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f95170 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f951e8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f954f0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e42f95410 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f95738 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f955c0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f95638 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f95a40 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f95810 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f95888 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f95c90 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f95b18 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f95b90 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f95ee0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f95d68 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f95de0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f982c8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f97ff8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f98070 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f980e8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f985b8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f983a8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f98420 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f98498 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f988a8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f98698 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f98710 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f98788 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f98c68 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f98988 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20e42f98a00 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f98a78 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f98fe0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f98d48 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e42f98dc0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f98e38 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f992d0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f990c0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e42f99138 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f991b0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f99720 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f993b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e42f99428 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f994a0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f99518 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f99ab0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f99808 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x20e42f99880 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f998f8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f99970 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f99e40 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f99b98 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x20e42f99c10 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f99c88 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f99d00 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f93290 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f99f28 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f92f80 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f92ff8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f93070 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f93620 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f93378 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f933f0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f93468 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f934e0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f939b0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f93708 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f93780 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f937f8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f93870 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f93eb8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f93a98 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f93b10 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f93b88 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f93c00 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f93c78 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f9a358 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f9a018 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f9a090 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f9a108 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f9a180 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f9a1f8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f9a788 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f9a448 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f9a4c0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f9a538 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f9a5b0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f9a628 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f9a9f0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f9a878 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f9a8f0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f9ac40 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f9aac8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f9ab40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f9af28 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f9ad18 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f9ad90 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f9ae08 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f9b398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f9b0f0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f9b168 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f9b1e0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f9b258 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e42f9b458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f9b9c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f9b5a0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f9b618 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f9b690 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f9b708 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f9b780 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42f9bf00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f9bbc0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f9bc38 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f9bcb0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f9bd28 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e42f9bda0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20e42f95fb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f965c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f960f8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20e42f96170 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f961e8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f96260 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f962d8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f96350 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f96ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f96888 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e42f96900 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x20e42f96b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e42f96c88 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e42f941f8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f96f40 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e42f93fa0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f94018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20e42f942b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e42f943c8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e42f94968 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f94688 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e42f94700 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f94778 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x20e42f94a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e42f94b40 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e42f9c220 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f94e00 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20e42f94e78 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f94ef0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e42f9c010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20e42f9c2e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20e42f9c400 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20e42f9c708 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x20e42f9c528 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e42f9c5a0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f9c618 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x20e42fa4330 <line:37:1, line:44:1>
|   |-DeclStmt 0x20e42f9c850 <line:38:5, col:21>
|   | `-VarDecl 0x20e42f9c7e8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20e42f9c8e8 <line:39:5, col:13>
|   | `-VarDecl 0x20e42f9c880 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x20e42f9cc40 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20e42f9cc28 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e42f9cb40 <col:34> '<builtin fn type>' Function 0x20e42f9c9d8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x20e42f9cb78 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x20e42f9c7e8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x20e42f9cbb0 <col:29> 'const wchar_t *' lvalue ParmVar 0x20e42f9c618 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x20e42f9cf00 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x20e42f9cc70 <col:5> 'int' lvalue Var 0x20e42f9c880 '_Ret' 'int'
|   | `-CallExpr 0x20e42f9ce40 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x20e42f9ce28 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20e42f9cca8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e42f93eb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x20e42f9ce88 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e42f9ccc8 <col:27> 'wchar_t *' lvalue ParmVar 0x20e42f9c528 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x20e42f9cea0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e42f9cce8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e42f9c5a0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x20e42f9ceb8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e42f9cd08 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e42f9c618 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x20e42f9ced0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x20e42f9cd90 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x20e42f9cd68 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x20e42f9cd28 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x20e42f9cee8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e42f9cdb0 <col:59> 'va_list':'char *' lvalue Var 0x20e42f9c7e8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x20e42fa42c0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20e42fa42a8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e42fa41f8 <col:34> '<builtin fn type>' Function 0x20e42fa4090 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20e42fa4230 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x20e42f9c7e8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x20e42fa4320 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x20e42fa4308 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20e42fa42e8 <col:12> 'int' lvalue Var 0x20e42f9c880 '_Ret' 'int'
|-FunctionDecl 0x20e42f9c9d8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x20e42f9ca78 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20e42f9cae8 <col:34> Implicit
|-FunctionDecl 0x20e42fa4090 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x20e42fa4130 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20e42fa41a0 <col:34> Implicit
|-FunctionDecl 0x20e42fa4628 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x20e42fa4380 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e42fa43f8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fa4470 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa44e8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20e42fa4910 <line:50:1, line:52:1>
|   `-ReturnStmt 0x20e42fa4900 <line:51:5, col:62>
|     `-CallExpr 0x20e42fa4840 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x20e42fa4828 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e42fa4700 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e42f93eb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20e42fa4888 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42fa4720 <col:27> 'wchar_t *' lvalue ParmVar 0x20e42fa4380 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20e42fa48a0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42fa4740 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e42fa43f8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20e42fa48b8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42fa4760 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e42fa4470 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20e42fa48d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x20e42fa47e8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x20e42fa47c0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x20e42fa4780 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x20e42fa48e8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20e42fa4808 <col:59> 'va_list':'char *' lvalue ParmVar 0x20e42fa44e8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20e42fa4bb0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x20e42fa4938 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e42fa49b0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fa4a28 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa4aa0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x20e42f9d0c8 <line:61:1, line:68:1>
|   |-DeclStmt 0x20e42fa4d00 <line:62:5, col:21>
|   | `-VarDecl 0x20e42fa4c98 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20e42fa4d98 <line:63:5, col:13>
|   | `-VarDecl 0x20e42fa4d30 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x20e42fa4e40 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20e42fa4e28 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e42fa4db0 <col:34> '<builtin fn type>' Function 0x20e42f9c9d8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x20e42fa4dd0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x20e42fa4c98 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x20e42fa4e08 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20e42fa4aa0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x20e42fa5040 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x20e42fa4e70 <col:5> 'int' lvalue Var 0x20e42fa4d30 '_Ret' 'int'
|   | `-CallExpr 0x20e42fa4f80 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x20e42fa4f68 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20e42fa4ea8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e42f93eb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x20e42fa4fc8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e42fa4ec8 <col:27> 'wchar_t *' lvalue ParmVar 0x20e42fa4938 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x20e42fa4fe0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e42fa4ee8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e42fa49b0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x20e42fa4ff8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e42fa4f08 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e42fa4a28 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x20e42fa5010 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20e42fa4f28 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20e42fa4aa0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x20e42fa5028 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20e42fa4f48 <col:64> 'va_list':'char *' lvalue Var 0x20e42fa4c98 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x20e42f9d058 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20e42f9d040 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20e42fa5060 <col:34> '<builtin fn type>' Function 0x20e42fa4090 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20e42f9d020 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x20e42fa4c98 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x20e42f9d0b8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x20e42f9d0a0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20e42f9d080 <col:12> 'int' lvalue Var 0x20e42fa4d30 '_Ret' 'int'
|-FunctionDecl 0x20e42f9d458 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x20e42f9d118 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x20e42f9d190 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42f9d208 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f9d280 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20e42f9d2f8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20e42f9d6e0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x20e42f9d6d0 <line:75:5, col:67>
|     `-CallExpr 0x20e42f9d610 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x20e42f9d5f8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e42f9d538 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20e42f93eb8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20e42f9d658 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42f9d558 <col:27> 'wchar_t *' lvalue ParmVar 0x20e42f9d118 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20e42f9d670 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42f9d578 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20e42f9d190 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20e42f9d688 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42f9d598 <col:44> 'const wchar_t *' lvalue ParmVar 0x20e42f9d208 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20e42f9d6a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42f9d5b8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20e42f9d280 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x20e42f9d6b8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20e42f9d5d8 <col:64> 'va_list':'char *' lvalue ParmVar 0x20e42f9d2f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20e42f9d928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e42f9d708 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x20e42f9d780 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x20e42f9db78 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20e42f9da00 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f9da78 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f9de60 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20e42f9dc50 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f9dcc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20e42f9dd40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20e42f9f1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f9f040 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x20e42f9f0b8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e42f9f268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f9f678 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f9f468 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x20e42f9f4e0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42f9f558 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e42f9f730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42f9f9e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f9f870 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20e42f9f8e8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42f9fcd0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42f9fac0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20e42f9fb38 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42f9fbb0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42fa00c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42f9fe70 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e42f9fee8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e42fa0170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fa0648 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42fa0370 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa03e8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa0460 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e42fa0700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fa09b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42fa0840 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x20e42fa08b8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42fa0ca0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42fa0a90 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa0b08 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42fa0b80 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42fa5188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42fa0e40 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa0eb8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fa0f30 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e42fa5240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fa57c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42fa5440 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa54b8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fa5530 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa55a8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e42fa5880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fa5bd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42fa59c0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa5a38 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42fa5ab0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42fa5f58 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42fa5cb0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa5d28 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fa5da0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42fa5e18 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42fa1210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x20e42fa1130 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20e42fa12b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fa1630 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42fa14b8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa1530 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20e42fa16e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fa1900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20e42fa1820 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x20e42fa1b48 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20e42fa19d0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42fa1a48 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42fa1e48 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x20e42fa1c28 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x20e42fa1ca0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x20e42fa2218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e42fa1fe0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa2070 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x20e42fa22c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fa26d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e42fa2410 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x20e42fa2488 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x20e42fa2500 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x20e42fa2b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20e42fa2870 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa28e8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa2960 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x20e42fa2be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fab148 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20e42fa2d30 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x20e42fa2da8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20e42fa2e20 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x20e42fa2e98 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x20e42fab3a0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x20e42fab230 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x20e42fab5e0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20e42fab470 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x20e42fab4e8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x20e42fab798 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x20e42fab6b8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x20e42faba88 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20e42fab868 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x20e42fab8e0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20e42fabcf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20e42fabc20 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x20e42fabda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fabfb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20e42fabee0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x20e42fa91d8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20e42fac088 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20e42fa90e0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20e42fa9420 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x20e42fa92b0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20e42fa9328 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20e42fa95d0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e42fa94f8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x20e42fa9778 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20e42fa96a0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x20e42fa9928 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42fa9848 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x20e42fa9ad8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20e42fa99f8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x20e42fa9e50 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e42fa9bb0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x20e42fa9c28 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fa9ca0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42fa9d18 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x20e42fac2e0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e42fa9f40 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x20e42fa9fb8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42faa030 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fac110 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42fac188 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x20e42fac5f0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x20e42fac3d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20e42fac450 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x20e42fac4d0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x20e42fac7b0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20e42fac6d0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x20e42facaa0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x20e42fac880 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x20e42fac900 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x20e42fac980 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x20e42facc60 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x20e42facb80 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x20e42facfd8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20e42facd38 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x20e42facdb0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42face28 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42facea0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x20e42faa268 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e42faa0f0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x20e42faa168 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x20e42faa5a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x20e42faa420 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x20e42faa4a0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x20e42faa650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x20e42faa908 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e42faa9a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x20e42faace8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x20e42faab70 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x20e42faabf0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x20e42faad98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x20e42fa60b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e42fa6150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x20e42fa63f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x20e42fa6310 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x20e42fa6498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x20e42fa6718 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e42fa67b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x20e42fa6a60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x20e42fa6980 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x20e42fa6b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x20e42fa6de8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x20e42fa6d08 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x20e42fa6e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x20e42fae2a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20e42fae130 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x20e42fae1a8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x20e42fae358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x20e42fae618 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20e42fae6b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x20e42fae808 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:89:1, col:14> col:14 referenced clock_t 'long'
| `-BuiltinType 0x20e415558b0 'long'
|-RecordDecl 0x20e42fae860 <line:113:1, line:123:9> line:113:8 struct tm definition
| |-MaxFieldAlignmentAttr 0x20e42fae920 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20e42fae998 <line:114:9, col:13> col:13 referenced tm_sec 'int'
| |-FieldDecl 0x20e42faea08 <line:115:9, col:13> col:13 referenced tm_min 'int'
| |-FieldDecl 0x20e42faea78 <line:116:9, col:13> col:13 referenced tm_hour 'int'
| |-FieldDecl 0x20e42faeae8 <line:117:9, col:13> col:13 referenced tm_mday 'int'
| |-FieldDecl 0x20e42faeb58 <line:118:9, col:13> col:13 referenced tm_mon 'int'
| |-FieldDecl 0x20e42faebc8 <line:119:9, col:13> col:13 referenced tm_year 'int'
| |-FieldDecl 0x20e42faec38 <line:120:9, col:13> col:13 tm_wday 'int'
| |-FieldDecl 0x20e42faeca8 <line:121:9, col:13> col:13 tm_yday 'int'
| `-FieldDecl 0x20e42faed18 <line:122:9, col:13> col:13 tm_isdst 'int'
|-FunctionDecl 0x20e42faef60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:147:99> col:84 __daylight 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x20e42faf000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42faf360 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:151:98> col:84 __dstbias 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x20e42faf400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_dstbias instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42faf6c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:155:100> col:85 __timezone 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x20e42faf760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fafa80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:159:112> col:99 __tzname 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x20e42fafb20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fafde0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:162:9, col:60> col:25 _get_daylight 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x20e42fafc68 <col:45, col:51> col:51 _Daylight 'int *'
|-FunctionDecl 0x20e42fb0030 <line:163:9, col:73> col:25 _get_dstbias 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x20e42fafeb8 <col:44, col:51> col:51 _Daylight_savings_bias 'long *'
|-FunctionDecl 0x20e42fb0228 <line:164:9, col:61> col:25 _get_timezone 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x20e42fb0150 <col:45, col:52> col:52 _Timezone 'long *'
|-FunctionDecl 0x20e42fb06d8 <line:165:9, col:150> col:25 _get_tzname 'errno_t (size_t *, char *, size_t, int) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, int)'
| |-ParmVarDecl 0x20e42fb0358 <col:43, col:51> col:51 _ReturnValue 'size_t *'
| |-ParmVarDecl 0x20e42fb03d8 <col:94, col:100> col:100 _Buffer 'char *'
| |-ParmVarDecl 0x20e42fb0450 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42fb04d0 <col:140, col:144> col:144 _Index 'int'
|-FunctionDecl 0x20e42fb0a98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:174:108> col:74 asctime 'char *(const struct tm *) __attribute__((cdecl))':'char *(const struct tm *)'
| |-ParmVarDecl 0x20e42fb0920 <col:87, col:105> col:105 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x20e42fb0b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using asctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fb0f60 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:176:28, col:170> col:44 asctime_s 'errno_t (char *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (char *, size_t, const struct tm *)'
| |-ParmVarDecl 0x20e42fb0c88 <col:106, col:112> col:112 _Buf 'char *'
| |-ParmVarDecl 0x20e42fb0d00 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42fb0d90 <col:149, col:167> col:167 _Tm 'const struct tm *'
|-FunctionDecl 0x20e42fb1318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:180:98> col:60 _ctime32 'char *(const __time32_t *) __attribute__((cdecl))':'char *(const __time32_t *)'
| |-ParmVarDecl 0x20e42fb1198 <col:74, col:93> col:93 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x20e42fb13c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fb17d0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:181:9, col:154> col:25 _ctime32_s 'errno_t (char *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x20e42fb1508 <col:88, col:94> col:94 _Buf 'char *'
| |-ParmVarDecl 0x20e42fb1580 <col:105, col:112> col:112 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42fb15f8 <col:131, col:149> col:149 _Time 'const __time32_t *'
|-FunctionDecl 0x20e42fb1a18 <line:184:24, col:50> col:40 clock 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|-FunctionDecl 0x20e42fb1d00 <line:185:9, col:82> col:24 _difftime32 'double (__time32_t, __time32_t) __attribute__((cdecl))':'double (__time32_t, __time32_t)'
| |-ParmVarDecl 0x20e42fb1ae0 <col:41, col:52> col:52 _Time1 '__time32_t':'long'
| `-ParmVarDecl 0x20e42fb1b58 <col:65, col:76> col:76 _Time2 '__time32_t':'long'
|-FunctionDecl 0x20e42fb2088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:187:120> col:81 _gmtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x20e42fb1e98 <col:96, col:115> col:115 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x20e42fb8140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fb84b8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:188:28, col:106> col:44 _gmtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x20e42fb8298 <col:61, col:72> col:72 _Tm 'struct tm *'
| `-ParmVarDecl 0x20e42fb8310 <col:82, col:101> col:101 _Time 'const __time32_t *'
|-FunctionDecl 0x20e42fb8748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:190:111> col:69 _localtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x20e42fb8658 <col:87, col:106> col:106 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x20e42fb87f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fb8ac0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:191:9, col:91> col:25 _localtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x20e42fb8950 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x20e42fb89c8 <col:67, col:86> col:86 _Time 'const __time32_t *'
|-FunctionDecl 0x20e42fb8f28 <line:193:9, col:179> col:24 strftime 'size_t (char *, size_t, const char *, const struct tm *) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *)'
| |-ParmVarDecl 0x20e42fb8ba0 <col:62, col:69> col:69 _Buf 'char *'
| |-ParmVarDecl 0x20e42fb8c18 <col:80, col:87> col:87 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fb8c98 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x20e42fb8d28 <col:158, col:176> col:176 _Tm 'const struct tm *'
|-FunctionDecl 0x20e42fbb4b0 <line:194:9, col:199> col:24 _strftime_l 'size_t (char *, size_t, const char *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x20e42fb9018 <col:59, col:65> col:65 _Buf 'char *'
| |-ParmVarDecl 0x20e42fb9090 <col:76, col:83> col:83 _Max_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fbb170 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x20e42fbb200 <col:151, col:168> col:168 _Tm 'const struct tm *'
| `-ParmVarDecl 0x20e42fbb278 <col:182, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42fbb788 <line:196:28, col:142> col:44 _strdate_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x20e42fbb5a8 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x20e42fbb620 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x20e42fbba08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:198:79 _strdate 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20e42fbb928 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x20e42fbbab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fbbd68 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:200:28, col:143> col:44 _strtime_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x20e42fbbbf8 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x20e42fbbc70 <col:124, col:131> col:131 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x20e42fbbfe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:202:79 _strtime 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20e42fbbf08 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x20e42fbc090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fb73d0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:204:9, col:64> col:28 _time32 '__time32_t (__time32_t *) __attribute__((cdecl))':'__time32_t (__time32_t *)'
| `-ParmVarDecl 0x20e42fb7258 <col:46, col:59> col:59 _Time '__time32_t *'
|-FunctionDecl 0x20e42fb7630 <line:205:9, col:61> col:28 _mktime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x20e42fb74b8 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x20e42fb77f0 <line:206:9, col:63> col:28 _mkgmtime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x20e42fb7718 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x20e42fb7978 <line:210:9, col:33> col:22 _tzset 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x20e42fb7c60 <line:214:24, col:97> col:39 used _difftime64 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
| |-ParmVarDecl 0x20e42fb7a40 <col:56, col:67> col:67 _Time1 '__time64_t':'long long'
| `-ParmVarDecl 0x20e42fb7ab8 <col:80, col:91> col:91 _Time2 '__time64_t':'long long'
|-FunctionDecl 0x20e42fb7fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:215:98> col:60 used _ctime64 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |-ParmVarDecl 0x20e42fb7e28 <col:74, col:93> col:93 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x20e42fb8050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fb64e0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:216:9, col:132> col:25 used _ctime64_s 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x20e42fb6220 <col:65, col:71> col:71 _Buf 'char *'
| |-ParmVarDecl 0x20e42fb6298 <col:82, col:89> col:89 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42fb6310 <col:108, col:127> col:127 _Time 'const __time64_t *'
|-FunctionDecl 0x20e42fb6808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:219:105> col:66 used _gmtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x20e42fb6680 <col:81, col:100> col:100 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x20e42fb68b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fb6c28 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:220:9, col:87> col:25 used _gmtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x20e42fb6a08 <col:43, col:54> col:54 _Tm 'struct tm *'
| `-ParmVarDecl 0x20e42fb6a80 <col:64, col:82> col:82 _Time 'const __time64_t *'
|-FunctionDecl 0x20e42fb6eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:222:111> col:69 used _localtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x20e42fb6dc8 <col:87, col:106> col:106 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x20e42fb6f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fba2d0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:223:9, col:90> col:25 used _localtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x20e42fba160 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x20e42fba1d8 <col:67, col:85> col:85 _Time 'const __time64_t *'
|-FunctionDecl 0x20e42fba530 <line:225:9, col:61> col:28 used _mktime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x20e42fba3c0 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x20e42fba6f0 <line:226:9, col:63> col:28 used _mkgmtime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x20e42fba618 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x20e42fba960 <line:227:9, col:64> col:28 used _time64 '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
| `-ParmVarDecl 0x20e42fba7e8 <col:46, col:59> col:59 _Time '__time64_t *'
|-FunctionDecl 0x20e42fbacc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:231:79> col:46 _getsystime 'unsigned int (struct tm *) __attribute__((cdecl))':'unsigned int (struct tm *)'
| |-ParmVarDecl 0x20e42fbab48 <col:64, col:76> col:76 _Tm 'struct tm *'
| `-DeprecatedAttr 0x20e42fbad70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x20e42fb5180 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:232:98> col:46 _setsystime 'unsigned int (struct tm *, unsigned int) __attribute__((cdecl))':'unsigned int (struct tm *, unsigned int)'
| |-ParmVarDecl 0x20e42fbaf98 <col:63, col:75> col:75 _Tm 'struct tm *'
| |-ParmVarDecl 0x20e42fbb018 <col:80, col:89> col:89 _MilliSec 'unsigned int'
| `-DeprecatedAttr 0x20e42fb5230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x20e42fb55c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:245:100> col:64 _wasctime 'wchar_t *(const struct tm *) __attribute__((cdecl))':'wchar_t *(const struct tm *)'
| |-ParmVarDecl 0x20e42fb5450 <col:79, col:97> col:97 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x20e42fb5668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wasctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fb5a80 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:246:9, col:156> col:25 _wasctime_s 'errno_t (wchar_t *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const struct tm *)'
| |-ParmVarDecl 0x20e42fb57a8 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x20e42fb5820 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42fb58b0 <col:135, col:153> col:153 _Tm 'const struct tm *'
|-FunctionDecl 0x20e42fb5d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:249:102> col:64 _wctime32 'wchar_t *(const __time32_t *) __attribute__((cdecl))':'wchar_t *(const __time32_t *)'
| |-ParmVarDecl 0x20e42fb5c20 <col:79, col:97> col:97 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x20e42fb5e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fb4240 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:250:9, col:159> col:25 _wctime32_s 'errno_t (wchar_t *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x20e42fb5f78 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x20e42fb5ff0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42fb6068 <col:135, col:154> col:154 _Time 'const __time32_t *'
|-FunctionDecl 0x20e42fb46a8 <line:253:9, col:186> col:24 wcsftime 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *)'
| |-ParmVarDecl 0x20e42fb4320 <col:62, col:72> col:72 _Buf 'wchar_t *'
| |-ParmVarDecl 0x20e42fb4398 <col:83, col:90> col:90 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fb4410 <col:134, col:150> col:150 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20e42fb44a0 <col:165, col:183> col:183 _Tm 'const struct tm *'
|-FunctionDecl 0x20e42fb4bc0 <line:254:9, col:214> col:24 _wcsftime_l 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x20e42fb4790 <col:65, col:75> col:75 _Buf 'wchar_t *'
| |-ParmVarDecl 0x20e42fb4808 <col:86, col:93> col:93 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fb4880 <col:137, col:152> col:152 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20e42fb4910 <col:166, col:183> col:183 _Tm 'const struct tm *'
| `-ParmVarDecl 0x20e42fb4988 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20e42fb4e20 <line:256:9, col:128> col:25 _wstrdate_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20e42fb4cb0 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x20e42fb4d28 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20e42fbd190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:258:82 _wstrdate 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20e42fb4fb8 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x20e42fbd238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fbd4e8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:260:9, col:128> col:25 _wstrtime_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20e42fbd378 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x20e42fbd3f0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20e42fbd758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:262:82 _wstrtime 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20e42fbd680 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x20e42fbd800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fbdb70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:264:103> col:64 used _wctime64 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
| |-ParmVarDecl 0x20e42fbda00 <col:79, col:98> col:98 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x20e42fbdc18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fbe020 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:265:9, col:158> col:25 used _wctime64_s 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x20e42fbdd58 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x20e42fbddd0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20e42fbde48 <col:135, col:153> col:153 _Time 'const __time64_t *'
|-FunctionDecl 0x20e42fc0300 <D:\Microsoft Visual Studio 12.0\VC\include\wtime.inl:44:1, line:50:1> line:44:37 _wctime 'wchar_t *(const time_t *) __attribute__((cdecl))':'wchar_t *(const time_t *)' static inline
| |-ParmVarDecl 0x20e42fc01c0 <col:45, col:60> col:60 used _Time 'const time_t *'
| `-CompoundStmt 0x20e42fc04c0 <line:45:1, line:50:1>
|   `-ReturnStmt 0x20e42fc04b0 <line:48:5, col:27>
|     `-CallExpr 0x20e42fc0470 <col:12, col:27> 'wchar_t *'
|       |-ImplicitCastExpr 0x20e42fc0458 <col:12> 'wchar_t *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e42fc03c0 <col:12> 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)' Function 0x20e42fbdb70 '_wctime64' 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
|       `-ImplicitCastExpr 0x20e42fc0498 <col:22> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x20e42fc03e0 <col:22> 'const time_t *' lvalue ParmVar 0x20e42fc01c0 '_Time' 'const time_t *'
|-FunctionDecl 0x20e42fc0770 <line:52:1, line:55:1> line:52:35 _wctime_s 'errno_t (wchar_t *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x20e42fc04e8 <col:97, col:106> col:106 used _Buffer 'wchar_t *'
| |-ParmVarDecl 0x20e42fc0560 <col:115, col:122> col:122 used _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fc05d8 <col:136, col:151> col:151 used _Time 'const time_t *'
| `-CompoundStmt 0x20e42fc09c0 <line:53:1, line:55:1>
|   `-ReturnStmt 0x20e42fc09b0 <line:54:5, col:52>
|     `-CallExpr 0x20e42fc0930 <col:12, col:52> 'errno_t':'int'
|       |-ImplicitCastExpr 0x20e42fc0918 <col:12> 'errno_t (*)(wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e42fc0840 <col:12> 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)' Function 0x20e42fbe020 '_wctime64_s' 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x20e42fc0968 <col:24> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42fc0860 <col:24> 'wchar_t *' lvalue ParmVar 0x20e42fc04e8 '_Buffer' 'wchar_t *'
|       |-ImplicitCastExpr 0x20e42fc0980 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42fc0880 <col:33> 'size_t':'unsigned long long' lvalue ParmVar 0x20e42fc0560 '_SizeInWords' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x20e42fc0998 <col:47> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x20e42fc08a0 <col:47> 'const time_t *' lvalue ParmVar 0x20e42fc05d8 '_Time' 'const time_t *'
|-FunctionDecl 0x20e42fc0bd0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:82:1, line:85:1> line:82:34 difftime 'double (time_t, time_t) __attribute__((cdecl))':'double (time_t, time_t)' static inline
| |-ParmVarDecl 0x20e42fc09e8 <col:43, col:50> col:50 used _Time1 'time_t':'long long'
| |-ParmVarDecl 0x20e42fc0a60 <col:58, col:65> col:65 used _Time2 'time_t':'long long'
| `-CompoundStmt 0x20e42fc0de0 <line:83:1, line:85:1>
|   `-ReturnStmt 0x20e42fc0dd0 <line:84:5, col:37>
|     `-CallExpr 0x20e42fc0d70 <col:12, col:37> 'double'
|       |-ImplicitCastExpr 0x20e42fc0d58 <col:12> 'double (*)(__time64_t, __time64_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e42fc0c98 <col:12> 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)' Function 0x20e42fb7c60 '_difftime64' 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
|       |-ImplicitCastExpr 0x20e42fc0da0 <col:24> 'time_t':'long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42fc0cb8 <col:24> 'time_t':'long long' lvalue ParmVar 0x20e42fc09e8 '_Time1' 'time_t':'long long'
|       `-ImplicitCastExpr 0x20e42fc0db8 <col:31> 'time_t':'long long' <LValueToRValue>
|         `-DeclRefExpr 0x20e42fc0cd8 <col:31> 'time_t':'long long' lvalue ParmVar 0x20e42fc0a60 '_Time2' 'time_t':'long long'
|-FunctionDecl 0x20e42fc1018 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:92:1> line:86:67 ctime 'char *(const time_t *) __attribute__((cdecl))':'char *(const time_t *)' static inline
| |-ParmVarDecl 0x20e42fc0ec8 <col:73, col:88> col:88 used _Time 'const time_t *'
| |-CompoundStmt 0x20e42fbf300 <line:87:1, line:92:1>
| | `-ReturnStmt 0x20e42fbf2f0 <line:90:5, col:26>
| |   `-CallExpr 0x20e42fbf2b0 <col:12, col:26> 'char *'
| |     |-ImplicitCastExpr 0x20e42fbf298 <col:12> 'char *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x20e42fbf1f8 <col:12> 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)' Function 0x20e42fb7fa8 '_ctime64' 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x20e42fbf2d8 <col:21> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x20e42fbf218 <col:21> 'const time_t *' lvalue ParmVar 0x20e42fc0ec8 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x20e42fc10c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using ctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fbf5b0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:94:1, line:97:1> line:94:35 ctime_s 'errno_t (char *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x20e42fbf330 <col:43, col:49> col:49 used _Buffer 'char *'
| |-ParmVarDecl 0x20e42fbf3a8 <col:58, col:65> col:65 used _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20e42fbf420 <col:79, col:94> col:94 used _Time 'const time_t *'
| `-CompoundStmt 0x20e42fbf800 <line:95:1, line:97:1>
|   `-ReturnStmt 0x20e42fbf7f0 <line:96:5, col:51>
|     `-CallExpr 0x20e42fbf770 <col:12, col:51> 'errno_t':'int'
|       |-ImplicitCastExpr 0x20e42fbf758 <col:12> 'errno_t (*)(char *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e42fbf680 <col:12> 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)' Function 0x20e42fb64e0 '_ctime64_s' 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x20e42fbf7a8 <col:23> 'char *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42fbf6a0 <col:23> 'char *' lvalue ParmVar 0x20e42fbf330 '_Buffer' 'char *'
|       |-ImplicitCastExpr 0x20e42fbf7c0 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42fbf6c0 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x20e42fbf3a8 '_SizeInBytes' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x20e42fbf7d8 <col:46> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x20e42fbf6e0 <col:46> 'const time_t *' lvalue ParmVar 0x20e42fbf420 '_Time' 'const time_t *'
|-FunctionDecl 0x20e42fbfa48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:105:1> line:99:73 gmtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x20e42fbf8e8 <col:80, col:95> col:95 used _Time 'const time_t *'
| |-CompoundStmt 0x20e42fbfd20 <line:100:1, line:105:1>
| | `-ReturnStmt 0x20e42fbfd10 <line:103:5, col:27>
| |   `-CallExpr 0x20e42fbfcd0 <col:12, col:27> 'struct tm *'
| |     |-ImplicitCastExpr 0x20e42fbfcb8 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x20e42fbfc20 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x20e42fb6808 '_gmtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x20e42fbfcf8 <col:22> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x20e42fbfc40 <col:22> 'const time_t *' lvalue ParmVar 0x20e42fbf8e8 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x20e42fbfaf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gmtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fbff38 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:107:1, line:110:1> line:107:35 gmtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x20e42fbfd60 <col:44, col:56> col:56 used _Tm 'struct tm *'
| |-ParmVarDecl 0x20e42fbfdd8 <col:61, col:76> col:76 used _Time 'const time_t *'
| `-CompoundStmt 0x20e42fc0140 <line:108:1, line:110:1>
|   `-ReturnStmt 0x20e42fc0130 <line:109:5, col:34>
|     `-CallExpr 0x20e42fc00d0 <col:12, col:34> 'errno_t':'int'
|       |-ImplicitCastExpr 0x20e42fc00b8 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e42fc0000 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x20e42fb6c28 '_gmtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x20e42fc0100 <col:24> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42fc0020 <col:24> 'struct tm *' lvalue ParmVar 0x20e42fbfd60 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x20e42fc0118 <col:29> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x20e42fc0040 <col:29> 'const time_t *' lvalue ParmVar 0x20e42fbfdd8 '_Time' 'const time_t *'
|-FunctionDecl 0x20e42fbe360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:118:1> line:112:76 localtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x20e42fbe270 <col:86, col:101> col:101 used _Time 'const time_t *'
| |-CompoundStmt 0x20e42fbe5e0 <line:113:1, line:118:1>
| | `-ReturnStmt 0x20e42fbe5d0 <line:116:5, col:30>
| |   `-CallExpr 0x20e42fbe590 <col:12, col:30> 'struct tm *'
| |     |-ImplicitCastExpr 0x20e42fbe578 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x20e42fbe538 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x20e42fb6eb8 '_localtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x20e42fbe5b8 <col:25> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x20e42fbe558 <col:25> 'const time_t *' lvalue ParmVar 0x20e42fbe270 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x20e42fbe408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fbe790 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:119:1, line:122:1> line:119:35 localtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x20e42fbe620 <col:47, col:59> col:59 used _Tm 'struct tm *'
| |-ParmVarDecl 0x20e42fbe698 <col:64, col:79> col:79 used _Time 'const time_t *'
| `-CompoundStmt 0x20e42fbe940 <line:120:1, line:122:1>
|   `-ReturnStmt 0x20e42fbe930 <line:121:5, col:37>
|     `-CallExpr 0x20e42fbe8d0 <col:12, col:37> 'errno_t':'int'
|       |-ImplicitCastExpr 0x20e42fbe8b8 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e42fbe858 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x20e42fba2d0 '_localtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x20e42fbe900 <col:27> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x20e42fbe878 <col:27> 'struct tm *' lvalue ParmVar 0x20e42fbe620 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x20e42fbe918 <col:32> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x20e42fbe898 <col:32> 'const time_t *' lvalue ParmVar 0x20e42fbe698 '_Time' 'const time_t *'
|-FunctionDecl 0x20e42fbeac0 <line:123:1, line:126:1> line:123:34 mktime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x20e42fbe980 <col:41, col:53> col:53 used _Tm 'struct tm *'
| `-CompoundStmt 0x20e42fbec80 <line:124:1, line:126:1>
|   `-ReturnStmt 0x20e42fbec70 <line:125:5, col:25>
|     `-CallExpr 0x20e42fbec30 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x20e42fbec18 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e42fbeb80 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x20e42fba530 '_mktime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x20e42fbec58 <col:22> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x20e42fbeba0 <col:22> 'struct tm *' lvalue ParmVar 0x20e42fbe980 '_Tm' 'struct tm *'
|-FunctionDecl 0x20e42fbed98 <line:127:1, line:130:1> line:127:34 _mkgmtime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x20e42fbecc0 <col:44, col:56> col:56 used _Tm 'struct tm *'
| `-CompoundStmt 0x20e42fbef00 <line:128:1, line:130:1>
|   `-ReturnStmt 0x20e42fbeef0 <line:129:5, col:27>
|     `-CallExpr 0x20e42fbeeb0 <col:12, col:27> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x20e42fbee98 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e42fbee58 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x20e42fba6f0 '_mkgmtime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x20e42fbeed8 <col:24> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x20e42fbee78 <col:24> 'struct tm *' lvalue ParmVar 0x20e42fbecc0 '_Tm' 'struct tm *'
|-FunctionDecl 0x20e42fbf0a0 <line:131:1, line:134:1> line:131:34 time 'time_t (time_t *) __attribute__((cdecl))':'time_t (time_t *)' static inline
| |-ParmVarDecl 0x20e42fbef58 <col:39, col:48> col:48 used _Time 'time_t *'
| `-CompoundStmt 0x20e42fc1290 <line:132:1, line:134:1>
|   `-ReturnStmt 0x20e42fc1280 <line:133:5, col:25>
|     `-CallExpr 0x20e42fc1240 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x20e42fc1228 <col:12> '__time64_t (*)(__time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20e42fbf160 <col:12> '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)' Function 0x20e42fba960 '_time64' '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
|       `-ImplicitCastExpr 0x20e42fc1268 <col:20> 'time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x20e42fbf180 <col:20> 'time_t *' lvalue ParmVar 0x20e42fbef58 '_Time' 'time_t *'
|-VarDecl 0x20e42fc1380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:291:67> col:67 daylight 'int' extern
| `-DeprecatedAttr 0x20e42fc13e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x20e42fc15f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:292:68> col:68 timezone 'long' extern
| `-DeprecatedAttr 0x20e42fc1658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x20e42fc18f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:293:76> col:68 tzname 'char *[2]' extern
| `-DeprecatedAttr 0x20e42fc1958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20e42fc1bf0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:297:63> col:53 tzset 'void (void) __attribute__((cdecl))':'void (void)'
| `-DeprecatedAttr 0x20e42fc1c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tzset. See online help for details." ""
|-FunctionDecl 0x20e42fc1f60 <.//openssl//file_jk/after\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x20e42fc1dc8 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x20e42fc1e48 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x20e42fc7230 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x20e42fc2038 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x20e42fc20b8 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x20e42fc72e0 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x20e42fc73b8 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x20e42fc7428 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x20e42fc7498 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x20e42fc7508 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x20e42fc7578 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x20e42fc75e8 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x20e42fc7658 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x20e42fc76c8 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x20e42fc7768 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x20e42fc7908 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x20e42fc7978 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x20e42fc79d0 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x20e42fc7ae8 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x20e42fc7a90 'struct mime_param_st' sugar
|   `-RecordType 0x20e42fc7a70 'struct mime_param_st'
|     `-Record 0x20e42fc79d0 'mime_param_st'
|-FunctionDecl 0x20e42fc7c90 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x20e42fc7b90 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x20e42fc7d50 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x20e42fc7e68 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x20e42fc7e10 'struct mime_header_st' sugar
|   `-RecordType 0x20e42fc7df0 'struct mime_header_st'
|     `-Record 0x20e42fc7d50 'mime_header_st'
|-FunctionDecl 0x20e42fc8010 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x20e42fc7f10 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x20e42fc8160 <line:46:1, col:32> col:20 used _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x20e42fc5368 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x20e42fc5210 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x20e42fc5290 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x20e42fc5590 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x20e42fc5438 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x20e42fc54b8 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x20e42fc5850 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x20e42fc5660 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x20e42fc56e0 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x20e42fc5760 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x20e42fc5a88 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x20e42fc5928 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x20e42fc59a8 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x20e42fc5d40 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x20e42fc5b58 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x20e42fc5bd8 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x20e42fc5c58 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x20e42fc5fc0 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x20e42fc5e18 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x20e42fc5e98 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x20e42fc5f18 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x20e42fc8240 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x20e42fc6098 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x20e42fc6118 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x20e42fc8428 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x20e42fc8310 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x20e42fc8390 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x20e42fc87e0 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x20e42fc84f0 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x20e42fc85d8 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x20e42fc8660 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x20e42fc86e0 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x20e42fc8b40 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x20e42fc88c0 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x20e42fc8940 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x20e42fc89c0 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x20e42fc8a40 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x20e42fc8e08 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x20e42fc8c20 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x20e42fc8ca0 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x20e42fc8d20 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x20e42fc9080 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x20e42fc8ee0 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x20e42fc8f60 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x20e42fc8fe0 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x20e42fc3220 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x20e42fc9158 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x20e42fc91d8 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x20e42fc3510 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x20e42fc32f0 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x20e42fc33a8 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x20e42fc3428 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x20e42fc3740 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x20e42fc35e0 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x20e42fc3668 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x20e42fc39c0 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x20e42fc3810 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x20e42fc3898 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x20e42fc3918 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x20e42fc3bb8 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x20e42fc3a90 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x20e42fc3b18 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x20e42fc3e38 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x20e42fc3c88 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x20e42fc3d10 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x20e42fc3d90 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x20e42fc6220 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x20e42fc3f08 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x20e42fc3f88 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x20e42fc4010 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x20e42fc4090 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x20e42fc64e0 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x20e42fc62f8 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x20e42fc6378 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x20e42fc63f8 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x20e42fc66e0 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:20:1, line:135:1> line:20:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x20e42fc65c0 <col:32, col:43> col:43 used tm 'struct tm *'
| |-ParmVarDecl 0x20e42fc6640 <col:47, col:75> col:75 invalid d 'const int *'
| `-CompoundStmt 0x20e42fcf8b8 <line:21:1, line:135:1>
|   |-DeclStmt 0x20e42fc6b80 <line:22:5, col:60>
|   | `-VarDecl 0x20e42fc6890 <col:5, col:59> col:22 used min 'const int [9]' static cinit
|   |   `-InitListExpr 0x20e42fc6af8 <col:31, col:59> 'const int [9]'
|   |     |-IntegerLiteral 0x20e42fc68f8 <col:33> 'int' 0
|   |     |-IntegerLiteral 0x20e42fc6920 <col:36> 'int' 0
|   |     |-IntegerLiteral 0x20e42fc6948 <col:39> 'int' 1
|   |     |-IntegerLiteral 0x20e42fc6970 <col:42> 'int' 1
|   |     |-IntegerLiteral 0x20e42fc6998 <col:45> 'int' 0
|   |     |-IntegerLiteral 0x20e42fc69c0 <col:48> 'int' 0
|   |     |-IntegerLiteral 0x20e42fc69e8 <col:51> 'int' 0
|   |     |-IntegerLiteral 0x20e42fc6a10 <col:54> 'int' 0
|   |     `-IntegerLiteral 0x20e42fc6a38 <col:57> 'int' 0
|   |-DeclStmt 0x20e42fc6ef0 <line:23:5, col:69>
|   | `-VarDecl 0x20e42fc6c00 <col:5, col:68> col:22 used max 'const int [9]' static cinit
|   |   `-InitListExpr 0x20e42fc6e68 <col:31, col:68> 'const int [9]'
|   |     |-IntegerLiteral 0x20e42fc6c68 <col:33> 'int' 99
|   |     |-IntegerLiteral 0x20e42fc6c90 <col:37> 'int' 99
|   |     |-IntegerLiteral 0x20e42fc6cb8 <col:41> 'int' 12
|   |     |-IntegerLiteral 0x20e42fc6ce0 <col:45> 'int' 31
|   |     |-IntegerLiteral 0x20e42fc6d08 <col:49> 'int' 23
|   |     |-IntegerLiteral 0x20e42fc6d30 <col:53> 'int' 59
|   |     |-IntegerLiteral 0x20e42fc6d58 <col:57> 'int' 59
|   |     |-IntegerLiteral 0x20e42fc6d80 <col:61> 'int' 12
|   |     `-IntegerLiteral 0x20e42fc6da8 <col:65> 'int' 59
|   |-DeclStmt 0x20e42fc6f88 <line:24:5, col:12>
|   | `-VarDecl 0x20e42fc6f20 <col:5, col:11> col:11 used a 'char *'
|   |-DeclStmt 0x20e42fc71c8 <line:25:5, col:19>
|   | |-VarDecl 0x20e42fc6fb8 <col:5, col:9> col:9 used n 'int'
|   | |-VarDecl 0x20e42fc7038 <col:5, col:12> col:12 used i 'int'
|   | |-VarDecl 0x20e42fc70b8 <col:5, col:15> col:15 used l 'int'
|   | `-VarDecl 0x20e42fc7138 <col:5, col:18> col:18 used o 'int'
|   |-IfStmt 0x20e42fc4248 <line:27:5, line:28:18>
|   | |-OpaqueValueExpr 0x20e42fc4230 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20e42fc4220 <col:9, col:18>
|   |   `-ParenExpr 0x20e42fc4200 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x20e42fc71e0 <col:17> 'int' 0
|   |-BinaryOperator 0x20e42fc4330 <line:31:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x20e42fc42d0 <col:5> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   | `-IntegerLiteral 0x20e42fc4308 <col:9> 'int' 0
|   |-IfStmt 0x20e42fc4438 <line:37:5, line:38:14>
|   | |-BinaryOperator 0x20e42fc43b0 <line:37:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x20e42fc4398 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e42fc4350 <col:9> 'int' lvalue Var 0x20e42fc70b8 'l' 'int'
|   | | `-IntegerLiteral 0x20e42fc4370 <col:13> 'int' 13
|   | `-GotoStmt 0x20e42fc4420 <line:38:9, col:14> 'err' 0x20e42fc43d0
|   |-ForStmt 0x20e42fcb378 <line:39:5, line:85:5>
|   | |-BinaryOperator 0x20e42fc44b0 <line:39:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x20e42fc4450 <col:10> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   | | `-IntegerLiteral 0x20e42fc4488 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x20e42fc4530 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x20e42fc4518 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e42fc44d0 <col:17> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   | | `-IntegerLiteral 0x20e42fc44f0 <col:21> 'int' 7
|   | |-UnaryOperator 0x20e42fc4570 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x20e42fc4550 <col:24> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   | `-CompoundStmt 0x20e42fcb320 <col:29, line:85:5>
|   |   |-IfStmt 0x20e42fc4b70 <line:40:9, line:45:9>
|   |   | |-BinaryOperator 0x20e42fc49d0 <line:40:13, col:73> 'int' '&&'
|   |   | | |-ParenExpr 0x20e42fc4608 <col:13, col:20> 'int'
|   |   | | | `-BinaryOperator 0x20e42fc45e8 <col:14, col:19> 'int' '=='
|   |   | | |   |-ImplicitCastExpr 0x20e42fc45d0 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x20e42fc4588 <col:14> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   | | |   `-IntegerLiteral 0x20e42fc45a8 <col:19> 'int' 6
|   |   | | `-ParenExpr 0x20e42fc49b0 <col:25, col:73> 'int'
|   |   | |   `-BinaryOperator 0x20e42fc4990 <col:26, col:72> 'int' '||'
|   |   | |     |-BinaryOperator 0x20e42fc4858 <col:26, col:55> 'int' '||'
|   |   | |     | |-ParenExpr 0x20e42fc4720 <col:26, col:38> 'int'
|   |   | |     | | `-BinaryOperator 0x20e42fc4700 <col:27, col:35> 'int' '=='
|   |   | |     | |   |-ImplicitCastExpr 0x20e42fc46e8 <col:27, col:30> 'int' <IntegralCast>
|   |   | |     | |   | `-ImplicitCastExpr 0x20e42fc46d0 <col:27, col:30> 'char' <LValueToRValue>
|   |   | |     | |   |   `-ArraySubscriptExpr 0x20e42fc4698 <col:27, col:30> 'char' lvalue
|   |   | |     | |   |     |-ImplicitCastExpr 0x20e42fc4668 <col:27> 'char *' <LValueToRValue>
|   |   | |     | |   |     | `-DeclRefExpr 0x20e42fc4628 <col:27> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |     | |   |     `-ImplicitCastExpr 0x20e42fc4680 <col:29> 'int' <LValueToRValue>
|   |   | |     | |   |       `-DeclRefExpr 0x20e42fc4648 <col:29> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |     | |   `-CharacterLiteral 0x20e42fc46b8 <col:35> 'int' 90
|   |   | |     | `-ParenExpr 0x20e42fc4838 <col:43, col:55> 'int'
|   |   | |     |   `-BinaryOperator 0x20e42fc4818 <col:44, col:52> 'int' '=='
|   |   | |     |     |-ImplicitCastExpr 0x20e42fc4800 <col:44, col:47> 'int' <IntegralCast>
|   |   | |     |     | `-ImplicitCastExpr 0x20e42fc47e8 <col:44, col:47> 'char' <LValueToRValue>
|   |   | |     |     |   `-ArraySubscriptExpr 0x20e42fc47b0 <col:44, col:47> 'char' lvalue
|   |   | |     |     |     |-ImplicitCastExpr 0x20e42fc4780 <col:44> 'char *' <LValueToRValue>
|   |   | |     |     |     | `-DeclRefExpr 0x20e42fc4740 <col:44> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |     |     |     `-ImplicitCastExpr 0x20e42fc4798 <col:46> 'int' <LValueToRValue>
|   |   | |     |     |       `-DeclRefExpr 0x20e42fc4760 <col:46> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |     |     `-CharacterLiteral 0x20e42fc47d0 <col:52> 'int' 43
|   |   | |     `-ParenExpr 0x20e42fc4970 <col:60, col:72> 'int'
|   |   | |       `-BinaryOperator 0x20e42fc4950 <col:61, col:69> 'int' '=='
|   |   | |         |-ImplicitCastExpr 0x20e42fc4938 <col:61, col:64> 'int' <IntegralCast>
|   |   | |         | `-ImplicitCastExpr 0x20e42fc4920 <col:61, col:64> 'char' <LValueToRValue>
|   |   | |         |   `-ArraySubscriptExpr 0x20e42fc48e8 <col:61, col:64> 'char' lvalue
|   |   | |         |     |-ImplicitCastExpr 0x20e42fc48b8 <col:61> 'char *' <LValueToRValue>
|   |   | |         |     | `-DeclRefExpr 0x20e42fc4878 <col:61> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |         |     `-ImplicitCastExpr 0x20e42fc48d0 <col:63> 'int' <LValueToRValue>
|   |   | |         |       `-DeclRefExpr 0x20e42fc4898 <col:63> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |         `-CharacterLiteral 0x20e42fc4908 <col:69> 'int' 45
|   |   | `-CompoundStmt 0x20e42fc4b48 <col:76, line:45:9>
|   |   |   |-UnaryOperator 0x20e42fc4a10 <line:41:13, col:14> 'int' postfix '++'
|   |   |   | `-DeclRefExpr 0x20e42fc49f0 <col:13> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   |   |-IfStmt 0x20e42fc4b28 <line:42:13, line:43:30>
|   |   |   | |-ImplicitCastExpr 0x20e42fc4a60 <line:42:17> 'struct tm *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x20e42fc4a28 <col:17> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |   |   | `-BinaryOperator 0x20e42fc4b08 <line:43:17, col:30> 'int' '='
|   |   |   |   |-MemberExpr 0x20e42fc4ab0 <col:17, col:21> 'int' lvalue ->tm_sec 0x20e42fae998
|   |   |   |   | `-ImplicitCastExpr 0x20e42fc4a98 <col:17> 'struct tm *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x20e42fc4a78 <col:17> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |   |   |   `-IntegerLiteral 0x20e42fc4ae0 <col:30> 'int' 0
|   |   |   `-BreakStmt 0x20e42fc4b40 <line:44:13>
|   |   |-IfStmt 0x20e42fc4df0 <line:46:9, line:47:18>
|   |   | |-BinaryOperator 0x20e42fc4db8 <line:46:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x20e42fc4c80 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x20e42fc4c60 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x20e42fc4c48 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x20e42fc4c30 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x20e42fc4bf8 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x20e42fc4bc8 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x20e42fc4b88 <col:14> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x20e42fc4be0 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x20e42fc4ba8 <col:16> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x20e42fc4c18 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x20e42fc4d98 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x20e42fc4d78 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x20e42fc4d60 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x20e42fc4d48 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x20e42fc4d10 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x20e42fc4ce0 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x20e42fc4ca0 <col:30> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x20e42fc4cf8 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x20e42fc4cc0 <col:32> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |     `-CharacterLiteral 0x20e42fc4d30 <col:37> 'int' 57
|   |   | `-GotoStmt 0x20e42fc4dd8 <line:47:13, col:18> 'err' 0x20e42fc43d0
|   |   |-BinaryOperator 0x20e42fc4f38 <line:48:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x20e42fc4e08 <col:9> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   | `-BinaryOperator 0x20e42fc4f18 <col:13, col:20> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x20e42fc4f00 <col:13, col:16> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x20e42fc4ee8 <col:13, col:16> 'char' <LValueToRValue>
|   |   |   |   `-ArraySubscriptExpr 0x20e42fc4eb0 <col:13, col:16> 'char' lvalue
|   |   |   |     |-ImplicitCastExpr 0x20e42fc4e80 <col:13> 'char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x20e42fc4e40 <col:13> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   |   |     `-ImplicitCastExpr 0x20e42fc4e98 <col:15> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x20e42fc4e60 <col:15> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   |   `-CharacterLiteral 0x20e42fc4ed0 <col:20> 'int' 48
|   |   |-IfStmt 0x20e42fc5000 <line:49:9, line:50:18>
|   |   | |-BinaryOperator 0x20e42fc4fc8 <line:49:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x20e42fc4f78 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x20e42fc4f58 <col:15> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x20e42fc4fb0 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x20e42fc4f90 <col:19> 'int' lvalue Var 0x20e42fc70b8 'l' 'int'
|   |   | `-GotoStmt 0x20e42fc4fe8 <line:50:13, col:18> 'err' 0x20e42fc43d0
|   |   |-IfStmt 0x20e42fc2270 <line:52:9, line:53:18>
|   |   | |-BinaryOperator 0x20e42fc2238 <line:52:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x20e42fc5110 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x20e42fc50f0 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x20e42fc50d8 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x20e42fc50c0 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x20e42fc5088 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x20e42fc5058 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x20e42fc5018 <col:14> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x20e42fc5070 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x20e42fc5038 <col:16> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x20e42fc50a8 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x20e42fc2218 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x20e42fc21f8 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x20e42fc21e0 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x20e42fc51d8 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x20e42fc51a0 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x20e42fc5170 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x20e42fc5130 <col:30> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x20e42fc5188 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x20e42fc5150 <col:32> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |     `-CharacterLiteral 0x20e42fc51c0 <col:37> 'int' 57
|   |   | `-GotoStmt 0x20e42fc2258 <line:53:13, col:18> 'err' 0x20e42fc43d0
|   |   |-BinaryOperator 0x20e42fc2460 <line:54:9, col:31> 'int' '='
|   |   | |-DeclRefExpr 0x20e42fc2288 <col:9> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   | `-BinaryOperator 0x20e42fc2440 <col:13, col:31> 'int' '-'
|   |   |   |-BinaryOperator 0x20e42fc2408 <col:13, col:27> 'int' '+'
|   |   |   | |-ParenExpr 0x20e42fc2328 <col:13, col:20> 'int'
|   |   |   | | `-BinaryOperator 0x20e42fc2308 <col:14, col:18> 'int' '*'
|   |   |   | |   |-ImplicitCastExpr 0x20e42fc22f0 <col:14> 'int' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x20e42fc22a8 <col:14> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   |   | |   `-IntegerLiteral 0x20e42fc22c8 <col:18> 'int' 10
|   |   |   | `-ImplicitCastExpr 0x20e42fc23f0 <col:24, col:27> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x20e42fc23d8 <col:24, col:27> 'char' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x20e42fc23b8 <col:24, col:27> 'char' lvalue
|   |   |   |       |-ImplicitCastExpr 0x20e42fc2388 <col:24> 'char *' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x20e42fc2348 <col:24> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   |   |       `-ImplicitCastExpr 0x20e42fc23a0 <col:26> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x20e42fc2368 <col:26> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   |   `-CharacterLiteral 0x20e42fc2428 <col:31> 'int' 48
|   |   |-IfStmt 0x20e42fc2528 <line:55:9, line:56:18>
|   |   | |-BinaryOperator 0x20e42fc24f0 <line:55:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x20e42fc24a0 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x20e42fc2480 <col:15> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x20e42fc24d8 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x20e42fc24b8 <col:19> 'int' lvalue Var 0x20e42fc70b8 'l' 'int'
|   |   | `-GotoStmt 0x20e42fc2510 <line:56:13, col:18> 'err' 0x20e42fc43d0
|   |   |-IfStmt 0x20e42fc27e8 <line:58:9, line:59:18>
|   |   | |-BinaryOperator 0x20e42fc27b0 <line:58:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x20e42fc2658 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x20e42fc2638 <col:14, col:23> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x20e42fc2608 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x20e42fc2540 <col:14> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   | | |   `-ImplicitCastExpr 0x20e42fc2620 <col:18, col:23> 'int' <LValueToRValue>
|   |   | | |     `-ArraySubscriptExpr 0x20e42fc25e8 <col:18, col:23> 'const int' lvalue
|   |   | | |       |-ImplicitCastExpr 0x20e42fc25b8 <col:18> 'const int *' <ArrayToPointerDecay>
|   |   | | |       | `-DeclRefExpr 0x20e42fc2560 <col:18> 'const int [9]' lvalue Var 0x20e42fc6890 'min' 'const int [9]'
|   |   | | |       `-ImplicitCastExpr 0x20e42fc25d0 <col:22> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x20e42fc2598 <col:22> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   | | `-ParenExpr 0x20e42fc2790 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x20e42fc2770 <col:30, col:39> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x20e42fc2740 <col:30> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x20e42fc2678 <col:30> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   | |     `-ImplicitCastExpr 0x20e42fc2758 <col:34, col:39> 'int' <LValueToRValue>
|   |   | |       `-ArraySubscriptExpr 0x20e42fc2720 <col:34, col:39> 'const int' lvalue
|   |   | |         |-ImplicitCastExpr 0x20e42fc26f0 <col:34> 'const int *' <ArrayToPointerDecay>
|   |   | |         | `-DeclRefExpr 0x20e42fc2698 <col:34> 'const int [9]' lvalue Var 0x20e42fc6c00 'max' 'const int [9]'
|   |   | |         `-ImplicitCastExpr 0x20e42fc2708 <col:38> 'int' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x20e42fc26d0 <col:38> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   | `-GotoStmt 0x20e42fc27d0 <line:59:13, col:18> 'err' 0x20e42fc43d0
|   |   `-IfStmt 0x20e42fcb308 <line:60:9, line:84:9>
|   |     |-ImplicitCastExpr 0x20e42fc2820 <line:60:13> 'struct tm *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x20e42fc2800 <col:13> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |     `-CompoundStmt 0x20e42fcb2f0 <col:17, line:84:9>
|   |       `-SwitchStmt 0x20e42fc2870 <line:61:13, line:83:13>
|   |         |-ImplicitCastExpr 0x20e42fc2858 <line:61:21> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x20e42fc2838 <col:21> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |         `-CompoundStmt 0x20e42fcb270 <col:24, line:83:13>
|   |           |-CaseStmt 0x20e42fc28d0 <line:62:13, line:63:41>
|   |           | |-ConstantExpr 0x20e42fc28b8 <line:62:18> 'int'
|   |           | | `-IntegerLiteral 0x20e42fc2890 <col:18> 'int' 0
|   |           | `-BinaryOperator 0x20e42fc2a28 <line:63:17, col:41> 'int' '='
|   |           |   |-MemberExpr 0x20e42fc2930 <col:17, col:21> 'int' lvalue ->tm_year 0x20e42faebc8
|   |           |   | `-ImplicitCastExpr 0x20e42fc2918 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x20e42fc28f8 <col:17> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |           |   `-BinaryOperator 0x20e42fc2a08 <col:31, col:41> 'int' '-'
|   |           |     |-BinaryOperator 0x20e42fc29c0 <col:31, col:35> 'int' '*'
|   |           |     | |-ImplicitCastExpr 0x20e42fc29a8 <col:31> 'int' <LValueToRValue>
|   |           |     | | `-DeclRefExpr 0x20e42fc2960 <col:31> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |           |     | `-IntegerLiteral 0x20e42fc2980 <col:35> 'int' 100
|   |           |     `-IntegerLiteral 0x20e42fc29e0 <col:41> 'int' 1900
|   |           |-BreakStmt 0x20e42fc2a48 <line:64:17>
|   |           |-CaseStmt 0x20e42fc2a90 <line:65:13, line:66:32>
|   |           | |-ConstantExpr 0x20e42fc2a78 <line:65:18> 'int'
|   |           | | `-IntegerLiteral 0x20e42fc2a50 <col:18> 'int' 1
|   |           | `-CompoundAssignOperator 0x20e42fc2b58 <line:66:17, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           |   |-MemberExpr 0x20e42fc2af0 <col:17, col:21> 'int' lvalue ->tm_year 0x20e42faebc8
|   |           |   | `-ImplicitCastExpr 0x20e42fc2ad8 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x20e42fc2ab8 <col:17> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x20e42fc2b40 <col:32> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x20e42fc2b20 <col:32> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |           |-BreakStmt 0x20e42fc2b88 <line:67:17>
|   |           |-CaseStmt 0x20e42fc2bd0 <line:68:13, line:69:34>
|   |           | |-ConstantExpr 0x20e42fc2bb8 <line:68:18> 'int'
|   |           | | `-IntegerLiteral 0x20e42fc2b90 <col:18> 'int' 2
|   |           | `-BinaryOperator 0x20e42fc2ce0 <line:69:17, col:34> 'int' '='
|   |           |   |-MemberExpr 0x20e42fc2c30 <col:17, col:21> 'int' lvalue ->tm_mon 0x20e42faeb58
|   |           |   | `-ImplicitCastExpr 0x20e42fc2c18 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x20e42fc2bf8 <col:17> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |           |   `-BinaryOperator 0x20e42fc2cc0 <col:30, col:34> 'int' '-'
|   |           |     |-ImplicitCastExpr 0x20e42fc2ca8 <col:30> 'int' <LValueToRValue>
|   |           |     | `-DeclRefExpr 0x20e42fc2c60 <col:30> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |           |     `-IntegerLiteral 0x20e42fc2c80 <col:34> 'int' 1
|   |           |-BreakStmt 0x20e42fc2d00 <line:70:17>
|   |           |-CaseStmt 0x20e42fc2d48 <line:71:13, line:72:31>
|   |           | |-ConstantExpr 0x20e42fc2d30 <line:71:18> 'int'
|   |           | | `-IntegerLiteral 0x20e42fc2d08 <col:18> 'int' 3
|   |           | `-BinaryOperator 0x20e42fc2e10 <line:72:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x20e42fc2da8 <col:17, col:21> 'int' lvalue ->tm_mday 0x20e42faeae8
|   |           |   | `-ImplicitCastExpr 0x20e42fc2d90 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x20e42fc2d70 <col:17> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x20e42fc2df8 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x20e42fc2dd8 <col:31> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |           |-BreakStmt 0x20e42fc2e30 <line:73:17>
|   |           |-CaseStmt 0x20e42fc2e78 <line:74:13, line:75:31>
|   |           | |-ConstantExpr 0x20e42fc2e60 <line:74:18> 'int'
|   |           | | `-IntegerLiteral 0x20e42fc2e38 <col:18> 'int' 4
|   |           | `-BinaryOperator 0x20e42fc2f40 <line:75:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x20e42fc2ed8 <col:17, col:21> 'int' lvalue ->tm_hour 0x20e42faea78
|   |           |   | `-ImplicitCastExpr 0x20e42fc2ec0 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x20e42fc2ea0 <col:17> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x20e42fc2f28 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x20e42fc2f08 <col:31> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |           |-BreakStmt 0x20e42fc2f60 <line:76:17>
|   |           |-CaseStmt 0x20e42fc2fa8 <line:77:13, line:78:30>
|   |           | |-ConstantExpr 0x20e42fc2f90 <line:77:18> 'int'
|   |           | | `-IntegerLiteral 0x20e42fc2f68 <col:18> 'int' 5
|   |           | `-BinaryOperator 0x20e42fc3070 <line:78:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x20e42fc3008 <col:17, col:21> 'int' lvalue ->tm_min 0x20e42faea08
|   |           |   | `-ImplicitCastExpr 0x20e42fc2ff0 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x20e42fc2fd0 <col:17> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x20e42fc3058 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x20e42fc3038 <col:30> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |           |-BreakStmt 0x20e42fc3090 <line:79:17>
|   |           |-CaseStmt 0x20e42fc30d8 <line:80:13, line:81:30>
|   |           | |-ConstantExpr 0x20e42fc30c0 <line:80:18> 'int'
|   |           | | `-IntegerLiteral 0x20e42fc3098 <col:18> 'int' 6
|   |           | `-BinaryOperator 0x20e42fc31a0 <line:81:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x20e42fc3138 <col:17, col:21> 'int' lvalue ->tm_sec 0x20e42fae998
|   |           |   | `-ImplicitCastExpr 0x20e42fc3120 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x20e42fc3100 <col:17> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x20e42fc3188 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x20e42fc3168 <col:30> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |           `-BreakStmt 0x20e42fc31c0 <line:82:17>
|   |-IfStmt 0x20e42fcba40 <line:90:5, line:99:5>
|   | |-BinaryOperator 0x20e42fcb488 <line:90:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x20e42fcb470 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x20e42fcb458 <col:9, col:12> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x20e42fcb420 <col:9, col:12> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x20e42fcb3f0 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x20e42fcb3b0 <col:9> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   | | |     `-ImplicitCastExpr 0x20e42fcb408 <col:11> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x20e42fcb3d0 <col:11> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   | | `-CharacterLiteral 0x20e42fcb440 <col:17> 'int' 46
|   | `-CompoundStmt 0x20e42fcba10 <col:22, line:99:5>
|   |   |-IfStmt 0x20e42fcb550 <line:91:9, line:92:18>
|   |   | |-BinaryOperator 0x20e42fcb518 <line:91:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x20e42fcb4c8 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x20e42fcb4a8 <col:15> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x20e42fcb500 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x20e42fcb4e0 <col:19> 'int' lvalue Var 0x20e42fc70b8 'l' 'int'
|   |   | `-GotoStmt 0x20e42fcb538 <line:92:13, col:18> 'err' 0x20e42fc43d0
|   |   |-BinaryOperator 0x20e42fcb5c0 <line:93:9, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x20e42fcb568 <col:9> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   | `-ImplicitCastExpr 0x20e42fcb5a8 <col:13> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x20e42fcb588 <col:13> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   |-WhileStmt 0x20e42fcb938 <line:94:9, line:95:14>
|   |   | |-BinaryOperator 0x20e42fcb8e0 <line:94:16, col:57> 'int' '&&'
|   |   | | |-BinaryOperator 0x20e42fcb810 <col:16, col:45> 'int' '&&'
|   |   | | | |-ParenExpr 0x20e42fcb6d8 <col:16, col:28> 'int'
|   |   | | | | `-BinaryOperator 0x20e42fcb6b8 <col:17, col:25> 'int' '>='
|   |   | | | |   |-ImplicitCastExpr 0x20e42fcb6a0 <col:17, col:20> 'int' <IntegralCast>
|   |   | | | |   | `-ImplicitCastExpr 0x20e42fcb688 <col:17, col:20> 'char' <LValueToRValue>
|   |   | | | |   |   `-ArraySubscriptExpr 0x20e42fcb650 <col:17, col:20> 'char' lvalue
|   |   | | | |   |     |-ImplicitCastExpr 0x20e42fcb620 <col:17> 'char *' <LValueToRValue>
|   |   | | | |   |     | `-DeclRefExpr 0x20e42fcb5e0 <col:17> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | | | |   |     `-ImplicitCastExpr 0x20e42fcb638 <col:19> 'int' <LValueToRValue>
|   |   | | | |   |       `-DeclRefExpr 0x20e42fcb600 <col:19> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | | | |   `-CharacterLiteral 0x20e42fcb670 <col:25> 'int' 48
|   |   | | | `-ParenExpr 0x20e42fcb7f0 <col:33, col:45> 'int'
|   |   | | |   `-BinaryOperator 0x20e42fcb7d0 <col:34, col:42> 'int' '<='
|   |   | | |     |-ImplicitCastExpr 0x20e42fcb7b8 <col:34, col:37> 'int' <IntegralCast>
|   |   | | |     | `-ImplicitCastExpr 0x20e42fcb7a0 <col:34, col:37> 'char' <LValueToRValue>
|   |   | | |     |   `-ArraySubscriptExpr 0x20e42fcb768 <col:34, col:37> 'char' lvalue
|   |   | | |     |     |-ImplicitCastExpr 0x20e42fcb738 <col:34> 'char *' <LValueToRValue>
|   |   | | |     |     | `-DeclRefExpr 0x20e42fcb6f8 <col:34> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | | |     |     `-ImplicitCastExpr 0x20e42fcb750 <col:36> 'int' <LValueToRValue>
|   |   | | |     |       `-DeclRefExpr 0x20e42fcb718 <col:36> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | | |     `-CharacterLiteral 0x20e42fcb788 <col:42> 'int' 57
|   |   | | `-ParenExpr 0x20e42fcb8c0 <col:50, col:57> 'int'
|   |   | |   `-BinaryOperator 0x20e42fcb8a0 <col:51, col:56> 'int' '<='
|   |   | |     |-ImplicitCastExpr 0x20e42fcb870 <col:51> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x20e42fcb830 <col:51> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |     `-ImplicitCastExpr 0x20e42fcb888 <col:56> 'int' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x20e42fcb850 <col:56> 'int' lvalue Var 0x20e42fc70b8 'l' 'int'
|   |   | `-UnaryOperator 0x20e42fcb920 <line:95:13, col:14> 'int' postfix '++'
|   |   |   `-DeclRefExpr 0x20e42fcb900 <col:13> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   `-IfStmt 0x20e42fcb9f8 <line:97:9, line:98:18>
|   |     |-BinaryOperator 0x20e42fcb9c0 <line:97:13, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x20e42fcb990 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x20e42fcb950 <col:13> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |     | `-ImplicitCastExpr 0x20e42fcb9a8 <col:18> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x20e42fcb970 <col:18> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |     `-GotoStmt 0x20e42fcb9e0 <line:98:13, col:18> 'err' 0x20e42fc43d0
|   |-IfStmt 0x20e42fcf760 <line:101:5, line:131:5> has_else
|   | |-BinaryOperator 0x20e42fcbb30 <line:101:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x20e42fcbb18 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x20e42fcbb00 <col:9, col:12> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x20e42fcbac8 <col:9, col:12> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x20e42fcba98 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x20e42fcba58 <col:9> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   | | |     `-ImplicitCastExpr 0x20e42fcbab0 <col:11> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x20e42fcba78 <col:11> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   | | `-CharacterLiteral 0x20e42fcbae8 <col:17> 'int' 90
|   | |-UnaryOperator 0x20e42fcbb70 <line:102:9, col:10> 'int' postfix '++'
|   | | `-DeclRefExpr 0x20e42fcbb50 <col:9> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   | `-IfStmt 0x20e42fcf738 <line:103:10, line:131:5> has_else
|   |   |-BinaryOperator 0x20e42fcbdb8 <line:103:14, col:43> 'int' '||'
|   |   | |-ParenExpr 0x20e42fcbc80 <col:14, col:26> 'int'
|   |   | | `-BinaryOperator 0x20e42fcbc60 <col:15, col:23> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x20e42fcbc48 <col:15, col:18> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x20e42fcbc30 <col:15, col:18> 'char' <LValueToRValue>
|   |   | |   |   `-ArraySubscriptExpr 0x20e42fcbbf8 <col:15, col:18> 'char' lvalue
|   |   | |   |     |-ImplicitCastExpr 0x20e42fcbbc8 <col:15> 'char *' <LValueToRValue>
|   |   | |   |     | `-DeclRefExpr 0x20e42fcbb88 <col:15> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |   |     `-ImplicitCastExpr 0x20e42fcbbe0 <col:17> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x20e42fcbba8 <col:17> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |   `-CharacterLiteral 0x20e42fcbc18 <col:23> 'int' 43
|   |   | `-ParenExpr 0x20e42fcbd98 <col:31, col:43> 'int'
|   |   |   `-BinaryOperator 0x20e42fcbd78 <col:32, col:40> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x20e42fcbd60 <col:32, col:35> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x20e42fcbd48 <col:32, col:35> 'char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x20e42fcbd10 <col:32, col:35> 'char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x20e42fcbce0 <col:32> 'char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x20e42fcbca0 <col:32> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   |     |     `-ImplicitCastExpr 0x20e42fcbcf8 <col:34> 'int' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x20e42fcbcc0 <col:34> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   |     `-CharacterLiteral 0x20e42fcbd30 <col:40> 'int' 45
|   |   |-CompoundStmt 0x20e42fcf610 <col:46, line:128:5>
|   |   | |-DeclStmt 0x20e42fcc0a8 <line:104:9, col:55>
|   |   | | |-VarDecl 0x20e42fcbdf0 <col:9, col:42> col:13 used offsign 'int' cinit
|   |   | | | `-ConditionalOperator 0x20e42fcbfb8 <col:23, col:42> 'int'
|   |   | | |   |-BinaryOperator 0x20e42fcbf30 <col:23, col:31> 'int' '=='
|   |   | | |   | |-ImplicitCastExpr 0x20e42fcbf18 <col:23, col:26> 'int' <IntegralCast>
|   |   | | |   | | `-ImplicitCastExpr 0x20e42fcbf00 <col:23, col:26> 'char' <LValueToRValue>
|   |   | | |   | |   `-ArraySubscriptExpr 0x20e42fcbec8 <col:23, col:26> 'char' lvalue
|   |   | | |   | |     |-ImplicitCastExpr 0x20e42fcbe98 <col:23> 'char *' <LValueToRValue>
|   |   | | |   | |     | `-DeclRefExpr 0x20e42fcbe58 <col:23> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | | |   | |     `-ImplicitCastExpr 0x20e42fcbeb0 <col:25> 'int' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x20e42fcbe78 <col:25> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | | |   | `-CharacterLiteral 0x20e42fcbee8 <col:31> 'int' 45
|   |   | | |   |-IntegerLiteral 0x20e42fcbf50 <col:37> 'int' 1
|   |   | | |   `-UnaryOperator 0x20e42fcbfa0 <col:41, col:42> 'int' prefix '-'
|   |   | | |     `-IntegerLiteral 0x20e42fcbf78 <col:42> 'int' 1
|   |   | | `-VarDecl 0x20e42fcc000 <col:9, col:54> col:45 used offset 'int' cinit
|   |   | |   `-IntegerLiteral 0x20e42fcc068 <col:54> 'int' 0
|   |   | |-UnaryOperator 0x20e42fcc0e0 <line:105:9, col:10> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x20e42fcc0c0 <col:9> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |-IfStmt 0x20e42fcc1e8 <line:106:9, line:107:18>
|   |   | | |-BinaryOperator 0x20e42fcc1b0 <line:106:13, col:21> 'int' '>'
|   |   | | | |-BinaryOperator 0x20e42fcc158 <col:13, col:17> 'int' '+'
|   |   | | | | |-ImplicitCastExpr 0x20e42fcc140 <col:13> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x20e42fcc0f8 <col:13> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | | | | `-IntegerLiteral 0x20e42fcc118 <col:17> 'int' 4
|   |   | | | `-ImplicitCastExpr 0x20e42fcc198 <col:21> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x20e42fcc178 <col:21> 'int' lvalue Var 0x20e42fc70b8 'l' 'int'
|   |   | | `-GotoStmt 0x20e42fcc1d0 <line:107:13, col:18> 'err' 0x20e42fc43d0
|   |   | |-ForStmt 0x20e42fce218 <line:108:9, line:125:9>
|   |   | | |-BinaryOperator 0x20e42fcc248 <line:108:14, col:18> 'int' '='
|   |   | | | |-DeclRefExpr 0x20e42fcc200 <col:14> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   | | | `-IntegerLiteral 0x20e42fcc220 <col:18> 'int' 7
|   |   | | |-<<<NULL>>>
|   |   | | |-BinaryOperator 0x20e42fcd2f0 <col:21, col:25> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x20e42fcd2d8 <col:21> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x20e42fcd290 <col:21> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   | | | `-IntegerLiteral 0x20e42fcd2b0 <col:25> 'int' 9
|   |   | | |-UnaryOperator 0x20e42fcd330 <col:28, col:29> 'int' postfix '++'
|   |   | | | `-DeclRefExpr 0x20e42fcd310 <col:28> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   | | `-CompoundStmt 0x20e42fce1c8 <col:33, line:125:9>
|   |   | |   |-IfStmt 0x20e42fcd5b0 <line:109:13, line:110:22>
|   |   | |   | |-BinaryOperator 0x20e42fcd578 <line:109:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x20e42fcd440 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x20e42fcd420 <col:18, col:25> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x20e42fcd408 <col:18, col:21> 'int' <IntegralCast>
|   |   | |   | | |   | `-ImplicitCastExpr 0x20e42fcd3f0 <col:18, col:21> 'char' <LValueToRValue>
|   |   | |   | | |   |   `-ArraySubscriptExpr 0x20e42fcd3b8 <col:18, col:21> 'char' lvalue
|   |   | |   | | |   |     |-ImplicitCastExpr 0x20e42fcd388 <col:18> 'char *' <LValueToRValue>
|   |   | |   | | |   |     | `-DeclRefExpr 0x20e42fcd348 <col:18> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |   | | |   |     `-ImplicitCastExpr 0x20e42fcd3a0 <col:20> 'int' <LValueToRValue>
|   |   | |   | | |   |       `-DeclRefExpr 0x20e42fcd368 <col:20> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |   | | |   `-CharacterLiteral 0x20e42fcd3d8 <col:25> 'int' 48
|   |   | |   | | `-ParenExpr 0x20e42fcd558 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x20e42fcd538 <col:34, col:41> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x20e42fcd520 <col:34, col:37> 'int' <IntegralCast>
|   |   | |   | |     | `-ImplicitCastExpr 0x20e42fcd508 <col:34, col:37> 'char' <LValueToRValue>
|   |   | |   | |     |   `-ArraySubscriptExpr 0x20e42fcd4d0 <col:34, col:37> 'char' lvalue
|   |   | |   | |     |     |-ImplicitCastExpr 0x20e42fcd4a0 <col:34> 'char *' <LValueToRValue>
|   |   | |   | |     |     | `-DeclRefExpr 0x20e42fcd460 <col:34> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |   | |     |     `-ImplicitCastExpr 0x20e42fcd4b8 <col:36> 'int' <LValueToRValue>
|   |   | |   | |     |       `-DeclRefExpr 0x20e42fcd480 <col:36> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |   | |     `-CharacterLiteral 0x20e42fcd4f0 <col:41> 'int' 57
|   |   | |   | `-GotoStmt 0x20e42fcd598 <line:110:17, col:22> 'err' 0x20e42fc43d0
|   |   | |   |-BinaryOperator 0x20e42fcd6e0 <line:111:13, col:24> 'int' '='
|   |   | |   | |-DeclRefExpr 0x20e42fcd5c8 <col:13> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   | |   | `-BinaryOperator 0x20e42fcd6c0 <col:17, col:24> 'int' '-'
|   |   | |   |   |-ImplicitCastExpr 0x20e42fcd6a8 <col:17, col:20> 'int' <IntegralCast>
|   |   | |   |   | `-ImplicitCastExpr 0x20e42fcd690 <col:17, col:20> 'char' <LValueToRValue>
|   |   | |   |   |   `-ArraySubscriptExpr 0x20e42fcd658 <col:17, col:20> 'char' lvalue
|   |   | |   |   |     |-ImplicitCastExpr 0x20e42fcd628 <col:17> 'char *' <LValueToRValue>
|   |   | |   |   |     | `-DeclRefExpr 0x20e42fcd5e8 <col:17> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |   |   |     `-ImplicitCastExpr 0x20e42fcd640 <col:19> 'int' <LValueToRValue>
|   |   | |   |   |       `-DeclRefExpr 0x20e42fcd608 <col:19> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |   |   `-CharacterLiteral 0x20e42fcd678 <col:24> 'int' 48
|   |   | |   |-UnaryOperator 0x20e42fcd720 <line:112:13, col:14> 'int' postfix '++'
|   |   | |   | `-DeclRefExpr 0x20e42fcd700 <col:13> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |   |-IfStmt 0x20e42fcd9a0 <line:113:13, line:114:22>
|   |   | |   | |-BinaryOperator 0x20e42fcd968 <line:113:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x20e42fcd830 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x20e42fcd810 <col:18, col:25> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x20e42fcd7f8 <col:18, col:21> 'int' <IntegralCast>
|   |   | |   | | |   | `-ImplicitCastExpr 0x20e42fcd7e0 <col:18, col:21> 'char' <LValueToRValue>
|   |   | |   | | |   |   `-ArraySubscriptExpr 0x20e42fcd7a8 <col:18, col:21> 'char' lvalue
|   |   | |   | | |   |     |-ImplicitCastExpr 0x20e42fcd778 <col:18> 'char *' <LValueToRValue>
|   |   | |   | | |   |     | `-DeclRefExpr 0x20e42fcd738 <col:18> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |   | | |   |     `-ImplicitCastExpr 0x20e42fcd790 <col:20> 'int' <LValueToRValue>
|   |   | |   | | |   |       `-DeclRefExpr 0x20e42fcd758 <col:20> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |   | | |   `-CharacterLiteral 0x20e42fcd7c8 <col:25> 'int' 48
|   |   | |   | | `-ParenExpr 0x20e42fcd948 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x20e42fcd928 <col:34, col:41> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x20e42fcd910 <col:34, col:37> 'int' <IntegralCast>
|   |   | |   | |     | `-ImplicitCastExpr 0x20e42fcd8f8 <col:34, col:37> 'char' <LValueToRValue>
|   |   | |   | |     |   `-ArraySubscriptExpr 0x20e42fcd8c0 <col:34, col:37> 'char' lvalue
|   |   | |   | |     |     |-ImplicitCastExpr 0x20e42fcd890 <col:34> 'char *' <LValueToRValue>
|   |   | |   | |     |     | `-DeclRefExpr 0x20e42fcd850 <col:34> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |   | |     |     `-ImplicitCastExpr 0x20e42fcd8a8 <col:36> 'int' <LValueToRValue>
|   |   | |   | |     |       `-DeclRefExpr 0x20e42fcd870 <col:36> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |   | |     `-CharacterLiteral 0x20e42fcd8e0 <col:41> 'int' 57
|   |   | |   | `-GotoStmt 0x20e42fcd988 <line:114:17, col:22> 'err' 0x20e42fc43d0
|   |   | |   |-BinaryOperator 0x20e42fcdb90 <line:115:13, col:35> 'int' '='
|   |   | |   | |-DeclRefExpr 0x20e42fcd9b8 <col:13> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   | |   | `-BinaryOperator 0x20e42fcdb70 <col:17, col:35> 'int' '-'
|   |   | |   |   |-BinaryOperator 0x20e42fcdb38 <col:17, col:31> 'int' '+'
|   |   | |   |   | |-ParenExpr 0x20e42fcda58 <col:17, col:24> 'int'
|   |   | |   |   | | `-BinaryOperator 0x20e42fcda38 <col:18, col:22> 'int' '*'
|   |   | |   |   | |   |-ImplicitCastExpr 0x20e42fcda20 <col:18> 'int' <LValueToRValue>
|   |   | |   |   | |   | `-DeclRefExpr 0x20e42fcd9d8 <col:18> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   | |   |   | |   `-IntegerLiteral 0x20e42fcd9f8 <col:22> 'int' 10
|   |   | |   |   | `-ImplicitCastExpr 0x20e42fcdb20 <col:28, col:31> 'int' <IntegralCast>
|   |   | |   |   |   `-ImplicitCastExpr 0x20e42fcdb08 <col:28, col:31> 'char' <LValueToRValue>
|   |   | |   |   |     `-ArraySubscriptExpr 0x20e42fcdae8 <col:28, col:31> 'char' lvalue
|   |   | |   |   |       |-ImplicitCastExpr 0x20e42fcdab8 <col:28> 'char *' <LValueToRValue>
|   |   | |   |   |       | `-DeclRefExpr 0x20e42fcda78 <col:28> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |   | |   |   |       `-ImplicitCastExpr 0x20e42fcdad0 <col:30> 'int' <LValueToRValue>
|   |   | |   |   |         `-DeclRefExpr 0x20e42fcda98 <col:30> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | |   |   `-CharacterLiteral 0x20e42fcdb58 <col:35> 'int' 48
|   |   | |   |-IfStmt 0x20e42fcde28 <line:116:13, line:117:22>
|   |   | |   | |-BinaryOperator 0x20e42fcddf0 <line:116:17, col:44> 'int' '||'
|   |   | |   | | |-ParenExpr 0x20e42fcdcb0 <col:17, col:28> 'int'
|   |   | |   | | | `-BinaryOperator 0x20e42fcdc90 <col:18, col:27> 'int' '<'
|   |   | |   | | |   |-ImplicitCastExpr 0x20e42fcdc60 <col:18> 'int' <LValueToRValue>
|   |   | |   | | |   | `-DeclRefExpr 0x20e42fcdbb0 <col:18> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   | |   | | |   `-ImplicitCastExpr 0x20e42fcdc78 <col:22, col:27> 'int' <LValueToRValue>
|   |   | |   | | |     `-ArraySubscriptExpr 0x20e42fcdc40 <col:22, col:27> 'const int' lvalue
|   |   | |   | | |       |-ImplicitCastExpr 0x20e42fcdc10 <col:22> 'const int *' <ArrayToPointerDecay>
|   |   | |   | | |       | `-DeclRefExpr 0x20e42fcdbd0 <col:22> 'const int [9]' lvalue Var 0x20e42fc6890 'min' 'const int [9]'
|   |   | |   | | |       `-ImplicitCastExpr 0x20e42fcdc28 <col:26> 'int' <LValueToRValue>
|   |   | |   | | |         `-DeclRefExpr 0x20e42fcdbf0 <col:26> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   | |   | | `-ParenExpr 0x20e42fcddd0 <col:33, col:44> 'int'
|   |   | |   | |   `-BinaryOperator 0x20e42fcddb0 <col:34, col:43> 'int' '>'
|   |   | |   | |     |-ImplicitCastExpr 0x20e42fcdd80 <col:34> 'int' <LValueToRValue>
|   |   | |   | |     | `-DeclRefExpr 0x20e42fcdcd0 <col:34> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   | |   | |     `-ImplicitCastExpr 0x20e42fcdd98 <col:38, col:43> 'int' <LValueToRValue>
|   |   | |   | |       `-ArraySubscriptExpr 0x20e42fcdd60 <col:38, col:43> 'const int' lvalue
|   |   | |   | |         |-ImplicitCastExpr 0x20e42fcdd30 <col:38> 'const int *' <ArrayToPointerDecay>
|   |   | |   | |         | `-DeclRefExpr 0x20e42fcdcf0 <col:38> 'const int [9]' lvalue Var 0x20e42fc6c00 'max' 'const int [9]'
|   |   | |   | |         `-ImplicitCastExpr 0x20e42fcdd48 <col:42> 'int' <LValueToRValue>
|   |   | |   | |           `-DeclRefExpr 0x20e42fcdd10 <col:42> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   | |   | `-GotoStmt 0x20e42fcde10 <line:117:17, col:22> 'err' 0x20e42fc43d0
|   |   | |   |-IfStmt 0x20e42fce178 <line:118:13, line:123:13>
|   |   | |   | |-ImplicitCastExpr 0x20e42fcde60 <line:118:17> 'struct tm *' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x20e42fcde40 <col:17> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |   | |   | `-CompoundStmt 0x20e42fce160 <col:21, line:123:13>
|   |   | |   |   `-IfStmt 0x20e42fce138 <line:119:17, line:122:35> has_else
|   |   | |   |     |-BinaryOperator 0x20e42fcded8 <line:119:21, col:26> 'int' '=='
|   |   | |   |     | |-ImplicitCastExpr 0x20e42fcdec0 <col:21> 'int' <LValueToRValue>
|   |   | |   |     | | `-DeclRefExpr 0x20e42fcde78 <col:21> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   | |   |     | `-IntegerLiteral 0x20e42fcde98 <col:26> 'int' 7
|   |   | |   |     |-BinaryOperator 0x20e42fcdfb0 <line:120:21, col:34> 'int' '='
|   |   | |   |     | |-DeclRefExpr 0x20e42fcdef8 <col:21> 'int' lvalue Var 0x20e42fcc000 'offset' 'int'
|   |   | |   |     | `-BinaryOperator 0x20e42fcdf90 <col:30, col:34> 'int' '*'
|   |   | |   |     |   |-ImplicitCastExpr 0x20e42fcdf78 <col:30> 'int' <LValueToRValue>
|   |   | |   |     |   | `-DeclRefExpr 0x20e42fcdf30 <col:30> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   | |   |     |   `-IntegerLiteral 0x20e42fcdf50 <col:34> 'int' 3600
|   |   | |   |     `-IfStmt 0x20e42fce120 <line:121:22, line:122:35>
|   |   | |   |       |-BinaryOperator 0x20e42fce030 <line:121:26, col:31> 'int' '=='
|   |   | |   |       | |-ImplicitCastExpr 0x20e42fce018 <col:26> 'int' <LValueToRValue>
|   |   | |   |       | | `-DeclRefExpr 0x20e42fcdfd0 <col:26> 'int' lvalue Var 0x20e42fc7038 'i' 'int'
|   |   | |   |       | `-IntegerLiteral 0x20e42fcdff0 <col:31> 'int' 8
|   |   | |   |       `-CompoundAssignOperator 0x20e42fce0f0 <line:122:21, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   |         |-DeclRefExpr 0x20e42fce050 <col:21> 'int' lvalue Var 0x20e42fcc000 'offset' 'int'
|   |   | |   |         `-BinaryOperator 0x20e42fce0d0 <col:31, col:35> 'int' '*'
|   |   | |   |           |-ImplicitCastExpr 0x20e42fce0b8 <col:31> 'int' <LValueToRValue>
|   |   | |   |           | `-DeclRefExpr 0x20e42fce070 <col:31> 'int' lvalue Var 0x20e42fc6fb8 'n' 'int'
|   |   | |   |           `-IntegerLiteral 0x20e42fce090 <col:35> 'int' 60
|   |   | |   `-UnaryOperator 0x20e42fce1b0 <line:124:13, col:14> 'int' postfix '++'
|   |   | |     `-DeclRefExpr 0x20e42fce190 <col:13> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |   | `-IfStmt 0x20e42fcf5f8 <line:126:9, line:127:20>
|   |   |   |-BinaryOperator 0x20e42fcf5a0 <line:126:13, col:66> 'int' '&&'
|   |   |   | |-ImplicitCastExpr 0x20e42fcf588 <col:13> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x20e42fce250 <col:13> 'int' lvalue Var 0x20e42fcc000 'offset' 'int'
|   |   |   | `-UnaryOperator 0x20e42fcf570 <col:23, col:66> 'int' prefix '!' cannot overflow
|   |   |   |   `-CallExpr 0x20e42fcf520 <col:24, col:66> 'int'
|   |   |   |     |-ImplicitCastExpr 0x20e42fcf508 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x20e42fcf3c8 <col:24> 'int ()' Function 0x20e42fcf300 'OPENSSL_gmtime_adj' 'int ()'
|   |   |   |     |-ImplicitCastExpr 0x20e42fcf558 <col:43> 'struct tm *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x20e42fcf3e8 <col:43> 'struct tm *' lvalue ParmVar 0x20e42fc65c0 'tm' 'struct tm *'
|   |   |   |     |-IntegerLiteral 0x20e42fcf408 <col:47> 'int' 0
|   |   |   |     `-BinaryOperator 0x20e42fcf4b8 <col:50, col:59> 'int' '*'
|   |   |   |       |-ImplicitCastExpr 0x20e42fcf488 <col:50> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x20e42fcf430 <col:50> 'int' lvalue Var 0x20e42fcc000 'offset' 'int'
|   |   |   |       `-ImplicitCastExpr 0x20e42fcf4a0 <col:59> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x20e42fcf450 <col:59> 'int' lvalue Var 0x20e42fcbdf0 'offsign' 'int'
|   |   |   `-ReturnStmt 0x20e42fcf5e8 <line:127:13, col:20>
|   |   |     `-IntegerLiteral 0x20e42fcf5c0 <col:20> 'int' 0
|   |   `-IfStmt 0x20e42fcf720 <line:128:12, line:131:5>
|   |     |-ImplicitCastExpr 0x20e42fcf6d8 <line:128:16, col:19> 'char' <LValueToRValue>
|   |     | `-ArraySubscriptExpr 0x20e42fcf6b8 <col:16, col:19> 'char' lvalue
|   |     |   |-ImplicitCastExpr 0x20e42fcf688 <col:16> 'char *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x20e42fcf648 <col:16> 'char *' lvalue Var 0x20e42fc6f20 'a' 'char *'
|   |     |   `-ImplicitCastExpr 0x20e42fcf6a0 <col:18> 'int' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x20e42fcf668 <col:18> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |     `-CompoundStmt 0x20e42fcf708 <col:22, line:131:5>
|   |       `-GotoStmt 0x20e42fcf6f0 <line:130:9, col:14> 'err' 0x20e42fc43d0
|   |-ReturnStmt 0x20e42fcf838 <line:132:5, col:19>
|   | `-ParenExpr 0x20e42fcf818 <col:12, col:19> 'int'
|   |   `-BinaryOperator 0x20e42fcf7f8 <col:13, col:18> 'int' '=='
|   |     |-ImplicitCastExpr 0x20e42fcf7c8 <col:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x20e42fcf788 <col:13> 'int' lvalue Var 0x20e42fc7138 'o' 'int'
|   |     `-ImplicitCastExpr 0x20e42fcf7e0 <col:18> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e42fcf7a8 <col:18> 'int' lvalue Var 0x20e42fc70b8 'l' 'int'
|   `-LabelStmt 0x20e42fcf8a0 <line:133:2, line:134:14> 'err'
|     `-ReturnStmt 0x20e42fcf890 <col:5, col:14>
|       `-ParenExpr 0x20e42fcf870 <col:12, col:14> 'int'
|         `-IntegerLiteral 0x20e42fcf848 <col:13> 'int' 0
|-FunctionDecl 0x20e42fcfa10 <line:137:1, line:140:1> line:137:5 invalid ASN1_GENERALIZEDTIME_check 'int (const int *)'
| |-ParmVarDecl 0x20e42fcf940 <col:32, col:60> col:60 invalid d 'const int *'
| `-CompoundStmt 0x20e42fcfb58 <line:138:1, line:140:1>
|-FunctionDecl 0x20e42fcfce0 <line:142:1, line:158:1> line:142:5 invalid ASN1_GENERALIZEDTIME_set_string 'int (int *, const char *)'
| |-ParmVarDecl 0x20e42fcfb80 <col:37, col:59> col:59 invalid s 'int *'
| |-ParmVarDecl 0x20e42fcfc00 <col:62, col:74> col:74 used str 'const char *'
| `-CompoundStmt 0x20e42fd0400 <line:143:1, line:158:1>
|   `-IfStmt 0x20e42fd03d8 <line:149:5, line:157:18> has_else
|     |-OpaqueValueExpr 0x20e42fd03c0 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x20e42fd0348 <line:149:41, line:156:5>
|     | |-IfStmt 0x20e42fd02d8 <line:150:9, line:154:9>
|     | | |-OpaqueValueExpr 0x20e42fd02c0 <<invalid sloc>> '_Bool'
|     | | `-CompoundStmt 0x20e42fd0298 <line:150:24, line:154:9>
|     | |   `-IfStmt 0x20e42fd0280 <line:151:13, line:152:24>
|     | |     |-OpaqueValueExpr 0x20e42fd0268 <<invalid sloc>> '_Bool'
|     | |     `-ReturnStmt 0x20e42fd0258 <col:17, col:24>
|     | |       `-IntegerLiteral 0x20e42fd0230 <col:24> 'int' 0
|     | `-ReturnStmt 0x20e42fd0338 <line:155:9, col:18>
|     |   `-ParenExpr 0x20e42fd0318 <col:16, col:18> 'int'
|     |     `-IntegerLiteral 0x20e42fd02f0 <col:17> 'int' 1
|     `-ReturnStmt 0x20e42fd03b0 <line:157:9, col:18>
|       `-ParenExpr 0x20e42fd0390 <col:16, col:18> 'int'
|         `-IntegerLiteral 0x20e42fd0368 <col:17> 'int' 0
|-FunctionDecl 0x20e42fcfde0 <line:147:16> col:16 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x20e42fcfe80 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20e42fd05c0 <line:160:1, line:164:1> line:160:23 invalid ASN1_GENERALIZEDTIME_set 'int *(int *, time_t)'
| |-ParmVarDecl 0x20e42fd0430 <col:48, col:70> col:70 invalid s 'int *'
| |-ParmVarDecl 0x20e42fd04a8 <line:161:48, col:55> col:55 used t 'time_t':'long long'
| `-CompoundStmt 0x20e42fd0820 <line:162:1, line:164:1>
|-FunctionDecl 0x20e42fd0b10 <line:166:1, line:216:1> line:166:23 invalid ASN1_GENERALIZEDTIME_adj 'int *(int *, time_t, int, long)'
| |-ParmVarDecl 0x20e42fd0848 <col:48, col:70> col:70 invalid s 'int *'
| |-ParmVarDecl 0x20e42fd08c0 <line:167:48, col:55> col:55 used t 'time_t':'long long'
| |-ParmVarDecl 0x20e42fd0940 <col:58, col:62> col:62 used offset_day 'int'
| |-ParmVarDecl 0x20e42fd09c0 <line:168:48, col:53> col:53 used offset_sec 'long'
| `-CompoundStmt 0x20e42fcc940 <line:169:1, line:216:1>
|   |-DeclStmt 0x20e42fd0c68 <line:170:5, col:12>
|   | `-VarDecl 0x20e42fd0c00 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x20e42fd0d10 <line:171:5, col:18>
|   | `-VarDecl 0x20e42fd0ca8 <col:5, col:16> col:16 used ts 'struct tm *'
|   |-DeclStmt 0x20e42fd0db0 <line:172:5, col:19>
|   | `-VarDecl 0x20e42fd0d48 <col:5, col:15> col:15 used data 'struct tm':'struct tm'
|   |-DeclStmt 0x20e42fd0e80 <line:173:5, col:20>
|   | `-VarDecl 0x20e42fd0dd8 <col:5, col:18> col:12 used len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x20e42fd0e68 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x20e42fd0e40 <col:18> 'int' 20
|   |-IfStmt 0x20e42fd1240 <line:180:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x20e42fd1228 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20e42fd1218 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:181:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x20e42fd1200 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x20e42fd11e0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x20e42fd11b8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x20e42fd1178 <col:26> 'int' 0
|   |-BinaryOperator 0x20e42fce488 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:183:5, col:34> 'struct tm *' '='
|   | |-DeclRefExpr 0x20e42fd1258 <col:5> 'struct tm *' lvalue Var 0x20e42fd0ca8 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x20e42fce470 <col:10, col:34> 'struct tm *' <IntegralToPointer>
|   |   `-CallExpr 0x20e42fce440 <col:10, col:34> 'int'
|   |     |-ImplicitCastExpr 0x20e42fce428 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x20e42fce368 <col:10> 'int ()' Function 0x20e42fce2a0 'OPENSSL_gmtime' 'int ()'
|   |     |-UnaryOperator 0x20e42fce3c0 <col:25, col:26> 'time_t *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x20e42fce388 <col:26> 'time_t':'long long' lvalue ParmVar 0x20e42fd08c0 't' 'time_t':'long long'
|   |     `-UnaryOperator 0x20e42fce410 <col:29, col:30> 'struct tm *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x20e42fce3d8 <col:30> 'struct tm':'struct tm' lvalue Var 0x20e42fd0d48 'data' 'struct tm':'struct tm'
|   |-IfStmt 0x20e42fce608 <line:184:5, line:185:14>
|   | |-BinaryOperator 0x20e42fce580 <line:184:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x20e42fce550 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:184:9> 'struct tm *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e42fce4a8 <col:9> 'struct tm *' lvalue Var 0x20e42fd0ca8 'ts' 'struct tm *'
|   | | `-ImplicitCastExpr 0x20e42fce568 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct tm *' <BitCast>
|   | |   `-ParenExpr 0x20e42fce530 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x20e42fce508 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20e42fce4c8 <col:26> 'int' 0
|   | `-GotoStmt 0x20e42fce5f0 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:185:9, col:14> 'err' 0x20e42fce5a0
|   |-IfStmt 0x20e42fce858 <line:187:5, line:190:5>
|   | |-BinaryOperator 0x20e42fce6c0 <line:187:9, col:23> 'int' '||'
|   | | |-ImplicitCastExpr 0x20e42fce690 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20e42fce620 <col:9> 'int' lvalue ParmVar 0x20e42fd0940 'offset_day' 'int'
|   | | `-ImplicitCastExpr 0x20e42fce6a8 <col:23> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20e42fce658 <col:23> 'long' lvalue ParmVar 0x20e42fd09c0 'offset_sec' 'long'
|   | `-CompoundStmt 0x20e42fce840 <col:35, line:190:5>
|   |   `-IfStmt 0x20e42fce828 <line:188:9, line:189:18>
|   |     |-UnaryOperator 0x20e42fce7f8 <line:188:13, col:59> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x20e42fce778 <col:14, col:59> 'int'
|   |     |   |-ImplicitCastExpr 0x20e42fce760 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x20e42fce6e0 <col:14> 'int ()' Function 0x20e42fcf300 'OPENSSL_gmtime_adj' 'int ()'
|   |     |   |-ImplicitCastExpr 0x20e42fce7b0 <col:33> 'struct tm *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x20e42fce700 <col:33> 'struct tm *' lvalue Var 0x20e42fd0ca8 'ts' 'struct tm *'
|   |     |   |-ImplicitCastExpr 0x20e42fce7c8 <col:37> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x20e42fce720 <col:37> 'int' lvalue ParmVar 0x20e42fd0940 'offset_day' 'int'
|   |     |   `-ImplicitCastExpr 0x20e42fce7e0 <col:49> 'long' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x20e42fce740 <col:49> 'long' lvalue ParmVar 0x20e42fd09c0 'offset_sec' 'long'
|   |     `-GotoStmt 0x20e42fce810 <line:189:13, col:18> 'err' 0x20e42fce5a0
|   |-IfStmt 0x20e42fcefe8 <line:193:5, line:201:5>
|   | |-OpaqueValueExpr 0x20e42fcefd0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20e42fcefb0 <line:193:54, line:201:5>
|   |   |-BinaryOperator 0x20e42fcebb8 <line:194:9, col:31> 'char *' '='
|   |   | |-DeclRefExpr 0x20e42fce9f8 <col:9> 'char *' lvalue Var 0x20e42fd0c00 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x20e42fceba0 <col:13, col:31> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x20e42fceb60 <col:13, col:31> 'int'
|   |   |     |-ImplicitCastExpr 0x20e42fceb48 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x20e42fceb08 <col:13> 'int ()' Function 0x20e42fcea40 'OPENSSL_malloc' 'int ()'
|   |   |     `-ImplicitCastExpr 0x20e42fceb88 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x20e42fceb28 <col:28> 'size_t':'unsigned long long' lvalue Var 0x20e42fd0dd8 'len' 'size_t':'unsigned long long'
|   |   `-IfStmt 0x20e42fcee10 <line:195:9, line:198:9>
|   |     |-BinaryOperator 0x20e42fcecb0 <line:195:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x20e42fcec80 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:195:13> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x20e42fcebd8 <col:13> 'char *' lvalue Var 0x20e42fd0c00 'p' 'char *'
|   |     | `-ImplicitCastExpr 0x20e42fcec98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |     |   `-ParenExpr 0x20e42fcec60 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x20e42fcec38 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x20e42fcebf8 <col:26> 'int' 0
|   |     `-CompoundStmt 0x20e42fcedf8 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:195:24, line:198:9>
|   |       `-GotoStmt 0x20e42fcede0 <line:197:13, col:18> 'err' 0x20e42fce5a0
|   |-CallExpr 0x20e42fcc500 <line:203:5, line:205:28> 'int'
|   | |-ImplicitCastExpr 0x20e42fcc4e8 <line:203:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20e42fcf0f0 <col:5> 'int ()' Function 0x20e42fcf028 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x20e42fcc568 <col:18> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x20e42fcf110 <col:18> 'char *' lvalue Var 0x20e42fd0c00 'p' 'char *'
|   | |-ImplicitCastExpr 0x20e42fcc580 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x20e42fcf130 <col:21> 'size_t':'unsigned long long' lvalue Var 0x20e42fd0dd8 'len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x20e42fcc598 <col:26> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x20e42fcf188 <col:26> 'char [26]' lvalue "%04d%02d%02d%02d%02d%02dZ"
|   | |-BinaryOperator 0x20e42fcf268 <col:55, col:69> 'int' '+'
|   | | |-ImplicitCastExpr 0x20e42fcf250 <col:55, col:59> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x20e42fcf1f8 <col:55, col:59> 'int' lvalue ->tm_year 0x20e42faebc8
|   | | |   `-ImplicitCastExpr 0x20e42fcf1e0 <col:55> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x20e42fcf1c0 <col:55> 'struct tm *' lvalue Var 0x20e42fd0ca8 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x20e42fcf228 <col:69> 'int' 1900
|   | |-BinaryOperator 0x20e42fcc328 <line:204:18, col:31> 'int' '+'
|   | | |-ImplicitCastExpr 0x20e42fcc310 <col:18, col:22> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x20e42fcc2b8 <col:18, col:22> 'int' lvalue ->tm_mon 0x20e42faeb58
|   | | |   `-ImplicitCastExpr 0x20e42fcc2a0 <col:18> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x20e42fcc280 <col:18> 'struct tm *' lvalue Var 0x20e42fd0ca8 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x20e42fcc2e8 <col:31> 'int' 1
|   | |-ImplicitCastExpr 0x20e42fcc5b0 <col:34, col:38> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x20e42fcc380 <col:34, col:38> 'int' lvalue ->tm_mday 0x20e42faeae8
|   | |   `-ImplicitCastExpr 0x20e42fcc368 <col:34> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x20e42fcc348 <col:34> 'struct tm *' lvalue Var 0x20e42fd0ca8 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x20e42fcc5c8 <col:47, col:51> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x20e42fcc3e8 <col:47, col:51> 'int' lvalue ->tm_hour 0x20e42faea78
|   | |   `-ImplicitCastExpr 0x20e42fcc3d0 <col:47> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x20e42fcc3b0 <col:47> 'struct tm *' lvalue Var 0x20e42fd0ca8 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x20e42fcc5e0 <col:60, col:64> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x20e42fcc450 <col:60, col:64> 'int' lvalue ->tm_min 0x20e42faea08
|   | |   `-ImplicitCastExpr 0x20e42fcc438 <col:60> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x20e42fcc418 <col:60> 'struct tm *' lvalue Var 0x20e42fd0ca8 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x20e42fcc5f8 <line:205:18, col:22> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x20e42fcc4b8 <col:18, col:22> 'int' lvalue ->tm_sec 0x20e42fae998
|   |     `-ImplicitCastExpr 0x20e42fcc4a0 <col:18> 'struct tm *' <LValueToRValue>
|   |       `-DeclRefExpr 0x20e42fcc480 <col:18> 'struct tm *' lvalue Var 0x20e42fd0ca8 'ts' 'struct tm *'
|   |-LabelStmt 0x20e42fcc878 <line:212:2, col:5> 'err'
|   | `-NullStmt 0x20e42fcc870 <col:5>
|   `-ReturnStmt 0x20e42fcc930 <line:215:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x20e42fcc918 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x20e42fcc8f8 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x20e42fcc8d0 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x20e42fcc890 <col:26> 'int' 0
|-VarDecl 0x20e42fcca18 prev 0x20e42fc8160 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:218:1, line:221:1> line:218:13 used _asn1_mon 'const char *[12]' cinit
| `-InitListExpr 0x20e42fccce8 <col:29, line:221:1> 'const char *[12]'
|   |-ImplicitCastExpr 0x20e42fccda0 <line:219:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x20e42fccd88 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20e42fccab8 <col:5> 'char [4]' lvalue "Jan"
|   |-ImplicitCastExpr 0x20e42fccdd0 <col:12> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x20e42fccdb8 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20e42fccad8 <col:12> 'char [4]' lvalue "Feb"
|   |-ImplicitCastExpr 0x20e42fcce00 <col:19> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x20e42fccde8 <col:19> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20e42fccaf8 <col:19> 'char [4]' lvalue "Mar"
|   |-ImplicitCastExpr 0x20e42fcce30 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x20e42fcce18 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20e42fccb18 <col:26> 'char [4]' lvalue "Apr"
|   |-ImplicitCastExpr 0x20e42fcce60 <col:33> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x20e42fcce48 <col:33> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20e42fccb38 <col:33> 'char [4]' lvalue "May"
|   |-ImplicitCastExpr 0x20e42fcce90 <col:40> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x20e42fcce78 <col:40> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20e42fccb58 <col:40> 'char [4]' lvalue "Jun"
|   |-ImplicitCastExpr 0x20e42fccec0 <line:220:5> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x20e42fccea8 <col:5> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20e42fccb78 <col:5> 'char [4]' lvalue "Jul"
|   |-ImplicitCastExpr 0x20e42fccef0 <col:12> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x20e42fcced8 <col:12> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20e42fccb98 <col:12> 'char [4]' lvalue "Aug"
|   |-ImplicitCastExpr 0x20e42fccf20 <col:19> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x20e42fccf08 <col:19> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20e42fccbb8 <col:19> 'char [4]' lvalue "Sep"
|   |-ImplicitCastExpr 0x20e42fccf50 <col:26> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x20e42fccf38 <col:26> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20e42fccbd8 <col:26> 'char [4]' lvalue "Oct"
|   |-ImplicitCastExpr 0x20e42fccf80 <col:33> 'const char *' <NoOp>
|   | `-ImplicitCastExpr 0x20e42fccf68 <col:33> 'char *' <ArrayToPointerDecay>
|   |   `-StringLiteral 0x20e42fccbf8 <col:33> 'char [4]' lvalue "Nov"
|   `-ImplicitCastExpr 0x20e42fccfb0 <col:40> 'const char *' <NoOp>
|     `-ImplicitCastExpr 0x20e42fccf98 <col:40> 'char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x20e42fccc18 <col:40> 'char [4]' lvalue "Dec"
`-FunctionDecl 0x20e42fcd140 <line:223:1, line:273:1> line:223:5 invalid ASN1_GENERALIZEDTIME_print 'int (int *, const int *)'
  |-ParmVarDecl 0x20e42fccfe0 <col:32, col:37> col:37 invalid bp 'int *'
  |-ParmVarDecl 0x20e42fcd060 <col:41, col:69> col:69 invalid tm 'const int *'
  `-CompoundStmt 0x20e42fd5bd0 <line:224:1, line:273:1>
    |-DeclStmt 0x20e42fd1338 <line:225:5, col:12>
    | `-VarDecl 0x20e42fd12d0 <col:5, col:11> col:11 used v 'char *'
    |-DeclStmt 0x20e42fd13f8 <line:226:5, col:16>
    | `-VarDecl 0x20e42fd1368 <col:5, col:15> col:9 used gmt 'int' cinit
    |   `-IntegerLiteral 0x20e42fd13d0 <col:15> 'int' 0
    |-DeclStmt 0x20e42fd1490 <line:227:5, col:10>
    | `-VarDecl 0x20e42fd1428 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x20e42fd18d0 <line:228:5, col:49>
    | |-VarDecl 0x20e42fd14c0 <col:5, col:13> col:9 used y 'int' cinit
    | | `-IntegerLiteral 0x20e42fd1528 <col:13> 'int' 0
    | |-VarDecl 0x20e42fd1568 <col:5, col:20> col:16 used M 'int' cinit
    | | `-IntegerLiteral 0x20e42fd15d0 <col:20> 'int' 0
    | |-VarDecl 0x20e42fd1610 <col:5, col:27> col:23 used d 'int' cinit
    | | `-IntegerLiteral 0x20e42fd1678 <col:27> 'int' 0
    | |-VarDecl 0x20e42fd16b8 <col:5, col:34> col:30 used h 'int' cinit
    | | `-IntegerLiteral 0x20e42fd1720 <col:34> 'int' 0
    | |-VarDecl 0x20e42fd1760 <col:5, col:41> col:37 used m 'int' cinit
    | | `-IntegerLiteral 0x20e42fd17c8 <col:41> 'int' 0
    | `-VarDecl 0x20e42fd1808 <col:5, col:48> col:44 used s 'int' cinit
    |   `-IntegerLiteral 0x20e42fd1870 <col:48> 'int' 0
    |-DeclStmt 0x20e42fd1a08 <line:229:5, col:19>
    | `-VarDecl 0x20e42fd1900 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\asn1\a_gentm.c:229:11 used f 'char *' cinit
    |   `-ImplicitCastExpr 0x20e42fd19f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
    |     `-ParenExpr 0x20e42fd19d0 <col:17, col:27> 'void *'
    |       `-CStyleCastExpr 0x20e42fd19a8 <col:18, col:26> 'void *' <NullToPointer>
    |         `-IntegerLiteral 0x20e42fd1968 <col:26> 'int' 0
    |-DeclStmt 0x20e42fd1ac8 <.//openssl//file_jk/after\crypto\asn1\a_gentm.c:230:5, col:18>
    | `-VarDecl 0x20e42fd1a38 <col:5, col:17> col:9 used f_len 'int' cinit
    |   `-IntegerLiteral 0x20e42fd1aa0 <col:17> 'int' 0
    |-IfStmt 0x20e42fd1c38 <line:235:5, line:236:14>
    | |-BinaryOperator 0x20e42fd1bb0 <line:235:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x20e42fd1b98 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x20e42fd1b50 <col:9> 'int' lvalue Var 0x20e42fd1428 'i' 'int'
    | | `-IntegerLiteral 0x20e42fd1b70 <col:13> 'int' 12
    | `-GotoStmt 0x20e42fd1c20 <line:236:9, col:14> 'err' 0x20e42fd1bd0
    |-IfStmt 0x20e42fd1e10 <line:237:5, line:238:15>
    | |-BinaryOperator 0x20e42fd1d70 <line:237:9, col:21> 'int' '=='
    | | |-ImplicitCastExpr 0x20e42fd1d58 <col:9, col:16> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x20e42fd1d40 <col:9, col:16> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x20e42fd1d08 <col:9, col:16> 'char' lvalue
    | | |     |-ImplicitCastExpr 0x20e42fd1cf0 <col:9> 'char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x20e42fd1c50 <col:9> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    | | |     `-BinaryOperator 0x20e42fd1cd0 <col:11, col:15> 'int' '-'
    | | |       |-ImplicitCastExpr 0x20e42fd1cb8 <col:11> 'int' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x20e42fd1c70 <col:11> 'int' lvalue Var 0x20e42fd1428 'i' 'int'
    | | |       `-IntegerLiteral 0x20e42fd1c90 <col:15> 'int' 1
    | | `-CharacterLiteral 0x20e42fd1d28 <col:21> 'int' 90
    | `-BinaryOperator 0x20e42fd1df0 <line:238:9, col:15> 'int' '='
    |   |-DeclRefExpr 0x20e42fd1d90 <col:9> 'int' lvalue Var 0x20e42fd1368 'gmt' 'int'
    |   `-IntegerLiteral 0x20e42fd1dc8 <col:15> 'int' 1
    |-ForStmt 0x20e42fd21c8 <line:239:5, line:241:18>
    | |-BinaryOperator 0x20e42fd1e70 <line:239:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x20e42fd1e28 <col:10> 'int' lvalue Var 0x20e42fd1428 'i' 'int'
    | | `-IntegerLiteral 0x20e42fd1e48 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x20e42fd1ef0 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x20e42fd1ed8 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x20e42fd1e90 <col:17> 'int' lvalue Var 0x20e42fd1428 'i' 'int'
    | | `-IntegerLiteral 0x20e42fd1eb0 <col:21> 'int' 12
    | |-UnaryOperator 0x20e42fd1f30 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x20e42fd1f10 <col:25> 'int' lvalue Var 0x20e42fd1428 'i' 'int'
    | `-IfStmt 0x20e42fd21b0 <line:240:9, line:241:18>
    |   |-BinaryOperator 0x20e42fd2178 <line:240:13, col:40> 'int' '||'
    |   | |-ParenExpr 0x20e42fd2040 <col:13, col:24> 'int'
    |   | | `-BinaryOperator 0x20e42fd2020 <col:14, col:21> 'int' '>'
    |   | |   |-ImplicitCastExpr 0x20e42fd2008 <col:14, col:17> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x20e42fd1ff0 <col:14, col:17> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x20e42fd1fb8 <col:14, col:17> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x20e42fd1f88 <col:14> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x20e42fd1f48 <col:14> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |   | |   |     `-ImplicitCastExpr 0x20e42fd1fa0 <col:16> 'int' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x20e42fd1f68 <col:16> 'int' lvalue Var 0x20e42fd1428 'i' 'int'
    |   | |   `-CharacterLiteral 0x20e42fd1fd8 <col:21> 'int' 57
    |   | `-ParenExpr 0x20e42fd2158 <col:29, col:40> 'int'
    |   |   `-BinaryOperator 0x20e42fd2138 <col:30, col:37> 'int' '<'
    |   |     |-ImplicitCastExpr 0x20e42fd2120 <col:30, col:33> 'int' <IntegralCast>
    |   |     | `-ImplicitCastExpr 0x20e42fd2108 <col:30, col:33> 'char' <LValueToRValue>
    |   |     |   `-ArraySubscriptExpr 0x20e42fd20d0 <col:30, col:33> 'char' lvalue
    |   |     |     |-ImplicitCastExpr 0x20e42fd20a0 <col:30> 'char *' <LValueToRValue>
    |   |     |     | `-DeclRefExpr 0x20e42fd2060 <col:30> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |   |     |     `-ImplicitCastExpr 0x20e42fd20b8 <col:32> 'int' <LValueToRValue>
    |   |     |       `-DeclRefExpr 0x20e42fd2080 <col:32> 'int' lvalue Var 0x20e42fd1428 'i' 'int'
    |   |     `-CharacterLiteral 0x20e42fd20f0 <col:37> 'int' 48
    |   `-GotoStmt 0x20e42fd2198 <line:241:13, col:18> 'err' 0x20e42fd1bd0
    |-BinaryOperator 0x20e42fca720 <line:242:5, line:243:42> 'int' '='
    | |-DeclRefExpr 0x20e42fd2200 <line:242:5> 'int' lvalue Var 0x20e42fd14c0 'y' 'int'
    | `-BinaryOperator 0x20e42fca700 <col:9, line:243:42> 'int' '+'
    |   |-BinaryOperator 0x20e42fca5d8 <line:242:9, line:243:26> 'int' '+'
    |   | |-BinaryOperator 0x20e42fca468 <line:242:9, col:46> 'int' '+'
    |   | | |-BinaryOperator 0x20e42fca2f8 <col:9, col:24> 'int' '*'
    |   | | | |-ParenExpr 0x20e42fca2b0 <col:9, col:20> 'int'
    |   | | | | `-BinaryOperator 0x20e42fca290 <col:10, col:17> 'int' '-'
    |   | | | |   |-ImplicitCastExpr 0x20e42fca278 <col:10, col:13> 'int' <IntegralCast>
    |   | | | |   | `-ImplicitCastExpr 0x20e42fca260 <col:10, col:13> 'char' <LValueToRValue>
    |   | | | |   |   `-ArraySubscriptExpr 0x20e42fd2298 <col:10, col:13> 'char' lvalue
    |   | | | |   |     |-ImplicitCastExpr 0x20e42fd2280 <col:10> 'char *' <LValueToRValue>
    |   | | | |   |     | `-DeclRefExpr 0x20e42fd2238 <col:10> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |   | | | |   |     `-IntegerLiteral 0x20e42fd2258 <col:12> 'int' 0
    |   | | | |   `-CharacterLiteral 0x20e42fd22b8 <col:17> 'int' 48
    |   | | | `-IntegerLiteral 0x20e42fca2d0 <col:24> 'int' 1000
    |   | | `-BinaryOperator 0x20e42fca448 <col:31, col:46> 'int' '*'
    |   | |   |-ParenExpr 0x20e42fca400 <col:31, col:42> 'int'
    |   | |   | `-BinaryOperator 0x20e42fca3e0 <col:32, col:39> 'int' '-'
    |   | |   |   |-ImplicitCastExpr 0x20e42fca3c8 <col:32, col:35> 'int' <IntegralCast>
    |   | |   |   | `-ImplicitCastExpr 0x20e42fca3b0 <col:32, col:35> 'char' <LValueToRValue>
    |   | |   |   |   `-ArraySubscriptExpr 0x20e42fca378 <col:32, col:35> 'char' lvalue
    |   | |   |   |     |-ImplicitCastExpr 0x20e42fca360 <col:32> 'char *' <LValueToRValue>
    |   | |   |   |     | `-DeclRefExpr 0x20e42fca318 <col:32> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |   | |   |   |     `-IntegerLiteral 0x20e42fca338 <col:34> 'int' 1
    |   | |   |   `-CharacterLiteral 0x20e42fca398 <col:39> 'int' 48
    |   | |   `-IntegerLiteral 0x20e42fca420 <col:46> 'int' 100
    |   | `-BinaryOperator 0x20e42fca5b8 <line:243:11, col:26> 'int' '*'
    |   |   |-ParenExpr 0x20e42fca570 <col:11, col:22> 'int'
    |   |   | `-BinaryOperator 0x20e42fca550 <col:12, col:19> 'int' '-'
    |   |   |   |-ImplicitCastExpr 0x20e42fca538 <col:12, col:15> 'int' <IntegralCast>
    |   |   |   | `-ImplicitCastExpr 0x20e42fca520 <col:12, col:15> 'char' <LValueToRValue>
    |   |   |   |   `-ArraySubscriptExpr 0x20e42fca4e8 <col:12, col:15> 'char' lvalue
    |   |   |   |     |-ImplicitCastExpr 0x20e42fca4d0 <col:12> 'char *' <LValueToRValue>
    |   |   |   |     | `-DeclRefExpr 0x20e42fca488 <col:12> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |   |   |   |     `-IntegerLiteral 0x20e42fca4a8 <col:14> 'int' 2
    |   |   |   `-CharacterLiteral 0x20e42fca508 <col:19> 'int' 48
    |   |   `-IntegerLiteral 0x20e42fca590 <col:26> 'int' 10
    |   `-ParenExpr 0x20e42fca6e0 <col:31, col:42> 'int'
    |     `-BinaryOperator 0x20e42fca6c0 <col:32, col:39> 'int' '-'
    |       |-ImplicitCastExpr 0x20e42fca6a8 <col:32, col:35> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x20e42fca690 <col:32, col:35> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x20e42fca658 <col:32, col:35> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x20e42fca640 <col:32> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x20e42fca5f8 <col:32> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |       |     `-IntegerLiteral 0x20e42fca618 <col:34> 'int' 3
    |       `-CharacterLiteral 0x20e42fca678 <col:39> 'int' 48
    |-BinaryOperator 0x20e42fca9f0 <line:244:5, col:40> 'int' '='
    | |-DeclRefExpr 0x20e42fca740 <col:5> 'int' lvalue Var 0x20e42fd1568 'M' 'int'
    | `-BinaryOperator 0x20e42fca9d0 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x20e42fca8a8 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x20e42fca860 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x20e42fca840 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x20e42fca828 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x20e42fca810 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x20e42fca7d8 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x20e42fca7c0 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x20e42fca778 <col:10> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x20e42fca798 <col:12> 'int' 4
    |   | |   `-CharacterLiteral 0x20e42fca7f8 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x20e42fca880 <col:24> 'int' 10
    |   `-ParenExpr 0x20e42fca9b0 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x20e42fca990 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x20e42fca978 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x20e42fca960 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x20e42fca928 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x20e42fca910 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x20e42fca8c8 <col:30> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |       |     `-IntegerLiteral 0x20e42fca8e8 <col:32> 'int' 5
    |       `-CharacterLiteral 0x20e42fca948 <col:37> 'int' 48
    |-IfStmt 0x20e42fcab88 <line:245:5, line:246:14>
    | |-BinaryOperator 0x20e42fcab50 <line:245:9, col:27> 'int' '||'
    | | |-ParenExpr 0x20e42fcaa90 <col:9, col:16> 'int'
    | | | `-BinaryOperator 0x20e42fcaa70 <col:10, col:14> 'int' '>'
    | | |   |-ImplicitCastExpr 0x20e42fcaa58 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x20e42fcaa10 <col:10> 'int' lvalue Var 0x20e42fd1568 'M' 'int'
    | | |   `-IntegerLiteral 0x20e42fcaa30 <col:14> 'int' 12
    | | `-ParenExpr 0x20e42fcab30 <col:21, col:27> 'int'
    | |   `-BinaryOperator 0x20e42fcab10 <col:22, col:26> 'int' '<'
    | |     |-ImplicitCastExpr 0x20e42fcaaf8 <col:22> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x20e42fcaab0 <col:22> 'int' lvalue Var 0x20e42fd1568 'M' 'int'
    | |     `-IntegerLiteral 0x20e42fcaad0 <col:26> 'int' 1
    | `-GotoStmt 0x20e42fcab70 <line:246:9, col:14> 'err' 0x20e42fd1bd0
    |-BinaryOperator 0x20e42fcae50 <line:247:5, col:40> 'int' '='
    | |-DeclRefExpr 0x20e42fcaba0 <col:5> 'int' lvalue Var 0x20e42fd1610 'd' 'int'
    | `-BinaryOperator 0x20e42fcae30 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x20e42fcad08 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x20e42fcacc0 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x20e42fcaca0 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x20e42fcac88 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x20e42fcac70 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x20e42fcac38 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x20e42fcac20 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x20e42fcabd8 <col:10> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x20e42fcabf8 <col:12> 'int' 6
    |   | |   `-CharacterLiteral 0x20e42fcac58 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x20e42fcace0 <col:24> 'int' 10
    |   `-ParenExpr 0x20e42fcae10 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x20e42fcadf0 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x20e42fcadd8 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x20e42fcadc0 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x20e42fcad88 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x20e42fcad70 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x20e42fcad28 <col:30> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |       |     `-IntegerLiteral 0x20e42fcad48 <col:32> 'int' 7
    |       `-CharacterLiteral 0x20e42fcada8 <col:37> 'int' 48
    |-BinaryOperator 0x20e42fcb120 <line:248:5, col:40> 'int' '='
    | |-DeclRefExpr 0x20e42fcae70 <col:5> 'int' lvalue Var 0x20e42fd16b8 'h' 'int'
    | `-BinaryOperator 0x20e42fcb100 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x20e42fcafd8 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x20e42fcaf90 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x20e42fcaf70 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x20e42fcaf58 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x20e42fcaf40 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x20e42fcaf08 <col:10, col:13> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x20e42fcaef0 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x20e42fcaea8 <col:10> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x20e42fcaec8 <col:12> 'int' 8
    |   | |   `-CharacterLiteral 0x20e42fcaf28 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x20e42fcafb0 <col:24> 'int' 10
    |   `-ParenExpr 0x20e42fcb0e0 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x20e42fcb0c0 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x20e42fcb0a8 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x20e42fcb090 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x20e42fcb058 <col:30, col:33> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x20e42fcb040 <col:30> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x20e42fcaff8 <col:30> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |       |     `-IntegerLiteral 0x20e42fcb018 <col:32> 'int' 9
    |       `-CharacterLiteral 0x20e42fcb078 <col:37> 'int' 48
    |-BinaryOperator 0x20e42fd3480 <line:249:5, col:42> 'int' '='
    | |-DeclRefExpr 0x20e42fcb140 <col:5> 'int' lvalue Var 0x20e42fd1760 'm' 'int'
    | `-BinaryOperator 0x20e42fd3460 <col:9, col:42> 'int' '+'
    |   |-BinaryOperator 0x20e42fd3338 <col:9, col:25> 'int' '*'
    |   | |-ParenExpr 0x20e42fd32f0 <col:9, col:21> 'int'
    |   | | `-BinaryOperator 0x20e42fcb240 <col:10, col:18> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x20e42fcb228 <col:10, col:14> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x20e42fcb210 <col:10, col:14> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x20e42fcb1d8 <col:10, col:14> 'char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x20e42fcb1c0 <col:10> 'char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x20e42fcb178 <col:10> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |   | |   |     `-IntegerLiteral 0x20e42fcb198 <col:12> 'int' 10
    |   | |   `-CharacterLiteral 0x20e42fcb1f8 <col:18> 'int' 48
    |   | `-IntegerLiteral 0x20e42fd3310 <col:25> 'int' 10
    |   `-ParenExpr 0x20e42fd3440 <col:30, col:42> 'int'
    |     `-BinaryOperator 0x20e42fd3420 <col:31, col:39> 'int' '-'
    |       |-ImplicitCastExpr 0x20e42fd3408 <col:31, col:35> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x20e42fd33f0 <col:31, col:35> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x20e42fd33b8 <col:31, col:35> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x20e42fd33a0 <col:31> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x20e42fd3358 <col:31> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |       |     `-IntegerLiteral 0x20e42fd3378 <col:33> 'int' 11
    |       `-CharacterLiteral 0x20e42fd33d8 <col:39> 'int' 48
    |-IfStmt 0x20e42fd42d8 <line:250:5, line:262:5>
    | |-OpaqueValueExpr 0x20e42fd42c0 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x20e42fd42a0 <line:252:43, line:262:5>
    |   |-BinaryOperator 0x20e42fd3b98 <line:253:9, col:46> 'int' '='
    |   | |-DeclRefExpr 0x20e42fd38e8 <col:9> 'int' lvalue Var 0x20e42fd1808 's' 'int'
    |   | `-BinaryOperator 0x20e42fd3b78 <col:13, col:46> 'int' '+'
    |   |   |-BinaryOperator 0x20e42fd3a50 <col:13, col:29> 'int' '*'
    |   |   | |-ParenExpr 0x20e42fd3a08 <col:13, col:25> 'int'
    |   |   | | `-BinaryOperator 0x20e42fd39e8 <col:14, col:22> 'int' '-'
    |   |   | |   |-ImplicitCastExpr 0x20e42fd39d0 <col:14, col:18> 'int' <IntegralCast>
    |   |   | |   | `-ImplicitCastExpr 0x20e42fd39b8 <col:14, col:18> 'char' <LValueToRValue>
    |   |   | |   |   `-ArraySubscriptExpr 0x20e42fd3980 <col:14, col:18> 'char' lvalue
    |   |   | |   |     |-ImplicitCastExpr 0x20e42fd3968 <col:14> 'char *' <LValueToRValue>
    |   |   | |   |     | `-DeclRefExpr 0x20e42fd3920 <col:14> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |   |   | |   |     `-IntegerLiteral 0x20e42fd3940 <col:16> 'int' 12
    |   |   | |   `-CharacterLiteral 0x20e42fd39a0 <col:22> 'int' 48
    |   |   | `-IntegerLiteral 0x20e42fd3a28 <col:29> 'int' 10
    |   |   `-ParenExpr 0x20e42fd3b58 <col:34, col:46> 'int'
    |   |     `-BinaryOperator 0x20e42fd3b38 <col:35, col:43> 'int' '-'
    |   |       |-ImplicitCastExpr 0x20e42fd3b20 <col:35, col:39> 'int' <IntegralCast>
    |   |       | `-ImplicitCastExpr 0x20e42fd3b08 <col:35, col:39> 'char' <LValueToRValue>
    |   |       |   `-ArraySubscriptExpr 0x20e42fd3ad0 <col:35, col:39> 'char' lvalue
    |   |       |     |-ImplicitCastExpr 0x20e42fd3ab8 <col:35> 'char *' <LValueToRValue>
    |   |       |     | `-DeclRefExpr 0x20e42fd3a70 <col:35> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |   |       |     `-IntegerLiteral 0x20e42fd3a90 <col:37> 'int' 13
    |   |       `-CharacterLiteral 0x20e42fd3af0 <col:43> 'int' 48
    |   `-IfStmt 0x20e42fd4288 <line:255:9, line:261:9>
    |     |-OpaqueValueExpr 0x20e42fd4270 <<invalid sloc>> '_Bool'
    |     `-CompoundStmt 0x20e42fd4240 <line:255:47, line:261:9>
    |       |-DeclStmt 0x20e42fd3d48 <line:256:13, col:31>
    |       | `-VarDecl 0x20e42fd3ce0 <col:13, col:17> col:17 used l 'int'
    |       |-BinaryOperator 0x20e42fd3e30 <line:257:13, col:22> 'char *' '='
    |       | |-DeclRefExpr 0x20e42fd3d60 <col:13> 'char *' lvalue Var 0x20e42fd1900 'f' 'char *'
    |       | `-UnaryOperator 0x20e42fd3e18 <col:17, col:22> 'char *' prefix '&' cannot overflow
    |       |   `-ArraySubscriptExpr 0x20e42fd3df8 <col:18, col:22> 'char' lvalue
    |       |     |-ImplicitCastExpr 0x20e42fd3de0 <col:18> 'char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x20e42fd3d98 <col:18> 'char *' lvalue Var 0x20e42fd12d0 'v' 'char *'
    |       |     `-IntegerLiteral 0x20e42fd3db8 <col:20> 'int' 14
    |       |-BinaryOperator 0x20e42fd3eb0 <line:258:13, col:21> 'int' '='
    |       | |-DeclRefExpr 0x20e42fd3e50 <col:13> 'int' lvalue Var 0x20e42fd1a38 'f_len' 'int'
    |       | `-IntegerLiteral 0x20e42fd3e88 <col:21> 'int' 1
    |       `-WhileStmt 0x20e42fd4228 <line:259:13, line:260:19>
    |         |-BinaryOperator 0x20e42fd41d0 <line:259:20, col:69> 'int' '&&'
    |         | |-BinaryOperator 0x20e42fd40b8 <col:20, col:50> 'int' '&&'
    |         | | |-BinaryOperator 0x20e42fd3fa0 <col:20, col:33> 'int' '<'
    |         | | | |-BinaryOperator 0x20e42fd3f30 <col:20, col:25> 'int' '+'
    |         | | | | |-IntegerLiteral 0x20e42fd3ed0 <col:20> 'int' 14
    |         | | | | `-ImplicitCastExpr 0x20e42fd3f18 <col:25> 'int' <LValueToRValue>
    |         | | | |   `-DeclRefExpr 0x20e42fd3ef8 <col:25> 'int' lvalue Var 0x20e42fd1a38 'f_len' 'int'
    |         | | | `-ImplicitCastExpr 0x20e42fd3f88 <col:33> 'int' <LValueToRValue>
    |         | | |   `-DeclRefExpr 0x20e42fd3f50 <col:33> 'int' lvalue Var 0x20e42fd3ce0 'l' 'int'
    |         | | `-BinaryOperator 0x20e42fd4098 <col:38, col:50> 'int' '>='
    |         | |   |-ImplicitCastExpr 0x20e42fd4080 <col:38, col:45> 'int' <IntegralCast>
    |         | |   | `-ImplicitCastExpr 0x20e42fd4068 <col:38, col:45> 'char' <LValueToRValue>
    |         | |   |   `-ArraySubscriptExpr 0x20e42fd4030 <col:38, col:45> 'char' lvalue
    |         | |   |     |-ImplicitCastExpr 0x20e42fd4000 <col:38> 'char *' <LValueToRValue>
    |         | |   |     | `-DeclRefExpr 0x20e42fd3fc0 <col:38> 'char *' lvalue Var 0x20e42fd1900 'f' 'char *'
    |         | |   |     `-ImplicitCastExpr 0x20e42fd4018 <col:40> 'int' <LValueToRValue>
    |         | |   |       `-DeclRefExpr 0x20e42fd3fe0 <col:40> 'int' lvalue Var 0x20e42fd1a38 'f_len' 'int'
    |         | |   `-CharacterLiteral 0x20e42fd4050 <col:50> 'int' 48
    |         | `-BinaryOperator 0x20e42fd41b0 <col:57, col:69> 'int' '<='
    |         |   |-ImplicitCastExpr 0x20e42fd4198 <col:57, col:64> 'int' <IntegralCast>
    |         |   | `-ImplicitCastExpr 0x20e42fd4180 <col:57, col:64> 'char' <LValueToRValue>
    |         |   |   `-ArraySubscriptExpr 0x20e42fd4148 <col:57, col:64> 'char' lvalue
    |         |   |     |-ImplicitCastExpr 0x20e42fd4118 <col:57> 'char *' <LValueToRValue>
    |         |   |     | `-DeclRefExpr 0x20e42fd40d8 <col:57> 'char *' lvalue Var 0x20e42fd1900 'f' 'char *'
    |         |   |     `-ImplicitCastExpr 0x20e42fd4130 <col:59> 'int' <LValueToRValue>
    |         |   |       `-DeclRefExpr 0x20e42fd40f8 <col:59> 'int' lvalue Var 0x20e42fd1a38 'f_len' 'int'
    |         |   `-CharacterLiteral 0x20e42fd4168 <col:69> 'int' 57
    |         `-UnaryOperator 0x20e42fd4210 <line:260:17, col:19> 'int' prefix '++'
    |           `-DeclRefExpr 0x20e42fd41f0 <col:19> 'int' lvalue Var 0x20e42fd1a38 'f_len' 'int'
    |-IfStmt 0x20e42fd5990 <line:264:5, line:269:18> has_else
    | |-OpaqueValueExpr 0x20e42fd5978 <<invalid sloc>> '_Bool'
    | |-ReturnStmt 0x20e42fd5910 <line:267:9, col:18>
    | | `-ParenExpr 0x20e42fd58f0 <col:16, col:18> 'int'
    | |   `-IntegerLiteral 0x20e42fd58c8 <col:17> 'int' 0
    | `-ReturnStmt 0x20e42fd5968 <line:269:9, col:18>
    |   `-ParenExpr 0x20e42fd5948 <col:16, col:18> 'int'
    |     `-IntegerLiteral 0x20e42fd5920 <col:17> 'int' 1
    |-LabelStmt 0x20e42fd5b60 <line:270:2, col:5> 'err'
    | `-NullStmt 0x20e42fd5b58 <col:5>
    `-ReturnStmt 0x20e42fd5bc0 <line:272:5, col:14>
      `-ParenExpr 0x20e42fd5ba0 <col:12, col:14> 'int'
        `-IntegerLiteral 0x20e42fd5b78 <col:13> 'int' 0
