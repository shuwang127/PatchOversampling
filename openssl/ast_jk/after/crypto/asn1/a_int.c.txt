TranslationUnitDecl 0x2a08cc36c68 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2a08cc37500 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2a08cc37200 '__int128'
|-TypedefDecl 0x2a08cc37570 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2a08cc37220 'unsigned __int128'
|-TypedefDecl 0x2a08cc378a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2a08cc37660 'struct __NSConstantString_tag'
|   `-Record 0x2a08cc375c8 '__NSConstantString_tag'
|-TypedefDecl 0x2a08cc37918 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2a08cc36e40 'unsigned long long'
|-TypedefDecl 0x2a08cc379b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2a08cc37970 'char *'
|   `-BuiltinType 0x2a08cc36d00 'char'
|-TypedefDecl 0x2a08cc37a20 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2a08cc37970 'char *'
|   `-BuiltinType 0x2a08cc36d00 'char'
|-TypedefDecl 0x2a08cc37ae0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2a08cc36e40 'unsigned long long'
|-TypedefDecl 0x2a08cc37b50 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2a08cc37970 'char *'
|   `-BuiltinType 0x2a08cc36d00 'char'
|-FunctionDecl 0x2a08e6ee410 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2a08e6ee4b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2a08e6ee520 <col:21> Implicit
|-FunctionDecl 0x2a08e6ee578 prev 0x2a08e6ee410 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2a08e6ee2a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2a08e6ee668 <col:21> Inherited Implicit
|-TypedefDecl 0x2a08e6ee6a8 prev 0x2a08cc37918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2a08cc36e40 'unsigned long long'
|-TypedefDecl 0x2a08e6ee750 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2a08e6ee720 'size_t' sugar
|   |-Typedef 0x2a08e6ee6a8 'size_t'
|   `-BuiltinType 0x2a08cc36e40 'unsigned long long'
|-TypedefDecl 0x2a08e6ee7c0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2a08cc36da0 'long long'
|-TypedefDecl 0x2a08e6ee830 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2a08cc36da0 'long long'
|-TypedefDecl 0x2a08e6ee8a0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2a08cc36de0 'unsigned short'
|-TypedefDecl 0x2a08e6ee910 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2a08cc36de0 'unsigned short'
|-TypedefDecl 0x2a08e6ee980 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2a08cc36de0 'unsigned short'
|-TypedefDecl 0x2a08e6ee9f0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2a08cc36d60 'int'
|-TypedefDecl 0x2a08e6eea60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2a08cc36d80 'long'
|-TypedefDecl 0x2a08e6eead0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2a08cc36da0 'long long'
|-TypedefDecl 0x2a08e6eeb60 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2a08e6eeb30 '__time64_t' sugar
|   |-Typedef 0x2a08e6eead0 '__time64_t'
|   `-BuiltinType 0x2a08cc36da0 'long long'
|-FunctionDecl 0x2a08e6eecd8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2a08e6eeef8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2a08e72ab90 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2a08e6ef038 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2a08e6ef0b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2a08e6ef128 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2a08e6ef1a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2a08e72a930 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2a08e72ac70 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2a08e72ad30 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2a08e72aea0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2a08e72ae50 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2a08e72adf0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2a08e72ad10 'struct threadlocaleinfostruct'
|       `-Record 0x2a08e7359e0 'threadlocaleinfostruct'
|-TypedefDecl 0x2a08e72afb0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2a08e72af60 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2a08e72af00 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2a08e72add0 'struct threadmbcinfostruct'
|       `-Record 0x2a08e72ad30 'threadmbcinfostruct'
|-RecordDecl 0x2a08e72b008 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2a08e72b0c0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2a08e72b180 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2a08e72b210 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2a08e72b2a0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2a08e72b358 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2a08e72b300 'struct localeinfo_struct' sugar
|   `-RecordType 0x2a08e72b160 'struct localeinfo_struct'
|     `-Record 0x2a08e72b0c0 'localeinfo_struct'
|-TypedefDecl 0x2a08e72b430 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2a08e72b3e0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2a08e72b300 'struct localeinfo_struct' sugar
|     `-RecordType 0x2a08e72b160 'struct localeinfo_struct'
|       `-Record 0x2a08e72b0c0 'localeinfo_struct'
|-RecordDecl 0x2a08e72b4a8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2a08e72b560 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2a08e72b5d8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2a08e72b698 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2a08e72b730 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2a08e72b7a0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2a08e72b858 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2a08e72b800 'struct localerefcount' sugar
|   `-RecordType 0x2a08e72b540 'struct localerefcount'
|     `-Record 0x2a08e72b4a8 'localerefcount'
|-RecordDecl 0x2a08e7359e0 prev 0x2a08e72ac70 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2a08e735a60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2a08e735ad8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2a08e735b48 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2a08e735bb8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2a08e735c28 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2a08e735de8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2a08e735e58 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2a08e735ec8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2a08e735f38 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2a08e735fa8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2a08e736018 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2a08e736070 parent 0x2a08cc36c68 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2a08e736200 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2a08e736270 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2a08e7362e0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2a08e736350 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2a08e7363f0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2a08e736460 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2a08e736570 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2a08e7366a8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2a08e736758 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2a08e736700 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2a08e72ad10 'struct threadlocaleinfostruct'
|     `-Record 0x2a08e7359e0 'threadlocaleinfostruct'
|-RecordDecl 0x2a08e7367f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x2a08e7368b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2a08e736928 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x2a08e739a20 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x2a08e739a90 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x2a08e739b00 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x2a08e739b70 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x2a08e739be0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x2a08e739c50 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x2a08e739cc0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x2a08e739d70 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x2a08e739d20 'struct _iobuf' sugar
|   `-RecordType 0x2a08e736890 'struct _iobuf'
|     `-Record 0x2a08e7367f0 '_iobuf'
|-FunctionDecl 0x2a08e739fa8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x2a08e73a078 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2a08cc36da0 'long long'
|-FunctionDecl 0x2a08e73a258 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e73a0e0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x2a08e73a550 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a08e73a330 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x2a08e73a3a8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2a08e73a900 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x2a08e73a630 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x2a08e73a6b0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x2a08e73a730 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x2a08e73bbb0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2a08e73ba40 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x2a08e73bde0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x2a08e73bca0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2a08e73bf90 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e73beb0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x2a08e73c180 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a08e73c478 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2a08e73c250 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x2a08e73c2d0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x2a08e73c630 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e73c550 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x2a08e73c7e0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e73c700 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x2a08e73c990 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e73c8b0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2a08e734ad8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e7349f8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2a08e734c68 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a08e734fd0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2a08e734d30 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2a08e734e28 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2a08e735388 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2a08e7350b0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2a08e735130 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2a08e7351a8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2a08e735548 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e735468 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2a08e735810 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2a08e735620 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2a08e7356a0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2a08e73ca50 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a08e73ce48 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2a08e73cee8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2a08e73cf50 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2a08e73cfc8 prev 0x2a08e73ce48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2a08e73cc20 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2a08e73cca0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2a08e73d078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e73d4f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2a08e73d220 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2a08e73d2a0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2a08e73d320 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2a08e73d810 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2a08e73d8b0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2a08e73d918 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2a08e73d990 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2a08e73da60 prev 0x2a08e73d810 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2a08e73d5d0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2a08e73d650 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2a08e73db58 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2a08e73dd20 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2a08e73dba0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2a08e73dc20 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2a08e73df78 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a08e73de00 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2a08e73de78 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2a08e73e1a8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a08e73e058 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x2a08e73e4a0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2a08e73e280 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2a08e73e2f8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x2a08e73e938 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2a08e73e9d8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2a08e73ea70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2a08e73ead8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2a08e73eb40 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2a08e73ebc8 prev 0x2a08e73e938 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2a08e73e580 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x2a08e73e5f8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e73e670 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e73e6e8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2a08e73f0d0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2a08e73ecb8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2a08e73ed30 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e73eda8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e73ee20 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e73ee98 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x2a08e73f590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2a08e73f2c0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2a08e73f340 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x2a08e73f3b8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x2a08e73f648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e737aa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2a08e73f790 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2a08e73f810 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x2a08e73f890 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x2a08e73f908 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x2a08e737e50 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2a08e737ef0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2a08e737f58 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2a08e737fd0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2a08e738038 prev 0x2a08e737e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2a08e737c88 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x2a08e737d08 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x2a08e738218 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2a08e7380e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e738658 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e738358 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7383d8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x2a08e738470 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a08e738710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e743ac0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2a08e738850 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2a08e7388d0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2a08e743db0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e743b98 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2a08e743c18 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2a08e743c90 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e744110 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x2a08e743e90 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2a08e743f68 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x2a08e7444c8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2a08e7441e8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x2a08e744268 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x2a08e7442e8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x2a08e744728 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2a08e7445a8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x2a08e73fac8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2a08e7447f8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2a08e744878 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x2a08e7448f8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x2a08e73fd28 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2a08e73fba8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2a08e7401e8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2a08e740288 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2a08e7402f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2a08e740358 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2a08e7403c0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2a08e740448 prev 0x2a08e7401e8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2a08e73fe30 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x2a08e73fea8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e73ff20 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e73ff98 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x2a08e740610 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e740530 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2a08e7407a0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a08e740928 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a08e741c60 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x2a08e7409f8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x2a08e741ab0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2a08e741f88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2a08e741e40 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x2a08e742030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e742250 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e742170 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x2a08e742470 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x2a08e742328 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x2a08e742620 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e742540 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x2a08e742870 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2a08e7426f8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x2a08e742778 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x2a08e742ab0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2a08e742b50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2a08e742bc0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x2a08e742c28 prev 0x2a08e742ab0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x2a08e742950 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x2a08e742d18 <col:40> Inherited printf 1 2
|-FunctionDecl 0x2a08e742e48 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2a08e742d68 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x2a08e743098 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a08e742f20 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x2a08e742f98 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2a08e743258 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a08e743178 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x2a08e743478 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2a08e743330 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x2a08e7436c8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a08e743550 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x2a08e7435c8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2a08e743888 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2a08e7437a8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x2a08e796060 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2a08e743960 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x2a08e7439e0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x2a08e796220 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2a08e796140 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x2a08e7964b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2a08e7963d0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x2a08e796558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x2a08e796750 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2a08e796678 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x2a08e7968e0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a08e796b88 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x2a08e796c28 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2a08e796c98 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x2a08e796d00 prev 0x2a08e796b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x2a08e796a70 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x2a08e796ed8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x2a08e796da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e78f230 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e78eff8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2a08e78f070 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a08e78f2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e78f508 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2a08e78f428 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x2a08e78f758 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e78f5e0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2a08e78f658 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e78fb18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x2a08e78f8f0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x2a08e78f970 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x2a08e78fbc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e78fdf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a08e78fd10 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x2a08e7930a8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x2a08e792f60 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x2a08e793290 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x2a08e7936e0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x2a08e793358 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7933d8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x2a08e793458 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x2a08e7934d0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2a08e793b60 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a08e7937d0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e793848 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7938c0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e793940 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x2a08e793f70 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a08e793c50 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e793cc8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e793d48 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x2a08e794138 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2a08e794058 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x2a08e794510 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2a08e7945b0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2a08e794618 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2a08e794690 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2a08e7946f8 prev 0x2a08e794510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2a08e7942d0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x2a08e794350 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x2a08e7948d8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2a08e7947a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e794cc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7949e8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x2a08e794a68 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x2a08e794ae0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a08e794d80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e790030 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x2a08e794ec8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x2a08e78ff30 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x2a08e790328 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e790110 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x2a08e790190 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2a08e790208 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7907b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a08e7904d0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x2a08e790548 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7905c8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x2a08e790870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e790e40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e790ab0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x2a08e790b28 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e790ba8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x2a08e790c20 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a08e791f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7922b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a08e792098 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x2a08e792110 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e792190 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x2a08e792648 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e792398 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x2a08e792410 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e792490 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x2a08e792508 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7928a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x2a08e792948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e792c00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x2a08e792a90 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x2a08e794f80 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x2a08e792cd8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x2a08e792d50 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2a08e795200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2a08e795120 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x2a08e7952a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e795568 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a08e7953f0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x2a08e795468 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x2a08e795980 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a08e795a20 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2a08e795a88 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2a08e795af0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a08e795b70 <col:40> Implicit printf 2 0
|-FunctionDecl 0x2a08e795bd8 prev 0x2a08e795980 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2a08e795640 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7956c0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x2a08e795738 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2a08e795cd8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x2a08e797fb0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a08e798050 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2a08e7980b8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2a08e798120 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a08e7981a0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2a08e798208 prev 0x2a08e797fb0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2a08e795d20 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2a08e795da0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2a08e795e18 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2a08e798308 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2a08e798568 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2a08e798350 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7983d0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x2a08e798448 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e798860 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2a08e798648 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7986c8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x2a08e798740 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e798ba8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a08e798c48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2a08e798cb0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a08e798d28 <col:40> Implicit printf 1 0
|-FunctionDecl 0x2a08e798d90 prev 0x2a08e798ba8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2a08e798948 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7989c0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2a08e798e88 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2a08e7970d8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a08e797178 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2a08e7971e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a08e797258 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2a08e7972c0 prev 0x2a08e7970d8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2a08e798ed8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2a08e796fa0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2a08e7973b8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2a08e797580 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2a08e797408 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2a08e797480 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7977d8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2a08e797660 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2a08e7976d8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e797d38 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a08e797dd8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2a08e797e40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2a08e797ea8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2a08e797f10 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a08e790f40 <col:77> Implicit printf 3 0
|-FunctionDecl 0x2a08e790fa8 prev 0x2a08e797d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2a08e797978 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e7979f0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e797a70 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2a08e797ae8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x2a08e791198 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x2a08e791068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e791608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a08e7911e8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e791260 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7912d8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e791358 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2a08e7913d0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e791a48 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a08e791700 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e791778 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7917f0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e791870 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x2a08e7918e8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e791e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a08e791c00 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2a08e791c78 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e791cf8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x2a08e791ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e79b450 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a08e79b1a0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2a08e79b218 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e79b298 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2a08e79b310 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2a08e79b510 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e79b908 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a08e79b658 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e79b6d0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e79b750 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79b7c8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e79bcc8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2a08e79b9f8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2a08e79ba78 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79baf0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e799060 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2a08e799100 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2a08e799168 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2a08e7991e0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x2a08e799248 prev 0x2a08e799060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2a08e79be70 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2a08e79bef0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x2a08e799428 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x2a08e7992f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e799850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a08e7998f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2a08e799958 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2a08e7999c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a08e799a40 <col:94> Implicit printf 2 0
|-FunctionDecl 0x2a08e799aa8 prev 0x2a08e799850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2a08e799538 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2a08e7995b8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x2a08e799630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x2a08e799c90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x2a08e799b60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e79bff0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2a08e79c090 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2a08e79c0f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2a08e79c160 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2a08e79c1e0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2a08e79c248 prev 0x2a08e79bff0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2a08e799ce0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x2a08e799d60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2a08e799dd8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2a08e79c348 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2a08e79c510 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2a08e79c398 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79c410 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e79c808 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a08e79c5f0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e79c668 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e79c6e8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x2a08e79cba0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a08e79c8f0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e79c968 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e79c9e8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79ca60 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e79ce08 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2a08e79cc88 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2a08e79cd08 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x2a08e79d000 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2a08e79cee8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x2a08e79d2f0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2a08e79d0d8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x2a08e79d150 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e79d1d0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x2a08e79d5e8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2a08e79d3d0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2a08e79d450 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79d4c8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e79d848 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2a08e79d6d0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79d748 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e79dbd8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2a08e79d928 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x2a08e79d9a0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e79da20 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79da98 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e79dda8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2a08e79dcc8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x2a08e79e010 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2a08e79de80 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79def8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e79e1d0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2a08e79e0f0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x2a08e79e360 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2a08e79e5a8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e79e430 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79e4a8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e79e800 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e79e688 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79e700 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e79ea58 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e79e8e0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79e958 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e79ee08 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e79eb38 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x2a08e79ebb0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e79ec28 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a1160 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e79eef0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2a08e79ef68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7a1040 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a1458 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7a1248 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7a12c0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7a1338 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a1750 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7a1538 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7a15b8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2a08e7a1630 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7a1a48 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7a1830 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7a18b0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2a08e7a1928 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7a1d40 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7a1b28 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7a1ba8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2a08e7a1c20 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7a0190 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7a1e20 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7a1ea0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7a1f18 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7a1f90 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a0528 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7a0278 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7a02f8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7a0370 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7a03e8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a08c0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7a0610 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7a0690 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7a0708 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7a0780 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a0d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7a0a70 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e7a0af0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7a0b68 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a08e7a0e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e79a2e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7a0f58 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e799fd0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e79a050 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79a0c8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e79a680 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e79a3d0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e79a448 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e79a4c8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2a08e79a540 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e79abd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e79a870 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e79a8f0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x2a08e79a968 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2a08e79a9e0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2a08e79ac90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7a3298 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e79add8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e79ae50 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e79aed0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x2a08e79af48 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7a3060 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a36d8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7a3390 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e7a3408 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7a3488 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7a3500 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7a3578 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a3948 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7a37d0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2a08e7a3848 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7a3ba0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7a3a28 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x2a08e7a3aa0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7a3e90 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7a3c80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7a3cf8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7a3d70 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a2180 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7a3f78 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7a3ff0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7a2060 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a25d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7a2328 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e7a23a0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7a2420 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7a2498 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a08e7a2698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7a2a90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7a27e0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e7a2858 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7a28d8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2a08e7a2950 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7a70a0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7a2b80 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e7a2bf8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7a2c70 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7a2cf0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2a08e7a2d68 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7a75e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7a7298 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e7a7310 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7a7390 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7a7408 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2a08e7a7480 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2a08e7a76a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7a7b28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7a77f8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e7a7870 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7a78f0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x2a08e7a7968 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7a79e0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7ab140 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7a7c20 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2a08e7a7c98 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7a7d10 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7a7d90 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2a08e7a7e08 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7a7e80 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7ab500 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2a08e7ab238 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7ab2b0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7ab330 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2a08e7ab770 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2a08e7ab600 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2a08e7ab988 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2a08e7abc68 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2a08e7aba50 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2a08e7abac8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2a08e7abeb0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2a08e7abd40 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2a08e7a5080 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2a08e7abf80 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x2a08e7a5208 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2a08e7a5440 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2a08e7a52d0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2a08e7a5348 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x2a08e7a55f0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2a08e7a5518 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2a08e7a5898 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2a08e7a56c0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a08e7a5738 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2a08e7a5c40 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x2a08e7a5970 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2a08e7a59f0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x2a08e7a5a68 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x2a08e7a5f40 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2a08e7a5d20 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7a5d98 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2a08e7a4228 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x2a08e7a6018 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x2a08e7a4080 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2a08e7a4530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2a08e7a43c0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x2a08e7a45d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7a4898 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2a08e7a4718 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x2a08e7a4ba0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7a4968 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2a08e7a49e0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7a4df0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7a4c78 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2a08e7a4cf0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7a80b0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a08e7a4ec8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7a8260 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a08e7a8180 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7a8410 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a08e7a8330 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7a87a8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7a84e0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7a8558 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7a85d0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a8a98 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7a8888 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7a8900 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7a8978 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a8d88 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7a8b78 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7a8bf0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7a8c68 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7ac0f0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7a8e68 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7a8ee0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7a8f58 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7ac3f0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7ac1d0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7ac248 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7ac640 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7ac4c8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7ac540 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7ac890 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7ac718 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7ac790 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7acae0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7ac968 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7ac9e0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7ace98 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7acbb8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2a08e7acc30 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e7acca8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7a92d0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7acf78 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2a08e7acff0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7ad068 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7a90c0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a9688 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7a93b8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7a9430 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7a94a8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a9978 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7a9768 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7a97e0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7a9858 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7a9c68 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7a9a58 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7a9ad0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e7a9b48 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7a9ff0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7a9d48 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7a9dc0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7a9e38 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7a9eb0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7ad4b0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7ad128 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7ad1a0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7ad218 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e7ad290 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7ad9b8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7ad598 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7ad610 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7ad688 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7ad700 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7ad778 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7add78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7adb68 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a08e7adbe0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7adc58 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2a08e7ade30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7aa300 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7ae030 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a08e7aa0d0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7aa148 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7aa1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2a08e7aa3c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7aa678 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7aa500 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x2a08e7aa578 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7aa830 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a08e7aa750 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7aab10 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7aa900 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7aa978 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7aa9f0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7aad68 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7aabf0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7aac68 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b1f70 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7aae40 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7aaeb8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e7aaf30 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7b22f8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7b2050 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b20c8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b2140 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b21b8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b24c0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a08e7b23e0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7b2708 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7b2590 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b2608 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b2a10 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b27e0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b2858 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b2c60 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b2ae8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b2b60 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b2eb0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b2d38 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b2db0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b1258 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b0f88 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b1000 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7b1078 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b1548 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b1338 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b13b0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7b1428 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b1838 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b1628 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b16a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7b1718 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b1bf8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b1918 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7b1990 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b1a08 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b4fa0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b1cd8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7b1d50 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b1dc8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b5290 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b5080 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7b50f8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b5170 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b56e0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b5370 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7b53e8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b5460 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7b54d8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b5a70 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b57c8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7b5840 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b58b8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7b5930 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b5e00 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b5b58 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7b5bd0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b5c48 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7b5cc0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b0260 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b5ee8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7aff50 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7affc8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b0040 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b05f0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b0348 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b03c0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b0438 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b04b0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b0980 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b06d8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b0750 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b07c8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b0840 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b0e88 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b0a68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b0ae0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b0b58 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b0bd0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7b0c48 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b6318 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b5fd8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b6050 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b60c8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b6140 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7b61b8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b6748 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b6408 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b6480 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b64f8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b6570 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7b65e8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b69b0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b6838 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b68b0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b6c00 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b6a88 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b6b00 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b6ee8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b6cd8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b6d50 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7b6dc8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b9378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b90d0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b9148 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b91c0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b9238 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a08e7b9438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7b99a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b9580 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b95f8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b9670 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b96e8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b9760 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7b9ee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b9ba0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b9c18 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b9c90 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b9d08 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2a08e7b9d80 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2a08e7b2f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7b3590 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b30c8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b3140 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b31b8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7b3230 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b32a8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7b3320 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b3a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7b3858 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b38d0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x2a08e7b3b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2a08e7b3c58 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2a08e7b7228 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7b3f10 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b6fd0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b7048 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2a08e7b72e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2a08e7b73f8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2a08e7b7998 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b76b8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b7730 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b77a8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x2a08e7b7a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2a08e7b7b70 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2a08e7bc220 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7b7e30 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2a08e7b7ea8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b7f20 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2a08e7bc010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2a08e7bc2e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2a08e7bc400 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2a08e7bc708 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x2a08e7bc528 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x2a08e7bc5a0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7bc618 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x2a08e7bd2c0 <line:37:1, line:44:1>
|   |-DeclStmt 0x2a08e7bc850 <line:38:5, col:21>
|   | `-VarDecl 0x2a08e7bc7e8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2a08e7bc8e8 <line:39:5, col:13>
|   | `-VarDecl 0x2a08e7bc880 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2a08e7bcc40 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2a08e7bcc28 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2a08e7bcb40 <col:34> '<builtin fn type>' Function 0x2a08e7bc9d8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2a08e7bcb78 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x2a08e7bc7e8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2a08e7bcbb0 <col:29> 'const wchar_t *' lvalue ParmVar 0x2a08e7bc618 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x2a08e7bcf00 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x2a08e7bcc70 <col:5> 'int' lvalue Var 0x2a08e7bc880 '_Ret' 'int'
|   | `-CallExpr 0x2a08e7bce40 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x2a08e7bce28 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2a08e7bcca8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2a08e7b0e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2a08e7bce88 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a08e7bccc8 <col:27> 'wchar_t *' lvalue ParmVar 0x2a08e7bc528 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2a08e7bcea0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a08e7bcce8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7bc5a0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2a08e7bceb8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a08e7bcd08 <col:44> 'const wchar_t *' lvalue ParmVar 0x2a08e7bc618 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2a08e7bced0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x2a08e7bcd90 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2a08e7bcd68 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2a08e7bcd28 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x2a08e7bcee8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a08e7bcdb0 <col:59> 'va_list':'char *' lvalue Var 0x2a08e7bc7e8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2a08e7bd250 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2a08e7bd238 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2a08e7bd188 <col:34> '<builtin fn type>' Function 0x2a08e7bd020 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2a08e7bd1c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x2a08e7bc7e8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2a08e7bd2b0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x2a08e7bd298 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2a08e7bd278 <col:12> 'int' lvalue Var 0x2a08e7bc880 '_Ret' 'int'
|-FunctionDecl 0x2a08e7bc9d8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x2a08e7bca78 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2a08e7bcae8 <col:34> Implicit
|-FunctionDecl 0x2a08e7bd020 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x2a08e7bd0c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2a08e7bd130 <col:34> Implicit
|-FunctionDecl 0x2a08e7bd5b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x2a08e7bd310 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x2a08e7bd388 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7bd400 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7bd478 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2a08e7bd8a0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x2a08e7bd890 <line:51:5, col:62>
|     `-CallExpr 0x2a08e7bd7d0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x2a08e7bd7b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2a08e7bd690 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2a08e7b0e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2a08e7bd818 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2a08e7bd6b0 <col:27> 'wchar_t *' lvalue ParmVar 0x2a08e7bd310 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2a08e7bd830 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2a08e7bd6d0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7bd388 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2a08e7bd848 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2a08e7bd6f0 <col:44> 'const wchar_t *' lvalue ParmVar 0x2a08e7bd400 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2a08e7bd860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x2a08e7bd778 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x2a08e7bd750 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x2a08e7bd710 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x2a08e7bd878 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2a08e7bd798 <col:59> 'va_list':'char *' lvalue ParmVar 0x2a08e7bd478 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2a08e7bdb40 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x2a08e7bd8c8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x2a08e7bd940 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7bd9b8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7bda30 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x2a08e7be0d8 <line:61:1, line:68:1>
|   |-DeclStmt 0x2a08e7bdc90 <line:62:5, col:21>
|   | `-VarDecl 0x2a08e7bdc28 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2a08e7bdd28 <line:63:5, col:13>
|   | `-VarDecl 0x2a08e7bdcc0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2a08e7bddd0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2a08e7bddb8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2a08e7bdd40 <col:34> '<builtin fn type>' Function 0x2a08e7bc9d8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2a08e7bdd60 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x2a08e7bdc28 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2a08e7bdd98 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2a08e7bda30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x2a08e7bdfd0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x2a08e7bde00 <col:5> 'int' lvalue Var 0x2a08e7bdcc0 '_Ret' 'int'
|   | `-CallExpr 0x2a08e7bdf10 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x2a08e7bdef8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2a08e7bde38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2a08e7b0e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2a08e7bdf58 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a08e7bde58 <col:27> 'wchar_t *' lvalue ParmVar 0x2a08e7bd8c8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2a08e7bdf70 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a08e7bde78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7bd940 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2a08e7bdf88 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a08e7bde98 <col:44> 'const wchar_t *' lvalue ParmVar 0x2a08e7bd9b8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2a08e7bdfa0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a08e7bdeb8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2a08e7bda30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x2a08e7bdfb8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a08e7bded8 <col:64> 'va_list':'char *' lvalue Var 0x2a08e7bdc28 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2a08e7be068 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2a08e7be050 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2a08e7bdff0 <col:34> '<builtin fn type>' Function 0x2a08e7bd020 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2a08e7be030 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x2a08e7bdc28 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2a08e7be0c8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x2a08e7be0b0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2a08e7be090 <col:12> 'int' lvalue Var 0x2a08e7bdcc0 '_Ret' 'int'
|-FunctionDecl 0x2a08e7be468 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x2a08e7be128 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x2a08e7be1a0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7be218 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7be290 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2a08e7be308 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2a08e7be6f0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x2a08e7be6e0 <line:75:5, col:67>
|     `-CallExpr 0x2a08e7be620 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x2a08e7be608 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2a08e7be548 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2a08e7b0e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2a08e7be668 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2a08e7be568 <col:27> 'wchar_t *' lvalue ParmVar 0x2a08e7be128 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2a08e7be680 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2a08e7be588 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7be1a0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2a08e7be698 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2a08e7be5a8 <col:44> 'const wchar_t *' lvalue ParmVar 0x2a08e7be218 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2a08e7be6b0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x2a08e7be5c8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2a08e7be290 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x2a08e7be6c8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2a08e7be5e8 <col:64> 'va_list':'char *' lvalue ParmVar 0x2a08e7be308 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2a08e7be938 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2a08e7be718 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7be790 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x2a08e7beb88 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2a08e7bea10 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7bea88 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7bee70 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2a08e7bec60 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7becd8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2a08e7bed50 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2a08e7b8148 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7b7fd0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7b8048 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2a08e7b81f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7b8608 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b83f8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7b8470 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b84e8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a08e7b86c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7b8978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7b8800 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2a08e7b8878 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7b8c60 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7b8a50 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7b8ac8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7b8b40 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7bf0b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7b8e00 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7b8e78 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2a08e7bf160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7bf638 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7bf360 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7bf3d8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7bf450 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a08e7bf6f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7bf9a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7bf830 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7bf8a8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7bfc90 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7bfa80 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7bfaf8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7bfb70 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7c0138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7bfe30 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7bfea8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7bff20 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2a08e7c01f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7c0770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7c03f0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7c0468 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7c04e0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7c0558 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a08e7c0830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7c0b80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7c0970 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7c09e8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e7c0a60 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7c0f08 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7c0c60 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7c0cd8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7c0d50 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7c0dc8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7c1210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x2a08e7c1130 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2a08e7c12b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7c1630 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7c14b8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7c1530 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2a08e7c16e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7c1900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2a08e7c1820 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x2a08e7c1b48 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2a08e7c19d0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7c1a48 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2a08e7c1e48 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x2a08e7c1c28 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x2a08e7c1ca0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x2a08e7c2218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2a08e7c1fe0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7c2070 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x2a08e7c22c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7c26d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2a08e7c2410 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2a08e7c2488 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7c2500 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x2a08e7c2b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2a08e7c2870 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7c28e8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7c2960 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x2a08e7c2be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7c60f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2a08e7c2d30 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x2a08e7c2da8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2a08e7c2e20 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7c2e98 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x2a08e7c6350 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x2a08e7c61e0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2a08e7c6590 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2a08e7c6420 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x2a08e7c6498 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x2a08e7c6748 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2a08e7c6668 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x2a08e7c6a38 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2a08e7c6818 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x2a08e7c6890 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2a08e7c6ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2a08e7c6bd0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2a08e7c6d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2a08e7c6f68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2a08e7c6e90 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x2a08e7c71b8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2a08e7c7038 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2a08e7c70c0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2a08e7c7400 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2a08e7c7290 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2a08e7c7308 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2a08e7c75b0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2a08e7c74d8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x2a08e7c7758 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2a08e7c7680 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x2a08e7c7908 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e7c7828 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2a08e7c7ab8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2a08e7c79d8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2a08e7c7e30 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2a08e7c7b90 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x2a08e7c7c08 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7c7c80 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e7c7cf8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x2a08e7ca2c0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2a08e7c7f20 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x2a08e7c7f98 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7c8010 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7ca0f0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e7ca168 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x2a08e7ca5d0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2a08e7ca3b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7ca430 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x2a08e7ca4b0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x2a08e7ca790 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2a08e7ca6b0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2a08e7caa80 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2a08e7ca860 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x2a08e7ca8e0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x2a08e7ca960 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x2a08e7cac40 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2a08e7cab60 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x2a08e7cafb8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2a08e7cad18 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x2a08e7cad90 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7cae08 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2a08e7cae80 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x2a08e7c31f8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a08e7c3080 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x2a08e7c30f8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x2a08e7c3530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2a08e7c33b0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x2a08e7c3430 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x2a08e7c35e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x2a08e7c3898 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2a08e7c3938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x2a08e7c3c78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2a08e7c3b00 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x2a08e7c3b80 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x2a08e7c3d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x2a08e7cb100 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2a08e7cb1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x2a08e7cb440 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2a08e7cb360 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x2a08e7cb4e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x2a08e7cb768 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2a08e7cb808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x2a08e7cbab0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x2a08e7cb9d0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x2a08e7cbb58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x2a08e7cbe38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2a08e7cbd58 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x2a08e7cbee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x2a08e7c4208 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2a08e7c4090 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x2a08e7c4108 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x2a08e7c42b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x2a08e7c4578 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2a08e7c4618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x2a08e7c4a40 <.//openssl//file_jk/after\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2a08e7c48a0 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x2a08e7c4920 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x2a08e7c4e10 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2a08e7c4c70 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x2a08e7c4cf0 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x2a08e7c4ec0 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x2a08e7c4f98 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x2a08e7c5008 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x2a08e7d3c80 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x2a08e7d3cf0 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x2a08e7d3d60 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x2a08e7d3dd0 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x2a08e7d3e40 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x2a08e7d3eb0 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x2a08e7d3f58 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x2a08e7d4128 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x2a08e7d4198 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x2a08e7d41f0 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x2a08e7d4308 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x2a08e7d42b0 'struct mime_param_st' sugar
|   `-RecordType 0x2a08e7d4290 'struct mime_param_st'
|     `-Record 0x2a08e7d41f0 'mime_param_st'
|-FunctionDecl 0x2a08e7d44b0 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x2a08e7d43b0 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x2a08e7d4570 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x2a08e7d4688 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x2a08e7d4630 'struct mime_header_st' sugar
|   `-RecordType 0x2a08e7d4610 'struct mime_header_st'
|     `-Record 0x2a08e7d4570 'mime_header_st'
|-FunctionDecl 0x2a08e7d4830 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x2a08e7d4730 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x2a08e7d4980 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x2a08e7d4b68 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x2a08e7d4a18 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x2a08e7d4a98 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x2a08e7dae50 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x2a08e7dacf0 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x2a08e7dad70 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x2a08e7db110 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x2a08e7daf20 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x2a08e7dafa0 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x2a08e7db020 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x2a08e7db348 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x2a08e7db1e8 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x2a08e7db268 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x2a08e7db600 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x2a08e7db418 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x2a08e7db498 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x2a08e7db518 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x2a08e7db880 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x2a08e7db6d8 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x2a08e7db758 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x2a08e7db7d8 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x2a08e7dbaa8 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x2a08e7db958 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x2a08e7db9d8 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x2a08e7dbd00 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x2a08e7dbb78 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x2a08e7dbbf8 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x2a08e7dc0b0 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x2a08e7dbdc8 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x2a08e7dbea8 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x2a08e7dbf30 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x2a08e7dbfb0 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x2a08e7dc410 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x2a08e7dc190 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x2a08e7dc210 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x2a08e7dc290 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x2a08e7dc310 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x2a08e7dc6d8 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x2a08e7dc4f0 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x2a08e7dc570 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x2a08e7dc5f0 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x2a08e7dc950 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x2a08e7dc7b0 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x2a08e7dc830 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x2a08e7dc8b0 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x2a08e7dcb40 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x2a08e7dca28 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x2a08e7dcaa8 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x2a08e7d8e40 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2a08e7dcc10 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x2a08e7d8cd0 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x2a08e7d8d50 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x2a08e7d9070 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x2a08e7d8f10 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x2a08e7d8f98 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x2a08e7d92f0 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2a08e7d9140 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x2a08e7d91c8 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x2a08e7d9248 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x2a08e7d94e8 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x2a08e7d93c0 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x2a08e7d9448 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x2a08e7d9768 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2a08e7d95b8 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x2a08e7d9640 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x2a08e7d96c0 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x2a08e7d9ac0 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x2a08e7d9838 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x2a08e7d98b8 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x2a08e7d9940 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x2a08e7d99c0 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x2a08e7dce00 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x2a08e7d9b98 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x2a08e7d9c18 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x2a08e7dcd10 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x2a08e7dcfa0 <.//openssl//file_jk/after\crypto\asn1\a_int.c:18:1, line:21:1> line:18:15 invalid ASN1_INTEGER_dup 'int *(const int *)'
| |-ParmVarDecl 0x2a08e7dced0 <col:32, col:52> col:52 invalid x 'const int *'
| `-CompoundStmt 0x2a08e7dd198 <line:19:1, line:21:1>
|-FunctionDecl 0x2a08e7dd320 <line:23:1, line:41:1> line:23:5 invalid ASN1_INTEGER_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x2a08e7dd1c0 <col:22, col:42> col:42 invalid x 'const int *'
| |-ParmVarDecl 0x2a08e7dd240 <col:45, col:65> col:65 invalid y 'const int *'
| `-CompoundStmt 0x2a08e7dd8f0 <line:24:1, line:41:1>
|   |-DeclStmt 0x2a08e7dd500 <line:25:5, col:17>
|   | |-VarDecl 0x2a08e7dd400 <col:5, col:9> col:9 used neg 'int'
|   | `-VarDecl 0x2a08e7dd480 <col:5, col:14> col:14 used ret 'int'
|   |-IfStmt 0x2a08e7dd688 <line:28:5, line:33:5>
|   | |-OpaqueValueExpr 0x2a08e7dd670 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2a08e7dd658 <line:28:40, line:33:5>
|   |   `-IfStmt 0x2a08e7dd630 <line:29:9, line:32:20> has_else
|   |     |-ImplicitCastExpr 0x2a08e7dd590 <line:29:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2a08e7dd570 <col:13> 'int' lvalue Var 0x2a08e7dd400 'neg' 'int'
|   |     |-ReturnStmt 0x2a08e7dd5e8 <line:30:13, col:21>
|   |     | `-UnaryOperator 0x2a08e7dd5d0 <col:20, col:21> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x2a08e7dd5a8 <col:21> 'int' 1
|   |     `-ReturnStmt 0x2a08e7dd620 <line:32:13, col:20>
|   |       `-IntegerLiteral 0x2a08e7dd5f8 <col:20> 'int' 1
|   `-IfStmt 0x2a08e7dd8c8 <line:37:5, line:40:16> has_else
|     |-ImplicitCastExpr 0x2a08e7dd808 <line:37:9> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x2a08e7dd7e8 <col:9> 'int' lvalue Var 0x2a08e7dd400 'neg' 'int'
|     |-ReturnStmt 0x2a08e7dd870 <line:38:9, col:17>
|     | `-UnaryOperator 0x2a08e7dd858 <col:16, col:17> 'int' prefix '-'
|     |   `-ImplicitCastExpr 0x2a08e7dd840 <col:17> 'int' <LValueToRValue>
|     |     `-DeclRefExpr 0x2a08e7dd820 <col:17> 'int' lvalue Var 0x2a08e7dd480 'ret' 'int'
|     `-ReturnStmt 0x2a08e7dd8b8 <line:40:9, col:16>
|       `-ImplicitCastExpr 0x2a08e7dd8a0 <col:16> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x2a08e7dd880 <col:16> 'int' lvalue Var 0x2a08e7dd480 'ret' 'int'
|-FunctionDecl 0x2a08e7ddc48 <line:76:1, line:89:1> line:76:13 used twos_complement 'void (unsigned char *, const unsigned char *, size_t, unsigned char)' static
| |-ParmVarDecl 0x2a08e7dd930 <col:29, col:44> col:44 used dst 'unsigned char *'
| |-ParmVarDecl 0x2a08e7dd9b0 <col:49, col:70> col:70 used src 'const unsigned char *'
| |-ParmVarDecl 0x2a08e7dda28 <line:77:29, col:36> col:36 used len 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7ddaa8 <col:41, col:55> col:55 used pad 'unsigned char'
| `-CompoundStmt 0x2a08e7da378 <line:78:1, line:89:1>
|   |-DeclStmt 0x2a08e7d9e28 <line:79:5, col:33>
|   | `-VarDecl 0x2a08e7d9d10 <col:5, col:32> col:18 used carry 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x2a08e7d9e10 <col:26, col:32> 'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x2a08e7d9df0 <col:26, col:32> 'int' '&'
|   |       |-ImplicitCastExpr 0x2a08e7d9dd8 <col:26> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x2a08e7d9dc0 <col:26> 'unsigned char' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2a08e7d9d78 <col:26> 'unsigned char' lvalue ParmVar 0x2a08e7ddaa8 'pad' 'unsigned char'
|   |       `-IntegerLiteral 0x2a08e7d9d98 <col:32> 'int' 1
|   |-CompoundAssignOperator 0x2a08e7d9e98 <line:82:5, col:12> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-DeclRefExpr 0x2a08e7d9e40 <col:5> 'unsigned char *' lvalue ParmVar 0x2a08e7dd930 'dst' 'unsigned char *'
|   | `-ImplicitCastExpr 0x2a08e7d9e80 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a08e7d9e60 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7dda28 'len' 'size_t':'unsigned long long'
|   |-CompoundAssignOperator 0x2a08e7d9f20 <line:83:5, col:12> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x2a08e7d9ec8 <col:5> 'const unsigned char *' lvalue ParmVar 0x2a08e7dd9b0 'src' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2a08e7d9f08 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a08e7d9ee8 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7dda28 'len' 'size_t':'unsigned long long'
|   `-WhileStmt 0x2a08e7da360 <line:85:5, line:88:5>
|     |-BinaryOperator 0x2a08e7d9fc8 <line:85:12, col:21> 'int' '!='
|     | |-UnaryOperator 0x2a08e7d9f70 <col:12, col:15> 'size_t':'unsigned long long' postfix '--'
|     | | `-DeclRefExpr 0x2a08e7d9f50 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7dda28 'len' 'size_t':'unsigned long long'
|     | `-ImplicitCastExpr 0x2a08e7d9fb0 <col:21> 'unsigned long long' <IntegralCast>
|     |   `-IntegerLiteral 0x2a08e7d9f88 <col:21> 'int' 0
|     `-CompoundStmt 0x2a08e7da340 <col:24, line:88:5>
|       |-BinaryOperator 0x2a08e7da290 <line:86:9, col:59> 'unsigned char' '='
|       | |-UnaryOperator 0x2a08e7da040 <col:9, col:16> 'unsigned char' lvalue prefix '*' cannot overflow
|       | | `-ParenExpr 0x2a08e7da020 <col:10, col:16> 'unsigned char *'
|       | |   `-UnaryOperator 0x2a08e7da008 <col:11, col:13> 'unsigned char *' prefix '--'
|       | |     `-DeclRefExpr 0x2a08e7d9fe8 <col:13> 'unsigned char *' lvalue ParmVar 0x2a08e7dd930 'dst' 'unsigned char *'
|       | `-CStyleCastExpr 0x2a08e7da268 <col:20, col:59> 'unsigned char' <IntegralCast>
|       |   `-ParenExpr 0x2a08e7da248 <col:35, col:59> 'unsigned int'
|       |     `-CompoundAssignOperator 0x2a08e7da1e0 <col:36, col:56> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|       |       |-DeclRefExpr 0x2a08e7da058 <col:36> 'unsigned int' lvalue Var 0x2a08e7d9d10 'carry' 'unsigned int'
|       |       `-ImplicitCastExpr 0x2a08e7da1c8 <col:45, col:56> 'unsigned int' <IntegralCast>
|       |         `-BinaryOperator 0x2a08e7da1a8 <col:45, col:56> 'int' '^'
|       |           |-ImplicitCastExpr 0x2a08e7da160 <col:45, col:52> 'int' <IntegralCast>
|       |           | `-ImplicitCastExpr 0x2a08e7da148 <col:45, col:52> 'unsigned char' <LValueToRValue>
|       |           |   `-UnaryOperator 0x2a08e7da110 <col:45, col:52> 'const unsigned char' lvalue prefix '*' cannot overflow
|       |           |     `-ParenExpr 0x2a08e7da0f0 <col:46, col:52> 'const unsigned char *'
|       |           |       `-UnaryOperator 0x2a08e7da0d8 <col:47, col:49> 'const unsigned char *' prefix '--'
|       |           |         `-DeclRefExpr 0x2a08e7da0b8 <col:49> 'const unsigned char *' lvalue ParmVar 0x2a08e7dd9b0 'src' 'const unsigned char *'
|       |           `-ImplicitCastExpr 0x2a08e7da190 <col:56> 'int' <IntegralCast>
|       |             `-ImplicitCastExpr 0x2a08e7da178 <col:56> 'unsigned char' <LValueToRValue>
|       |               `-DeclRefExpr 0x2a08e7da128 <col:56> 'unsigned char' lvalue ParmVar 0x2a08e7ddaa8 'pad' 'unsigned char'
|       `-CompoundAssignOperator 0x2a08e7da310 <line:87:9, col:19> 'unsigned int' '>>=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|         |-DeclRefExpr 0x2a08e7da2b0 <col:9> 'unsigned int' lvalue Var 0x2a08e7d9d10 'carry' 'unsigned int'
|         `-IntegerLiteral 0x2a08e7da2d0 <col:19> 'int' 8
|-FunctionDecl 0x2a08e7da6e8 <line:91:1, line:140:1> line:91:15 used i2c_ibuf 'size_t (const unsigned char *, size_t, int, unsigned char **)' static
| |-ParmVarDecl 0x2a08e7da3c0 <col:24, col:45> col:45 used b 'const unsigned char *'
| |-ParmVarDecl 0x2a08e7da438 <col:48, col:55> col:55 used blen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7da4b8 <col:61, col:65> col:65 used neg 'int'
| |-ParmVarDecl 0x2a08e7da540 <line:92:24, col:40> col:40 used pp 'unsigned char **'
| `-CompoundStmt 0x2a08e7d7280 <line:93:1, line:140:1>
|   |-DeclStmt 0x2a08e7da880 <line:94:5, col:25>
|   | `-VarDecl 0x2a08e7da7d8 <col:5, col:24> col:18 used pad 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x2a08e7da868 <col:24> 'unsigned int' <IntegralCast>
|   |     `-IntegerLiteral 0x2a08e7da840 <col:24> 'int' 0
|   |-DeclStmt 0x2a08e7da9a0 <line:95:5, col:18>
|   | |-VarDecl 0x2a08e7da8a8 <col:5, col:12> col:12 used ret 'size_t':'unsigned long long'
|   | `-VarDecl 0x2a08e7da920 <col:5, col:17> col:17 used i 'size_t':'unsigned long long'
|   |-DeclStmt 0x2a08e7dab10 <line:96:5, col:29>
|   | |-VarDecl 0x2a08e7da9d0 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x2a08e7daa50 <col:5, col:28> col:23 used pb 'unsigned char' cinit
|   |   `-ImplicitCastExpr 0x2a08e7daae0 <col:28> 'unsigned char' <IntegralCast>
|   |     `-IntegerLiteral 0x2a08e7daab8 <col:28> 'int' 0
|   |-IfStmt 0x2a08e7debb8 <line:98:5, line:123:5> has_else
|   | |-BinaryOperator 0x2a08e7dac58 <line:98:9, col:22> 'int' '&&'
|   | | |-BinaryOperator 0x2a08e7dac00 <col:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | | |-ImplicitCastExpr 0x2a08e7dabd0 <.//openssl//file_jk/after\crypto\asn1\a_int.c:98:9> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2a08e7dab28 <col:9> 'const unsigned char *' lvalue ParmVar 0x2a08e7da3c0 'b' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x2a08e7dabe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   | | |   `-ParenExpr 0x2a08e7dabb0 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x2a08e7dab88 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x2a08e7dab48 <col:26> 'int' 0
|   | | `-ImplicitCastExpr 0x2a08e7dac40 <.//openssl//file_jk/after\crypto\asn1\a_int.c:98:22> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2a08e7dac20 <col:22> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7da438 'blen' 'size_t':'unsigned long long'
|   | |-CompoundStmt 0x2a08e7dea68 <col:28, line:120:5>
|   | | |-BinaryOperator 0x2a08e7ddd38 <line:99:9, col:15> 'size_t':'unsigned long long' '='
|   | | | |-DeclRefExpr 0x2a08e7dac78 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da8a8 'ret' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x2a08e7ddd20 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2a08e7dacb0 <col:15> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7da438 'blen' 'size_t':'unsigned long long'
|   | | |-BinaryOperator 0x2a08e7dde40 <line:100:9, col:16> 'size_t':'unsigned long long' '='
|   | | | |-DeclRefExpr 0x2a08e7ddd58 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da920 'i' 'size_t':'unsigned long long'
|   | | | `-ImplicitCastExpr 0x2a08e7dde28 <col:13, col:16> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x2a08e7dde10 <col:13, col:16> 'unsigned char' <LValueToRValue>
|   | | |     `-ArraySubscriptExpr 0x2a08e7dddf0 <col:13, col:16> 'const unsigned char' lvalue
|   | | |       |-ImplicitCastExpr 0x2a08e7dddd8 <col:13> 'const unsigned char *' <LValueToRValue>
|   | | |       | `-DeclRefExpr 0x2a08e7ddd90 <col:13> 'const unsigned char *' lvalue ParmVar 0x2a08e7da3c0 'b' 'const unsigned char *'
|   | | |       `-IntegerLiteral 0x2a08e7dddb0 <col:15> 'int' 0
|   | | |-IfStmt 0x2a08e7de9a0 <line:101:9, line:118:9> has_else
|   | | | |-BinaryOperator 0x2a08e7ddf68 <line:101:13, col:29> 'int' '&&'
|   | | | | |-UnaryOperator 0x2a08e7dde98 <col:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | | `-ImplicitCastExpr 0x2a08e7dde80 <col:14> 'int' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x2a08e7dde60 <col:14> 'int' lvalue ParmVar 0x2a08e7da4b8 'neg' 'int'
|   | | | | `-ParenExpr 0x2a08e7ddf48 <col:21, col:29> 'int'
|   | | | |   `-BinaryOperator 0x2a08e7ddf28 <col:22, col:26> 'int' '>'
|   | | | |     |-ImplicitCastExpr 0x2a08e7ddef8 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x2a08e7ddeb0 <col:22> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da920 'i' 'size_t':'unsigned long long'
|   | | | |     `-ImplicitCastExpr 0x2a08e7ddf10 <col:26> 'unsigned long long' <IntegralCast>
|   | | | |       `-IntegerLiteral 0x2a08e7dded0 <col:26> 'int' 127
|   | | | |-CompoundStmt 0x2a08e7de0b8 <col:32, line:104:9>
|   | | | | |-BinaryOperator 0x2a08e7de000 <line:102:13, col:19> 'unsigned int' '='
|   | | | | | |-DeclRefExpr 0x2a08e7ddf88 <col:13> 'unsigned int' lvalue Var 0x2a08e7da7d8 'pad' 'unsigned int'
|   | | | | | `-ImplicitCastExpr 0x2a08e7ddfe8 <col:19> 'unsigned int' <IntegralCast>
|   | | | | |   `-IntegerLiteral 0x2a08e7ddfc0 <col:19> 'int' 1
|   | | | | `-BinaryOperator 0x2a08e7de098 <line:103:13, col:18> 'unsigned char' '='
|   | | | |   |-DeclRefExpr 0x2a08e7de020 <col:13> 'unsigned char' lvalue Var 0x2a08e7daa50 'pb' 'unsigned char'
|   | | | |   `-ImplicitCastExpr 0x2a08e7de080 <col:18> 'unsigned char' <IntegralCast>
|   | | | |     `-IntegerLiteral 0x2a08e7de058 <col:18> 'int' 0
|   | | | `-IfStmt 0x2a08e7de988 <line:104:16, line:118:9>
|   | | |   |-ImplicitCastExpr 0x2a08e7de0f8 <line:104:20> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x2a08e7de0d8 <col:20> 'int' lvalue ParmVar 0x2a08e7da4b8 'neg' 'int'
|   | | |   `-CompoundStmt 0x2a08e7de968 <col:25, line:118:9>
|   | | |     |-BinaryOperator 0x2a08e7de170 <line:105:13, col:18> 'unsigned char' '='
|   | | |     | |-DeclRefExpr 0x2a08e7de110 <col:13> 'unsigned char' lvalue Var 0x2a08e7daa50 'pb' 'unsigned char'
|   | | |     | `-ImplicitCastExpr 0x2a08e7de158 <col:18> 'unsigned char' <IntegralCast>
|   | | |     |   `-IntegerLiteral 0x2a08e7de130 <col:18> 'int' 255
|   | | |     `-IfStmt 0x2a08e7de940 <line:106:13, line:117:13> has_else
|   | | |       |-BinaryOperator 0x2a08e7de208 <line:106:17, col:21> 'int' '>'
|   | | |       | |-ImplicitCastExpr 0x2a08e7de1d8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       | | `-DeclRefExpr 0x2a08e7de190 <col:17> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da920 'i' 'size_t':'unsigned long long'
|   | | |       | `-ImplicitCastExpr 0x2a08e7de1f0 <col:21> 'unsigned long long' <IntegralCast>
|   | | |       |   `-IntegerLiteral 0x2a08e7de1b0 <col:21> 'int' 128
|   | | |       |-CompoundStmt 0x2a08e7de2a8 <col:26, line:108:13>
|   | | |       | `-BinaryOperator 0x2a08e7de288 <line:107:17, col:23> 'unsigned int' '='
|   | | |       |   |-DeclRefExpr 0x2a08e7de228 <col:17> 'unsigned int' lvalue Var 0x2a08e7da7d8 'pad' 'unsigned int'
|   | | |       |   `-ImplicitCastExpr 0x2a08e7de270 <col:23> 'unsigned int' <IntegralCast>
|   | | |       |     `-IntegerLiteral 0x2a08e7de248 <col:23> 'int' 1
|   | | |       `-IfStmt 0x2a08e7de928 <line:108:20, line:117:13>
|   | | |         |-BinaryOperator 0x2a08e7de338 <line:108:24, col:29> 'int' '=='
|   | | |         | |-ImplicitCastExpr 0x2a08e7de308 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |         | | `-DeclRefExpr 0x2a08e7de2c0 <col:24> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da920 'i' 'size_t':'unsigned long long'
|   | | |         | `-ImplicitCastExpr 0x2a08e7de320 <col:29> 'unsigned long long' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x2a08e7de2e0 <col:29> 'int' 128
|   | | |         `-CompoundStmt 0x2a08e7de900 <col:34, line:117:13>
|   | | |           |-ForStmt 0x2a08e7de650 <line:113:17, line:114:31>
|   | | |           | |-BinaryOperator 0x2a08e7de458 <line:113:22, col:35> 'size_t':'unsigned long long' ','
|   | | |           | | |-BinaryOperator 0x2a08e7de3b8 <col:22, col:28> 'unsigned int' '='
|   | | |           | | | |-DeclRefExpr 0x2a08e7de358 <col:22> 'unsigned int' lvalue Var 0x2a08e7da7d8 'pad' 'unsigned int'
|   | | |           | | | `-ImplicitCastExpr 0x2a08e7de3a0 <col:28> 'unsigned int' <IntegralCast>
|   | | |           | | |   `-IntegerLiteral 0x2a08e7de378 <col:28> 'int' 0
|   | | |           | | `-BinaryOperator 0x2a08e7de438 <col:31, col:35> 'size_t':'unsigned long long' '='
|   | | |           | |   |-DeclRefExpr 0x2a08e7de3d8 <col:31> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da920 'i' 'size_t':'unsigned long long'
|   | | |           | |   `-ImplicitCastExpr 0x2a08e7de420 <col:35> 'size_t':'unsigned long long' <IntegralCast>
|   | | |           | |     `-IntegerLiteral 0x2a08e7de3f8 <col:35> 'int' 1
|   | | |           | |-<<<NULL>>>
|   | | |           | |-BinaryOperator 0x2a08e7de4e8 <col:38, col:42> 'int' '<'
|   | | |           | | |-ImplicitCastExpr 0x2a08e7de4b8 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           | | | `-DeclRefExpr 0x2a08e7de478 <col:38> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da920 'i' 'size_t':'unsigned long long'
|   | | |           | | `-ImplicitCastExpr 0x2a08e7de4d0 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           | |   `-DeclRefExpr 0x2a08e7de498 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7da438 'blen' 'size_t':'unsigned long long'
|   | | |           | |-UnaryOperator 0x2a08e7de528 <col:48, col:49> 'size_t':'unsigned long long' postfix '++'
|   | | |           | | `-DeclRefExpr 0x2a08e7de508 <col:48> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da920 'i' 'size_t':'unsigned long long'
|   | | |           | `-CompoundAssignOperator 0x2a08e7de620 <line:114:21, col:31> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   | | |           |   |-DeclRefExpr 0x2a08e7de540 <col:21> 'unsigned int' lvalue Var 0x2a08e7da7d8 'pad' 'unsigned int'
|   | | |           |   `-ImplicitCastExpr 0x2a08e7de608 <col:28, col:31> 'unsigned int' <IntegralCast>
|   | | |           |     `-ImplicitCastExpr 0x2a08e7de5f0 <col:28, col:31> 'unsigned char' <LValueToRValue>
|   | | |           |       `-ArraySubscriptExpr 0x2a08e7de5d0 <col:28, col:31> 'const unsigned char' lvalue
|   | | |           |         |-ImplicitCastExpr 0x2a08e7de5a0 <col:28> 'const unsigned char *' <LValueToRValue>
|   | | |           |         | `-DeclRefExpr 0x2a08e7de560 <col:28> 'const unsigned char *' lvalue ParmVar 0x2a08e7da3c0 'b' 'const unsigned char *'
|   | | |           |         `-ImplicitCastExpr 0x2a08e7de5b8 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           |           `-DeclRefExpr 0x2a08e7de580 <col:30> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da920 'i' 'size_t':'unsigned long long'
|   | | |           |-BinaryOperator 0x2a08e7de7f0 <line:115:17, col:41> 'unsigned char' '='
|   | | |           | |-DeclRefExpr 0x2a08e7de688 <col:17> 'unsigned char' lvalue Var 0x2a08e7daa50 'pb' 'unsigned char'
|   | | |           | `-ImplicitCastExpr 0x2a08e7de7d8 <col:22, col:41> 'unsigned char' <IntegralCast>
|   | | |           |   `-ConditionalOperator 0x2a08e7de7a8 <col:22, col:41> 'unsigned int'
|   | | |           |     |-BinaryOperator 0x2a08e7de720 <col:22, col:29> 'int' '!='
|   | | |           |     | |-ImplicitCastExpr 0x2a08e7de6f0 <col:22> 'unsigned int' <LValueToRValue>
|   | | |           |     | | `-DeclRefExpr 0x2a08e7de6a8 <col:22> 'unsigned int' lvalue Var 0x2a08e7da7d8 'pad' 'unsigned int'
|   | | |           |     | `-ImplicitCastExpr 0x2a08e7de708 <col:29> 'unsigned int' <IntegralCast>
|   | | |           |     |   `-IntegerLiteral 0x2a08e7de6c8 <col:29> 'int' 0
|   | | |           |     |-IntegerLiteral 0x2a08e7de740 <col:33> 'unsigned int' 255
|   | | |           |     `-ImplicitCastExpr 0x2a08e7de790 <col:41> 'unsigned int' <IntegralCast>
|   | | |           |       `-IntegerLiteral 0x2a08e7de768 <col:41> 'int' 0
|   | | |           `-BinaryOperator 0x2a08e7de8e0 <line:116:17, col:28> 'unsigned int' '='
|   | | |             |-DeclRefExpr 0x2a08e7de810 <col:17> 'unsigned int' lvalue Var 0x2a08e7da7d8 'pad' 'unsigned int'
|   | | |             `-ImplicitCastExpr 0x2a08e7de8c8 <col:23, col:28> 'unsigned int' <IntegralCast>
|   | | |               `-BinaryOperator 0x2a08e7de8a8 <col:23, col:28> 'int' '&'
|   | | |                 |-ImplicitCastExpr 0x2a08e7de890 <col:23> 'int' <IntegralCast>
|   | | |                 | `-ImplicitCastExpr 0x2a08e7de878 <col:23> 'unsigned char' <LValueToRValue>
|   | | |                 |   `-DeclRefExpr 0x2a08e7de830 <col:23> 'unsigned char' lvalue Var 0x2a08e7daa50 'pb' 'unsigned char'
|   | | |                 `-IntegerLiteral 0x2a08e7de850 <col:28> 'int' 1
|   | | `-CompoundAssignOperator 0x2a08e7dea38 <line:119:9, col:16> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |   |-DeclRefExpr 0x2a08e7de9c8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da8a8 'ret' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x2a08e7dea20 <col:16> 'unsigned long long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x2a08e7dea08 <col:16> 'unsigned int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2a08e7de9e8 <col:16> 'unsigned int' lvalue Var 0x2a08e7da7d8 'pad' 'unsigned int'
|   | `-CompoundStmt 0x2a08e7deb98 <line:120:12, line:123:5>
|   |   |-BinaryOperator 0x2a08e7deaf8 <line:121:9, col:15> 'size_t':'unsigned long long' '='
|   |   | |-DeclRefExpr 0x2a08e7dea98 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da8a8 'ret' 'size_t':'unsigned long long'
|   |   | `-ImplicitCastExpr 0x2a08e7deae0 <col:15> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x2a08e7deab8 <col:15> 'int' 1
|   |   `-BinaryOperator 0x2a08e7deb78 <line:122:9, col:16> 'size_t':'unsigned long long' '='
|   |     |-DeclRefExpr 0x2a08e7deb18 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7da438 'blen' 'size_t':'unsigned long long'
|   |     `-ImplicitCastExpr 0x2a08e7deb60 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x2a08e7deb38 <col:16> 'int' 0
|   |-IfStmt 0x2a08e7d6e80 <line:125:5, line:126:16>
|   | |-BinaryOperator 0x2a08e7d6e18 <line:125:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '||'
|   | | |-BinaryOperator 0x2a08e7decb8 <.//openssl//file_jk/after\crypto\asn1\a_int.c:125:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | | |-ImplicitCastExpr 0x2a08e7dec88 <.//openssl//file_jk/after\crypto\asn1\a_int.c:125:9> 'unsigned char **' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x2a08e7debe0 <col:9> 'unsigned char **' lvalue ParmVar 0x2a08e7da540 'pp' 'unsigned char **'
|   | | | `-ImplicitCastExpr 0x2a08e7deca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char **' <BitCast>
|   | | |   `-ParenExpr 0x2a08e7dec68 <col:17, col:27> 'void *'
|   | | |     `-CStyleCastExpr 0x2a08e7dec40 <col:18, col:26> 'void *' <NullToPointer>
|   | | |       `-IntegerLiteral 0x2a08e7dec00 <col:26> 'int' 0
|   | | `-BinaryOperator 0x2a08e7d6df8 <.//openssl//file_jk/after\crypto\asn1\a_int.c:125:23, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | |   |-ParenExpr 0x2a08e7d6d38 <.//openssl//file_jk/after\crypto\asn1\a_int.c:125:23, col:31> 'unsigned char *'
|   | |   | `-BinaryOperator 0x2a08e7d6d18 <col:24, col:29> 'unsigned char *' '='
|   | |   |   |-DeclRefExpr 0x2a08e7decd8 <col:24> 'unsigned char *' lvalue Var 0x2a08e7da9d0 'p' 'unsigned char *'
|   | |   |   `-ImplicitCastExpr 0x2a08e7d6d00 <col:28, col:29> 'unsigned char *' <LValueToRValue>
|   | |   |     `-UnaryOperator 0x2a08e7d6ce8 <col:28, col:29> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | |   |       `-ImplicitCastExpr 0x2a08e7d6cd0 <col:29> 'unsigned char **' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x2a08e7d6cb0 <col:29> 'unsigned char **' lvalue ParmVar 0x2a08e7da540 'pp' 'unsigned char **'
|   | |   `-ImplicitCastExpr 0x2a08e7d6de0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |     `-ParenExpr 0x2a08e7d6dc0 <col:17, col:27> 'void *'
|   | |       `-CStyleCastExpr 0x2a08e7d6d98 <col:18, col:26> 'void *' <NullToPointer>
|   | |         `-IntegerLiteral 0x2a08e7d6d58 <col:26> 'int' 0
|   | `-ReturnStmt 0x2a08e7d6e70 <.//openssl//file_jk/after\crypto\asn1\a_int.c:126:9, col:16>
|   |   `-ImplicitCastExpr 0x2a08e7d6e58 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a08e7d6e38 <col:16> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da8a8 'ret' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x2a08e7d6f20 <line:133:5, col:10> 'unsigned char' '='
|   | |-UnaryOperator 0x2a08e7d6ed0 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2a08e7d6eb8 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2a08e7d6e98 <col:6> 'unsigned char *' lvalue Var 0x2a08e7da9d0 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x2a08e7d6f08 <col:10> 'unsigned char' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a08e7d6ee8 <col:10> 'unsigned char' lvalue Var 0x2a08e7daa50 'pb' 'unsigned char'
|   |-CompoundAssignOperator 0x2a08e7d6f98 <line:134:5, col:10> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-DeclRefExpr 0x2a08e7d6f40 <col:5> 'unsigned char *' lvalue Var 0x2a08e7da9d0 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x2a08e7d6f80 <col:10> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a08e7d6f60 <col:10> 'unsigned int' lvalue Var 0x2a08e7da7d8 'pad' 'unsigned int'
|   |-CallExpr 0x2a08e7d70e0 <line:136:5, col:35> 'void'
|   | |-ImplicitCastExpr 0x2a08e7d70c8 <col:5> 'void (*)(unsigned char *, const unsigned char *, size_t, unsigned char)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x2a08e7d6fc8 <col:5> 'void (unsigned char *, const unsigned char *, size_t, unsigned char)' Function 0x2a08e7ddc48 'twos_complement' 'void (unsigned char *, const unsigned char *, size_t, unsigned char)'
|   | |-ImplicitCastExpr 0x2a08e7d7120 <col:21> 'unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x2a08e7d6fe8 <col:21> 'unsigned char *' lvalue Var 0x2a08e7da9d0 'p' 'unsigned char *'
|   | |-ImplicitCastExpr 0x2a08e7d7138 <col:24> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x2a08e7d7008 <col:24> 'const unsigned char *' lvalue ParmVar 0x2a08e7da3c0 'b' 'const unsigned char *'
|   | |-ImplicitCastExpr 0x2a08e7d7150 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x2a08e7d7028 <col:27> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7da438 'blen' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x2a08e7d7168 <col:33> 'unsigned char' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a08e7d7048 <col:33> 'unsigned char' lvalue Var 0x2a08e7daa50 'pb' 'unsigned char'
|   |-CompoundAssignOperator 0x2a08e7d7208 <line:138:5, col:12> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x2a08e7d71b8 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2a08e7d71a0 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2a08e7d7180 <col:6> 'unsigned char **' lvalue ParmVar 0x2a08e7da540 'pp' 'unsigned char **'
|   | `-ImplicitCastExpr 0x2a08e7d71f0 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a08e7d71d0 <col:12> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da8a8 'ret' 'size_t':'unsigned long long'
|   `-ReturnStmt 0x2a08e7d7270 <line:139:5, col:12>
|     `-ImplicitCastExpr 0x2a08e7d7258 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x2a08e7d7238 <col:12> 'size_t':'unsigned long long' lvalue Var 0x2a08e7da8a8 'ret' 'size_t':'unsigned long long'
|-FunctionDecl 0x2a08e7d7618 <line:148:1, line:199:1> line:148:15 used c2i_ibuf 'size_t (unsigned char *, int *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x2a08e7d72f8 <col:24, col:39> col:39 used b 'unsigned char *'
| |-ParmVarDecl 0x2a08e7d7378 <col:42, col:47> col:47 used pneg 'int *'
| |-ParmVarDecl 0x2a08e7d73f8 <line:149:24, col:45> col:45 used p 'const unsigned char *'
| |-ParmVarDecl 0x2a08e7d7470 <col:48, col:55> col:55 used plen 'size_t':'unsigned long long'
| `-CompoundStmt 0x2a08e7e1298 <line:150:1, line:199:1>
|   |-DeclStmt 0x2a08e7d7808 <line:151:5, col:17>
|   | |-VarDecl 0x2a08e7d7708 <col:5, col:9> col:9 used neg 'int'
|   | `-VarDecl 0x2a08e7d7788 <col:5, col:14> col:14 used pad 'int'
|   |-IfStmt 0x2a08e7d7a30 <line:153:5, line:156:5>
|   | |-BinaryOperator 0x2a08e7d7898 <line:153:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a08e7d7868 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7d7820 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7d7470 'plen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2a08e7d7880 <col:17> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2a08e7d7840 <col:17> 'int' 0
|   | `-CompoundStmt 0x2a08e7d7a18 <col:20, line:156:5>
|   |   `-ReturnStmt 0x2a08e7d7a08 <line:155:9, col:16>
|   |     `-ImplicitCastExpr 0x2a08e7d79f0 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x2a08e7d79c8 <col:16> 'int' 0
|   |-BinaryOperator 0x2a08e7d7b78 <line:157:5, col:18> 'int' '='
|   | |-DeclRefExpr 0x2a08e7d7a48 <col:5> 'int' lvalue Var 0x2a08e7d7708 'neg' 'int'
|   | `-BinaryOperator 0x2a08e7d7b58 <col:11, col:18> 'int' '&'
|   |   |-ImplicitCastExpr 0x2a08e7d7b40 <col:11, col:14> 'int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x2a08e7d7b28 <col:11, col:14> 'unsigned char' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x2a08e7d7ae0 <col:11, col:14> 'const unsigned char' lvalue
|   |   |     |-ImplicitCastExpr 0x2a08e7d7ac8 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x2a08e7d7a80 <col:11> 'const unsigned char *' lvalue ParmVar 0x2a08e7d73f8 'p' 'const unsigned char *'
|   |   |     `-IntegerLiteral 0x2a08e7d7aa0 <col:13> 'int' 0
|   |   `-IntegerLiteral 0x2a08e7d7b00 <col:18> 'int' 128
|   |-IfStmt 0x2a08e7d7c78 <line:158:5, line:159:17>
|   | |-ImplicitCastExpr 0x2a08e7d7bb8 <line:158:9> 'int *' <LValueToRValue>
|   | | `-DeclRefExpr 0x2a08e7d7b98 <col:9> 'int *' lvalue ParmVar 0x2a08e7d7378 'pneg' 'int *'
|   | `-BinaryOperator 0x2a08e7d7c58 <line:159:9, col:17> 'int' '='
|   |   |-UnaryOperator 0x2a08e7d7c08 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | `-ImplicitCastExpr 0x2a08e7d7bf0 <col:10> 'int *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2a08e7d7bd0 <col:10> 'int *' lvalue ParmVar 0x2a08e7d7378 'pneg' 'int *'
|   |   `-ImplicitCastExpr 0x2a08e7d7c40 <col:17> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a08e7d7c20 <col:17> 'int' lvalue Var 0x2a08e7d7708 'neg' 'int'
|   |-IfStmt 0x2a08e7e0300 <line:161:5, line:169:5>
|   | |-BinaryOperator 0x2a08e7dfd98 <line:161:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a08e7dfd68 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7d7c90 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7d7470 'plen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2a08e7dfd80 <col:17> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2a08e7dfd40 <col:17> 'int' 1
|   | `-CompoundStmt 0x2a08e7e02e0 <col:20, line:169:5>
|   |   |-IfStmt 0x2a08e7e0278 <line:162:9, line:167:9>
|   |   | |-BinaryOperator 0x2a08e7dfe90 <line:162:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x2a08e7dfe60 <.//openssl//file_jk/after\crypto\asn1\a_int.c:162:13> 'unsigned char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2a08e7dfdb8 <col:13> 'unsigned char *' lvalue ParmVar 0x2a08e7d72f8 'b' 'unsigned char *'
|   |   | | `-ImplicitCastExpr 0x2a08e7dfe78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   |   | |   `-ParenExpr 0x2a08e7dfe40 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x2a08e7dfe18 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x2a08e7dfdd8 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x2a08e7e0260 <.//openssl//file_jk/after\crypto\asn1\a_int.c:162:24, line:167:9>
|   |   |   `-IfStmt 0x2a08e7e0238 <line:163:13, line:166:27> has_else
|   |   |     |-ImplicitCastExpr 0x2a08e7dfed0 <line:163:17> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x2a08e7dfeb0 <col:17> 'int' lvalue Var 0x2a08e7d7708 'neg' 'int'
|   |   |     |-BinaryOperator 0x2a08e7e00e0 <line:164:17, col:40> 'unsigned char' '='
|   |   |     | |-ArraySubscriptExpr 0x2a08e7dff48 <col:17, col:20> 'unsigned char' lvalue
|   |   |     | | |-ImplicitCastExpr 0x2a08e7dff30 <col:17> 'unsigned char *' <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x2a08e7dfee8 <col:17> 'unsigned char *' lvalue ParmVar 0x2a08e7d72f8 'b' 'unsigned char *'
|   |   |     | | `-IntegerLiteral 0x2a08e7dff08 <col:19> 'int' 0
|   |   |     | `-ImplicitCastExpr 0x2a08e7e00c8 <col:24, col:40> 'unsigned char' <IntegralCast>
|   |   |     |   `-BinaryOperator 0x2a08e7e00a8 <col:24, col:40> 'int' '+'
|   |   |     |     |-ParenExpr 0x2a08e7e0060 <col:24, col:36> 'int'
|   |   |     |     | `-BinaryOperator 0x2a08e7e0040 <col:25, col:32> 'int' '^'
|   |   |     |     |   |-ImplicitCastExpr 0x2a08e7e0028 <col:25, col:28> 'int' <IntegralCast>
|   |   |     |     |   | `-ImplicitCastExpr 0x2a08e7e0010 <col:25, col:28> 'unsigned char' <LValueToRValue>
|   |   |     |     |   |   `-ArraySubscriptExpr 0x2a08e7dffc8 <col:25, col:28> 'const unsigned char' lvalue
|   |   |     |     |   |     |-ImplicitCastExpr 0x2a08e7dffb0 <col:25> 'const unsigned char *' <LValueToRValue>
|   |   |     |     |   |     | `-DeclRefExpr 0x2a08e7dff68 <col:25> 'const unsigned char *' lvalue ParmVar 0x2a08e7d73f8 'p' 'const unsigned char *'
|   |   |     |     |   |     `-IntegerLiteral 0x2a08e7dff88 <col:27> 'int' 0
|   |   |     |     |   `-IntegerLiteral 0x2a08e7dffe8 <col:32> 'int' 255
|   |   |     |     `-IntegerLiteral 0x2a08e7e0080 <col:40> 'int' 1
|   |   |     `-BinaryOperator 0x2a08e7e0218 <line:166:17, col:27> 'unsigned char' '='
|   |   |       |-ArraySubscriptExpr 0x2a08e7e0160 <col:17, col:20> 'unsigned char' lvalue
|   |   |       | |-ImplicitCastExpr 0x2a08e7e0148 <col:17> 'unsigned char *' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x2a08e7e0100 <col:17> 'unsigned char *' lvalue ParmVar 0x2a08e7d72f8 'b' 'unsigned char *'
|   |   |       | `-IntegerLiteral 0x2a08e7e0120 <col:19> 'int' 0
|   |   |       `-ImplicitCastExpr 0x2a08e7e0200 <col:24, col:27> 'unsigned char' <LValueToRValue>
|   |   |         `-ArraySubscriptExpr 0x2a08e7e01e0 <col:24, col:27> 'const unsigned char' lvalue
|   |   |           |-ImplicitCastExpr 0x2a08e7e01c8 <col:24> 'const unsigned char *' <LValueToRValue>
|   |   |           | `-DeclRefExpr 0x2a08e7e0180 <col:24> 'const unsigned char *' lvalue ParmVar 0x2a08e7d73f8 'p' 'const unsigned char *'
|   |   |           `-IntegerLiteral 0x2a08e7e01a0 <col:26> 'int' 0
|   |   `-ReturnStmt 0x2a08e7e02d0 <line:168:9, col:16>
|   |     `-ImplicitCastExpr 0x2a08e7e02b8 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x2a08e7e0290 <col:16> 'int' 1
|   |-BinaryOperator 0x2a08e7e0378 <line:171:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2a08e7e0318 <col:5> 'int' lvalue Var 0x2a08e7d7788 'pad' 'int'
|   | `-IntegerLiteral 0x2a08e7e0350 <col:11> 'int' 0
|   |-IfStmt 0x2a08e7e0b48 <line:172:5, line:184:5> has_else
|   | |-BinaryOperator 0x2a08e7e0470 <line:172:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a08e7e0458 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2a08e7e0440 <col:9, col:12> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x2a08e7e03f8 <col:9, col:12> 'const unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x2a08e7e03e0 <col:9> 'const unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2a08e7e0398 <col:9> 'const unsigned char *' lvalue ParmVar 0x2a08e7d73f8 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x2a08e7e03b8 <col:11> 'int' 0
|   | | `-IntegerLiteral 0x2a08e7e0418 <col:17> 'int' 0
|   | |-CompoundStmt 0x2a08e7e04f8 <col:20, line:174:5>
|   | | `-BinaryOperator 0x2a08e7e04d8 <line:173:9, col:15> 'int' '='
|   | |   |-DeclRefExpr 0x2a08e7e0490 <col:9> 'int' lvalue Var 0x2a08e7d7788 'pad' 'int'
|   | |   `-IntegerLiteral 0x2a08e7e04b0 <col:15> 'int' 1
|   | `-IfStmt 0x2a08e7e0b30 <line:174:12, line:184:5>
|   |   |-BinaryOperator 0x2a08e7e05e8 <line:174:16, col:24> 'int' '=='
|   |   | |-ImplicitCastExpr 0x2a08e7e05d0 <col:16, col:19> 'int' <IntegralCast>
|   |   | | `-ImplicitCastExpr 0x2a08e7e05b8 <col:16, col:19> 'unsigned char' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x2a08e7e0570 <col:16, col:19> 'const unsigned char' lvalue
|   |   | |     |-ImplicitCastExpr 0x2a08e7e0558 <col:16> 'const unsigned char *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x2a08e7e0510 <col:16> 'const unsigned char *' lvalue ParmVar 0x2a08e7d73f8 'p' 'const unsigned char *'
|   |   | |     `-IntegerLiteral 0x2a08e7e0530 <col:18> 'int' 0
|   |   | `-IntegerLiteral 0x2a08e7e0590 <col:24> 'int' 255
|   |   `-CompoundStmt 0x2a08e7e0b08 <col:30, line:184:5>
|   |     |-DeclStmt 0x2a08e7e0680 <line:175:9, col:17>
|   |     | `-VarDecl 0x2a08e7e0618 <col:9, col:16> col:16 used i 'size_t':'unsigned long long'
|   |     |-ForStmt 0x2a08e7e0990 <line:181:9, line:182:23>
|   |     | |-BinaryOperator 0x2a08e7e0798 <line:181:14, col:27> 'size_t':'unsigned long long' ','
|   |     | | |-BinaryOperator 0x2a08e7e06e0 <col:14, col:20> 'int' '='
|   |     | | | |-DeclRefExpr 0x2a08e7e0698 <col:14> 'int' lvalue Var 0x2a08e7d7788 'pad' 'int'
|   |     | | | `-IntegerLiteral 0x2a08e7e06b8 <col:20> 'int' 0
|   |     | | `-BinaryOperator 0x2a08e7e0778 <col:23, col:27> 'size_t':'unsigned long long' '='
|   |     | |   |-DeclRefExpr 0x2a08e7e0700 <col:23> 'size_t':'unsigned long long' lvalue Var 0x2a08e7e0618 'i' 'size_t':'unsigned long long'
|   |     | |   `-ImplicitCastExpr 0x2a08e7e0760 <col:27> 'size_t':'unsigned long long' <IntegralCast>
|   |     | |     `-IntegerLiteral 0x2a08e7e0738 <col:27> 'int' 1
|   |     | |-<<<NULL>>>
|   |     | |-BinaryOperator 0x2a08e7e0828 <col:30, col:34> 'int' '<'
|   |     | | |-ImplicitCastExpr 0x2a08e7e07f8 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x2a08e7e07b8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x2a08e7e0618 'i' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x2a08e7e0810 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x2a08e7e07d8 <col:34> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7d7470 'plen' 'size_t':'unsigned long long'
|   |     | |-UnaryOperator 0x2a08e7e0868 <col:40, col:41> 'size_t':'unsigned long long' postfix '++'
|   |     | | `-DeclRefExpr 0x2a08e7e0848 <col:40> 'size_t':'unsigned long long' lvalue Var 0x2a08e7e0618 'i' 'size_t':'unsigned long long'
|   |     | `-CompoundAssignOperator 0x2a08e7e0960 <line:182:13, col:23> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |-DeclRefExpr 0x2a08e7e0880 <col:13> 'int' lvalue Var 0x2a08e7d7788 'pad' 'int'
|   |     |   `-ImplicitCastExpr 0x2a08e7e0948 <col:20, col:23> 'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x2a08e7e0930 <col:20, col:23> 'unsigned char' <LValueToRValue>
|   |     |       `-ArraySubscriptExpr 0x2a08e7e0910 <col:20, col:23> 'const unsigned char' lvalue
|   |     |         |-ImplicitCastExpr 0x2a08e7e08e0 <col:20> 'const unsigned char *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x2a08e7e08a0 <col:20> 'const unsigned char *' lvalue ParmVar 0x2a08e7d73f8 'p' 'const unsigned char *'
|   |     |         `-ImplicitCastExpr 0x2a08e7e08f8 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |           `-DeclRefExpr 0x2a08e7e08c0 <col:22> 'size_t':'unsigned long long' lvalue Var 0x2a08e7e0618 'i' 'size_t':'unsigned long long'
|   |     `-BinaryOperator 0x2a08e7e0ae8 <line:183:9, col:30> 'int' '='
|   |       |-DeclRefExpr 0x2a08e7e09c8 <col:9> 'int' lvalue Var 0x2a08e7d7788 'pad' 'int'
|   |       `-ConditionalOperator 0x2a08e7e0ab8 <col:15, col:30> 'int'
|   |         |-BinaryOperator 0x2a08e7e0a48 <col:15, col:22> 'int' '!='
|   |         | |-ImplicitCastExpr 0x2a08e7e0a30 <col:15> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x2a08e7e09e8 <col:15> 'int' lvalue Var 0x2a08e7d7788 'pad' 'int'
|   |         | `-IntegerLiteral 0x2a08e7e0a08 <col:22> 'int' 0
|   |         |-IntegerLiteral 0x2a08e7e0a68 <col:26> 'int' 1
|   |         `-IntegerLiteral 0x2a08e7e0a90 <col:30> 'int' 0
|   |-IfStmt 0x2a08e7e0df8 <line:186:5, line:189:5>
|   | |-BinaryOperator 0x2a08e7e0d50 <line:186:9, col:37> 'int' '&&'
|   | | |-ImplicitCastExpr 0x2a08e7e0d20 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7e0b70 <col:9> 'int' lvalue Var 0x2a08e7d7788 'pad' 'int'
|   | | `-ParenExpr 0x2a08e7e0d00 <col:16, col:37> 'int'
|   | |   `-BinaryOperator 0x2a08e7e0ce0 <col:17, col:36> 'int' '=='
|   | |     |-ImplicitCastExpr 0x2a08e7e0cc8 <col:17> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x2a08e7e0b90 <col:17> 'int' lvalue Var 0x2a08e7d7708 'neg' 'int'
|   | |     `-ParenExpr 0x2a08e7e0ca8 <col:24, col:36> 'int'
|   | |       `-BinaryOperator 0x2a08e7e0c88 <col:25, col:32> 'int' '&'
|   | |         |-ImplicitCastExpr 0x2a08e7e0c70 <col:25, col:28> 'int' <IntegralCast>
|   | |         | `-ImplicitCastExpr 0x2a08e7e0c58 <col:25, col:28> 'unsigned char' <LValueToRValue>
|   | |         |   `-ArraySubscriptExpr 0x2a08e7e0c10 <col:25, col:28> 'const unsigned char' lvalue
|   | |         |     |-ImplicitCastExpr 0x2a08e7e0bf8 <col:25> 'const unsigned char *' <LValueToRValue>
|   | |         |     | `-DeclRefExpr 0x2a08e7e0bb0 <col:25> 'const unsigned char *' lvalue ParmVar 0x2a08e7d73f8 'p' 'const unsigned char *'
|   | |         |     `-IntegerLiteral 0x2a08e7e0bd0 <col:27> 'int' 1
|   | |         `-IntegerLiteral 0x2a08e7e0c30 <col:32> 'int' 128
|   | `-CompoundStmt 0x2a08e7e0de0 <col:40, line:189:5>
|   |   `-ReturnStmt 0x2a08e7e0dd0 <line:188:9, col:16>
|   |     `-ImplicitCastExpr 0x2a08e7e0db8 <col:16> 'size_t':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x2a08e7e0d90 <col:16> 'int' 0
|   |-CompoundAssignOperator 0x2a08e7e0e68 <line:192:5, col:10> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-DeclRefExpr 0x2a08e7e0e10 <col:5> 'const unsigned char *' lvalue ParmVar 0x2a08e7d73f8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2a08e7e0e50 <col:10> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a08e7e0e30 <col:10> 'int' lvalue Var 0x2a08e7d7788 'pad' 'int'
|   |-CompoundAssignOperator 0x2a08e7e0f08 <line:193:5, col:13> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-DeclRefExpr 0x2a08e7e0e98 <col:5> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7d7470 'plen' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x2a08e7e0ef0 <col:13> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2a08e7e0ed8 <col:13> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a08e7e0eb8 <col:13> 'int' lvalue Var 0x2a08e7d7788 'pad' 'int'
|   |-IfStmt 0x2a08e7e1238 <line:195:5, line:196:52>
|   | |-BinaryOperator 0x2a08e7e1010 <line:195:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x2a08e7e0fe0 <.//openssl//file_jk/after\crypto\asn1\a_int.c:195:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7e0f38 <col:9> 'unsigned char *' lvalue ParmVar 0x2a08e7d72f8 'b' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x2a08e7e0ff8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x2a08e7e0fc0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2a08e7e0f98 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2a08e7e0f58 <col:26> 'int' 0
|   | `-CallExpr 0x2a08e7e1198 <.//openssl//file_jk/after\crypto\asn1\a_int.c:196:9, col:52> 'void'
|   |   |-ImplicitCastExpr 0x2a08e7e1180 <col:9> 'void (*)(unsigned char *, const unsigned char *, size_t, unsigned char)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2a08e7e1030 <col:9> 'void (unsigned char *, const unsigned char *, size_t, unsigned char)' Function 0x2a08e7ddc48 'twos_complement' 'void (unsigned char *, const unsigned char *, size_t, unsigned char)'
|   |   |-ImplicitCastExpr 0x2a08e7e11d8 <col:25> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a08e7e1050 <col:25> 'unsigned char *' lvalue ParmVar 0x2a08e7d72f8 'b' 'unsigned char *'
|   |   |-ImplicitCastExpr 0x2a08e7e11f0 <col:28> 'const unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a08e7e1070 <col:28> 'const unsigned char *' lvalue ParmVar 0x2a08e7d73f8 'p' 'const unsigned char *'
|   |   |-ImplicitCastExpr 0x2a08e7e1208 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2a08e7e1090 <col:31> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7d7470 'plen' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x2a08e7e1220 <col:37, col:51> 'unsigned char' <IntegralCast>
|   |     `-ConditionalOperator 0x2a08e7e1150 <col:37, col:51> 'unsigned int'
|   |       |-ImplicitCastExpr 0x2a08e7e1120 <col:37> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2a08e7e10b0 <col:37> 'int' lvalue Var 0x2a08e7d7708 'neg' 'int'
|   |       |-IntegerLiteral 0x2a08e7e10d0 <col:43> 'unsigned int' 255
|   |       `-ImplicitCastExpr 0x2a08e7e1138 <col:51> 'unsigned int' <IntegralCast>
|   |         `-IntegerLiteral 0x2a08e7e10f8 <col:51> 'int' 0
|   `-ReturnStmt 0x2a08e7e1288 <line:198:5, col:12>
|     `-ImplicitCastExpr 0x2a08e7e1270 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x2a08e7e1250 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7d7470 'plen' 'size_t':'unsigned long long'
|-FunctionDecl 0x2a08e7e1448 <line:201:1, line:204:1> line:201:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x2a08e7e1320 <col:22, col:36> col:36 invalid a 'int *'
| |-ParmVarDecl 0x2a08e7e13a8 <col:39, col:55> col:55 used pp 'unsigned char **'
| `-CompoundStmt 0x2a08e7e1568 <line:202:1, line:204:1>
|-FunctionDecl 0x2a08e7e17b0 <line:207:1, line:224:1> line:207:12 invalid asn1_get_uint64 'int (int *, const unsigned char *, size_t)' static
| |-ParmVarDecl 0x2a08e7e1590 <col:28, col:38> col:38 invalid pr 'int *'
| |-ParmVarDecl 0x2a08e7e1610 <col:42, col:63> col:63 used b 'const unsigned char *'
| |-ParmVarDecl 0x2a08e7e1688 <col:66, col:73> col:73 used blen 'size_t':'unsigned long long'
| `-CompoundStmt 0x2a08e7e5e58 <line:208:1, line:224:1>
|   |-DeclStmt 0x2a08e7e18f8 <line:209:5, col:13>
|   | `-VarDecl 0x2a08e7e1890 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   |-IfStmt 0x2a08e7e19d0 <line:212:5, line:215:5>
|   | |-OpaqueValueExpr 0x2a08e7e19b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2a08e7e19a0 <line:212:29, line:215:5>
|   |   `-ReturnStmt 0x2a08e7e1990 <line:214:9, col:16>
|   |     `-IntegerLiteral 0x2a08e7e1968 <col:16> 'int' 0
|   |-IfStmt 0x2a08e7e1b30 <line:216:5, line:217:16>
|   | |-BinaryOperator 0x2a08e7e1ad8 <line:216:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a08e7e1aa8 <.//openssl//file_jk/after\crypto\asn1\a_int.c:216:9> 'const unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7e19e8 <col:9> 'const unsigned char *' lvalue ParmVar 0x2a08e7e1610 'b' 'const unsigned char *'
|   | | `-ImplicitCastExpr 0x2a08e7e1ac0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x2a08e7e1a88 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2a08e7e1a60 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2a08e7e1a20 <col:26> 'int' 0
|   | `-ReturnStmt 0x2a08e7e1b20 <.//openssl//file_jk/after\crypto\asn1\a_int.c:217:9, col:16>
|   |   `-IntegerLiteral 0x2a08e7e1af8 <col:16> 'int' 0
|   |-ForStmt 0x2a08e7e5de8 <line:218:5, line:221:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x2a08e7e1c78 <line:218:24, col:28> 'int' '<'
|   | | |-ImplicitCastExpr 0x2a08e7e1c48 <col:24> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7e1c08 <col:24> 'size_t':'unsigned long long' lvalue Var 0x2a08e7e1890 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2a08e7e1c60 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2a08e7e1c28 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x2a08e7e1688 'blen' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x2a08e7e1cb8 <col:34, col:35> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x2a08e7e1c98 <col:34> 'size_t':'unsigned long long' lvalue Var 0x2a08e7e1890 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x2a08e7e5dd8 <col:39, line:221:5>
|   `-ReturnStmt 0x2a08e7e5e48 <line:223:5, col:12>
|     `-IntegerLiteral 0x2a08e7e5e20 <col:12> 'int' 1
|-FunctionDecl 0x2a08e7e6038 <line:231:1, line:240:1> line:231:15 invalid asn1_put_uint64 'size_t (unsigned char, int)' static
| |-ParmVarDecl 0x2a08e7e5ea8 <col:31, col:45> col:45 invalid b 'unsigned char'
| |-ParmVarDecl 0x2a08e7e5f28 <col:66, col:75> col:75 invalid r 'int'
| `-CompoundStmt 0x2a08e7e6260 <line:232:1, line:240:1>
|   |-DeclStmt 0x2a08e7e6178 <line:233:5, col:34>
|   | `-VarDecl 0x2a08e7e6110 <col:5, col:12> col:12 used off 'size_t':'unsigned long long'
|   `-ReturnStmt 0x2a08e7e6250 <line:239:5, col:12>
|     `-ImplicitCastExpr 0x2a08e7e6238 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x2a08e7e6218 <col:12> 'size_t':'unsigned long long' lvalue Var 0x2a08e7e6110 'off' 'size_t':'unsigned long long'
|-FunctionDecl 0x2a08e7e6560 <line:249:1, line:277:1> line:249:12 invalid asn1_get_int64 'int (int *, const unsigned char *, size_t, int)' static
| |-ParmVarDecl 0x2a08e7e6298 <col:27, col:36> col:36 invalid pr 'int *'
| |-ParmVarDecl 0x2a08e7e6318 <col:40, col:61> col:61 used b 'const unsigned char *'
| |-ParmVarDecl 0x2a08e7e6390 <col:64, col:71> col:71 used blen 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2a08e7e6410 <line:250:27, col:31> col:31 used neg 'int'
| `-CompoundStmt 0x2a08e7e6a10 <line:251:1, line:277:1>
|   |-IfStmt 0x2a08e7e6720 <line:253:5, line:254:16>
|   | |-OpaqueValueExpr 0x2a08e7e6708 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2a08e7e66f8 <col:9, col:16>
|   |   `-IntegerLiteral 0x2a08e7e66d0 <col:16> 'int' 0
|   |-IfStmt 0x2a08e7e69b0 <line:255:5, line:275:5> has_else
|   | |-ImplicitCastExpr 0x2a08e7e6770 <line:255:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2a08e7e6738 <col:9> 'int' lvalue ParmVar 0x2a08e7e6410 'neg' 'int'
|   | |-CompoundStmt 0x2a08e7e68c0 <col:14, line:268:5>
|   | | `-IfStmt 0x2a08e7e6898 <line:256:9, line:267:9> has_else
|   | |   |-OpaqueValueExpr 0x2a08e7e6880 <<invalid sloc>> '_Bool'
|   | |   |-CompoundStmt 0x2a08e7e6788 <line:256:29, line:260:9>
|   | |   `-IfStmt 0x2a08e7e6858 <col:16, line:267:9> has_else
|   | |     |-OpaqueValueExpr 0x2a08e7e6840 <<invalid sloc>> '_Bool'
|   | |     |-CompoundStmt 0x2a08e7e67c0 <line:260:40, line:264:9>
|   | |     `-CompoundStmt 0x2a08e7e6828 <col:16, line:267:9>
|   | |       `-ReturnStmt 0x2a08e7e6818 <line:266:13, col:20>
|   | |         `-IntegerLiteral 0x2a08e7e67f0 <col:20> 'int' 0
|   | `-CompoundStmt 0x2a08e7e6998 <line:268:12, line:275:5>
|   |   `-IfStmt 0x2a08e7e6970 <line:269:9, line:274:9> has_else
|   |     |-OpaqueValueExpr 0x2a08e7e6958 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x2a08e7e68d8 <line:269:29, line:271:9>
|   |     `-CompoundStmt 0x2a08e7e6940 <col:16, line:274:9>
|   |       `-ReturnStmt 0x2a08e7e6930 <line:273:13, col:20>
|   |         `-IntegerLiteral 0x2a08e7e6908 <col:20> 'int' 0
|   `-ReturnStmt 0x2a08e7e6a00 <line:276:5, col:12>
|     `-IntegerLiteral 0x2a08e7e69d8 <col:12> 'int' 1
|-FunctionDecl 0x2a08e7e6c08 <line:280:1, line:317:1> line:280:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2a08e7e6a58 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x2a08e7e6ae0 <col:50, col:72> col:72 used pp 'const unsigned char **'
| |-ParmVarDecl 0x2a08e7e6b60 <line:281:32, col:37> col:37 used len 'long'
| `-CompoundStmt 0x2a08e7e4f28 <line:282:1, line:317:1>
|   |-DeclStmt 0x2a08e7e2dd8 <line:284:5, col:13>
|   | `-VarDecl 0x2a08e7e2d70 <col:5, col:12> col:12 used r 'size_t':'unsigned long long'
|   |-DeclStmt 0x2a08e7e2e70 <line:285:5, col:12>
|   | `-VarDecl 0x2a08e7e2e08 <col:5, col:9> col:9 used neg 'int'
|   |-BinaryOperator 0x2a08e7e31b8 <line:287:5, col:38> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2a08e7e2e88 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2a08e7e2d70 'r' 'size_t':'unsigned long long'
|   | `-CallExpr 0x2a08e7e3100 <col:9, col:38> 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2a08e7e30e8 <col:9> 'size_t (*)(unsigned char *, int *, const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2a08e7e2ec0 <col:9> 'size_t (unsigned char *, int *, const unsigned char *, size_t)' Function 0x2a08e7d7618 'c2i_ibuf' 'size_t (unsigned char *, int *, const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x2a08e7e3140 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |   | `-ParenExpr 0x2a08e7e2f48 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2a08e7e2f20 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2a08e7e2ee0 <col:26> 'int' 0
|   |   |-ImplicitCastExpr 0x2a08e7e3158 <col:17, col:27> 'int *' <NullToPointer>
|   |   | `-ParenExpr 0x2a08e7e2fd0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2a08e7e2fa8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2a08e7e2f68 <col:26> 'int' 0
|   |   |-ImplicitCastExpr 0x2a08e7e3170 <.//openssl//file_jk/after\crypto\asn1\a_int.c:287:30, col:31> 'const unsigned char *' <LValueToRValue>
|   |   | `-UnaryOperator 0x2a08e7e3040 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x2a08e7e3028 <col:31> 'const unsigned char **' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2a08e7e2ff0 <col:31> 'const unsigned char **' lvalue ParmVar 0x2a08e7e6ae0 'pp' 'const unsigned char **'
|   |   `-ImplicitCastExpr 0x2a08e7e31a0 <col:35> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x2a08e7e3188 <col:35> 'long' <LValueToRValue>
|   |       `-DeclRefExpr 0x2a08e7e3058 <col:35> 'long' lvalue ParmVar 0x2a08e7e6b60 'len' 'long'
|   |-IfStmt 0x2a08e7e3320 <line:289:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-BinaryOperator 0x2a08e7e3250 <.//openssl//file_jk/after\crypto\asn1\a_int.c:289:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a08e7e3220 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7e31d8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2a08e7e2d70 'r' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2a08e7e3238 <col:14> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2a08e7e31f8 <col:14> 'int' 0
|   | `-ReturnStmt 0x2a08e7e3310 <line:290:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x2a08e7e32f8 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x2a08e7e32d8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2a08e7e32b0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2a08e7e3270 <col:26> 'int' 0
|   |-IfStmt 0x2a08e7e3760 <.//openssl//file_jk/after\crypto\asn1\a_int.c:292:5, line:298:9> has_else
|   | |-OpaqueValueExpr 0x2a08e7e3748 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2a08e7e3728 <line:292:40, line:297:5>
|   | | `-IfStmt 0x2a08e7e3710 <line:294:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |   |-OpaqueValueExpr 0x2a08e7e36f8 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x2a08e7e36e8 <.//openssl//file_jk/after\crypto\asn1\a_int.c:295:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |     `-ImplicitCastExpr 0x2a08e7e36d0 <col:17, col:27> 'int *' <NullToPointer>
|   | |       `-ParenExpr 0x2a08e7e36b0 <col:17, col:27> 'void *'
|   | |         `-CStyleCastExpr 0x2a08e7e3688 <col:18, col:26> 'void *' <NullToPointer>
|   | |           `-IntegerLiteral 0x2a08e7e3648 <col:26> 'int' 0
|   | `-NullStmt 0x2a08e7e3740 <.//openssl//file_jk/after\crypto\asn1\a_int.c:298:9>
|   |-IfStmt 0x2a08e7e39e8 <line:300:5, line:301:14>
|   | |-OpaqueValueExpr 0x2a08e7e39d0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2a08e7e39b8 <col:9, col:14> 'err' 0x2a08e7e3968
|   |-CompoundAssignOperator 0x2a08e7e3ba0 <line:308:5, col:12> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-UnaryOperator 0x2a08e7e3b50 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2a08e7e3b38 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2a08e7e3b18 <col:6> 'const unsigned char **' lvalue ParmVar 0x2a08e7e6ae0 'pp' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2a08e7e3b88 <col:12> 'long' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a08e7e3b68 <col:12> 'long' lvalue ParmVar 0x2a08e7e6b60 'len' 'long'
|   |-LabelStmt 0x2a08e7e3c80 <line:312:2, col:5> 'err'
|   | `-NullStmt 0x2a08e7e3c78 <col:5>
|   `-ReturnStmt 0x2a08e7e4f18 <line:316:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x2a08e7e4f00 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x2a08e7e4ee0 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x2a08e7e4eb8 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x2a08e7e4e78 <col:26> 'int' 0
|-FunctionDecl 0x2a08e7e5180 <.//openssl//file_jk/after\crypto\asn1\a_int.c:319:1, line:330:1> line:319:12 invalid asn1_string_get_int64 'int (int *, const int *, int)' static
| |-ParmVarDecl 0x2a08e7e4f98 <col:34, col:43> col:43 invalid pr 'int *'
| |-ParmVarDecl 0x2a08e7e5018 <col:47, col:66> col:66 invalid a 'const int *'
| |-ParmVarDecl 0x2a08e7e5098 <col:69, col:73> col:73 used itype 'int'
| `-CompoundStmt 0x2a08e7e5450 <line:320:1, line:330:1>
|   |-IfStmt 0x2a08e7e5360 <line:321:5, line:324:5>
|   | |-OpaqueValueExpr 0x2a08e7e5348 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2a08e7e5330 <line:321:20, line:324:5>
|   |   `-ReturnStmt 0x2a08e7e5320 <line:323:9, col:16>
|   |     `-IntegerLiteral 0x2a08e7e52f8 <col:16> 'int' 0
|   `-IfStmt 0x2a08e7e5438 <line:325:5, line:328:5>
|     |-OpaqueValueExpr 0x2a08e7e5420 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2a08e7e5408 <line:325:43, line:328:5>
|       `-ReturnStmt 0x2a08e7e53f8 <line:327:9, col:16>
|         `-IntegerLiteral 0x2a08e7e53d0 <col:16> 'int' 0
|-FunctionDecl 0x2a08e7e5670 <line:332:1, line:351:1> line:332:12 invalid asn1_string_set_int64 'int (int *, int, int)' static
| |-ParmVarDecl 0x2a08e7e5488 <col:34, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x2a08e7e5508 <col:50, col:58> col:58 invalid r 'int'
| |-ParmVarDecl 0x2a08e7e5588 <col:61, col:65> col:65 used itype 'int'
| `-CompoundStmt 0x2a08e7e5a08 <line:333:1, line:351:1>
|   |-DeclStmt 0x2a08e7e57c0 <line:334:5, col:34>
|   | `-VarDecl 0x2a08e7e5758 <col:5, col:19> col:19 invalid tbuf 'unsigned char'
|   |-DeclStmt 0x2a08e7e5850 <line:335:5, col:15>
|   | `-VarDecl 0x2a08e7e57e8 <col:5, col:12> col:12 used off 'size_t':'unsigned long long'
|   `-IfStmt 0x2a08e7e5980 <line:338:5, line:349:5> has_else
|     |-OpaqueValueExpr 0x2a08e7e5968 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x2a08e7e5928 <line:338:16, line:346:5>
|     `-CompoundStmt 0x2a08e7e5958 <col:12, line:349:5>
|-FunctionDecl 0x2a08e7e5bf0 <line:353:1, line:369:1> line:353:12 invalid asn1_string_get_uint64 'int (int *, const int *, int)' static
| |-ParmVarDecl 0x2a08e7e5a48 <col:35, col:45> col:45 invalid pr 'int *'
| |-ParmVarDecl 0x2a08e7e5ac8 <col:49, col:68> col:68 invalid a 'const int *'
| |-ParmVarDecl 0x2a08e7e5b48 <line:354:35, col:39> col:39 used itype 'int'
| `-CompoundStmt 0x2a08e7def00 <line:355:1, line:369:1>
|   |-IfStmt 0x2a08e7ded70 <line:356:5, line:359:5>
|   | |-OpaqueValueExpr 0x2a08e7ded58 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2a08e7ded40 <line:356:20, line:359:5>
|   |   `-ReturnStmt 0x2a08e7ded30 <line:358:9, col:16>
|   |     `-IntegerLiteral 0x2a08e7e5d68 <col:16> 'int' 0
|   |-IfStmt 0x2a08e7dee48 <line:360:5, line:363:5>
|   | |-OpaqueValueExpr 0x2a08e7dee30 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2a08e7dee18 <line:360:43, line:363:5>
|   |   `-ReturnStmt 0x2a08e7dee08 <line:362:9, col:16>
|   |     `-IntegerLiteral 0x2a08e7dede0 <col:16> 'int' 0
|   `-IfStmt 0x2a08e7deee8 <line:364:5, line:367:5>
|     |-OpaqueValueExpr 0x2a08e7deed0 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2a08e7deeb8 <line:364:31, line:367:5>
|       `-ReturnStmt 0x2a08e7deea8 <line:366:9, col:16>
|         `-IntegerLiteral 0x2a08e7dee80 <col:16> 'int' 0
|-FunctionDecl 0x2a08e7df0e8 <line:371:1, line:379:1> line:371:12 invalid asn1_string_set_uint64 'int (int *, int, int)' static
| |-ParmVarDecl 0x2a08e7def40 <col:35, col:48> col:48 invalid a 'int *'
| |-ParmVarDecl 0x2a08e7defc0 <col:51, col:60> col:60 invalid r 'int'
| |-ParmVarDecl 0x2a08e7df040 <col:63, col:67> col:67 used itype 'int'
| `-CompoundStmt 0x2a08e7df3b0 <line:372:1, line:379:1>
|   |-DeclStmt 0x2a08e7df238 <line:373:5, col:34>
|   | `-VarDecl 0x2a08e7df1d0 <col:5, col:19> col:19 invalid tbuf 'unsigned char'
|   `-DeclStmt 0x2a08e7df2c8 <line:374:5, col:15>
|     `-VarDecl 0x2a08e7df260 <col:5, col:12> col:12 used off 'size_t':'unsigned long long'
|-FunctionDecl 0x2a08e7df5a0 <line:387:1, line:447:1> line:387:15 invalid d2i_ASN1_UINTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2a08e7df3f0 <col:33, col:48> col:48 invalid a 'int **'
| |-ParmVarDecl 0x2a08e7df478 <col:51, col:73> col:73 used pp 'const unsigned char **'
| |-ParmVarDecl 0x2a08e7df4f8 <line:388:33, col:38> col:38 used length 'long'
| `-CompoundStmt 0x2a08e7e95d8 <line:389:1, line:447:1>
|   |-DeclStmt 0x2a08e7df778 <line:391:5, col:27>
|   | `-VarDecl 0x2a08e7df710 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x2a08e7df810 <line:392:5, col:21>
|   | `-VarDecl 0x2a08e7df7a8 <col:5, col:20> col:20 used s 'unsigned char *'
|   |-DeclStmt 0x2a08e7df8a8 <line:393:5, col:13>
|   | `-VarDecl 0x2a08e7df840 <col:5, col:10> col:10 used len 'long'
|   |-DeclStmt 0x2a08e7dfa60 <line:394:5, col:25>
|   | |-VarDecl 0x2a08e7df8d8 <col:5, col:9> col:9 used inf 'int'
|   | |-VarDecl 0x2a08e7df958 <col:5, col:14> col:14 used tag 'int'
|   | `-VarDecl 0x2a08e7df9d8 <col:5, col:19> col:19 used xclass 'int'
|   |-DeclStmt 0x2a08e7dfaf8 <line:395:5, col:10>
|   | `-VarDecl 0x2a08e7dfa90 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x2a08e7e6ec0 <line:397:5, line:402:9> has_else
|   | |-OpaqueValueExpr 0x2a08e7e6ea8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2a08e7e6e88 <line:397:40, line:401:5>
|   | | `-IfStmt 0x2a08e7e6e70 <line:398:9, line:399:25>
|   | |   |-OpaqueValueExpr 0x2a08e7e6e58 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x2a08e7e6e48 <col:13, col:25>
|   | |     `-ImplicitCastExpr 0x2a08e7e6e30 <col:20, col:25> 'int *' <NullToPointer>
|   | |       `-ParenExpr 0x2a08e7e6e10 <col:20, col:25> 'void *'
|   | |         `-ParenExpr 0x2a08e7e6df0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   | |           `-CStyleCastExpr 0x2a08e7e6dc8 <col:18, col:26> 'void *' <NullToPointer>
|   | |             `-IntegerLiteral 0x2a08e7dfd00 <col:26> 'int' 0
|   | `-NullStmt 0x2a08e7e6ea0 <.//openssl//file_jk/after\crypto\asn1\a_int.c:402:9>
|   |-BinaryOperator 0x2a08e7e6fa0 <line:404:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2a08e7e6ee8 <col:5> 'const unsigned char *' lvalue Var 0x2a08e7df710 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2a08e7e6f88 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2a08e7e6f70 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2a08e7e6f58 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2a08e7e6f20 <col:10> 'const unsigned char **' lvalue ParmVar 0x2a08e7df478 'pp' 'const unsigned char **'
|   |-BinaryOperator 0x2a08e7e7310 <line:405:5, col:58> 'int' '='
|   | |-DeclRefExpr 0x2a08e7e6fc0 <col:5> 'int' lvalue Var 0x2a08e7df8d8 'inf' 'int'
|   | `-CallExpr 0x2a08e7e72b0 <col:11, col:58> 'int'
|   |   |-ImplicitCastExpr 0x2a08e7e7298 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2a08e7e70e8 <col:11> 'int ()' Function 0x2a08e7e7020 'ASN1_get_object' 'int ()'
|   |   |-UnaryOperator 0x2a08e7e7128 <col:27, col:28> 'const unsigned char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x2a08e7e7108 <col:28> 'const unsigned char *' lvalue Var 0x2a08e7df710 'p' 'const unsigned char *'
|   |   |-UnaryOperator 0x2a08e7e71a8 <col:31, col:32> 'long *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x2a08e7e7140 <col:32> 'long' lvalue Var 0x2a08e7df840 'len' 'long'
|   |   |-UnaryOperator 0x2a08e7e71f8 <col:37, col:38> 'int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x2a08e7e71c0 <col:38> 'int' lvalue Var 0x2a08e7df958 'tag' 'int'
|   |   |-UnaryOperator 0x2a08e7e7248 <col:43, col:44> 'int *' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x2a08e7e7210 <col:44> 'int' lvalue Var 0x2a08e7df9d8 'xclass' 'int'
|   |   `-ImplicitCastExpr 0x2a08e7e72f8 <col:52> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x2a08e7e7260 <col:52> 'long' lvalue ParmVar 0x2a08e7df4f8 'length' 'long'
|   |-IfStmt 0x2a08e7e7468 <line:406:5, line:409:5>
|   | |-BinaryOperator 0x2a08e7e7390 <line:406:9, col:15> 'int' '&'
|   | | |-ImplicitCastExpr 0x2a08e7e7378 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7e7330 <col:9> 'int' lvalue Var 0x2a08e7df8d8 'inf' 'int'
|   | | `-IntegerLiteral 0x2a08e7e7350 <col:15> 'int' 128
|   | `-CompoundStmt 0x2a08e7e7450 <col:21, line:409:5>
|   |   `-GotoStmt 0x2a08e7e7438 <line:408:9, col:14> 'err' 0x2a08e7e73e8
|   |-IfStmt 0x2a08e7e7508 <line:411:5, line:414:5>
|   | |-OpaqueValueExpr 0x2a08e7e74f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2a08e7e74d8 <line:411:32, line:414:5>
|   |   `-GotoStmt 0x2a08e7e74c0 <line:413:9, col:14> 'err' 0x2a08e7e73e8
|   |-BinaryOperator 0x2a08e7e7780 <line:420:5, col:36> 'unsigned char *' '='
|   | |-DeclRefExpr 0x2a08e7e7520 <col:5> 'unsigned char *' lvalue Var 0x2a08e7df7a8 's' 'unsigned char *'
|   | `-ImplicitCastExpr 0x2a08e7e7768 <col:9, col:36> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x2a08e7e7740 <col:9, col:36> 'int'
|   |     |-ImplicitCastExpr 0x2a08e7e7728 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x2a08e7e7648 <col:9> 'int ()' Function 0x2a08e7e7580 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x2a08e7e7708 <col:24, col:35> 'int' '+'
|   |       |-CStyleCastExpr 0x2a08e7e76b8 <col:24, col:29> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x2a08e7e76a0 <col:29> 'long' <LValueToRValue> part_of_explicit_cast
|   |       |   `-DeclRefExpr 0x2a08e7e7668 <col:29> 'long' lvalue Var 0x2a08e7df840 'len' 'long'
|   |       `-IntegerLiteral 0x2a08e7e76e0 <col:35> 'int' 1
|   |-IfStmt 0x2a08e7e78e8 <line:421:5, line:424:5>
|   | |-BinaryOperator 0x2a08e7e7878 <line:421:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a08e7e7848 <.//openssl//file_jk/after\crypto\asn1\a_int.c:421:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7e77a0 <col:9> 'unsigned char *' lvalue Var 0x2a08e7df7a8 's' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x2a08e7e7860 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x2a08e7e7828 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2a08e7e7800 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2a08e7e77c0 <col:26> 'int' 0
|   | `-CompoundStmt 0x2a08e7e78d0 <.//openssl//file_jk/after\crypto\asn1\a_int.c:421:20, line:424:5>
|   |   `-GotoStmt 0x2a08e7e78b8 <line:423:9, col:14> 'err' 0x2a08e7e73e8
|   |-IfStmt 0x2a08e7e9110 <line:426:5, line:433:5>
|   | |-ImplicitCastExpr 0x2a08e7e7920 <line:426:9> 'long' <LValueToRValue>
|   | | `-DeclRefExpr 0x2a08e7e7900 <col:9> 'long' lvalue Var 0x2a08e7df840 'len' 'long'
|   | `-CompoundStmt 0x2a08e7e90e8 <col:14, line:433:5>
|   |   |-IfStmt 0x2a08e7e7b88 <line:427:9, line:430:9>
|   |   | |-BinaryOperator 0x2a08e7e7ad8 <line:427:13, col:35> 'int' '&&'
|   |   | | |-ParenExpr 0x2a08e7e7a00 <col:13, col:21> 'int'
|   |   | | | `-BinaryOperator 0x2a08e7e79e0 <col:14, col:20> 'int' '=='
|   |   | | |   |-ImplicitCastExpr 0x2a08e7e79c8 <col:14, col:15> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x2a08e7e79b0 <col:14, col:15> 'unsigned char' <LValueToRValue>
|   |   | | |   |   `-UnaryOperator 0x2a08e7e7970 <col:14, col:15> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |   |     `-ImplicitCastExpr 0x2a08e7e7958 <col:15> 'const unsigned char *' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x2a08e7e7938 <col:15> 'const unsigned char *' lvalue Var 0x2a08e7df710 'p' 'const unsigned char *'
|   |   | | |   `-IntegerLiteral 0x2a08e7e7988 <col:20> 'int' 0
|   |   | | `-ParenExpr 0x2a08e7e7ab8 <col:26, col:35> 'int'
|   |   | |   `-BinaryOperator 0x2a08e7e7a98 <col:27, col:34> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x2a08e7e7a68 <col:27> 'long' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x2a08e7e7a20 <col:27> 'long' lvalue Var 0x2a08e7df840 'len' 'long'
|   |   | |     `-ImplicitCastExpr 0x2a08e7e7a80 <col:34> 'long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x2a08e7e7a40 <col:34> 'int' 1
|   |   | `-CompoundStmt 0x2a08e7e7b68 <col:38, line:430:9>
|   |   |   |-UnaryOperator 0x2a08e7e7b18 <line:428:13, col:14> 'const unsigned char *' postfix '++'
|   |   |   | `-DeclRefExpr 0x2a08e7e7af8 <col:13> 'const unsigned char *' lvalue Var 0x2a08e7df710 'p' 'const unsigned char *'
|   |   |   `-UnaryOperator 0x2a08e7e7b50 <line:429:13, col:16> 'long' postfix '--'
|   |   |     `-DeclRefExpr 0x2a08e7e7b30 <col:13> 'long' lvalue Var 0x2a08e7df840 'len' 'long'
|   |   |-CallExpr 0x2a08e7e8fb0 <line:431:9, col:30> 'void *'
|   |   | |-ImplicitCastExpr 0x2a08e7e8f98 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x2a08e7e8e50 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x2a08e7e7be0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x2a08e7e9000 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x2a08e7e8fe8 <col:16> 'unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2a08e7e8e88 <col:16> 'unsigned char *' lvalue Var 0x2a08e7df7a8 's' 'unsigned char *'
|   |   | |-ImplicitCastExpr 0x2a08e7e9030 <col:19> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x2a08e7e9018 <col:19> 'const unsigned char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2a08e7e8ea8 <col:19> 'const unsigned char *' lvalue Var 0x2a08e7df710 'p' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x2a08e7e9048 <col:22, col:27> 'unsigned long long' <IntegralCast>
|   |   |   `-CStyleCastExpr 0x2a08e7e8f18 <col:22, col:27> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x2a08e7e8f00 <col:27> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |       `-DeclRefExpr 0x2a08e7e8ec8 <col:27> 'long' lvalue Var 0x2a08e7df840 'len' 'long'
|   |   `-CompoundAssignOperator 0x2a08e7e90b8 <line:432:9, col:14> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     |-DeclRefExpr 0x2a08e7e9060 <col:9> 'const unsigned char *' lvalue Var 0x2a08e7df710 'p' 'const unsigned char *'
|   |     `-ImplicitCastExpr 0x2a08e7e90a0 <col:14> 'long' <LValueToRValue>
|   |       `-DeclRefExpr 0x2a08e7e9080 <col:14> 'long' lvalue Var 0x2a08e7df840 'len' 'long'
|   |-BinaryOperator 0x2a08e7e93e0 <line:440:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2a08e7e9390 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2a08e7e9378 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2a08e7e9358 <col:6> 'const unsigned char **' lvalue ParmVar 0x2a08e7df478 'pp' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2a08e7e93c8 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2a08e7e93a8 <col:11> 'const unsigned char *' lvalue Var 0x2a08e7df710 'p' 'const unsigned char *'
|   |-LabelStmt 0x2a08e7e9448 <line:442:2, col:5> 'err'
|   | `-NullStmt 0x2a08e7e9440 <col:5>
|   `-ReturnStmt 0x2a08e7e95c8 <line:446:5, col:17>
|     `-ImplicitCastExpr 0x2a08e7e95b0 <col:12, col:17> 'int *' <NullToPointer>
|       `-ParenExpr 0x2a08e7e9590 <col:12, col:17> 'void *'
|         `-ParenExpr 0x2a08e7e9570 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|           `-CStyleCastExpr 0x2a08e7e9548 <col:18, col:26> 'void *' <NullToPointer>
|             `-IntegerLiteral 0x2a08e7e9508 <col:26> 'int' 0
|-FunctionDecl 0x2a08e7e7be0 <.//openssl//file_jk/after\crypto\asn1\a_int.c:431:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2a08e7e7c80 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2a08e7e7ce8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2a08e7e8dd0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2a08e7e9870 <line:449:1, line:491:1> line:449:21 invalid bn_to_asn1_string 'int *(const int *, int *, int)' static
| |-ParmVarDecl 0x2a08e7e9680 <col:39, col:53> col:53 invalid bn 'const int *'
| |-ParmVarDecl 0x2a08e7e9700 <col:57, col:70> col:70 invalid ai 'int *'
| |-ParmVarDecl 0x2a08e7e9780 <line:450:39, col:43> col:43 used atype 'int'
| `-CompoundStmt 0x2a08e7e2620 <line:451:1, line:491:1>
|   |-DeclStmt 0x2a08e7e99c0 <line:453:5, col:12>
|   | `-VarDecl 0x2a08e7e9958 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x2a08e7e9c58 <line:455:5, line:460:5> has_else
|   | |-OpaqueValueExpr 0x2a08e7e9c40 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2a08e7e9c00 <line:455:21, line:457:5>
|   | `-CompoundStmt 0x2a08e7e9c30 <col:12, line:460:5>
|   |-IfStmt 0x2a08e7e1d60 <line:462:5, line:465:5>
|   | |-OpaqueValueExpr 0x2a08e7e9da8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2a08e7e9d90 <line:462:22, line:465:5>
|   |   `-GotoStmt 0x2a08e7e9d78 <line:464:9, col:14> 'err' 0x2a08e7e9d28
|   |-IfStmt 0x2a08e7e21c8 <line:472:5, line:473:15>
|   | |-BinaryOperator 0x2a08e7e2140 <line:472:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a08e7e2128 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7e20e0 <col:9> 'int' lvalue Var 0x2a08e7e9958 'len' 'int'
|   | | `-IntegerLiteral 0x2a08e7e2100 <col:16> 'int' 0
|   | `-BinaryOperator 0x2a08e7e21a8 <line:473:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x2a08e7e2160 <col:9> 'int' lvalue Var 0x2a08e7e9958 'len' 'int'
|   |   `-IntegerLiteral 0x2a08e7e2180 <col:15> 'int' 1
|   |-IfStmt 0x2a08e7e2338 <line:475:5, line:478:5>
|   | |-OpaqueValueExpr 0x2a08e7e2320 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2a08e7e2308 <line:475:47, line:478:5>
|   |   `-GotoStmt 0x2a08e7e22f0 <line:477:9, col:14> 'err' 0x2a08e7e9d28
|   |-LabelStmt 0x2a08e7e2538 <line:487:2, col:5> 'err'
|   | `-NullStmt 0x2a08e7e2530 <col:5>
|   `-ReturnStmt 0x2a08e7e2610 <line:490:5, col:17>
|     `-ImplicitCastExpr 0x2a08e7e25f8 <col:12, col:17> 'int *' <NullToPointer>
|       `-ParenExpr 0x2a08e7e25d8 <col:12, col:17> 'void *'
|         `-ParenExpr 0x2a08e7e25b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|           `-CStyleCastExpr 0x2a08e7e2590 <col:18, col:26> 'void *' <NullToPointer>
|             `-IntegerLiteral 0x2a08e7e2550 <col:26> 'int' 0
|-FunctionDecl 0x2a08e7e2828 <.//openssl//file_jk/after\crypto\asn1\a_int.c:493:1, line:511:1> line:493:16 invalid asn1_string_to_bn 'int *(const int *, int *, int)' static
| |-ParmVarDecl 0x2a08e7e2680 <col:34, col:54> col:54 invalid ai 'const int *'
| |-ParmVarDecl 0x2a08e7e2700 <col:58, col:66> col:66 invalid bn 'int *'
| |-ParmVarDecl 0x2a08e7e2780 <line:494:34, col:38> col:38 used itype 'int'
| `-CompoundStmt 0x2a08e7e9ef0 <line:495:1, line:511:1>
|   |-IfStmt 0x2a08e7e2a30 <line:498:5, line:501:5>
|   | |-OpaqueValueExpr 0x2a08e7e2a18 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2a08e7e2a00 <line:498:44, line:501:5>
|   |   `-ReturnStmt 0x2a08e7e29f0 <line:500:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |     `-ImplicitCastExpr 0x2a08e7e29d8 <col:17, col:27> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x2a08e7e29b8 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x2a08e7e2990 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x2a08e7e2950 <col:26> 'int' 0
|   `-IfStmt 0x2a08e7e2ce0 <.//openssl//file_jk/after\crypto\asn1\a_int.c:504:5, line:507:5>
|     |-OpaqueValueExpr 0x2a08e7e2cc8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2a08e7e2cb0 <line:504:22, line:507:5>
|       `-ReturnStmt 0x2a08e7e2ca0 <line:506:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|         `-ImplicitCastExpr 0x2a08e7e2c88 <col:17, col:27> 'int *' <NullToPointer>
|           `-ParenExpr 0x2a08e7e2c68 <col:17, col:27> 'void *'
|             `-CStyleCastExpr 0x2a08e7e2c40 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x2a08e7e2c00 <col:26> 'int' 0
|-FunctionDecl 0x2a08e7ea080 <.//openssl//file_jk/after\crypto\asn1\a_int.c:513:1, line:516:1> line:513:5 invalid ASN1_INTEGER_get_int64 'int (int *, const int *)'
| |-ParmVarDecl 0x2a08e7e9f28 <col:28, col:37> col:37 invalid pr 'int *'
| |-ParmVarDecl 0x2a08e7e9fa8 <col:41, col:61> col:61 invalid a 'const int *'
| `-CompoundStmt 0x2a08e7ea148 <line:514:1, line:516:1>
|-FunctionDecl 0x2a08e7ea2d0 <line:518:1, line:521:1> line:518:5 invalid ASN1_INTEGER_set_int64 'int (int *, int)'
| |-ParmVarDecl 0x2a08e7ea170 <col:28, col:42> col:42 invalid a 'int *'
| |-ParmVarDecl 0x2a08e7ea1f0 <col:45, col:53> col:53 invalid r 'int'
| `-CompoundStmt 0x2a08e7ea398 <line:519:1, line:521:1>
|-FunctionDecl 0x2a08e7ea4e0 <line:523:1, line:526:1> line:523:5 invalid ASN1_INTEGER_get_uint64 'int (int *, const int *)'
| |-ParmVarDecl 0x2a08e7ea3c0 <col:29, col:39> col:39 invalid pr 'int *'
| |-ParmVarDecl 0x2a08e7ea440 <col:43, col:63> col:63 invalid a 'const int *'
| `-CompoundStmt 0x2a08e7ea5a8 <line:524:1, line:526:1>
|-FunctionDecl 0x2a08e7ea6f0 <line:528:1, line:531:1> line:528:5 invalid ASN1_INTEGER_set_uint64 'int (int *, int)'
| |-ParmVarDecl 0x2a08e7ea5d0 <col:29, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x2a08e7ea650 <col:46, col:55> col:55 invalid r 'int'
| `-CompoundStmt 0x2a08e7ea7b8 <line:529:1, line:531:1>
|-FunctionDecl 0x2a08e7ea940 <line:533:1, line:536:1> line:533:5 invalid ASN1_INTEGER_set 'int (int *, long)'
| |-ParmVarDecl 0x2a08e7ea7e0 <col:22, col:36> col:36 invalid a 'int *'
| |-ParmVarDecl 0x2a08e7ea860 <col:39, col:44> col:44 used v 'long'
| `-CompoundStmt 0x2a08e7eaa40 <line:534:1, line:536:1>
|-FunctionDecl 0x2a08e7eab30 <line:538:1, line:550:1> line:538:6 invalid ASN1_INTEGER_get 'long (const int *)'
| |-ParmVarDecl 0x2a08e7eaa68 <col:23, col:43> col:43 invalid a 'const int *'
| `-CompoundStmt 0x2a08e7eb058 <line:539:1, line:550:1>
|   |-DeclStmt 0x2a08e7eac70 <line:540:5, col:10>
|   | `-VarDecl 0x2a08e7eac08 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x2a08e7ead78 <line:542:5, line:543:16>
|   | |-OpaqueValueExpr 0x2a08e7ead60 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2a08e7ead50 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x2a08e7ead38 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2a08e7ead10 <col:16> 'int' 0
|   |-IfStmt 0x2a08e7eaed8 <line:545:5, line:546:17>
|   | |-BinaryOperator 0x2a08e7eae50 <line:545:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a08e7eae38 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7eadf0 <col:9> 'int' lvalue Var 0x2a08e7eac08 'i' 'int'
|   | | `-IntegerLiteral 0x2a08e7eae10 <col:14> 'int' 0
|   | `-ReturnStmt 0x2a08e7eaec8 <line:546:9, col:17>
|   |   `-ImplicitCastExpr 0x2a08e7eaeb0 <col:16, col:17> 'long' <IntegralCast>
|   |     `-UnaryOperator 0x2a08e7eae98 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x2a08e7eae70 <col:17> 'int' 1
|   `-IfStmt 0x2a08e7eb040 <line:547:5, line:548:17>
|     |-OpaqueValueExpr 0x2a08e7eb028 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x2a08e7eb018 <col:9, col:17>
|       `-ImplicitCastExpr 0x2a08e7eb000 <col:16, col:17> 'long' <IntegralCast>
|         `-UnaryOperator 0x2a08e7eafe8 <col:16, col:17> 'int' prefix '-'
|           `-IntegerLiteral 0x2a08e7eafc0 <col:17> 'int' 1
|-FunctionDecl 0x2a08e7eb200 <line:552:1, line:555:1> line:552:15 invalid BN_to_ASN1_INTEGER 'int *(const int *, int *)'
| |-ParmVarDecl 0x2a08e7eb0a0 <col:34, col:48> col:48 invalid bn 'const int *'
| |-ParmVarDecl 0x2a08e7eb120 <col:52, col:66> col:66 invalid ai 'int *'
| `-CompoundStmt 0x2a08e7eb2c8 <line:553:1, line:555:1>
|-FunctionDecl 0x2a08e7eb410 <line:557:1, line:560:1> line:557:9 invalid ASN1_INTEGER_to_BN 'int *(const int *, int *)'
| |-ParmVarDecl 0x2a08e7eb2f0 <col:28, col:48> col:48 invalid ai 'const int *'
| |-ParmVarDecl 0x2a08e7eb370 <col:52, col:60> col:60 invalid bn 'int *'
| `-CompoundStmt 0x2a08e7eb4d8 <line:558:1, line:560:1>
|-FunctionDecl 0x2a08e7eb620 <line:562:1, line:565:1> line:562:5 invalid ASN1_ENUMERATED_get_int64 'int (int *, const int *)'
| |-ParmVarDecl 0x2a08e7eb500 <col:31, col:40> col:40 invalid pr 'int *'
| |-ParmVarDecl 0x2a08e7eb580 <col:44, col:67> col:67 invalid a 'const int *'
| `-CompoundStmt 0x2a08e7eb6e8 <line:563:1, line:565:1>
|-FunctionDecl 0x2a08e7eb830 <line:567:1, line:570:1> line:567:5 invalid ASN1_ENUMERATED_set_int64 'int (int *, int)'
| |-ParmVarDecl 0x2a08e7eb710 <col:31, col:48> col:48 invalid a 'int *'
| |-ParmVarDecl 0x2a08e7eb790 <col:51, col:59> col:59 invalid r 'int'
| `-CompoundStmt 0x2a08e7eb8f8 <line:568:1, line:570:1>
|-FunctionDecl 0x2a08e7eba40 <line:572:1, line:575:1> line:572:5 invalid ASN1_ENUMERATED_set 'int (int *, long)'
| |-ParmVarDecl 0x2a08e7eb920 <col:25, col:42> col:42 invalid a 'int *'
| |-ParmVarDecl 0x2a08e7eb9a0 <col:45, col:50> col:50 used v 'long'
| `-CompoundStmt 0x2a08e7ebb40 <line:573:1, line:575:1>
|-FunctionDecl 0x2a08e7ebc00 <line:577:1, line:593:1> line:577:6 invalid ASN1_ENUMERATED_get 'long (const int *)'
| |-ParmVarDecl 0x2a08e7ebb68 <col:26, col:49> col:49 invalid a 'const int *'
| `-CompoundStmt 0x2a08e7e4230 <line:578:1, line:593:1>
|   |-DeclStmt 0x2a08e7ebd40 <line:579:5, col:10>
|   | `-VarDecl 0x2a08e7ebcd8 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x2a08e7e3de8 <line:581:5, line:582:16>
|   | |-OpaqueValueExpr 0x2a08e7e3dd0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2a08e7e3dc0 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x2a08e7e3da8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2a08e7e3d80 <col:16> 'int' 0
|   |-IfStmt 0x2a08e7e3e80 <line:583:5, line:584:17>
|   | |-OpaqueValueExpr 0x2a08e7e3e68 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2a08e7e3e58 <col:9, col:17>
|   |   `-ImplicitCastExpr 0x2a08e7e3e40 <col:16, col:17> 'long' <IntegralCast>
|   |     `-UnaryOperator 0x2a08e7e3e28 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x2a08e7e3e00 <col:17> 'int' 1
|   |-IfStmt 0x2a08e7e3f78 <line:585:5, line:586:16>
|   | |-OpaqueValueExpr 0x2a08e7e3f60 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2a08e7e3f50 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x2a08e7e3f38 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x2a08e7e3f10 <col:16> 'unsigned long' 4294967295
|   |-IfStmt 0x2a08e7e40b0 <line:588:5, line:589:17>
|   | |-BinaryOperator 0x2a08e7e4028 <line:588:9, col:14> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a08e7e4010 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7e3fc8 <col:9> 'int' lvalue Var 0x2a08e7ebcd8 'i' 'int'
|   | | `-IntegerLiteral 0x2a08e7e3fe8 <col:14> 'int' 0
|   | `-ReturnStmt 0x2a08e7e40a0 <line:589:9, col:17>
|   |   `-ImplicitCastExpr 0x2a08e7e4088 <col:16, col:17> 'long' <IntegralCast>
|   |     `-UnaryOperator 0x2a08e7e4070 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x2a08e7e4048 <col:17> 'int' 1
|   `-IfStmt 0x2a08e7e4218 <line:590:5, line:591:17>
|     |-OpaqueValueExpr 0x2a08e7e4200 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x2a08e7e41f0 <col:9, col:17>
|       `-ImplicitCastExpr 0x2a08e7e41d8 <col:16, col:17> 'long' <IntegralCast>
|         `-UnaryOperator 0x2a08e7e41c0 <col:16, col:17> 'int' prefix '-'
|           `-IntegerLiteral 0x2a08e7e4198 <col:17> 'int' 1
|-FunctionDecl 0x2a08e7e43a8 <line:595:1, line:598:1> line:595:18 invalid BN_to_ASN1_ENUMERATED 'int *(const int *, int *)'
| |-ParmVarDecl 0x2a08e7e4288 <col:40, col:54> col:54 invalid bn 'const int *'
| |-ParmVarDecl 0x2a08e7e4308 <col:58, col:75> col:75 invalid ai 'int *'
| `-CompoundStmt 0x2a08e7e4470 <line:596:1, line:598:1>
|-FunctionDecl 0x2a08e7e45b8 <line:600:1, line:603:1> line:600:9 invalid ASN1_ENUMERATED_to_BN 'int *(const int *, int *)'
| |-ParmVarDecl 0x2a08e7e4498 <col:31, col:54> col:54 invalid ai 'const int *'
| |-ParmVarDecl 0x2a08e7e4518 <col:58, col:66> col:66 invalid bn 'int *'
| `-CompoundStmt 0x2a08e7e4680 <line:601:1, line:603:1>
|-FunctionDecl 0x2a08e7e48e0 <line:606:1, line:620:1> line:606:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x2a08e7e46a8 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x2a08e7e4728 <col:35, col:40> col:40 used neg 'int *'
| |-ParmVarDecl 0x2a08e7e47b0 <col:45, col:67> col:67 used pp 'const unsigned char **'
| |-ParmVarDecl 0x2a08e7e4830 <col:71, col:76> col:76 used len 'long'
| `-CompoundStmt 0x2a08e7ec0f8 <line:607:1, line:620:1>
|   |-DeclStmt 0x2a08e7e4a38 <line:608:5, col:40>
|   | `-VarDecl 0x2a08e7e49d0 <col:5, col:19> col:19 invalid buf 'unsigned char'
|   |-DeclStmt 0x2a08e7e4ac8 <line:609:5, col:18>
|   | `-VarDecl 0x2a08e7e4a60 <col:5, col:12> col:12 used buflen 'size_t':'unsigned long long'
|   |-BinaryOperator 0x2a08e7ebe48 <line:611:5, col:43> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x2a08e7e4ae0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x2a08e7e4a60 'buflen' 'size_t':'unsigned long long'
|   | `-CallExpr 0x2a08e7e4d00 <col:14, col:43> 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2a08e7e4ce8 <col:14> 'size_t (*)(unsigned char *, int *, const unsigned char *, size_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2a08e7e4b18 <col:14> 'size_t (unsigned char *, int *, const unsigned char *, size_t)' Function 0x2a08e7d7618 'c2i_ibuf' 'size_t (unsigned char *, int *, const unsigned char *, size_t)'
|   |   |-ImplicitCastExpr 0x2a08e7e4d40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <NullToPointer>
|   |   | `-ParenExpr 0x2a08e7e4ba0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2a08e7e4b78 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2a08e7e4b38 <col:26> 'int' 0
|   |   |-ImplicitCastExpr 0x2a08e7e4d58 <col:17, col:27> 'int *' <NullToPointer>
|   |   | `-ParenExpr 0x2a08e7e4c28 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2a08e7e4c00 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2a08e7e4bc0 <col:26> 'int' 0
|   |   |-ImplicitCastExpr 0x2a08e7ebe00 <.//openssl//file_jk/after\crypto\asn1\a_int.c:611:35, col:36> 'const unsigned char *' <LValueToRValue>
|   |   | `-UnaryOperator 0x2a08e7e4c98 <col:35, col:36> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x2a08e7e4c80 <col:36> 'const unsigned char **' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x2a08e7e4c48 <col:36> 'const unsigned char **' lvalue ParmVar 0x2a08e7e47b0 'pp' 'const unsigned char **'
|   |   `-ImplicitCastExpr 0x2a08e7ebe30 <col:40> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x2a08e7ebe18 <col:40> 'long' <LValueToRValue>
|   |       `-DeclRefExpr 0x2a08e7e4cb0 <col:40> 'long' lvalue ParmVar 0x2a08e7e4830 'len' 'long'
|   |-IfStmt 0x2a08e7ebf38 <line:612:5, line:613:16>
|   | |-BinaryOperator 0x2a08e7ebee0 <line:612:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x2a08e7ebeb0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2a08e7ebe68 <col:9> 'size_t':'unsigned long long' lvalue Var 0x2a08e7e4a60 'buflen' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x2a08e7ebec8 <col:19> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2a08e7ebe88 <col:19> 'int' 0
|   | `-ReturnStmt 0x2a08e7ebf28 <line:613:9, col:16>
|   |   `-IntegerLiteral 0x2a08e7ebf00 <col:16> 'int' 0
|   `-IfStmt 0x2a08e7ebff8 <line:614:5, line:617:5>
|     |-OpaqueValueExpr 0x2a08e7ebfe0 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2a08e7ebfc8 <line:614:36, line:617:5>
|       `-ReturnStmt 0x2a08e7ebfb8 <line:616:9, col:16>
|         `-IntegerLiteral 0x2a08e7ebf90 <col:16> 'int' 0
`-FunctionDecl 0x2a08e7ec2f0 <line:622:1, line:629:1> line:622:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
  |-ParmVarDecl 0x2a08e7ec148 <col:20, col:35> col:35 used p 'unsigned char *'
  |-ParmVarDecl 0x2a08e7ec1c8 <col:38, col:47> col:47 invalid r 'int'
  |-ParmVarDecl 0x2a08e7ec248 <col:50, col:54> col:54 used neg 'int'
  `-CompoundStmt 0x2a08e7ec608 <line:623:1, line:629:1>
    |-DeclStmt 0x2a08e7ec440 <line:624:5, col:40>
    | `-VarDecl 0x2a08e7ec3d8 <col:5, col:19> col:19 invalid buf 'unsigned char'
    `-DeclStmt 0x2a08e7ec4d0 <line:625:5, col:15>
      `-VarDecl 0x2a08e7ec468 <col:5, col:12> col:12 used off 'size_t':'unsigned long long'
