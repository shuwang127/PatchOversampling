TranslationUnitDecl 0x1ebde912c18 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1ebde9134b0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1ebde9131b0 '__int128'
|-TypedefDecl 0x1ebde913520 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1ebde9131d0 'unsigned __int128'
|-TypedefDecl 0x1ebde913858 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1ebde913610 'struct __NSConstantString_tag'
|   `-Record 0x1ebde913578 '__NSConstantString_tag'
|-TypedefDecl 0x1ebde9138c8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1ebde912df0 'unsigned long long'
|-TypedefDecl 0x1ebde913960 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1ebde913920 'char *'
|   `-BuiltinType 0x1ebde912cb0 'char'
|-TypedefDecl 0x1ebde9139d0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1ebde913920 'char *'
|   `-BuiltinType 0x1ebde912cb0 'char'
|-TypedefDecl 0x1ebde913a90 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1ebde912df0 'unsigned long long'
|-TypedefDecl 0x1ebde913b00 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1ebde913920 'char *'
|   `-BuiltinType 0x1ebde912cb0 'char'
|-FunctionDecl 0x1ebe02ea3d0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ebe02ea470 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1ebe02ea4e0 <col:21> Implicit
|-FunctionDecl 0x1ebe02ea538 prev 0x1ebe02ea3d0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ebe02ea260 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1ebe02ea628 <col:21> Inherited Implicit
|-TypedefDecl 0x1ebe02ea668 prev 0x1ebde9138c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1ebde912df0 'unsigned long long'
|-TypedefDecl 0x1ebe02ea710 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1ebe02ea6e0 'size_t' sugar
|   |-Typedef 0x1ebe02ea668 'size_t'
|   `-BuiltinType 0x1ebde912df0 'unsigned long long'
|-TypedefDecl 0x1ebe02ea780 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1ebde912d50 'long long'
|-TypedefDecl 0x1ebe02ea7f0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1ebde912d50 'long long'
|-TypedefDecl 0x1ebe02ea860 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1ebde912d90 'unsigned short'
|-TypedefDecl 0x1ebe02ea8d0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1ebde912d90 'unsigned short'
|-TypedefDecl 0x1ebe02ea940 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x1ebde912d90 'unsigned short'
|-TypedefDecl 0x1ebe02ea9b0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1ebde912d10 'int'
|-TypedefDecl 0x1ebe02eaa20 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1ebde912d30 'long'
|-TypedefDecl 0x1ebe02eaa90 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1ebde912d50 'long long'
|-TypedefDecl 0x1ebe02eab20 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1ebe02eaaf0 '__time64_t' sugar
|   |-Typedef 0x1ebe02eaa90 '__time64_t'
|   `-BuiltinType 0x1ebde912d50 'long long'
|-FunctionDecl 0x1ebe02eac98 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1ebe02eaeb8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1ebe0328480 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1ebe02eaff8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1ebe02eb070 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1ebe02eb0e8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1ebe02eb168 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1ebe0328220 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1ebe0328560 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1ebe0328620 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1ebe0328790 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1ebe0328740 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1ebe03286e0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1ebe0328600 'struct threadlocaleinfostruct'
|       `-Record 0x1ebe0336300 'threadlocaleinfostruct'
|-TypedefDecl 0x1ebe03288a0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1ebe0328850 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1ebe03287f0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1ebe03286c0 'struct threadmbcinfostruct'
|       `-Record 0x1ebe0328620 'threadmbcinfostruct'
|-RecordDecl 0x1ebe03288f8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1ebe03289b0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1ebe0328a70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ebe0328b00 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1ebe0328b90 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1ebe0328c48 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1ebe0328bf0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1ebe0328a50 'struct localeinfo_struct'
|     `-Record 0x1ebe03289b0 'localeinfo_struct'
|-TypedefDecl 0x1ebe0328d20 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1ebe0328cd0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1ebe0328bf0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1ebe0328a50 'struct localeinfo_struct'
|       `-Record 0x1ebe03289b0 'localeinfo_struct'
|-RecordDecl 0x1ebe0328d98 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1ebe0328e50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ebe0328ec8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1ebe0328f88 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1ebe0329020 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1ebe0329090 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1ebe0329148 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1ebe03290f0 'struct localerefcount' sugar
|   `-RecordType 0x1ebe0328e30 'struct localerefcount'
|     `-Record 0x1ebe0328d98 'localerefcount'
|-RecordDecl 0x1ebe0336300 prev 0x1ebe0328560 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1ebe0336380 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ebe03363f8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1ebe0336468 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1ebe03364d8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1ebe0336548 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1ebe0336708 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1ebe0336778 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1ebe03367e8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1ebe0336858 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1ebe03368c8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1ebe0336938 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1ebe0336990 parent 0x1ebde912c18 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1ebe0336b20 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1ebe0336b90 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1ebe0336c00 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1ebe0336c70 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1ebe0336d10 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1ebe0336d80 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1ebe0336e90 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1ebe0336fc8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1ebe0337078 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1ebe0337020 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1ebe0328600 'struct threadlocaleinfostruct'
|     `-Record 0x1ebe0336300 'threadlocaleinfostruct'
|-RecordDecl 0x1ebe0337110 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1ebe03371d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ebe0337248 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1ebe03302a0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1ebe0330310 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1ebe0330380 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1ebe03303f0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1ebe0330460 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1ebe03304d0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1ebe0330540 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1ebe03305f0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1ebe03305a0 'struct _iobuf' sugar
|   `-RecordType 0x1ebe03371b0 'struct _iobuf'
|     `-Record 0x1ebe0337110 '_iobuf'
|-FunctionDecl 0x1ebe0330828 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1ebe03308f8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1ebde912d50 'long long'
|-FunctionDecl 0x1ebe0330ad8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe0330960 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1ebe0330dd0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ebe0330bb0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1ebe0330c28 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ebe0331180 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1ebe0330eb0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1ebe0330f30 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1ebe0330fb0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1ebe03394a0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ebe0339330 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1ebe03396d0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1ebe0339590 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ebe0339880 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe03397a0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1ebe0339a70 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ebe0339d68 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ebe0339b40 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1ebe0339bc0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1ebe0339f20 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe0339e40 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1ebe033a0d0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe0339ff0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1ebe033a280 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe033a1a0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ebe033a448 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe033a368 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1ebe033a5d8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ebe033a940 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1ebe033a6a0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ebe033a798 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1ebe033acf8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1ebe033aa20 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1ebe033aaa0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1ebe033ab18 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1ebe033aeb8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe033add8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ebe033b180 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ebe033af90 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1ebe033b010 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1ebe033f390 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ebe033f788 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ebe033f828 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ebe033f890 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ebe033f908 prev 0x1ebe033f788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ebe033f560 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1ebe033f5e0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1ebe033f9b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe033fe30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1ebe033fb60 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1ebe033fbe0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1ebe033fc60 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1ebe0340150 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1ebe03401f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ebe0340258 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ebe03402d0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1ebe033b350 prev 0x1ebe0340150 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ebe033ff10 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ebe033ff90 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1ebe033b448 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1ebe033b610 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ebe033b490 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ebe033b510 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ebe033b868 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ebe033b6f0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1ebe033b768 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1ebe033ba98 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ebe033b948 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1ebe033bd90 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1ebe033bb70 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1ebe033bbe8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1ebe033c228 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ebe033c2c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ebe03403a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ebe0340408 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ebe0340470 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ebe03404f8 prev 0x1ebe033c228 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ebe033be70 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1ebe033bee8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe033bf60 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe033bfd8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1ebe0340a00 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ebe03405e8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1ebe0340660 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03406d8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe0340750 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03407c8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1ebe0340ec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ebe0340bf0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1ebe0340c70 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1ebe0340ce8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1ebe0340f78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe033e428 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ebe03410c0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ebe0341140 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1ebe03411c0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1ebe0341238 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1ebe033e7d0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ebe033e870 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ebe033e8d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ebe033e950 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ebe033e9b8 prev 0x1ebe033e7d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ebe033e608 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1ebe033e688 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1ebe033eb98 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ebe033ea68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe033efd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe033ecd8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1ebe033ed58 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1ebe033edf0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ebe033f090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03413b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ebe033f1d0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ebe033f250 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ebe03416a0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe0341488 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ebe0341508 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ebe0341580 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe0341a00 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1ebe0341780 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ebe0341858 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1ebe0341db8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ebe0341ad8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1ebe0341b58 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1ebe0341bd8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1ebe0342018 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ebe0341e98 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1ebe0342408 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ebe03420e8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ebe0342168 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1ebe03421e8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1ebe0342668 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ebe03424e8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ebe0342b28 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ebe0342bc8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ebe0342c30 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ebe0342c98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ebe0342d00 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ebe0342d88 prev 0x1ebe0342b28 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ebe0342770 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1ebe03427e8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe0342860 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03428d8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1ebe0342f50 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe0342e70 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ebe03430e0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ebe0343268 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ebe033c520 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1ebe0343338 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1ebe033c370 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ebe033c848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ebe033c700 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1ebe033c8f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe033cb10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe033ca30 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1ebe033cd30 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1ebe033cbe8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1ebe033cee0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe033ce00 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1ebe033d130 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ebe033cfb8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1ebe033d038 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1ebe033d370 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1ebe033d410 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ebe033d480 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1ebe033d4e8 prev 0x1ebe033d370 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1ebe033d210 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1ebe033d5d8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1ebe033d708 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ebe033d628 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1ebe033d958 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ebe033d7e0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1ebe033d858 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ebe033db18 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ebe033da38 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1ebe033dd38 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ebe033dbf0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1ebe033df88 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ebe033de10 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1ebe033de88 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ebe033e148 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ebe033e068 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1ebe0394000 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ebe033e220 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1ebe033e2a0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1ebe03941c0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ebe03940e0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1ebe0394450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1ebe0394370 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1ebe03944f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1ebe03946f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ebe0394618 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1ebe0394880 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ebe0394b28 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ebe0394bc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ebe0394c38 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1ebe0394ca0 prev 0x1ebe0394b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1ebe0394a10 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1ebe0394e78 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1ebe0394d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe0395250 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe0395018 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1ebe0395090 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ebe0395300 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe0395528 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ebe0395448 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1ebe0395778 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe0395600 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ebe0395678 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe0395b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1ebe0395910 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1ebe0395990 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1ebe0395be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe0395e10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ebe0395d30 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1ebe0393068 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1ebe0392f20 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1ebe0393250 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1ebe03936a0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1ebe0393318 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ebe0393398 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1ebe0393418 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1ebe0393490 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ebe0393b20 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ebe0393790 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe0393808 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe0393880 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe0393900 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1ebe038eee0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ebe0393c10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe0393c88 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe0393d08 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1ebe038f0a8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ebe038efc8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1ebe038f480 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ebe038f520 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ebe038f588 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ebe038f600 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ebe038f668 prev 0x1ebe038f480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ebe038f240 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1ebe038f2c0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1ebe038f848 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ebe038f718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe038fc38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe038f958 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1ebe038f9d8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1ebe038fa50 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ebe038fcf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe0396050 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1ebe038fe38 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1ebe0395f50 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1ebe0396348 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe0396130 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1ebe03961b0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1ebe0396228 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03967d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ebe03964f0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1ebe0396568 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03965e8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1ebe0396890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe0396e60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe0396ad0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1ebe0396b48 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe0396bc8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1ebe0396c40 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ebe0396f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03972c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ebe03970a8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1ebe0397120 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03971a0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1ebe0397658 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03973a8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1ebe0397420 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03974a0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1ebe0397518 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03978b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1ebe0397958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe0397c10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1ebe0397aa0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1ebe038fef0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1ebe0397ce8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1ebe0397d60 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ebe0390170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ebe0390090 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1ebe0390218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03904d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ebe0390360 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1ebe03903d8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1ebe03908f0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ebe0390990 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ebe03909f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ebe0390a60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ebe0390ae0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1ebe0390b48 prev 0x1ebe03908f0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ebe03905b0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ebe0390630 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1ebe03906a8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ebe0390c48 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1ebe0390f00 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ebe0390fa0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ebe0391008 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ebe0391070 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ebe03910f0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ebe0391158 prev 0x1ebe0390f00 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ebe0390c90 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ebe0390d10 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ebe0390d88 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ebe0391258 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ebe03914b8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ebe03912a0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ebe0391320 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1ebe0391398 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03917b0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ebe0391598 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ebe0391618 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1ebe0391690 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe0391af8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ebe0391b98 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ebe0391c00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ebe0391c78 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1ebe0391ce0 prev 0x1ebe0391af8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ebe0391898 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1ebe0391910 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ebe0391dd8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1ebe0392048 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ebe03920e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ebe0392150 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ebe03921c8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1ebe0392230 prev 0x1ebe0392048 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ebe0391e28 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1ebe0391f10 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ebe0392328 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1ebe03924f0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ebe0392378 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1ebe03923f0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe0392748 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ebe03925d0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ebe0392648 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe0392ca8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ebe0392d48 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ebe0392db0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ebe0392e18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ebe0392e80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ebe039dfd0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1ebe039e038 prev 0x1ebe0392ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ebe03928e8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe0392960 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03929e0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ebe0392a58 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1ebe039e228 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1ebe039e0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe039e698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ebe039e278 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe039e2f0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe039e368 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe039e3e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ebe039e460 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe039ead8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ebe039e790 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe039e808 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe039e880 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe039e900 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1ebe039e978 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe039eea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ebe039ec90 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ebe039ed08 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe039ed88 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1ebe039ef60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe039c420 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ebe039c170 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ebe039c1e8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe039c268 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1ebe039c2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ebe039c4e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe039c8d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ebe039c628 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe039c6a0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe039c720 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ebe039c798 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe039cc98 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1ebe039c9c8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1ebe039ca48 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1ebe039cac0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe0399020 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1ebe03990c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ebe0399128 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ebe03991a0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1ebe0399208 prev 0x1ebe0399020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1ebe039ce40 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ebe039cec0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1ebe03993e8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1ebe03992b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe0399810 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ebe03998b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ebe0399918 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ebe0399980 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ebe0399a00 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1ebe0399a68 prev 0x1ebe0399810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ebe03994f8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ebe0399578 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1ebe03995f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1ebe0399c50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1ebe0399b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe0397f70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ebe0398010 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ebe0398078 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ebe03980e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ebe0398160 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ebe03981c8 prev 0x1ebe0397f70 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ebe0399ca0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1ebe0399d20 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ebe0399d98 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ebe03982c8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ebe0398490 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ebe0398318 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1ebe0398390 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe0398788 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ebe0398570 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe03985e8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe0398668 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1ebe0398b20 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ebe0398870 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe03988e8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe0398968 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ebe03989e0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe0398d88 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ebe0398c08 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ebe0398c88 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1ebe03a1000 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ebe0398e68 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1ebe03a12f0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ebe03a10d8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1ebe03a1150 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03a11d0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1ebe03a15e8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ebe03a13d0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03a1450 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ebe03a14c8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a1848 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ebe03a16d0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1ebe03a1748 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a1bd8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ebe03a1928 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1ebe03a19a0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03a1a20 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1ebe03a1a98 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a1da8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ebe03a1cc8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1ebe039cfc0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ebe03a1e80 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ebe03a1ef8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe039d180 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ebe039d0a0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1ebe039d310 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ebe039d558 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe039d3e0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1ebe039d458 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe039d7b0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe039d638 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ebe039d6b0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe039da08 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe039d890 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ebe039d908 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe039ddb8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe039dae8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1ebe039db60 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe039dbd8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a0110 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe039dea0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ebe039df18 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe039fff0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a0408 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03a01f8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ebe03a0270 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03a02e8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a0700 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03a04e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03a0568 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1ebe03a05e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03a09f8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03a07e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03a0860 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ebe03a08d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03a0cf0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03a0ad8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03a0b58 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ebe03a0bd0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03a2170 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03a0dd0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03a0e50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1ebe03a0ec8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03a0f40 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a2508 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03a2258 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03a22d8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ebe03a2350 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03a23c8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a28a0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03a25f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03a2670 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ebe03a26e8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03a2760 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a2d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03a2a50 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe03a2ad0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1ebe03a2b48 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ebe03a2df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe039f2f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03a2f38 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe039efe0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe039f060 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1ebe039f0d8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe039f690 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe039f3e0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe039f458 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe039f4d8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ebe039f550 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe039fbe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe039f880 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe039f900 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1ebe039f978 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ebe039f9f0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ebe039fca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe039b1d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe039fde8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe039fe60 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe039fee0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1ebe039ff58 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe039afa0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe039b618 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe039b2d0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe039b348 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe039b3c8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1ebe039b440 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe039b4b8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe039b888 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe039b710 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ebe039b788 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe039bae0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe039b968 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1ebe039b9e0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe039bdd0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe039bbc0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ebe039bc38 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe039bcb0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a4160 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe039beb8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1ebe039bf30 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03a4040 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a45b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03a4308 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe03a4380 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03a4400 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1ebe03a4478 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ebe03a4678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03a4a70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03a47c0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe03a4838 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03a48b8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1ebe03a4930 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03a8070 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03a4b60 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe03a4bd8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03a4c50 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03a4cd0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1ebe03a4d48 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03a85b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03a8268 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe03a82e0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03a8360 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1ebe03a83d8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ebe03a8450 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ebe03a8678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03a8af8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03a87c8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe03a8840 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03a88c0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1ebe03a8938 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03a89b0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a70c0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03a8bf0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ebe03a8c68 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03a8ce0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03a8d60 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ebe03a8dd8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03a8e50 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a7480 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1ebe03a71b8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03a7230 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03a72b0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1ebe03a76f0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ebe03a7580 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ebe03a7908 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ebe03a7be8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ebe03a79d0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03a7a48 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ebe03a7e30 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ebe03a7cc0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ebe03a5040 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ebe03a7f00 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1ebe03a51c8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ebe03a5400 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ebe03a5290 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03a5308 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1ebe03a55b0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ebe03a54d8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ebe03a5858 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ebe03a5680 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03a56f8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ebe03a5c00 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1ebe03a5930 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ebe03a59b0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1ebe03a5a28 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1ebe03a5f00 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ebe03a5ce0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03a5d58 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ebe03aa248 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1ebe03a5fd8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ebe03aa0a0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ebe03aa550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ebe03aa3e0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ebe03aa5f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03aa8b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ebe03aa738 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1ebe03aabc0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03aa988 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ebe03aaa00 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03aae10 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03aac98 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ebe03aad10 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03a6050 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ebe03aaee8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03a6200 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ebe03a6120 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03a63b0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ebe03a62d0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03a6748 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03a6480 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03a64f8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03a6570 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a6a38 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03a6828 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03a68a0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03a6918 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a6d28 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03a6b18 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03a6b90 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03a6c08 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a3020 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03a6e08 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03a6e80 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03a6ef8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a3320 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03a3100 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03a3178 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a3570 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03a33f8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03a3470 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a37c0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03a3648 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03a36c0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a3a10 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03a3898 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03a3910 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03a3dc8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03a3ae8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ebe03a3b60 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03a3bd8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03ac2c0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03a3ea8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ebe03a3f20 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03a3f98 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03ac0b0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03ac678 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03ac3a8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03ac420 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03ac498 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03ac968 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03ac758 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03ac7d0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03ac848 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03acc58 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03aca48 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03acac0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03acb38 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03acfe0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03acd38 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03acdb0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03ace28 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03acea0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03ab450 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03ab0c8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03ab140 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03ab1b8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03ab230 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03ab958 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03ab538 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03ab5b0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03ab628 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03ab6a0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03ab718 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03abd18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03abb08 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ebe03abb80 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03abbf8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ebe03abdd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03ad2f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03abfd0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ebe03ad0c0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03ad138 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03ad1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ebe03ad3b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03ad668 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03ad4f0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1ebe03ad568 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03ad820 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ebe03ad740 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03adb00 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03ad8f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03ad968 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03ad9e0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03add58 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03adbe0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03adc58 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b2f40 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03ade30 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03adea8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03adf20 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03b32c8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03b3020 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b3098 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b3110 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b3188 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b3490 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ebe03b33b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03b36d8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03b3560 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b35d8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b39e0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b37b0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b3828 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b3c30 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b3ab8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b3b30 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b3e80 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b3d08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b3d80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b2228 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b1f58 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b1fd0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03b2048 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b2518 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b2308 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b2380 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03b23f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b2808 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b25f8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b2670 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03b26e8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b2bc8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b28e8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03b2960 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b29d8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b3f50 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b2ca8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03b2d20 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b2d98 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b4240 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b4030 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03b40a8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b4120 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b4690 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b4320 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03b4398 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b4410 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03b4488 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b4a20 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b4778 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03b47f0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b4868 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03b48e0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b4db0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b4b08 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03b4b80 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b4bf8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03b4c70 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b5270 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b4e98 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b4f60 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b4fd8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b5050 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b5600 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b5358 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b53d0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b5448 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b54c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b5990 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b56e8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b5760 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b57d8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b5850 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b5e98 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b5a78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b5af0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b5b68 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b5be0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03b5c58 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b62d8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b5f98 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b6010 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b6088 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b6100 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03b6178 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b6708 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b63c8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b6440 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b64b8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b6530 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03b65a8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b6970 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b67f8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b6870 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b6bc0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b6a48 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b6ac0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b6ea8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b6c98 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b6d10 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03b6d88 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b7318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b7070 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b70e8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b7160 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b71d8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ebe03b73d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03b7948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b7520 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b7598 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b7610 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b7688 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b7700 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03b7e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b7b40 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b7bb8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b7c30 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b7ca8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ebe03b7d20 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ebe03aff10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03b0520 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03b0058 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b00d0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b0148 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03b01c0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b0238 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03b02b0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b0a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03b07e8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ebe03b0860 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1ebe03b0ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ebe03b0be8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ebe03bd248 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03b0ea0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ebe03bcff0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bd068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ebe03bd300 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ebe03bd418 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ebe03bd9b8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03bd6d8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ebe03bd750 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bd7c8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1ebe03bda70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ebe03bdb90 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ebe03bb1d0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03bde50 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ebe03bdec8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bdf40 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ebe03bafc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ebe03bb290 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ebe03bb3b0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ebe03bb6b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1ebe03bb4d8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ebe03bb550 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03bb5c8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1ebe03c02b0 <line:37:1, line:44:1>
|   |-DeclStmt 0x1ebe03bb800 <line:38:5, col:21>
|   | `-VarDecl 0x1ebe03bb798 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ebe03bb898 <line:39:5, col:13>
|   | `-VarDecl 0x1ebe03bb830 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ebe03bbbf0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ebe03bbbd8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ebe03bbaf0 <col:34> '<builtin fn type>' Function 0x1ebe03bb988 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ebe03bbb28 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1ebe03bb798 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ebe03bbb60 <col:29> 'const wchar_t *' lvalue ParmVar 0x1ebe03bb5c8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1ebe03bbeb0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1ebe03bbc20 <col:5> 'int' lvalue Var 0x1ebe03bb830 '_Ret' 'int'
|   | `-CallExpr 0x1ebe03bbdf0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1ebe03bbdd8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ebe03bbc58 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ebe03b5e98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ebe03bbe38 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ebe03bbc78 <col:27> 'wchar_t *' lvalue ParmVar 0x1ebe03bb4d8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ebe03bbe50 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ebe03bbc98 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ebe03bb550 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ebe03bbe68 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ebe03bbcb8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ebe03bb5c8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ebe03bbe80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1ebe03bbd40 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1ebe03bbd18 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1ebe03bbcd8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1ebe03bbe98 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ebe03bbd60 <col:59> 'va_list':'char *' lvalue Var 0x1ebe03bb798 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ebe03c0240 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ebe03c0228 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ebe03c0178 <col:34> '<builtin fn type>' Function 0x1ebe03c0010 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ebe03c01b0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1ebe03bb798 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ebe03c02a0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1ebe03c0288 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ebe03c0268 <col:12> 'int' lvalue Var 0x1ebe03bb830 '_Ret' 'int'
|-FunctionDecl 0x1ebe03bb988 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1ebe03bba28 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ebe03bba98 <col:34> Implicit
|-FunctionDecl 0x1ebe03c0010 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1ebe03c00b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ebe03c0120 <col:34> Implicit
|-FunctionDecl 0x1ebe03c05a8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1ebe03c0300 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ebe03c0378 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03c03f0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03c0468 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ebe03c0890 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1ebe03c0880 <line:51:5, col:62>
|     `-CallExpr 0x1ebe03c07c0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1ebe03c07a8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ebe03c0680 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ebe03b5e98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ebe03c0808 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ebe03c06a0 <col:27> 'wchar_t *' lvalue ParmVar 0x1ebe03c0300 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ebe03c0820 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ebe03c06c0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ebe03c0378 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ebe03c0838 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ebe03c06e0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ebe03c03f0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ebe03c0850 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1ebe03c0768 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1ebe03c0740 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1ebe03c0700 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1ebe03c0868 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ebe03c0788 <col:59> 'va_list':'char *' lvalue ParmVar 0x1ebe03c0468 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ebe03c0b30 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1ebe03c08b8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ebe03c0930 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03c09a8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03c0a20 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1ebe03be098 <line:61:1, line:68:1>
|   |-DeclStmt 0x1ebe03c0c80 <line:62:5, col:21>
|   | `-VarDecl 0x1ebe03c0c18 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ebe03c0d18 <line:63:5, col:13>
|   | `-VarDecl 0x1ebe03c0cb0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ebe03c0dc0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ebe03c0da8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ebe03c0d30 <col:34> '<builtin fn type>' Function 0x1ebe03bb988 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ebe03c0d50 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1ebe03c0c18 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ebe03c0d88 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ebe03c0a20 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1ebe03c0fc0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1ebe03c0df0 <col:5> 'int' lvalue Var 0x1ebe03c0cb0 '_Ret' 'int'
|   | `-CallExpr 0x1ebe03c0f00 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1ebe03c0ee8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ebe03c0e28 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ebe03b5e98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ebe03c0f48 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ebe03c0e48 <col:27> 'wchar_t *' lvalue ParmVar 0x1ebe03c08b8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ebe03c0f60 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ebe03c0e68 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ebe03c0930 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ebe03c0f78 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ebe03c0e88 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ebe03c09a8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ebe03c0f90 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ebe03c0ea8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ebe03c0a20 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1ebe03c0fa8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ebe03c0ec8 <col:64> 'va_list':'char *' lvalue Var 0x1ebe03c0c18 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ebe03be028 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ebe03be010 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ebe03c0fe0 <col:34> '<builtin fn type>' Function 0x1ebe03c0010 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ebe03bdff0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1ebe03c0c18 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ebe03be088 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1ebe03be070 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ebe03be050 <col:12> 'int' lvalue Var 0x1ebe03c0cb0 '_Ret' 'int'
|-FunctionDecl 0x1ebe03be428 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1ebe03be0e8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ebe03be160 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03be1d8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03be250 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ebe03be2c8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ebe03be6b0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1ebe03be6a0 <line:75:5, col:67>
|     `-CallExpr 0x1ebe03be5e0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1ebe03be5c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ebe03be508 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ebe03b5e98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ebe03be628 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ebe03be528 <col:27> 'wchar_t *' lvalue ParmVar 0x1ebe03be0e8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ebe03be640 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ebe03be548 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ebe03be160 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ebe03be658 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ebe03be568 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ebe03be1d8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ebe03be670 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ebe03be588 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ebe03be250 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1ebe03be688 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ebe03be5a8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1ebe03be2c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ebe03be8f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ebe03be6d8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03be750 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1ebe03beb48 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ebe03be9d0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03bea48 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03bee30 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ebe03bec20 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bec98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ebe03bed10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ebe03b9118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03b8fa0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03b9018 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ebe03b91c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03b95d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b93c8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03b9440 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b94b8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ebe03b9690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03b9948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03b97d0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ebe03b9848 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03b9c30 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03b9a20 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03b9a98 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03b9b10 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03ba020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03b9dd0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03b9e48 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ebe03ba0d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03ba5a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03ba2d0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03ba348 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03ba3c0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ebe03ba660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03ba918 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03ba7a0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03ba818 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03bac00 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03ba9f0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03baa68 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03baae0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03bf0e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03bada0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bae18 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03bae90 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ebe03bf1a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03bf720 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03bf3a0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bf418 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03bf490 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bf508 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ebe03bf7e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03bfb30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03bf920 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bf998 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03bfa10 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03bfeb8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03bfc10 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bfc88 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03bfd00 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03bfd78 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03c11d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1ebe03c10f0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ebe03c1278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03c15f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03c1478 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03c14f0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ebe03c16a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03c18c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ebe03c17e0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1ebe03c1b08 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ebe03c1990 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03c1a08 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03c1e08 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1ebe03c1be8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1ebe03c1c60 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ebe03bc178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ebe03c1fa0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bbfd0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1ebe03bc228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03bc630 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ebe03bc370 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ebe03bc3e8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03bc460 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ebe03bca90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ebe03bc7d0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bc848 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bc8c0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1ebe03bcb48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03c50a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ebe03bcc90 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1ebe03bcd08 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ebe03bcd80 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03bcdf8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1ebe03c5300 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1ebe03c5190 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1ebe03c5540 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ebe03c53d0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1ebe03c5448 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ebe03c56f8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ebe03c5618 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1ebe03c59e8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ebe03c57c8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1ebe03c5840 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ebe03c5c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ebe03c5b80 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1ebe03c5d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ebe03c5f18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ebe03c5e40 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1ebe03c4148 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ebe03c5fe8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03c4050 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ebe03c4390 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ebe03c4220 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03c4298 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ebe03c4540 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ebe03c4468 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1ebe03c46e8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ebe03c4610 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1ebe03c4898 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe03c47b8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ebe03c4a48 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ebe03c4968 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ebe03c4dc0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ebe03c4b20 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1ebe03c4b98 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03c4c10 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03c4c88 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1ebe03c6240 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ebe03c4eb0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1ebe03c4f28 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03c4fa0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03c6070 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03c60e8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1ebe03c6550 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ebe03c6330 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03c63b0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1ebe03c6430 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1ebe03c6710 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ebe03c6630 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ebe03c6a00 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ebe03c67e0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1ebe03c6860 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1ebe03c68e0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1ebe03c6bc0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ebe03c6ae0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1ebe03c6f38 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ebe03c6c98 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1ebe03c6d10 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ebe03c6d88 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ebe03c6e00 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1ebe03c8208 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ebe03c8090 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1ebe03c8108 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1ebe03c8540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ebe03c83c0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1ebe03c8440 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1ebe03c85f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1ebe03c88a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ebe03c8948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1ebe03c8c88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ebe03c8b10 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1ebe03c8b90 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1ebe03c8d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1ebe03c90a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ebe03c9140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1ebe03c93e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ebe03c9300 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1ebe03c9488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1ebe03c9708 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ebe03c97a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1ebe03c9a50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1ebe03c9970 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1ebe03c9af8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1ebe03c9dd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ebe03c9cf8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1ebe03c9e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1ebe03c21a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ebe03c2030 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1ebe03c20a8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1ebe03c2258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1ebe03c2518 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ebe03c25b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1ebe03c27f0 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x1ebe03c28c0 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x1ebe03c29c0 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x1ebe03c2bb8 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x1ebe03c2c80 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x1ebe03c2f00 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x1ebe03c2d18 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x1ebe03c2d98 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x1ebe03cb398 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x1ebe03cb0c0 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x1ebe03cb140 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x1ebe03cb1b8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03cb560 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x1ebe03cb600 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03cb670 <col:55> Implicit
| `-PureAttr 0x1ebe03cb6c8 <col:55> Implicit
|-FunctionDecl 0x1ebe03cb6f0 prev 0x1ebe03cb560 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x1ebe03cb480 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ebe03cb7e0 <col:55> Inherited Implicit
| `-PureAttr 0x1ebe03cb808 <col:55> Inherited Implicit
|-FunctionDecl 0x1ebe03cba70 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03cb848 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03cb8c0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03cbc30 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x1ebe03cbcd0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03cbd40 <col:55> Implicit
| `-PureAttr 0x1ebe03cbd98 <col:55> Implicit
|-FunctionDecl 0x1ebe03cbdc0 prev 0x1ebe03cbc30 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x1ebe03cbb50 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ebe03cbeb0 <col:55> Inherited Implicit
| `-PureAttr 0x1ebe03cbed8 <col:55> Inherited Implicit
|-FunctionDecl 0x1ebe03cc0d0 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03cbf18 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03cbf90 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03cc290 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x1ebe03cc330 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03cc3a0 <col:55> Implicit
| `-PureAttr 0x1ebe03cc3f8 <col:55> Implicit
|-FunctionDecl 0x1ebe03cc420 prev 0x1ebe03cc290 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x1ebe03cc1b0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ebe03cc510 <col:55> Inherited Implicit
| `-PureAttr 0x1ebe03cc538 <col:55> Inherited Implicit
|-FunctionDecl 0x1ebe03cc6f0 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03cc578 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03cc5f0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03cc8b0 <line:127:55> col:55 implicit used isdigit 'int (int)' extern
| |-ParmVarDecl 0x1ebe03cc950 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03cc9c0 <col:55> Implicit
| `-PureAttr 0x1ebe03cca18 <col:55> Implicit
|-FunctionDecl 0x1ebe03cca40 prev 0x1ebe03cc8b0 <col:43, col:74> col:55 used isdigit 'int (int)'
| |-ParmVarDecl 0x1ebe03cc7d0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ebe03ccb30 <col:55> Inherited Implicit
| `-PureAttr 0x1ebe03ccb58 <col:55> Inherited Implicit
|-FunctionDecl 0x1ebe03ccd10 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03ccb98 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03ccc10 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03cced0 <line:129:36> col:36 implicit isxdigit 'int (int)' extern
| |-ParmVarDecl 0x1ebe03ccf70 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03ccfe0 <col:36> Implicit
| `-PureAttr 0x1ebe03cd038 <col:36> Implicit
|-FunctionDecl 0x1ebe03cd0e0 prev 0x1ebe03cced0 <col:24, col:56> col:36 isxdigit 'int (int)'
| |-ParmVarDecl 0x1ebe03ccdf0 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x1ebe03cd1d0 <col:36> Inherited Implicit
| `-PureAttr 0x1ebe03cd1f8 <col:36> Inherited Implicit
|-FunctionDecl 0x1ebe03cd3b0 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03cd238 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x1ebe03cd2b0 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03cd570 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x1ebe03cd610 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03cd680 <col:55> Implicit
| `-PureAttr 0x1ebe03cd6d8 <col:55> Implicit
|-FunctionDecl 0x1ebe03cd700 prev 0x1ebe03cd570 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x1ebe03cd490 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ebe03cd7f0 <col:55> Inherited Implicit
| `-PureAttr 0x1ebe03cd818 <col:55> Inherited Implicit
|-FunctionDecl 0x1ebe03cd9d0 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03cd858 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03cd8d0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03cdb90 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x1ebe03cdc30 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03cdca0 <col:36> Implicit
| `-PureAttr 0x1ebe03cdcf8 <col:36> Implicit
|-FunctionDecl 0x1ebe03cdd20 prev 0x1ebe03cdb90 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x1ebe03cdab0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ebe03cde10 <col:36> Inherited Implicit
| `-PureAttr 0x1ebe03cde38 <col:36> Inherited Implicit
|-FunctionDecl 0x1ebe03cdff0 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03cde78 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03cdef0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d4950 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x1ebe03d49f0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03d4a60 <col:36> Implicit
| `-PureAttr 0x1ebe03d4ab8 <col:36> Implicit
|-FunctionDecl 0x1ebe03d4ae0 prev 0x1ebe03d4950 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x1ebe03d4870 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ebe03d4bd0 <col:36> Inherited Implicit
| `-PureAttr 0x1ebe03d4bf8 <col:36> Inherited Implicit
|-FunctionDecl 0x1ebe03d4db0 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03d4c38 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03d4cb0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d4f70 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x1ebe03d5010 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03d5080 <col:55> Implicit
| `-PureAttr 0x1ebe03d50d8 <col:55> Implicit
|-FunctionDecl 0x1ebe03d5100 prev 0x1ebe03d4f70 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x1ebe03d4e90 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ebe03d51f0 <col:55> Inherited Implicit
| `-PureAttr 0x1ebe03d5218 <col:55> Inherited Implicit
|-FunctionDecl 0x1ebe03d53d0 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03d5258 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03d52d0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d5590 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x1ebe03d5630 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03d56a0 <col:36> Implicit
| `-PureAttr 0x1ebe03d56f8 <col:36> Implicit
|-FunctionDecl 0x1ebe03d5720 prev 0x1ebe03d5590 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x1ebe03d54b0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ebe03d5810 <col:36> Inherited Implicit
| `-PureAttr 0x1ebe03d5838 <col:36> Inherited Implicit
|-FunctionDecl 0x1ebe03d9a50 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03d98d8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03d9950 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d9c10 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x1ebe03d9cb0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03d9d20 <col:36> Implicit
| `-PureAttr 0x1ebe03d9d78 <col:36> Implicit
|-FunctionDecl 0x1ebe03d9da0 prev 0x1ebe03d9c10 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x1ebe03d9b30 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ebe03d9e90 <col:36> Inherited Implicit
| `-PureAttr 0x1ebe03d9eb8 <col:36> Inherited Implicit
|-FunctionDecl 0x1ebe03da070 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03d9ef8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03d9f70 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03da230 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x1ebe03da2d0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03da340 <col:36> Implicit
| `-PureAttr 0x1ebe03da398 <col:36> Implicit
|-FunctionDecl 0x1ebe03da3c0 prev 0x1ebe03da230 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x1ebe03da150 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ebe03da4b0 <col:36> Inherited Implicit
| `-PureAttr 0x1ebe03da4d8 <col:36> Inherited Implicit
|-FunctionDecl 0x1ebe03da690 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03da518 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03da590 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d6890 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x1ebe03d6930 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03d69a0 <col:55> Implicit
| `-PureAttr 0x1ebe03d69f8 <col:55> Implicit
|-FunctionDecl 0x1ebe03d6a20 prev 0x1ebe03d6890 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x1ebe03da770 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ebe03d6b10 <col:55> Inherited Implicit
| `-PureAttr 0x1ebe03d6b38 <col:55> Inherited Implicit
|-FunctionDecl 0x1ebe03d6c58 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x1ebe03d6cf8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ebe03d6d68 <col:55> Implicit
| `-PureAttr 0x1ebe03d6dc0 <col:55> Implicit
|-FunctionDecl 0x1ebe03d6de8 prev 0x1ebe03d6c58 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x1ebe03d6b78 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ebe03d6ed8 <col:55> Inherited Implicit
| `-PureAttr 0x1ebe03d6f00 <col:55> Inherited Implicit
|-FunctionDecl 0x1ebe03d7020 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ebe03d6f40 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1ebe03d7270 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03d70f8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03d7170 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d7430 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ebe03d7350 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1ebe03d7680 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03d7508 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ebe03d7580 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d78a0 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ebe03d7760 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ebe03d7a58 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ebe03d7978 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ebe03d7c10 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ebe03d7b30 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ebe03d7dc8 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ebe03d7ce8 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x1ebe03d8018 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03d7e98 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03d8310 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03d80e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03d8160 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d84c8 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03d83e8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03d8710 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03d8598 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03d8610 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d88e8 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03d87e8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03d8b30 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03d89b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03d8a30 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d8ce8 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03d8c08 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03d8f30 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03d8db8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03d8e30 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d90e8 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03d9008 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03d9330 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03d91b8 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03d9230 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d94e8 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03d9408 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03d9730 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03d95b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03d9630 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03da908 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03d9808 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03dab50 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03da9d8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03daa50 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03dad08 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03dac28 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03daf50 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03dadd8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03dae50 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03db108 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03db028 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03db350 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03db1d8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03db250 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03db508 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03db428 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03db750 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03db5d8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03db650 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d3898 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03db828 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03d3ae0 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03d3968 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03d39e0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d3c98 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03d3bb8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03d3ee0 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03d3d68 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03d3de0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d4098 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03d3fb8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03d42b0 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1ebe03d4168 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03d4598 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03d4380 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03d43f8 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03d4748 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1ebe03d4670 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03dca60 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03dc8f0 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03dc968 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03dcd60 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1ebe03dcb38 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03dcbb0 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x1ebe03dd108 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03dce38 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1ebe03dceb0 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03dcf28 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03dd2c8 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03dd1e8 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03dd510 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03dd398 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03dd410 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03dd6c8 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ebe03dd5e8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ebe03dd940 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ebe03dd798 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ebe03dd810 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03ddb00 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ebe03dda20 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x1ebe03ddd50 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ebe03ddbd8 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x1ebe03ddc50 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03de060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1ebe03ddee8 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1ebe03ddf60 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x1ebe03de110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x1ebe03de258 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1ebe03de3a8 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ebe03de5d8 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1ebe03de470 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ebe03e3d60 <.//openssl//file_jk/after\crypto\asn1\a_mbstr.c:15:1, line:17:37> line:15:12 used traverse_string 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' static
| |-ParmVarDecl 0x1ebe03de6b0 <col:28, col:49> col:49 p 'const unsigned char *'
| |-ParmVarDecl 0x1ebe03de730 <col:52, col:56> col:56 len 'int'
| |-ParmVarDecl 0x1ebe03de7b0 <col:61, col:65> col:65 inform 'int'
| |-ParmVarDecl 0x1ebe03e3b10 <line:16:28, col:71> col:34 rfunc 'int (*)(unsigned long, void *)'
| `-ParmVarDecl 0x1ebe03e3b90 <line:17:28, col:34> col:34 arg 'void *'
|-FunctionDecl 0x1ebe03e3fa8 <line:18:1, col:50> col:12 used in_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03e3e58 <col:20, col:34> col:34 value 'unsigned long'
| `-ParmVarDecl 0x1ebe03e3ed8 <col:41, col:47> col:47 arg 'void *'
|-FunctionDecl 0x1ebe03e41d8 <line:19:1, col:51> col:12 used out_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03e4088 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x1ebe03e4108 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x1ebe03e4408 <line:20:1, col:51> col:12 used type_str 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03e42b8 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x1ebe03e4338 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x1ebe03e4638 <line:21:1, col:50> col:12 used cpy_asc 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03e44e8 <col:20, col:34> col:34 value 'unsigned long'
| `-ParmVarDecl 0x1ebe03e4568 <col:41, col:47> col:47 arg 'void *'
|-FunctionDecl 0x1ebe03e4868 <line:22:1, col:50> col:12 used cpy_bmp 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03e4718 <col:20, col:34> col:34 value 'unsigned long'
| `-ParmVarDecl 0x1ebe03e4798 <col:41, col:47> col:47 arg 'void *'
|-FunctionDecl 0x1ebe03e4ac0 <line:23:1, col:51> col:12 used cpy_univ 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03e4970 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x1ebe03e49f0 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x1ebe03e4cf0 <line:24:1, col:51> col:12 used cpy_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03e4ba0 <col:21, col:35> col:35 value 'unsigned long'
| `-ParmVarDecl 0x1ebe03e4c20 <col:42, col:48> col:48 arg 'void *'
|-FunctionDecl 0x1ebe03e4eb0 <line:25:1, col:42> col:12 used is_numeric 'int (unsigned long)' static
| `-ParmVarDecl 0x1ebe03e4dd0 <col:23, col:37> col:37 value 'unsigned long'
|-FunctionDecl 0x1ebe03e5038 <line:26:1, col:44> col:12 used is_printable 'int (unsigned long)' static
| `-ParmVarDecl 0x1ebe03e4f88 <col:25, col:39> col:39 value 'unsigned long'
|-FunctionDecl 0x1ebe03e5450 <line:37:1, line:41:1> line:37:5 invalid ASN1_mbstring_copy 'int (int **, const unsigned char *, int, int, unsigned long)'
| |-ParmVarDecl 0x1ebe03e5148 <col:24, col:38> col:38 invalid out 'int **'
| |-ParmVarDecl 0x1ebe03e51c8 <col:43, col:64> col:64 used in 'const unsigned char *'
| |-ParmVarDecl 0x1ebe03e5248 <col:68, col:72> col:72 used len 'int'
| |-ParmVarDecl 0x1ebe03e52c8 <line:38:24, col:28> col:28 used inform 'int'
| |-ParmVarDecl 0x1ebe03e5348 <col:36, col:50> col:50 used mask 'unsigned long'
| `-CompoundStmt 0x1ebe03e5798 <line:39:1, line:41:1>
|-FunctionDecl 0x1ebe03e5c30 <line:43:1, line:202:1> line:43:5 invalid ASN1_mbstring_ncopy 'int (int **, const unsigned char *, int, int, unsigned long, long, long)'
| |-ParmVarDecl 0x1ebe03e57c8 <col:25, col:39> col:39 invalid out 'int **'
| |-ParmVarDecl 0x1ebe03e5848 <col:44, col:65> col:65 used in 'const unsigned char *'
| |-ParmVarDecl 0x1ebe03e58c8 <col:69, col:73> col:73 used len 'int'
| |-ParmVarDecl 0x1ebe03e5980 <line:44:25, col:29> col:29 used inform 'int'
| |-ParmVarDecl 0x1ebe03e5a00 <col:37, col:51> col:51 used mask 'unsigned long'
| |-ParmVarDecl 0x1ebe03e5a80 <line:45:25, col:30> col:30 used minsize 'long'
| |-ParmVarDecl 0x1ebe03e5b00 <col:39, col:44> col:44 used maxsize 'long'
| `-CompoundStmt 0x1ebe03ef030 <line:46:1, line:202:1>
|   |-DeclStmt 0x1ebe03e5da0 <line:47:5, col:17>
|   | `-VarDecl 0x1ebe03e5d38 <col:5, col:9> col:9 used str_type 'int'
|   |-DeclStmt 0x1ebe03e5e38 <line:48:5, col:12>
|   | `-VarDecl 0x1ebe03e5dd0 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x1ebe03e5ec8 <line:49:5, col:18>
|   | `-VarDecl 0x1ebe03e5e60 <col:5, col:10> col:10 used free_out 'char'
|   |-DeclStmt 0x1ebe03e6020 <line:50:5, col:28>
|   | |-VarDecl 0x1ebe03e5ef8 <col:5, col:9> col:9 used outform 'int'
|   | `-VarDecl 0x1ebe03e5f78 <col:5, col:27> col:18 used outlen 'int' cinit
|   |   `-IntegerLiteral 0x1ebe03e5fe0 <col:27> 'int' 0
|   |-DeclStmt 0x1ebe03e60e8 <line:52:5, col:21>
|   | `-VarDecl 0x1ebe03e6080 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-DeclStmt 0x1ebe03e6180 <line:53:5, col:14>
|   | `-VarDecl 0x1ebe03e6118 <col:5, col:9> col:9 used nchar 'int'
|   |-DeclStmt 0x1ebe03e62a0 <line:54:5, col:20>
|   | `-VarDecl 0x1ebe03e6238 <col:5, col:19> col:10 used strbuf 'char [32]'
|   |-DeclStmt 0x1ebe03e6508 <line:55:5, col:50>
|   | `-VarDecl 0x1ebe03e6400 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\asn1\a_mbstr.c:55:11 used cpyfunc 'int (*)(unsigned long, void *)' cinit
|   |   `-ImplicitCastExpr 0x1ebe03e64f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'int (*)(unsigned long, void *)' <NullToPointer>
|   |     `-ParenExpr 0x1ebe03e64d0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1ebe03e64a8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1ebe03e6468 <col:26> 'int' 0
|   |-IfStmt 0x1ebe03e68a0 <.//openssl//file_jk/after\crypto\asn1\a_mbstr.c:56:5, line:57:38>
|   | |-BinaryOperator 0x1ebe03e65b0 <line:56:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ebe03e6598 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ebe03e6520 <col:9> 'int' lvalue ParmVar 0x1ebe03e58c8 'len' 'int'
|   | | `-UnaryOperator 0x1ebe03e6580 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1ebe03e6558 <col:17> 'int' 1
|   | `-BinaryOperator 0x1ebe03e6880 <line:57:9, col:38> 'int' '='
|   |   |-DeclRefExpr 0x1ebe03e65d0 <col:9> 'int' lvalue ParmVar 0x1ebe03e58c8 'len' 'int'
|   |   `-ImplicitCastExpr 0x1ebe03e6868 <col:15, col:38> 'int' <IntegralCast>
|   |     `-CallExpr 0x1ebe03e6840 <col:15, col:38> 'unsigned long long'
|   |       |-ImplicitCastExpr 0x1ebe03e6828 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1ebe03e6730 <col:15> 'unsigned long long (const char *)' Function 0x1ebe03e6620 'strlen' 'unsigned long long (const char *)'
|   |       `-CStyleCastExpr 0x1ebe03e67d0 <col:22, col:36> 'const char *' <BitCast>
|   |         `-ImplicitCastExpr 0x1ebe03e67b8 <col:36> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x1ebe03e6768 <col:36> 'const unsigned char *' lvalue ParmVar 0x1ebe03e5848 'in' 'const unsigned char *'
|   |-SwitchStmt 0x1ebe03e69a8 <line:62:5, line:99:5>
|   | |-ImplicitCastExpr 0x1ebe03e6990 <line:62:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ebe03e6940 <col:13> 'int' lvalue ParmVar 0x1ebe03e5980 'inform' 'int'
|   | `-CompoundStmt 0x1ebe03e7238 <col:21, line:99:5>
|   |   |-IfStmt 0x1ebe03e6bc0 <line:65:9, line:69:9>
|   |   | |-BinaryOperator 0x1ebe03e6a28 <line:65:13, col:19> 'int' '&'
|   |   | | |-ImplicitCastExpr 0x1ebe03e6a10 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ebe03e69c8 <col:13> 'int' lvalue ParmVar 0x1ebe03e58c8 'len' 'int'
|   |   | | `-IntegerLiteral 0x1ebe03e69e8 <col:19> 'int' 1
|   |   | `-CompoundStmt 0x1ebe03e6ba8 <col:22, line:69:9>
|   |   |   `-ReturnStmt 0x1ebe03e6b98 <line:68:13, col:21>
|   |   |     `-UnaryOperator 0x1ebe03e6b80 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x1ebe03e6b58 <col:21> 'int' 1
|   |   |-BinaryOperator 0x1ebe03e6c90 <line:70:9, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x1ebe03e6bd8 <col:9> 'int' lvalue Var 0x1ebe03e6118 'nchar' 'int'
|   |   | `-BinaryOperator 0x1ebe03e6c70 <col:17, col:24> 'int' '>>'
|   |   |   |-ImplicitCastExpr 0x1ebe03e6c58 <col:17> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1ebe03e6c10 <col:17> 'int' lvalue ParmVar 0x1ebe03e58c8 'len' 'int'
|   |   |   `-IntegerLiteral 0x1ebe03e6c30 <col:24> 'int' 1
|   |   |-BreakStmt 0x1ebe03e6cb0 <line:71:9>
|   |   |-IfStmt 0x1ebe03e6dc0 <line:74:9, line:78:9>
|   |   | |-BinaryOperator 0x1ebe03e6d18 <line:74:13, col:19> 'int' '&'
|   |   | | |-ImplicitCastExpr 0x1ebe03e6d00 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ebe03e6cb8 <col:13> 'int' lvalue ParmVar 0x1ebe03e58c8 'len' 'int'
|   |   | | `-IntegerLiteral 0x1ebe03e6cd8 <col:19> 'int' 3
|   |   | `-CompoundStmt 0x1ebe03e6da8 <col:22, line:78:9>
|   |   |   `-ReturnStmt 0x1ebe03e6d98 <line:77:13, col:21>
|   |   |     `-UnaryOperator 0x1ebe03e6d80 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x1ebe03e6d58 <col:21> 'int' 1
|   |   |-BinaryOperator 0x1ebe03e6e78 <line:79:9, col:24> 'int' '='
|   |   | |-DeclRefExpr 0x1ebe03e6dd8 <col:9> 'int' lvalue Var 0x1ebe03e6118 'nchar' 'int'
|   |   | `-BinaryOperator 0x1ebe03e6e58 <col:17, col:24> 'int' '>>'
|   |   |   |-ImplicitCastExpr 0x1ebe03e6e40 <col:17> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1ebe03e6df8 <col:17> 'int' lvalue ParmVar 0x1ebe03e58c8 'len' 'int'
|   |   |   `-IntegerLiteral 0x1ebe03e6e18 <col:24> 'int' 2
|   |   |-BreakStmt 0x1ebe03e6e98 <line:80:9>
|   |   |-BinaryOperator 0x1ebe03e6ee8 <line:83:9, col:17> 'int' '='
|   |   | |-DeclRefExpr 0x1ebe03e6ea0 <col:9> 'int' lvalue Var 0x1ebe03e6118 'nchar' 'int'
|   |   | `-IntegerLiteral 0x1ebe03e6ec0 <col:17> 'int' 0
|   |   |-IfStmt 0x1ebe03e7100 <line:86:9, line:89:9>
|   |   | |-BinaryOperator 0x1ebe03e7058 <line:86:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1ebe03e7040 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1ebe03e6ff8 <col:13> 'int' lvalue Var 0x1ebe03e5dd0 'ret' 'int'
|   |   | | `-IntegerLiteral 0x1ebe03e7018 <col:19> 'int' 0
|   |   | `-CompoundStmt 0x1ebe03e70e8 <col:22, line:89:9>
|   |   |   `-ReturnStmt 0x1ebe03e70d8 <line:88:13, col:21>
|   |   |     `-UnaryOperator 0x1ebe03e70c0 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x1ebe03e7098 <col:21> 'int' 1
|   |   |-BreakStmt 0x1ebe03e7118 <line:90:9>
|   |   |-BinaryOperator 0x1ebe03e7178 <line:93:9, col:17> 'int' '='
|   |   | |-DeclRefExpr 0x1ebe03e7120 <col:9> 'int' lvalue Var 0x1ebe03e6118 'nchar' 'int'
|   |   | `-ImplicitCastExpr 0x1ebe03e7160 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ebe03e7140 <col:17> 'int' lvalue ParmVar 0x1ebe03e58c8 'len' 'int'
|   |   |-BreakStmt 0x1ebe03e7198 <line:94:9>
|   |   |-DefaultStmt 0x1ebe03e71c8 <line:96:5, col:12>
|   |   | `-NullStmt 0x1ebe03e71c0 <col:12>
|   |   `-ReturnStmt 0x1ebe03e7228 <line:98:9, col:17>
|   |     `-UnaryOperator 0x1ebe03e7210 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1ebe03e71e8 <col:17> 'int' 1
|   |-IfStmt 0x1ebe03df9b0 <line:101:5, line:106:5>
|   | |-BinaryOperator 0x1ebe03e7448 <line:101:9, col:42> 'int' '&&'
|   | | |-ParenExpr 0x1ebe03e7360 <col:9, col:21> 'int'
|   | | | `-BinaryOperator 0x1ebe03e7340 <col:10, col:20> 'int' '>'
|   | | |   |-ImplicitCastExpr 0x1ebe03e7310 <col:10> 'long' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1ebe03e72b0 <col:10> 'long' lvalue ParmVar 0x1ebe03e5a80 'minsize' 'long'
|   | | |   `-ImplicitCastExpr 0x1ebe03e7328 <col:20> 'long' <IntegralCast>
|   | | |     `-IntegerLiteral 0x1ebe03e72e8 <col:20> 'int' 0
|   | | `-ParenExpr 0x1ebe03e7428 <col:26, col:42> 'int'
|   | |   `-BinaryOperator 0x1ebe03e7408 <col:27, col:35> 'int' '<'
|   | |     |-ImplicitCastExpr 0x1ebe03e73f0 <col:27> 'long' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x1ebe03e73c0 <col:27> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1ebe03e7380 <col:27> 'int' lvalue Var 0x1ebe03e6118 'nchar' 'int'
|   | |     `-ImplicitCastExpr 0x1ebe03e73d8 <col:35> 'long' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1ebe03e73a0 <col:35> 'long' lvalue ParmVar 0x1ebe03e5a80 'minsize' 'long'
|   | `-CompoundStmt 0x1ebe03df988 <col:45, line:106:5>
|   |   |-CallExpr 0x1ebe03e76f0 <line:103:9, col:60> 'int'
|   |   | |-ImplicitCastExpr 0x1ebe03e76d8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ebe03e7578 <col:9> 'int ()' Function 0x1ebe03e74b0 'BIO_snprintf' 'int ()'
|   |   | |-ImplicitCastExpr 0x1ebe03e7730 <col:22> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ebe03e7598 <col:22> 'char [32]' lvalue Var 0x1ebe03e6238 'strbuf' 'char [32]'
|   |   | |-UnaryExprOrTypeTraitExpr 0x1ebe03e7610 <col:30, col:43> 'unsigned long long' sizeof
|   |   | | `-ParenExpr 0x1ebe03e75f0 <col:36, col:43> 'char [32]' lvalue
|   |   | |   `-DeclRefExpr 0x1ebe03e75d0 <col:37> 'char [32]' lvalue Var 0x1ebe03e6238 'strbuf' 'char [32]' non_odr_use_unevaluated
|   |   | |-ImplicitCastExpr 0x1ebe03e7748 <col:46> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x1ebe03e7668 <col:46> 'char [4]' lvalue "%ld"
|   |   | `-ImplicitCastExpr 0x1ebe03e7760 <col:53> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ebe03e7688 <col:53> 'long' lvalue ParmVar 0x1ebe03e5a80 'minsize' 'long'
|   |   |-CallExpr 0x1ebe03e7940 <line:104:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x1ebe03e7928 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ebe03e7868 <col:9> 'int ()' Function 0x1ebe03e77a0 'ERR_add_error_data' 'int ()'
|   |   | |-IntegerLiteral 0x1ebe03e7888 <col:28> 'int' 2
|   |   | |-ImplicitCastExpr 0x1ebe03e7978 <col:31> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x1ebe03e78e8 <col:31> 'char [9]' lvalue "minsize="
|   |   | `-ImplicitCastExpr 0x1ebe03df920 <col:43> 'char *' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0x1ebe03e7908 <col:43> 'char [32]' lvalue Var 0x1ebe03e6238 'strbuf' 'char [32]'
|   |   `-ReturnStmt 0x1ebe03df978 <line:105:9, col:17>
|   |     `-UnaryOperator 0x1ebe03df960 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1ebe03df938 <col:17> 'int' 1
|   |-IfStmt 0x1ebe03dfea0 <line:108:5, line:113:5>
|   | |-BinaryOperator 0x1ebe03dfb60 <line:108:9, col:42> 'int' '&&'
|   | | |-ParenExpr 0x1ebe03dfa78 <col:9, col:21> 'int'
|   | | | `-BinaryOperator 0x1ebe03dfa58 <col:10, col:20> 'int' '>'
|   | | |   |-ImplicitCastExpr 0x1ebe03dfa28 <col:10> 'long' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1ebe03df9c8 <col:10> 'long' lvalue ParmVar 0x1ebe03e5b00 'maxsize' 'long'
|   | | |   `-ImplicitCastExpr 0x1ebe03dfa40 <col:20> 'long' <IntegralCast>
|   | | |     `-IntegerLiteral 0x1ebe03dfa00 <col:20> 'int' 0
|   | | `-ParenExpr 0x1ebe03dfb40 <col:26, col:42> 'int'
|   | |   `-BinaryOperator 0x1ebe03dfb20 <col:27, col:35> 'int' '>'
|   | |     |-ImplicitCastExpr 0x1ebe03dfb08 <col:27> 'long' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x1ebe03dfad8 <col:27> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1ebe03dfa98 <col:27> 'int' lvalue Var 0x1ebe03e6118 'nchar' 'int'
|   | |     `-ImplicitCastExpr 0x1ebe03dfaf0 <col:35> 'long' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1ebe03dfab8 <col:35> 'long' lvalue ParmVar 0x1ebe03e5b00 'maxsize' 'long'
|   | `-CompoundStmt 0x1ebe03dfe78 <col:45, line:113:5>
|   |   |-CallExpr 0x1ebe03dfc98 <line:110:9, col:60> 'int'
|   |   | |-ImplicitCastExpr 0x1ebe03dfc80 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ebe03dfba0 <col:9> 'int ()' Function 0x1ebe03e74b0 'BIO_snprintf' 'int ()'
|   |   | |-ImplicitCastExpr 0x1ebe03dfcd8 <col:22> 'char *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ebe03dfbc0 <col:22> 'char [32]' lvalue Var 0x1ebe03e6238 'strbuf' 'char [32]'
|   |   | |-UnaryExprOrTypeTraitExpr 0x1ebe03dfc20 <col:30, col:43> 'unsigned long long' sizeof
|   |   | | `-ParenExpr 0x1ebe03dfc00 <col:36, col:43> 'char [32]' lvalue
|   |   | |   `-DeclRefExpr 0x1ebe03dfbe0 <col:37> 'char [32]' lvalue Var 0x1ebe03e6238 'strbuf' 'char [32]' non_odr_use_unevaluated
|   |   | |-ImplicitCastExpr 0x1ebe03dfcf0 <col:46> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x1ebe03dfc40 <col:46> 'char [4]' lvalue "%ld"
|   |   | `-ImplicitCastExpr 0x1ebe03dfd08 <col:53> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ebe03dfc60 <col:53> 'long' lvalue ParmVar 0x1ebe03e5b00 'maxsize' 'long'
|   |   |-CallExpr 0x1ebe03dfdc0 <line:111:9, col:49> 'int'
|   |   | |-ImplicitCastExpr 0x1ebe03dfda8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ebe03dfd20 <col:9> 'int ()' Function 0x1ebe03e77a0 'ERR_add_error_data' 'int ()'
|   |   | |-IntegerLiteral 0x1ebe03dfd40 <col:28> 'int' 2
|   |   | |-ImplicitCastExpr 0x1ebe03dfdf8 <col:31> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x1ebe03dfd68 <col:31> 'char [9]' lvalue "maxsize="
|   |   | `-ImplicitCastExpr 0x1ebe03dfe10 <col:43> 'char *' <ArrayToPointerDecay>
|   |   |   `-DeclRefExpr 0x1ebe03dfd88 <col:43> 'char [32]' lvalue Var 0x1ebe03e6238 'strbuf' 'char [32]'
|   |   `-ReturnStmt 0x1ebe03dfe68 <line:112:9, col:17>
|   |     `-UnaryOperator 0x1ebe03dfe50 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1ebe03dfe28 <col:17> 'int' 1
|   |-IfStmt 0x1ebe03e01c0 <line:116:5, line:119:5>
|   | |-BinaryOperator 0x1ebe03e0118 <line:116:9, col:61> 'int' '<'
|   | | |-CallExpr 0x1ebe03e0030 <col:9, col:57> 'int'
|   | | | |-ImplicitCastExpr 0x1ebe03e0018 <col:9> 'int (*)(const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1ebe03dfeb8 <col:9> 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' Function 0x1ebe03e3d60 'traverse_string' 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)'
|   | | | |-ImplicitCastExpr 0x1ebe03e0078 <col:25> 'const unsigned char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ebe03dfed8 <col:25> 'const unsigned char *' lvalue ParmVar 0x1ebe03e5848 'in' 'const unsigned char *'
|   | | | |-ImplicitCastExpr 0x1ebe03e0090 <col:29> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ebe03dfef8 <col:29> 'int' lvalue ParmVar 0x1ebe03e58c8 'len' 'int'
|   | | | |-ImplicitCastExpr 0x1ebe03e00a8 <col:34> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ebe03dff18 <col:34> 'int' lvalue ParmVar 0x1ebe03e5980 'inform' 'int'
|   | | | |-ImplicitCastExpr 0x1ebe03e00c0 <col:42> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x1ebe03dff38 <col:42> 'int (unsigned long, void *)' Function 0x1ebe03e4408 'type_str' 'int (unsigned long, void *)'
|   | | | `-ImplicitCastExpr 0x1ebe03e00d8 <col:52, col:53> 'void *' <BitCast>
|   | | |   `-UnaryOperator 0x1ebe03dffa8 <col:52, col:53> 'unsigned long *' prefix '&' cannot overflow
|   | | |     `-DeclRefExpr 0x1ebe03dff58 <col:53> 'unsigned long' lvalue ParmVar 0x1ebe03e5a00 'mask' 'unsigned long'
|   | | `-IntegerLiteral 0x1ebe03e00f0 <col:61> 'int' 0
|   | `-CompoundStmt 0x1ebe03e01a8 <col:64, line:119:5>
|   |   `-ReturnStmt 0x1ebe03e0198 <line:118:9, col:17>
|   |     `-UnaryOperator 0x1ebe03e0180 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1ebe03e0158 <col:17> 'int' 1
|   |-IfStmt 0x1ebe03e05d0 <line:123:5, line:140:5> has_else
|   | |-OpaqueValueExpr 0x1ebe03e05b8 <<invalid sloc>> '_Bool'
|   | |-NullStmt 0x1ebe03e05b0 <line:124:9>
|   | `-IfStmt 0x1ebe03e0588 <line:125:10, line:140:5> has_else
|   |   |-OpaqueValueExpr 0x1ebe03e0570 <<invalid sloc>> '_Bool'
|   |   |-NullStmt 0x1ebe03e0568 <line:126:9>
|   |   `-IfStmt 0x1ebe03e0540 <line:127:10, line:140:5> has_else
|   |     |-OpaqueValueExpr 0x1ebe03e0528 <<invalid sloc>> '_Bool'
|   |     |-NullStmt 0x1ebe03e0520 <line:128:9>
|   |     `-IfStmt 0x1ebe03e04f8 <line:129:10, line:140:5> has_else
|   |       |-OpaqueValueExpr 0x1ebe03e04e0 <<invalid sloc>> '_Bool'
|   |       |-NullStmt 0x1ebe03e04d8 <line:130:9>
|   |       `-IfStmt 0x1ebe03e04b0 <line:131:10, line:140:5> has_else
|   |         |-OpaqueValueExpr 0x1ebe03e0498 <<invalid sloc>> '_Bool'
|   |         |-CompoundStmt 0x1ebe03e0388 <line:131:39, line:134:5>
|   |         `-IfStmt 0x1ebe03e0470 <col:12, line:140:5> has_else
|   |           |-OpaqueValueExpr 0x1ebe03e0458 <<invalid sloc>> '_Bool'
|   |           |-CompoundStmt 0x1ebe03e03f8 <line:134:47, line:137:5>
|   |           `-CompoundStmt 0x1ebe03e0448 <col:12, line:140:5>
|   |-IfStmt 0x1ebe03e0658 <line:141:5, line:142:16>
|   | |-OpaqueValueExpr 0x1ebe03e0640 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ebe03e0630 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x1ebe03e0618 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ebe03e05f8 <col:16> 'int' lvalue Var 0x1ebe03e5d38 'str_type' 'int'
|   |-IfStmt 0x1ebe03ead30 <line:143:5, line:158:5> has_else
|   | |-OpaqueValueExpr 0x1ebe03ead18 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1ebe03e08e8 <line:143:15, line:150:5>
|   | | `-BinaryOperator 0x1ebe03e06e8 <line:144:9, col:20> 'char' '='
|   | |   |-DeclRefExpr 0x1ebe03e0670 <col:9> 'char' lvalue Var 0x1ebe03e5e60 'free_out' 'char'
|   | |   `-ImplicitCastExpr 0x1ebe03e06d0 <col:20> 'char' <IntegralCast>
|   | |     `-IntegerLiteral 0x1ebe03e06a8 <col:20> 'int' 0
|   | `-CompoundStmt 0x1ebe03eacf8 <line:150:12, line:158:5>
|   |   |-BinaryOperator 0x1ebe03eaa10 <line:151:9, col:20> 'char' '='
|   |   | |-DeclRefExpr 0x1ebe03e0900 <col:9> 'char' lvalue Var 0x1ebe03e5e60 'free_out' 'char'
|   |   | `-ImplicitCastExpr 0x1ebe03ea9f8 <col:20> 'char' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1ebe03ea9d0 <col:20> 'int' 1
|   |   `-IfStmt 0x1ebe03eace0 <line:153:9, line:156:9>
|   |     |-OpaqueValueExpr 0x1ebe03eacc8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ebe03eacb0 <line:153:27, line:156:9>
|   |       `-ReturnStmt 0x1ebe03eaca0 <line:155:13, col:21>
|   |         `-UnaryOperator 0x1ebe03eac88 <col:20, col:21> 'int' prefix '-'
|   |           `-IntegerLiteral 0x1ebe03eac60 <col:21> 'int' 1
|   |-IfStmt 0x1ebe03eb058 <line:160:5, line:166:5>
|   | |-BinaryOperator 0x1ebe03eadc8 <line:160:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ebe03ead98 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ebe03ead58 <col:9> 'int' lvalue ParmVar 0x1ebe03e5980 'inform' 'int'
|   | | `-ImplicitCastExpr 0x1ebe03eadb0 <col:19> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ebe03ead78 <col:19> 'int' lvalue Var 0x1ebe03e5ef8 'outform' 'int'
|   | `-CompoundStmt 0x1ebe03eb038 <col:28, line:166:5>
|   |   |-IfStmt 0x1ebe03eafd8 <line:161:9, line:164:9>
|   |   | |-OpaqueValueExpr 0x1ebe03eafc0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1ebe03eafa8 <line:161:46, line:164:9>
|   |   |   `-ReturnStmt 0x1ebe03eaf98 <line:163:13, col:21>
|   |   |     `-UnaryOperator 0x1ebe03eaf80 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x1ebe03eaf58 <col:21> 'int' 1
|   |   `-ReturnStmt 0x1ebe03eb028 <line:165:9, col:16>
|   |     `-ImplicitCastExpr 0x1ebe03eb010 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ebe03eaff0 <col:16> 'int' lvalue Var 0x1ebe03e5d38 'str_type' 'int'
|   |-SwitchStmt 0x1ebe03eb0a8 <line:169:5, line:190:5>
|   | |-ImplicitCastExpr 0x1ebe03eb090 <line:169:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ebe03eb070 <col:13> 'int' lvalue Var 0x1ebe03e5ef8 'outform' 'int'
|   | `-CompoundStmt 0x1ebe03eb708 <col:22, line:190:5>
|   |   |-BinaryOperator 0x1ebe03eb138 <line:171:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x1ebe03eb0c8 <col:9> 'int' lvalue Var 0x1ebe03e5f78 'outlen' 'int'
|   |   | `-ImplicitCastExpr 0x1ebe03eb120 <col:18> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1ebe03eb100 <col:18> 'int' lvalue Var 0x1ebe03e6118 'nchar' 'int'
|   |   |-BinaryOperator 0x1ebe03eb1c8 <line:172:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x1ebe03eb158 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x1ebe03e6400 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x1ebe03eb1b0 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x1ebe03eb190 <col:19> 'int (unsigned long, void *)' Function 0x1ebe03e4638 'cpy_asc' 'int (unsigned long, void *)'
|   |   |-BreakStmt 0x1ebe03eb1e8 <line:173:9>
|   |   |-BinaryOperator 0x1ebe03eb290 <line:176:9, col:27> 'int' '='
|   |   | |-DeclRefExpr 0x1ebe03eb1f0 <col:9> 'int' lvalue Var 0x1ebe03e5f78 'outlen' 'int'
|   |   | `-BinaryOperator 0x1ebe03eb270 <col:18, col:27> 'int' '<<'
|   |   |   |-ImplicitCastExpr 0x1ebe03eb258 <col:18> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1ebe03eb210 <col:18> 'int' lvalue Var 0x1ebe03e6118 'nchar' 'int'
|   |   |   `-IntegerLiteral 0x1ebe03eb230 <col:27> 'int' 1
|   |   |-BinaryOperator 0x1ebe03eb308 <line:177:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x1ebe03eb2b0 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x1ebe03e6400 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x1ebe03eb2f0 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x1ebe03eb2d0 <col:19> 'int (unsigned long, void *)' Function 0x1ebe03e4868 'cpy_bmp' 'int (unsigned long, void *)'
|   |   |-BreakStmt 0x1ebe03eb328 <line:178:9>
|   |   |-BinaryOperator 0x1ebe03eb3d0 <line:181:9, col:27> 'int' '='
|   |   | |-DeclRefExpr 0x1ebe03eb330 <col:9> 'int' lvalue Var 0x1ebe03e5f78 'outlen' 'int'
|   |   | `-BinaryOperator 0x1ebe03eb3b0 <col:18, col:27> 'int' '<<'
|   |   |   |-ImplicitCastExpr 0x1ebe03eb398 <col:18> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1ebe03eb350 <col:18> 'int' lvalue Var 0x1ebe03e6118 'nchar' 'int'
|   |   |   `-IntegerLiteral 0x1ebe03eb370 <col:27> 'int' 2
|   |   |-BinaryOperator 0x1ebe03eb448 <line:182:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x1ebe03eb3f0 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x1ebe03e6400 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x1ebe03eb430 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x1ebe03eb410 <col:19> 'int (unsigned long, void *)' Function 0x1ebe03e4ac0 'cpy_univ' 'int (unsigned long, void *)'
|   |   |-BreakStmt 0x1ebe03eb468 <line:183:9>
|   |   |-BinaryOperator 0x1ebe03eb4b8 <line:186:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x1ebe03eb470 <col:9> 'int' lvalue Var 0x1ebe03e5f78 'outlen' 'int'
|   |   | `-IntegerLiteral 0x1ebe03eb490 <col:18> 'int' 0
|   |   |-CallExpr 0x1ebe03eb5c8 <line:187:9, col:59> 'int'
|   |   | |-ImplicitCastExpr 0x1ebe03eb5b0 <col:9> 'int (*)(const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ebe03eb4d8 <col:9> 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' Function 0x1ebe03e3d60 'traverse_string' 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)'
|   |   | |-ImplicitCastExpr 0x1ebe03eb610 <col:25> 'const unsigned char *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1ebe03eb4f8 <col:25> 'const unsigned char *' lvalue ParmVar 0x1ebe03e5848 'in' 'const unsigned char *'
|   |   | |-ImplicitCastExpr 0x1ebe03eb628 <col:29> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1ebe03eb518 <col:29> 'int' lvalue ParmVar 0x1ebe03e58c8 'len' 'int'
|   |   | |-ImplicitCastExpr 0x1ebe03eb640 <col:34> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1ebe03eb538 <col:34> 'int' lvalue ParmVar 0x1ebe03e5980 'inform' 'int'
|   |   | |-ImplicitCastExpr 0x1ebe03eb658 <col:42> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1ebe03eb558 <col:42> 'int (unsigned long, void *)' Function 0x1ebe03e41d8 'out_utf8' 'int (unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x1ebe03eb670 <col:52, col:53> 'void *' <BitCast>
|   |   |   `-UnaryOperator 0x1ebe03eb598 <col:52, col:53> 'int *' prefix '&' cannot overflow
|   |   |     `-DeclRefExpr 0x1ebe03eb578 <col:53> 'int' lvalue Var 0x1ebe03e5f78 'outlen' 'int'
|   |   |-BinaryOperator 0x1ebe03eb6e0 <line:188:9, col:19> 'int (*)(unsigned long, void *)' '='
|   |   | |-DeclRefExpr 0x1ebe03eb688 <col:9> 'int (*)(unsigned long, void *)' lvalue Var 0x1ebe03e6400 'cpyfunc' 'int (*)(unsigned long, void *)'
|   |   | `-ImplicitCastExpr 0x1ebe03eb6c8 <col:19> 'int (*)(unsigned long, void *)' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x1ebe03eb6a8 <col:19> 'int (unsigned long, void *)' Function 0x1ebe03e4cf0 'cpy_utf8' 'int (unsigned long, void *)'
|   |   `-BreakStmt 0x1ebe03eb700 <line:189:9>
|   |-IfStmt 0x1ebe03eecc0 <line:191:5, line:196:5>
|   | |-BinaryOperator 0x1ebe03eead0 <line:191:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x1ebe03eea10 <.//openssl//file_jk/after\crypto\asn1\a_mbstr.c:191:9, col:40> 'unsigned char *'
|   | | | `-BinaryOperator 0x1ebe03eb9a0 <col:10, col:39> 'unsigned char *' '='
|   | | |   |-DeclRefExpr 0x1ebe03eb780 <col:10> 'unsigned char *' lvalue Var 0x1ebe03e6080 'p' 'unsigned char *'
|   | | |   `-ImplicitCastExpr 0x1ebe03eb988 <col:14, col:39> 'unsigned char *' <IntegralToPointer>
|   | | |     `-CallExpr 0x1ebe03eb960 <col:14, col:39> 'int'
|   | | |       |-ImplicitCastExpr 0x1ebe03eb948 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x1ebe03eb8a8 <col:14> 'int ()' Function 0x1ebe03eb7e0 'OPENSSL_malloc' 'int ()'
|   | | |       `-BinaryOperator 0x1ebe03eb928 <col:29, col:38> 'int' '+'
|   | | |         |-ImplicitCastExpr 0x1ebe03eb910 <col:29> 'int' <LValueToRValue>
|   | | |         | `-DeclRefExpr 0x1ebe03eb8c8 <col:29> 'int' lvalue Var 0x1ebe03e5f78 'outlen' 'int'
|   | | |         `-IntegerLiteral 0x1ebe03eb8e8 <col:38> 'int' 1
|   | | `-ImplicitCastExpr 0x1ebe03eeab8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x1ebe03eea98 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ebe03eea70 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ebe03eea30 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ebe03eeca8 <.//openssl//file_jk/after\crypto\asn1\a_mbstr.c:191:51, line:196:5>
|   |   `-ReturnStmt 0x1ebe03eec98 <line:195:9, col:17>
|   |     `-UnaryOperator 0x1ebe03eec80 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x1ebe03eec58 <col:17> 'int' 1
|   |-BinaryOperator 0x1ebe03eede8 <line:199:5, col:17> 'unsigned char' '='
|   | |-ArraySubscriptExpr 0x1ebe03eed88 <col:5, col:13> 'unsigned char' lvalue
|   | | |-ImplicitCastExpr 0x1ebe03eed58 <col:5> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ebe03eed18 <col:5> 'unsigned char *' lvalue Var 0x1ebe03e6080 'p' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x1ebe03eed70 <col:7> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ebe03eed38 <col:7> 'int' lvalue Var 0x1ebe03e5f78 'outlen' 'int'
|   | `-ImplicitCastExpr 0x1ebe03eedd0 <col:17> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1ebe03eeda8 <col:17> 'int' 0
|   |-CallExpr 0x1ebe03eef28 <line:200:5, col:49> 'int'
|   | |-ImplicitCastExpr 0x1ebe03eef10 <col:5> 'int (*)(const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ebe03eee08 <col:5> 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' Function 0x1ebe03e3d60 'traverse_string' 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)'
|   | |-ImplicitCastExpr 0x1ebe03eef70 <col:21> 'const unsigned char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ebe03eee28 <col:21> 'const unsigned char *' lvalue ParmVar 0x1ebe03e5848 'in' 'const unsigned char *'
|   | |-ImplicitCastExpr 0x1ebe03eef88 <col:25> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ebe03eee48 <col:25> 'int' lvalue ParmVar 0x1ebe03e58c8 'len' 'int'
|   | |-ImplicitCastExpr 0x1ebe03eefa0 <col:30> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ebe03eee68 <col:30> 'int' lvalue ParmVar 0x1ebe03e5980 'inform' 'int'
|   | |-ImplicitCastExpr 0x1ebe03eefb8 <col:38> 'int (*)(unsigned long, void *)' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ebe03eee88 <col:38> 'int (*)(unsigned long, void *)' lvalue Var 0x1ebe03e6400 'cpyfunc' 'int (*)(unsigned long, void *)'
|   | `-ImplicitCastExpr 0x1ebe03eefd0 <col:47, col:48> 'void *' <BitCast>
|   |   `-UnaryOperator 0x1ebe03eeef8 <col:47, col:48> 'unsigned char **' prefix '&' cannot overflow
|   |     `-DeclRefExpr 0x1ebe03eeea8 <col:48> 'unsigned char *' lvalue Var 0x1ebe03e6080 'p' 'unsigned char *'
|   `-ReturnStmt 0x1ebe03ef020 <line:201:5, col:12>
|     `-ImplicitCastExpr 0x1ebe03ef008 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ebe03eefe8 <col:12> 'int' lvalue Var 0x1ebe03e5d38 'str_type' 'int'
|-FunctionDecl 0x1ebe03e6620 <line:57:15> col:15 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1ebe03e66c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ebe03ef598 prev 0x1ebe03e3d60 <line:209:1, line:243:1> line:209:12 used traverse_string 'int (const unsigned char *, int, int, int (*)(unsigned long, void *), void *)' static
| |-ParmVarDecl 0x1ebe03ef108 <col:28, col:49> col:49 used p 'const unsigned char *'
| |-ParmVarDecl 0x1ebe03ef188 <col:52, col:56> col:56 used len 'int'
| |-ParmVarDecl 0x1ebe03ef208 <col:61, col:65> col:65 used inform 'int'
| |-ParmVarDecl 0x1ebe03ef3e8 <line:210:28, col:71> col:34 used rfunc 'int (*)(unsigned long, void *)'
| |-ParmVarDecl 0x1ebe03ef468 <line:211:28, col:34> col:34 used arg 'void *'
| `-CompoundStmt 0x1ebe03ec948 <line:212:1, line:243:1>
|   |-DeclStmt 0x1ebe03ef6e0 <line:213:5, col:24>
|   | `-VarDecl 0x1ebe03ef678 <col:5, col:19> col:19 used value 'unsigned long'
|   |-DeclStmt 0x1ebe03ef778 <line:214:5, col:12>
|   | `-VarDecl 0x1ebe03ef710 <col:5, col:9> col:9 used ret 'int'
|   |-WhileStmt 0x1ebe03ec8f8 <line:215:5, line:241:5>
|   | |-ImplicitCastExpr 0x1ebe03ef7b0 <line:215:12> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ebe03ef790 <col:12> 'int' lvalue ParmVar 0x1ebe03ef188 'len' 'int'
|   | `-CompoundStmt 0x1ebe03ec8d8 <col:17, line:241:5>
|   |   |-IfStmt 0x1ebe03ec648 <line:216:9, line:235:9> has_else
|   |   | |-OpaqueValueExpr 0x1ebe03ec630 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1ebe03ef8f8 <line:216:37, line:219:9>
|   |   | | |-BinaryOperator 0x1ebe03ef8a0 <line:217:13, col:23> 'unsigned long' '='
|   |   | | | |-DeclRefExpr 0x1ebe03ef7e8 <col:13> 'unsigned long' lvalue Var 0x1ebe03ef678 'value' 'unsigned long'
|   |   | | | `-ImplicitCastExpr 0x1ebe03ef888 <col:21, col:23> 'unsigned long' <IntegralCast>
|   |   | | |   `-ImplicitCastExpr 0x1ebe03ef870 <col:21, col:23> 'unsigned char' <LValueToRValue>
|   |   | | |     `-UnaryOperator 0x1ebe03ef858 <col:21, col:23> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | | |       `-UnaryOperator 0x1ebe03ef840 <col:22, col:23> 'const unsigned char *' postfix '++'
|   |   | | |         `-DeclRefExpr 0x1ebe03ef820 <col:22> 'const unsigned char *' lvalue ParmVar 0x1ebe03ef108 'p' 'const unsigned char *'
|   |   | | `-UnaryOperator 0x1ebe03ef8e0 <line:218:13, col:16> 'int' postfix '--'
|   |   | |   `-DeclRefExpr 0x1ebe03ef8c0 <col:13> 'int' lvalue ParmVar 0x1ebe03ef188 'len' 'int'
|   |   | `-IfStmt 0x1ebe03ec608 <line:219:16, line:235:9> has_else
|   |   |   |-OpaqueValueExpr 0x1ebe03ec5f0 <<invalid sloc>> '_Bool'
|   |   |   |-CompoundStmt 0x1ebe03ebb80 <line:219:44, line:223:9>
|   |   |   | |-BinaryOperator 0x1ebe03eba18 <line:220:13, col:29> 'unsigned long' '='
|   |   |   | | |-DeclRefExpr 0x1ebe03ef938 <col:13> 'unsigned long' lvalue Var 0x1ebe03ef678 'value' 'unsigned long'
|   |   |   | | `-ImplicitCastExpr 0x1ebe03eba00 <col:21, col:29> 'unsigned long' <IntegralCast>
|   |   |   | |   `-BinaryOperator 0x1ebe03eb9e0 <col:21, col:29> 'int' '<<'
|   |   |   | |     |-ImplicitCastExpr 0x1ebe03ef9e8 <col:21, col:23> 'int' <IntegralCast>
|   |   |   | |     | `-ImplicitCastExpr 0x1ebe03ef9d0 <col:21, col:23> 'unsigned char' <LValueToRValue>
|   |   |   | |     |   `-UnaryOperator 0x1ebe03ef990 <col:21, col:23> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |   | |     |     `-UnaryOperator 0x1ebe03ef978 <col:22, col:23> 'const unsigned char *' postfix '++'
|   |   |   | |     |       `-DeclRefExpr 0x1ebe03ef958 <col:22> 'const unsigned char *' lvalue ParmVar 0x1ebe03ef108 'p' 'const unsigned char *'
|   |   |   | |     `-IntegerLiteral 0x1ebe03ef9a8 <col:29> 'int' 8
|   |   |   | |-CompoundAssignOperator 0x1ebe03ebad8 <line:221:13, col:24> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |   | | |-DeclRefExpr 0x1ebe03eba38 <col:13> 'unsigned long' lvalue Var 0x1ebe03ef678 'value' 'unsigned long'
|   |   |   | | `-ImplicitCastExpr 0x1ebe03ebac0 <col:22, col:24> 'unsigned long' <IntegralCast>
|   |   |   | |   `-ImplicitCastExpr 0x1ebe03ebaa8 <col:22, col:24> 'unsigned char' <LValueToRValue>
|   |   |   | |     `-UnaryOperator 0x1ebe03eba90 <col:22, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |   | |       `-UnaryOperator 0x1ebe03eba78 <col:23, col:24> 'const unsigned char *' postfix '++'
|   |   |   | |         `-DeclRefExpr 0x1ebe03eba58 <col:23> 'const unsigned char *' lvalue ParmVar 0x1ebe03ef108 'p' 'const unsigned char *'
|   |   |   | `-CompoundAssignOperator 0x1ebe03ebb50 <line:222:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   |-DeclRefExpr 0x1ebe03ebb08 <col:13> 'int' lvalue ParmVar 0x1ebe03ef188 'len' 'int'
|   |   |   |   `-IntegerLiteral 0x1ebe03ebb28 <col:20> 'int' 2
|   |   |   `-IfStmt 0x1ebe03ec5c8 <line:223:16, line:235:9> has_else
|   |   |     |-OpaqueValueExpr 0x1ebe03ec5b0 <<invalid sloc>> '_Bool'
|   |   |     |-CompoundStmt 0x1ebe03ec0f0 <line:223:45, line:229:9>
|   |   |     | |-BinaryOperator 0x1ebe03ebcf8 <line:224:13, col:46> 'unsigned long' '='
|   |   |     | | |-DeclRefExpr 0x1ebe03ebbc8 <col:13> 'unsigned long' lvalue Var 0x1ebe03ef678 'value' 'unsigned long'
|   |   |     | | `-BinaryOperator 0x1ebe03ebcd8 <col:21, col:46> 'unsigned long' '<<'
|   |   |     | |   |-ParenExpr 0x1ebe03ebc90 <col:21, col:41> 'unsigned long'
|   |   |     | |   | `-CStyleCastExpr 0x1ebe03ebc68 <col:22, col:39> 'unsigned long' <IntegralCast>
|   |   |     | |   |   `-ImplicitCastExpr 0x1ebe03ebc50 <col:37, col:39> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |     | |   |     `-UnaryOperator 0x1ebe03ebc20 <col:37, col:39> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |   |       `-UnaryOperator 0x1ebe03ebc08 <col:38, col:39> 'const unsigned char *' postfix '++'
|   |   |     | |   |         `-DeclRefExpr 0x1ebe03ebbe8 <col:38> 'const unsigned char *' lvalue ParmVar 0x1ebe03ef108 'p' 'const unsigned char *'
|   |   |     | |   `-IntegerLiteral 0x1ebe03ebcb0 <col:46> 'int' 24
|   |   |     | |-CompoundAssignOperator 0x1ebe03ebe48 <line:225:13, col:47> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |     | | |-DeclRefExpr 0x1ebe03ebd18 <col:13> 'unsigned long' lvalue Var 0x1ebe03ef678 'value' 'unsigned long'
|   |   |     | | `-BinaryOperator 0x1ebe03ebe28 <col:22, col:47> 'unsigned long' '<<'
|   |   |     | |   |-ParenExpr 0x1ebe03ebde0 <col:22, col:42> 'unsigned long'
|   |   |     | |   | `-CStyleCastExpr 0x1ebe03ebdb8 <col:23, col:40> 'unsigned long' <IntegralCast>
|   |   |     | |   |   `-ImplicitCastExpr 0x1ebe03ebda0 <col:38, col:40> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |     | |   |     `-UnaryOperator 0x1ebe03ebd70 <col:38, col:40> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |   |       `-UnaryOperator 0x1ebe03ebd58 <col:39, col:40> 'const unsigned char *' postfix '++'
|   |   |     | |   |         `-DeclRefExpr 0x1ebe03ebd38 <col:39> 'const unsigned char *' lvalue ParmVar 0x1ebe03ef108 'p' 'const unsigned char *'
|   |   |     | |   `-IntegerLiteral 0x1ebe03ebe00 <col:47> 'int' 16
|   |   |     | |-CompoundAssignOperator 0x1ebe03ebf78 <line:226:13, col:30> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |     | | |-DeclRefExpr 0x1ebe03ebe78 <col:13> 'unsigned long' lvalue Var 0x1ebe03ef678 'value' 'unsigned long'
|   |   |     | | `-ImplicitCastExpr 0x1ebe03ebf60 <col:22, col:30> 'unsigned long' <IntegralCast>
|   |   |     | |   `-BinaryOperator 0x1ebe03ebf40 <col:22, col:30> 'int' '<<'
|   |   |     | |     |-ImplicitCastExpr 0x1ebe03ebf28 <col:22, col:24> 'int' <IntegralCast>
|   |   |     | |     | `-ImplicitCastExpr 0x1ebe03ebf10 <col:22, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | |     |   `-UnaryOperator 0x1ebe03ebed0 <col:22, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |     |     `-UnaryOperator 0x1ebe03ebeb8 <col:23, col:24> 'const unsigned char *' postfix '++'
|   |   |     | |     |       `-DeclRefExpr 0x1ebe03ebe98 <col:23> 'const unsigned char *' lvalue ParmVar 0x1ebe03ef108 'p' 'const unsigned char *'
|   |   |     | |     `-IntegerLiteral 0x1ebe03ebee8 <col:30> 'int' 8
|   |   |     | |-CompoundAssignOperator 0x1ebe03ec048 <line:227:13, col:24> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |     | | |-DeclRefExpr 0x1ebe03ebfa8 <col:13> 'unsigned long' lvalue Var 0x1ebe03ef678 'value' 'unsigned long'
|   |   |     | | `-ImplicitCastExpr 0x1ebe03ec030 <col:22, col:24> 'unsigned long' <IntegralCast>
|   |   |     | |   `-ImplicitCastExpr 0x1ebe03ec018 <col:22, col:24> 'unsigned char' <LValueToRValue>
|   |   |     | |     `-UnaryOperator 0x1ebe03ec000 <col:22, col:24> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     | |       `-UnaryOperator 0x1ebe03ebfe8 <col:23, col:24> 'const unsigned char *' postfix '++'
|   |   |     | |         `-DeclRefExpr 0x1ebe03ebfc8 <col:23> 'const unsigned char *' lvalue ParmVar 0x1ebe03ef108 'p' 'const unsigned char *'
|   |   |     | `-CompoundAssignOperator 0x1ebe03ec0c0 <line:228:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |   |-DeclRefExpr 0x1ebe03ec078 <col:13> 'int' lvalue ParmVar 0x1ebe03ef188 'len' 'int'
|   |   |     |   `-IntegerLiteral 0x1ebe03ec098 <col:20> 'int' 4
|   |   |     `-CompoundStmt 0x1ebe03ec580 <line:229:16, line:235:9>
|   |   |       |-BinaryOperator 0x1ebe03ec368 <line:230:13, col:43> 'int' '='
|   |   |       | |-DeclRefExpr 0x1ebe03ec128 <col:13> 'int' lvalue Var 0x1ebe03ef710 'ret' 'int'
|   |   |       | `-CallExpr 0x1ebe03ec300 <col:19, col:43> 'int'
|   |   |       |   |-ImplicitCastExpr 0x1ebe03ec2e8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |   | `-DeclRefExpr 0x1ebe03ec250 <col:19> 'int ()' Function 0x1ebe03ec188 'UTF8_getc' 'int ()'
|   |   |       |   |-ImplicitCastExpr 0x1ebe03ec338 <col:29> 'const unsigned char *' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x1ebe03ec270 <col:29> 'const unsigned char *' lvalue ParmVar 0x1ebe03ef108 'p' 'const unsigned char *'
|   |   |       |   |-ImplicitCastExpr 0x1ebe03ec350 <col:32> 'int' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x1ebe03ec290 <col:32> 'int' lvalue ParmVar 0x1ebe03ef188 'len' 'int'
|   |   |       |   `-UnaryOperator 0x1ebe03ec2d0 <col:37, col:38> 'unsigned long *' prefix '&' cannot overflow
|   |   |       |     `-DeclRefExpr 0x1ebe03ec2b0 <col:38> 'unsigned long' lvalue Var 0x1ebe03ef678 'value' 'unsigned long'
|   |   |       |-IfStmt 0x1ebe03ec458 <line:231:13, line:232:25>
|   |   |       | |-BinaryOperator 0x1ebe03ec3e8 <line:231:17, col:23> 'int' '<'
|   |   |       | | |-ImplicitCastExpr 0x1ebe03ec3d0 <col:17> 'int' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x1ebe03ec388 <col:17> 'int' lvalue Var 0x1ebe03ef710 'ret' 'int'
|   |   |       | | `-IntegerLiteral 0x1ebe03ec3a8 <col:23> 'int' 0
|   |   |       | `-ReturnStmt 0x1ebe03ec448 <line:232:17, col:25>
|   |   |       |   `-UnaryOperator 0x1ebe03ec430 <col:24, col:25> 'int' prefix '-'
|   |   |       |     `-IntegerLiteral 0x1ebe03ec408 <col:25> 'int' 1
|   |   |       |-CompoundAssignOperator 0x1ebe03ec4c8 <line:233:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |       | |-DeclRefExpr 0x1ebe03ec470 <col:13> 'int' lvalue ParmVar 0x1ebe03ef188 'len' 'int'
|   |   |       | `-ImplicitCastExpr 0x1ebe03ec4b0 <col:20> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x1ebe03ec490 <col:20> 'int' lvalue Var 0x1ebe03ef710 'ret' 'int'
|   |   |       `-CompoundAssignOperator 0x1ebe03ec550 <line:234:13, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   |         |-DeclRefExpr 0x1ebe03ec4f8 <col:13> 'const unsigned char *' lvalue ParmVar 0x1ebe03ef108 'p' 'const unsigned char *'
|   |   |         `-ImplicitCastExpr 0x1ebe03ec538 <col:18> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x1ebe03ec518 <col:18> 'int' lvalue Var 0x1ebe03ef710 'ret' 'int'
|   |   `-IfStmt 0x1ebe03ec8c0 <line:236:9, line:240:9>
|   |     |-ImplicitCastExpr 0x1ebe03ec690 <line:236:13> 'int (*)(unsigned long, void *)' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1ebe03ec670 <col:13> 'int (*)(unsigned long, void *)' lvalue ParmVar 0x1ebe03ef3e8 'rfunc' 'int (*)(unsigned long, void *)'
|   |     `-CompoundStmt 0x1ebe03ec8a0 <col:20, line:240:9>
|   |       |-BinaryOperator 0x1ebe03ec7a0 <line:237:13, col:35> 'int' '='
|   |       | |-DeclRefExpr 0x1ebe03ec6a8 <col:13> 'int' lvalue Var 0x1ebe03ef710 'ret' 'int'
|   |       | `-CallExpr 0x1ebe03ec740 <col:19, col:35> 'int'
|   |       |   |-ImplicitCastExpr 0x1ebe03ec728 <col:19> 'int (*)(unsigned long, void *)' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1ebe03ec6c8 <col:19> 'int (*)(unsigned long, void *)' lvalue ParmVar 0x1ebe03ef3e8 'rfunc' 'int (*)(unsigned long, void *)'
|   |       |   |-ImplicitCastExpr 0x1ebe03ec770 <col:25> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1ebe03ec6e8 <col:25> 'unsigned long' lvalue Var 0x1ebe03ef678 'value' 'unsigned long'
|   |       |   `-ImplicitCastExpr 0x1ebe03ec788 <col:32> 'void *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x1ebe03ec708 <col:32> 'void *' lvalue ParmVar 0x1ebe03ef468 'arg' 'void *'
|   |       `-IfStmt 0x1ebe03ec888 <line:238:13, line:239:24>
|   |         |-BinaryOperator 0x1ebe03ec820 <line:238:17, col:24> 'int' '<='
|   |         | |-ImplicitCastExpr 0x1ebe03ec808 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1ebe03ec7c0 <col:17> 'int' lvalue Var 0x1ebe03ef710 'ret' 'int'
|   |         | `-IntegerLiteral 0x1ebe03ec7e0 <col:24> 'int' 0
|   |         `-ReturnStmt 0x1ebe03ec878 <line:239:17, col:24>
|   |           `-ImplicitCastExpr 0x1ebe03ec860 <col:24> 'int' <LValueToRValue>
|   |             `-DeclRefExpr 0x1ebe03ec840 <col:24> 'int' lvalue Var 0x1ebe03ef710 'ret' 'int'
|   `-ReturnStmt 0x1ebe03ec938 <line:242:5, col:12>
|     `-IntegerLiteral 0x1ebe03ec910 <col:12> 'int' 1
|-FunctionDecl 0x1ebe03e7af0 prev 0x1ebe03e3fa8 <line:249:1, line:255:1> line:249:12 used in_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03e79a0 <col:20, col:34> col:34 value 'unsigned long'
| |-ParmVarDecl 0x1ebe03e7a20 <col:41, col:47> col:47 used arg 'void *'
| `-CompoundStmt 0x1ebe03e7da0 <line:250:1, line:255:1>
|   |-DeclStmt 0x1ebe03e7c20 <line:251:5, col:15>
|   | `-VarDecl 0x1ebe03e7bb8 <col:5, col:10> col:10 used nchar 'int *'
|   |-BinaryOperator 0x1ebe03e7cc0 <line:252:5, col:13> 'int *' '='
|   | |-DeclRefExpr 0x1ebe03e7c38 <col:5> 'int *' lvalue Var 0x1ebe03e7bb8 'nchar' 'int *'
|   | `-ImplicitCastExpr 0x1ebe03e7ca8 <col:13> 'int *' <BitCast>
|   |   `-ImplicitCastExpr 0x1ebe03e7c90 <col:13> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ebe03e7c70 <col:13> 'void *' lvalue ParmVar 0x1ebe03e7a20 'arg' 'void *'
|   |-UnaryOperator 0x1ebe03e7d50 <line:253:5, col:13> 'int' postfix '++'
|   | `-ParenExpr 0x1ebe03e7d30 <col:5, col:12> 'int' lvalue
|   |   `-UnaryOperator 0x1ebe03e7d18 <col:6, col:7> 'int' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x1ebe03e7d00 <col:7> 'int *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ebe03e7ce0 <col:7> 'int *' lvalue Var 0x1ebe03e7bb8 'nchar' 'int *'
|   `-ReturnStmt 0x1ebe03e7d90 <line:254:5, col:12>
|     `-IntegerLiteral 0x1ebe03e7d68 <col:12> 'int' 1
|-FunctionDecl 0x1ebe03e7f38 prev 0x1ebe03e41d8 <line:259:1, line:265:1> line:259:12 used out_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03e7de8 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x1ebe03e7e68 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x1ebe03e8440 <line:260:1, line:265:1>
|   |-DeclStmt 0x1ebe03e8068 <line:261:5, col:16>
|   | `-VarDecl 0x1ebe03e8000 <col:5, col:10> col:10 used outlen 'int *'
|   |-BinaryOperator 0x1ebe03e8108 <line:262:5, col:14> 'int *' '='
|   | |-DeclRefExpr 0x1ebe03e8080 <col:5> 'int *' lvalue Var 0x1ebe03e8000 'outlen' 'int *'
|   | `-ImplicitCastExpr 0x1ebe03e80f0 <col:14> 'int *' <BitCast>
|   |   `-ImplicitCastExpr 0x1ebe03e80d8 <col:14> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ebe03e80b8 <col:14> 'void *' lvalue ParmVar 0x1ebe03e7e68 'arg' 'void *'
|   |-CompoundAssignOperator 0x1ebe03e83d8 <line:263:5, col:41> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-UnaryOperator 0x1ebe03e8160 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ebe03e8148 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ebe03e8128 <col:6> 'int *' lvalue Var 0x1ebe03e8000 'outlen' 'int *'
|   | `-CallExpr 0x1ebe03e8388 <col:16, col:41> 'int'
|   |   |-ImplicitCastExpr 0x1ebe03e8370 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ebe03e8268 <col:16> 'int ()' Function 0x1ebe03e81a0 'UTF8_putc' 'int ()'
|   |   |-ParenExpr 0x1ebe03e82f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | `-CStyleCastExpr 0x1ebe03e82c8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   `-IntegerLiteral 0x1ebe03e8288 <col:26> 'int' 0
|   |   |-UnaryOperator 0x1ebe03e8338 <.//openssl//file_jk/after\crypto\asn1\a_mbstr.c:263:32, col:33> 'int' prefix '-'
|   |   | `-IntegerLiteral 0x1ebe03e8310 <col:33> 'int' 1
|   |   `-ImplicitCastExpr 0x1ebe03e83c0 <col:36> 'unsigned long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ebe03e8350 <col:36> 'unsigned long' lvalue ParmVar 0x1ebe03e7de8 'value' 'unsigned long'
|   `-ReturnStmt 0x1ebe03e8430 <line:264:5, col:12>
|     `-IntegerLiteral 0x1ebe03e8408 <col:12> 'int' 1
|-FunctionDecl 0x1ebe03e85d8 prev 0x1ebe03e4408 <line:272:1, line:290:1> line:272:12 used type_str 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03e8488 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x1ebe03e8508 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x1ebe03ecf80 <line:273:1, line:290:1>
|   |-DeclStmt 0x1ebe03e8708 <line:274:5, col:24>
|   | `-VarDecl 0x1ebe03e86a0 <col:5, col:19> col:19 used types 'unsigned long'
|   |-BinaryOperator 0x1ebe03e8820 <line:275:5, col:35> 'unsigned long' '='
|   | |-DeclRefExpr 0x1ebe03e8720 <col:5> 'unsigned long' lvalue Var 0x1ebe03e86a0 'types' 'unsigned long'
|   | `-ImplicitCastExpr 0x1ebe03e8808 <col:13, col:35> 'unsigned long' <LValueToRValue>
|   |   `-UnaryOperator 0x1ebe03e87f0 <col:13, col:35> 'unsigned long' lvalue prefix '*' cannot overflow
|   |     `-ParenExpr 0x1ebe03e87d0 <col:14, col:35> 'unsigned long *'
|   |       `-CStyleCastExpr 0x1ebe03e87a8 <col:15, col:32> 'unsigned long *' <BitCast>
|   |         `-ImplicitCastExpr 0x1ebe03e8790 <col:32> 'void *' <LValueToRValue> part_of_explicit_cast
|   |           `-DeclRefExpr 0x1ebe03e8758 <col:32> 'void *' lvalue ParmVar 0x1ebe03e8508 'arg' 'void *'
|   |-IfStmt 0x1ebe03ece28 <line:286:5, line:287:17>
|   | |-UnaryOperator 0x1ebe03ecdc0 <line:286:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1ebe03ecda8 <col:10> 'unsigned long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ebe03ecd88 <col:10> 'unsigned long' lvalue Var 0x1ebe03e86a0 'types' 'unsigned long'
|   | `-ReturnStmt 0x1ebe03ece18 <line:287:9, col:17>
|   |   `-UnaryOperator 0x1ebe03ece00 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1ebe03ecdd8 <col:17> 'int' 1
|   |-BinaryOperator 0x1ebe03ecf28 <line:288:5, col:31> 'unsigned long' '='
|   | |-UnaryOperator 0x1ebe03eced8 <col:5, col:27> 'unsigned long' lvalue prefix '*' cannot overflow
|   | | `-ParenExpr 0x1ebe03eceb8 <col:6, col:27> 'unsigned long *'
|   | |   `-CStyleCastExpr 0x1ebe03ece90 <col:7, col:24> 'unsigned long *' <BitCast>
|   | |     `-ImplicitCastExpr 0x1ebe03ece78 <col:24> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |       `-DeclRefExpr 0x1ebe03ece40 <col:24> 'void *' lvalue ParmVar 0x1ebe03e8508 'arg' 'void *'
|   | `-ImplicitCastExpr 0x1ebe03ecf10 <col:31> 'unsigned long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ebe03ecef0 <col:31> 'unsigned long' lvalue Var 0x1ebe03e86a0 'types' 'unsigned long'
|   `-ReturnStmt 0x1ebe03ecf70 <line:289:5, col:12>
|     `-IntegerLiteral 0x1ebe03ecf48 <col:12> 'int' 1
|-FunctionDecl 0x1ebe03ed120 prev 0x1ebe03e4638 <line:294:1, line:302:1> line:294:12 used cpy_asc 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03ecfd0 <col:20, col:34> col:34 used value 'unsigned long'
| |-ParmVarDecl 0x1ebe03ed050 <col:41, col:47> col:47 used arg 'void *'
| `-CompoundStmt 0x1ebe03ed618 <line:295:1, line:302:1>
|   |-DeclStmt 0x1ebe03ed2f0 <line:296:5, col:26>
|   | |-VarDecl 0x1ebe03ed1f0 <col:5, col:21> col:21 used p 'unsigned char **'
|   | `-VarDecl 0x1ebe03ed270 <col:5, col:25> col:25 used q 'unsigned char *'
|   |-BinaryOperator 0x1ebe03ed390 <line:297:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x1ebe03ed308 <col:5> 'unsigned char **' lvalue Var 0x1ebe03ed1f0 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x1ebe03ed378 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x1ebe03ed360 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ebe03ed340 <col:9> 'void *' lvalue ParmVar 0x1ebe03ed050 'arg' 'void *'
|   |-BinaryOperator 0x1ebe03ed450 <line:298:5, col:10> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1ebe03ed3b0 <col:5> 'unsigned char *' lvalue Var 0x1ebe03ed270 'q' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1ebe03ed438 <col:9, col:10> 'unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x1ebe03ed420 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x1ebe03ed408 <col:10> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ebe03ed3e8 <col:10> 'unsigned char **' lvalue Var 0x1ebe03ed1f0 'p' 'unsigned char **'
|   |-BinaryOperator 0x1ebe03ed538 <line:299:5, col:25> 'unsigned char' '='
|   | |-UnaryOperator 0x1ebe03ed4a8 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ebe03ed490 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ebe03ed470 <col:6> 'unsigned char *' lvalue Var 0x1ebe03ed270 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x1ebe03ed510 <col:10, col:25> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1ebe03ed4f8 <col:25> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1ebe03ed4c0 <col:25> 'unsigned long' lvalue ParmVar 0x1ebe03ecfd0 'value' 'unsigned long'
|   |-UnaryOperator 0x1ebe03ed5c8 <line:300:5, col:9> 'unsigned char *' postfix '++'
|   | `-ParenExpr 0x1ebe03ed5a8 <col:5, col:8> 'unsigned char *' lvalue
|   |   `-UnaryOperator 0x1ebe03ed590 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x1ebe03ed578 <col:7> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ebe03ed558 <col:7> 'unsigned char **' lvalue Var 0x1ebe03ed1f0 'p' 'unsigned char **'
|   `-ReturnStmt 0x1ebe03ed608 <line:301:5, col:12>
|     `-IntegerLiteral 0x1ebe03ed5e0 <col:12> 'int' 1
|-FunctionDecl 0x1ebe03ed7c0 prev 0x1ebe03e4868 <line:306:1, line:315:1> line:306:12 used cpy_bmp 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03ed670 <col:20, col:34> col:34 used value 'unsigned long'
| |-ParmVarDecl 0x1ebe03ed6f0 <col:41, col:47> col:47 used arg 'void *'
| `-CompoundStmt 0x1ebe03effa8 <line:307:1, line:315:1>
|   |-DeclStmt 0x1ebe03ed990 <line:308:5, col:26>
|   | |-VarDecl 0x1ebe03ed890 <col:5, col:21> col:21 used p 'unsigned char **'
|   | `-VarDecl 0x1ebe03ed910 <col:5, col:25> col:25 used q 'unsigned char *'
|   |-BinaryOperator 0x1ebe03efa70 <line:309:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x1ebe03ed9a8 <col:5> 'unsigned char **' lvalue Var 0x1ebe03ed890 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x1ebe03efa58 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x1ebe03efa40 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ebe03efa20 <col:9> 'void *' lvalue ParmVar 0x1ebe03ed6f0 'arg' 'void *'
|   |-BinaryOperator 0x1ebe03efb30 <line:310:5, col:10> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1ebe03efa90 <col:5> 'unsigned char *' lvalue Var 0x1ebe03ed910 'q' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1ebe03efb18 <col:9, col:10> 'unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x1ebe03efb00 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x1ebe03efae8 <col:10> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ebe03efac8 <col:10> 'unsigned char **' lvalue Var 0x1ebe03ed890 'p' 'unsigned char **'
|   |-BinaryOperator 0x1ebe03efd20 <line:311:5, col:47> 'unsigned char' '='
|   | |-UnaryOperator 0x1ebe03efb88 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x1ebe03efb70 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x1ebe03efb50 <col:6> 'unsigned char *' lvalue Var 0x1ebe03ed910 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x1ebe03efcf8 <col:12, col:47> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x1ebe03efcd8 <col:27, col:47> 'unsigned long'
|   |     `-BinaryOperator 0x1ebe03efc80 <col:28, col:43> 'unsigned long' '&'
|   |       |-ParenExpr 0x1ebe03efc20 <col:28, col:39> 'unsigned long'
|   |       | `-BinaryOperator 0x1ebe03efc00 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x1ebe03efbe8 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1ebe03efba0 <col:29> 'unsigned long' lvalue ParmVar 0x1ebe03ed670 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x1ebe03efbc0 <col:38> 'int' 8
|   |       `-ImplicitCastExpr 0x1ebe03efc68 <col:43> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x1ebe03efc40 <col:43> 'int' 255
|   |-BinaryOperator 0x1ebe03efea8 <line:312:5, col:38> 'unsigned char' '='
|   | |-UnaryOperator 0x1ebe03efd78 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ebe03efd60 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ebe03efd40 <col:6> 'unsigned char *' lvalue Var 0x1ebe03ed910 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x1ebe03efe80 <col:10, col:38> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x1ebe03efe60 <col:25, col:38> 'unsigned long'
|   |     `-BinaryOperator 0x1ebe03efe08 <col:26, col:34> 'unsigned long' '&'
|   |       |-ImplicitCastExpr 0x1ebe03efdd8 <col:26> 'unsigned long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1ebe03efd90 <col:26> 'unsigned long' lvalue ParmVar 0x1ebe03ed670 'value' 'unsigned long'
|   |       `-ImplicitCastExpr 0x1ebe03efdf0 <col:34> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x1ebe03efdb0 <col:34> 'int' 255
|   |-CompoundAssignOperator 0x1ebe03eff40 <line:313:5, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x1ebe03eff00 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ebe03efee8 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ebe03efec8 <col:6> 'unsigned char **' lvalue Var 0x1ebe03ed890 'p' 'unsigned char **'
|   | `-IntegerLiteral 0x1ebe03eff18 <col:11> 'int' 2
|   `-ReturnStmt 0x1ebe03eff98 <line:314:5, col:12>
|     `-IntegerLiteral 0x1ebe03eff70 <col:12> 'int' 1
|-FunctionDecl 0x1ebe03f0158 prev 0x1ebe03e4ac0 <line:319:1, line:330:1> line:319:12 used cpy_univ 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03f0008 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x1ebe03f0088 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x1ebe03e8c80 <line:320:1, line:330:1>
|   |-DeclStmt 0x1ebe03f0328 <line:321:5, col:26>
|   | |-VarDecl 0x1ebe03f0228 <col:5, col:21> col:21 used p 'unsigned char **'
|   | `-VarDecl 0x1ebe03f02a8 <col:5, col:25> col:25 used q 'unsigned char *'
|   |-BinaryOperator 0x1ebe03f03c8 <line:322:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x1ebe03f0340 <col:5> 'unsigned char **' lvalue Var 0x1ebe03f0228 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x1ebe03f03b0 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x1ebe03f0398 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ebe03f0378 <col:9> 'void *' lvalue ParmVar 0x1ebe03f0088 'arg' 'void *'
|   |-BinaryOperator 0x1ebe03f0488 <line:323:5, col:10> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1ebe03f03e8 <col:5> 'unsigned char *' lvalue Var 0x1ebe03f02a8 'q' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1ebe03f0470 <col:9, col:10> 'unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x1ebe03f0458 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x1ebe03f0440 <col:10> 'unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x1ebe03f0420 <col:10> 'unsigned char **' lvalue Var 0x1ebe03f0228 'p' 'unsigned char **'
|   |-BinaryOperator 0x1ebe03f0678 <line:324:5, col:48> 'unsigned char' '='
|   | |-UnaryOperator 0x1ebe03f04e0 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x1ebe03f04c8 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x1ebe03f04a8 <col:6> 'unsigned char *' lvalue Var 0x1ebe03f02a8 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x1ebe03f0650 <col:12, col:48> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x1ebe03f0630 <col:27, col:48> 'unsigned long'
|   |     `-BinaryOperator 0x1ebe03f05d8 <col:28, col:44> 'unsigned long' '&'
|   |       |-ParenExpr 0x1ebe03f0578 <col:28, col:40> 'unsigned long'
|   |       | `-BinaryOperator 0x1ebe03f0558 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x1ebe03f0540 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1ebe03f04f8 <col:29> 'unsigned long' lvalue ParmVar 0x1ebe03f0008 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x1ebe03f0518 <col:38> 'int' 24
|   |       `-ImplicitCastExpr 0x1ebe03f05c0 <col:44> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x1ebe03f0598 <col:44> 'int' 255
|   |-BinaryOperator 0x1ebe03f0868 <line:325:5, col:48> 'unsigned char' '='
|   | |-UnaryOperator 0x1ebe03f06d0 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x1ebe03f06b8 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x1ebe03f0698 <col:6> 'unsigned char *' lvalue Var 0x1ebe03f02a8 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x1ebe03f0840 <col:12, col:48> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x1ebe03f0820 <col:27, col:48> 'unsigned long'
|   |     `-BinaryOperator 0x1ebe03f07c8 <col:28, col:44> 'unsigned long' '&'
|   |       |-ParenExpr 0x1ebe03f0768 <col:28, col:40> 'unsigned long'
|   |       | `-BinaryOperator 0x1ebe03f0748 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x1ebe03f0730 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1ebe03f06e8 <col:29> 'unsigned long' lvalue ParmVar 0x1ebe03f0008 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x1ebe03f0708 <col:38> 'int' 16
|   |       `-ImplicitCastExpr 0x1ebe03f07b0 <col:44> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x1ebe03f0788 <col:44> 'int' 255
|   |-BinaryOperator 0x1ebe03e89f8 <line:326:5, col:47> 'unsigned char' '='
|   | |-UnaryOperator 0x1ebe03f08c0 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x1ebe03f08a8 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x1ebe03f0888 <col:6> 'unsigned char *' lvalue Var 0x1ebe03f02a8 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x1ebe03e89d0 <col:12, col:47> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x1ebe03e89b0 <col:27, col:47> 'unsigned long'
|   |     `-BinaryOperator 0x1ebe03f09b8 <col:28, col:43> 'unsigned long' '&'
|   |       |-ParenExpr 0x1ebe03f0958 <col:28, col:39> 'unsigned long'
|   |       | `-BinaryOperator 0x1ebe03f0938 <col:29, col:38> 'unsigned long' '>>'
|   |       |   |-ImplicitCastExpr 0x1ebe03f0920 <col:29> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1ebe03f08d8 <col:29> 'unsigned long' lvalue ParmVar 0x1ebe03f0008 'value' 'unsigned long'
|   |       |   `-IntegerLiteral 0x1ebe03f08f8 <col:38> 'int' 8
|   |       `-ImplicitCastExpr 0x1ebe03f09a0 <col:43> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x1ebe03f0978 <col:43> 'int' 255
|   |-BinaryOperator 0x1ebe03e8b80 <line:327:5, col:38> 'unsigned char' '='
|   | |-UnaryOperator 0x1ebe03e8a50 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ebe03e8a38 <col:6> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ebe03e8a18 <col:6> 'unsigned char *' lvalue Var 0x1ebe03f02a8 'q' 'unsigned char *'
|   | `-CStyleCastExpr 0x1ebe03e8b58 <col:10, col:38> 'unsigned char' <IntegralCast>
|   |   `-ParenExpr 0x1ebe03e8b38 <col:25, col:38> 'unsigned long'
|   |     `-BinaryOperator 0x1ebe03e8ae0 <col:26, col:34> 'unsigned long' '&'
|   |       |-ImplicitCastExpr 0x1ebe03e8ab0 <col:26> 'unsigned long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1ebe03e8a68 <col:26> 'unsigned long' lvalue ParmVar 0x1ebe03f0008 'value' 'unsigned long'
|   |       `-ImplicitCastExpr 0x1ebe03e8ac8 <col:34> 'unsigned long' <IntegralCast>
|   |         `-IntegerLiteral 0x1ebe03e8a88 <col:34> 'int' 255
|   |-CompoundAssignOperator 0x1ebe03e8c18 <line:328:5, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x1ebe03e8bd8 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ebe03e8bc0 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ebe03e8ba0 <col:6> 'unsigned char **' lvalue Var 0x1ebe03f0228 'p' 'unsigned char **'
|   | `-IntegerLiteral 0x1ebe03e8bf0 <col:11> 'int' 4
|   `-ReturnStmt 0x1ebe03e8c70 <line:329:5, col:12>
|     `-IntegerLiteral 0x1ebe03e8c48 <col:12> 'int' 1
|-FunctionDecl 0x1ebe03e8e40 prev 0x1ebe03e4cf0 <line:334:1, line:343:1> line:334:12 used cpy_utf8 'int (unsigned long, void *)' static
| |-ParmVarDecl 0x1ebe03e8cf0 <col:21, col:35> col:35 used value 'unsigned long'
| |-ParmVarDecl 0x1ebe03e8d70 <col:42, col:48> col:48 used arg 'void *'
| `-CompoundStmt 0x1ebe03e9350 <line:335:1, line:343:1>
|   |-DeclStmt 0x1ebe03e8f78 <line:336:5, col:22>
|   | `-VarDecl 0x1ebe03e8f10 <col:5, col:21> col:21 used p 'unsigned char **'
|   |-DeclStmt 0x1ebe03e9010 <line:337:5, col:12>
|   | `-VarDecl 0x1ebe03e8fa8 <col:5, col:9> col:9 used ret 'int'
|   |-BinaryOperator 0x1ebe03e90b0 <line:338:5, col:9> 'unsigned char **' '='
|   | |-DeclRefExpr 0x1ebe03e9028 <col:5> 'unsigned char **' lvalue Var 0x1ebe03e8f10 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x1ebe03e9098 <col:9> 'unsigned char **' <BitCast>
|   |   `-ImplicitCastExpr 0x1ebe03e9080 <col:9> 'void *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ebe03e9060 <col:9> 'void *' lvalue ParmVar 0x1ebe03e8d70 'arg' 'void *'
|   |-BinaryOperator 0x1ebe03e9240 <line:340:5, col:36> 'int' '='
|   | |-DeclRefExpr 0x1ebe03e90d0 <col:5> 'int' lvalue Var 0x1ebe03e8fa8 'ret' 'int'
|   | `-CallExpr 0x1ebe03e91d8 <col:11, col:36> 'int'
|   |   |-ImplicitCastExpr 0x1ebe03e91c0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ebe03e9108 <col:11> 'int ()' Function 0x1ebe03e81a0 'UTF8_putc' 'int ()'
|   |   |-ImplicitCastExpr 0x1ebe03e9210 <col:21, col:22> 'unsigned char *' <LValueToRValue>
|   |   | `-UnaryOperator 0x1ebe03e9160 <col:21, col:22> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |   |   `-ImplicitCastExpr 0x1ebe03e9148 <col:22> 'unsigned char **' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1ebe03e9128 <col:22> 'unsigned char **' lvalue Var 0x1ebe03e8f10 'p' 'unsigned char **'
|   |   |-IntegerLiteral 0x1ebe03e9178 <col:25> 'int' 255
|   |   `-ImplicitCastExpr 0x1ebe03e9228 <col:31> 'unsigned long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ebe03e91a0 <col:31> 'unsigned long' lvalue ParmVar 0x1ebe03e8cf0 'value' 'unsigned long'
|   |-CompoundAssignOperator 0x1ebe03e92e8 <line:341:5, col:11> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   | |-UnaryOperator 0x1ebe03e9298 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ebe03e9280 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ebe03e9260 <col:6> 'unsigned char **' lvalue Var 0x1ebe03e8f10 'p' 'unsigned char **'
|   | `-ImplicitCastExpr 0x1ebe03e92d0 <col:11> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ebe03e92b0 <col:11> 'int' lvalue Var 0x1ebe03e8fa8 'ret' 'int'
|   `-ReturnStmt 0x1ebe03e9340 <line:342:5, col:12>
|     `-IntegerLiteral 0x1ebe03e9318 <col:12> 'int' 1
|-FunctionDecl 0x1ebe03e9458 prev 0x1ebe03e5038 <line:346:1, line:376:1> line:346:12 used is_printable 'int (unsigned long)' static
| |-ParmVarDecl 0x1ebe03e93a8 <col:25, col:39> col:39 used value 'unsigned long'
| `-CompoundStmt 0x1ebe03f1120 <line:347:1, line:376:1>
|   |-DeclStmt 0x1ebe03e9580 <line:348:5, col:11>
|   | `-VarDecl 0x1ebe03e9518 <col:5, col:9> col:9 used ch 'int'
|   |-IfStmt 0x1ebe03e9668 <line:349:5, line:350:16>
|   | |-BinaryOperator 0x1ebe03e9610 <line:349:9, col:17> 'int' '>'
|   | | |-ImplicitCastExpr 0x1ebe03e95e0 <col:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ebe03e9598 <col:9> 'unsigned long' lvalue ParmVar 0x1ebe03e93a8 'value' 'unsigned long'
|   | | `-ImplicitCastExpr 0x1ebe03e95f8 <col:17> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1ebe03e95b8 <col:17> 'int' 127
|   | `-ReturnStmt 0x1ebe03e9658 <line:350:9, col:16>
|   |   `-IntegerLiteral 0x1ebe03e9630 <col:16> 'int' 0
|   |-BinaryOperator 0x1ebe03e9730 <line:351:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x1ebe03e9680 <col:5> 'int' lvalue Var 0x1ebe03e9518 'ch' 'int'
|   | `-CStyleCastExpr 0x1ebe03e9708 <col:10, col:15> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1ebe03e96f0 <col:15> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1ebe03e96b8 <col:15> 'unsigned long' lvalue ParmVar 0x1ebe03e93a8 'value' 'unsigned long'
|   |-IfStmt 0x1ebe03e98c8 <line:357:5, line:358:16>
|   | |-BinaryOperator 0x1ebe03e9870 <line:357:9, col:34> 'int' '&&'
|   | | |-ParenExpr 0x1ebe03e97c0 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1ebe03e97a0 <col:10, col:16> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x1ebe03e9788 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1ebe03e9750 <col:10> 'int' lvalue Var 0x1ebe03e9518 'ch' 'int'
|   | | |   `-CharacterLiteral 0x1ebe03e9770 <col:16> 'int' 97
|   | | `-ParenExpr 0x1ebe03e9850 <col:24, col:34> 'int'
|   | |   `-BinaryOperator 0x1ebe03e9830 <col:25, col:31> 'int' '<='
|   | |     |-ImplicitCastExpr 0x1ebe03e9818 <col:25> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1ebe03e97e0 <col:25> 'int' lvalue Var 0x1ebe03e9518 'ch' 'int'
|   | |     `-CharacterLiteral 0x1ebe03e9800 <col:31> 'int' 122
|   | `-ReturnStmt 0x1ebe03e98b8 <line:358:9, col:16>
|   |   `-IntegerLiteral 0x1ebe03e9890 <col:16> 'int' 1
|   |-IfStmt 0x1ebe03f0ae0 <line:359:5, line:360:16>
|   | |-BinaryOperator 0x1ebe03f0a88 <line:359:9, col:34> 'int' '&&'
|   | | |-ParenExpr 0x1ebe03e9950 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1ebe03e9930 <col:10, col:16> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x1ebe03e9918 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1ebe03e98e0 <col:10> 'int' lvalue Var 0x1ebe03e9518 'ch' 'int'
|   | | |   `-CharacterLiteral 0x1ebe03e9900 <col:16> 'int' 65
|   | | `-ParenExpr 0x1ebe03f0a68 <col:24, col:34> 'int'
|   | |   `-BinaryOperator 0x1ebe03f0a48 <col:25, col:31> 'int' '<='
|   | |     |-ImplicitCastExpr 0x1ebe03f0a30 <col:25> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1ebe03e9970 <col:25> 'int' lvalue Var 0x1ebe03e9518 'ch' 'int'
|   | |     `-CharacterLiteral 0x1ebe03e9990 <col:31> 'int' 90
|   | `-ReturnStmt 0x1ebe03f0ad0 <line:360:9, col:16>
|   |   `-IntegerLiteral 0x1ebe03f0aa8 <col:16> 'int' 1
|   |-IfStmt 0x1ebe03f0c70 <line:361:5, line:362:16>
|   | |-BinaryOperator 0x1ebe03f0c18 <line:361:9, col:34> 'int' '&&'
|   | | |-ParenExpr 0x1ebe03f0b68 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1ebe03f0b48 <col:10, col:16> 'int' '>='
|   | | |   |-ImplicitCastExpr 0x1ebe03f0b30 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1ebe03f0af8 <col:10> 'int' lvalue Var 0x1ebe03e9518 'ch' 'int'
|   | | |   `-CharacterLiteral 0x1ebe03f0b18 <col:16> 'int' 48
|   | | `-ParenExpr 0x1ebe03f0bf8 <col:24, col:34> 'int'
|   | |   `-BinaryOperator 0x1ebe03f0bd8 <col:25, col:31> 'int' '<='
|   | |     |-ImplicitCastExpr 0x1ebe03f0bc0 <col:25> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1ebe03f0b88 <col:25> 'int' lvalue Var 0x1ebe03e9518 'ch' 'int'
|   | |     `-CharacterLiteral 0x1ebe03f0ba8 <col:31> 'int' 57
|   | `-ReturnStmt 0x1ebe03f0c60 <line:362:9, col:16>
|   |   `-IntegerLiteral 0x1ebe03f0c38 <col:16> 'int' 1
|   |-IfStmt 0x1ebe03f10d0 <line:363:5, line:364:16>
|   | |-BinaryOperator 0x1ebe03f1078 <line:363:9, col:48> 'int' '||'
|   | | |-ParenExpr 0x1ebe03f0cf8 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1ebe03f0cd8 <col:10, col:16> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1ebe03f0cc0 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1ebe03f0c88 <col:10> 'int' lvalue Var 0x1ebe03e9518 'ch' 'int'
|   | | |   `-CharacterLiteral 0x1ebe03f0ca8 <col:16> 'int' 32
|   | | `-CallExpr 0x1ebe03f1000 <col:24, col:48> 'char *'
|   | |   |-ImplicitCastExpr 0x1ebe03f0fe8 <col:24> 'char *(*)(const char *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1ebe03f0ed8 <col:24> 'char *(const char *, int)' Function 0x1ebe03f0d58 'strchr' 'char *(const char *, int)'
|   | |   |-ImplicitCastExpr 0x1ebe03f1048 <col:31> 'const char *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x1ebe03f1030 <col:31> 'char *' <ArrayToPointerDecay>
|   | |   |   `-StringLiteral 0x1ebe03f0f48 <col:31> 'char [12]' lvalue "'()+,-./:=?"
|   | |   `-ImplicitCastExpr 0x1ebe03f1060 <col:46> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1ebe03f0f70 <col:46> 'int' lvalue Var 0x1ebe03e9518 'ch' 'int'
|   | `-ReturnStmt 0x1ebe03f10c0 <line:364:9, col:16>
|   |   `-IntegerLiteral 0x1ebe03f1098 <col:16> 'int' 1
|   `-ReturnStmt 0x1ebe03f1110 <line:375:5, col:12>
|     `-IntegerLiteral 0x1ebe03f10e8 <col:12> 'int' 0
|-FunctionDecl 0x1ebe03f0d58 <line:363:24> col:24 implicit used strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1ebe03f0df8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ebe03f0e60 <<invalid sloc>> <invalid sloc> 'int'
`-FunctionDecl 0x1ebe03f1238 prev 0x1ebe03e4eb0 <line:379:1, line:395:1> line:379:12 used is_numeric 'int (unsigned long)' static
  |-ParmVarDecl 0x1ebe03f1188 <col:23, col:37> col:37 used value 'unsigned long'
  `-CompoundStmt 0x1ebe03f1720 <line:380:1, line:395:1>
    |-DeclStmt 0x1ebe03f1360 <line:381:5, col:11>
    | `-VarDecl 0x1ebe03f12f8 <col:5, col:9> col:9 used ch 'int'
    |-IfStmt 0x1ebe03f1448 <line:382:5, line:383:16>
    | |-BinaryOperator 0x1ebe03f13f0 <line:382:9, col:17> 'int' '>'
    | | |-ImplicitCastExpr 0x1ebe03f13c0 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1ebe03f1378 <col:9> 'unsigned long' lvalue ParmVar 0x1ebe03f1188 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1ebe03f13d8 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1ebe03f1398 <col:17> 'int' 127
    | `-ReturnStmt 0x1ebe03f1438 <line:383:9, col:16>
    |   `-IntegerLiteral 0x1ebe03f1410 <col:16> 'int' 0
    |-BinaryOperator 0x1ebe03f1510 <line:384:5, col:15> 'int' '='
    | |-DeclRefExpr 0x1ebe03f1460 <col:5> 'int' lvalue Var 0x1ebe03f12f8 'ch' 'int'
    | `-CStyleCastExpr 0x1ebe03f14e8 <col:10, col:15> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x1ebe03f14d0 <col:15> 'unsigned long' <LValueToRValue> part_of_explicit_cast
    |     `-DeclRefExpr 0x1ebe03f1498 <col:15> 'unsigned long' lvalue ParmVar 0x1ebe03f1188 'value' 'unsigned long'
    |-IfStmt 0x1ebe03f16d0 <line:386:5, line:387:16>
    | |-BinaryOperator 0x1ebe03f1678 <line:386:9, col:31> 'int' '&&'
    | | |-UnaryOperator 0x1ebe03f15f0 <col:9, col:20> 'int' prefix '!' cannot overflow
    | | | `-CallExpr 0x1ebe03f15b0 <col:10, col:20> 'int'
    | | |   |-ImplicitCastExpr 0x1ebe03f1598 <col:10> 'int (*)(int)' <FunctionToPointerDecay>
    | | |   | `-DeclRefExpr 0x1ebe03f1530 <col:10> 'int (int)' Function 0x1ebe03cca40 'isdigit' 'int (int)'
    | | |   `-ImplicitCastExpr 0x1ebe03f15d8 <col:18> 'int' <LValueToRValue>
    | | |     `-DeclRefExpr 0x1ebe03f1550 <col:18> 'int' lvalue Var 0x1ebe03f12f8 'ch' 'int'
    | | `-BinaryOperator 0x1ebe03f1658 <col:25, col:31> 'int' '!='
    | |   |-ImplicitCastExpr 0x1ebe03f1640 <col:25> 'int' <LValueToRValue>
    | |   | `-DeclRefExpr 0x1ebe03f1608 <col:25> 'int' lvalue Var 0x1ebe03f12f8 'ch' 'int'
    | |   `-CharacterLiteral 0x1ebe03f1628 <col:31> 'int' 32
    | `-ReturnStmt 0x1ebe03f16c0 <line:387:9, col:16>
    |   `-IntegerLiteral 0x1ebe03f1698 <col:16> 'int' 0
    `-ReturnStmt 0x1ebe03f1710 <line:394:5, col:12>
      `-IntegerLiteral 0x1ebe03f16e8 <col:12> 'int' 1
