TranslationUnitDecl 0x21fa5586b88 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x21fa5587420 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x21fa5587120 '__int128'
|-TypedefDecl 0x21fa5587490 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x21fa5587140 'unsigned __int128'
|-TypedefDecl 0x21fa55877c8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x21fa5587580 'struct __NSConstantString_tag'
|   `-Record 0x21fa55874e8 '__NSConstantString_tag'
|-TypedefDecl 0x21fa5587838 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x21fa5586d60 'unsigned long long'
|-TypedefDecl 0x21fa55878d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x21fa5587890 'char *'
|   `-BuiltinType 0x21fa5586c20 'char'
|-TypedefDecl 0x21fa5587940 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x21fa5587890 'char *'
|   `-BuiltinType 0x21fa5586c20 'char'
|-TypedefDecl 0x21fa5587a00 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x21fa5586d60 'unsigned long long'
|-TypedefDecl 0x21fa5587a70 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x21fa5587890 'char *'
|   `-BuiltinType 0x21fa5586c20 'char'
|-FunctionDecl 0x21fa6f9edf0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x21fa6f9ee90 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x21fa6f9ef00 <col:21> Implicit
|-FunctionDecl 0x21fa6f9ef58 prev 0x21fa6f9edf0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x21fa6f9ec80 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x21fa6f9f048 <col:21> Inherited Implicit
|-TypedefDecl 0x21fa6f9f088 prev 0x21fa5587838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x21fa5586d60 'unsigned long long'
|-TypedefDecl 0x21fa6f9f130 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x21fa6f9f100 'size_t' sugar
|   |-Typedef 0x21fa6f9f088 'size_t'
|   `-BuiltinType 0x21fa5586d60 'unsigned long long'
|-TypedefDecl 0x21fa6f9f1a0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x21fa5586cc0 'long long'
|-TypedefDecl 0x21fa6f9f210 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x21fa5586cc0 'long long'
|-TypedefDecl 0x21fa6f9f280 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x21fa5586d00 'unsigned short'
|-TypedefDecl 0x21fa6f9f2f0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x21fa5586d00 'unsigned short'
|-TypedefDecl 0x21fa6f9f360 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x21fa5586d00 'unsigned short'
|-TypedefDecl 0x21fa6f9f3d0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x21fa5586c80 'int'
|-TypedefDecl 0x21fa6f9f440 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x21fa5586ca0 'long'
|-TypedefDecl 0x21fa6f9f4b0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x21fa5586cc0 'long long'
|-TypedefDecl 0x21fa6f9f540 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x21fa6f9f510 '__time64_t' sugar
|   |-Typedef 0x21fa6f9f4b0 '__time64_t'
|   `-BuiltinType 0x21fa5586cc0 'long long'
|-FunctionDecl 0x21fa6f9f6b8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x21fa6f9f8d8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x21fa6fd6f70 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x21fa6f9fa18 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x21fa6f9fa90 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x21fa6f9fb08 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x21fa6f9fb88 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x21fa6fd6d10 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x21fa6fd7050 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x21fa6fd7110 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x21fa6fd7280 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x21fa6fd7230 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x21fa6fd71d0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x21fa6fd70f0 'struct threadlocaleinfostruct'
|       `-Record 0x21fa6fe5e00 'threadlocaleinfostruct'
|-TypedefDecl 0x21fa6fd7390 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x21fa6fd7340 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x21fa6fd72e0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x21fa6fd71b0 'struct threadmbcinfostruct'
|       `-Record 0x21fa6fd7110 'threadmbcinfostruct'
|-RecordDecl 0x21fa6fd73e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x21fa6fd74a0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x21fa6fd7560 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x21fa6fd75f0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x21fa6fd7680 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x21fa6fd7738 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x21fa6fd76e0 'struct localeinfo_struct' sugar
|   `-RecordType 0x21fa6fd7540 'struct localeinfo_struct'
|     `-Record 0x21fa6fd74a0 'localeinfo_struct'
|-TypedefDecl 0x21fa6fd7810 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x21fa6fd77c0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x21fa6fd76e0 'struct localeinfo_struct' sugar
|     `-RecordType 0x21fa6fd7540 'struct localeinfo_struct'
|       `-Record 0x21fa6fd74a0 'localeinfo_struct'
|-RecordDecl 0x21fa6fd7888 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x21fa6fd7940 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x21fa6fd79b8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x21fa6fd7a78 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x21fa6fd7b10 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x21fa6fd7b80 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x21fa6fd7c38 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x21fa6fd7be0 'struct localerefcount' sugar
|   `-RecordType 0x21fa6fd7920 'struct localerefcount'
|     `-Record 0x21fa6fd7888 'localerefcount'
|-RecordDecl 0x21fa6fe5e00 prev 0x21fa6fd7050 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x21fa6fe5e80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x21fa6fe5ef8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x21fa6fe5f68 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x21fa6fe5fd8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x21fa6fe6048 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x21fa6fe6208 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x21fa6fe6278 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x21fa6fe62e8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x21fa6fe6358 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x21fa6fe63c8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x21fa6fe6438 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x21fa6fe6490 parent 0x21fa5586b88 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x21fa6fe6620 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x21fa6fe6690 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x21fa6fe6700 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x21fa6fe6770 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x21fa6fe6810 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x21fa6fe6880 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x21fa6fe6990 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x21fa6fe6ac8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x21fa6fe6b78 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x21fa6fe6b20 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x21fa6fd70f0 'struct threadlocaleinfostruct'
|     `-Record 0x21fa6fe5e00 'threadlocaleinfostruct'
|-RecordDecl 0x21fa6fe6c10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x21fa6fe6cd0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x21fa6fe6d48 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x21fa6fded90 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x21fa6fdee00 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x21fa6fdee70 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x21fa6fdeee0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x21fa6fdef50 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x21fa6fdefc0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x21fa6fdf030 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x21fa6fdf0e0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x21fa6fdf090 'struct _iobuf' sugar
|   `-RecordType 0x21fa6fe6cb0 'struct _iobuf'
|     `-Record 0x21fa6fe6c10 '_iobuf'
|-FunctionDecl 0x21fa6fdf318 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x21fa6fdf3e8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x21fa5586cc0 'long long'
|-FunctionDecl 0x21fa6fdf5c8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa6fdf450 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x21fa6fdf8c0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x21fa6fdf6a0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x21fa6fdf718 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x21fa6fdfc70 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x21fa6fdf9a0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x21fa6fdfa20 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x21fa6fdfaa0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x21fa6fecfe0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x21fa6fece70 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x21fa6fed210 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x21fa6fed0d0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x21fa6fed3c0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa6fed2e0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x21fa6fed5b0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x21fa6fed8a8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x21fa6fed680 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x21fa6fed700 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x21fa6feda60 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa6fed980 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x21fa6fedc10 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa6fedb30 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x21fa6feddc0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa6fedce0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x21fa6feef98 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa6feeeb8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x21fa6fef128 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x21fa6fef490 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x21fa6fef1f0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x21fa6fef2e8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x21fa6fef848 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x21fa6fef570 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x21fa6fef5f0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x21fa6fef668 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x21fa6fefa08 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa6fef928 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x21fa6fefcd0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x21fa6fefae0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x21fa6fefb60 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x21fa6fefea0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x21fa6ff0298 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x21fa6ff0338 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa6ff03a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21fa6ff0418 prev 0x21fa6ff0298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x21fa6ff0070 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x21fa6ff00f0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x21fa6ff04c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa6ff0940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x21fa6ff0670 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x21fa6ff06f0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x21fa6ff0770 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x21fa6ff0c60 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x21fa6ff0d00 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x21fa6ff0d68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x21fa6ff0de0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x21fa6fe8e30 prev 0x21fa6ff0c60 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x21fa6ff0a20 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x21fa6ff0aa0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x21fa6fe8f28 <col:40> Inherited printf 2 3
|-FunctionDecl 0x21fa6fe90f0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x21fa6fe8f70 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x21fa6fe8ff0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x21fa6fe9348 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x21fa6fe91d0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x21fa6fe9248 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x21fa6fe9578 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x21fa6fe9428 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x21fa6fe9870 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x21fa6fe9650 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x21fa6fe96c8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x21fa6fe9d08 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x21fa6fe9da8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21fa6ff0eb0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x21fa6ff0f18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x21fa6ff0f80 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x21fa6ff1008 prev 0x21fa6fe9d08 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x21fa6fe9950 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x21fa6fe99c8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa6fe9a40 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa6fe9ab8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x21fa6ff1510 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x21fa6ff10f8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x21fa6ff1170 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa6ff11e8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa6ff1260 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa6ff12d8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x21fa6ff19d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x21fa6ff1700 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x21fa6ff1780 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x21fa6ff17f8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x21fa6ff1a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa6fe9ee8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x21fa6ff1bd0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x21fa6ff1c50 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x21fa6ff1cd0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x21fa6ff1d48 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x21fa6fea290 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x21fa6fea330 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x21fa6fea398 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x21fa6fea410 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x21fa6fea478 prev 0x21fa6fea290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x21fa6fea0c8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x21fa6fea148 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x21fa6fea658 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x21fa6fea528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa6feaa98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa6fea798 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x21fa6fea818 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x21fa6fea8b0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa6feab50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa6ff1ec0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x21fa6feac90 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x21fa6fead10 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x21fa6ff21b0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa6ff1f98 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x21fa6ff2018 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x21fa6ff2090 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa6ff2510 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x21fa6ff2290 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x21fa6ff2368 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x21fa6ff28c8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x21fa6ff25e8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x21fa6ff2668 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x21fa6ff26e8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x21fa6ff2b28 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x21fa6ff29a8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x21fa6feae98 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x21fa6ff2bf8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x21fa6ff2c78 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x21fa6ff2cf8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x21fa6feb0f8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x21fa6feaf78 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x21fa6feb5b8 <line:246:43> col:43 implicit used fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x21fa6feb658 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x21fa6feb6c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x21fa6feb728 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x21fa6feb790 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x21fa6feb818 prev 0x21fa6feb5b8 <col:28, col:159> col:43 used fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x21fa6feb200 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x21fa6feb278 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa6feb2f0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa6feb368 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x21fa6feb9e0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa6feb900 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x21fa6febb70 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x21fa6febcf8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x21fa6ff40a0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x21fa6febdc8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x21fa6ff3ef0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21fa6ff43c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21fa6ff4280 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x21fa6ff4470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa6ff4690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa6ff45b0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x21fa6ff48b0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x21fa6ff4768 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x21fa6ff4a60 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa6ff4980 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x21fa6ff4cb0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x21fa6ff4b38 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x21fa6ff4bb8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x21fa6ff4ef0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x21fa6ff4f90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x21fa6ff5000 <col:40> Implicit printf 1 2
|-FunctionDecl 0x21fa6ff5068 prev 0x21fa6ff4ef0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x21fa6ff4d90 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x21fa6ff5158 <col:40> Inherited printf 1 2
|-FunctionDecl 0x21fa6ff5288 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x21fa6ff51a8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x21fa6ff54d8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x21fa6ff5360 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x21fa6ff53d8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x21fa6ff5698 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x21fa6ff55b8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x21fa6ff58b8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x21fa6ff5770 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x21fa6ff5b08 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x21fa6ff5990 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x21fa6ff5a08 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x21fa6ff5cc8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x21fa6ff5be8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x21fa7041100 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21fa6ff5da0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x21fa6ff5e20 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x21fa70412c0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x21fa70411e0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x21fa7041550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x21fa7041470 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x21fa70415f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x21fa70417f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x21fa7041718 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x21fa7041980 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x21fa7041c28 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x21fa7041cc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x21fa7041d38 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x21fa7041da0 prev 0x21fa7041c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x21fa7041b10 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x21fa7041f78 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x21fa7041e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7043360 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7043128 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x21fa70431a0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa7043410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7043638 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x21fa7043558 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x21fa7043888 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7043710 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x21fa7043788 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7043c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x21fa7043a20 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x21fa7043aa0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x21fa7043cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7043f20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x21fa7043e40 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x21fa70471d8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x21fa7047090 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x21fa70473c0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x21fa7047810 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x21fa7047488 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x21fa7047508 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x21fa7047588 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x21fa7047600 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa7047c90 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x21fa7047900 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa7047978 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa70479f0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa7047a70 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x21fa7040020 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x21fa7047d80 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa7047df8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa7047e78 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x21fa70401e8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x21fa7040108 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x21fa70405c0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x21fa7040660 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x21fa70406c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x21fa7040740 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x21fa70407a8 prev 0x21fa70405c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x21fa7040380 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x21fa7040400 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x21fa7040988 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x21fa7040858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7040d78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7040a98 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x21fa7040b18 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x21fa7040b90 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa7040e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa70481a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x21fa7040f78 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x21fa70480a0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x21fa7048498 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7048280 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x21fa7048300 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x21fa7048378 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7048928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x21fa7048640 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x21fa70486b8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7048738 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x21fa70489e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7048fb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7048c20 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x21fa7048c98 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7048d18 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x21fa7048d90 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa70490b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7049410 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x21fa70491f8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x21fa7049270 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa70492f0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x21fa70497a8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa70494f8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x21fa7049570 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa70495f0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x21fa7049668 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7049a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x21fa7049aa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7049d60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x21fa7049bf0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x21fa7042040 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x21fa7049e38 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x21fa7049eb0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21fa70422c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21fa70421e0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x21fa7042368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7042628 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x21fa70424b0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x21fa7042528 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x21fa7042a40 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x21fa7042ae0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x21fa7042b48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x21fa7042bb0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x21fa7042c30 <col:40> Implicit printf 2 0
|-FunctionDecl 0x21fa7042c98 prev 0x21fa7042a40 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x21fa7042700 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x21fa7042780 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x21fa70427f8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x21fa7042d98 <col:40> Inherited printf 2 0
|-FunctionDecl 0x21fa704a0c0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x21fa704a160 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x21fa704a1c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x21fa704a230 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x21fa704a2b0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x21fa704a318 prev 0x21fa704a0c0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x21fa7042de0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x21fa7042e60 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x21fa7042ed8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x21fa704a418 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x21fa704a678 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x21fa704a460 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x21fa704a4e0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x21fa704a558 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa704a970 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x21fa704a758 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x21fa704a7d8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x21fa704a850 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa704acb8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x21fa704ad58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x21fa704adc0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x21fa704ae38 <col:40> Implicit printf 1 0
|-FunctionDecl 0x21fa704aea0 prev 0x21fa704acb8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x21fa704aa58 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x21fa704aad0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x21fa704af98 <col:40> Inherited printf 1 0
|-FunctionDecl 0x21fa704b208 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x21fa704b2a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x21fa704b310 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x21fa704b388 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x21fa704b3f0 prev 0x21fa704b208 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x21fa704afe8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x21fa704b0d0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x21fa704b4e8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x21fa704b6b0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x21fa704b538 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x21fa704b5b0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa704b908 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x21fa704b790 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x21fa704b808 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa704be68 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x21fa704bf08 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21fa704bf70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x21fa704bfd8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x21fa704c040 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x21fa7044060 <col:77> Implicit printf 3 0
|-FunctionDecl 0x21fa70440c8 prev 0x21fa704be68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x21fa704baa8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa704bb20 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa704bba0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x21fa704bc18 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x21fa70442b8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x21fa7044188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7044728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x21fa7044308 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa7044380 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa70443f8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7044478 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x21fa70444f0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7044b68 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x21fa7044820 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa7044898 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7044910 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7044990 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x21fa7044a08 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7044f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x21fa7044d20 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x21fa7044d98 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7044e18 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x21fa7044ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa704c550 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x21fa704c2a0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x21fa704c318 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa704c398 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x21fa704c410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x21fa704c610 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa704ca08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x21fa704c758 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa704c7d0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa704c850 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x21fa704c8c8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa704cdc8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x21fa704caf8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x21fa704cb78 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x21fa704cbf0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7045110 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x21fa70451b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21fa7045218 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x21fa7045290 <col:85> Implicit printf 2 3
|-FunctionDecl 0x21fa70452f8 prev 0x21fa7045110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x21fa704cf70 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x21fa704cff0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x21fa70454d8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x21fa70453a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7045900 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x21fa70459a0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21fa7045a08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x21fa7045a70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x21fa7045af0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x21fa7045b58 prev 0x21fa7045900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x21fa70455e8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x21fa7045668 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x21fa70456e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x21fa7045d40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x21fa7045c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa704d0f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x21fa704d190 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x21fa704d1f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x21fa704d260 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x21fa704d2e0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x21fa704d348 prev 0x21fa704d0f0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x21fa7045d90 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x21fa7045e10 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x21fa7045e88 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x21fa704d448 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x21fa704d610 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x21fa704d498 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x21fa704d510 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa704d908 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x21fa704d6f0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa704d768 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa704d7e8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x21fa704dca0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x21fa704d9f0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa704da68 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa704dae8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x21fa704db60 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa704df08 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x21fa704dd88 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x21fa704de08 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x21fa7046080 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x21fa704dfe8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x21fa7046370 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x21fa7046158 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x21fa70461d0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa7046250 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x21fa7046668 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x21fa7046450 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x21fa70464d0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x21fa7046548 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa70468c8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x21fa7046750 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x21fa70467c8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7046c58 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x21fa70469a8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x21fa7046a20 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7046aa0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x21fa7046b18 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7046e28 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x21fa7046d48 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x21fa7054160 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x21fa7046f00 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x21fa7046f78 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7054320 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x21fa7054240 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x21fa70544b0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x21fa70546f8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7054580 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x21fa70545f8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7054950 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa70547d8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x21fa7054850 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7054ba8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7054a30 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x21fa7054aa8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7054f58 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7054c88 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x21fa7054d00 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7054d78 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7055290 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7055040 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x21fa70550b8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7055170 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7055588 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7055378 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x21fa70553f0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7055468 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7055880 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7055668 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x21fa70556e8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x21fa7055760 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7055b78 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7055960 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x21fa70559e0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x21fa7055a58 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7055e70 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7055c58 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x21fa7055cd8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x21fa7055d50 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7051290 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7055f50 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x21fa7055fd0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x21fa7056048 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa70560c0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7051628 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7051378 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x21fa70513f8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x21fa7051470 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa70514e8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa70519c0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7051710 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x21fa7051790 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x21fa7051808 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7051880 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7051e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7051b70 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa7051bf0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x21fa7051c68 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa7051f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa704f420 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7052058 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa704f110 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa704f190 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x21fa704f208 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa704f7c0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa704f510 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa704f588 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa704f608 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x21fa704f680 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa704fd10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa704f9b0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa704fa30 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x21fa704faa8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x21fa704fb20 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x21fa704fdd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa70563b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa704ff18 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa704ff90 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7050010 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x21fa7050088 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7056180 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa70567f8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa70564b0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa7056528 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa70565a8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x21fa7056620 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7056698 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7056a68 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa70568f0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x21fa7056968 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7056cc0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7056b48 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x21fa7056bc0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7056fb0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7056da0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x21fa7056e18 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7056e90 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7053280 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7057098 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x21fa7057110 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7053160 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa70536d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7053428 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa70534a0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7053520 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x21fa7053598 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa7053798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7053b90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa70538e0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa7053958 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa70539d8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x21fa7053a50 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7057190 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7053c80 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa7053cf8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7053d70 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7053df0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x21fa7053e68 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa70576d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7057388 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa7057400 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7057480 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x21fa70574f8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x21fa7057570 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x21fa7057798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7057c18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa70578e8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa7057960 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa70579e0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x21fa7057a58 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7057ad0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7050180 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7057d10 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x21fa7057d88 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7057e00 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7057e80 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x21fa7057ef8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7057f70 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7050540 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x21fa7050278 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x21fa70502f0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x21fa7050370 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x21fa70507b0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x21fa7050640 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x21fa70509c8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x21fa7050ca8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x21fa7050a90 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x21fa7050b08 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x21fa7050ef0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x21fa7050d80 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x21fa70581a0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x21fa7050fc0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x21fa7058328 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x21fa7058560 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x21fa70583f0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x21fa7058468 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x21fa7058710 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x21fa7058638 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x21fa70589b8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x21fa70587e0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x21fa7058858 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x21fa7058d60 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x21fa7058a90 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21fa7058b10 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x21fa7058b88 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x21fa7059060 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x21fa7058e40 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21fa7058eb8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x21fa70522f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa7059138 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x21fa7052150 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa7052600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21fa7052490 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x21fa70526a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7052968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x21fa70527e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x21fa7052c70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa7052a38 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x21fa7052ab0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa7052ec0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa7052d48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x21fa7052dc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa705e200 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x21fa7052f98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa705e3b0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x21fa705e2d0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa705e560 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x21fa705e480 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa705e8f8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705e630 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x21fa705e6a8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705e720 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705ebe8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705e9d8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x21fa705ea50 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705eac8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705eed8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705ecc8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x21fa705ed40 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705edb8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705a1c0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705efb8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x21fa705f030 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705f0a8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705a4c0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705a2a0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705a318 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705a710 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705a598 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705a610 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705a960 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705a7e8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705a860 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705abb0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705aa38 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705aab0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705af68 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa705ac88 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21fa705ad00 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa705ad78 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa705b3e0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705b048 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21fa705b0c0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa705b138 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705b1d0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705b798 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705b4c8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x21fa705b540 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705b5b8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705ba88 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705b878 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x21fa705b8f0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705b968 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705bd78 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa705bb68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa705bbe0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa705bc58 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa705c100 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705be58 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa705bed0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa705bf48 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705bfc0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705c590 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa705c208 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa705c280 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa705c2f8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa705c370 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa705ca98 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705c678 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa705c6f0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa705c768 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa705c7e0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705c858 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705ce58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa705cc48 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21fa705ccc0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa705cd38 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x21fa705cf10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa705d420 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705d110 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21fa705d1f0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa705d268 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa705d2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x21fa705d4e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa705d798 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa705d620 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x21fa705d698 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa705d950 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x21fa705d870 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa705dc30 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705da20 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x21fa705da98 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705db10 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa705de88 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa705dd10 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa705dd88 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa701ea90 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa705df60 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa705dfd8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa705e050 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa701ee18 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa701eb70 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa701ebe8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa701ec60 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa701ecd8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa701efe0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x21fa701ef00 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa701f228 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa701f0b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa701f128 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa701f530 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa701f300 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa701f378 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa701f780 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa701f608 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa701f680 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa701f9d0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa701f858 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa701f8d0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7021db8 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7021ae8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7021b60 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7021bd8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa70220a8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7021e98 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7021f10 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7021f88 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7022398 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7022188 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7022200 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7022278 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7022758 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7022478 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x21fa70224f0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa7022568 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7022ad0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7022838 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x21fa70228b0 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa7022928 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7022dc0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7022bb0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x21fa7022c28 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa7022ca0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7023210 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7022ea0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x21fa7022f18 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7022f90 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7023008 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa70235a0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa70232f8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x21fa7023370 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa70233e8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7023460 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7023930 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7023688 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x21fa7023700 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7023778 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa70237f0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7020dc0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7023a18 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa7020ab0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7020b28 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa7020ba0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7021150 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7020ea8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa7020f20 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7020f98 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa7021010 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa70214e0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7021238 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa70212b0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7021328 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa70213a0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa70219e8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa70215c8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa7021640 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa70216b8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7021730 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa70217a8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7026e78 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7026b38 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa7026bb0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7026c28 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7026ca0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7026d18 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa70272a8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7026f68 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa7026fe0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7027058 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa70270d0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7027148 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7027510 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7027398 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa7027410 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7027760 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa70275e8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa7027660 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7027a48 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7027838 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa70278b0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7027928 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7023e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7023bd0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa7023c48 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7023cc0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7023d38 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa7023f38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa70244a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7024080 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa70240f8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7024170 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa70241e8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa7024260 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa70249e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa70246a0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa7024718 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7024790 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7024808 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x21fa7024880 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x21fa7024af0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7025100 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7024c38 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x21fa7024cb0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7024d28 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7024da0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7024e18 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa7024e90 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa7025600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa70253c8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21fa7025440 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x21fa70256b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x21fa70257c8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x21fa7025d68 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa7025a80 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21fa7025b10 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7025b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x21fa7025e20 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x21fa7025f38 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x21fa70264d8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa70261f8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21fa7026270 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa70262e8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x21fa7026590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x21fa70266b0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x21fa701fcb0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa7026970 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21fa70269e8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7026a60 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x21fa701faa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x21fa701fd70 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x21fa701fe90 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x21fa7020198 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x21fa701ffb8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x21fa7020030 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa70200a8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x21fa702ee30 <line:37:1, line:44:1>
|   |-DeclStmt 0x21fa70202e0 <line:38:5, col:21>
|   | `-VarDecl 0x21fa7020278 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x21fa7020378 <line:39:5, col:13>
|   | `-VarDecl 0x21fa7020310 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x21fa70206d0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x21fa70206b8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x21fa70205d0 <col:34> '<builtin fn type>' Function 0x21fa7020468 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x21fa7020608 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x21fa7020278 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x21fa7020640 <col:29> 'const wchar_t *' lvalue ParmVar 0x21fa70200a8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x21fa7020990 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x21fa7020700 <col:5> 'int' lvalue Var 0x21fa7020310 '_Ret' 'int'
|   | `-CallExpr 0x21fa70208d0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x21fa70208b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x21fa7020738 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x21fa70219e8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x21fa7020918 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa7020758 <col:27> 'wchar_t *' lvalue ParmVar 0x21fa701ffb8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x21fa7020930 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa7020778 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x21fa7020030 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x21fa7020948 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa7020798 <col:44> 'const wchar_t *' lvalue ParmVar 0x21fa70200a8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x21fa7020960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x21fa7020820 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x21fa70207f8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x21fa70207b8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x21fa7020978 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x21fa7020840 <col:59> 'va_list':'char *' lvalue Var 0x21fa7020278 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x21fa702edc0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x21fa702eda8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x21fa702ecf8 <col:34> '<builtin fn type>' Function 0x21fa702eb90 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x21fa702ed30 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x21fa7020278 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x21fa702ee20 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x21fa702ee08 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21fa702ede8 <col:12> 'int' lvalue Var 0x21fa7020310 '_Ret' 'int'
|-FunctionDecl 0x21fa7020468 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x21fa7020508 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x21fa7020578 <col:34> Implicit
|-FunctionDecl 0x21fa702eb90 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x21fa702ec30 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x21fa702eca0 <col:34> Implicit
|-FunctionDecl 0x21fa702f128 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x21fa702ee80 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x21fa702eef8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa702ef70 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa702efe8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x21fa702f410 <line:50:1, line:52:1>
|   `-ReturnStmt 0x21fa702f400 <line:51:5, col:62>
|     `-CallExpr 0x21fa702f340 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x21fa702f328 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x21fa702f200 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x21fa70219e8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x21fa702f388 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x21fa702f220 <col:27> 'wchar_t *' lvalue ParmVar 0x21fa702ee80 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x21fa702f3a0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x21fa702f240 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x21fa702eef8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x21fa702f3b8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x21fa702f260 <col:44> 'const wchar_t *' lvalue ParmVar 0x21fa702ef70 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x21fa702f3d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x21fa702f2e8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x21fa702f2c0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x21fa702f280 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x21fa702f3e8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x21fa702f308 <col:59> 'va_list':'char *' lvalue ParmVar 0x21fa702efe8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x21fa702f6b0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x21fa702f438 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x21fa702f4b0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa702f528 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa702f5a0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x21fa702fc48 <line:61:1, line:68:1>
|   |-DeclStmt 0x21fa702f800 <line:62:5, col:21>
|   | `-VarDecl 0x21fa702f798 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x21fa702f898 <line:63:5, col:13>
|   | `-VarDecl 0x21fa702f830 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x21fa702f940 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x21fa702f928 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x21fa702f8b0 <col:34> '<builtin fn type>' Function 0x21fa7020468 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x21fa702f8d0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x21fa702f798 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x21fa702f908 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x21fa702f5a0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x21fa702fb40 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x21fa702f970 <col:5> 'int' lvalue Var 0x21fa702f830 '_Ret' 'int'
|   | `-CallExpr 0x21fa702fa80 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x21fa702fa68 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x21fa702f9a8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x21fa70219e8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x21fa702fac8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa702f9c8 <col:27> 'wchar_t *' lvalue ParmVar 0x21fa702f438 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x21fa702fae0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa702f9e8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x21fa702f4b0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x21fa702faf8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa702fa08 <col:44> 'const wchar_t *' lvalue ParmVar 0x21fa702f528 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x21fa702fb10 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa702fa28 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x21fa702f5a0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x21fa702fb28 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x21fa702fa48 <col:64> 'va_list':'char *' lvalue Var 0x21fa702f798 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x21fa702fbd8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x21fa702fbc0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x21fa702fb60 <col:34> '<builtin fn type>' Function 0x21fa702eb90 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x21fa702fba0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x21fa702f798 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x21fa702fc38 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x21fa702fc20 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21fa702fc00 <col:12> 'int' lvalue Var 0x21fa702f830 '_Ret' 'int'
|-FunctionDecl 0x21fa702ffd8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x21fa702fc98 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x21fa702fd10 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa702fd88 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa702fe00 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x21fa702fe78 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x21fa7030260 <line:74:1, line:76:1>
|   `-ReturnStmt 0x21fa7030250 <line:75:5, col:67>
|     `-CallExpr 0x21fa7030190 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x21fa7030178 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x21fa70300b8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x21fa70219e8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x21fa70301d8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x21fa70300d8 <col:27> 'wchar_t *' lvalue ParmVar 0x21fa702fc98 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x21fa70301f0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x21fa70300f8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x21fa702fd10 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x21fa7030208 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x21fa7030118 <col:44> 'const wchar_t *' lvalue ParmVar 0x21fa702fd88 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x21fa7030220 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x21fa7030138 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x21fa702fe00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x21fa7030238 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x21fa7030158 <col:64> 'va_list':'char *' lvalue ParmVar 0x21fa702fe78 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x21fa70304a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa7030288 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x21fa7030300 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x21fa70306f8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x21fa7030580 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa70305f8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa70309e0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x21fa70307d0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7030848 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x21fa70308c0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x21fa702cce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa702cb70 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x21fa702cbe8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x21fa702cd98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa702d1a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa702cf98 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x21fa702d010 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa702d088 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa702d260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa702d518 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa702d3a0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x21fa702d418 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa702d800 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa702d5f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x21fa702d668 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa702d6e0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7028ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa702d9a0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x21fa702da18 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x21fa7028c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7029128 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7028e50 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x21fa7028ec8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa7028f40 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa70291e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7029498 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa7029320 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21fa7029398 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa7029780 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7029570 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x21fa70295e8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa7029660 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7030c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa7029920 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x21fa7029998 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7029a10 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x21fa7030d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa70312d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7030f50 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x21fa7030fc8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7031040 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa70310b8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa7031390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa70316e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa70314d0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x21fa7031548 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa70315c0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa7031a68 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa70317c0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x21fa7031838 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa70318b0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa7031928 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7029cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x21fa7029c10 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x21fa7029d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa702a110 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa7029f98 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x21fa702a010 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa702a1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa702a3e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x21fa702a300 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x21fa702a628 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x21fa702a4b0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x21fa702a528 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa702a928 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x21fa702a708 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x21fa702a780 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x21fa702bd08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa702aac0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x21fa702bb60 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x21fa702bdb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa702c1c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa702bf00 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x21fa702bf78 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x21fa702bff0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x21fa702c620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x21fa702c360 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x21fa702c3d8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x21fa702c450 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x21fa702c6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7031c08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x21fa702c820 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x21fa702c898 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x21fa702c910 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x21fa702c988 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x21fa7031e60 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x21fa7031cf0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x21fa70320a0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa7031f30 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x21fa7031fa8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x21fa7032258 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x21fa7032178 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x21fa7032548 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa7032328 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x21fa70323a0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa70327b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21fa70326e0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x21fa7032860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7032a78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x21fa70329a0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x21fa702ac48 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x21fa7032b48 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x21fa702ab50 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x21fa702ae90 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x21fa702ad20 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x21fa702ad98 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x21fa702b040 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x21fa702af68 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x21fa702b1e8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x21fa702b110 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x21fa702b398 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa702b2b8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x21fa702b548 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x21fa702b468 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x21fa702b8c0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x21fa702b620 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x21fa702b698 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa702b710 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa702b788 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x21fa7038e00 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x21fa702b9b0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x21fa702ba28 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa702baa0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7038c30 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa7038ca8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x21fa7039110 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x21fa7038ef0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x21fa7038f70 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x21fa7038ff0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x21fa70392d0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x21fa70391f0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x21fa70395c0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x21fa70393a0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x21fa7039420 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x21fa70394a0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x21fa7039780 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x21fa70396a0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x21fa7039af8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x21fa7039858 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x21fa70398d0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7039948 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa70399c0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x21fa7036d88 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x21fa7036c10 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x21fa7036c88 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x21fa70370c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x21fa7036f40 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x21fa7036fc0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x21fa7037170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x21fa7037428 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x21fa70374c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x21fa7037808 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x21fa7037690 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x21fa7037710 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x21fa70378b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x21fa7033be0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x21fa7033c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x21fa7033f20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x21fa7033e40 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x21fa7033fc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x21fa7034248 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x21fa70342e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x21fa7034590 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x21fa70344b0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x21fa7034638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x21fa7034918 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x21fa7034838 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x21fa70349c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x21fa7037d98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x21fa7037c20 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x21fa7037c98 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x21fa7037e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x21fa7038108 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x21fa70381a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x21fa7038650 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x21fa70382d0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x21fa7038350 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x21fa70383d0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x21fa7038448 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa7038a18 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x21fa7038ab8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x21fa7038b20 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x21fa7038b88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21fa7032bd0 prev 0x21fa7038a18 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x21fa7038740 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x21fa70387c0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x21fa7038838 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa7032f88 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x21fa7032cb8 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x21fa7032d38 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x21fa7032db0 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa70333f0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa7033070 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x21fa70330f0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x21fa7033168 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa70331e0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa70336f8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x21fa7033798 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x21fa7033800 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x21fa7033868 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21fa70338e8 prev 0x21fa70336f8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x21fa70334e0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x21fa7033560 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x21fa70335d8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa703bd48 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x21fa703bde8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21fa703be50 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x21fa703beb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21fa703bf38 prev 0x21fa703bd48 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x21fa70339d0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x21fa7033a50 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x21fa7033ac8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa703c398 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x21fa703c020 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x21fa703c098 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21fa703c118 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x21fa703c190 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21fa703c758 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x21fa703c7f8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21fa703c860 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x21fa703c8c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21fa703c948 prev 0x21fa703c758 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x21fa703c488 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x21fa703c508 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x21fa703c580 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa7034d30 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x21fa7034dd0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21fa7034e38 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x21fa7034ea0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x21fa7034f08 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21fa7034f90 prev 0x21fa7034d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x21fa703cad0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x21fa703cb50 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x21fa703cbd0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x21fa7034bf0 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa7035050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x21fa7035430 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x21fa7035218 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x21fa7035298 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x21fa7035310 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa70354e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x21fa70358e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x21fa7035610 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x21fa7035688 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa7035708 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x21fa703acf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x21fa7035a88 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x21fa7035b08 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x21fa703ada0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa703b1b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x21fa703aee8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x21fa703af60 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21fa703afe0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x21fa703b540 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x21fa703b5e0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x21fa703b648 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21fa703b6c0 prev 0x21fa703b540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x21fa703b358 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x21fa703b3d8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x21fa703b770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa703bac8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x21fa703b8b8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x21fa703b930 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21fa703b9b0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x21fa706c4a8 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x21fa706c548 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x21fa706c5b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21fa706c628 prev 0x21fa706c4a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x21fa706c328 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x21fa706c3a8 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x21fa706c6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa706c9a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x21fa706ca40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa706caa8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21fa706cb20 prev 0x21fa706c9a0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x21fa706c820 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x21fa706c8a0 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x21fa706cd70 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x21fa706ce10 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21fa706ce80 prev 0x21fa706cd70 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x21fa706cc00 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x21fa706d178 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x21fa706cf58 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x21fa706cfd0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa706e3f8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x21fa706e288 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x21fa706e300 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x21fa706e728 <line:131:1, line:133:1>
|   `-ReturnStmt 0x21fa706e718 <line:132:5, col:51>
|     `-ConditionalOperator 0x21fa706e6e8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x21fa706e558 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x21fa706e538 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x21fa706e508 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x21fa706e4c0 <col:13> 'const char *' lvalue ParmVar 0x21fa706e288 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x21fa706e520 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x21fa706e4e0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x21fa706e6d0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x21fa706e578 <col:24> 'int' 0
|       `-CallExpr 0x21fa706e670 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x21fa706e658 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x21fa706e5a0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x21fa706d178 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x21fa706e6a0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x21fa706e5c0 <col:36> 'const char *' lvalue ParmVar 0x21fa706e288 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x21fa706e6b8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x21fa706e5e0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x21fa706e300 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa706ea00 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x21fa706e758 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x21fa706e7d0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21fa706e850 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x21fa706e8c8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21fa706ed08 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x21fa706eda8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x21fa706ee10 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x21fa706ee78 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21fa706eef8 prev 0x21fa706ed08 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x21fa706eaf0 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x21fa706eb70 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x21fa706ebe8 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa706f128 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x21fa706efe0 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x21fa7068390 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x21fa7068430 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa7068498 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x21fa7068510 prev 0x21fa7068390 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x21fa706f200 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x21fa7068228 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x21fa7068770 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21fa70685f0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x21fa7068670 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x21fa70689d0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21fa7068850 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x21fa70688d0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x21fa7068d88 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x21fa7068ab0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x21fa7068b30 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x21fa7068ba8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7068ff0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21fa7068e70 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x21fa7068ef0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x21fa706a350 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x21fa70690d0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x21fa7069150 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x21fa706a230 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa706a5b8 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21fa706a438 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x21fa706a4b8 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x21fa706a8b0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x21fa706a698 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x21fa706a718 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x21fa706a790 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa706ac68 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21fa706a998 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21fa706aa18 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x21fa706aa90 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa706b0d0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa706ad50 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21fa706add0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x21fa706ae48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa706aec0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa706b3f0 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21fa706b1c0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21fa706b258 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x21fa706b2d0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa706b788 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa706b4d8 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x21fa706b558 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x21fa706b5d0 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa706b648 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa706ba98 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x21fa706bb38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa706bba0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21fa706bc18 prev 0x21fa706ba98 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x21fa706b878 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x21fa706b8f8 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x21fa706be98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x21fa706bdb8 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x21fa706bf40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa706d340 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x21fa706c088 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x21fa706c100 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa706c180 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x21fa706d618 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x21fa706d6b8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x21fa706d728 prev 0x21fa706d618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x21fa706d4e8 <col:90> col:93 'int'
| `-DeprecatedAttr 0x21fa706d7d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa706db28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x21fa706d918 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x21fa706d990 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa706da10 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x21fa706dde8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x21fa706dc10 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x21fa706dc88 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa706e068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21fa706df88 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x21fa706e110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa70674c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa7067200 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x21fa7067278 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa70672f0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7067890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x21fa7067668 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x21fa70676e0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa7067940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7067df8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x21fa7067a88 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x21fa7067b00 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7067b80 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x21fa7067bf8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21fa7076368 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21fa7076408 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21fa7076470 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa70764d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21fa7076558 prev 0x21fa7076368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21fa7067fa8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x21fa7068028 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x21fa70680a0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa7076610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7076970 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21fa7076a10 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x21fa7076a78 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa7076ae0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21fa7076b60 prev 0x21fa7076970 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21fa7076758 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x21fa70767d8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x21fa7076850 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa7076e60 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21fa7076c48 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x21fa7076cc8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x21fa7076d40 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa70771f8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa7076f48 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x21fa7076fc8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x21fa7077040 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa70770b8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7075588 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x21fa70752e0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x21fa7075358 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21fa70753d8 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x21fa7075450 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21fa7075950 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21fa70759f0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21fa7075a58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa7075ac0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21fa7075b40 prev 0x21fa7075950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21fa7075738 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x21fa70757b8 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x21fa7075830 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa7075bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa70760b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x21fa7075d40 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x21fa7075db8 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7075e38 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x21fa7075eb0 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa70704f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x21fa7076268 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x21fa70702a8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x21fa7070320 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa70705b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7070878 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x21fa7070918 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa7070980 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21fa70709f8 prev 0x21fa7070878 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x21fa70706f8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x21fa7070778 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x21fa7070c58 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x21fa7070cf8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa7070d60 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x21fa7070dd8 prev 0x21fa7070c58 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x21fa7070ad8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x21fa7070b58 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x21fa7070f98 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x21fa7070eb8 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x21fa70711e8 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x21fa706f280 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa706f2e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21fa706f360 prev 0x21fa70711e8 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x21fa7071070 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x21fa70710f0 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x21fa706f5c0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x21fa706f660 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa706f6c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21fa706f740 prev 0x21fa706f5c0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x21fa706f440 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x21fa706f4c0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x21fa706fa60 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x21fa706fb00 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x21fa706fb68 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21fa706fbe0 prev 0x21fa706fa60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x21fa706f8e0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x21fa706f960 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x21fa706fc90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7070078 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x21fa706fdd8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x21fa706fe58 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x21fa706fed8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x21fa7072310 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x21fa7070160 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x21fa70701d8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa7072590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21fa70724b0 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x21fa7072638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7072988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa7072780 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x21fa70727f8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa7072870 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7072ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x21fa7072b30 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x21fa7072ba8 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa7072d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7073170 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x21fa7073210 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x21fa70712a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x21fa7071308 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21fa7071388 prev 0x21fa7073170 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x21fa7072ea0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x21fa7072f20 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x21fa7072f98 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa70717e8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa7071470 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x21fa70714f0 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x21fa7071568 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa70715e0 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7071a58 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x21fa7071af8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x21fa7071b68 prev 0x21fa7071a58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x21fa7071978 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x21fa7071c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x21fa7071f58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21fa7071dd8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x21fa7071e58 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x21fa7072008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x21fa7078410 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x21fa70721d0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x21fa7078310 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x21fa70784c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x21fa7078768 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21fa7078688 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x21fa7078810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x21fa7078bf0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x21fa70789d8 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x21fa7078a58 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x21fa7078ad0 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa7078ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x21fa7079088 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x21fa7078e70 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x21fa7078ef0 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x21fa7078f68 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa7079140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x21fa7079400 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21fa7079320 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x21fa70794a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x21fa70797f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x21fa7079670 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x21fa70796f0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x21fa70798a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x21fa7079b48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x21fa7079a68 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x21fa7079bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x21fa7079e80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x21fa7079d10 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x21fa707a210 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x21fa7079f50 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21fa7079fc8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21fa707a040 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x21fa707a618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa707a400 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21fa707a478 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x21fa707a6c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa707aa28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x21fa707aac8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x21fa707ab30 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x21fa707aba8 prev 0x21fa707aa28 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x21fa707a808 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21fa707a880 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x21fa707aea0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x21fa707af40 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x21fa707afa8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x21fa707b020 prev 0x21fa707aea0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x21fa707ac80 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21fa707acf8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x21fa707b340 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x21fa707b0f8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21fa707b170 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x21fa707b1e8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x21fa707b650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa707b4e0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21fa707b558 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x21fa707b700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa707ba58 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa707b840 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21fa707b8b8 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x21fa707bca0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x21fa707bd40 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x21fa707bdb0 prev 0x21fa707bca0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x21fa707bb30 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x21fa707c098 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa707be80 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21fa707bef8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa70742d0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x21fa707c170 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x21fa707c1e8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x21fa7074668 <line:306:1, line:308:1>
|   `-ReturnStmt 0x21fa7074658 <line:307:5, col:56>
|     `-ConditionalOperator 0x21fa7074628 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x21fa7074490 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x21fa7074470 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x21fa7074440 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x21fa7074398 <col:13> 'const wchar_t *' lvalue ParmVar 0x21fa707c170 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x21fa7074458 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x21fa7074420 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x21fa70743f8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x21fa70743b8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x21fa7074610 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x21fa70744b0 <col:29> 'int' 0
|       `-CallExpr 0x21fa70745b0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x21fa7074598 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x21fa70744d8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x21fa707c098 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x21fa70745e0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x21fa70744f8 <col:41> 'const wchar_t *' lvalue ParmVar 0x21fa707c170 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x21fa70745f8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x21fa7074518 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x21fa707c1e8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa70749f8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x21fa7074690 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21fa7074708 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21fa7074780 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21fa70747f8 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21fa7074e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa7074ba0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21fa7074c18 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x21fa7074c90 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa7074f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa707c3c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x21fa707c468 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x21fa707c4d0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x21fa707c538 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x21fa707c5b8 prev 0x21fa707c3c8 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x21fa7075058 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa70750d0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21fa7075148 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa707c938 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x21fa707c698 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21fa707c710 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x21fa707c788 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21fa707c800 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x21fa707cce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa707cae0 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x21fa707cb58 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x21fa707cbd0 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa707cda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa707d050 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa707cee0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21fa707cf58 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x21fa707d298 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x21fa707d128 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21fa707d1a0 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x21fa7077498 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa7077328 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21fa70773a0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x21fa70776e0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa7077570 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x21fa70775e8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x21fa70779e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa7077878 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x21fa70778f0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x21fa7077a98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7077f00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x21fa7077bd8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x21fa7077c50 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x21fa7077d30 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x21fa7078220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x21fa70780a8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x21fa70833c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa70837d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x21fa7083500 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x21fa7083578 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa70835f8 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x21fa7083a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x21fa7083970 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x21fa7083af0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7083eb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x21fa7083c30 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x21fa7083ca8 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa7083d20 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x21fa7084108 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa7083f90 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21fa7084008 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x21fa707d448 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21fa70841e0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa7084258 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21fa70842d0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa707d738 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa707d528 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa707d5a0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21fa707d618 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa707db90 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa707d818 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa707d890 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21fa707d908 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa707d980 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa707dfe8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x21fa707dc78 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21fa707dcf0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x21fa707dd68 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x21fa707dde0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa70824d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x21fa707e190 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x21fa707e208 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x21fa707e280 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa7082588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa70827a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x21fa70826c8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x21fa7082b30 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x21fa7082870 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21fa70828e8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa7082960 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x21fa7082ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x21fa7082cd0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x21fa7082d48 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x21fa7082f98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7083248 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa70830d8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x21fa7083150 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa7084578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21fa70844a0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x21fa7084620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7084a20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa7084760 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x21fa70847d8 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa7084850 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7084dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21fa7084bc0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x21fa7084c38 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa7084e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7085138 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa7084fc8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x21fa7085040 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa70853e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21fa70852d0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x21fa7085488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa70857d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa70855c8 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x21fa7085640 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa70856b8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7085ae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21fa7085970 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x21fa70859e8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x21fa7085b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x21fa7085f90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa7085cd0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21fa7085d48 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x21fa7085dc0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa707e370 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa7086070 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x21fa70860e8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x21fa7086160 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa70861d8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa707e5d0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa707e458 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21fa707e4d0 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x21fa707e8b8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21fa707e6a8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa707e720 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21fa707e798 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa707eb10 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa707e998 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x21fa707ea10 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x21fa707edf8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x21fa707ebe8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa707ec60 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21fa707ecd8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa707f0e8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa707eed8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa707ef50 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21fa707efc8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa7086530 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa707f1c8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa707f240 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21fa707f2b8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa70863f0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7086828 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa7086618 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa7086690 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x21fa7086708 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x21fa7086bb0 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x21fa7086908 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa7086980 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21fa70869f8 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x21fa7086a70 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x21fa7086e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x21fa7086d38 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x21fa7086eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x21fa70871f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa7087078 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa70870f0 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x21fa70872a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x21fa707f640 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x21fa707f430 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa707f4a8 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x21fa707f520 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa707f6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x21fa707fac0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x21fa707f8b8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x21fa707f930 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x21fa707f9a8 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x21fa707fb78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x21fa707fe10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21fa707fd38 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x21fa707feb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x21fa70801e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x21fa7080078 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x21fa70800f0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x21fa7080298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x21fa70875d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21fa70874f8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x21fa7087678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x21fa7087910 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x21fa7087838 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x21fa70879b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x21fa7087cf0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x21fa7087b78 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x21fa7087bf0 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x21fa7087da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-VarDecl 0x21fa7087f30 <.//openssl//file_jk/after\crypto\asn1/charmap.h:22:1, line:34:1> line:22:29 used char_type 'const unsigned short [128]' static cinit
| `-InitListExpr 0x21fa7089848 <col:43, line:34:1> 'const unsigned short [128]'
|   |-ImplicitCastExpr 0x21fa7089888 <line:23:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7087f98 <col:5> 'int' 1026
|   |-ImplicitCastExpr 0x21fa70898a8 <col:14> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7087fc0 <col:14> 'int' 2
|   |-ImplicitCastExpr 0x21fa70898d0 <col:20> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7087fe8 <col:20> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089908 <col:26> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088010 <col:26> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089920 <col:32> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088038 <col:32> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089978 <col:38> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088060 <col:38> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089990 <col:44> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088088 <col:44> 'int' 2
|   |-ImplicitCastExpr 0x21fa70899a8 <col:50> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70880b0 <col:50> 'int' 2
|   |-ImplicitCastExpr 0x21fa70899c0 <col:56> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70880d8 <col:56> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089a58 <col:62> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088100 <col:62> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089a70 <col:68> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088128 <col:68> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089a88 <col:74> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088150 <col:74> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089aa0 <line:24:8> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088178 <col:8> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089ab8 <col:14> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70881a0 <col:14> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089ad0 <col:20> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70881c8 <col:20> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089ae8 <col:26> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70881f0 <col:26> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089b00 <col:32> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088218 <col:32> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089c18 <col:38> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088240 <col:38> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089c30 <col:44> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088268 <col:44> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089c48 <col:50> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088290 <col:50> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089c60 <col:56> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70882b8 <col:56> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089c78 <col:62> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70882e0 <col:62> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089c90 <col:68> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088308 <col:68> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089ca8 <col:74> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088330 <col:74> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089cc0 <line:25:8> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088358 <col:8> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089cd8 <col:14> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7088380 <col:14> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089cf0 <col:20> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70883a8 <col:20> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089d08 <col:26> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70883d0 <col:26> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089d20 <col:32> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d460 <col:32> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089d38 <col:38> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d488 <col:38> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089d50 <col:44> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d4b0 <col:44> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089d68 <col:50> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d4d8 <col:50> 'int' 2
|   |-ImplicitCastExpr 0x21fa7089d80 <col:54> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d500 <col:54> 'int' 120
|   |-ImplicitCastExpr 0x21fa7089f98 <col:62> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d528 <col:62> 'int' 0
|   |-ImplicitCastExpr 0x21fa7089fb0 <col:68> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d550 <col:68> 'int' 1
|   |-ImplicitCastExpr 0x21fa7089fc8 <col:73> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d578 <col:73> 'int' 40
|   |-ImplicitCastExpr 0x21fa7089fe0 <line:26:8> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d5a0 <col:8> 'int' 0
|   |-ImplicitCastExpr 0x21fa7089ff8 <col:14> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d5c8 <col:14> 'int' 0
|   |-ImplicitCastExpr 0x21fa708a010 <col:20> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d5f0 <col:20> 'int' 0
|   |-ImplicitCastExpr 0x21fa708a028 <col:25> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d618 <col:25> 'int' 16
|   |-ImplicitCastExpr 0x21fa708a040 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d640 <col:29> 'int' 1040
|   |-ImplicitCastExpr 0x21fa708a058 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d668 <col:35> 'int' 1040
|   |-ImplicitCastExpr 0x21fa708a070 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d690 <col:41> 'int' 33792
|   |-ImplicitCastExpr 0x21fa708a088 <col:50> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d6b8 <col:50> 'int' 25
|   |-ImplicitCastExpr 0x21fa708a0a0 <col:56> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d6e0 <col:56> 'int' 25
|   |-ImplicitCastExpr 0x21fa708a0b8 <col:60> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d708 <col:60> 'int' 16400
|   |-ImplicitCastExpr 0x21fa708a0d0 <col:67> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d730 <col:67> 'int' 8208
|   |-ImplicitCastExpr 0x21fa708a0e8 <col:75> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d758 <col:75> 'int' 16
|   |-ImplicitCastExpr 0x21fa708a100 <line:27:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d780 <col:5> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708a118 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d7a8 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708a130 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d7d0 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708a148 <col:23> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d7f8 <col:23> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708a160 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d820 <col:29> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708a178 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d848 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708a190 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d870 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708a1a8 <col:47> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d898 <col:47> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708a1c0 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d8c0 <col:53> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708a1d8 <col:59> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d8e8 <col:59> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708a1f0 <col:67> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d910 <col:67> 'int' 16
|   |-ImplicitCastExpr 0x21fa708a208 <col:74> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d938 <col:74> 'int' 9
|   |-ImplicitCastExpr 0x21fa708a220 <line:28:8> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d960 <col:8> 'int' 9
|   |-ImplicitCastExpr 0x21fa708a238 <col:13> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d988 <col:13> 'int' 16
|   |-ImplicitCastExpr 0x21fa708a250 <col:20> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d9b0 <col:20> 'int' 9
|   |-ImplicitCastExpr 0x21fa708a268 <col:25> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708d9d8 <col:25> 'int' 16
|   |-ImplicitCastExpr 0x21fa708a280 <col:32> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708da00 <col:32> 'int' 0
|   |-ImplicitCastExpr 0x21fa708b840 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708da28 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b858 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708da50 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b870 <col:47> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708da78 <col:47> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b888 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708daa0 <col:53> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b8a0 <col:59> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dac8 <col:59> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b8b8 <col:65> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708daf0 <col:65> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b8d0 <col:71> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708db18 <col:71> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b8e8 <line:29:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708db40 <col:5> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b900 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708db68 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b918 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708db90 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b930 <col:23> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dbb8 <col:23> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b948 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dbe0 <col:29> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b960 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dc08 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b978 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dc30 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b990 <col:47> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dc58 <col:47> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b9a8 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dc80 <col:53> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b9c0 <col:59> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dca8 <col:59> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b9d8 <col:65> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dcd0 <col:65> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708b9f0 <col:71> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dcf8 <col:71> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708ba08 <line:30:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dd20 <col:5> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708ba20 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dd48 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708ba38 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dd70 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708ba50 <col:23> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dd98 <col:23> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708ba68 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708ddc0 <col:29> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708ba80 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dde8 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708ba98 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708de10 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bab0 <col:50> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708de38 <col:50> 'int' 0
|   |-ImplicitCastExpr 0x21fa708bac8 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708de60 <col:53> 'int' 1025
|   |-ImplicitCastExpr 0x21fa708bae0 <col:62> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708de88 <col:62> 'int' 0
|   |-ImplicitCastExpr 0x21fa708baf8 <col:68> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708deb0 <col:68> 'int' 0
|   |-ImplicitCastExpr 0x21fa708bb10 <col:74> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708ded8 <col:74> 'int' 0
|   |-ImplicitCastExpr 0x21fa708bb28 <line:31:8> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708df00 <col:8> 'int' 0
|   |-ImplicitCastExpr 0x21fa708bb40 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708df28 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bb58 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708df50 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bb70 <col:23> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708df78 <col:23> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bb88 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dfa0 <col:29> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bba0 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dfc8 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bbb8 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708dff0 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bbd0 <col:47> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e018 <col:47> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bbe8 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e040 <col:53> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bc00 <col:59> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e068 <col:59> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bc18 <col:65> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e090 <col:65> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bc30 <col:71> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e0b8 <col:71> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bc48 <line:32:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e0e0 <col:5> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bc60 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e108 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bc78 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e130 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bc90 <col:23> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e158 <col:23> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bca8 <col:29> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e180 <col:29> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bcc0 <col:35> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e1a8 <col:35> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bcd8 <col:41> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e1d0 <col:41> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bcf0 <col:47> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e1f8 <col:47> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bd08 <col:53> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e220 <col:53> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bd20 <col:59> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e248 <col:59> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bd38 <col:65> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e270 <col:65> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bd50 <col:71> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e298 <col:71> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bd68 <line:33:5> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e2c0 <col:5> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bd80 <col:11> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e2e8 <col:11> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bd98 <col:17> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e310 <col:17> 'int' 4112
|   |-ImplicitCastExpr 0x21fa708bdb0 <col:26> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e338 <col:26> 'int' 0
|   |-ImplicitCastExpr 0x21fa708bdc8 <col:32> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e360 <col:32> 'int' 0
|   |-ImplicitCastExpr 0x21fa708bde0 <col:38> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e388 <col:38> 'int' 0
|   |-ImplicitCastExpr 0x21fa708bdf8 <col:44> 'unsigned short' <IntegralCast>
|   | `-IntegerLiteral 0x21fa708e3b0 <col:44> 'int' 0
|   `-ImplicitCastExpr 0x21fa708be10 <col:50> 'unsigned short' <IntegralCast>
|     `-IntegerLiteral 0x21fa708e3d8 <col:50> 'int' 2
|-FunctionDecl 0x21fa708c0f0 <.//openssl//file_jk/after\crypto\asn1\a_strex.c:38:1, line:45:1> line:38:12 used send_bio_chars 'int (void *, const void *, int)' static
| |-ParmVarDecl 0x21fa708bec0 <col:27, col:33> col:33 used arg 'void *'
| |-ParmVarDecl 0x21fa708bf40 <col:38, col:50> col:50 used buf 'const void *'
| |-ParmVarDecl 0x21fa708bfc0 <col:55, col:59> col:59 used len 'int'
| `-CompoundStmt 0x21fa708c5b0 <line:39:1, line:45:1>
|   |-IfStmt 0x21fa708c248 <line:40:5, line:41:16>
|   | |-UnaryOperator 0x21fa708c1f8 <line:40:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x21fa708c1e0 <col:10> 'void *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21fa708c1c0 <col:10> 'void *' lvalue ParmVar 0x21fa708bec0 'arg' 'void *'
|   | `-ReturnStmt 0x21fa708c238 <line:41:9, col:16>
|   |   `-IntegerLiteral 0x21fa708c210 <col:16> 'int' 1
|   |-IfStmt 0x21fa708c560 <line:42:5, line:43:16>
|   | |-BinaryOperator 0x21fa708c508 <line:42:9, col:37> 'int' '!='
|   | | |-CallExpr 0x21fa708c450 <col:9, col:32> 'int'
|   | | | |-ImplicitCastExpr 0x21fa708c428 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x21fa708c378 <col:9> 'int ()' Function 0x21fa708c2b0 'BIO_write' 'int ()'
|   | | | |-ImplicitCastExpr 0x21fa708c488 <col:19> 'void *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x21fa708c398 <col:19> 'void *' lvalue ParmVar 0x21fa708bec0 'arg' 'void *'
|   | | | |-ImplicitCastExpr 0x21fa708c4a0 <col:24> 'const void *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x21fa708c3b8 <col:24> 'const void *' lvalue ParmVar 0x21fa708bf40 'buf' 'const void *'
|   | | | `-ImplicitCastExpr 0x21fa708c4b8 <col:29> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x21fa708c3d8 <col:29> 'int' lvalue ParmVar 0x21fa708bfc0 'len' 'int'
|   | | `-ImplicitCastExpr 0x21fa708c4f0 <col:37> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21fa708c4d0 <col:37> 'int' lvalue ParmVar 0x21fa708bfc0 'len' 'int'
|   | `-ReturnStmt 0x21fa708c550 <line:43:9, col:16>
|   |   `-IntegerLiteral 0x21fa708c528 <col:16> 'int' 0
|   `-ReturnStmt 0x21fa708c5a0 <line:44:5, col:12>
|     `-IntegerLiteral 0x21fa708c578 <col:12> 'int' 1
|-FunctionDecl 0x21fa708c7e0 <line:48:1, line:55:1> line:48:12 used send_fp_chars 'int (void *, const void *, int)' static
| |-ParmVarDecl 0x21fa708c5f0 <col:26, col:32> col:32 used arg 'void *'
| |-ParmVarDecl 0x21fa708c670 <col:37, col:49> col:49 used buf 'const void *'
| |-ParmVarDecl 0x21fa708c6f0 <col:54, col:58> col:58 used len 'int'
| `-CompoundStmt 0x21fa708ccb8 <line:49:1, line:55:1>
|   |-IfStmt 0x21fa708c938 <line:50:5, line:51:16>
|   | |-UnaryOperator 0x21fa708c8e8 <line:50:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x21fa708c8d0 <col:10> 'void *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21fa708c8b0 <col:10> 'void *' lvalue ParmVar 0x21fa708c5f0 'arg' 'void *'
|   | `-ReturnStmt 0x21fa708c928 <line:51:9, col:16>
|   |   `-IntegerLiteral 0x21fa708c900 <col:16> 'int' 1
|   |-IfStmt 0x21fa708cc68 <line:52:5, line:53:16>
|   | |-BinaryOperator 0x21fa708cc10 <line:52:9, col:51> 'int' '!='
|   | | |-CallExpr 0x21fa708cab0 <col:9, col:32> 'unsigned long long'
|   | | | |-ImplicitCastExpr 0x21fa708ca98 <col:9> 'unsigned long long (*)(const void *, unsigned long long, unsigned long long, FILE *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x21fa708c950 <col:9> 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' Function 0x21fa6feb818 'fwrite' 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
|   | | | |-ImplicitCastExpr 0x21fa708caf0 <col:16> 'const void *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x21fa708c970 <col:16> 'const void *' lvalue ParmVar 0x21fa708c670 'buf' 'const void *'
|   | | | |-ImplicitCastExpr 0x21fa708cb08 <col:21> 'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x21fa708c990 <col:21> 'int' 1
|   | | | |-ImplicitCastExpr 0x21fa708cb38 <col:24> 'unsigned long long' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x21fa708cb20 <col:24> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x21fa708c9b8 <col:24> 'int' lvalue ParmVar 0x21fa708c6f0 'len' 'int'
|   | | | `-ImplicitCastExpr 0x21fa708cb68 <col:29> 'FILE *' <BitCast>
|   | | |   `-ImplicitCastExpr 0x21fa708cb50 <col:29> 'void *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x21fa708c9d8 <col:29> 'void *' lvalue ParmVar 0x21fa708c5f0 'arg' 'void *'
|   | | `-ImplicitCastExpr 0x21fa708cbf8 <col:37, col:51> 'unsigned long long' <IntegralCast>
|   | |   `-CStyleCastExpr 0x21fa708cbd0 <col:37, col:51> 'unsigned int' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x21fa708cbb8 <col:51> 'int' <LValueToRValue> part_of_explicit_cast
|   | |       `-DeclRefExpr 0x21fa708cb80 <col:51> 'int' lvalue ParmVar 0x21fa708c6f0 'len' 'int'
|   | `-ReturnStmt 0x21fa708cc58 <line:53:9, col:16>
|   |   `-IntegerLiteral 0x21fa708cc30 <col:16> 'int' 0
|   `-ReturnStmt 0x21fa708cca8 <line:54:5, col:12>
|     `-IntegerLiteral 0x21fa708cc80 <col:12> 'int' 1
|-TypedefDecl 0x21fa708cee8 <line:58:1, col:57> col:13 referenced char_io 'int (void *, const void *, int)'
| `-FunctionProtoType 0x21fa708c070 'int (void *, const void *, int)' cdecl
|   |-BuiltinType 0x21fa5586c80 'int'
|   |-PointerType 0x21fa55873a0 'void *'
|   | `-BuiltinType 0x21fa5586be0 'void'
|   |-PointerType 0x21fa6feb1c0 'const void *'
|   | `-QualType 0x21fa5586be1 'const void' const
|   |   `-BuiltinType 0x21fa5586be0 'void'
|   `-BuiltinType 0x21fa5586c80 'int'
|-FunctionDecl 0x21fa708d3a0 <line:66:1, line:127:1> line:66:12 used do_esc_char 'int (unsigned long, unsigned short, char *, char_io *, void *)' static
| |-ParmVarDecl 0x21fa708cf58 <col:24, col:38> col:38 used c 'unsigned long'
| |-ParmVarDecl 0x21fa708cfd8 <col:41, col:56> col:56 used flags 'unsigned short'
| |-ParmVarDecl 0x21fa708d058 <col:63, col:69> col:69 used do_quotes 'char *'
| |-ParmVarDecl 0x21fa708d148 <line:67:24, col:33> col:33 used io_ch 'char_io *'
| |-ParmVarDecl 0x21fa708d1c8 <col:40, col:46> col:46 used arg 'void *'
| `-CompoundStmt 0x21fa70900d8 <line:68:1, line:127:1>
|   |-DeclStmt 0x21fa708e530 <line:69:5, col:26>
|   | `-VarDecl 0x21fa708e4c8 <col:5, col:20> col:20 used chflgs 'unsigned short'
|   |-DeclStmt 0x21fa708e5c8 <line:70:5, col:24>
|   | `-VarDecl 0x21fa708e560 <col:5, col:19> col:19 used chtmp 'unsigned char'
|   |-DeclStmt 0x21fa708e790 <line:71:5, col:36>
|   | `-VarDecl 0x21fa708e728 <col:5, col:10> col:10 invalid tmphex 'char'
|   |-IfStmt 0x21fa708e878 <line:73:5, line:74:17>
|   | |-BinaryOperator 0x21fa708e808 <line:73:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x21fa708e7f0 <col:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21fa708e7a8 <col:9> 'unsigned long' lvalue ParmVar 0x21fa708cf58 'c' 'unsigned long'
|   | | `-IntegerLiteral 0x21fa708e7c8 <col:13> 'unsigned long' 4294967295
|   | `-ReturnStmt 0x21fa708e868 <line:74:9, col:17>
|   |   `-UnaryOperator 0x21fa708e850 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21fa708e828 <col:17> 'int' 1
|   |-IfStmt 0x21fa708ebf8 <line:75:5, line:80:5>
|   | |-BinaryOperator 0x21fa708e908 <line:75:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x21fa708e8d8 <col:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21fa708e890 <col:9> 'unsigned long' lvalue ParmVar 0x21fa708cf58 'c' 'unsigned long'
|   | | `-ImplicitCastExpr 0x21fa708e8f0 <col:13> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x21fa708e8b0 <col:13> 'int' 65535
|   | `-CompoundStmt 0x21fa708ebd8 <col:21, line:80:5>
|   |   |-IfStmt 0x21fa708eb88 <line:77:9, line:78:21>
|   |   | |-OpaqueValueExpr 0x21fa708eb70 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x21fa708eb60 <col:13, col:21>
|   |   |   `-UnaryOperator 0x21fa708eb48 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x21fa708eb20 <col:21> 'int' 1
|   |   `-ReturnStmt 0x21fa708ebc8 <line:79:9, col:16>
|   |     `-IntegerLiteral 0x21fa708eba0 <col:16> 'int' 10
|   |-IfStmt 0x21fa708ee48 <line:81:5, line:86:5>
|   | |-BinaryOperator 0x21fa708ec88 <line:81:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x21fa708ec58 <col:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21fa708ec10 <col:9> 'unsigned long' lvalue ParmVar 0x21fa708cf58 'c' 'unsigned long'
|   | | `-ImplicitCastExpr 0x21fa708ec70 <col:13> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x21fa708ec30 <col:13> 'int' 255
|   | `-CompoundStmt 0x21fa708ee28 <col:19, line:86:5>
|   |   |-IfStmt 0x21fa708edd8 <line:83:9, line:84:21>
|   |   | |-OpaqueValueExpr 0x21fa708edc0 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x21fa708edb0 <col:13, col:21>
|   |   |   `-UnaryOperator 0x21fa708ed98 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x21fa708ed70 <col:21> 'int' 1
|   |   `-ReturnStmt 0x21fa708ee18 <line:85:9, col:16>
|   |     `-IntegerLiteral 0x21fa708edf0 <col:16> 'int' 6
|   |-BinaryOperator 0x21fa708ef10 <line:87:5, col:28> 'unsigned char' '='
|   | |-DeclRefExpr 0x21fa708ee60 <col:5> 'unsigned char' lvalue Var 0x21fa708e560 'chtmp' 'unsigned char'
|   | `-CStyleCastExpr 0x21fa708eee8 <col:13, col:28> 'unsigned char' <IntegralCast>
|   |   `-ImplicitCastExpr 0x21fa708eed0 <col:28> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x21fa708ee98 <col:28> 'unsigned long' lvalue ParmVar 0x21fa708cf58 'c' 'unsigned long'
|   |-IfStmt 0x21fa708f1b0 <line:88:5, line:91:37> has_else
|   | |-BinaryOperator 0x21fa708efa8 <line:88:9, col:17> 'int' '>'
|   | | |-ImplicitCastExpr 0x21fa708ef90 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x21fa708ef78 <col:9> 'unsigned char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x21fa708ef30 <col:9> 'unsigned char' lvalue Var 0x21fa708e560 'chtmp' 'unsigned char'
|   | | `-IntegerLiteral 0x21fa708ef50 <col:17> 'int' 127
|   | |-NullStmt 0x21fa708f1a8 <line:89:9>
|   | `-BinaryOperator 0x21fa708f188 <line:91:9, col:37> 'unsigned short' '='
|   |   |-DeclRefExpr 0x21fa708f020 <col:9> 'unsigned short' lvalue Var 0x21fa708e4c8 'chflgs' 'unsigned short'
|   |   `-ImplicitCastExpr 0x21fa708f170 <col:18, col:37> 'unsigned short' <IntegralCast>
|   |     `-BinaryOperator 0x21fa708f150 <col:18, col:37> 'int' '&'
|   |       |-ImplicitCastExpr 0x21fa708f108 <col:18, col:33> 'int' <IntegralCast>
|   |       | `-ImplicitCastExpr 0x21fa708f0f0 <col:18, col:33> 'unsigned short' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x21fa708f0b0 <col:18, col:33> 'const unsigned short' lvalue
|   |       |     |-ImplicitCastExpr 0x21fa708f080 <col:18> 'const unsigned short *' <ArrayToPointerDecay>
|   |       |     | `-DeclRefExpr 0x21fa708f040 <col:18> 'const unsigned short [128]' lvalue Var 0x21fa7087f30 'char_type' 'const unsigned short [128]'
|   |       |     `-ImplicitCastExpr 0x21fa708f098 <col:28> 'unsigned char' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x21fa708f060 <col:28> 'unsigned char' lvalue Var 0x21fa708e560 'chtmp' 'unsigned char'
|   |       `-ImplicitCastExpr 0x21fa708f138 <col:37> 'int' <IntegralCast>
|   |         `-ImplicitCastExpr 0x21fa708f120 <col:37> 'unsigned short' <LValueToRValue>
|   |           `-DeclRefExpr 0x21fa708f0d0 <col:37> 'unsigned short' lvalue ParmVar 0x21fa708cfd8 'flags' 'unsigned short'
|   |-IfStmt 0x21fa708f988 <line:92:5, line:106:5>
|   | |-OpaqueValueExpr 0x21fa708f970 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21fa708f940 <line:92:35, line:106:5>
|   |   |-IfStmt 0x21fa708f578 <line:94:9, line:100:9>
|   |   | |-OpaqueValueExpr 0x21fa708f560 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x21fa708f538 <line:94:46, line:100:9>
|   |   |   |-IfStmt 0x21fa708f300 <line:95:13, line:96:30>
|   |   |   | |-ImplicitCastExpr 0x21fa708f238 <line:95:17> 'char *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x21fa708f218 <col:17> 'char *' lvalue ParmVar 0x21fa708d058 'do_quotes' 'char *'
|   |   |   | `-BinaryOperator 0x21fa708f2e0 <line:96:17, col:30> 'char' '='
|   |   |   |   |-UnaryOperator 0x21fa708f288 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   |   |   |   | `-ImplicitCastExpr 0x21fa708f270 <col:18> 'char *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x21fa708f250 <col:18> 'char *' lvalue ParmVar 0x21fa708d058 'do_quotes' 'char *'
|   |   |   |   `-ImplicitCastExpr 0x21fa708f2c8 <col:30> 'char' <IntegralCast>
|   |   |   |     `-IntegerLiteral 0x21fa708f2a0 <col:30> 'int' 1
|   |   |   |-IfStmt 0x21fa708f4e8 <line:97:13, line:98:25>
|   |   |   | |-UnaryOperator 0x21fa708f480 <line:97:17, col:38> 'int' prefix '!' cannot overflow
|   |   |   | | `-CallExpr 0x21fa708f400 <col:18, col:38> 'int'
|   |   |   | |   |-ImplicitCastExpr 0x21fa708f3e8 <col:18> 'char_io *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x21fa708f318 <col:18> 'char_io *' lvalue ParmVar 0x21fa708d148 'io_ch' 'char_io *'
|   |   |   | |   |-ImplicitCastExpr 0x21fa708f438 <col:24> 'void *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x21fa708f338 <col:24> 'void *' lvalue ParmVar 0x21fa708d1c8 'arg' 'void *'
|   |   |   | |   |-ImplicitCastExpr 0x21fa708f450 <col:29, col:30> 'const void *' <BitCast>
|   |   |   | |   | `-UnaryOperator 0x21fa708f3a8 <col:29, col:30> 'unsigned char *' prefix '&' cannot overflow
|   |   |   | |   |   `-DeclRefExpr 0x21fa708f358 <col:30> 'unsigned char' lvalue Var 0x21fa708e560 'chtmp' 'unsigned char'
|   |   |   | |   `-IntegerLiteral 0x21fa708f3c0 <col:37> 'int' 1
|   |   |   | `-ReturnStmt 0x21fa708f4d8 <line:98:17, col:25>
|   |   |   |   `-UnaryOperator 0x21fa708f4c0 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x21fa708f498 <col:25> 'int' 1
|   |   |   `-ReturnStmt 0x21fa708f528 <line:99:13, col:20>
|   |   |     `-IntegerLiteral 0x21fa708f500 <col:20> 'int' 1
|   |   |-IfStmt 0x21fa708f750 <line:101:9, line:102:21>
|   |   | |-UnaryOperator 0x21fa708f6e8 <line:101:13, col:32> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x21fa708f668 <col:14, col:32> 'int'
|   |   | |   |-ImplicitCastExpr 0x21fa708f650 <col:14> 'char_io *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x21fa708f590 <col:14> 'char_io *' lvalue ParmVar 0x21fa708d148 'io_ch' 'char_io *'
|   |   | |   |-ImplicitCastExpr 0x21fa708f6a0 <col:20> 'void *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x21fa708f5b0 <col:20> 'void *' lvalue ParmVar 0x21fa708d1c8 'arg' 'void *'
|   |   | |   |-ImplicitCastExpr 0x21fa708f6d0 <col:25> 'const void *' <BitCast>
|   |   | |   | `-ImplicitCastExpr 0x21fa708f6b8 <col:25> 'char *' <ArrayToPointerDecay>
|   |   | |   |   `-StringLiteral 0x21fa708f608 <col:25> 'char [2]' lvalue "\\"
|   |   | |   `-IntegerLiteral 0x21fa708f628 <col:31> 'int' 1
|   |   | `-ReturnStmt 0x21fa708f740 <line:102:13, col:21>
|   |   |   `-UnaryOperator 0x21fa708f728 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x21fa708f700 <col:21> 'int' 1
|   |   |-IfStmt 0x21fa708f8f0 <line:103:9, line:104:21>
|   |   | |-UnaryOperator 0x21fa708f888 <line:103:13, col:34> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x21fa708f820 <col:14, col:34> 'int'
|   |   | |   |-ImplicitCastExpr 0x21fa708f808 <col:14> 'char_io *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x21fa708f768 <col:14> 'char_io *' lvalue ParmVar 0x21fa708d148 'io_ch' 'char_io *'
|   |   | |   |-ImplicitCastExpr 0x21fa708f858 <col:20> 'void *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x21fa708f788 <col:20> 'void *' lvalue ParmVar 0x21fa708d1c8 'arg' 'void *'
|   |   | |   |-ImplicitCastExpr 0x21fa708f870 <col:25, col:26> 'const void *' <BitCast>
|   |   | |   | `-UnaryOperator 0x21fa708f7c8 <col:25, col:26> 'unsigned char *' prefix '&' cannot overflow
|   |   | |   |   `-DeclRefExpr 0x21fa708f7a8 <col:26> 'unsigned char' lvalue Var 0x21fa708e560 'chtmp' 'unsigned char'
|   |   | |   `-IntegerLiteral 0x21fa708f7e0 <col:33> 'int' 1
|   |   | `-ReturnStmt 0x21fa708f8e0 <line:104:13, col:21>
|   |   |   `-UnaryOperator 0x21fa708f8c8 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x21fa708f8a0 <col:21> 'int' 1
|   |   `-ReturnStmt 0x21fa708f930 <line:105:9, col:16>
|   |     `-IntegerLiteral 0x21fa708f908 <col:16> 'int' 2
|   |-IfStmt 0x21fa708fbe0 <line:107:5, line:114:5>
|   | |-OpaqueValueExpr 0x21fa708fbc8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21fa708fba8 <line:109:45, line:114:5>
|   |   |-IfStmt 0x21fa708fb58 <line:111:9, line:112:21>
|   |   | |-OpaqueValueExpr 0x21fa708fb40 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x21fa708fb30 <col:13, col:21>
|   |   |   `-UnaryOperator 0x21fa708fb18 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x21fa708faf0 <col:21> 'int' 1
|   |   `-ReturnStmt 0x21fa708fb98 <line:113:9, col:16>
|   |     `-IntegerLiteral 0x21fa708fb70 <col:16> 'int' 3
|   |-IfStmt 0x21fa708fee8 <line:119:5, line:123:5>
|   | |-OpaqueValueExpr 0x21fa708fed0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21fa708feb0 <line:119:47, line:123:5>
|   |   |-IfStmt 0x21fa708fe60 <line:120:9, line:121:21>
|   |   | |-UnaryOperator 0x21fa708fdf8 <line:120:13, col:34> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x21fa708fd78 <col:14, col:34> 'int'
|   |   | |   |-ImplicitCastExpr 0x21fa708fd60 <col:14> 'char_io *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x21fa708fca0 <col:14> 'char_io *' lvalue ParmVar 0x21fa708d148 'io_ch' 'char_io *'
|   |   | |   |-ImplicitCastExpr 0x21fa708fdb0 <col:20> 'void *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x21fa708fcc0 <col:20> 'void *' lvalue ParmVar 0x21fa708d1c8 'arg' 'void *'
|   |   | |   |-ImplicitCastExpr 0x21fa708fde0 <col:25> 'const void *' <BitCast>
|   |   | |   | `-ImplicitCastExpr 0x21fa708fdc8 <col:25> 'char *' <ArrayToPointerDecay>
|   |   | |   |   `-StringLiteral 0x21fa708fd18 <col:25> 'char [3]' lvalue "\\\\"
|   |   | |   `-IntegerLiteral 0x21fa708fd38 <col:33> 'int' 2
|   |   | `-ReturnStmt 0x21fa708fe50 <line:121:13, col:21>
|   |   |   `-UnaryOperator 0x21fa708fe38 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x21fa708fe10 <col:21> 'int' 1
|   |   `-ReturnStmt 0x21fa708fea0 <line:122:9, col:16>
|   |     `-IntegerLiteral 0x21fa708fe78 <col:16> 'int' 2
|   |-IfStmt 0x21fa7090088 <line:124:5, line:125:17>
|   | |-UnaryOperator 0x21fa7090020 <line:124:9, col:30> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x21fa708ffb8 <col:10, col:30> 'int'
|   | |   |-ImplicitCastExpr 0x21fa708ffa0 <col:10> 'char_io *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x21fa708ff00 <col:10> 'char_io *' lvalue ParmVar 0x21fa708d148 'io_ch' 'char_io *'
|   | |   |-ImplicitCastExpr 0x21fa708fff0 <col:16> 'void *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x21fa708ff20 <col:16> 'void *' lvalue ParmVar 0x21fa708d1c8 'arg' 'void *'
|   | |   |-ImplicitCastExpr 0x21fa7090008 <col:21, col:22> 'const void *' <BitCast>
|   | |   | `-UnaryOperator 0x21fa708ff60 <col:21, col:22> 'unsigned char *' prefix '&' cannot overflow
|   | |   |   `-DeclRefExpr 0x21fa708ff40 <col:22> 'unsigned char' lvalue Var 0x21fa708e560 'chtmp' 'unsigned char'
|   | |   `-IntegerLiteral 0x21fa708ff78 <col:29> 'int' 1
|   | `-ReturnStmt 0x21fa7090078 <line:125:9, col:17>
|   |   `-UnaryOperator 0x21fa7090060 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21fa7090038 <col:17> 'int' 1
|   `-ReturnStmt 0x21fa70900c8 <line:126:5, col:12>
|     `-IntegerLiteral 0x21fa70900a0 <col:12> 'int' 1
|-FunctionDecl 0x21fa7088640 <line:138:1, line:230:1> line:138:12 used do_buf 'int (unsigned char *, int, int, unsigned short, char *, char_io *, void *)' static
| |-ParmVarDecl 0x21fa7090168 <col:19, col:34> col:34 used buf 'unsigned char *'
| |-ParmVarDecl 0x21fa70901e8 <col:39, col:43> col:43 used buflen 'int'
| |-ParmVarDecl 0x21fa7090268 <line:139:19, col:23> col:23 used type 'int'
| |-ParmVarDecl 0x21fa70902e8 <col:29, col:44> col:44 used flags 'unsigned short'
| |-ParmVarDecl 0x21fa7090368 <col:51, col:57> col:57 used quotes 'char *'
| |-ParmVarDecl 0x21fa70903e0 <col:65, col:74> col:74 used io_ch 'char_io *'
| |-ParmVarDecl 0x21fa7088410 <line:140:19, col:25> col:25 used arg 'void *'
| `-CompoundStmt 0x21fa7093708 <line:141:1, line:230:1>
|   |-DeclStmt 0x21fa7088958 <line:142:5, col:34>
|   | |-VarDecl 0x21fa7088748 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x21fa70887c8 <col:5, col:12> col:12 used outlen 'int'
|   | |-VarDecl 0x21fa7088848 <col:5, col:20> col:20 used len 'int'
|   | `-VarDecl 0x21fa70888c8 <col:5, col:25> col:25 used charwidth 'int'
|   |-DeclStmt 0x21fa70889f0 <line:143:5, col:27>
|   | `-VarDecl 0x21fa7088988 <col:5, col:20> col:20 used orflags 'unsigned short'
|   |-DeclStmt 0x21fa7088b20 <line:144:5, col:25>
|   | |-VarDecl 0x21fa7088a20 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x21fa7088aa0 <col:5, col:24> col:24 used q 'unsigned char *'
|   |-DeclStmt 0x21fa7088bb8 <line:145:5, col:20>
|   | `-VarDecl 0x21fa7088b50 <col:5, col:19> col:19 used c 'unsigned long'
|   |-BinaryOperator 0x21fa7088c40 <line:147:5, col:9> 'unsigned char *' '='
|   | |-DeclRefExpr 0x21fa7088bd0 <col:5> 'unsigned char *' lvalue Var 0x21fa7088a20 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x21fa7088c28 <col:9> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x21fa7088c08 <col:9> 'unsigned char *' lvalue ParmVar 0x21fa7090168 'buf' 'unsigned char *'
|   |-BinaryOperator 0x21fa7088d28 <line:148:5, col:15> 'unsigned char *' '='
|   | |-DeclRefExpr 0x21fa7088c60 <col:5> 'unsigned char *' lvalue Var 0x21fa7088aa0 'q' 'unsigned char *'
|   | `-BinaryOperator 0x21fa7088d08 <col:9, col:15> 'unsigned char *' '+'
|   |   |-ImplicitCastExpr 0x21fa7088cd8 <col:9> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa7088c98 <col:9> 'unsigned char *' lvalue ParmVar 0x21fa7090168 'buf' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x21fa7088cf0 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x21fa7088cb8 <col:15> 'int' lvalue ParmVar 0x21fa70901e8 'buflen' 'int'
|   |-BinaryOperator 0x21fa7088da8 <line:149:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x21fa7088d48 <col:5> 'int' lvalue Var 0x21fa70887c8 'outlen' 'int'
|   | `-IntegerLiteral 0x21fa7088d80 <col:14> 'int' 0
|   |-BinaryOperator 0x21fa7088e80 <line:150:5, line:129:33> 'int' '='
|   | |-DeclRefExpr 0x21fa7088dc8 <line:150:5> 'int' lvalue Var 0x21fa70888c8 'charwidth' 'int'
|   | `-BinaryOperator 0x21fa7088e60 <col:17, line:129:33> 'int' '&'
|   |   |-ImplicitCastExpr 0x21fa7088e48 <line:150:17> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa7088e00 <col:17> 'int' lvalue ParmVar 0x21fa7090268 'type' 'int'
|   |   `-IntegerLiteral 0x21fa7088e20 <line:129:33> 'int' 7
|   |-SwitchStmt 0x21fa7088ed8 <line:152:5, line:167:5>
|   | |-ImplicitCastExpr 0x21fa7088ec0 <line:152:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x21fa7088ea0 <col:13> 'int' lvalue Var 0x21fa70888c8 'charwidth' 'int'
|   | `-CompoundStmt 0x21fa7089330 <col:24, line:167:5>
|   |   |-CaseStmt 0x21fa7088f38 <line:153:5, line:157:9>
|   |   | |-ConstantExpr 0x21fa7088f20 <line:153:10> 'int'
|   |   | | `-IntegerLiteral 0x21fa7088ef8 <col:10> 'int' 4
|   |   | `-IfStmt 0x21fa7089158 <line:154:9, line:157:9>
|   |   |   |-BinaryOperator 0x21fa7088fc0 <line:154:13, col:22> 'int' '&'
|   |   |   | |-ImplicitCastExpr 0x21fa7088fa8 <col:13> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x21fa7088f60 <col:13> 'int' lvalue ParmVar 0x21fa70901e8 'buflen' 'int'
|   |   |   | `-IntegerLiteral 0x21fa7088f80 <col:22> 'int' 3
|   |   |   `-CompoundStmt 0x21fa7089140 <col:25, line:157:9>
|   |   |     `-ReturnStmt 0x21fa7089130 <line:156:13, col:21>
|   |   |       `-UnaryOperator 0x21fa7089118 <col:20, col:21> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x21fa70890f0 <col:21> 'int' 1
|   |   |-BreakStmt 0x21fa7089170 <line:158:9>
|   |   |-CaseStmt 0x21fa70891b8 <line:159:5, line:163:9>
|   |   | |-ConstantExpr 0x21fa70891a0 <line:159:10> 'int'
|   |   | | `-IntegerLiteral 0x21fa7089178 <col:10> 'int' 2
|   |   | `-IfStmt 0x21fa70892e8 <line:160:9, line:163:9>
|   |   |   |-BinaryOperator 0x21fa7089240 <line:160:13, col:22> 'int' '&'
|   |   |   | |-ImplicitCastExpr 0x21fa7089228 <col:13> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x21fa70891e0 <col:13> 'int' lvalue ParmVar 0x21fa70901e8 'buflen' 'int'
|   |   |   | `-IntegerLiteral 0x21fa7089200 <col:22> 'int' 1
|   |   |   `-CompoundStmt 0x21fa70892d0 <col:25, line:163:9>
|   |   |     `-ReturnStmt 0x21fa70892c0 <line:162:13, col:21>
|   |   |       `-UnaryOperator 0x21fa70892a8 <col:20, col:21> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x21fa7089280 <col:21> 'int' 1
|   |   |-BreakStmt 0x21fa7089300 <line:164:9>
|   |   `-DefaultStmt 0x21fa7089310 <line:165:5, line:166:9>
|   |     `-BreakStmt 0x21fa7089308 <col:9>
|   |-WhileStmt 0x21fa70936a8 <line:169:5, line:228:5>
|   | |-BinaryOperator 0x21fa70893d8 <line:169:12, col:17> 'int' '!='
|   | | |-ImplicitCastExpr 0x21fa70893a8 <col:12> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21fa7089368 <col:12> 'unsigned char *' lvalue Var 0x21fa7088a20 'p' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x21fa70893c0 <col:17> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21fa7089388 <col:17> 'unsigned char *' lvalue Var 0x21fa7088aa0 'q' 'unsigned char *'
|   | `-CompoundStmt 0x21fa7093680 <col:20, line:228:5>
|   |   |-IfStmt 0x21fa7097688 <line:170:9, line:173:23> has_else
|   |   | |-OpaqueValueExpr 0x21fa7097670 <<invalid sloc>> '_Bool'
|   |   | |-NullStmt 0x21fa7097668 <line:171:13>
|   |   | `-BinaryOperator 0x21fa7097648 <line:173:13, col:23> 'unsigned short' '='
|   |   |   |-DeclRefExpr 0x21fa70975e8 <col:13> 'unsigned short' lvalue Var 0x21fa7088988 'orflags' 'unsigned short'
|   |   |   `-ImplicitCastExpr 0x21fa7097630 <col:23> 'unsigned short' <IntegralCast>
|   |   |     `-IntegerLiteral 0x21fa7097608 <col:23> 'int' 0
|   |   |-SwitchStmt 0x21fa70976e8 <line:175:9, line:201:9>
|   |   | |-ImplicitCastExpr 0x21fa70976d0 <line:175:17> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x21fa70976b0 <col:17> 'int' lvalue Var 0x21fa70888c8 'charwidth' 'int'
|   |   | `-CompoundStmt 0x21fa7096598 <col:28, line:201:9>
|   |   |   |-CaseStmt 0x21fa7097748 <line:176:9, line:177:42>
|   |   |   | |-ConstantExpr 0x21fa7097730 <line:176:14> 'int'
|   |   |   | | `-IntegerLiteral 0x21fa7097708 <col:14> 'int' 4
|   |   |   | `-BinaryOperator 0x21fa70978b8 <line:177:13, col:42> 'unsigned long' '='
|   |   |   |   |-DeclRefExpr 0x21fa7097770 <col:13> 'unsigned long' lvalue Var 0x21fa7088b50 'c' 'unsigned long'
|   |   |   |   `-BinaryOperator 0x21fa7097898 <col:17, col:42> 'unsigned long' '<<'
|   |   |   |     |-ParenExpr 0x21fa7097850 <col:17, col:37> 'unsigned long'
|   |   |   |     | `-CStyleCastExpr 0x21fa7097828 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |   |   |     |   `-ImplicitCastExpr 0x21fa7097810 <col:33, col:35> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |   |     |     `-UnaryOperator 0x21fa70977e0 <col:33, col:35> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |     |       `-UnaryOperator 0x21fa70977c8 <col:34, col:35> 'unsigned char *' postfix '++'
|   |   |   |     |         `-DeclRefExpr 0x21fa70977a8 <col:34> 'unsigned char *' lvalue Var 0x21fa7088a20 'p' 'unsigned char *'
|   |   |   |     `-IntegerLiteral 0x21fa7097870 <col:42> 'int' 24
|   |   |   |-CompoundAssignOperator 0x21fa7097a08 <line:178:13, col:43> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |   | |-DeclRefExpr 0x21fa70978d8 <col:13> 'unsigned long' lvalue Var 0x21fa7088b50 'c' 'unsigned long'
|   |   |   | `-BinaryOperator 0x21fa70979e8 <col:18, col:43> 'unsigned long' '<<'
|   |   |   |   |-ParenExpr 0x21fa70979a0 <col:18, col:38> 'unsigned long'
|   |   |   |   | `-CStyleCastExpr 0x21fa7097978 <col:19, col:36> 'unsigned long' <IntegralCast>
|   |   |   |   |   `-ImplicitCastExpr 0x21fa7097960 <col:34, col:36> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |   |   |     `-UnaryOperator 0x21fa7097930 <col:34, col:36> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |   |       `-UnaryOperator 0x21fa7097918 <col:35, col:36> 'unsigned char *' postfix '++'
|   |   |   |   |         `-DeclRefExpr 0x21fa70978f8 <col:35> 'unsigned char *' lvalue Var 0x21fa7088a20 'p' 'unsigned char *'
|   |   |   |   `-IntegerLiteral 0x21fa70979c0 <col:43> 'int' 16
|   |   |   |-CompoundAssignOperator 0x21fa7097b68 <line:179:13, col:43> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |   | |-DeclRefExpr 0x21fa7097a38 <col:13> 'unsigned long' lvalue Var 0x21fa7088b50 'c' 'unsigned long'
|   |   |   | `-BinaryOperator 0x21fa7097b48 <col:18, col:43> 'unsigned long' '<<'
|   |   |   |   |-ParenExpr 0x21fa7097b00 <col:18, col:38> 'unsigned long'
|   |   |   |   | `-CStyleCastExpr 0x21fa7097ad8 <col:19, col:36> 'unsigned long' <IntegralCast>
|   |   |   |   |   `-ImplicitCastExpr 0x21fa7097ac0 <col:34, col:36> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |   |   |     `-UnaryOperator 0x21fa7097a90 <col:34, col:36> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |   |       `-UnaryOperator 0x21fa7097a78 <col:35, col:36> 'unsigned char *' postfix '++'
|   |   |   |   |         `-DeclRefExpr 0x21fa7097a58 <col:35> 'unsigned char *' lvalue Var 0x21fa7088a20 'p' 'unsigned char *'
|   |   |   |   `-IntegerLiteral 0x21fa7097b20 <col:43> 'int' 8
|   |   |   |-CompoundAssignOperator 0x21fa7097c68 <line:180:13, col:20> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |   | |-DeclRefExpr 0x21fa7097b98 <col:13> 'unsigned long' lvalue Var 0x21fa7088b50 'c' 'unsigned long'
|   |   |   | `-ImplicitCastExpr 0x21fa7097c50 <col:18, col:20> 'unsigned long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x21fa7097c38 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   |   |     `-UnaryOperator 0x21fa7097c20 <col:18, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |       `-UnaryOperator 0x21fa7097c08 <col:19, col:20> 'unsigned char *' postfix '++'
|   |   |   |         `-DeclRefExpr 0x21fa7097be8 <col:19> 'unsigned char *' lvalue Var 0x21fa7088a20 'p' 'unsigned char *'
|   |   |   |-BreakStmt 0x21fa7097c98 <line:181:13>
|   |   |   |-CaseStmt 0x21fa7097ce0 <line:183:9, line:184:42>
|   |   |   | |-ConstantExpr 0x21fa7097cc8 <line:183:14> 'int'
|   |   |   | | `-IntegerLiteral 0x21fa7097ca0 <col:14> 'int' 2
|   |   |   | `-BinaryOperator 0x21fa7097e38 <line:184:13, col:42> 'unsigned long' '='
|   |   |   |   |-DeclRefExpr 0x21fa7097d08 <col:13> 'unsigned long' lvalue Var 0x21fa7088b50 'c' 'unsigned long'
|   |   |   |   `-BinaryOperator 0x21fa7097e18 <col:17, col:42> 'unsigned long' '<<'
|   |   |   |     |-ParenExpr 0x21fa7097dd0 <col:17, col:37> 'unsigned long'
|   |   |   |     | `-CStyleCastExpr 0x21fa7097da8 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |   |   |     |   `-ImplicitCastExpr 0x21fa7097d90 <col:33, col:35> 'unsigned char' <LValueToRValue> part_of_explicit_cast
|   |   |   |     |     `-UnaryOperator 0x21fa7097d60 <col:33, col:35> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |     |       `-UnaryOperator 0x21fa7097d48 <col:34, col:35> 'unsigned char *' postfix '++'
|   |   |   |     |         `-DeclRefExpr 0x21fa7097d28 <col:34> 'unsigned char *' lvalue Var 0x21fa7088a20 'p' 'unsigned char *'
|   |   |   |     `-IntegerLiteral 0x21fa7097df0 <col:42> 'int' 8
|   |   |   |-CompoundAssignOperator 0x21fa7097ef8 <line:185:13, col:20> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   |   | |-DeclRefExpr 0x21fa7097e58 <col:13> 'unsigned long' lvalue Var 0x21fa7088b50 'c' 'unsigned long'
|   |   |   | `-ImplicitCastExpr 0x21fa7097ee0 <col:18, col:20> 'unsigned long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x21fa7097ec8 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   |   |     `-UnaryOperator 0x21fa7097eb0 <col:18, col:20> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |       `-UnaryOperator 0x21fa7097e98 <col:19, col:20> 'unsigned char *' postfix '++'
|   |   |   |         `-DeclRefExpr 0x21fa7097e78 <col:19> 'unsigned char *' lvalue Var 0x21fa7088a20 'p' 'unsigned char *'
|   |   |   |-BreakStmt 0x21fa7097f28 <line:186:13>
|   |   |   |-CaseStmt 0x21fa7097f70 <line:188:9, line:189:19>
|   |   |   | |-ConstantExpr 0x21fa7097f58 <line:188:14> 'int'
|   |   |   | | `-IntegerLiteral 0x21fa7097f30 <col:14> 'int' 1
|   |   |   | `-BinaryOperator 0x21fa7098038 <line:189:13, col:19> 'unsigned long' '='
|   |   |   |   |-DeclRefExpr 0x21fa7097f98 <col:13> 'unsigned long' lvalue Var 0x21fa7088b50 'c' 'unsigned long'
|   |   |   |   `-ImplicitCastExpr 0x21fa7098020 <col:17, col:19> 'unsigned long' <IntegralCast>
|   |   |   |     `-ImplicitCastExpr 0x21fa7098008 <col:17, col:19> 'unsigned char' <LValueToRValue>
|   |   |   |       `-UnaryOperator 0x21fa7097ff0 <col:17, col:19> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   |         `-UnaryOperator 0x21fa7097fd8 <col:18, col:19> 'unsigned char *' postfix '++'
|   |   |   |           `-DeclRefExpr 0x21fa7097fb8 <col:18> 'unsigned char *' lvalue Var 0x21fa7088a20 'p' 'unsigned char *'
|   |   |   |-BreakStmt 0x21fa7098058 <line:190:13>
|   |   |   |-CaseStmt 0x21fa70980a0 <line:192:9, line:193:40>
|   |   |   | |-ConstantExpr 0x21fa7098088 <line:192:14> 'int'
|   |   |   | | `-IntegerLiteral 0x21fa7098060 <col:14> 'int' 0
|   |   |   | `-BinaryOperator 0x21fa7098308 <line:193:13, col:40> 'int' '='
|   |   |   |   |-DeclRefExpr 0x21fa70980c8 <col:13> 'int' lvalue Var 0x21fa7088748 'i' 'int'
|   |   |   |   `-CallExpr 0x21fa70982a0 <col:17, col:40> 'int'
|   |   |   |     |-ImplicitCastExpr 0x21fa7098288 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x21fa70981f0 <col:17> 'int ()' Function 0x21fa7098128 'UTF8_getc' 'int ()'
|   |   |   |     |-ImplicitCastExpr 0x21fa70982d8 <col:27> 'unsigned char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x21fa7098210 <col:27> 'unsigned char *' lvalue Var 0x21fa7088a20 'p' 'unsigned char *'
|   |   |   |     |-ImplicitCastExpr 0x21fa70982f0 <col:30> 'int' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x21fa7098230 <col:30> 'int' lvalue ParmVar 0x21fa70901e8 'buflen' 'int'
|   |   |   |     `-UnaryOperator 0x21fa7098270 <col:38, col:39> 'unsigned long *' prefix '&' cannot overflow
|   |   |   |       `-DeclRefExpr 0x21fa7098250 <col:39> 'unsigned long' lvalue Var 0x21fa7088b50 'c' 'unsigned long'
|   |   |   |-IfStmt 0x21fa70983f8 <line:194:13, line:195:25>
|   |   |   | |-BinaryOperator 0x21fa7098388 <line:194:17, col:21> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x21fa7098370 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x21fa7098328 <col:17> 'int' lvalue Var 0x21fa7088748 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x21fa7098348 <col:21> 'int' 0
|   |   |   | `-ReturnStmt 0x21fa70983e8 <line:195:17, col:25>
|   |   |   |   `-UnaryOperator 0x21fa70983d0 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x21fa70983a8 <col:25> 'int' 1
|   |   |   |-CompoundAssignOperator 0x21fa7098468 <line:196:13, col:23> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x21fa7098410 <col:13> 'int' lvalue ParmVar 0x21fa70901e8 'buflen' 'int'
|   |   |   | `-ImplicitCastExpr 0x21fa7098450 <col:23> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x21fa7098430 <col:23> 'int' lvalue Var 0x21fa7088748 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x21fa70964f0 <line:197:13, col:18> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |   |   | |-DeclRefExpr 0x21fa7098498 <col:13> 'unsigned char *' lvalue Var 0x21fa7088a20 'p' 'unsigned char *'
|   |   |   | `-ImplicitCastExpr 0x21fa70984d8 <col:18> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x21fa70984b8 <col:18> 'int' lvalue Var 0x21fa7088748 'i' 'int'
|   |   |   |-BreakStmt 0x21fa7096520 <line:198:13>
|   |   |   `-DefaultStmt 0x21fa7096578 <line:199:9, line:200:21>
|   |   |     `-ReturnStmt 0x21fa7096568 <col:13, col:21>
|   |   |       `-UnaryOperator 0x21fa7096550 <col:20, col:21> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x21fa7096528 <col:21> 'int' 1
|   |   `-IfStmt 0x21fa7093658 <line:204:9, line:227:9> has_else
|   |     |-BinaryOperator 0x21fa7096758 <line:204:13, line:130:33> 'int' '&'
|   |     | |-ImplicitCastExpr 0x21fa7096740 <line:204:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x21fa70966f8 <col:13> 'int' lvalue ParmVar 0x21fa7090268 'type' 'int'
|   |     | `-IntegerLiteral 0x21fa7096718 <line:130:33> 'int' 8
|   |     |-CompoundStmt 0x21fa7097248 <line:204:39, line:221:9>
|   |     | |-DeclStmt 0x21fa7096888 <line:205:13, col:36>
|   |     | | `-VarDecl 0x21fa7096820 <col:13, col:35> col:27 used utfbuf 'unsigned char [6]'
|   |     | |-DeclStmt 0x21fa7096920 <line:206:13, col:23>
|   |     | | `-VarDecl 0x21fa70968b8 <col:13, col:17> col:17 used utflen 'int'
|   |     | |-BinaryOperator 0x21fa7096bb8 <line:207:13, col:57> 'int' '='
|   |     | | |-DeclRefExpr 0x21fa7096938 <col:13> 'int' lvalue Var 0x21fa70968b8 'utflen' 'int'
|   |     | | `-CallExpr 0x21fa7096b50 <col:22, col:57> 'int'
|   |     | |   |-ImplicitCastExpr 0x21fa7096b38 <col:22> 'int (*)()' <FunctionToPointerDecay>
|   |     | |   | `-DeclRefExpr 0x21fa7096a60 <col:22> 'int ()' Function 0x21fa7096998 'UTF8_putc' 'int ()'
|   |     | |   |-ImplicitCastExpr 0x21fa7096b88 <col:32> 'unsigned char *' <ArrayToPointerDecay>
|   |     | |   | `-DeclRefExpr 0x21fa7096a80 <col:32> 'unsigned char [6]' lvalue Var 0x21fa7096820 'utfbuf' 'unsigned char [6]'
|   |     | |   |-UnaryExprOrTypeTraitExpr 0x21fa7096af8 <col:40, col:53> 'unsigned long long' sizeof
|   |     | |   | `-ParenExpr 0x21fa7096ad8 <col:46, col:53> 'unsigned char [6]' lvalue
|   |     | |   |   `-DeclRefExpr 0x21fa7096ab8 <col:47> 'unsigned char [6]' lvalue Var 0x21fa7096820 'utfbuf' 'unsigned char [6]' non_odr_use_unevaluated
|   |     | |   `-ImplicitCastExpr 0x21fa7096ba0 <col:56> 'unsigned long' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x21fa7096b18 <col:56> 'unsigned long' lvalue Var 0x21fa7088b50 'c' 'unsigned long'
|   |     | `-ForStmt 0x21fa7097210 <line:208:13, line:220:13>
|   |     |   |-BinaryOperator 0x21fa7096c20 <line:208:18, col:22> 'int' '='
|   |     |   | |-DeclRefExpr 0x21fa7096bd8 <col:18> 'int' lvalue Var 0x21fa7088748 'i' 'int'
|   |     |   | `-IntegerLiteral 0x21fa7096bf8 <col:22> 'int' 0
|   |     |   |-<<<NULL>>>
|   |     |   |-BinaryOperator 0x21fa7096cb0 <col:25, col:29> 'int' '<'
|   |     |   | |-ImplicitCastExpr 0x21fa7096c80 <col:25> 'int' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x21fa7096c40 <col:25> 'int' lvalue Var 0x21fa7088748 'i' 'int'
|   |     |   | `-ImplicitCastExpr 0x21fa7096c98 <col:29> 'int' <LValueToRValue>
|   |     |   |   `-DeclRefExpr 0x21fa7096c60 <col:29> 'int' lvalue Var 0x21fa70968b8 'utflen' 'int'
|   |     |   |-UnaryOperator 0x21fa7096cf0 <col:37, col:38> 'int' postfix '++'
|   |     |   | `-DeclRefExpr 0x21fa7096cd0 <col:37> 'int' lvalue Var 0x21fa7088748 'i' 'int'
|   |     |   `-CompoundStmt 0x21fa70971e8 <col:42, line:220:13>
|   |     |     |-BinaryOperator 0x21fa7097058 <line:215:17, line:216:45> 'int' '='
|   |     |     | |-DeclRefExpr 0x21fa7096d08 <line:215:17> 'int' lvalue Var 0x21fa7088848 'len' 'int'
|   |     |     | `-CallExpr 0x21fa7096f80 <col:23, line:216:45> 'int'
|   |     |     |   |-ImplicitCastExpr 0x21fa7096f68 <line:215:23> 'int (*)(unsigned long, unsigned short, char *, char_io *, void *)' <FunctionToPointerDecay>
|   |     |     |   | `-DeclRefExpr 0x21fa7096d40 <col:23> 'int (unsigned long, unsigned short, char *, char_io *, void *)' Function 0x21fa708d3a0 'do_esc_char' 'int (unsigned long, unsigned short, char *, char_io *, void *)'
|   |     |     |   |-ImplicitCastExpr 0x21fa7096fe0 <col:35, col:43> 'unsigned long' <IntegralCast>
|   |     |     |   | `-ImplicitCastExpr 0x21fa7096fc8 <col:35, col:43> 'unsigned char' <LValueToRValue>
|   |     |     |   |   `-ArraySubscriptExpr 0x21fa7096dd0 <col:35, col:43> 'unsigned char' lvalue
|   |     |     |   |     |-ImplicitCastExpr 0x21fa7096da0 <col:35> 'unsigned char *' <ArrayToPointerDecay>
|   |     |     |   |     | `-DeclRefExpr 0x21fa7096d60 <col:35> 'unsigned char [6]' lvalue Var 0x21fa7096820 'utfbuf' 'unsigned char [6]'
|   |     |     |   |     `-ImplicitCastExpr 0x21fa7096db8 <col:42> 'int' <LValueToRValue>
|   |     |     |   |       `-DeclRefExpr 0x21fa7096d80 <col:42> 'int' lvalue Var 0x21fa7088748 'i' 'int'
|   |     |     |   |-ImplicitCastExpr 0x21fa7096ff8 <col:46, col:54> 'unsigned short' <IntegralCast>
|   |     |     |   | `-BinaryOperator 0x21fa7096e90 <col:46, col:54> 'int' '|'
|   |     |     |   |   |-ImplicitCastExpr 0x21fa7096e48 <col:46> 'int' <IntegralCast>
|   |     |     |   |   | `-ImplicitCastExpr 0x21fa7096e30 <col:46> 'unsigned short' <LValueToRValue>
|   |     |     |   |   |   `-DeclRefExpr 0x21fa7096df0 <col:46> 'unsigned short' lvalue ParmVar 0x21fa70902e8 'flags' 'unsigned short'
|   |     |     |   |   `-ImplicitCastExpr 0x21fa7096e78 <col:54> 'int' <IntegralCast>
|   |     |     |   |     `-ImplicitCastExpr 0x21fa7096e60 <col:54> 'unsigned short' <LValueToRValue>
|   |     |     |   |       `-DeclRefExpr 0x21fa7096e10 <col:54> 'unsigned short' lvalue Var 0x21fa7088988 'orflags' 'unsigned short'
|   |     |     |   |-ImplicitCastExpr 0x21fa7097010 <col:63> 'char *' <LValueToRValue>
|   |     |     |   | `-DeclRefExpr 0x21fa7096eb0 <col:63> 'char *' lvalue ParmVar 0x21fa7090368 'quotes' 'char *'
|   |     |     |   |-ImplicitCastExpr 0x21fa7097028 <line:216:35> 'char_io *' <LValueToRValue>
|   |     |     |   | `-DeclRefExpr 0x21fa7096ed0 <col:35> 'char_io *' lvalue ParmVar 0x21fa70903e0 'io_ch' 'char_io *'
|   |     |     |   `-ImplicitCastExpr 0x21fa7097040 <col:42> 'void *' <LValueToRValue>
|   |     |     |     `-DeclRefExpr 0x21fa7096ef0 <col:42> 'void *' lvalue ParmVar 0x21fa7088410 'arg' 'void *'
|   |     |     |-IfStmt 0x21fa7097148 <line:217:17, line:218:29>
|   |     |     | |-BinaryOperator 0x21fa70970d8 <line:217:21, col:27> 'int' '<'
|   |     |     | | |-ImplicitCastExpr 0x21fa70970c0 <col:21> 'int' <LValueToRValue>
|   |     |     | | | `-DeclRefExpr 0x21fa7097078 <col:21> 'int' lvalue Var 0x21fa7088848 'len' 'int'
|   |     |     | | `-IntegerLiteral 0x21fa7097098 <col:27> 'int' 0
|   |     |     | `-ReturnStmt 0x21fa7097138 <line:218:21, col:29>
|   |     |     |   `-UnaryOperator 0x21fa7097120 <col:28, col:29> 'int' prefix '-'
|   |     |     |     `-IntegerLiteral 0x21fa70970f8 <col:29> 'int' 1
|   |     |     `-CompoundAssignOperator 0x21fa70971b8 <line:219:17, col:27> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |       |-DeclRefExpr 0x21fa7097160 <col:17> 'int' lvalue Var 0x21fa70887c8 'outlen' 'int'
|   |     |       `-ImplicitCastExpr 0x21fa70971a0 <col:27> 'int' <LValueToRValue>
|   |     |         `-DeclRefExpr 0x21fa7097180 <col:27> 'int' lvalue Var 0x21fa7088848 'len' 'int'
|   |     `-CompoundStmt 0x21fa7093630 <line:221:16, line:227:9>
|   |       |-BinaryOperator 0x21fa70974d0 <line:222:13, line:223:41> 'int' '='
|   |       | |-DeclRefExpr 0x21fa7097278 <line:222:13> 'int' lvalue Var 0x21fa7088848 'len' 'int'
|   |       | `-CallExpr 0x21fa7097410 <col:19, line:223:41> 'int'
|   |       |   |-ImplicitCastExpr 0x21fa70973f8 <line:222:19> 'int (*)(unsigned long, unsigned short, char *, char_io *, void *)' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x21fa7097298 <col:19> 'int (unsigned long, unsigned short, char *, char_io *, void *)' Function 0x21fa708d3a0 'do_esc_char' 'int (unsigned long, unsigned short, char *, char_io *, void *)'
|   |       |   |-ImplicitCastExpr 0x21fa7097458 <col:31> 'unsigned long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x21fa70972b8 <col:31> 'unsigned long' lvalue Var 0x21fa7088b50 'c' 'unsigned long'
|   |       |   |-ImplicitCastExpr 0x21fa7097470 <col:34, col:42> 'unsigned short' <IntegralCast>
|   |       |   | `-BinaryOperator 0x21fa7097378 <col:34, col:42> 'int' '|'
|   |       |   |   |-ImplicitCastExpr 0x21fa7097330 <col:34> 'int' <IntegralCast>
|   |       |   |   | `-ImplicitCastExpr 0x21fa7097318 <col:34> 'unsigned short' <LValueToRValue>
|   |       |   |   |   `-DeclRefExpr 0x21fa70972d8 <col:34> 'unsigned short' lvalue ParmVar 0x21fa70902e8 'flags' 'unsigned short'
|   |       |   |   `-ImplicitCastExpr 0x21fa7097360 <col:42> 'int' <IntegralCast>
|   |       |   |     `-ImplicitCastExpr 0x21fa7097348 <col:42> 'unsigned short' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x21fa70972f8 <col:42> 'unsigned short' lvalue Var 0x21fa7088988 'orflags' 'unsigned short'
|   |       |   |-ImplicitCastExpr 0x21fa7097488 <col:51> 'char *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x21fa7097398 <col:51> 'char *' lvalue ParmVar 0x21fa7090368 'quotes' 'char *'
|   |       |   |-ImplicitCastExpr 0x21fa70974a0 <line:223:31> 'char_io *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x21fa70973b8 <col:31> 'char_io *' lvalue ParmVar 0x21fa70903e0 'io_ch' 'char_io *'
|   |       |   `-ImplicitCastExpr 0x21fa70974b8 <col:38> 'void *' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x21fa70973d8 <col:38> 'void *' lvalue ParmVar 0x21fa7088410 'arg' 'void *'
|   |       |-IfStmt 0x21fa7093590 <line:224:13, line:225:25>
|   |       | |-BinaryOperator 0x21fa7093520 <line:224:17, col:23> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x21fa7093508 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x21fa70934c0 <col:17> 'int' lvalue Var 0x21fa7088848 'len' 'int'
|   |       | | `-IntegerLiteral 0x21fa70934e0 <col:23> 'int' 0
|   |       | `-ReturnStmt 0x21fa7093580 <line:225:17, col:25>
|   |       |   `-UnaryOperator 0x21fa7093568 <col:24, col:25> 'int' prefix '-'
|   |       |     `-IntegerLiteral 0x21fa7093540 <col:25> 'int' 1
|   |       `-CompoundAssignOperator 0x21fa7093600 <line:226:13, col:23> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |-DeclRefExpr 0x21fa70935a8 <col:13> 'int' lvalue Var 0x21fa70887c8 'outlen' 'int'
|   |         `-ImplicitCastExpr 0x21fa70935e8 <col:23> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x21fa70935c8 <col:23> 'int' lvalue Var 0x21fa7088848 'len' 'int'
|   `-ReturnStmt 0x21fa70936f8 <line:229:5, col:12>
|     `-ImplicitCastExpr 0x21fa70936e0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21fa70936c0 <col:12> 'int' lvalue Var 0x21fa70887c8 'outlen' 'int'
|-FunctionDecl 0x21fa7093ab0 <line:234:1, line:252:1> line:234:12 used do_hex_dump 'int (char_io *, void *, unsigned char *, int)' static
| |-ParmVarDecl 0x21fa7093780 <col:24, col:33> col:33 used io_ch 'char_io *'
| |-ParmVarDecl 0x21fa7093800 <col:40, col:46> col:46 used arg 'void *'
| |-ParmVarDecl 0x21fa7093880 <col:51, col:66> col:66 used buf 'unsigned char *'
| |-ParmVarDecl 0x21fa7093900 <line:235:24, col:28> col:28 used buflen 'int'
| `-CompoundStmt 0x21fa7090810 <line:236:1, line:252:1>
|   |-DeclStmt 0x21fa7093d08 <line:237:5, col:52>
|   | `-VarDecl 0x21fa7093c08 <col:5, col:34> col:23 used hexdig 'const char [17]' static cinit
|   |   `-StringLiteral 0x21fa7093ca8 <col:34> 'const char [17]' "0123456789ABCDEF"
|   |-DeclStmt 0x21fa7093e38 <line:238:5, col:25>
|   | |-VarDecl 0x21fa7093d38 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x21fa7093db8 <col:5, col:24> col:24 used q 'unsigned char *'
|   |-DeclStmt 0x21fa7093f18 <line:239:5, col:19>
|   | `-VarDecl 0x21fa7093eb0 <col:5, col:18> col:10 used hextmp 'char [2]'
|   |-IfStmt 0x21fa7090768 <line:240:5, line:250:5>
|   | |-ImplicitCastExpr 0x21fa7093f50 <line:240:9> 'void *' <LValueToRValue>
|   | | `-DeclRefExpr 0x21fa7093f30 <col:9> 'void *' lvalue ParmVar 0x21fa7093800 'arg' 'void *'
|   | `-CompoundStmt 0x21fa7090740 <col:14, line:250:5>
|   |   |-BinaryOperator 0x21fa7093fd8 <line:241:9, col:13> 'unsigned char *' '='
|   |   | |-DeclRefExpr 0x21fa7093f68 <col:9> 'unsigned char *' lvalue Var 0x21fa7093d38 'p' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x21fa7093fc0 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x21fa7093fa0 <col:13> 'unsigned char *' lvalue ParmVar 0x21fa7093880 'buf' 'unsigned char *'
|   |   |-BinaryOperator 0x21fa70940c0 <line:242:9, col:19> 'unsigned char *' '='
|   |   | |-DeclRefExpr 0x21fa7093ff8 <col:9> 'unsigned char *' lvalue Var 0x21fa7093db8 'q' 'unsigned char *'
|   |   | `-BinaryOperator 0x21fa70940a0 <col:13, col:19> 'unsigned char *' '+'
|   |   |   |-ImplicitCastExpr 0x21fa7094070 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21fa7094030 <col:13> 'unsigned char *' lvalue ParmVar 0x21fa7093880 'buf' 'unsigned char *'
|   |   |   `-ImplicitCastExpr 0x21fa7094088 <col:19> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x21fa7094050 <col:19> 'int' lvalue ParmVar 0x21fa7093900 'buflen' 'int'
|   |   `-WhileStmt 0x21fa7090728 <line:243:9, line:249:9>
|   |     |-BinaryOperator 0x21fa7094150 <line:243:16, col:21> 'int' '!='
|   |     | |-ImplicitCastExpr 0x21fa7094120 <col:16> 'unsigned char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x21fa70940e0 <col:16> 'unsigned char *' lvalue Var 0x21fa7093d38 'p' 'unsigned char *'
|   |     | `-ImplicitCastExpr 0x21fa7094138 <col:21> 'unsigned char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x21fa7094100 <col:21> 'unsigned char *' lvalue Var 0x21fa7093db8 'q' 'unsigned char *'
|   |     `-CompoundStmt 0x21fa70906f8 <col:24, line:249:9>
|   |       |-BinaryOperator 0x21fa7094358 <line:244:13, col:39> 'char' '='
|   |       | |-ArraySubscriptExpr 0x21fa70941e8 <col:13, col:21> 'char' lvalue
|   |       | | |-ImplicitCastExpr 0x21fa70941d0 <col:13> 'char *' <ArrayToPointerDecay>
|   |       | | | `-DeclRefExpr 0x21fa7094170 <col:13> 'char [2]' lvalue Var 0x21fa7093eb0 'hextmp' 'char [2]'
|   |       | | `-IntegerLiteral 0x21fa70941a8 <col:20> 'int' 0
|   |       | `-ImplicitCastExpr 0x21fa7094340 <col:25, col:39> 'char' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x21fa7094320 <col:25, col:39> 'const char' lvalue
|   |       |     |-ImplicitCastExpr 0x21fa7094308 <col:25> 'const char *' <ArrayToPointerDecay>
|   |       |     | `-DeclRefExpr 0x21fa7094208 <col:25> 'const char [17]' lvalue Var 0x21fa7093c08 'hexdig' 'const char [17]'
|   |       |     `-BinaryOperator 0x21fa70942e8 <col:32, col:38> 'int' '>>'
|   |       |       |-ImplicitCastExpr 0x21fa70942d0 <col:32, col:33> 'int' <IntegralCast>
|   |       |       | `-ImplicitCastExpr 0x21fa70942b8 <col:32, col:33> 'unsigned char' <LValueToRValue>
|   |       |       |   `-UnaryOperator 0x21fa7094278 <col:32, col:33> 'unsigned char' lvalue prefix '*' cannot overflow
|   |       |       |     `-ImplicitCastExpr 0x21fa7094260 <col:33> 'unsigned char *' <LValueToRValue>
|   |       |       |       `-DeclRefExpr 0x21fa7094240 <col:33> 'unsigned char *' lvalue Var 0x21fa7093d38 'p' 'unsigned char *'
|   |       |       `-IntegerLiteral 0x21fa7094290 <col:38> 'int' 4
|   |       |-BinaryOperator 0x21fa7090500 <line:245:13, col:40> 'char' '='
|   |       | |-ArraySubscriptExpr 0x21fa70943d8 <col:13, col:21> 'char' lvalue
|   |       | | |-ImplicitCastExpr 0x21fa70943c0 <col:13> 'char *' <ArrayToPointerDecay>
|   |       | | | `-DeclRefExpr 0x21fa7094378 <col:13> 'char [2]' lvalue Var 0x21fa7093eb0 'hextmp' 'char [2]'
|   |       | | `-IntegerLiteral 0x21fa7094398 <col:20> 'int' 1
|   |       | `-ImplicitCastExpr 0x21fa70904e8 <col:25, col:40> 'char' <LValueToRValue>
|   |       |   `-ArraySubscriptExpr 0x21fa70904c8 <col:25, col:40> 'const char' lvalue
|   |       |     |-ImplicitCastExpr 0x21fa70904b0 <col:25> 'const char *' <ArrayToPointerDecay>
|   |       |     | `-DeclRefExpr 0x21fa70943f8 <col:25> 'const char [17]' lvalue Var 0x21fa7093c08 'hexdig' 'const char [17]'
|   |       |     `-BinaryOperator 0x21fa7090490 <col:32, col:37> 'int' '&'
|   |       |       |-ImplicitCastExpr 0x21fa70944a8 <col:32, col:33> 'int' <IntegralCast>
|   |       |       | `-ImplicitCastExpr 0x21fa7094490 <col:32, col:33> 'unsigned char' <LValueToRValue>
|   |       |       |   `-UnaryOperator 0x21fa7094450 <col:32, col:33> 'unsigned char' lvalue prefix '*' cannot overflow
|   |       |       |     `-ImplicitCastExpr 0x21fa7094438 <col:33> 'unsigned char *' <LValueToRValue>
|   |       |       |       `-DeclRefExpr 0x21fa7094418 <col:33> 'unsigned char *' lvalue Var 0x21fa7093d38 'p' 'unsigned char *'
|   |       |       `-IntegerLiteral 0x21fa7094468 <col:37> 'int' 15
|   |       |-IfStmt 0x21fa70906a8 <line:246:13, line:247:25>
|   |       | |-UnaryOperator 0x21fa7090640 <line:246:17, col:38> 'int' prefix '!' cannot overflow
|   |       | | `-CallExpr 0x21fa70905c0 <col:18, col:38> 'int'
|   |       | |   |-ImplicitCastExpr 0x21fa70905a8 <col:18> 'char_io *' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x21fa7090520 <col:18> 'char_io *' lvalue ParmVar 0x21fa7093780 'io_ch' 'char_io *'
|   |       | |   |-ImplicitCastExpr 0x21fa70905f8 <col:24> 'void *' <LValueToRValue>
|   |       | |   | `-DeclRefExpr 0x21fa7090540 <col:24> 'void *' lvalue ParmVar 0x21fa7093800 'arg' 'void *'
|   |       | |   |-ImplicitCastExpr 0x21fa7090628 <col:29> 'const void *' <BitCast>
|   |       | |   | `-ImplicitCastExpr 0x21fa7090610 <col:29> 'char *' <ArrayToPointerDecay>
|   |       | |   |   `-DeclRefExpr 0x21fa7090560 <col:29> 'char [2]' lvalue Var 0x21fa7093eb0 'hextmp' 'char [2]'
|   |       | |   `-IntegerLiteral 0x21fa7090580 <col:37> 'int' 2
|   |       | `-ReturnStmt 0x21fa7090698 <line:247:17, col:25>
|   |       |   `-UnaryOperator 0x21fa7090680 <col:24, col:25> 'int' prefix '-'
|   |       |     `-IntegerLiteral 0x21fa7090658 <col:25> 'int' 1
|   |       `-UnaryOperator 0x21fa70906e0 <line:248:13, col:14> 'unsigned char *' postfix '++'
|   |         `-DeclRefExpr 0x21fa70906c0 <col:13> 'unsigned char *' lvalue Var 0x21fa7093d38 'p' 'unsigned char *'
|   `-ReturnStmt 0x21fa7090800 <line:251:5, col:22>
|     `-BinaryOperator 0x21fa70907e0 <col:12, col:22> 'int' '<<'
|       |-ImplicitCastExpr 0x21fa70907c8 <col:12> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x21fa7090780 <col:12> 'int' lvalue ParmVar 0x21fa7093900 'buflen' 'int'
|       `-IntegerLiteral 0x21fa70907a0 <col:22> 'int' 1
|-FunctionDecl 0x21fa7090b20 <line:260:1, line:293:1> line:260:12 invalid do_dump 'int (unsigned long, char_io *, void *, const int *)' static
| |-ParmVarDecl 0x21fa7090860 <col:20, col:34> col:34 used lflags 'unsigned long'
| |-ParmVarDecl 0x21fa70908d8 <col:42, col:51> col:51 used io_ch 'char_io *'
| |-ParmVarDecl 0x21fa7090958 <col:58, col:64> col:64 used arg 'void *'
| |-ParmVarDecl 0x21fa70909d8 <line:261:20, col:39> col:39 invalid str 'const int *'
| `-CompoundStmt 0x21fa7094e30 <line:262:1, line:293:1>
|   |-DeclStmt 0x21fa7090d10 <line:268:5, col:31>
|   | |-VarDecl 0x21fa7090c10 <col:5, col:20> col:20 used der_buf 'unsigned char *'
|   | `-VarDecl 0x21fa7090c90 <col:5, col:30> col:30 used p 'unsigned char *'
|   |-DeclStmt 0x21fa7090e40 <line:269:5, col:24>
|   | |-VarDecl 0x21fa7090d40 <col:5, col:9> col:9 used outlen 'int'
|   | `-VarDecl 0x21fa7090dc0 <col:5, col:17> col:17 used der_len 'int'
|   |-IfStmt 0x21fa7091010 <line:271:5, line:272:17>
|   | |-UnaryOperator 0x21fa7090fa8 <line:271:9, col:27> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x21fa7090f28 <col:10, col:27> 'int'
|   | |   |-ImplicitCastExpr 0x21fa7090f10 <col:10> 'char_io *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x21fa7090e58 <col:10> 'char_io *' lvalue ParmVar 0x21fa70908d8 'io_ch' 'char_io *'
|   | |   |-ImplicitCastExpr 0x21fa7090f60 <col:16> 'void *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x21fa7090e90 <col:16> 'void *' lvalue ParmVar 0x21fa7090958 'arg' 'void *'
|   | |   |-ImplicitCastExpr 0x21fa7090f90 <col:21> 'const void *' <BitCast>
|   | |   | `-ImplicitCastExpr 0x21fa7090f78 <col:21> 'char *' <ArrayToPointerDecay>
|   | |   |   `-StringLiteral 0x21fa7090ec8 <col:21> 'char [2]' lvalue "#"
|   | |   `-IntegerLiteral 0x21fa7090ee8 <col:26> 'int' 1
|   | `-ReturnStmt 0x21fa7091000 <line:272:9, col:17>
|   |   `-UnaryOperator 0x21fa7090fe8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21fa7090fc0 <col:17> 'int' 1
|   |-IfStmt 0x21fa70912a8 <line:274:5, line:279:5>
|   | |-OpaqueValueExpr 0x21fa7091290 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21fa7091270 <line:274:44, line:279:5>
|   |   |-IfStmt 0x21fa70911c8 <line:276:9, line:277:21>
|   |   | |-BinaryOperator 0x21fa7091158 <line:276:13, col:22> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x21fa7091140 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x21fa70910f8 <col:13> 'int' lvalue Var 0x21fa7090d40 'outlen' 'int'
|   |   | | `-IntegerLiteral 0x21fa7091118 <col:22> 'int' 0
|   |   | `-ReturnStmt 0x21fa70911b8 <line:277:13, col:21>
|   |   |   `-UnaryOperator 0x21fa70911a0 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x21fa7091178 <col:21> 'int' 1
|   |   `-ReturnStmt 0x21fa7091260 <line:278:9, col:25>
|   |     `-BinaryOperator 0x21fa7091240 <col:16, col:25> 'int' '+'
|   |       |-ImplicitCastExpr 0x21fa7091228 <col:16> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x21fa70911e0 <col:16> 'int' lvalue Var 0x21fa7090d40 'outlen' 'int'
|   |       `-IntegerLiteral 0x21fa7091200 <col:25> 'int' 1
|   |-BinaryOperator 0x21fa70946a8 <line:283:5, col:37> 'unsigned char *' '='
|   | |-DeclRefExpr 0x21fa70944d0 <col:5> 'unsigned char *' lvalue Var 0x21fa7090c10 'der_buf' 'unsigned char *'
|   | `-ImplicitCastExpr 0x21fa7094690 <col:15, col:37> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x21fa7094650 <col:15, col:37> 'int'
|   |     |-ImplicitCastExpr 0x21fa7094638 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x21fa70945f8 <col:15> 'int ()' Function 0x21fa7094530 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x21fa7094678 <col:30> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x21fa7094618 <col:30> 'int' lvalue Var 0x21fa7090dc0 'der_len' 'int'
|   |-IfStmt 0x21fa7094810 <line:284:5, line:285:17>
|   | |-BinaryOperator 0x21fa70947a0 <line:284:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x21fa7094770 <.//openssl//file_jk/after\crypto\asn1\a_strex.c:284:9> 'unsigned char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21fa70946c8 <col:9> 'unsigned char *' lvalue Var 0x21fa7090c10 'der_buf' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x21fa7094788 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x21fa7094750 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x21fa7094728 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x21fa70946e8 <col:26> 'int' 0
|   | `-ReturnStmt 0x21fa7094800 <.//openssl//file_jk/after\crypto\asn1\a_strex.c:285:9, col:17>
|   |   `-UnaryOperator 0x21fa70947e8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21fa70947c0 <col:17> 'int' 1
|   |-BinaryOperator 0x21fa7094898 <line:286:5, col:9> 'unsigned char *' '='
|   | |-DeclRefExpr 0x21fa7094828 <col:5> 'unsigned char *' lvalue Var 0x21fa7090c90 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x21fa7094880 <col:9> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x21fa7094860 <col:9> 'unsigned char *' lvalue Var 0x21fa7090c10 'der_buf' 'unsigned char *'
|   |-BinaryOperator 0x21fa7094b10 <line:288:5, col:54> 'int' '='
|   | |-DeclRefExpr 0x21fa7094940 <col:5> 'int' lvalue Var 0x21fa7090d40 'outlen' 'int'
|   | `-CallExpr 0x21fa7094a70 <col:14, col:54> 'int'
|   |   |-ImplicitCastExpr 0x21fa7094a58 <col:14> 'int (*)(char_io *, void *, unsigned char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x21fa7094960 <col:14> 'int (char_io *, void *, unsigned char *, int)' Function 0x21fa7093ab0 'do_hex_dump' 'int (char_io *, void *, unsigned char *, int)'
|   |   |-ImplicitCastExpr 0x21fa7094ab0 <col:26> 'char_io *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa7094980 <col:26> 'char_io *' lvalue ParmVar 0x21fa70908d8 'io_ch' 'char_io *'
|   |   |-ImplicitCastExpr 0x21fa7094ac8 <col:33> 'void *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa70949a0 <col:33> 'void *' lvalue ParmVar 0x21fa7090958 'arg' 'void *'
|   |   |-ImplicitCastExpr 0x21fa7094ae0 <col:38> 'unsigned char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x21fa70949c0 <col:38> 'unsigned char *' lvalue Var 0x21fa7090c10 'der_buf' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x21fa7094af8 <col:47> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x21fa70949e0 <col:47> 'int' lvalue Var 0x21fa7090dc0 'der_len' 'int'
|   |-CallExpr 0x21fa7094c78 <line:289:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x21fa7094c60 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x21fa7094c20 <col:5> 'int ()' Function 0x21fa7094b58 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x21fa7094ca0 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x21fa7094c40 <col:18> 'unsigned char *' lvalue Var 0x21fa7090c10 'der_buf' 'unsigned char *'
|   |-IfStmt 0x21fa7094d88 <line:290:5, line:291:17>
|   | |-BinaryOperator 0x21fa7094d18 <line:290:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x21fa7094d00 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21fa7094cb8 <col:9> 'int' lvalue Var 0x21fa7090d40 'outlen' 'int'
|   | | `-IntegerLiteral 0x21fa7094cd8 <col:18> 'int' 0
|   | `-ReturnStmt 0x21fa7094d78 <line:291:9, col:17>
|   |   `-UnaryOperator 0x21fa7094d60 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21fa7094d38 <col:17> 'int' 1
|   `-ReturnStmt 0x21fa7094e20 <line:292:5, col:21>
|     `-BinaryOperator 0x21fa7094e00 <col:12, col:21> 'int' '+'
|       |-ImplicitCastExpr 0x21fa7094de8 <col:12> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x21fa7094da0 <col:12> 'int' lvalue Var 0x21fa7090d40 'outlen' 'int'
|       `-IntegerLiteral 0x21fa7094dc0 <col:21> 'int' 1
|-VarDecl 0x21fa7094f20 <line:301:1, line:310:1> line:301:26 used tag2nbyte 'const signed char [31]' static cinit
| `-InitListExpr 0x21fa70957c8 <col:40, line:310:1> 'const signed char [31]'
|   |-ImplicitCastExpr 0x21fa7095808 <line:302:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7094fb0 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7094f88 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095828 <col:9, col:10> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7094ff0 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7094fc8 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095850 <col:13, col:14> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095030 <col:13, col:14> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095008 <col:14> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095888 <col:17, col:18> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095070 <col:17, col:18> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095048 <col:18> 'int' 1
|   |-ImplicitCastExpr 0x21fa70958a0 <col:21, col:22> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa70950b0 <col:21, col:22> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095088 <col:22> 'int' 1
|   |-ImplicitCastExpr 0x21fa70958f8 <line:303:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa70950f0 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa70950c8 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095910 <col:9, col:10> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095130 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095108 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095928 <col:13, col:14> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095170 <col:13, col:14> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095148 <col:14> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095940 <col:17, col:18> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa70951b0 <col:17, col:18> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095188 <col:18> 'int' 1
|   |-ImplicitCastExpr 0x21fa70959d8 <col:21, col:22> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa70951f0 <col:21, col:22> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa70951c8 <col:22> 'int' 1
|   |-ImplicitCastExpr 0x21fa70959f0 <line:304:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095230 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095208 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095a08 <col:9, col:10> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095270 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095248 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095a20 <col:13> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7095288 <col:13> 'int' 0
|   |-ImplicitCastExpr 0x21fa7095a38 <col:16, col:17> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa70952d8 <col:16, col:17> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa70952b0 <col:17> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095a50 <line:305:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095318 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa70952f0 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095a68 <col:9, col:10> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095358 <col:9, col:10> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095330 <col:10> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095a80 <col:13, col:14> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095398 <col:13, col:14> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095370 <col:14> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095b98 <col:17, col:18> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa70953d8 <col:17, col:18> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa70953b0 <col:18> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095bb0 <line:306:5> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70953f0 <col:5> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095bc8 <col:8> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7095418 <col:8> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095be0 <col:11> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7095440 <col:11> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095bf8 <line:307:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095490 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095468 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095c10 <col:9> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70954a8 <col:9> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095c28 <col:12> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70954e0 <col:12> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095c40 <col:15> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7095508 <col:15> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095c58 <line:308:5, col:6> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095558 <col:5, col:6> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095530 <col:6> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095c70 <col:9> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x21fa7095570 <col:9> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095c88 <col:12, col:13> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa70955c0 <col:12, col:13> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095598 <col:13> 'int' 1
|   |-ImplicitCastExpr 0x21fa7095ca0 <line:309:5> 'signed char' <IntegralCast>
|   | `-IntegerLiteral 0x21fa70955d8 <col:5> 'int' 4
|   |-ImplicitCastExpr 0x21fa7095cb8 <col:8, col:9> 'signed char' <IntegralCast>
|   | `-UnaryOperator 0x21fa7095628 <col:8, col:9> 'int' prefix '-'
|   |   `-IntegerLiteral 0x21fa7095600 <col:9> 'int' 1
|   `-ImplicitCastExpr 0x21fa7095cd0 <col:12> 'signed char' <IntegralCast>
|     `-IntegerLiteral 0x21fa7095640 <col:12> 'int' 2
|-FunctionDecl 0x21fa7096040 <line:318:1, line:395:1> line:318:12 invalid do_print_ex 'int (char_io *, void *, unsigned long, const int *)' static
| |-ParmVarDecl 0x21fa7095d78 <col:24, col:33> col:33 used io_ch 'char_io *'
| |-ParmVarDecl 0x21fa7095df8 <col:40, col:46> col:46 used arg 'void *'
| |-ParmVarDecl 0x21fa7095e78 <col:51, col:65> col:65 used lflags 'unsigned long'
| |-ParmVarDecl 0x21fa7095ef8 <line:319:24, col:43> col:43 invalid str 'const int *'
| `-CompoundStmt 0x21fa7092318 <line:320:1, line:395:1>
|   |-DeclStmt 0x21fa7096230 <line:321:5, col:20>
|   | |-VarDecl 0x21fa7096130 <col:5, col:9> col:9 used outlen 'int'
|   | `-VarDecl 0x21fa70961b0 <col:5, col:17> col:17 used len 'int'
|   |-DeclStmt 0x21fa70962c8 <line:322:5, col:13>
|   | `-VarDecl 0x21fa7096260 <col:5, col:9> col:9 used type 'int'
|   |-DeclStmt 0x21fa7096358 <line:323:5, col:16>
|   | `-VarDecl 0x21fa70962f0 <col:5, col:10> col:10 used quotes 'char'
|   |-DeclStmt 0x21fa70963f0 <line:324:5, col:25>
|   | `-VarDecl 0x21fa7096388 <col:5, col:20> col:20 used flags 'unsigned short'
|   |-BinaryOperator 0x21fa7096480 <line:325:5, col:14> 'char' '='
|   | |-DeclRefExpr 0x21fa7096408 <col:5> 'char' lvalue Var 0x21fa70962f0 'quotes' 'char'
|   | `-ImplicitCastExpr 0x21fa7096468 <col:14> 'char' <IntegralCast>
|   |   `-IntegerLiteral 0x21fa7096440 <col:14> 'int' 0
|   |-BinaryOperator 0x21fa70985e0 <line:331:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x21fa7098580 <col:5> 'int' lvalue Var 0x21fa7096130 'outlen' 'int'
|   | `-IntegerLiteral 0x21fa70985b8 <col:14> 'int' 0
|   |-IfStmt 0x21fa7098da0 <line:333:5, line:340:5>
|   | |-OpaqueValueExpr 0x21fa7098d88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21fa7098d50 <line:333:42, line:340:5>
|   |   |-DeclStmt 0x21fa70986a0 <line:334:9, col:28>
|   |   | `-VarDecl 0x21fa7098638 <col:9, col:21> col:21 used tagname 'const char *'
|   |   |-BinaryOperator 0x21fa7098890 <line:335:9, col:36> 'const char *' '='
|   |   | |-DeclRefExpr 0x21fa70986b8 <col:9> 'const char *' lvalue Var 0x21fa7098638 'tagname' 'const char *'
|   |   | `-ImplicitCastExpr 0x21fa7098878 <col:19, col:36> 'const char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x21fa7098838 <col:19, col:36> 'int'
|   |   |     |-ImplicitCastExpr 0x21fa7098820 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x21fa70987e0 <col:19> 'int ()' Function 0x21fa7098718 'ASN1_tag2str' 'int ()'
|   |   |     `-ImplicitCastExpr 0x21fa7098860 <col:32> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x21fa7098800 <col:32> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   |   |-CompoundAssignOperator 0x21fa70989b0 <line:336:9, col:33> 'int' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x21fa70988b0 <col:9> 'int' lvalue Var 0x21fa7096130 'outlen' 'int'
|   |   | `-CallExpr 0x21fa7098970 <col:19, col:33> 'unsigned long long'
|   |   |   |-ImplicitCastExpr 0x21fa7098958 <col:19> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x21fa70988d0 <col:19> 'unsigned long long (const char *)' Function 0x21fa706ce80 'strlen' 'unsigned long long (const char *)'
|   |   |   `-ImplicitCastExpr 0x21fa7098998 <col:26> 'const char *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x21fa70988f0 <col:26> 'const char *' lvalue Var 0x21fa7098638 'tagname' 'const char *'
|   |   |-IfStmt 0x21fa7098d00 <line:337:9, line:338:21>
|   |   | |-BinaryOperator 0x21fa7098c90 <line:337:13, col:63> 'int' '||'
|   |   | | |-UnaryOperator 0x21fa7098b40 <col:13, col:40> 'int' prefix '!' cannot overflow
|   |   | | | `-CallExpr 0x21fa7098aa8 <col:14, col:40> 'int'
|   |   | | |   |-ImplicitCastExpr 0x21fa7098a90 <col:14> 'char_io *' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x21fa70989e0 <col:14> 'char_io *' lvalue ParmVar 0x21fa7095d78 'io_ch' 'char_io *'
|   |   | | |   |-ImplicitCastExpr 0x21fa7098ae0 <col:20> 'void *' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x21fa7098a18 <col:20> 'void *' lvalue ParmVar 0x21fa7095df8 'arg' 'void *'
|   |   | | |   |-ImplicitCastExpr 0x21fa7098b10 <col:25> 'const void *' <BitCast>
|   |   | | |   | `-ImplicitCastExpr 0x21fa7098af8 <col:25> 'const char *' <LValueToRValue>
|   |   | | |   |   `-DeclRefExpr 0x21fa7098a50 <col:25> 'const char *' lvalue Var 0x21fa7098638 'tagname' 'const char *'
|   |   | | |   `-ImplicitCastExpr 0x21fa7098b28 <col:34> 'int' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x21fa7098a70 <col:34> 'int' lvalue Var 0x21fa7096130 'outlen' 'int'
|   |   | | `-UnaryOperator 0x21fa7098c78 <col:45, col:63> 'int' prefix '!' cannot overflow
|   |   | |   `-CallExpr 0x21fa7098bf8 <col:46, col:63> 'int'
|   |   | |     |-ImplicitCastExpr 0x21fa7098be0 <col:46> 'char_io *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x21fa7098b58 <col:46> 'char_io *' lvalue ParmVar 0x21fa7095d78 'io_ch' 'char_io *'
|   |   | |     |-ImplicitCastExpr 0x21fa7098c30 <col:52> 'void *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x21fa7098b78 <col:52> 'void *' lvalue ParmVar 0x21fa7095df8 'arg' 'void *'
|   |   | |     |-ImplicitCastExpr 0x21fa7098c60 <col:57> 'const void *' <BitCast>
|   |   | |     | `-ImplicitCastExpr 0x21fa7098c48 <col:57> 'char *' <ArrayToPointerDecay>
|   |   | |     |   `-StringLiteral 0x21fa7098b98 <col:57> 'char [2]' lvalue ":"
|   |   | |     `-IntegerLiteral 0x21fa7098bb8 <col:62> 'int' 1
|   |   | `-ReturnStmt 0x21fa7098cf0 <line:338:13, col:21>
|   |   |   `-UnaryOperator 0x21fa7098cd8 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x21fa7098cb0 <col:21> 'int' 1
|   |   `-UnaryOperator 0x21fa7098d38 <line:339:9, col:15> 'int' postfix '++'
|   |     `-DeclRefExpr 0x21fa7098d18 <col:9> 'int' lvalue Var 0x21fa7096130 'outlen' 'int'
|   |-IfStmt 0x21fa70993f8 <line:345:5, line:358:5> has_else
|   | |-OpaqueValueExpr 0x21fa70993e0 <<invalid sloc>> '_Bool'
|   | |-BinaryOperator 0x21fa7098e38 <line:346:9, col:17> 'int' '='
|   | | |-DeclRefExpr 0x21fa7098dd8 <col:9> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   | | `-UnaryOperator 0x21fa7098e20 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x21fa7098df8 <col:17> 'int' 1
|   | `-IfStmt 0x21fa70993b8 <line:348:10, line:358:5> has_else
|   |   |-OpaqueValueExpr 0x21fa70993a0 <<invalid sloc>> '_Bool'
|   |   |-BinaryOperator 0x21fa7098ec0 <line:349:9, col:16> 'int' '='
|   |   | |-DeclRefExpr 0x21fa7098e78 <col:9> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   |   | `-IntegerLiteral 0x21fa7098e98 <col:16> 'int' 1
|   |   `-CompoundStmt 0x21fa7099380 <line:350:10, line:358:5>
|   |     |-IfStmt 0x21fa70991e8 <line:352:9, line:355:21> has_else
|   |     | |-BinaryOperator 0x21fa7099020 <line:352:13, col:37> 'int' '&&'
|   |     | | |-ParenExpr 0x21fa7098f60 <col:13, col:22> 'int'
|   |     | | | `-BinaryOperator 0x21fa7098f40 <col:14, col:21> 'int' '>'
|   |     | | |   |-ImplicitCastExpr 0x21fa7098f28 <col:14> 'int' <LValueToRValue>
|   |     | | |   | `-DeclRefExpr 0x21fa7098ee0 <col:14> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   |     | | |   `-IntegerLiteral 0x21fa7098f00 <col:21> 'int' 0
|   |     | | `-ParenExpr 0x21fa7099000 <col:27, col:37> 'int'
|   |     | |   `-BinaryOperator 0x21fa7098fe0 <col:28, col:35> 'int' '<'
|   |     | |     |-ImplicitCastExpr 0x21fa7098fc8 <col:28> 'int' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x21fa7098f80 <col:28> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   |     | |     `-IntegerLiteral 0x21fa7098fa0 <col:35> 'int' 31
|   |     | |-BinaryOperator 0x21fa7099148 <line:353:13, col:34> 'int' '='
|   |     | | |-DeclRefExpr 0x21fa7099040 <col:13> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   |     | | `-ImplicitCastExpr 0x21fa7099130 <col:20, col:34> 'int' <IntegralCast>
|   |     | |   `-ImplicitCastExpr 0x21fa7099118 <col:20, col:34> 'signed char' <LValueToRValue>
|   |     | |     `-ArraySubscriptExpr 0x21fa70990f8 <col:20, col:34> 'const signed char' lvalue
|   |     | |       |-ImplicitCastExpr 0x21fa70990c8 <col:20> 'const signed char *' <ArrayToPointerDecay>
|   |     | |       | `-DeclRefExpr 0x21fa7099060 <col:20> 'const signed char [31]' lvalue Var 0x21fa7094f20 'tag2nbyte' 'const signed char [31]'
|   |     | |       `-ImplicitCastExpr 0x21fa70990e0 <col:30> 'int' <LValueToRValue>
|   |     | |         `-DeclRefExpr 0x21fa7099080 <col:30> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   |     | `-BinaryOperator 0x21fa70991c8 <line:355:13, col:21> 'int' '='
|   |     |   |-DeclRefExpr 0x21fa7099168 <col:13> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   |     |   `-UnaryOperator 0x21fa70991b0 <col:20, col:21> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x21fa7099188 <col:21> 'int' 1
|   |     `-IfStmt 0x21fa7099368 <line:356:9, line:357:20>
|   |       |-OpaqueValueExpr 0x21fa7099350 <<invalid sloc>> '_Bool'
|   |       `-BinaryOperator 0x21fa7099330 <col:13, col:20> 'int' '='
|   |         |-DeclRefExpr 0x21fa70992e8 <col:13> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   |         `-IntegerLiteral 0x21fa7099308 <col:20> 'int' 1
|   |-IfStmt 0x21fa70916c0 <line:360:5, line:366:5>
|   | |-BinaryOperator 0x21fa7099498 <line:360:9, col:18> 'int' '=='
|   | | |-ImplicitCastExpr 0x21fa7099480 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21fa7099420 <col:9> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   | | `-UnaryOperator 0x21fa7099468 <col:17, col:18> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x21fa7099440 <col:18> 'int' 1
|   | `-CompoundStmt 0x21fa7091698 <col:21, line:366:5>
|   |   |-IfStmt 0x21fa70915b0 <line:362:9, line:363:21>
|   |   | |-BinaryOperator 0x21fa7091540 <line:362:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x21fa7091528 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x21fa70914e0 <col:13> 'int' lvalue Var 0x21fa70961b0 'len' 'int'
|   |   | | `-IntegerLiteral 0x21fa7091500 <col:19> 'int' 0
|   |   | `-ReturnStmt 0x21fa70915a0 <line:363:13, col:21>
|   |   |   `-UnaryOperator 0x21fa7091588 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x21fa7091560 <col:21> 'int' 1
|   |   |-CompoundAssignOperator 0x21fa7091620 <line:364:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x21fa70915c8 <col:9> 'int' lvalue Var 0x21fa7096130 'outlen' 'int'
|   |   | `-ImplicitCastExpr 0x21fa7091608 <col:19> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x21fa70915e8 <col:19> 'int' lvalue Var 0x21fa70961b0 'len' 'int'
|   |   `-ReturnStmt 0x21fa7091688 <line:365:9, col:16>
|   |     `-ImplicitCastExpr 0x21fa7091670 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x21fa7091650 <col:16> 'int' lvalue Var 0x21fa7096130 'outlen' 'int'
|   |-IfStmt 0x21fa7091880 <line:368:5, line:378:5>
|   | |-OpaqueValueExpr 0x21fa7091868 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x21fa7091850 <line:368:45, line:378:5>
|   |   `-IfStmt 0x21fa7091828 <line:374:9, line:130:33> has_else
|   |     |-UnaryOperator 0x21fa7091730 <line:374:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x21fa7091718 <col:14> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x21fa70916f8 <col:14> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   |     |-BinaryOperator 0x21fa7091790 <line:375:13, col:20> 'int' '='
|   |     | |-DeclRefExpr 0x21fa7091748 <col:13> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   |     | `-IntegerLiteral 0x21fa7091768 <col:20> 'int' 1
|   |     `-CompoundAssignOperator 0x21fa70917f8 <line:377:13, line:130:33> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       |-DeclRefExpr 0x21fa70917b0 <line:377:13> 'int' lvalue Var 0x21fa7096260 'type' 'int'
|   |       `-IntegerLiteral 0x21fa70917d0 <line:130:33> 'int' 8
|   |-IfStmt 0x21fa7091ac8 <line:381:5, line:382:17>
|   | |-BinaryOperator 0x21fa7091a58 <line:381:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x21fa7091a40 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21fa70919f8 <col:9> 'int' lvalue Var 0x21fa70961b0 'len' 'int'
|   | | `-IntegerLiteral 0x21fa7091a18 <col:15> 'int' 0
|   | `-ReturnStmt 0x21fa7091ab8 <line:382:9, col:17>
|   |   `-UnaryOperator 0x21fa7091aa0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21fa7091a78 <col:17> 'int' 1
|   |-CompoundAssignOperator 0x21fa7091b38 <line:383:5, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x21fa7091ae0 <col:5> 'int' lvalue Var 0x21fa7096130 'outlen' 'int'
|   | `-ImplicitCastExpr 0x21fa7091b20 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x21fa7091b00 <col:15> 'int' lvalue Var 0x21fa70961b0 'len' 'int'
|   |-IfStmt 0x21fa7091c18 <line:384:5, line:385:19>
|   | |-ImplicitCastExpr 0x21fa7091b88 <line:384:9> 'char' <LValueToRValue>
|   | | `-DeclRefExpr 0x21fa7091b68 <col:9> 'char' lvalue Var 0x21fa70962f0 'quotes' 'char'
|   | `-CompoundAssignOperator 0x21fa7091be8 <line:385:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |-DeclRefExpr 0x21fa7091ba0 <col:9> 'int' lvalue Var 0x21fa7096130 'outlen' 'int'
|   |   `-IntegerLiteral 0x21fa7091bc0 <col:19> 'int' 2
|   |-IfStmt 0x21fa7091cc8 <line:386:5, line:387:16>
|   | |-UnaryOperator 0x21fa7091c68 <line:386:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x21fa7091c50 <col:10> 'void *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21fa7091c30 <col:10> 'void *' lvalue ParmVar 0x21fa7095df8 'arg' 'void *'
|   | `-ReturnStmt 0x21fa7091cb8 <line:387:9, col:16>
|   |   `-ImplicitCastExpr 0x21fa7091ca0 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x21fa7091c80 <col:16> 'int' lvalue Var 0x21fa7096130 'outlen' 'int'
|   |-IfStmt 0x21fa7091ed8 <line:388:5, line:389:17>
|   | |-BinaryOperator 0x21fa7091e68 <line:388:9, col:38> 'int' '&&'
|   | | |-ImplicitCastExpr 0x21fa7091e50 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x21fa7091e38 <col:9> 'char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x21fa7091ce0 <col:9> 'char' lvalue Var 0x21fa70962f0 'quotes' 'char'
|   | | `-UnaryOperator 0x21fa7091e20 <col:19, col:38> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x21fa7091da0 <col:20, col:38> 'int'
|   | |     |-ImplicitCastExpr 0x21fa7091d88 <col:20> 'char_io *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x21fa7091d00 <col:20> 'char_io *' lvalue ParmVar 0x21fa7095d78 'io_ch' 'char_io *'
|   | |     |-ImplicitCastExpr 0x21fa7091dd8 <col:26> 'void *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x21fa7091d20 <col:26> 'void *' lvalue ParmVar 0x21fa7095df8 'arg' 'void *'
|   | |     |-ImplicitCastExpr 0x21fa7091e08 <col:31> 'const void *' <BitCast>
|   | |     | `-ImplicitCastExpr 0x21fa7091df0 <col:31> 'char *' <ArrayToPointerDecay>
|   | |     |   `-StringLiteral 0x21fa7091d40 <col:31> 'char [2]' lvalue "\""
|   | |     `-IntegerLiteral 0x21fa7091d60 <col:37> 'int' 1
|   | `-ReturnStmt 0x21fa7091ec8 <line:389:9, col:17>
|   |   `-UnaryOperator 0x21fa7091eb0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21fa7091e88 <col:17> 'int' 1
|   |-IfStmt 0x21fa70920a8 <line:390:5, line:391:17>
|   | |-OpaqueValueExpr 0x21fa7092090 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x21fa7092080 <col:9, col:17>
|   |   `-UnaryOperator 0x21fa7092068 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21fa7092040 <col:17> 'int' 1
|   |-IfStmt 0x21fa70922b8 <line:392:5, line:393:17>
|   | |-BinaryOperator 0x21fa7092248 <line:392:9, col:38> 'int' '&&'
|   | | |-ImplicitCastExpr 0x21fa7092230 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x21fa7092218 <col:9> 'char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x21fa70920c0 <col:9> 'char' lvalue Var 0x21fa70962f0 'quotes' 'char'
|   | | `-UnaryOperator 0x21fa7092200 <col:19, col:38> 'int' prefix '!' cannot overflow
|   | |   `-CallExpr 0x21fa7092180 <col:20, col:38> 'int'
|   | |     |-ImplicitCastExpr 0x21fa7092168 <col:20> 'char_io *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x21fa70920e0 <col:20> 'char_io *' lvalue ParmVar 0x21fa7095d78 'io_ch' 'char_io *'
|   | |     |-ImplicitCastExpr 0x21fa70921b8 <col:26> 'void *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x21fa7092100 <col:26> 'void *' lvalue ParmVar 0x21fa7095df8 'arg' 'void *'
|   | |     |-ImplicitCastExpr 0x21fa70921e8 <col:31> 'const void *' <BitCast>
|   | |     | `-ImplicitCastExpr 0x21fa70921d0 <col:31> 'char *' <ArrayToPointerDecay>
|   | |     |   `-StringLiteral 0x21fa7092120 <col:31> 'char [2]' lvalue "\""
|   | |     `-IntegerLiteral 0x21fa7092140 <col:37> 'int' 1
|   | `-ReturnStmt 0x21fa70922a8 <line:393:9, col:17>
|   |   `-UnaryOperator 0x21fa7092290 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21fa7092268 <col:17> 'int' 1
|   `-ReturnStmt 0x21fa7092308 <line:394:5, col:12>
|     `-ImplicitCastExpr 0x21fa70922f0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21fa70922d0 <col:12> 'int' lvalue Var 0x21fa7096130 'outlen' 'int'
|-FunctionDecl 0x21fa709c740 <line:399:1, line:406:1> line:399:12 used do_indent 'int (char_io *, void *, int)' static
| |-ParmVarDecl 0x21fa70923c8 <col:22, col:31> col:31 used io_ch 'char_io *'
| |-ParmVarDecl 0x21fa709c550 <col:38, col:44> col:44 used arg 'void *'
| |-ParmVarDecl 0x21fa709c5d0 <col:49, col:53> col:53 used indent 'int'
| `-CompoundStmt 0x21fa709cbe8 <line:400:1, line:406:1>
|   |-DeclStmt 0x21fa709c890 <line:401:5, col:10>
|   | `-VarDecl 0x21fa709c828 <col:5, col:9> col:9 used i 'int'
|   |-ForStmt 0x21fa709cb78 <line:402:5, line:404:20>
|   | |-BinaryOperator 0x21fa709c908 <line:402:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x21fa709c8a8 <col:10> 'int' lvalue Var 0x21fa709c828 'i' 'int'
|   | | `-IntegerLiteral 0x21fa709c8e0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x21fa709c998 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x21fa709c968 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21fa709c928 <col:17> 'int' lvalue Var 0x21fa709c828 'i' 'int'
|   | | `-ImplicitCastExpr 0x21fa709c980 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21fa709c948 <col:21> 'int' lvalue ParmVar 0x21fa709c5d0 'indent' 'int'
|   | |-UnaryOperator 0x21fa709c9d8 <col:29, col:30> 'int' postfix '++'
|   | | `-DeclRefExpr 0x21fa709c9b8 <col:29> 'int' lvalue Var 0x21fa709c828 'i' 'int'
|   | `-IfStmt 0x21fa709cb60 <line:403:9, line:404:20>
|   |   |-UnaryOperator 0x21fa709cb10 <line:403:13, col:31> 'int' prefix '!' cannot overflow
|   |   | `-CallExpr 0x21fa709ca90 <col:14, col:31> 'int'
|   |   |   |-ImplicitCastExpr 0x21fa709ca78 <col:14> 'char_io *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21fa709c9f0 <col:14> 'char_io *' lvalue ParmVar 0x21fa70923c8 'io_ch' 'char_io *'
|   |   |   |-ImplicitCastExpr 0x21fa709cac8 <col:20> 'void *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x21fa709ca10 <col:20> 'void *' lvalue ParmVar 0x21fa709c550 'arg' 'void *'
|   |   |   |-ImplicitCastExpr 0x21fa709caf8 <col:25> 'const void *' <BitCast>
|   |   |   | `-ImplicitCastExpr 0x21fa709cae0 <col:25> 'char *' <ArrayToPointerDecay>
|   |   |   |   `-StringLiteral 0x21fa709ca30 <col:25> 'char [2]' lvalue " "
|   |   |   `-IntegerLiteral 0x21fa709ca50 <col:30> 'int' 1
|   |   `-ReturnStmt 0x21fa709cb50 <line:404:13, col:20>
|   |     `-IntegerLiteral 0x21fa709cb28 <col:20> 'int' 0
|   `-ReturnStmt 0x21fa709cbd8 <line:405:5, col:12>
|     `-IntegerLiteral 0x21fa709cbb0 <col:12> 'int' 1
|-FunctionDecl 0x21fa709cf80 <line:411:1, line:545:1> line:411:12 invalid do_name_ex 'int (char_io *, void *, const int *, int, unsigned long)' static
| |-ParmVarDecl 0x21fa709cc20 <col:23, col:32> col:32 used io_ch 'char_io *'
| |-ParmVarDecl 0x21fa709cca0 <col:39, col:45> col:45 used arg 'void *'
| |-ParmVarDecl 0x21fa709cd20 <col:50, col:67> col:67 invalid n 'const int *'
| |-ParmVarDecl 0x21fa709cda0 <line:412:23, col:27> col:27 used indent 'int'
| |-ParmVarDecl 0x21fa709ce20 <col:35, col:49> col:49 used flags 'unsigned long'
| `-CompoundStmt 0x21fa70a0918 <line:413:1, line:545:1>
|   |-DeclStmt 0x21fa709d2c8 <line:414:5, col:35>
|   | |-VarDecl 0x21fa709d078 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x21fa709d0f8 <col:5, col:20> col:12 used prev 'int' cinit
|   | | `-UnaryOperator 0x21fa709d188 <col:19, col:20> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x21fa709d160 <col:20> 'int' 1
|   | |-VarDecl 0x21fa709d1b8 <col:5, col:23> col:23 used orflags 'int'
|   | `-VarDecl 0x21fa709d238 <col:5, col:32> col:32 used cnt 'int'
|   |-DeclStmt 0x21fa709d3f8 <line:415:5, col:23>
|   | |-VarDecl 0x21fa709d2f8 <col:5, col:9> col:9 used fn_opt 'int'
|   | `-VarDecl 0x21fa709d378 <col:5, col:17> col:17 used fn_nid 'int'
|   |-DeclStmt 0x21fa709d490 <line:417:5, col:27>
|   | `-VarDecl 0x21fa709d428 <col:5, col:24> col:24 invalid val 'const int *'
|   |-DeclStmt 0x21fa709d528 <line:418:5, col:31>
|   | `-VarDecl 0x21fa709d4c0 <col:5, col:28> col:28 invalid ent 'const int *'
|   |-DeclStmt 0x21fa709a630 <line:419:5, col:20>
|   | `-VarDecl 0x21fa709a5c8 <col:5, col:19> col:10 used objtmp 'char [80]'
|   |-DeclStmt 0x21fa709a6c8 <line:420:5, col:23>
|   | `-VarDecl 0x21fa709a660 <col:5, col:17> col:17 used objbuf 'const char *'
|   |-DeclStmt 0x21fa709a7f8 <line:421:5, col:20>
|   | |-VarDecl 0x21fa709a6f8 <col:5, col:9> col:9 used outlen 'int'
|   | `-VarDecl 0x21fa709a778 <col:5, col:17> col:17 used len 'int'
|   |-DeclStmt 0x21fa709a9b0 <line:422:5, col:35>
|   | |-VarDecl 0x21fa709a828 <col:5, col:11> col:11 used sep_dn 'char *'
|   | |-VarDecl 0x21fa709a8a8 <col:5, col:20> col:20 used sep_mv 'char *'
|   | `-VarDecl 0x21fa709a928 <col:5, col:29> col:29 used sep_eq 'char *'
|   |-DeclStmt 0x21fa709ab68 <line:423:5, col:43>
|   | |-VarDecl 0x21fa709a9e0 <col:5, col:9> col:9 used sep_dn_len 'int'
|   | |-VarDecl 0x21fa709aa60 <col:5, col:21> col:21 used sep_mv_len 'int'
|   | `-VarDecl 0x21fa709aae0 <col:5, col:33> col:33 used sep_eq_len 'int'
|   |-IfStmt 0x21fa709ac80 <line:424:5, line:425:18>
|   | |-BinaryOperator 0x21fa709abf8 <line:424:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x21fa709abe0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21fa709ab80 <col:9> 'int' lvalue ParmVar 0x21fa709cda0 'indent' 'int'
|   | | `-IntegerLiteral 0x21fa709abb8 <col:18> 'int' 0
|   | `-BinaryOperator 0x21fa709ac60 <line:425:9, col:18> 'int' '='
|   |   |-DeclRefExpr 0x21fa709ac18 <col:9> 'int' lvalue ParmVar 0x21fa709cda0 'indent' 'int'
|   |   `-IntegerLiteral 0x21fa709ac38 <col:18> 'int' 0
|   |-BinaryOperator 0x21fa709ad08 <line:426:5, col:14> 'int' '='
|   | |-DeclRefExpr 0x21fa709ac98 <col:5> 'int' lvalue Var 0x21fa709a6f8 'outlen' 'int'
|   | `-ImplicitCastExpr 0x21fa709acf0 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x21fa709acd0 <col:14> 'int' lvalue ParmVar 0x21fa709cda0 'indent' 'int'
|   |-IfStmt 0x21fa709af38 <line:427:5, line:428:17>
|   | |-UnaryOperator 0x21fa709aed0 <line:427:9, col:38> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x21fa709ae50 <col:10, col:38> 'int'
|   | |   |-ImplicitCastExpr 0x21fa709ae38 <col:10> 'int (*)(char_io *, void *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x21fa709ad28 <col:10> 'int (char_io *, void *, int)' Function 0x21fa709c740 'do_indent' 'int (char_io *, void *, int)'
|   | |   |-ImplicitCastExpr 0x21fa709ae88 <col:20> 'char_io *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x21fa709ad48 <col:20> 'char_io *' lvalue ParmVar 0x21fa709cc20 'io_ch' 'char_io *'
|   | |   |-ImplicitCastExpr 0x21fa709aea0 <col:27> 'void *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x21fa709ad80 <col:27> 'void *' lvalue ParmVar 0x21fa709cca0 'arg' 'void *'
|   | |   `-ImplicitCastExpr 0x21fa709aeb8 <col:32> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x21fa709adb8 <col:32> 'int' lvalue ParmVar 0x21fa709cda0 'indent' 'int'
|   | `-ReturnStmt 0x21fa709af28 <line:428:9, col:17>
|   |   `-UnaryOperator 0x21fa709af10 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x21fa709aee8 <col:17> 'int' 1
|   |-IfStmt 0x21fa709bc68 <line:465:5, line:471:5> has_else
|   | |-OpaqueValueExpr 0x21fa709bc50 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x21fa709bb30 <line:465:33, line:468:5>
|   | | |-BinaryOperator 0x21fa709ba90 <line:466:9, col:18> 'char *' '='
|   | | | |-DeclRefExpr 0x21fa709ba20 <col:9> 'char *' lvalue Var 0x21fa709a928 'sep_eq' 'char *'
|   | | | `-ImplicitCastExpr 0x21fa709ba78 <col:18> 'char *' <ArrayToPointerDecay>
|   | | |   `-StringLiteral 0x21fa709ba58 <col:18> 'char [4]' lvalue " = "
|   | | `-BinaryOperator 0x21fa709bb10 <line:467:9, col:22> 'int' '='
|   | |   |-DeclRefExpr 0x21fa709bab0 <col:9> 'int' lvalue Var 0x21fa709aae0 'sep_eq_len' 'int'
|   | |   `-IntegerLiteral 0x21fa709bae8 <col:22> 'int' 3
|   | `-CompoundStmt 0x21fa709bc30 <line:468:12, line:471:5>
|   |   |-BinaryOperator 0x21fa709bba8 <line:469:9, col:18> 'char *' '='
|   |   | |-DeclRefExpr 0x21fa709bb50 <col:9> 'char *' lvalue Var 0x21fa709a928 'sep_eq' 'char *'
|   |   | `-ImplicitCastExpr 0x21fa709bb90 <col:18> 'char *' <ArrayToPointerDecay>
|   |   |   `-StringLiteral 0x21fa709bb70 <col:18> 'char [2]' lvalue "="
|   |   `-BinaryOperator 0x21fa709bc10 <line:470:9, col:22> 'int' '='
|   |     |-DeclRefExpr 0x21fa709bbc8 <col:9> 'int' lvalue Var 0x21fa709aae0 'sep_eq_len' 'int'
|   |     `-IntegerLiteral 0x21fa709bbe8 <col:22> 'int' 1
|   |-ForStmt 0x21fa70a0898 <line:476:5, line:543:5>
|   | |-BinaryOperator 0x21fa709be90 <line:476:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x21fa709be30 <col:10> 'int' lvalue Var 0x21fa709d078 'i' 'int'
|   | | `-IntegerLiteral 0x21fa709be68 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x21fa709bf20 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x21fa709bef0 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x21fa709beb0 <col:17> 'int' lvalue Var 0x21fa709d078 'i' 'int'
|   | | `-ImplicitCastExpr 0x21fa709bf08 <col:21> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x21fa709bed0 <col:21> 'int' lvalue Var 0x21fa709d238 'cnt' 'int'
|   | |-UnaryOperator 0x21fa709bf60 <col:26, col:27> 'int' postfix '++'
|   | | `-DeclRefExpr 0x21fa709bf40 <col:26> 'int' lvalue Var 0x21fa709d078 'i' 'int'
|   | `-CompoundStmt 0x21fa70a0860 <col:31, line:543:5>
|   |   |-IfStmt 0x21fa709db00 <line:481:9, line:494:9>
|   |   | |-BinaryOperator 0x21fa709c250 <line:481:13, col:22> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x21fa709c238 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x21fa709c1c0 <col:13> 'int' lvalue Var 0x21fa709d0f8 'prev' 'int'
|   |   | | `-UnaryOperator 0x21fa709c220 <col:21, col:22> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x21fa709c1f8 <col:22> 'int' 1
|   |   | `-CompoundStmt 0x21fa709dae8 <col:25, line:494:9>
|   |   |   `-IfStmt 0x21fa709dac0 <line:482:13, line:493:13> has_else
|   |   |     |-OpaqueValueExpr 0x21fa709daa8 <<invalid sloc>> '_Bool'
|   |   |     |-CompoundStmt 0x21fa709d600 <line:482:51, line:486:13>
|   |   |     | |-IfStmt 0x21fa709d560 <line:483:17, line:484:29>
|   |   |     | | |-UnaryOperator 0x21fa709c4d0 <line:483:21, col:51> 'int' prefix '!' cannot overflow
|   |   |     | | | `-CallExpr 0x21fa709c438 <col:22, col:51> 'int'
|   |   |     | | |   |-ImplicitCastExpr 0x21fa709c420 <col:22> 'char_io *' <LValueToRValue>
|   |   |     | | |   | `-DeclRefExpr 0x21fa709c3a0 <col:22> 'char_io *' lvalue ParmVar 0x21fa709cc20 'io_ch' 'char_io *'
|   |   |     | | |   |-ImplicitCastExpr 0x21fa709c470 <col:28> 'void *' <LValueToRValue>
|   |   |     | | |   | `-DeclRefExpr 0x21fa709c3c0 <col:28> 'void *' lvalue ParmVar 0x21fa709cca0 'arg' 'void *'
|   |   |     | | |   |-ImplicitCastExpr 0x21fa709c4a0 <col:33> 'const void *' <BitCast>
|   |   |     | | |   | `-ImplicitCastExpr 0x21fa709c488 <col:33> 'char *' <LValueToRValue>
|   |   |     | | |   |   `-DeclRefExpr 0x21fa709c3e0 <col:33> 'char *' lvalue Var 0x21fa709a8a8 'sep_mv' 'char *'
|   |   |     | | |   `-ImplicitCastExpr 0x21fa709c4b8 <col:41> 'int' <LValueToRValue>
|   |   |     | | |     `-DeclRefExpr 0x21fa709c400 <col:41> 'int' lvalue Var 0x21fa709aa60 'sep_mv_len' 'int'
|   |   |     | | `-ReturnStmt 0x21fa709c528 <line:484:21, col:29>
|   |   |     | |   `-UnaryOperator 0x21fa709c510 <col:28, col:29> 'int' prefix '-'
|   |   |     | |     `-IntegerLiteral 0x21fa709c4e8 <col:29> 'int' 1
|   |   |     | `-CompoundAssignOperator 0x21fa709d5d0 <line:485:17, col:27> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |   |-DeclRefExpr 0x21fa709d578 <col:17> 'int' lvalue Var 0x21fa709a6f8 'outlen' 'int'
|   |   |     |   `-ImplicitCastExpr 0x21fa709d5b8 <col:27> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x21fa709d598 <col:27> 'int' lvalue Var 0x21fa709aa60 'sep_mv_len' 'int'
|   |   |     `-CompoundStmt 0x21fa709da78 <line:486:20, line:493:13>
|   |   |       |-IfStmt 0x21fa709d7b8 <line:487:17, line:488:29>
|   |   |       | |-UnaryOperator 0x21fa709d750 <line:487:21, col:51> 'int' prefix '!' cannot overflow
|   |   |       | | `-CallExpr 0x21fa709d6b8 <col:22, col:51> 'int'
|   |   |       | |   |-ImplicitCastExpr 0x21fa709d6a0 <col:22> 'char_io *' <LValueToRValue>
|   |   |       | |   | `-DeclRefExpr 0x21fa709d620 <col:22> 'char_io *' lvalue ParmVar 0x21fa709cc20 'io_ch' 'char_io *'
|   |   |       | |   |-ImplicitCastExpr 0x21fa709d6f0 <col:28> 'void *' <LValueToRValue>
|   |   |       | |   | `-DeclRefExpr 0x21fa709d640 <col:28> 'void *' lvalue ParmVar 0x21fa709cca0 'arg' 'void *'
|   |   |       | |   |-ImplicitCastExpr 0x21fa709d720 <col:33> 'const void *' <BitCast>
|   |   |       | |   | `-ImplicitCastExpr 0x21fa709d708 <col:33> 'char *' <LValueToRValue>
|   |   |       | |   |   `-DeclRefExpr 0x21fa709d660 <col:33> 'char *' lvalue Var 0x21fa709a828 'sep_dn' 'char *'
|   |   |       | |   `-ImplicitCastExpr 0x21fa709d738 <col:41> 'int' <LValueToRValue>
|   |   |       | |     `-DeclRefExpr 0x21fa709d680 <col:41> 'int' lvalue Var 0x21fa709a9e0 'sep_dn_len' 'int'
|   |   |       | `-ReturnStmt 0x21fa709d7a8 <line:488:21, col:29>
|   |   |       |   `-UnaryOperator 0x21fa709d790 <col:28, col:29> 'int' prefix '-'
|   |   |       |     `-IntegerLiteral 0x21fa709d768 <col:29> 'int' 1
|   |   |       |-CompoundAssignOperator 0x21fa709d828 <line:489:17, col:27> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |       | |-DeclRefExpr 0x21fa709d7d0 <col:17> 'int' lvalue Var 0x21fa709a6f8 'outlen' 'int'
|   |   |       | `-ImplicitCastExpr 0x21fa709d810 <col:27> 'int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x21fa709d7f0 <col:27> 'int' lvalue Var 0x21fa709a9e0 'sep_dn_len' 'int'
|   |   |       |-IfStmt 0x21fa709d9d8 <line:490:17, line:491:29>
|   |   |       | |-UnaryOperator 0x21fa709d970 <line:490:21, col:50> 'int' prefix '!' cannot overflow
|   |   |       | | `-CallExpr 0x21fa709d8f0 <col:22, col:50> 'int'
|   |   |       | |   |-ImplicitCastExpr 0x21fa709d8d8 <col:22> 'int (*)(char_io *, void *, int)' <FunctionToPointerDecay>
|   |   |       | |   | `-DeclRefExpr 0x21fa709d858 <col:22> 'int (char_io *, void *, int)' Function 0x21fa709c740 'do_indent' 'int (char_io *, void *, int)'
|   |   |       | |   |-ImplicitCastExpr 0x21fa709d928 <col:32> 'char_io *' <LValueToRValue>
|   |   |       | |   | `-DeclRefExpr 0x21fa709d878 <col:32> 'char_io *' lvalue ParmVar 0x21fa709cc20 'io_ch' 'char_io *'
|   |   |       | |   |-ImplicitCastExpr 0x21fa709d940 <col:39> 'void *' <LValueToRValue>
|   |   |       | |   | `-DeclRefExpr 0x21fa709d898 <col:39> 'void *' lvalue ParmVar 0x21fa709cca0 'arg' 'void *'
|   |   |       | |   `-ImplicitCastExpr 0x21fa709d958 <col:44> 'int' <LValueToRValue>
|   |   |       | |     `-DeclRefExpr 0x21fa709d8b8 <col:44> 'int' lvalue ParmVar 0x21fa709cda0 'indent' 'int'
|   |   |       | `-ReturnStmt 0x21fa709d9c8 <line:491:21, col:29>
|   |   |       |   `-UnaryOperator 0x21fa709d9b0 <col:28, col:29> 'int' prefix '-'
|   |   |       |     `-IntegerLiteral 0x21fa709d988 <col:29> 'int' 1
|   |   |       `-CompoundAssignOperator 0x21fa709da48 <line:492:17, col:27> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |         |-DeclRefExpr 0x21fa709d9f0 <col:17> 'int' lvalue Var 0x21fa709a6f8 'outlen' 'int'
|   |   |         `-ImplicitCastExpr 0x21fa709da30 <col:27> 'int' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x21fa709da10 <col:27> 'int' lvalue ParmVar 0x21fa709cda0 'indent' 'int'
|   |   |-IfStmt 0x21fa70a0478 <line:499:9, line:528:9>
|   |   | |-OpaqueValueExpr 0x21fa70a0460 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x21fa70a0418 <line:499:40, line:528:9>
|   |   |   |-DeclStmt 0x21fa709dff8 <line:500:13, col:32>
|   |   |   | |-VarDecl 0x21fa709def8 <col:13, col:17> col:17 used objlen 'int'
|   |   |   | `-VarDecl 0x21fa709df78 <col:13, col:25> col:25 used fld_len 'int'
|   |   |   |-IfStmt 0x21fa709faa0 <line:501:13, line:516:13> has_else
|   |   |   | |-OpaqueValueExpr 0x21fa709fa88 <<invalid sloc>> '_Bool'
|   |   |   | |-CompoundStmt 0x21fa709e348 <line:501:70, line:505:13>
|   |   |   | | |-BinaryOperator 0x21fa709e280 <line:503:17, col:27> 'int' '='
|   |   |   | | | |-DeclRefExpr 0x21fa709e220 <col:17> 'int' lvalue Var 0x21fa709df78 'fld_len' 'int'
|   |   |   | | | `-IntegerLiteral 0x21fa709e258 <col:27> 'int' 0
|   |   |   | | `-BinaryOperator 0x21fa709e328 <line:504:17, col:26> 'const char *' '='
|   |   |   | |   |-DeclRefExpr 0x21fa709e2a0 <col:17> 'const char *' lvalue Var 0x21fa709a660 'objbuf' 'const char *'
|   |   |   | |   `-ImplicitCastExpr 0x21fa709e310 <col:26> 'const char *' <NoOp>
|   |   |   | |     `-ImplicitCastExpr 0x21fa709e2f8 <col:26> 'char *' <ArrayToPointerDecay>
|   |   |   | |       `-DeclRefExpr 0x21fa709e2d8 <col:26> 'char [80]' lvalue Var 0x21fa709a5c8 'objtmp' 'char [80]'
|   |   |   | `-CompoundStmt 0x21fa709fa70 <line:505:20, line:516:13>
|   |   |   |   `-IfStmt 0x21fa709fa48 <line:506:17, line:515:17> has_else
|   |   |   |     |-OpaqueValueExpr 0x21fa709fa30 <<invalid sloc>> '_Bool'
|   |   |   |     |-CompoundStmt 0x21fa709f5f8 <line:506:46, line:509:17>
|   |   |   |     | |-BinaryOperator 0x21fa709e3d0 <line:507:21, line:409:25> 'int' '='
|   |   |   |     | | |-DeclRefExpr 0x21fa709e388 <line:507:21> 'int' lvalue Var 0x21fa709df78 'fld_len' 'int'
|   |   |   |     | | `-IntegerLiteral 0x21fa709e3a8 <line:409:25> 'int' 10
|   |   |   |     | `-BinaryOperator 0x21fa709f5d8 <line:508:21, col:47> 'const char *' '='
|   |   |   |     |   |-DeclRefExpr 0x21fa709e3f0 <col:21> 'const char *' lvalue Var 0x21fa709a660 'objbuf' 'const char *'
|   |   |   |     |   `-ImplicitCastExpr 0x21fa709f5c0 <col:30, col:47> 'const char *' <IntegralToPointer>
|   |   |   |     |     `-CallExpr 0x21fa709f580 <col:30, col:47> 'int'
|   |   |   |     |       |-ImplicitCastExpr 0x21fa709e540 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     |       | `-DeclRefExpr 0x21fa709e500 <col:30> 'int ()' Function 0x21fa709e438 'OBJ_nid2sn' 'int ()'
|   |   |   |     |       `-ImplicitCastExpr 0x21fa709f5a8 <col:41> 'int' <LValueToRValue>
|   |   |   |     |         `-DeclRefExpr 0x21fa709e520 <col:41> 'int' lvalue Var 0x21fa709d378 'fn_nid' 'int'
|   |   |   |     `-IfStmt 0x21fa709fa08 <line:509:24, line:515:17> has_else
|   |   |   |       |-OpaqueValueExpr 0x21fa709f9f0 <<invalid sloc>> '_Bool'
|   |   |   |       |-CompoundStmt 0x21fa709f880 <line:509:53, line:512:17>
|   |   |   |       | |-BinaryOperator 0x21fa709f680 <line:510:21, line:408:25> 'int' '='
|   |   |   |       | | |-DeclRefExpr 0x21fa709f638 <line:510:21> 'int' lvalue Var 0x21fa709df78 'fld_len' 'int'
|   |   |   |       | | `-IntegerLiteral 0x21fa709f658 <line:408:25> 'int' 25
|   |   |   |       | `-BinaryOperator 0x21fa709f860 <line:511:21, col:47> 'const char *' '='
|   |   |   |       |   |-DeclRefExpr 0x21fa709f6a0 <col:21> 'const char *' lvalue Var 0x21fa709a660 'objbuf' 'const char *'
|   |   |   |       |   `-ImplicitCastExpr 0x21fa709f848 <col:30, col:47> 'const char *' <IntegralToPointer>
|   |   |   |       |     `-CallExpr 0x21fa709f808 <col:30, col:47> 'int'
|   |   |   |       |       |-ImplicitCastExpr 0x21fa709f7f0 <col:30> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |       |       | `-DeclRefExpr 0x21fa709f7b0 <col:30> 'int ()' Function 0x21fa709f6e8 'OBJ_nid2ln' 'int ()'
|   |   |   |       |       `-ImplicitCastExpr 0x21fa709f830 <col:41> 'int' <LValueToRValue>
|   |   |   |       |         `-DeclRefExpr 0x21fa709f7d0 <col:41> 'int' lvalue Var 0x21fa709d378 'fn_nid' 'int'
|   |   |   |       `-CompoundStmt 0x21fa709f9d0 <line:512:24, line:515:17>
|   |   |   |         |-BinaryOperator 0x21fa709f8e8 <line:513:21, col:31> 'int' '='
|   |   |   |         | |-DeclRefExpr 0x21fa709f8a0 <col:21> 'int' lvalue Var 0x21fa709df78 'fld_len' 'int'
|   |   |   |         | `-IntegerLiteral 0x21fa709f8c0 <col:31> 'int' 0
|   |   |   |         `-BinaryOperator 0x21fa709f9b0 <line:514:21, col:30> 'const char *' '='
|   |   |   |           |-DeclRefExpr 0x21fa709f908 <col:21> 'const char *' lvalue Var 0x21fa709a660 'objbuf' 'const char *'
|   |   |   |           `-ImplicitCastExpr 0x21fa709f998 <col:30> 'const char *' <NoOp>
|   |   |   |             `-ImplicitCastExpr 0x21fa709f980 <col:30> 'char *' <ArrayToPointerDecay>
|   |   |   |               `-StringLiteral 0x21fa709f968 <col:30> 'char [1]' lvalue ""
|   |   |   |-BinaryOperator 0x21fa709fbc8 <line:517:13, col:35> 'int' '='
|   |   |   | |-DeclRefExpr 0x21fa709fac8 <col:13> 'int' lvalue Var 0x21fa709def8 'objlen' 'int'
|   |   |   | `-ImplicitCastExpr 0x21fa709fbb0 <col:22, col:35> 'int' <IntegralCast>
|   |   |   |   `-CallExpr 0x21fa709fb70 <col:22, col:35> 'unsigned long long'
|   |   |   |     |-ImplicitCastExpr 0x21fa709fb58 <col:22> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x21fa709fb00 <col:22> 'unsigned long long (const char *)' Function 0x21fa706ce80 'strlen' 'unsigned long long (const char *)'
|   |   |   |     `-ImplicitCastExpr 0x21fa709fb98 <col:29> 'const char *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x21fa709fb20 <col:29> 'const char *' lvalue Var 0x21fa709a660 'objbuf' 'const char *'
|   |   |   |-IfStmt 0x21fa709fd80 <line:518:13, line:519:25>
|   |   |   | |-UnaryOperator 0x21fa709fd18 <line:518:17, col:43> 'int' prefix '!' cannot overflow
|   |   |   | | `-CallExpr 0x21fa709fc80 <col:18, col:43> 'int'
|   |   |   | |   |-ImplicitCastExpr 0x21fa709fc68 <col:18> 'char_io *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x21fa709fbe8 <col:18> 'char_io *' lvalue ParmVar 0x21fa709cc20 'io_ch' 'char_io *'
|   |   |   | |   |-ImplicitCastExpr 0x21fa709fcb8 <col:24> 'void *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x21fa709fc08 <col:24> 'void *' lvalue ParmVar 0x21fa709cca0 'arg' 'void *'
|   |   |   | |   |-ImplicitCastExpr 0x21fa709fce8 <col:29> 'const void *' <BitCast>
|   |   |   | |   | `-ImplicitCastExpr 0x21fa709fcd0 <col:29> 'const char *' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x21fa709fc28 <col:29> 'const char *' lvalue Var 0x21fa709a660 'objbuf' 'const char *'
|   |   |   | |   `-ImplicitCastExpr 0x21fa709fd00 <col:37> 'int' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x21fa709fc48 <col:37> 'int' lvalue Var 0x21fa709def8 'objlen' 'int'
|   |   |   | `-ReturnStmt 0x21fa709fd70 <line:519:17, col:25>
|   |   |   |   `-UnaryOperator 0x21fa709fd58 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x21fa709fd30 <col:25> 'int' 1
|   |   |   |-IfStmt 0x21fa70a0170 <line:520:13, line:524:13>
|   |   |   | |-OpaqueValueExpr 0x21fa70a0158 <<invalid sloc>> '_Bool'
|   |   |   | `-CompoundStmt 0x21fa70a0138 <line:520:67, line:524:13>
|   |   |   |   |-IfStmt 0x21fa70a0040 <line:521:17, line:522:29>
|   |   |   |   | |-UnaryOperator 0x21fa709ffd8 <line:521:21, col:60> 'int' prefix '!' cannot overflow
|   |   |   |   | | `-CallExpr 0x21fa709ff70 <col:22, col:60> 'int'
|   |   |   |   | |   |-ImplicitCastExpr 0x21fa709ff58 <col:22> 'int (*)(char_io *, void *, int)' <FunctionToPointerDecay>
|   |   |   |   | |   | `-DeclRefExpr 0x21fa709fe68 <col:22> 'int (char_io *, void *, int)' Function 0x21fa709c740 'do_indent' 'int (char_io *, void *, int)'
|   |   |   |   | |   |-ImplicitCastExpr 0x21fa709ffa8 <col:32> 'char_io *' <LValueToRValue>
|   |   |   |   | |   | `-DeclRefExpr 0x21fa709fe88 <col:32> 'char_io *' lvalue ParmVar 0x21fa709cc20 'io_ch' 'char_io *'
|   |   |   |   | |   |-ImplicitCastExpr 0x21fa709ffc0 <col:39> 'void *' <LValueToRValue>
|   |   |   |   | |   | `-DeclRefExpr 0x21fa709fea8 <col:39> 'void *' lvalue ParmVar 0x21fa709cca0 'arg' 'void *'
|   |   |   |   | |   `-BinaryOperator 0x21fa709ff38 <col:44, col:54> 'int' '-'
|   |   |   |   | |     |-ImplicitCastExpr 0x21fa709ff08 <col:44> 'int' <LValueToRValue>
|   |   |   |   | |     | `-DeclRefExpr 0x21fa709fec8 <col:44> 'int' lvalue Var 0x21fa709df78 'fld_len' 'int'
|   |   |   |   | |     `-ImplicitCastExpr 0x21fa709ff20 <col:54> 'int' <LValueToRValue>
|   |   |   |   | |       `-DeclRefExpr 0x21fa709fee8 <col:54> 'int' lvalue Var 0x21fa709def8 'objlen' 'int'
|   |   |   |   | `-ReturnStmt 0x21fa70a0030 <line:522:21, col:29>
|   |   |   |   |   `-UnaryOperator 0x21fa70a0018 <col:28, col:29> 'int' prefix '-'
|   |   |   |   |     `-IntegerLiteral 0x21fa709fff0 <col:29> 'int' 1
|   |   |   |   `-CompoundAssignOperator 0x21fa70a0108 <line:523:17, col:37> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |     |-DeclRefExpr 0x21fa70a0058 <col:17> 'int' lvalue Var 0x21fa709a6f8 'outlen' 'int'
|   |   |   |     `-BinaryOperator 0x21fa70a00e8 <col:27, col:37> 'int' '-'
|   |   |   |       |-ImplicitCastExpr 0x21fa70a00b8 <col:27> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x21fa70a0078 <col:27> 'int' lvalue Var 0x21fa709df78 'fld_len' 'int'
|   |   |   |       `-ImplicitCastExpr 0x21fa70a00d0 <col:37> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x21fa70a0098 <col:37> 'int' lvalue Var 0x21fa709def8 'objlen' 'int'
|   |   |   |-IfStmt 0x21fa70a0320 <line:525:13, line:526:25>
|   |   |   | |-UnaryOperator 0x21fa70a02b8 <line:525:17, col:47> 'int' prefix '!' cannot overflow
|   |   |   | | `-CallExpr 0x21fa70a0220 <col:18, col:47> 'int'
|   |   |   | |   |-ImplicitCastExpr 0x21fa70a0208 <col:18> 'char_io *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x21fa70a0188 <col:18> 'char_io *' lvalue ParmVar 0x21fa709cc20 'io_ch' 'char_io *'
|   |   |   | |   |-ImplicitCastExpr 0x21fa70a0258 <col:24> 'void *' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x21fa70a01a8 <col:24> 'void *' lvalue ParmVar 0x21fa709cca0 'arg' 'void *'
|   |   |   | |   |-ImplicitCastExpr 0x21fa70a0288 <col:29> 'const void *' <BitCast>
|   |   |   | |   | `-ImplicitCastExpr 0x21fa70a0270 <col:29> 'char *' <LValueToRValue>
|   |   |   | |   |   `-DeclRefExpr 0x21fa70a01c8 <col:29> 'char *' lvalue Var 0x21fa709a928 'sep_eq' 'char *'
|   |   |   | |   `-ImplicitCastExpr 0x21fa70a02a0 <col:37> 'int' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x21fa70a01e8 <col:37> 'int' lvalue Var 0x21fa709aae0 'sep_eq_len' 'int'
|   |   |   | `-ReturnStmt 0x21fa70a0310 <line:526:17, col:25>
|   |   |   |   `-UnaryOperator 0x21fa70a02f8 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x21fa70a02d0 <col:25> 'int' 1
|   |   |   `-CompoundAssignOperator 0x21fa70a03e8 <line:527:13, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x21fa70a0338 <col:13> 'int' lvalue Var 0x21fa709a6f8 'outlen' 'int'
|   |   |     `-BinaryOperator 0x21fa70a03c8 <col:23, col:32> 'int' '+'
|   |   |       |-ImplicitCastExpr 0x21fa70a0398 <col:23> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x21fa70a0358 <col:23> 'int' lvalue Var 0x21fa709def8 'objlen' 'int'
|   |   |       `-ImplicitCastExpr 0x21fa70a03b0 <col:32> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x21fa70a0378 <col:32> 'int' lvalue Var 0x21fa709aae0 'sep_eq_len' 'int'
|   |   |-IfStmt 0x21fa70a05a8 <line:534:9, line:537:23> has_else
|   |   | |-OpaqueValueExpr 0x21fa70a0590 <<invalid sloc>> '_Bool'
|   |   | |-NullStmt 0x21fa70a0570 <line:535:13>
|   |   | `-BinaryOperator 0x21fa70a0550 <line:537:13, col:23> 'int' '='
|   |   |   |-DeclRefExpr 0x21fa70a0508 <col:13> 'int' lvalue Var 0x21fa709d1b8 'orflags' 'int'
|   |   |   `-IntegerLiteral 0x21fa70a0528 <col:23> 'int' 0
|   |   |-IfStmt 0x21fa70a07c0 <line:540:9, line:541:21>
|   |   | |-BinaryOperator 0x21fa70a0750 <line:540:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x21fa70a0738 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x21fa70a06f0 <col:13> 'int' lvalue Var 0x21fa709a778 'len' 'int'
|   |   | | `-IntegerLiteral 0x21fa70a0710 <col:19> 'int' 0
|   |   | `-ReturnStmt 0x21fa70a07b0 <line:541:13, col:21>
|   |   |   `-UnaryOperator 0x21fa70a0798 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x21fa70a0770 <col:21> 'int' 1
|   |   `-CompoundAssignOperator 0x21fa70a0830 <line:542:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x21fa70a07d8 <col:9> 'int' lvalue Var 0x21fa709a6f8 'outlen' 'int'
|   |     `-ImplicitCastExpr 0x21fa70a0818 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x21fa70a07f8 <col:19> 'int' lvalue Var 0x21fa709a778 'len' 'int'
|   `-ReturnStmt 0x21fa70a0908 <line:544:5, col:12>
|     `-ImplicitCastExpr 0x21fa70a08f0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x21fa70a08d0 <col:12> 'int' lvalue Var 0x21fa709a6f8 'outlen' 'int'
|-FunctionDecl 0x21fa70a0c30 <line:549:1, line:555:1> line:549:5 invalid X509_NAME_print_ex 'int (int *, const int *, int, unsigned long)'
| |-ParmVarDecl 0x21fa70a09b8 <col:24, col:29> col:29 invalid out 'int *'
| |-ParmVarDecl 0x21fa70a0a38 <col:34, col:51> col:51 invalid nm 'const int *'
| |-ParmVarDecl 0x21fa70a0ab8 <col:55, col:59> col:59 used indent 'int'
| |-ParmVarDecl 0x21fa70a0b38 <line:550:24, col:38> col:38 used flags 'unsigned long'
| `-CompoundStmt 0x21fa70a0ee8 <line:551:1, line:555:1>
|-FunctionDecl 0x21fa70a11d0 <line:558:1, line:572:1> line:558:5 invalid X509_NAME_print_ex_fp 'int (FILE *, const int *, int, unsigned long)'
| |-ParmVarDecl 0x21fa70a0f08 <col:27, col:33> col:33 used fp 'FILE *'
| |-ParmVarDecl 0x21fa70a0f88 <col:37, col:54> col:54 invalid nm 'const int *'
| |-ParmVarDecl 0x21fa70a1008 <col:58, col:62> col:62 used indent 'int'
| |-ParmVarDecl 0x21fa70a1088 <line:559:27, col:41> col:41 used flags 'unsigned long'
| `-CompoundStmt 0x21fa70997a8 <line:560:1, line:572:1>
|   `-IfStmt 0x21fa7099710 <line:561:5, line:570:5>
|     |-OpaqueValueExpr 0x21fa70996f8 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x21fa70996d0 <line:561:34, line:570:5>
|       |-DeclStmt 0x21fa70a1360 <line:563:9, col:16>
|       | `-VarDecl 0x21fa70a12f8 <col:9, col:13> col:13 used ret 'int'
|       |-IfStmt 0x21fa70a1528 <line:565:9, line:566:21>
|       | |-OpaqueValueExpr 0x21fa70a1510 <<invalid sloc>> '_Bool'
|       | `-ReturnStmt 0x21fa70a1500 <col:13, col:21>
|       |   `-UnaryOperator 0x21fa70a14e8 <col:20, col:21> 'int' prefix '-'
|       |     `-IntegerLiteral 0x21fa70a14c0 <col:21> 'int' 1
|       `-ReturnStmt 0x21fa70996c0 <line:569:9, col:16>
|         `-ImplicitCastExpr 0x21fa70996a8 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x21fa7099688 <col:16> 'int' lvalue Var 0x21fa70a12f8 'ret' 'int'
|-FunctionDecl 0x21fa70999c0 <line:575:1, line:578:1> line:575:5 invalid ASN1_STRING_print_ex 'int (int *, const int *, unsigned long)'
| |-ParmVarDecl 0x21fa70997d8 <col:26, col:31> col:31 invalid out 'int *'
| |-ParmVarDecl 0x21fa7099858 <col:36, col:55> col:55 invalid str 'const int *'
| |-ParmVarDecl 0x21fa70998d8 <col:60, col:74> col:74 used flags 'unsigned long'
| `-CompoundStmt 0x21fa7099ae8 <line:576:1, line:578:1>
|-FunctionDecl 0x21fa7099d30 <line:581:1, line:584:1> line:581:5 invalid ASN1_STRING_print_ex_fp 'int (FILE *, const int *, unsigned long)'
| |-ParmVarDecl 0x21fa7099b08 <col:29, col:35> col:35 used fp 'FILE *'
| |-ParmVarDecl 0x21fa7099b88 <col:39, col:58> col:58 invalid str 'const int *'
| |-ParmVarDecl 0x21fa7099c08 <col:63, col:77> col:77 used flags 'unsigned long'
| `-CompoundStmt 0x21fa7099e90 <line:582:1, line:584:1>
`-FunctionDecl 0x21fa709a020 <line:592:1, line:615:1> line:592:5 invalid ASN1_STRING_to_UTF8 'int (unsigned char **, const int *)'
  |-ParmVarDecl 0x21fa7099ec0 <col:25, col:41> col:41 used out 'unsigned char **'
  |-ParmVarDecl 0x21fa7099f40 <col:46, col:65> col:65 invalid in 'const int *'
  `-CompoundStmt 0x21fa70a1b60 <line:593:1, line:615:1>
    |-DeclStmt 0x21fa709a288 <line:595:5, col:26>
    | |-VarDecl 0x21fa709a100 <col:5, col:9> col:9 used mbflag 'int'
    | |-VarDecl 0x21fa709a180 <col:5, col:17> col:17 used type 'int'
    | `-VarDecl 0x21fa709a200 <col:5, col:23> col:23 used ret 'int'
    |-IfStmt 0x21fa709a308 <line:596:5, line:597:17>
    | |-OpaqueValueExpr 0x21fa709a2f0 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x21fa709a2e0 <col:9, col:17>
    |   `-UnaryOperator 0x21fa709a2c8 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x21fa709a2a0 <col:17> 'int' 1
    |-IfStmt 0x21fa709a508 <line:599:5, line:600:17>
    | |-BinaryOperator 0x21fa709a498 <line:599:9, col:33> 'int' '||'
    | | |-ParenExpr 0x21fa709a3d8 <col:9, col:18> 'int'
    | | | `-BinaryOperator 0x21fa709a3b8 <col:10, col:17> 'int' '<'
    | | |   |-ImplicitCastExpr 0x21fa709a3a0 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x21fa709a358 <col:10> 'int' lvalue Var 0x21fa709a180 'type' 'int'
    | | |   `-IntegerLiteral 0x21fa709a378 <col:17> 'int' 0
    | | `-ParenExpr 0x21fa709a478 <col:23, col:33> 'int'
    | |   `-BinaryOperator 0x21fa709a458 <col:24, col:31> 'int' '>'
    | |     |-ImplicitCastExpr 0x21fa709a440 <col:24> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x21fa709a3f8 <col:24> 'int' lvalue Var 0x21fa709a180 'type' 'int'
    | |     `-IntegerLiteral 0x21fa709a418 <col:31> 'int' 30
    | `-ReturnStmt 0x21fa709a4f8 <line:600:9, col:17>
    |   `-UnaryOperator 0x21fa709a4e0 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x21fa709a4b8 <col:17> 'int' 1
    |-BinaryOperator 0x21fa70a1698 <line:601:5, col:28> 'int' '='
    | |-DeclRefExpr 0x21fa70a15a0 <col:5> 'int' lvalue Var 0x21fa709a100 'mbflag' 'int'
    | `-ImplicitCastExpr 0x21fa70a1680 <col:14, col:28> 'int' <IntegralCast>
    |   `-ImplicitCastExpr 0x21fa70a1668 <col:14, col:28> 'signed char' <LValueToRValue>
    |     `-ArraySubscriptExpr 0x21fa70a1648 <col:14, col:28> 'const signed char' lvalue
    |       |-ImplicitCastExpr 0x21fa70a1618 <col:14> 'const signed char *' <ArrayToPointerDecay>
    |       | `-DeclRefExpr 0x21fa70a15d8 <col:14> 'const signed char [31]' lvalue Var 0x21fa7094f20 'tag2nbyte' 'const signed char [31]'
    |       `-ImplicitCastExpr 0x21fa70a1630 <col:24> 'int' <LValueToRValue>
    |         `-DeclRefExpr 0x21fa70a15f8 <col:24> 'int' lvalue Var 0x21fa709a180 'type' 'int'
    |-IfStmt 0x21fa70a17a0 <line:602:5, line:603:17>
    | |-BinaryOperator 0x21fa70a1730 <line:602:9, col:20> 'int' '=='
    | | |-ImplicitCastExpr 0x21fa70a1718 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x21fa70a16b8 <col:9> 'int' lvalue Var 0x21fa709a100 'mbflag' 'int'
    | | `-UnaryOperator 0x21fa70a1700 <col:19, col:20> 'int' prefix '-'
    | |   `-IntegerLiteral 0x21fa70a16d8 <col:20> 'int' 1
    | `-ReturnStmt 0x21fa70a1790 <line:603:9, col:17>
    |   `-UnaryOperator 0x21fa70a1778 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x21fa70a1750 <col:17> 'int' 1
    `-IfStmt 0x21fa70a1ae0 <line:611:5, line:612:16>
      |-BinaryOperator 0x21fa70a1a78 <line:611:9, col:15> 'int' '<'
      | |-ImplicitCastExpr 0x21fa70a1a60 <col:9> 'int' <LValueToRValue>
      | | `-DeclRefExpr 0x21fa70a1a18 <col:9> 'int' lvalue Var 0x21fa709a200 'ret' 'int'
      | `-IntegerLiteral 0x21fa70a1a38 <col:15> 'int' 0
      `-ReturnStmt 0x21fa70a1ad0 <line:612:9, col:16>
        `-ImplicitCastExpr 0x21fa70a1ab8 <col:16> 'int' <LValueToRValue>
          `-DeclRefExpr 0x21fa70a1a98 <col:16> 'int' lvalue Var 0x21fa709a200 'ret' 'int'
