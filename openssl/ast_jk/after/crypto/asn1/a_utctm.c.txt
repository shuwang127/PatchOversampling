TranslationUnitDecl 0x1c7a61c4098 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1c7a61c4930 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1c7a61c4630 '__int128'
|-TypedefDecl 0x1c7a61c49a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1c7a61c4650 'unsigned __int128'
|-TypedefDecl 0x1c7a61c4cd8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1c7a61c4a90 'struct __NSConstantString_tag'
|   `-Record 0x1c7a61c49f8 '__NSConstantString_tag'
|-TypedefDecl 0x1c7a61c4d48 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1c7a61c4270 'unsigned long long'
|-TypedefDecl 0x1c7a61c4de0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1c7a61c4da0 'char *'
|   `-BuiltinType 0x1c7a61c4130 'char'
|-TypedefDecl 0x1c7a61c4e50 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1c7a61c4da0 'char *'
|   `-BuiltinType 0x1c7a61c4130 'char'
|-TypedefDecl 0x1c7a61c4f10 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1c7a61c4270 'unsigned long long'
|-TypedefDecl 0x1c7a61c4f80 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1c7a61c4da0 'char *'
|   `-BuiltinType 0x1c7a61c4130 'char'
|-FunctionDecl 0x1c7a7bf0430 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c7a7bf04d0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1c7a7bf0540 <col:21> Implicit
|-FunctionDecl 0x1c7a7bf0598 prev 0x1c7a7bf0430 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c7a7bf02c0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1c7a7bf0688 <col:21> Inherited Implicit
|-TypedefDecl 0x1c7a7bf06c8 prev 0x1c7a61c4d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1c7a61c4270 'unsigned long long'
|-TypedefDecl 0x1c7a7bf0770 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1c7a7bf0740 'size_t' sugar
|   |-Typedef 0x1c7a7bf06c8 'size_t'
|   `-BuiltinType 0x1c7a61c4270 'unsigned long long'
|-TypedefDecl 0x1c7a7bf07e0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1c7a61c41d0 'long long'
|-TypedefDecl 0x1c7a7bf0850 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1c7a61c41d0 'long long'
|-TypedefDecl 0x1c7a7bf08c0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1c7a61c4210 'unsigned short'
|-TypedefDecl 0x1c7a7bf0930 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1c7a61c4210 'unsigned short'
|-TypedefDecl 0x1c7a7bf09a0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1c7a61c4210 'unsigned short'
|-TypedefDecl 0x1c7a7bf0a10 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1c7a61c4190 'int'
|-TypedefDecl 0x1c7a7bf0a80 <line:567:1, col:19> col:19 referenced __time32_t 'long'
| `-BuiltinType 0x1c7a61c41b0 'long'
|-TypedefDecl 0x1c7a7bf0af0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1c7a61c41d0 'long long'
|-TypedefDecl 0x1c7a7bf0b80 <line:580:1, col:20> col:20 referenced time_t '__time64_t':'long long'
| `-TypedefType 0x1c7a7bf0b50 '__time64_t' sugar
|   |-Typedef 0x1c7a7bf0af0 '__time64_t'
|   `-BuiltinType 0x1c7a61c41d0 'long long'
|-FunctionDecl 0x1c7a7bf0cf8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1c7a7bf0f18 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1c7a7c2d810 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1c7a7bf1058 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7bf10d0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7bf1148 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7bf11c8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1c7a7c2d5b0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1c7a7c2d8f0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1c7a7c2d9b0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1c7a7c2db20 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1c7a7c2dad0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1c7a7c2da70 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1c7a7c2d990 'struct threadlocaleinfostruct'
|       `-Record 0x1c7a7c32600 'threadlocaleinfostruct'
|-TypedefDecl 0x1c7a7c2dc30 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1c7a7c2dbe0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1c7a7c2db80 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1c7a7c2da50 'struct threadmbcinfostruct'
|       `-Record 0x1c7a7c2d9b0 'threadmbcinfostruct'
|-RecordDecl 0x1c7a7c2dc88 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1c7a7c2dd40 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1c7a7c2de00 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c7a7c2de90 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1c7a7c2df20 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1c7a7c2dfd8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1c7a7c2df80 'struct localeinfo_struct' sugar
|   `-RecordType 0x1c7a7c2dde0 'struct localeinfo_struct'
|     `-Record 0x1c7a7c2dd40 'localeinfo_struct'
|-TypedefDecl 0x1c7a7c2e0b0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1c7a7c2e060 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1c7a7c2df80 'struct localeinfo_struct' sugar
|     `-RecordType 0x1c7a7c2dde0 'struct localeinfo_struct'
|       `-Record 0x1c7a7c2dd40 'localeinfo_struct'
|-RecordDecl 0x1c7a7c2e128 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1c7a7c2e1e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c7a7c2e258 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1c7a7c2e318 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1c7a7c2e3b0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1c7a7c2e420 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1c7a7c2e4d8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1c7a7c2e480 'struct localerefcount' sugar
|   `-RecordType 0x1c7a7c2e1c0 'struct localerefcount'
|     `-Record 0x1c7a7c2e128 'localerefcount'
|-RecordDecl 0x1c7a7c32600 prev 0x1c7a7c2d8f0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1c7a7c32680 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c7a7c326f8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1c7a7c32768 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1c7a7c327d8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1c7a7c32848 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1c7a7c32a08 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1c7a7c32a78 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1c7a7c32ae8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1c7a7c32b58 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1c7a7c32bc8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1c7a7c32c38 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1c7a7c32c90 parent 0x1c7a61c4098 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1c7a7c32e20 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1c7a7c32e90 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1c7a7c32f00 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1c7a7c32f70 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1c7a7c33010 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1c7a7c33080 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1c7a7c33190 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1c7a7c332c8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1c7a7c33378 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1c7a7c33320 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1c7a7c2d990 'struct threadlocaleinfostruct'
|     `-Record 0x1c7a7c32600 'threadlocaleinfostruct'
|-RecordDecl 0x1c7a7c33410 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1c7a7c334d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c7a7c33548 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1c7a7c33610 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1c7a7c33680 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1c7a7c336f0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1c7a7c33760 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1c7a7c337d0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1c7a7c33840 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1c7a7c338b0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1c7a7c33960 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1c7a7c33910 'struct _iobuf' sugar
|   `-RecordType 0x1c7a7c334b0 'struct _iobuf'
|     `-Record 0x1c7a7c33410 '_iobuf'
|-FunctionDecl 0x1c7a7c33b98 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1c7a7c33c68 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1c7a61c41d0 'long long'
|-FunctionDecl 0x1c7a7c33e48 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7c33cd0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1c7a7c34140 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c7a7c33f20 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1c7a7c33f98 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1c7a7c344f0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1c7a7c34220 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1c7a7c342a0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1c7a7c34320 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1c7a7c3b800 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c7a7c3b690 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1c7a7c3ba30 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1c7a7c3b8f0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1c7a7c3bbe0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7c3bb00 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1c7a7c3bdd0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c7a7c3c0c8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1c7a7c3bea0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1c7a7c3bf20 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1c7a7c3c280 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7c3c1a0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1c7a7c3c430 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7c3c350 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1c7a7c3c5e0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7c3c500 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1c7a7c39778 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7c39698 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1c7a7c39908 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c7a7c39c70 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1c7a7c399d0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1c7a7c39ac8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1c7a7c3a028 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1c7a7c39d50 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1c7a7c39dd0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1c7a7c39e48 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1c7a7c3a1e8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7c3a108 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1c7a7c3a4b0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1c7a7c3a2c0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1c7a7c3a340 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1c7a7c3a680 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c7a7c3aa78 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1c7a7c3ab18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1c7a7c3ab80 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1c7a7c3abf8 prev 0x1c7a7c3aa78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1c7a7c3a850 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1c7a7c3a8d0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1c7a7c3aca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c3b120 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1c7a7c3ae50 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1c7a7c3aed0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1c7a7c3af50 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1c7a7c3b440 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1c7a7c3b4e0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1c7a7c3b548 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c7a7c3b5c0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1c7a7c3c6a0 prev 0x1c7a7c3b440 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c3b200 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c3b280 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1c7a7c3c798 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1c7a7c3c960 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c3c7e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1c7a7c3c860 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1c7a7c3cbb8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c7a7c3ca40 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1c7a7c3cab8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1c7a7c3cde8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c7a7c3cc98 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1c7a7c3d0e0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1c7a7c3cec0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1c7a7c3cf38 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1c7a7c3d578 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1c7a7c3d618 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1c7a7c35630 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c7a7c35698 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1c7a7c35700 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1c7a7c35788 prev 0x1c7a7c3d578 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1c7a7c3d1c0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1c7a7c3d238 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c3d2b0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7c3d328 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1c7a7c35c90 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c7a7c35878 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1c7a7c358f0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c35968 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c359e0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7c35a58 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1c7a7c36150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1c7a7c35e80 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1c7a7c35f00 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1c7a7c35f78 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1c7a7c36208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c3e768 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1c7a7c36350 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1c7a7c363d0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1c7a7c36450 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1c7a7c364c8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1c7a7c3eb10 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c7a7c3ebb0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1c7a7c3ec18 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c7a7c3ec90 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1c7a7c3ecf8 prev 0x1c7a7c3eb10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1c7a7c3e948 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c3e9c8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1c7a7c3eed8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1c7a7c3eda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c3f318 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c3f018 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c3f098 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c3f130 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c7a7c3f3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c3d6b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c3f510 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1c7a7c3f590 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1c7a7c3d9a0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c3d788 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c3d808 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c3d880 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7c3dd00 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1c7a7c3da80 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1c7a7c3db58 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1c7a7c3e0b8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1c7a7c3ddd8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c3de58 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1c7a7c3ded8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1c7a7c3e318 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1c7a7c3e198 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1c7a7c3f718 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1c7a7c3e3e8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c3e468 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1c7a7c3e4e8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1c7a7c3f978 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1c7a7c3f7f8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1c7a7c3fe38 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1c7a7c3fed8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1c7a7c3ff40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c7a7c3ffa8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1c7a7c40010 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1c7a7c40098 prev 0x1c7a7c3fe38 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1c7a7c3fa80 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1c7a7c3faf8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c3fb70 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7c3fbe8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1c7a7c40260 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7c40180 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1c7a7c403f0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c7a7c40578 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c7a7c418b0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1c7a7c40648 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1c7a7c41700 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1c7a7c41bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c7a7c41a90 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1c7a7c41c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c41ea0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7c41dc0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1c7a7c420c0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1c7a7c41f78 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1c7a7c42270 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7c42190 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1c7a7c424c0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1c7a7c42348 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1c7a7c423c8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1c7a7c42700 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1c7a7c427a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c7a7c42810 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1c7a7c42878 prev 0x1c7a7c42700 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1c7a7c425a0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1c7a7c42968 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1c7a7c42a98 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c7a7c429b8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1c7a7c42ce8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c7a7c42b70 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1c7a7c42be8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1c7a7c42ea8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c7a7c42dc8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1c7a7c430c8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c7a7c42f80 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1c7a7c43318 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c7a7c431a0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1c7a7c43218 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1c7a7c434d8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c7a7c433f8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1c7a7c8e020 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1c7a7c435b0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1c7a7c43630 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1c7a7c8e1e0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c7a7c8e100 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1c7a7c8e470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1c7a7c8e390 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1c7a7c8e518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1c7a7c8e710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c7a7c8e638 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1c7a7c8e8a0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c7a7c8eb48 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c7a7c8ebe8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c7a7c8ec58 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1c7a7c8ecc0 prev 0x1c7a7c8eb48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1c7a7c8ea30 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1c7a7c8ee98 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1c7a7c8ed68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c8f270 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c8f038 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c8f0b0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c7a7c8f320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c8f548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c7a7c8f468 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1c7a7c8f798 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c8f620 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c8f698 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7c8fb58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1c7a7c8f930 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c8f9b0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1c7a7c8fc08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c8fe30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c7a7c8fd50 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1c7a7c95108 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1c7a7c94fc0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1c7a7c952f0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1c7a7c95740 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1c7a7c953b8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c95438 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1c7a7c954b8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1c7a7c95530 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1c7a7c95bc0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c95830 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c958a8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c95920 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7c959a0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1c7a7c91f90 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c95cb0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c95d28 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7c95da8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1c7a7c92158 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c7a7c92078 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1c7a7c92530 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c7a7c925d0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c7a7c92638 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c7a7c926b0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1c7a7c92718 prev 0x1c7a7c92530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1c7a7c922f0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1c7a7c92370 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1c7a7c928f8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1c7a7c927c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c92ce8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c92a08 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1c7a7c92a88 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c92b00 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c7a7c92da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c960d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c92ee8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1c7a7c95fd0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1c7a7c963c8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c961b0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1c7a7c96230 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c962a8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7c96858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c96570 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1c7a7c965e8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c96668 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1c7a7c96910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c96ee0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c96b50 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1c7a7c96bc8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c96c48 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c96cc0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c7a7c96fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c97340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c97128 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1c7a7c971a0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7c97220 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1c7a7c976d8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c97428 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1c7a7c974a0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c97520 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c97598 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7c97938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1c7a7c979d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c97c90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1c7a7c97b20 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1c7a7c93fb0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1c7a7c97d68 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1c7a7c97de0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1c7a7c94230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c7a7c94150 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1c7a7c942d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c94598 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c7a7c94420 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1c7a7c94498 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1c7a7c949b0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c7a7c94a50 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1c7a7c94ab8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c7a7c94b20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c7a7c94ba0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1c7a7c94c08 prev 0x1c7a7c949b0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c7a7c94670 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c946f0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c94768 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c7a7c94d08 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1c7a7c92fa0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c7a7c93040 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1c7a7c930a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c7a7c93110 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c7a7c93190 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1c7a7c931f8 prev 0x1c7a7c92fa0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c7a7c94d50 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c94dd0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c94e48 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c7a7c932f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1c7a7c93558 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c93340 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c933c0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c93438 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c93850 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c93638 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c936b8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c93730 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c93b98 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c7a7c93c38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c7a7c93ca0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c7a7c93d18 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1c7a7c93d80 prev 0x1c7a7c93b98 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c7a7c93938 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c939b0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c7a7c93e78 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1c7a7c900a8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c7a7c90148 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c7a7c901b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c7a7c90228 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1c7a7c90290 prev 0x1c7a7c900a8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c7a7c93ec8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c8ff70 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c7a7c90388 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1c7a7c90550 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c903d8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c90450 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c907a8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c90630 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c906a8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c90d08 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c7a7c90da8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c7a7c90e10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c7a7c90e78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c7a7c90ee0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c7a7c97ff0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1c7a7c98058 prev 0x1c7a7c90d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c7a7c90948 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c909c0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c90a40 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c90ab8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1c7a7c98248 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1c7a7c98118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c986b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c98298 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c98310 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c98388 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c98408 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c98480 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c98af8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c987b0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c98828 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c988a0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c98920 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c98998 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c98ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c98cb0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1c7a7c98d28 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c98da8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1c7a7c98f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c913f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c91140 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1c7a7c911b8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c91238 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c912b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1c7a7c914b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c918a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c915f8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c91670 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c916f0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c91768 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c91c68 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c91998 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1c7a7c91a18 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c91a90 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c9d0e0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1c7a7c9d180 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c7a7c9d1e8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c7a7c9d260 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1c7a7c9d2c8 prev 0x1c7a7c9d0e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c91e10 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1c7a7c91e90 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1c7a7c9d4a8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1c7a7c9d378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c9d8d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c7a7c9d970 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c7a7c9d9d8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c7a7c9da40 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c7a7c9dac0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1c7a7c9db28 prev 0x1c7a7c9d8d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c7a7c9d5b8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1c7a7c9d638 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c9d6b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1c7a7c9dd10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1c7a7c9dbe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c9c030 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c7a7c9c0d0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c7a7c9c138 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c7a7c9c1a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c7a7c9c220 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1c7a7c9c288 prev 0x1c7a7c9c030 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c7a7c9dd60 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1c7a7c9dde0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c9de58 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c7a7c9c388 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1c7a7c9c550 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c9c3d8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c9c450 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c9c848 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c9c630 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c9c6a8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7c9c728 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1c7a7c9cbe0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c9c930 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c9c9a8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c9ca28 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c9caa0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c9ce48 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c9ccc8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1c7a7c9cd48 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1c7a7c9e050 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c7a7c9cf28 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1c7a7c9e340 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c7a7c9e128 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1c7a7c9e1a0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7c9e220 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1c7a7c9e638 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c9e420 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c9e4a0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c9e518 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c9e898 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c9e720 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c9e798 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c9ec28 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c9e978 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1c7a7c9e9f0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c9ea70 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c9eae8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c9edf8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c7a7c9ed18 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1c7a7ca0070 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c7a7c9eed0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c9ef48 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca0230 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c7a7ca0150 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1c7a7ca03c0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c7a7ca0608 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7ca0490 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7ca0508 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7ca0860 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7ca06e8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7ca0760 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7ca0ab8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7ca0940 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7ca09b8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7ca0e68 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7ca0b98 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7ca0c10 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7ca0c88 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c99120 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7ca0f50 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7ca0fc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7c99000 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c99418 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7c99208 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c99280 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7c992f8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c99710 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c994f8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c99578 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c995f0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7c99a08 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c997f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c99870 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c998e8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7c99d00 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c99ae8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c99b68 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c99be0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7ca11e0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7c99de0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7c99e60 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c99ed8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7c99f50 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca1578 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7ca12c8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7ca1348 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7ca13c0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7ca1438 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca1910 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7ca1660 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7ca16e0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7ca1758 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7ca17d0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca1da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7ca1ac0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7ca1b40 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7ca1bb8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c7a7ca1e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c9a320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7ca1fa8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c9a010 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c9a090 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c9a108 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7c9a6c0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c9a410 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c9a488 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c9a508 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c9a580 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7c9ac10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7c9a8b0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c9a930 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c9a9a8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c7a7c9aa20 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c7a7c9acd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7ca22c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7c9ae18 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c9ae90 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c9af10 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c9af88 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7ca2090 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca2708 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7ca23c0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7ca2438 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7ca24b8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7ca2530 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7ca25a8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca2978 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7ca2800 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7ca2878 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7ca2bd0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7ca2a58 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7ca2ad0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7ca2ec0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7ca2cb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7ca2d28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7ca2da0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c9b150 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7ca2fa8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7ca3020 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7c9b030 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7c9b5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c9b2f8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c9b370 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c9b3f0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7c9b468 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c7a7c9b668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7c9ba60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c9b7b0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c9b828 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c9b8a8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c9b920 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7ca70e0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7c9bb50 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7c9bbc8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c9bc40 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7c9bcc0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7c9bd38 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7ca7620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7ca72d8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7ca7350 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7ca73d0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7ca7448 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c7a7ca74c0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c7a7ca76e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7ca7b68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7ca7838 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7ca78b0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7ca7930 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1c7a7ca79a8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7ca7a20 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca9160 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7ca7c60 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1c7a7ca7cd8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7ca7d50 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7ca7dd0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7ca7e48 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7ca7ec0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca9520 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1c7a7ca9258 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7ca92d0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca9350 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1c7a7ca9790 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c7a7ca9620 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1c7a7ca99a8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1c7a7ca9c88 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c7a7ca9a70 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c7a7ca9ae8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1c7a7ca9ed0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1c7a7ca9d60 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1c7a7ca80f0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c7a7ca9fa0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1c7a7ca8278 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1c7a7ca84b0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c7a7ca8340 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c7a7ca83b8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1c7a7ca8660 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1c7a7ca8588 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1c7a7ca8908 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1c7a7ca8730 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c7a7ca87a8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1c7a7ca8cb0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1c7a7ca89e0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c7a7ca8a60 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1c7a7ca8ad8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1c7a7ca8fb0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c7a7ca8d90 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca8e08 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c7a7caa2c8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1c7a7ca9088 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1c7a7caa120 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c7a7caa5d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c7a7caa460 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1c7a7caa678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7caa938 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c7a7caa7b8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1c7a7caac40 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7caaa08 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1c7a7caaa80 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7caae90 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7caad18 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1c7a7caad90 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7ca30a0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c7a7caaf68 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7ca3250 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c7a7ca3170 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7ca3400 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c7a7ca3320 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7ca3798 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7ca34d0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7ca3548 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca35c0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca3a88 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7ca3878 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7ca38f0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca3968 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca3d78 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7ca3b68 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7ca3be0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca3c58 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca40b0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7ca3e58 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7ca3ed0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca3f48 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca43b0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7ca4190 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca4208 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca4600 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7ca4488 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca4500 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca4850 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7ca46d8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca4750 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca4aa0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7ca4928 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca49a0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca4e58 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7ca4b78 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c7a7ca4bf0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7ca4c68 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7cab330 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7ca4f38 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c7a7ca4fb0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7ca5028 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cab120 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cab6e8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7cab418 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cab490 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cab508 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cab9d8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7cab7c8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cab840 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cab8b8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cabcc8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7cabab8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cabb30 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7cabba8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7cac050 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7cabda8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cabe20 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cabe98 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cabf10 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cac4e0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7cac158 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cac1d0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cac248 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7cac2c0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7cac9e8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7cac5c8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cac640 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cac6b8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cac730 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cac7a8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cacda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7cacb98 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cacc10 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cacc88 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c7a7cace60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7ca52f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7cad060 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c7a7ca50c0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7ca5138 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7ca51b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1c7a7ca53b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7ca5668 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7ca54f0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1c7a7ca5568 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7ca5820 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c7a7ca5740 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7ca5b00 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7ca58f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7ca5968 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca59e0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7ca5d58 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7ca5be0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7ca5c58 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7caff90 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7ca5e30 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7ca5ea8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7ca5f20 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7cb0318 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7cb0070 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cb00e8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb0160 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb01d8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb04e0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c7a7cb0400 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7cb0728 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7cb05b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb0628 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb0a30 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb0800 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb0878 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb0c80 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb0b08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb0b80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb0ed0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb0d58 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb0dd0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb1298 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb0fc8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb1040 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7cb10b8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb1588 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb1378 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb13f0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7cb1468 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb1878 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb1668 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb16e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7cb1758 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb1c38 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb1958 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7cb19d0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb1a48 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb2fc0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb1d18 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7cb1d90 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb1e08 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb32b0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb30a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7cb3118 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb3190 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb3700 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb3390 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7cb3408 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb3480 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7cb34f8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb3a90 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb37e8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7cb3860 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb38d8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7cb3950 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb3e20 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb3b78 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7cb3bf0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb3c68 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7cb3ce0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb42e0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb3f08 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cb3fd0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb4048 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb40c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb4670 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb43c8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cb4440 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb44b8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb4530 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb4a00 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb4758 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cb47d0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb4848 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb48c0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb4f08 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb4ae8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cb4b60 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb4bd8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb4c50 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7cb4cc8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb6358 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb6018 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cb6090 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb6108 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb6180 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7cb61f8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb6788 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb6448 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cb64c0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb6538 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb65b0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7cb6628 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb69f0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb6878 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb68f0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb6c40 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb6ac8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb6b40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb6f28 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb6d18 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb6d90 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7cb6e08 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb2348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb20a0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cb2118 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb2190 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb2208 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c7a7cb2408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cb2978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb2550 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cb25c8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb2640 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb26b8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb2730 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb2eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb2b70 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cb2be8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb2c60 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb2cd8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c7a7cb2d50 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c7a7caef80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7caf590 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7caf0c8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7caf140 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7caf1b8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7caf230 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7caf2a8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7caf320 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cafa90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7caf858 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c7a7caf8d0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1c7a7cafb40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c7a7cafc58 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c7a7cbd2c8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7caff10 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cbd070 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cbd0e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1c7a7cbd380 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c7a7cbd498 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c7a7cbda38 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cbd758 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cbd7d0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cbd848 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1c7a7cbdaf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c7a7cbdc10 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c7a7cbe280 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cbded0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cbdf48 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cbdfc0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c7a7cbe070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1c7a7cbe340 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c7a7cbe460 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c7a7cbe768 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1c7a7cbe588 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cbe600 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cbe678 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1c7a7cbf320 <line:37:1, line:44:1>
|   |-DeclStmt 0x1c7a7cbe8b0 <line:38:5, col:21>
|   | `-VarDecl 0x1c7a7cbe848 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1c7a7cbe948 <line:39:5, col:13>
|   | `-VarDecl 0x1c7a7cbe8e0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1c7a7cbeca0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1c7a7cbec88 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c7a7cbeba0 <col:34> '<builtin fn type>' Function 0x1c7a7cbea38 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1c7a7cbebd8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1c7a7cbe848 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1c7a7cbec10 <col:29> 'const wchar_t *' lvalue ParmVar 0x1c7a7cbe678 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1c7a7cbef60 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1c7a7cbecd0 <col:5> 'int' lvalue Var 0x1c7a7cbe8e0 '_Ret' 'int'
|   | `-CallExpr 0x1c7a7cbeea0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1c7a7cbee88 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c7a7cbed08 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c7a7cb4f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1c7a7cbeee8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c7a7cbed28 <col:27> 'wchar_t *' lvalue ParmVar 0x1c7a7cbe588 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1c7a7cbef00 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c7a7cbed48 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c7a7cbe600 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1c7a7cbef18 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c7a7cbed68 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c7a7cbe678 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1c7a7cbef30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1c7a7cbedf0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1c7a7cbedc8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1c7a7cbed88 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1c7a7cbef48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c7a7cbee10 <col:59> 'va_list':'char *' lvalue Var 0x1c7a7cbe848 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1c7a7cbf2b0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1c7a7cbf298 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c7a7cbf1e8 <col:34> '<builtin fn type>' Function 0x1c7a7cbf080 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1c7a7cbf220 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1c7a7cbe848 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1c7a7cbf310 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1c7a7cbf2f8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c7a7cbf2d8 <col:12> 'int' lvalue Var 0x1c7a7cbe8e0 '_Ret' 'int'
|-FunctionDecl 0x1c7a7cbea38 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1c7a7cbead8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1c7a7cbeb48 <col:34> Implicit
|-FunctionDecl 0x1c7a7cbf080 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1c7a7cbf120 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1c7a7cbf190 <col:34> Implicit
|-FunctionDecl 0x1c7a7cbf618 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1c7a7cbf370 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cbf3e8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cbf460 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cbf4d8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1c7a7cbf900 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1c7a7cbf8f0 <line:51:5, col:62>
|     `-CallExpr 0x1c7a7cbf830 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1c7a7cbf818 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c7a7cbf6f0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c7a7cb4f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1c7a7cbf878 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cbf710 <col:27> 'wchar_t *' lvalue ParmVar 0x1c7a7cbf370 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1c7a7cbf890 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cbf730 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c7a7cbf3e8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1c7a7cbf8a8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cbf750 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c7a7cbf460 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1c7a7cbf8c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1c7a7cbf7d8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1c7a7cbf7b0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1c7a7cbf770 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1c7a7cbf8d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1c7a7cbf7f8 <col:59> 'va_list':'char *' lvalue ParmVar 0x1c7a7cbf4d8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1c7a7cbfba0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1c7a7cbf928 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cbf9a0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cbfa18 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cbfa90 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1c7a7cb80b8 <line:61:1, line:68:1>
|   |-DeclStmt 0x1c7a7cbfcf0 <line:62:5, col:21>
|   | `-VarDecl 0x1c7a7cbfc88 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1c7a7cbfd88 <line:63:5, col:13>
|   | `-VarDecl 0x1c7a7cbfd20 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1c7a7cbfe30 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1c7a7cbfe18 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c7a7cbfda0 <col:34> '<builtin fn type>' Function 0x1c7a7cbea38 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1c7a7cbfdc0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1c7a7cbfc88 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1c7a7cbfdf8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c7a7cbfa90 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1c7a7cc0030 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1c7a7cbfe60 <col:5> 'int' lvalue Var 0x1c7a7cbfd20 '_Ret' 'int'
|   | `-CallExpr 0x1c7a7cbff70 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1c7a7cbff58 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c7a7cbfe98 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c7a7cb4f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1c7a7cbffb8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c7a7cbfeb8 <col:27> 'wchar_t *' lvalue ParmVar 0x1c7a7cbf928 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1c7a7cbffd0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c7a7cbfed8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c7a7cbf9a0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1c7a7cbffe8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c7a7cbfef8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c7a7cbfa18 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1c7a7cc0000 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c7a7cbff18 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c7a7cbfa90 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1c7a7cc0018 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c7a7cbff38 <col:64> 'va_list':'char *' lvalue Var 0x1c7a7cbfc88 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1c7a7cb8048 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1c7a7cb8030 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c7a7cc0050 <col:34> '<builtin fn type>' Function 0x1c7a7cbf080 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1c7a7cb8010 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1c7a7cbfc88 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1c7a7cb80a8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1c7a7cb8090 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c7a7cb8070 <col:12> 'int' lvalue Var 0x1c7a7cbfd20 '_Ret' 'int'
|-FunctionDecl 0x1c7a7cb8448 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1c7a7cb8108 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cb8180 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb81f8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb8270 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c7a7cb82e8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1c7a7cb86d0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1c7a7cb86c0 <line:75:5, col:67>
|     `-CallExpr 0x1c7a7cb8600 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1c7a7cb85e8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c7a7cb8528 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c7a7cb4f08 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1c7a7cb8648 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cb8548 <col:27> 'wchar_t *' lvalue ParmVar 0x1c7a7cb8108 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1c7a7cb8660 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cb8568 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c7a7cb8180 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1c7a7cb8678 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cb8588 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c7a7cb81f8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1c7a7cb8690 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cb85a8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c7a7cb8270 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1c7a7cb86a8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1c7a7cb85c8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1c7a7cb82e8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb8918 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c7a7cb86f8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb8770 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1c7a7cb8b68 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c7a7cb89f0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb8a68 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cb8e50 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c7a7cb8c40 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb8cb8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c7a7cb8d30 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c7a7cbc1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7cbc050 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7cbc0c8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c7a7cbc278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cbc688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cbc478 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7cbc4f0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cbc568 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c7a7cbc740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cbc9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7cbc880 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1c7a7cbc8f8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7cbcce0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cbcad0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7cbcb48 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cbcbc0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cc0100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7cbce80 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cbcef8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c7a7cc01b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cc0688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cc03b0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cc0428 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cc04a0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c7a7cc0740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cc09f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7cc0880 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cc08f8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7cc0ce0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cc0ad0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cc0b48 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cc0bc0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cb9108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7cc0e80 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cc0ef8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cc0f70 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c7a7cb91c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cb9740 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb93c0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb9438 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb94b0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb9528 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c7a7cb9800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cb9b50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7cb9940 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb99b8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7cb9a30 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7cb9ed8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cb9c30 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cb9ca8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cb9d20 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cb9d98 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cc1250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1c7a7cc1170 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c7a7cc12f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cc1670 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cc14f8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cc1570 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c7a7cc1720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cc1940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c7a7cc1860 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1c7a7cc1b88 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c7a7cc1a10 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cc1a88 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cc1e88 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1c7a7cc1c68 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1c7a7cc1ce0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c7a7cbb1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c7a7cc2020 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cbb040 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1c7a7cbb298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cbb6a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c7a7cbb3e0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1c7a7cbb458 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cbb4d0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c7a7cbbb00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c7a7cbb840 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cbb8b8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cbb930 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1c7a7cbbbb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cc6138 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c7a7cbbd00 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1c7a7cbbd78 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cbbdf0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cbbe68 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1c7a7cc6390 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1c7a7cc6220 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1c7a7cc65d0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c7a7cc6460 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cc64d8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c7a7cc6788 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c7a7cc66a8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1c7a7cc6a78 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1c7a7cc6858 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1c7a7cc68d0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c7a7cc6ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c7a7cc6c10 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1c7a7cc6d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cc6fa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c7a7cc6ed0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc71f8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c7a7cc7078 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c7a7cc7100 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc7440 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1c7a7cc72d0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c7a7cc7348 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc75f0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c7a7cc7518 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc7798 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c7a7cc76c0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc7948 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7cc7868 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc7af8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c7a7cc7a18 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc7e70 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c7a7cc7bd0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1c7a7cc7c48 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cc7cc0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7cc7d38 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc92f0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c7a7cc7f60 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1c7a7cc7fd8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cc8050 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cc9120 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7cc9198 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc9600 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1c7a7cc93e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7cc9460 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1c7a7cc94e0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1c7a7cc97c0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1c7a7cc96e0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc9ab0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1c7a7cc9890 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1c7a7cc9910 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1c7a7cc9990 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1c7a7cc9c70 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1c7a7cc9b90 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc9fe8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c7a7cc9d48 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1c7a7cc9dc0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cc9e38 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7cc9eb0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc2228 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c7a7cc20b0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1c7a7cc2128 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1c7a7cc2560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1c7a7cc23e0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1c7a7cc2460 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1c7a7cc2610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1c7a7cc28c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c7a7cc2968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1c7a7cc2ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1c7a7cc2b30 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1c7a7cc2bb0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1c7a7cc2d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1c7a7cca130 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c7a7cca1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1c7a7cca470 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1c7a7cca390 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1c7a7cca518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1c7a7cca798 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c7a7cca838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1c7a7ccaae0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1c7a7ccaa00 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1c7a7ccab88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1c7a7ccae68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1c7a7ccad88 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1c7a7ccaf10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1c7a7cc8288 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c7a7cc8110 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1c7a7cc8188 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1c7a7cc8338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1c7a7cc85f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c7a7cc8698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-TypedefDecl 0x1c7a7cc87e8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:89:1, col:14> col:14 referenced clock_t 'long'
| `-BuiltinType 0x1c7a61c41b0 'long'
|-RecordDecl 0x1c7a7cc8840 <line:113:1, line:123:9> line:113:8 struct tm definition
| |-MaxFieldAlignmentAttr 0x1c7a7cc8900 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c7a7cc8978 <line:114:9, col:13> col:13 referenced tm_sec 'int'
| |-FieldDecl 0x1c7a7cc89e8 <line:115:9, col:13> col:13 referenced tm_min 'int'
| |-FieldDecl 0x1c7a7cc8a58 <line:116:9, col:13> col:13 referenced tm_hour 'int'
| |-FieldDecl 0x1c7a7cc8ac8 <line:117:9, col:13> col:13 referenced tm_mday 'int'
| |-FieldDecl 0x1c7a7cc8b38 <line:118:9, col:13> col:13 referenced tm_mon 'int'
| |-FieldDecl 0x1c7a7cc8ba8 <line:119:9, col:13> col:13 referenced tm_year 'int'
| |-FieldDecl 0x1c7a7cc8c18 <line:120:9, col:13> col:13 tm_wday 'int'
| |-FieldDecl 0x1c7a7cc8c88 <line:121:9, col:13> col:13 tm_yday 'int'
| `-FieldDecl 0x1c7a7cc8cf8 <line:122:9, col:13> col:13 tm_isdst 'int'
|-FunctionDecl 0x1c7a7cc8f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:147:99> col:84 __daylight 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x1c7a7cc8fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7ccb360 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:151:98> col:84 __dstbias 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x1c7a7ccb400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_dstbias instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7ccb6c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:155:100> col:85 __timezone 'long *(void) __attribute__((cdecl))':'long *(void)'
| `-DeprecatedAttr 0x1c7a7ccb760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7ccba80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:159:112> col:99 __tzname 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x1c7a7ccbb20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7ccbde0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:162:9, col:60> col:25 _get_daylight 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1c7a7ccbc68 <col:45, col:51> col:51 _Daylight 'int *'
|-FunctionDecl 0x1c7a7ccc030 <line:163:9, col:73> col:25 _get_dstbias 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x1c7a7ccbeb8 <col:44, col:51> col:51 _Daylight_savings_bias 'long *'
|-FunctionDecl 0x1c7a7ccc228 <line:164:9, col:61> col:25 _get_timezone 'errno_t (long *) __attribute__((cdecl))':'errno_t (long *)'
| `-ParmVarDecl 0x1c7a7ccc150 <col:45, col:52> col:52 _Timezone 'long *'
|-FunctionDecl 0x1c7a7ccc6d8 <line:165:9, col:150> col:25 _get_tzname 'errno_t (size_t *, char *, size_t, int) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, int)'
| |-ParmVarDecl 0x1c7a7ccc358 <col:43, col:51> col:51 _ReturnValue 'size_t *'
| |-ParmVarDecl 0x1c7a7ccc3d8 <col:94, col:100> col:100 _Buffer 'char *'
| |-ParmVarDecl 0x1c7a7ccc450 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7ccc4d0 <col:140, col:144> col:144 _Index 'int'
|-FunctionDecl 0x1c7a7ccca98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:174:108> col:74 asctime 'char *(const struct tm *) __attribute__((cdecl))':'char *(const struct tm *)'
| |-ParmVarDecl 0x1c7a7ccc920 <col:87, col:105> col:105 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x1c7a7cccb40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using asctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cccf60 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:176:28, col:170> col:44 asctime_s 'errno_t (char *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (char *, size_t, const struct tm *)'
| |-ParmVarDecl 0x1c7a7cccc88 <col:106, col:112> col:112 _Buf 'char *'
| |-ParmVarDecl 0x1c7a7cccd00 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7cccd90 <col:149, col:167> col:167 _Tm 'const struct tm *'
|-FunctionDecl 0x1c7a7ccd318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:180:98> col:60 _ctime32 'char *(const __time32_t *) __attribute__((cdecl))':'char *(const __time32_t *)'
| |-ParmVarDecl 0x1c7a7ccd198 <col:74, col:93> col:93 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1c7a7ccd3c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7ccd7d0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:181:9, col:154> col:25 _ctime32_s 'errno_t (char *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x1c7a7ccd508 <col:88, col:94> col:94 _Buf 'char *'
| |-ParmVarDecl 0x1c7a7ccd580 <col:105, col:112> col:112 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7ccd5f8 <col:131, col:149> col:149 _Time 'const __time32_t *'
|-FunctionDecl 0x1c7a7ccda18 <line:184:24, col:50> col:40 clock 'clock_t (void) __attribute__((cdecl))':'clock_t (void)'
|-FunctionDecl 0x1c7a7ccdd00 <line:185:9, col:82> col:24 _difftime32 'double (__time32_t, __time32_t) __attribute__((cdecl))':'double (__time32_t, __time32_t)'
| |-ParmVarDecl 0x1c7a7ccdae0 <col:41, col:52> col:52 _Time1 '__time32_t':'long'
| `-ParmVarDecl 0x1c7a7ccdb58 <col:65, col:76> col:76 _Time2 '__time32_t':'long'
|-FunctionDecl 0x1c7a7cce088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:187:120> col:81 _gmtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x1c7a7ccde98 <col:96, col:115> col:115 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1c7a7cd2120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd2498 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:188:28, col:106> col:44 _gmtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x1c7a7cd2278 <col:61, col:72> col:72 _Tm 'struct tm *'
| `-ParmVarDecl 0x1c7a7cd22f0 <col:82, col:101> col:101 _Time 'const __time32_t *'
|-FunctionDecl 0x1c7a7cd2728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:190:111> col:69 _localtime32 'struct tm *(const __time32_t *) __attribute__((cdecl))':'struct tm *(const __time32_t *)'
| |-ParmVarDecl 0x1c7a7cd2638 <col:87, col:106> col:106 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1c7a7cd27d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd2aa0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:191:9, col:91> col:25 _localtime32_s 'errno_t (struct tm *, const __time32_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time32_t *)'
| |-ParmVarDecl 0x1c7a7cd2930 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x1c7a7cd29a8 <col:67, col:86> col:86 _Time 'const __time32_t *'
|-FunctionDecl 0x1c7a7cd2f08 <line:193:9, col:179> col:24 strftime 'size_t (char *, size_t, const char *, const struct tm *) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *)'
| |-ParmVarDecl 0x1c7a7cd2b80 <col:62, col:69> col:69 _Buf 'char *'
| |-ParmVarDecl 0x1c7a7cd2bf8 <col:80, col:87> col:87 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cd2c78 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1c7a7cd2d08 <col:158, col:176> col:176 _Tm 'const struct tm *'
|-FunctionDecl 0x1c7a7cd1450 <line:194:9, col:199> col:24 _strftime_l 'size_t (char *, size_t, const char *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (char *, size_t, const char *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x1c7a7cd2ff8 <col:59, col:65> col:65 _Buf 'char *'
| |-ParmVarDecl 0x1c7a7cd3070 <col:76, col:83> col:83 _Max_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cd1110 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1c7a7cd11a0 <col:151, col:168> col:168 _Tm 'const struct tm *'
| `-ParmVarDecl 0x1c7a7cd1218 <col:182, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cd1728 <line:196:28, col:142> col:44 _strdate_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1c7a7cd1548 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x1c7a7cd15c0 <col:123, col:130> col:130 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1c7a7cd19a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:198:79 _strdate 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c7a7cd18c8 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x1c7a7cd1a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd1d08 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:200:28, col:143> col:44 _strtime_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1c7a7cd1b98 <col:106, col:112> col:112 _Buf 'char *'
| `-ParmVarDecl 0x1c7a7cd1c10 <col:124, col:131> col:131 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1c7a7cd1f88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:202:79 _strtime 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c7a7cd1ea8 <col:108, col:114> col:114 _Buffer 'char *'
| `-DeprecatedAttr 0x1c7a7cd2030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd53f0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:204:9, col:64> col:28 _time32 '__time32_t (__time32_t *) __attribute__((cdecl))':'__time32_t (__time32_t *)'
| `-ParmVarDecl 0x1c7a7cd5278 <col:46, col:59> col:59 _Time '__time32_t *'
|-FunctionDecl 0x1c7a7cd5650 <line:205:9, col:61> col:28 _mktime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x1c7a7cd54d8 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x1c7a7cd5810 <line:206:9, col:63> col:28 _mkgmtime32 '__time32_t (struct tm *) __attribute__((cdecl))':'__time32_t (struct tm *)'
| `-ParmVarDecl 0x1c7a7cd5738 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x1c7a7cd5998 <line:210:9, col:33> col:22 _tzset 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1c7a7cd5c80 <line:214:24, col:97> col:39 used _difftime64 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
| |-ParmVarDecl 0x1c7a7cd5a60 <col:56, col:67> col:67 _Time1 '__time64_t':'long long'
| `-ParmVarDecl 0x1c7a7cd5ad8 <col:80, col:91> col:91 _Time2 '__time64_t':'long long'
|-FunctionDecl 0x1c7a7cd5fc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:215:98> col:60 used _ctime64 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |-ParmVarDecl 0x1c7a7cd5e48 <col:74, col:93> col:93 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1c7a7cd6070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd6520 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:216:9, col:132> col:25 used _ctime64_s 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x1c7a7cd6260 <col:65, col:71> col:71 _Buf 'char *'
| |-ParmVarDecl 0x1c7a7cd62d8 <col:82, col:89> col:89 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7cd6350 <col:108, col:127> col:127 _Time 'const __time64_t *'
|-FunctionDecl 0x1c7a7cd6848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:219:105> col:66 used _gmtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x1c7a7cd66c0 <col:81, col:100> col:100 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1c7a7cd68f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gmtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd6c68 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:220:9, col:87> col:25 used _gmtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x1c7a7cd6a48 <col:43, col:54> col:54 _Tm 'struct tm *'
| `-ParmVarDecl 0x1c7a7cd6ac0 <col:64, col:82> col:82 _Time 'const __time64_t *'
|-FunctionDecl 0x1c7a7cd6ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:222:111> col:69 used _localtime64 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |-ParmVarDecl 0x1c7a7cd6e08 <col:87, col:106> col:106 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1c7a7cd6fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _localtime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd42b0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:223:9, col:90> col:25 used _localtime64_s 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
| |-ParmVarDecl 0x1c7a7cd4140 <col:46, col:57> col:57 _Tm 'struct tm *'
| `-ParmVarDecl 0x1c7a7cd41b8 <col:67, col:85> col:85 _Time 'const __time64_t *'
|-FunctionDecl 0x1c7a7cd4510 <line:225:9, col:61> col:28 used _mktime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x1c7a7cd43a0 <col:46, col:58> col:58 _Tm 'struct tm *'
|-FunctionDecl 0x1c7a7cd46d0 <line:226:9, col:63> col:28 used _mkgmtime64 '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
| `-ParmVarDecl 0x1c7a7cd45f8 <col:48, col:60> col:60 _Tm 'struct tm *'
|-FunctionDecl 0x1c7a7cd4940 <line:227:9, col:64> col:28 used _time64 '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
| `-ParmVarDecl 0x1c7a7cd47c8 <col:46, col:59> col:59 _Time '__time64_t *'
|-FunctionDecl 0x1c7a7cd4ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:231:79> col:46 _getsystime 'unsigned int (struct tm *) __attribute__((cdecl))':'unsigned int (struct tm *)'
| |-ParmVarDecl 0x1c7a7cd4b28 <col:64, col:76> col:76 _Tm 'struct tm *'
| `-DeprecatedAttr 0x1c7a7cd4d50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using GetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x1c7a7cd71e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:232:98> col:46 _setsystime 'unsigned int (struct tm *, unsigned int) __attribute__((cdecl))':'unsigned int (struct tm *, unsigned int)'
| |-ParmVarDecl 0x1c7a7cd4f78 <col:63, col:75> col:75 _Tm 'struct tm *'
| |-ParmVarDecl 0x1c7a7cd4ff8 <col:80, col:89> col:89 _MilliSec 'unsigned int'
| `-DeprecatedAttr 0x1c7a7cd7290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetLocalTime instead. See online help for details." ""
|-FunctionDecl 0x1c7a7cd7620 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:245:100> col:64 _wasctime 'wchar_t *(const struct tm *) __attribute__((cdecl))':'wchar_t *(const struct tm *)'
| |-ParmVarDecl 0x1c7a7cd74b0 <col:79, col:97> col:97 _Tm 'const struct tm *'
| `-DeprecatedAttr 0x1c7a7cd76c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wasctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd7ae0 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:246:9, col:156> col:25 _wasctime_s 'errno_t (wchar_t *, size_t, const struct tm *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const struct tm *)'
| |-ParmVarDecl 0x1c7a7cd7808 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cd7880 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7cd7910 <col:135, col:153> col:153 _Tm 'const struct tm *'
|-FunctionDecl 0x1c7a7cd7df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:249:102> col:64 _wctime32 'wchar_t *(const __time32_t *) __attribute__((cdecl))':'wchar_t *(const __time32_t *)'
| |-ParmVarDecl 0x1c7a7cd7c80 <col:79, col:97> col:97 _Time 'const __time32_t *'
| `-DeprecatedAttr 0x1c7a7cd7e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime32_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd0240 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:250:9, col:159> col:25 _wctime32_s 'errno_t (wchar_t *, size_t, const __time32_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time32_t *)'
| |-ParmVarDecl 0x1c7a7cd7fd8 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cd8050 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7cd80c8 <col:135, col:154> col:154 _Time 'const __time32_t *'
|-FunctionDecl 0x1c7a7cd06a8 <line:253:9, col:186> col:24 wcsftime 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *)'
| |-ParmVarDecl 0x1c7a7cd0320 <col:62, col:72> col:72 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cd0398 <col:83, col:90> col:90 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cd0410 <col:134, col:150> col:150 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c7a7cd04a0 <col:165, col:183> col:183 _Tm 'const struct tm *'
|-FunctionDecl 0x1c7a7cd0bc0 <line:254:9, col:214> col:24 _wcsftime_l 'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, size_t, const wchar_t *, const struct tm *, _locale_t)'
| |-ParmVarDecl 0x1c7a7cd0790 <col:65, col:75> col:75 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cd0808 <col:86, col:93> col:93 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cd0880 <col:137, col:152> col:152 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c7a7cd0910 <col:166, col:183> col:183 _Tm 'const struct tm *'
| `-ParmVarDecl 0x1c7a7cd0988 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c7a7cd0e20 <line:256:9, col:128> col:25 _wstrdate_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1c7a7cd0cb0 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x1c7a7cd0d28 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c7a7cd8180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:258:82 _wstrdate 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c7a7cd0fb8 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1c7a7cd8228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrdate_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd84d8 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:260:9, col:128> col:25 _wstrtime_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1c7a7cd8368 <col:88, col:98> col:98 _Buf 'wchar_t *'
| `-ParmVarDecl 0x1c7a7cd83e0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c7a7cd8748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\time.h:262:82 _wstrtime 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c7a7cd8670 <col:112, col:121> col:121 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1c7a7cd87f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wstrtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd8b60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:264:103> col:64 used _wctime64 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
| |-ParmVarDecl 0x1c7a7cd89f0 <col:79, col:98> col:98 _Time 'const __time64_t *'
| `-DeprecatedAttr 0x1c7a7cd8c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctime64_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd9010 <D:\Microsoft Visual Studio 12.0\VC\include\time.h:265:9, col:158> col:25 used _wctime64_s 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
| |-ParmVarDecl 0x1c7a7cd8d48 <col:89, col:98> col:98 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cd8dc0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c7a7cd8e38 <col:135, col:153> col:153 _Time 'const __time64_t *'
|-FunctionDecl 0x1c7a7cdd310 <D:\Microsoft Visual Studio 12.0\VC\include\wtime.inl:44:1, line:50:1> line:44:37 _wctime 'wchar_t *(const time_t *) __attribute__((cdecl))':'wchar_t *(const time_t *)' static inline
| |-ParmVarDecl 0x1c7a7cdd1d0 <col:45, col:60> col:60 used _Time 'const time_t *'
| `-CompoundStmt 0x1c7a7cdd4d0 <line:45:1, line:50:1>
|   `-ReturnStmt 0x1c7a7cdd4c0 <line:48:5, col:27>
|     `-CallExpr 0x1c7a7cdd480 <col:12, col:27> 'wchar_t *'
|       |-ImplicitCastExpr 0x1c7a7cdd468 <col:12> 'wchar_t *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c7a7cdd3d0 <col:12> 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)' Function 0x1c7a7cd8b60 '_wctime64' 'wchar_t *(const __time64_t *) __attribute__((cdecl))':'wchar_t *(const __time64_t *)'
|       `-ImplicitCastExpr 0x1c7a7cdd4a8 <col:22> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1c7a7cdd3f0 <col:22> 'const time_t *' lvalue ParmVar 0x1c7a7cdd1d0 '_Time' 'const time_t *'
|-FunctionDecl 0x1c7a7cdd780 <line:52:1, line:55:1> line:52:35 _wctime_s 'errno_t (wchar_t *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x1c7a7cdd4f8 <col:97, col:106> col:106 used _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1c7a7cdd570 <col:115, col:122> col:122 used _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cdd5e8 <col:136, col:151> col:151 used _Time 'const time_t *'
| `-CompoundStmt 0x1c7a7cdd9d0 <line:53:1, line:55:1>
|   `-ReturnStmt 0x1c7a7cdd9c0 <line:54:5, col:52>
|     `-CallExpr 0x1c7a7cdd940 <col:12, col:52> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1c7a7cdd928 <col:12> 'errno_t (*)(wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c7a7cdd850 <col:12> 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)' Function 0x1c7a7cd9010 '_wctime64_s' 'errno_t (wchar_t *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x1c7a7cdd978 <col:24> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cdd870 <col:24> 'wchar_t *' lvalue ParmVar 0x1c7a7cdd4f8 '_Buffer' 'wchar_t *'
|       |-ImplicitCastExpr 0x1c7a7cdd990 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cdd890 <col:33> 'size_t':'unsigned long long' lvalue ParmVar 0x1c7a7cdd570 '_SizeInWords' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x1c7a7cdd9a8 <col:47> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1c7a7cdd8b0 <col:47> 'const time_t *' lvalue ParmVar 0x1c7a7cdd5e8 '_Time' 'const time_t *'
|-FunctionDecl 0x1c7a7cddbe0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:82:1, line:85:1> line:82:34 difftime 'double (time_t, time_t) __attribute__((cdecl))':'double (time_t, time_t)' static inline
| |-ParmVarDecl 0x1c7a7cdd9f8 <col:43, col:50> col:50 used _Time1 'time_t':'long long'
| |-ParmVarDecl 0x1c7a7cdda70 <col:58, col:65> col:65 used _Time2 'time_t':'long long'
| `-CompoundStmt 0x1c7a7cdddf0 <line:83:1, line:85:1>
|   `-ReturnStmt 0x1c7a7cddde0 <line:84:5, col:37>
|     `-CallExpr 0x1c7a7cddd80 <col:12, col:37> 'double'
|       |-ImplicitCastExpr 0x1c7a7cddd68 <col:12> 'double (*)(__time64_t, __time64_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c7a7cddca8 <col:12> 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)' Function 0x1c7a7cd5c80 '_difftime64' 'double (__time64_t, __time64_t) __attribute__((cdecl))':'double (__time64_t, __time64_t)'
|       |-ImplicitCastExpr 0x1c7a7cdddb0 <col:24> 'time_t':'long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cddcc8 <col:24> 'time_t':'long long' lvalue ParmVar 0x1c7a7cdd9f8 '_Time1' 'time_t':'long long'
|       `-ImplicitCastExpr 0x1c7a7cdddc8 <col:31> 'time_t':'long long' <LValueToRValue>
|         `-DeclRefExpr 0x1c7a7cddce8 <col:31> 'time_t':'long long' lvalue ParmVar 0x1c7a7cdda70 '_Time2' 'time_t':'long long'
|-FunctionDecl 0x1c7a7cde028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:92:1> line:86:67 ctime 'char *(const time_t *) __attribute__((cdecl))':'char *(const time_t *)' static inline
| |-ParmVarDecl 0x1c7a7cdded8 <col:73, col:88> col:88 used _Time 'const time_t *'
| |-CompoundStmt 0x1c7a7cdc310 <line:87:1, line:92:1>
| | `-ReturnStmt 0x1c7a7cdc300 <line:90:5, col:26>
| |   `-CallExpr 0x1c7a7cdc2c0 <col:12, col:26> 'char *'
| |     |-ImplicitCastExpr 0x1c7a7cdc2a8 <col:12> 'char *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x1c7a7cdc208 <col:12> 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)' Function 0x1c7a7cd5fc8 '_ctime64' 'char *(const __time64_t *) __attribute__((cdecl))':'char *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x1c7a7cdc2e8 <col:21> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x1c7a7cdc228 <col:21> 'const time_t *' lvalue ParmVar 0x1c7a7cdded8 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x1c7a7cde0d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using ctime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cdc5c0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:94:1, line:97:1> line:94:35 ctime_s 'errno_t (char *, size_t, const time_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const time_t *)' static inline
| |-ParmVarDecl 0x1c7a7cdc340 <col:43, col:49> col:49 used _Buffer 'char *'
| |-ParmVarDecl 0x1c7a7cdc3b8 <col:58, col:65> col:65 used _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c7a7cdc430 <col:79, col:94> col:94 used _Time 'const time_t *'
| `-CompoundStmt 0x1c7a7cdc810 <line:95:1, line:97:1>
|   `-ReturnStmt 0x1c7a7cdc800 <line:96:5, col:51>
|     `-CallExpr 0x1c7a7cdc780 <col:12, col:51> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1c7a7cdc768 <col:12> 'errno_t (*)(char *, size_t, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c7a7cdc690 <col:12> 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)' Function 0x1c7a7cd6520 '_ctime64_s' 'errno_t (char *, size_t, const __time64_t *) __attribute__((cdecl))':'errno_t (char *, size_t, const __time64_t *)'
|       |-ImplicitCastExpr 0x1c7a7cdc7b8 <col:23> 'char *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cdc6b0 <col:23> 'char *' lvalue ParmVar 0x1c7a7cdc340 '_Buffer' 'char *'
|       |-ImplicitCastExpr 0x1c7a7cdc7d0 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cdc6d0 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x1c7a7cdc3b8 '_SizeInBytes' 'size_t':'unsigned long long'
|       `-ImplicitCastExpr 0x1c7a7cdc7e8 <col:46> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1c7a7cdc6f0 <col:46> 'const time_t *' lvalue ParmVar 0x1c7a7cdc430 '_Time' 'const time_t *'
|-FunctionDecl 0x1c7a7cdca58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:105:1> line:99:73 gmtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x1c7a7cdc8f8 <col:80, col:95> col:95 used _Time 'const time_t *'
| |-CompoundStmt 0x1c7a7cdcd30 <line:100:1, line:105:1>
| | `-ReturnStmt 0x1c7a7cdcd20 <line:103:5, col:27>
| |   `-CallExpr 0x1c7a7cdcce0 <col:12, col:27> 'struct tm *'
| |     |-ImplicitCastExpr 0x1c7a7cdccc8 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x1c7a7cdcc30 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x1c7a7cd6848 '_gmtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x1c7a7cdcd08 <col:22> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x1c7a7cdcc50 <col:22> 'const time_t *' lvalue ParmVar 0x1c7a7cdc8f8 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x1c7a7cdcb00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gmtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cdcf48 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:107:1, line:110:1> line:107:35 gmtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x1c7a7cdcd70 <col:44, col:56> col:56 used _Tm 'struct tm *'
| |-ParmVarDecl 0x1c7a7cdcde8 <col:61, col:76> col:76 used _Time 'const time_t *'
| `-CompoundStmt 0x1c7a7cdd150 <line:108:1, line:110:1>
|   `-ReturnStmt 0x1c7a7cdd140 <line:109:5, col:34>
|     `-CallExpr 0x1c7a7cdd0e0 <col:12, col:34> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1c7a7cdd0c8 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c7a7cdd010 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x1c7a7cd6c68 '_gmtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x1c7a7cdd110 <col:24> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cdd030 <col:24> 'struct tm *' lvalue ParmVar 0x1c7a7cdcd70 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x1c7a7cdd128 <col:29> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1c7a7cdd050 <col:29> 'const time_t *' lvalue ParmVar 0x1c7a7cdcde8 '_Time' 'const time_t *'
|-FunctionDecl 0x1c7a7cdf3b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.inl:118:1> line:112:76 localtime 'struct tm *(const time_t *) __attribute__((cdecl))':'struct tm *(const time_t *)' static inline
| |-ParmVarDecl 0x1c7a7cdf2c0 <col:86, col:101> col:101 used _Time 'const time_t *'
| |-CompoundStmt 0x1c7a7cdf630 <line:113:1, line:118:1>
| | `-ReturnStmt 0x1c7a7cdf620 <line:116:5, col:30>
| |   `-CallExpr 0x1c7a7cdf5e0 <col:12, col:30> 'struct tm *'
| |     |-ImplicitCastExpr 0x1c7a7cdf5c8 <col:12> 'struct tm *(*)(const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x1c7a7cdf588 <col:12> 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)' Function 0x1c7a7cd6ef8 '_localtime64' 'struct tm *(const __time64_t *) __attribute__((cdecl))':'struct tm *(const __time64_t *)'
| |     `-ImplicitCastExpr 0x1c7a7cdf608 <col:25> 'const time_t *' <LValueToRValue>
| |       `-DeclRefExpr 0x1c7a7cdf5a8 <col:25> 'const time_t *' lvalue ParmVar 0x1c7a7cdf2c0 '_Time' 'const time_t *'
| `-DeprecatedAttr 0x1c7a7cdf458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using localtime_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cdf7e0 <D:\Microsoft Visual Studio 12.0\VC\include\time.inl:119:1, line:122:1> line:119:35 localtime_s 'errno_t (struct tm *, const time_t *) __attribute__((cdecl))':'errno_t (struct tm *, const time_t *)' static inline
| |-ParmVarDecl 0x1c7a7cdf670 <col:47, col:59> col:59 used _Tm 'struct tm *'
| |-ParmVarDecl 0x1c7a7cdf6e8 <col:64, col:79> col:79 used _Time 'const time_t *'
| `-CompoundStmt 0x1c7a7cdf990 <line:120:1, line:122:1>
|   `-ReturnStmt 0x1c7a7cdf980 <line:121:5, col:37>
|     `-CallExpr 0x1c7a7cdf920 <col:12, col:37> 'errno_t':'int'
|       |-ImplicitCastExpr 0x1c7a7cdf908 <col:12> 'errno_t (*)(struct tm *, const __time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c7a7cdf8a8 <col:12> 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)' Function 0x1c7a7cd42b0 '_localtime64_s' 'errno_t (struct tm *, const __time64_t *) __attribute__((cdecl))':'errno_t (struct tm *, const __time64_t *)'
|       |-ImplicitCastExpr 0x1c7a7cdf950 <col:27> 'struct tm *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c7a7cdf8c8 <col:27> 'struct tm *' lvalue ParmVar 0x1c7a7cdf670 '_Tm' 'struct tm *'
|       `-ImplicitCastExpr 0x1c7a7cdf968 <col:32> 'const time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1c7a7cdf8e8 <col:32> 'const time_t *' lvalue ParmVar 0x1c7a7cdf6e8 '_Time' 'const time_t *'
|-FunctionDecl 0x1c7a7cdfb10 <line:123:1, line:126:1> line:123:34 mktime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x1c7a7cdf9d0 <col:41, col:53> col:53 used _Tm 'struct tm *'
| `-CompoundStmt 0x1c7a7cdfcd0 <line:124:1, line:126:1>
|   `-ReturnStmt 0x1c7a7cdfcc0 <line:125:5, col:25>
|     `-CallExpr 0x1c7a7cdfc80 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x1c7a7cdfc68 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c7a7cdfbd0 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x1c7a7cd4510 '_mktime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x1c7a7cdfca8 <col:22> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x1c7a7cdfbf0 <col:22> 'struct tm *' lvalue ParmVar 0x1c7a7cdf9d0 '_Tm' 'struct tm *'
|-FunctionDecl 0x1c7a7cdfde8 <line:127:1, line:130:1> line:127:34 _mkgmtime 'time_t (struct tm *) __attribute__((cdecl))':'time_t (struct tm *)' static inline
| |-ParmVarDecl 0x1c7a7cdfd10 <col:44, col:56> col:56 used _Tm 'struct tm *'
| `-CompoundStmt 0x1c7a7cdff50 <line:128:1, line:130:1>
|   `-ReturnStmt 0x1c7a7cdff40 <line:129:5, col:27>
|     `-CallExpr 0x1c7a7cdff00 <col:12, col:27> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x1c7a7cdfee8 <col:12> '__time64_t (*)(struct tm *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c7a7cdfea8 <col:12> '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)' Function 0x1c7a7cd46d0 '_mkgmtime64' '__time64_t (struct tm *) __attribute__((cdecl))':'__time64_t (struct tm *)'
|       `-ImplicitCastExpr 0x1c7a7cdff28 <col:24> 'struct tm *' <LValueToRValue>
|         `-DeclRefExpr 0x1c7a7cdfec8 <col:24> 'struct tm *' lvalue ParmVar 0x1c7a7cdfd10 '_Tm' 'struct tm *'
|-FunctionDecl 0x1c7a7ce00f0 <line:131:1, line:134:1> line:131:34 time 'time_t (time_t *) __attribute__((cdecl))':'time_t (time_t *)' static inline
| |-ParmVarDecl 0x1c7a7cdffa8 <col:39, col:48> col:48 used _Time 'time_t *'
| `-CompoundStmt 0x1c7a7cd9250 <line:132:1, line:134:1>
|   `-ReturnStmt 0x1c7a7cd9240 <line:133:5, col:25>
|     `-CallExpr 0x1c7a7cd9200 <col:12, col:25> '__time64_t':'long long'
|       |-ImplicitCastExpr 0x1c7a7cd91e8 <col:12> '__time64_t (*)(__time64_t *) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c7a7ce01b0 <col:12> '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)' Function 0x1c7a7cd4940 '_time64' '__time64_t (__time64_t *) __attribute__((cdecl))':'__time64_t (__time64_t *)'
|       `-ImplicitCastExpr 0x1c7a7cd9228 <col:20> 'time_t *' <LValueToRValue>
|         `-DeclRefExpr 0x1c7a7ce01d0 <col:20> 'time_t *' lvalue ParmVar 0x1c7a7cdffa8 '_Time' 'time_t *'
|-VarDecl 0x1c7a7cd9340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:291:67> col:67 daylight 'int' extern
| `-DeprecatedAttr 0x1c7a7cd93a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_daylight instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1c7a7cd95b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:292:68> col:68 timezone 'long' extern
| `-DeprecatedAttr 0x1c7a7cd9618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_timezone instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1c7a7cd98b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:293:76> col:68 tzname 'char *[2]' extern
| `-DeprecatedAttr 0x1c7a7cd9918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_tzname instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c7a7cd9bb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\time.h:297:63> col:53 tzset 'void (void) __attribute__((cdecl))':'void (void)'
| `-DeprecatedAttr 0x1c7a7cd9c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tzset. See online help for details." ""
|-FunctionDecl 0x1c7a7cd9f20 <.//openssl//file_jk/after\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1c7a7cd9d88 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x1c7a7cd9e08 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x1c7a7cde1e0 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1c7a7cd9ff8 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x1c7a7cda078 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x1c7a7cde290 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x1c7a7cde368 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x1c7a7cde3d8 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x1c7a7cde448 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x1c7a7cde4b8 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x1c7a7cde528 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x1c7a7cde598 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x1c7a7cde608 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x1c7a7cde678 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x1c7a7cde718 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x1c7a7cde8b8 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x1c7a7cde928 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x1c7a7cde980 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x1c7a7cdea98 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x1c7a7cdea40 'struct mime_param_st' sugar
|   `-RecordType 0x1c7a7cdea20 'struct mime_param_st'
|     `-Record 0x1c7a7cde980 'mime_param_st'
|-FunctionDecl 0x1c7a7cdec40 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x1c7a7cdeb40 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x1c7a7cded00 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x1c7a7cdee18 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x1c7a7cdedc0 'struct mime_header_st' sugar
|   `-RecordType 0x1c7a7cdeda0 'struct mime_header_st'
|     `-Record 0x1c7a7cded00 'mime_header_st'
|-FunctionDecl 0x1c7a7cdefc0 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x1c7a7cdeec0 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x1c7a7cdf110 <line:46:1, col:32> col:20 used _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x1c7a7cdb308 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x1c7a7cdb1b0 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1c7a7cdb230 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x1c7a7cdb530 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x1c7a7cdb3d8 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x1c7a7cdb458 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x1c7a7cdb7f0 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1c7a7cdb600 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x1c7a7cdb680 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x1c7a7cdb700 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x1c7a7cdba28 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x1c7a7cdb8c8 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x1c7a7cdb948 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x1c7a7cdbce0 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x1c7a7cdbaf8 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x1c7a7cdbb78 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x1c7a7cdbbf8 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x1c7a7cdbf60 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1c7a7cdbdb8 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x1c7a7cdbe38 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x1c7a7cdbeb8 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x1c7a7ce1210 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x1c7a7cdc038 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1c7a7cdc0b8 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1c7a7ce13f8 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1c7a7ce12e0 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1c7a7ce1360 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1c7a7ce17b0 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x1c7a7ce14c0 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x1c7a7ce15a8 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x1c7a7ce1630 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x1c7a7ce16b0 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x1c7a7ce1b10 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x1c7a7ce1890 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x1c7a7ce1910 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x1c7a7ce1990 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x1c7a7ce1a10 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x1c7a7ce1dd8 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1c7a7ce1bf0 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x1c7a7ce1c70 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x1c7a7ce1cf0 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x1c7a7ce2050 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1c7a7ce1eb0 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x1c7a7ce1f30 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x1c7a7ce1fb0 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x1c7a7cda1d0 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1c7a7ce2128 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x1c7a7ce21a8 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x1c7a7cda4c0 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1c7a7cda2a0 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x1c7a7cda358 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x1c7a7cda3d8 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x1c7a7cda6f0 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1c7a7cda590 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1c7a7cda618 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x1c7a7cda970 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1c7a7cda7c0 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x1c7a7cda848 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x1c7a7cda8c8 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x1c7a7cdab68 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1c7a7cdaa40 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x1c7a7cdaac8 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x1c7a7cdade8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1c7a7cdac38 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x1c7a7cdacc0 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x1c7a7cdad40 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x1c7a7ce3230 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x1c7a7cdaeb8 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x1c7a7cdaf38 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x1c7a7cdafc0 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x1c7a7cdb040 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x1c7a7ce34f0 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x1c7a7ce3308 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x1c7a7ce3388 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x1c7a7ce3408 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x1c7a7ce36f0 <.//openssl//file_jk/after\crypto\asn1\a_utctm.c:16:1, line:106:1> line:16:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1c7a7ce35d0 <col:24, col:35> col:35 used tm 'struct tm *'
| |-ParmVarDecl 0x1c7a7ce3650 <col:39, col:59> col:59 invalid d 'const int *'
| `-CompoundStmt 0x1c7a7ce6f28 <line:17:1, line:106:1>
|   |-DeclStmt 0x1c7a7ce3b58 <line:18:5, col:57>
|   | `-VarDecl 0x1c7a7ce38a0 <col:5, col:56> col:22 used min 'const int [8]' static cinit
|   |   `-InitListExpr 0x1c7a7ce3ad8 <col:31, col:56> 'const int [8]'
|   |     |-IntegerLiteral 0x1c7a7ce3908 <col:33> 'int' 0
|   |     |-IntegerLiteral 0x1c7a7ce3930 <col:36> 'int' 1
|   |     |-IntegerLiteral 0x1c7a7ce3958 <col:39> 'int' 1
|   |     |-IntegerLiteral 0x1c7a7ce3980 <col:42> 'int' 0
|   |     |-IntegerLiteral 0x1c7a7ce39a8 <col:45> 'int' 0
|   |     |-IntegerLiteral 0x1c7a7ce39d0 <col:48> 'int' 0
|   |     |-IntegerLiteral 0x1c7a7ce39f8 <col:51> 'int' 0
|   |     `-IntegerLiteral 0x1c7a7ce3a20 <col:54> 'int' 0
|   |-DeclStmt 0x1c7a7ce3e90 <line:19:5, col:65>
|   | `-VarDecl 0x1c7a7ce3bd8 <col:5, col:64> col:22 used max 'const int [8]' static cinit
|   |   `-InitListExpr 0x1c7a7ce3e10 <col:31, col:64> 'const int [8]'
|   |     |-IntegerLiteral 0x1c7a7ce3c40 <col:33> 'int' 99
|   |     |-IntegerLiteral 0x1c7a7ce3c68 <col:37> 'int' 12
|   |     |-IntegerLiteral 0x1c7a7ce3c90 <col:41> 'int' 31
|   |     |-IntegerLiteral 0x1c7a7ce3cb8 <col:45> 'int' 23
|   |     |-IntegerLiteral 0x1c7a7ce3ce0 <col:49> 'int' 59
|   |     |-IntegerLiteral 0x1c7a7ce3d08 <col:53> 'int' 59
|   |     |-IntegerLiteral 0x1c7a7ce3d30 <col:57> 'int' 12
|   |     `-IntegerLiteral 0x1c7a7ce3d58 <col:61> 'int' 59
|   |-DeclStmt 0x1c7a7ce3f28 <line:20:5, col:12>
|   | `-VarDecl 0x1c7a7ce3ec0 <col:5, col:11> col:11 used a 'char *'
|   |-DeclStmt 0x1c7a7ce4168 <line:21:5, col:19>
|   | |-VarDecl 0x1c7a7ce3f58 <col:5, col:9> col:9 used n 'int'
|   | |-VarDecl 0x1c7a7ce3fd8 <col:5, col:12> col:12 used i 'int'
|   | |-VarDecl 0x1c7a7ce4058 <col:5, col:15> col:15 used l 'int'
|   | `-VarDecl 0x1c7a7ce40d8 <col:5, col:18> col:18 used o 'int'
|   |-IfStmt 0x1c7a7ce41f0 <line:23:5, line:24:18>
|   | |-OpaqueValueExpr 0x1c7a7ce41d8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c7a7ce41c8 <col:9, col:18>
|   |   `-ParenExpr 0x1c7a7ce41a8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1c7a7ce4180 <col:17> 'int' 0
|   |-BinaryOperator 0x1c7a7ce5300 <line:27:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x1c7a7ce52a0 <col:5> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   | `-IntegerLiteral 0x1c7a7ce52d8 <col:9> 'int' 0
|   |-IfStmt 0x1c7a7ce5408 <line:29:5, line:30:14>
|   | |-BinaryOperator 0x1c7a7ce5380 <line:29:9, col:13> 'int' '<'
|   | | |-ImplicitCastExpr 0x1c7a7ce5368 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c7a7ce5320 <col:9> 'int' lvalue Var 0x1c7a7ce4058 'l' 'int'
|   | | `-IntegerLiteral 0x1c7a7ce5340 <col:13> 'int' 11
|   | `-GotoStmt 0x1c7a7ce53f0 <line:30:9, col:14> 'err' 0x1c7a7ce53a0
|   |-ForStmt 0x1c7a7ce31d0 <line:31:5, line:74:5>
|   | |-BinaryOperator 0x1c7a7ce5480 <line:31:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1c7a7ce5420 <col:10> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   | | `-IntegerLiteral 0x1c7a7ce5458 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1c7a7ce5500 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1c7a7ce54e8 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c7a7ce54a0 <col:17> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   | | `-IntegerLiteral 0x1c7a7ce54c0 <col:21> 'int' 6
|   | |-UnaryOperator 0x1c7a7ce5540 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1c7a7ce5520 <col:24> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   | `-CompoundStmt 0x1c7a7ce3178 <col:29, line:74:5>
|   |   |-IfStmt 0x1c7a7ce5b40 <line:32:9, line:37:9>
|   |   | |-BinaryOperator 0x1c7a7ce59a0 <line:32:13, col:73> 'int' '&&'
|   |   | | |-ParenExpr 0x1c7a7ce55d8 <col:13, col:20> 'int'
|   |   | | | `-BinaryOperator 0x1c7a7ce55b8 <col:14, col:19> 'int' '=='
|   |   | | |   |-ImplicitCastExpr 0x1c7a7ce55a0 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1c7a7ce5558 <col:14> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |   | | |   `-IntegerLiteral 0x1c7a7ce5578 <col:19> 'int' 5
|   |   | | `-ParenExpr 0x1c7a7ce5980 <col:25, col:73> 'int'
|   |   | |   `-BinaryOperator 0x1c7a7ce5960 <col:26, col:72> 'int' '||'
|   |   | |     |-BinaryOperator 0x1c7a7ce5828 <col:26, col:55> 'int' '||'
|   |   | |     | |-ParenExpr 0x1c7a7ce56f0 <col:26, col:38> 'int'
|   |   | |     | | `-BinaryOperator 0x1c7a7ce56d0 <col:27, col:35> 'int' '=='
|   |   | |     | |   |-ImplicitCastExpr 0x1c7a7ce56b8 <col:27, col:30> 'int' <IntegralCast>
|   |   | |     | |   | `-ImplicitCastExpr 0x1c7a7ce56a0 <col:27, col:30> 'char' <LValueToRValue>
|   |   | |     | |   |   `-ArraySubscriptExpr 0x1c7a7ce5668 <col:27, col:30> 'char' lvalue
|   |   | |     | |   |     |-ImplicitCastExpr 0x1c7a7ce5638 <col:27> 'char *' <LValueToRValue>
|   |   | |     | |   |     | `-DeclRefExpr 0x1c7a7ce55f8 <col:27> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |   | |     | |   |     `-ImplicitCastExpr 0x1c7a7ce5650 <col:29> 'int' <LValueToRValue>
|   |   | |     | |   |       `-DeclRefExpr 0x1c7a7ce5618 <col:29> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   | |     | |   `-CharacterLiteral 0x1c7a7ce5688 <col:35> 'int' 90
|   |   | |     | `-ParenExpr 0x1c7a7ce5808 <col:43, col:55> 'int'
|   |   | |     |   `-BinaryOperator 0x1c7a7ce57e8 <col:44, col:52> 'int' '=='
|   |   | |     |     |-ImplicitCastExpr 0x1c7a7ce57d0 <col:44, col:47> 'int' <IntegralCast>
|   |   | |     |     | `-ImplicitCastExpr 0x1c7a7ce57b8 <col:44, col:47> 'char' <LValueToRValue>
|   |   | |     |     |   `-ArraySubscriptExpr 0x1c7a7ce5780 <col:44, col:47> 'char' lvalue
|   |   | |     |     |     |-ImplicitCastExpr 0x1c7a7ce5750 <col:44> 'char *' <LValueToRValue>
|   |   | |     |     |     | `-DeclRefExpr 0x1c7a7ce5710 <col:44> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |   | |     |     |     `-ImplicitCastExpr 0x1c7a7ce5768 <col:46> 'int' <LValueToRValue>
|   |   | |     |     |       `-DeclRefExpr 0x1c7a7ce5730 <col:46> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   | |     |     `-CharacterLiteral 0x1c7a7ce57a0 <col:52> 'int' 43
|   |   | |     `-ParenExpr 0x1c7a7ce5940 <col:60, col:72> 'int'
|   |   | |       `-BinaryOperator 0x1c7a7ce5920 <col:61, col:69> 'int' '=='
|   |   | |         |-ImplicitCastExpr 0x1c7a7ce5908 <col:61, col:64> 'int' <IntegralCast>
|   |   | |         | `-ImplicitCastExpr 0x1c7a7ce58f0 <col:61, col:64> 'char' <LValueToRValue>
|   |   | |         |   `-ArraySubscriptExpr 0x1c7a7ce58b8 <col:61, col:64> 'char' lvalue
|   |   | |         |     |-ImplicitCastExpr 0x1c7a7ce5888 <col:61> 'char *' <LValueToRValue>
|   |   | |         |     | `-DeclRefExpr 0x1c7a7ce5848 <col:61> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |   | |         |     `-ImplicitCastExpr 0x1c7a7ce58a0 <col:63> 'int' <LValueToRValue>
|   |   | |         |       `-DeclRefExpr 0x1c7a7ce5868 <col:63> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   | |         `-CharacterLiteral 0x1c7a7ce58d8 <col:69> 'int' 45
|   |   | `-CompoundStmt 0x1c7a7ce5b18 <col:76, line:37:9>
|   |   |   |-UnaryOperator 0x1c7a7ce59e0 <line:33:13, col:14> 'int' postfix '++'
|   |   |   | `-DeclRefExpr 0x1c7a7ce59c0 <col:13> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |   |   |-IfStmt 0x1c7a7ce5af8 <line:34:13, line:35:30>
|   |   |   | |-ImplicitCastExpr 0x1c7a7ce5a30 <line:34:17> 'struct tm *' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1c7a7ce59f8 <col:17> 'struct tm *' lvalue ParmVar 0x1c7a7ce35d0 'tm' 'struct tm *'
|   |   |   | `-BinaryOperator 0x1c7a7ce5ad8 <line:35:17, col:30> 'int' '='
|   |   |   |   |-MemberExpr 0x1c7a7ce5a80 <col:17, col:21> 'int' lvalue ->tm_sec 0x1c7a7cc8978
|   |   |   |   | `-ImplicitCastExpr 0x1c7a7ce5a68 <col:17> 'struct tm *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x1c7a7ce5a48 <col:17> 'struct tm *' lvalue ParmVar 0x1c7a7ce35d0 'tm' 'struct tm *'
|   |   |   |   `-IntegerLiteral 0x1c7a7ce5ab0 <col:30> 'int' 0
|   |   |   `-BreakStmt 0x1c7a7ce5b10 <line:36:13>
|   |   |-IfStmt 0x1c7a7ce5dc0 <line:38:9, line:39:18>
|   |   | |-BinaryOperator 0x1c7a7ce5d88 <line:38:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x1c7a7ce5c50 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x1c7a7ce5c30 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x1c7a7ce5c18 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x1c7a7ce5c00 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x1c7a7ce5bc8 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x1c7a7ce5b98 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x1c7a7ce5b58 <col:14> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x1c7a7ce5bb0 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x1c7a7ce5b78 <col:16> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x1c7a7ce5be8 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x1c7a7ce5d68 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x1c7a7ce5d48 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x1c7a7ce5d30 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x1c7a7ce5d18 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x1c7a7ce5ce0 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x1c7a7ce5cb0 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x1c7a7ce5c70 <col:30> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x1c7a7ce5cc8 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x1c7a7ce5c90 <col:32> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   | |     `-CharacterLiteral 0x1c7a7ce5d00 <col:37> 'int' 57
|   |   | `-GotoStmt 0x1c7a7ce5da8 <line:39:13, col:18> 'err' 0x1c7a7ce53a0
|   |   |-BinaryOperator 0x1c7a7ce5f08 <line:40:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x1c7a7ce5dd8 <col:9> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |   | `-BinaryOperator 0x1c7a7ce5ee8 <col:13, col:20> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x1c7a7ce5ed0 <col:13, col:16> 'int' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x1c7a7ce5eb8 <col:13, col:16> 'char' <LValueToRValue>
|   |   |   |   `-ArraySubscriptExpr 0x1c7a7ce5e80 <col:13, col:16> 'char' lvalue
|   |   |   |     |-ImplicitCastExpr 0x1c7a7ce5e50 <col:13> 'char *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x1c7a7ce5e10 <col:13> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |   |   |     `-ImplicitCastExpr 0x1c7a7ce5e68 <col:15> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1c7a7ce5e30 <col:15> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   |   `-CharacterLiteral 0x1c7a7ce5ea0 <col:20> 'int' 48
|   |   |-IfStmt 0x1c7a7ce5fd0 <line:41:9, line:42:18>
|   |   | |-BinaryOperator 0x1c7a7ce5f98 <line:41:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x1c7a7ce5f48 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x1c7a7ce5f28 <col:15> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x1c7a7ce5f80 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1c7a7ce5f60 <col:19> 'int' lvalue Var 0x1c7a7ce4058 'l' 'int'
|   |   | `-GotoStmt 0x1c7a7ce5fb8 <line:42:13, col:18> 'err' 0x1c7a7ce53a0
|   |   |-IfStmt 0x1c7a7ce2220 <line:44:9, line:45:18>
|   |   | |-BinaryOperator 0x1c7a7ce6218 <line:44:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x1c7a7ce60e0 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x1c7a7ce60c0 <col:14, col:21> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x1c7a7ce60a8 <col:14, col:17> 'int' <IntegralCast>
|   |   | | |   | `-ImplicitCastExpr 0x1c7a7ce6090 <col:14, col:17> 'char' <LValueToRValue>
|   |   | | |   |   `-ArraySubscriptExpr 0x1c7a7ce6058 <col:14, col:17> 'char' lvalue
|   |   | | |   |     |-ImplicitCastExpr 0x1c7a7ce6028 <col:14> 'char *' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x1c7a7ce5fe8 <col:14> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |   | | |   |     `-ImplicitCastExpr 0x1c7a7ce6040 <col:16> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x1c7a7ce6008 <col:16> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   | | |   `-CharacterLiteral 0x1c7a7ce6078 <col:21> 'int' 48
|   |   | | `-ParenExpr 0x1c7a7ce61f8 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x1c7a7ce61d8 <col:30, col:37> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x1c7a7ce61c0 <col:30, col:33> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x1c7a7ce61a8 <col:30, col:33> 'char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x1c7a7ce6170 <col:30, col:33> 'char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x1c7a7ce6140 <col:30> 'char *' <LValueToRValue>
|   |   | |     |     | `-DeclRefExpr 0x1c7a7ce6100 <col:30> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |   | |     |     `-ImplicitCastExpr 0x1c7a7ce6158 <col:32> 'int' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x1c7a7ce6120 <col:32> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   | |     `-CharacterLiteral 0x1c7a7ce6190 <col:37> 'int' 57
|   |   | `-GotoStmt 0x1c7a7ce6238 <line:45:13, col:18> 'err' 0x1c7a7ce53a0
|   |   |-BinaryOperator 0x1c7a7ce2410 <line:46:9, col:31> 'int' '='
|   |   | |-DeclRefExpr 0x1c7a7ce2238 <col:9> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |   | `-BinaryOperator 0x1c7a7ce23f0 <col:13, col:31> 'int' '-'
|   |   |   |-BinaryOperator 0x1c7a7ce23b8 <col:13, col:27> 'int' '+'
|   |   |   | |-ParenExpr 0x1c7a7ce22d8 <col:13, col:20> 'int'
|   |   |   | | `-BinaryOperator 0x1c7a7ce22b8 <col:14, col:18> 'int' '*'
|   |   |   | |   |-ImplicitCastExpr 0x1c7a7ce22a0 <col:14> 'int' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x1c7a7ce2258 <col:14> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |   |   | |   `-IntegerLiteral 0x1c7a7ce2278 <col:18> 'int' 10
|   |   |   | `-ImplicitCastExpr 0x1c7a7ce23a0 <col:24, col:27> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1c7a7ce2388 <col:24, col:27> 'char' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x1c7a7ce2368 <col:24, col:27> 'char' lvalue
|   |   |   |       |-ImplicitCastExpr 0x1c7a7ce2338 <col:24> 'char *' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x1c7a7ce22f8 <col:24> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |   |   |       `-ImplicitCastExpr 0x1c7a7ce2350 <col:26> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x1c7a7ce2318 <col:26> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   |   `-CharacterLiteral 0x1c7a7ce23d8 <col:31> 'int' 48
|   |   |-IfStmt 0x1c7a7ce24d8 <line:47:9, line:48:18>
|   |   | |-BinaryOperator 0x1c7a7ce24a0 <line:47:13, col:19> 'int' '>'
|   |   | | |-UnaryOperator 0x1c7a7ce2450 <col:13, col:15> 'int' prefix '++'
|   |   | | | `-DeclRefExpr 0x1c7a7ce2430 <col:15> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   | | `-ImplicitCastExpr 0x1c7a7ce2488 <col:19> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1c7a7ce2468 <col:19> 'int' lvalue Var 0x1c7a7ce4058 'l' 'int'
|   |   | `-GotoStmt 0x1c7a7ce24c0 <line:48:13, col:18> 'err' 0x1c7a7ce53a0
|   |   |-IfStmt 0x1c7a7ce2798 <line:50:9, line:51:18>
|   |   | |-BinaryOperator 0x1c7a7ce2760 <line:50:13, col:40> 'int' '||'
|   |   | | |-ParenExpr 0x1c7a7ce2608 <col:13, col:24> 'int'
|   |   | | | `-BinaryOperator 0x1c7a7ce25e8 <col:14, col:23> 'int' '<'
|   |   | | |   |-ImplicitCastExpr 0x1c7a7ce25b8 <col:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1c7a7ce24f0 <col:14> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |   | | |   `-ImplicitCastExpr 0x1c7a7ce25d0 <col:18, col:23> 'int' <LValueToRValue>
|   |   | | |     `-ArraySubscriptExpr 0x1c7a7ce2598 <col:18, col:23> 'const int' lvalue
|   |   | | |       |-ImplicitCastExpr 0x1c7a7ce2568 <col:18> 'const int *' <ArrayToPointerDecay>
|   |   | | |       | `-DeclRefExpr 0x1c7a7ce2510 <col:18> 'const int [8]' lvalue Var 0x1c7a7ce38a0 'min' 'const int [8]'
|   |   | | |       `-ImplicitCastExpr 0x1c7a7ce2580 <col:22> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x1c7a7ce2548 <col:22> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |   | | `-ParenExpr 0x1c7a7ce2740 <col:29, col:40> 'int'
|   |   | |   `-BinaryOperator 0x1c7a7ce2720 <col:30, col:39> 'int' '>'
|   |   | |     |-ImplicitCastExpr 0x1c7a7ce26f0 <col:30> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1c7a7ce2628 <col:30> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |   | |     `-ImplicitCastExpr 0x1c7a7ce2708 <col:34, col:39> 'int' <LValueToRValue>
|   |   | |       `-ArraySubscriptExpr 0x1c7a7ce26d0 <col:34, col:39> 'const int' lvalue
|   |   | |         |-ImplicitCastExpr 0x1c7a7ce26a0 <col:34> 'const int *' <ArrayToPointerDecay>
|   |   | |         | `-DeclRefExpr 0x1c7a7ce2648 <col:34> 'const int [8]' lvalue Var 0x1c7a7ce3bd8 'max' 'const int [8]'
|   |   | |         `-ImplicitCastExpr 0x1c7a7ce26b8 <col:38> 'int' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x1c7a7ce2680 <col:38> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |   | `-GotoStmt 0x1c7a7ce2780 <line:51:13, col:18> 'err' 0x1c7a7ce53a0
|   |   `-IfStmt 0x1c7a7ce3160 <line:52:9, line:73:9>
|   |     |-ImplicitCastExpr 0x1c7a7ce27d0 <line:52:13> 'struct tm *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1c7a7ce27b0 <col:13> 'struct tm *' lvalue ParmVar 0x1c7a7ce35d0 'tm' 'struct tm *'
|   |     `-CompoundStmt 0x1c7a7ce3148 <col:17, line:73:9>
|   |       `-SwitchStmt 0x1c7a7ce2820 <line:53:13, line:72:13>
|   |         |-ImplicitCastExpr 0x1c7a7ce2808 <line:53:21> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1c7a7ce27e8 <col:21> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |         `-CompoundStmt 0x1c7a7ce30d8 <col:24, line:72:13>
|   |           |-CaseStmt 0x1c7a7ce2880 <line:54:13, line:55:50>
|   |           | |-ConstantExpr 0x1c7a7ce2868 <line:54:18> 'int'
|   |           | | `-IntegerLiteral 0x1c7a7ce2840 <col:18> 'int' 0
|   |           | `-BinaryOperator 0x1c7a7ce2a78 <line:55:17, col:50> 'int' '='
|   |           |   |-MemberExpr 0x1c7a7ce28e0 <col:17, col:21> 'int' lvalue ->tm_year 0x1c7a7cc8ba8
|   |           |   | `-ImplicitCastExpr 0x1c7a7ce28c8 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1c7a7ce28a8 <col:17> 'struct tm *' lvalue ParmVar 0x1c7a7ce35d0 'tm' 'struct tm *'
|   |           |   `-ConditionalOperator 0x1c7a7ce2a48 <col:31, col:50> 'int'
|   |           |     |-BinaryOperator 0x1c7a7ce2970 <col:31, col:35> 'int' '<'
|   |           |     | |-ImplicitCastExpr 0x1c7a7ce2958 <col:31> 'int' <LValueToRValue>
|   |           |     | | `-DeclRefExpr 0x1c7a7ce2910 <col:31> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |           |     | `-IntegerLiteral 0x1c7a7ce2930 <col:35> 'int' 50
|   |           |     |-BinaryOperator 0x1c7a7ce29f0 <col:40, col:44> 'int' '+'
|   |           |     | |-ImplicitCastExpr 0x1c7a7ce29d8 <col:40> 'int' <LValueToRValue>
|   |           |     | | `-DeclRefExpr 0x1c7a7ce2990 <col:40> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |           |     | `-IntegerLiteral 0x1c7a7ce29b0 <col:44> 'int' 100
|   |           |     `-ImplicitCastExpr 0x1c7a7ce2a30 <col:50> 'int' <LValueToRValue>
|   |           |       `-DeclRefExpr 0x1c7a7ce2a10 <col:50> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |           |-BreakStmt 0x1c7a7ce2a98 <line:56:17>
|   |           |-CaseStmt 0x1c7a7ce2ae0 <line:57:13, line:58:34>
|   |           | |-ConstantExpr 0x1c7a7ce2ac8 <line:57:18> 'int'
|   |           | | `-IntegerLiteral 0x1c7a7ce2aa0 <col:18> 'int' 1
|   |           | `-BinaryOperator 0x1c7a7ce2bf0 <line:58:17, col:34> 'int' '='
|   |           |   |-MemberExpr 0x1c7a7ce2b40 <col:17, col:21> 'int' lvalue ->tm_mon 0x1c7a7cc8b38
|   |           |   | `-ImplicitCastExpr 0x1c7a7ce2b28 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1c7a7ce2b08 <col:17> 'struct tm *' lvalue ParmVar 0x1c7a7ce35d0 'tm' 'struct tm *'
|   |           |   `-BinaryOperator 0x1c7a7ce2bd0 <col:30, col:34> 'int' '-'
|   |           |     |-ImplicitCastExpr 0x1c7a7ce2bb8 <col:30> 'int' <LValueToRValue>
|   |           |     | `-DeclRefExpr 0x1c7a7ce2b70 <col:30> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |           |     `-IntegerLiteral 0x1c7a7ce2b90 <col:34> 'int' 1
|   |           |-BreakStmt 0x1c7a7ce2c10 <line:59:17>
|   |           |-CaseStmt 0x1c7a7ce2c58 <line:60:13, line:61:31>
|   |           | |-ConstantExpr 0x1c7a7ce2c40 <line:60:18> 'int'
|   |           | | `-IntegerLiteral 0x1c7a7ce2c18 <col:18> 'int' 2
|   |           | `-BinaryOperator 0x1c7a7ce2d20 <line:61:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x1c7a7ce2cb8 <col:17, col:21> 'int' lvalue ->tm_mday 0x1c7a7cc8ac8
|   |           |   | `-ImplicitCastExpr 0x1c7a7ce2ca0 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1c7a7ce2c80 <col:17> 'struct tm *' lvalue ParmVar 0x1c7a7ce35d0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x1c7a7ce2d08 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x1c7a7ce2ce8 <col:31> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |           |-BreakStmt 0x1c7a7ce2d40 <line:62:17>
|   |           |-CaseStmt 0x1c7a7ce2d88 <line:63:13, line:64:31>
|   |           | |-ConstantExpr 0x1c7a7ce2d70 <line:63:18> 'int'
|   |           | | `-IntegerLiteral 0x1c7a7ce2d48 <col:18> 'int' 3
|   |           | `-BinaryOperator 0x1c7a7ce2e50 <line:64:17, col:31> 'int' '='
|   |           |   |-MemberExpr 0x1c7a7ce2de8 <col:17, col:21> 'int' lvalue ->tm_hour 0x1c7a7cc8a58
|   |           |   | `-ImplicitCastExpr 0x1c7a7ce2dd0 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1c7a7ce2db0 <col:17> 'struct tm *' lvalue ParmVar 0x1c7a7ce35d0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x1c7a7ce2e38 <col:31> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x1c7a7ce2e18 <col:31> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |           |-BreakStmt 0x1c7a7ce2e70 <line:65:17>
|   |           |-CaseStmt 0x1c7a7ce2eb8 <line:66:13, line:67:30>
|   |           | |-ConstantExpr 0x1c7a7ce2ea0 <line:66:18> 'int'
|   |           | | `-IntegerLiteral 0x1c7a7ce2e78 <col:18> 'int' 4
|   |           | `-BinaryOperator 0x1c7a7ce2f80 <line:67:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x1c7a7ce2f18 <col:17, col:21> 'int' lvalue ->tm_min 0x1c7a7cc89e8
|   |           |   | `-ImplicitCastExpr 0x1c7a7ce2f00 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1c7a7ce2ee0 <col:17> 'struct tm *' lvalue ParmVar 0x1c7a7ce35d0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x1c7a7ce2f68 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x1c7a7ce2f48 <col:30> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |           |-BreakStmt 0x1c7a7ce2fa0 <line:68:17>
|   |           |-CaseStmt 0x1c7a7ce2fe8 <line:69:13, line:70:30>
|   |           | |-ConstantExpr 0x1c7a7ce2fd0 <line:69:18> 'int'
|   |           | | `-IntegerLiteral 0x1c7a7ce2fa8 <col:18> 'int' 5
|   |           | `-BinaryOperator 0x1c7a7ce30b0 <line:70:17, col:30> 'int' '='
|   |           |   |-MemberExpr 0x1c7a7ce3048 <col:17, col:21> 'int' lvalue ->tm_sec 0x1c7a7cc8978
|   |           |   | `-ImplicitCastExpr 0x1c7a7ce3030 <col:17> 'struct tm *' <LValueToRValue>
|   |           |   |   `-DeclRefExpr 0x1c7a7ce3010 <col:17> 'struct tm *' lvalue ParmVar 0x1c7a7ce35d0 'tm' 'struct tm *'
|   |           |   `-ImplicitCastExpr 0x1c7a7ce3098 <col:30> 'int' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x1c7a7ce3078 <col:30> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |           `-BreakStmt 0x1c7a7ce30d0 <line:71:17>
|   |-IfStmt 0x1c7a7ce6e10 <line:75:5, line:102:5> has_else
|   | |-BinaryOperator 0x1c7a7ce8358 <line:75:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c7a7ce8340 <col:9, col:12> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1c7a7ce8328 <col:9, col:12> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x1c7a7ce82f0 <col:9, col:12> 'char' lvalue
|   | | |     |-ImplicitCastExpr 0x1c7a7ce82c0 <col:9> 'char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x1c7a7ce8280 <col:9> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   | | |     `-ImplicitCastExpr 0x1c7a7ce82d8 <col:11> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1c7a7ce82a0 <col:11> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   | | `-CharacterLiteral 0x1c7a7ce8310 <col:17> 'int' 90
|   | |-UnaryOperator 0x1c7a7ce8398 <line:76:9, col:10> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1c7a7ce8378 <col:9> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   | `-IfStmt 0x1c7a7ce6df8 <line:77:10, line:102:5>
|   |   |-BinaryOperator 0x1c7a7ce85e0 <line:77:14, col:43> 'int' '||'
|   |   | |-ParenExpr 0x1c7a7ce84a8 <col:14, col:26> 'int'
|   |   | | `-BinaryOperator 0x1c7a7ce8488 <col:15, col:23> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x1c7a7ce8470 <col:15, col:18> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x1c7a7ce8458 <col:15, col:18> 'char' <LValueToRValue>
|   |   | |   |   `-ArraySubscriptExpr 0x1c7a7ce8420 <col:15, col:18> 'char' lvalue
|   |   | |   |     |-ImplicitCastExpr 0x1c7a7ce83f0 <col:15> 'char *' <LValueToRValue>
|   |   | |   |     | `-DeclRefExpr 0x1c7a7ce83b0 <col:15> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |   | |   |     `-ImplicitCastExpr 0x1c7a7ce8408 <col:17> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x1c7a7ce83d0 <col:17> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   | |   `-CharacterLiteral 0x1c7a7ce8440 <col:23> 'int' 43
|   |   | `-ParenExpr 0x1c7a7ce85c0 <col:31, col:43> 'int'
|   |   |   `-BinaryOperator 0x1c7a7ce85a0 <col:32, col:40> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x1c7a7ce8588 <col:32, col:35> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x1c7a7ce8570 <col:32, col:35> 'char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x1c7a7ce8538 <col:32, col:35> 'char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1c7a7ce8508 <col:32> 'char *' <LValueToRValue>
|   |   |     |     | `-DeclRefExpr 0x1c7a7ce84c8 <col:32> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |   |     |     `-ImplicitCastExpr 0x1c7a7ce8520 <col:34> 'int' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x1c7a7ce84e8 <col:34> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   |     `-CharacterLiteral 0x1c7a7ce8558 <col:40> 'int' 45
|   |   `-CompoundStmt 0x1c7a7ce6dc0 <col:46, line:102:5>
|   |     |-DeclStmt 0x1c7a7ce88d0 <line:78:9, col:55>
|   |     | |-VarDecl 0x1c7a7ce8618 <col:9, col:42> col:13 used offsign 'int' cinit
|   |     | | `-ConditionalOperator 0x1c7a7ce87e0 <col:23, col:42> 'int'
|   |     | |   |-BinaryOperator 0x1c7a7ce8758 <col:23, col:31> 'int' '=='
|   |     | |   | |-ImplicitCastExpr 0x1c7a7ce8740 <col:23, col:26> 'int' <IntegralCast>
|   |     | |   | | `-ImplicitCastExpr 0x1c7a7ce8728 <col:23, col:26> 'char' <LValueToRValue>
|   |     | |   | |   `-ArraySubscriptExpr 0x1c7a7ce86f0 <col:23, col:26> 'char' lvalue
|   |     | |   | |     |-ImplicitCastExpr 0x1c7a7ce86c0 <col:23> 'char *' <LValueToRValue>
|   |     | |   | |     | `-DeclRefExpr 0x1c7a7ce8680 <col:23> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |     | |   | |     `-ImplicitCastExpr 0x1c7a7ce86d8 <col:25> 'int' <LValueToRValue>
|   |     | |   | |       `-DeclRefExpr 0x1c7a7ce86a0 <col:25> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |     | |   | `-CharacterLiteral 0x1c7a7ce8710 <col:31> 'int' 45
|   |     | |   |-IntegerLiteral 0x1c7a7ce8778 <col:37> 'int' 1
|   |     | |   `-UnaryOperator 0x1c7a7ce87c8 <col:41, col:42> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1c7a7ce87a0 <col:42> 'int' 1
|   |     | `-VarDecl 0x1c7a7ce8828 <col:9, col:54> col:45 used offset 'int' cinit
|   |     |   `-IntegerLiteral 0x1c7a7ce8890 <col:54> 'int' 0
|   |     |-UnaryOperator 0x1c7a7ce8908 <line:79:9, col:10> 'int' postfix '++'
|   |     | `-DeclRefExpr 0x1c7a7ce88e8 <col:9> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |     |-IfStmt 0x1c7a7ce8a10 <line:80:9, line:81:18>
|   |     | |-BinaryOperator 0x1c7a7ce89d8 <line:80:13, col:21> 'int' '>'
|   |     | | |-BinaryOperator 0x1c7a7ce8980 <col:13, col:17> 'int' '+'
|   |     | | | |-ImplicitCastExpr 0x1c7a7ce8968 <col:13> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1c7a7ce8920 <col:13> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |     | | | `-IntegerLiteral 0x1c7a7ce8940 <col:17> 'int' 4
|   |     | | `-ImplicitCastExpr 0x1c7a7ce89c0 <col:21> 'int' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x1c7a7ce89a0 <col:21> 'int' lvalue Var 0x1c7a7ce4058 'l' 'int'
|   |     | `-GotoStmt 0x1c7a7ce89f8 <line:81:13, col:18> 'err' 0x1c7a7ce53a0
|   |     |-ForStmt 0x1c7a7ce6a00 <line:82:9, line:99:9>
|   |     | |-BinaryOperator 0x1c7a7ce8a70 <line:82:14, col:18> 'int' '='
|   |     | | |-DeclRefExpr 0x1c7a7ce8a28 <col:14> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |     | | `-IntegerLiteral 0x1c7a7ce8a48 <col:18> 'int' 6
|   |     | |-<<<NULL>>>
|   |     | |-BinaryOperator 0x1c7a7ce8af0 <col:21, col:25> 'int' '<'
|   |     | | |-ImplicitCastExpr 0x1c7a7ce8ad8 <col:21> 'int' <LValueToRValue>
|   |     | | | `-DeclRefExpr 0x1c7a7ce8a90 <col:21> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |     | | `-IntegerLiteral 0x1c7a7ce8ab0 <col:25> 'int' 8
|   |     | |-UnaryOperator 0x1c7a7ce8b30 <col:28, col:29> 'int' postfix '++'
|   |     | | `-DeclRefExpr 0x1c7a7ce8b10 <col:28> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |     | `-CompoundStmt 0x1c7a7ce69b0 <col:33, line:99:9>
|   |     |   |-IfStmt 0x1c7a7ce8db0 <line:83:13, line:84:22>
|   |     |   | |-BinaryOperator 0x1c7a7ce8d78 <line:83:17, col:44> 'int' '||'
|   |     |   | | |-ParenExpr 0x1c7a7ce8c40 <col:17, col:28> 'int'
|   |     |   | | | `-BinaryOperator 0x1c7a7ce8c20 <col:18, col:25> 'int' '<'
|   |     |   | | |   |-ImplicitCastExpr 0x1c7a7ce8c08 <col:18, col:21> 'int' <IntegralCast>
|   |     |   | | |   | `-ImplicitCastExpr 0x1c7a7ce8bf0 <col:18, col:21> 'char' <LValueToRValue>
|   |     |   | | |   |   `-ArraySubscriptExpr 0x1c7a7ce8bb8 <col:18, col:21> 'char' lvalue
|   |     |   | | |   |     |-ImplicitCastExpr 0x1c7a7ce8b88 <col:18> 'char *' <LValueToRValue>
|   |     |   | | |   |     | `-DeclRefExpr 0x1c7a7ce8b48 <col:18> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |     |   | | |   |     `-ImplicitCastExpr 0x1c7a7ce8ba0 <col:20> 'int' <LValueToRValue>
|   |     |   | | |   |       `-DeclRefExpr 0x1c7a7ce8b68 <col:20> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |     |   | | |   `-CharacterLiteral 0x1c7a7ce8bd8 <col:25> 'int' 48
|   |     |   | | `-ParenExpr 0x1c7a7ce8d58 <col:33, col:44> 'int'
|   |     |   | |   `-BinaryOperator 0x1c7a7ce8d38 <col:34, col:41> 'int' '>'
|   |     |   | |     |-ImplicitCastExpr 0x1c7a7ce8d20 <col:34, col:37> 'int' <IntegralCast>
|   |     |   | |     | `-ImplicitCastExpr 0x1c7a7ce8d08 <col:34, col:37> 'char' <LValueToRValue>
|   |     |   | |     |   `-ArraySubscriptExpr 0x1c7a7ce8cd0 <col:34, col:37> 'char' lvalue
|   |     |   | |     |     |-ImplicitCastExpr 0x1c7a7ce8ca0 <col:34> 'char *' <LValueToRValue>
|   |     |   | |     |     | `-DeclRefExpr 0x1c7a7ce8c60 <col:34> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |     |   | |     |     `-ImplicitCastExpr 0x1c7a7ce8cb8 <col:36> 'int' <LValueToRValue>
|   |     |   | |     |       `-DeclRefExpr 0x1c7a7ce8c80 <col:36> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |     |   | |     `-CharacterLiteral 0x1c7a7ce8cf0 <col:41> 'int' 57
|   |     |   | `-GotoStmt 0x1c7a7ce8d98 <line:84:17, col:22> 'err' 0x1c7a7ce53a0
|   |     |   |-BinaryOperator 0x1c7a7ce8ee0 <line:85:13, col:24> 'int' '='
|   |     |   | |-DeclRefExpr 0x1c7a7ce8dc8 <col:13> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |     |   | `-BinaryOperator 0x1c7a7ce8ec0 <col:17, col:24> 'int' '-'
|   |     |   |   |-ImplicitCastExpr 0x1c7a7ce8ea8 <col:17, col:20> 'int' <IntegralCast>
|   |     |   |   | `-ImplicitCastExpr 0x1c7a7ce8e90 <col:17, col:20> 'char' <LValueToRValue>
|   |     |   |   |   `-ArraySubscriptExpr 0x1c7a7ce8e58 <col:17, col:20> 'char' lvalue
|   |     |   |   |     |-ImplicitCastExpr 0x1c7a7ce8e28 <col:17> 'char *' <LValueToRValue>
|   |     |   |   |     | `-DeclRefExpr 0x1c7a7ce8de8 <col:17> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |     |   |   |     `-ImplicitCastExpr 0x1c7a7ce8e40 <col:19> 'int' <LValueToRValue>
|   |     |   |   |       `-DeclRefExpr 0x1c7a7ce8e08 <col:19> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |     |   |   `-CharacterLiteral 0x1c7a7ce8e78 <col:24> 'int' 48
|   |     |   |-UnaryOperator 0x1c7a7ce8f20 <line:86:13, col:14> 'int' postfix '++'
|   |     |   | `-DeclRefExpr 0x1c7a7ce8f00 <col:13> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |     |   |-IfStmt 0x1c7a7ce91a0 <line:87:13, line:88:22>
|   |     |   | |-BinaryOperator 0x1c7a7ce9168 <line:87:17, col:44> 'int' '||'
|   |     |   | | |-ParenExpr 0x1c7a7ce9030 <col:17, col:28> 'int'
|   |     |   | | | `-BinaryOperator 0x1c7a7ce9010 <col:18, col:25> 'int' '<'
|   |     |   | | |   |-ImplicitCastExpr 0x1c7a7ce8ff8 <col:18, col:21> 'int' <IntegralCast>
|   |     |   | | |   | `-ImplicitCastExpr 0x1c7a7ce8fe0 <col:18, col:21> 'char' <LValueToRValue>
|   |     |   | | |   |   `-ArraySubscriptExpr 0x1c7a7ce8fa8 <col:18, col:21> 'char' lvalue
|   |     |   | | |   |     |-ImplicitCastExpr 0x1c7a7ce8f78 <col:18> 'char *' <LValueToRValue>
|   |     |   | | |   |     | `-DeclRefExpr 0x1c7a7ce8f38 <col:18> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |     |   | | |   |     `-ImplicitCastExpr 0x1c7a7ce8f90 <col:20> 'int' <LValueToRValue>
|   |     |   | | |   |       `-DeclRefExpr 0x1c7a7ce8f58 <col:20> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |     |   | | |   `-CharacterLiteral 0x1c7a7ce8fc8 <col:25> 'int' 48
|   |     |   | | `-ParenExpr 0x1c7a7ce9148 <col:33, col:44> 'int'
|   |     |   | |   `-BinaryOperator 0x1c7a7ce9128 <col:34, col:41> 'int' '>'
|   |     |   | |     |-ImplicitCastExpr 0x1c7a7ce9110 <col:34, col:37> 'int' <IntegralCast>
|   |     |   | |     | `-ImplicitCastExpr 0x1c7a7ce90f8 <col:34, col:37> 'char' <LValueToRValue>
|   |     |   | |     |   `-ArraySubscriptExpr 0x1c7a7ce90c0 <col:34, col:37> 'char' lvalue
|   |     |   | |     |     |-ImplicitCastExpr 0x1c7a7ce9090 <col:34> 'char *' <LValueToRValue>
|   |     |   | |     |     | `-DeclRefExpr 0x1c7a7ce9050 <col:34> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |     |   | |     |     `-ImplicitCastExpr 0x1c7a7ce90a8 <col:36> 'int' <LValueToRValue>
|   |     |   | |     |       `-DeclRefExpr 0x1c7a7ce9070 <col:36> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |     |   | |     `-CharacterLiteral 0x1c7a7ce90e0 <col:41> 'int' 57
|   |     |   | `-GotoStmt 0x1c7a7ce9188 <line:88:17, col:22> 'err' 0x1c7a7ce53a0
|   |     |   |-BinaryOperator 0x1c7a7ce6378 <line:89:13, col:35> 'int' '='
|   |     |   | |-DeclRefExpr 0x1c7a7ce91b8 <col:13> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |     |   | `-BinaryOperator 0x1c7a7ce6358 <col:17, col:35> 'int' '-'
|   |     |   |   |-BinaryOperator 0x1c7a7ce6320 <col:17, col:31> 'int' '+'
|   |     |   |   | |-ParenExpr 0x1c7a7ce9258 <col:17, col:24> 'int'
|   |     |   |   | | `-BinaryOperator 0x1c7a7ce9238 <col:18, col:22> 'int' '*'
|   |     |   |   | |   |-ImplicitCastExpr 0x1c7a7ce9220 <col:18> 'int' <LValueToRValue>
|   |     |   |   | |   | `-DeclRefExpr 0x1c7a7ce91d8 <col:18> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |     |   |   | |   `-IntegerLiteral 0x1c7a7ce91f8 <col:22> 'int' 10
|   |     |   |   | `-ImplicitCastExpr 0x1c7a7ce6308 <col:28, col:31> 'int' <IntegralCast>
|   |     |   |   |   `-ImplicitCastExpr 0x1c7a7ce62f0 <col:28, col:31> 'char' <LValueToRValue>
|   |     |   |   |     `-ArraySubscriptExpr 0x1c7a7ce62d0 <col:28, col:31> 'char' lvalue
|   |     |   |   |       |-ImplicitCastExpr 0x1c7a7ce62a0 <col:28> 'char *' <LValueToRValue>
|   |     |   |   |       | `-DeclRefExpr 0x1c7a7ce6260 <col:28> 'char *' lvalue Var 0x1c7a7ce3ec0 'a' 'char *'
|   |     |   |   |       `-ImplicitCastExpr 0x1c7a7ce62b8 <col:30> 'int' <LValueToRValue>
|   |     |   |   |         `-DeclRefExpr 0x1c7a7ce6280 <col:30> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |     |   |   `-CharacterLiteral 0x1c7a7ce6340 <col:35> 'int' 48
|   |     |   |-IfStmt 0x1c7a7ce6610 <line:90:13, line:91:22>
|   |     |   | |-BinaryOperator 0x1c7a7ce65d8 <line:90:17, col:44> 'int' '||'
|   |     |   | | |-ParenExpr 0x1c7a7ce6498 <col:17, col:28> 'int'
|   |     |   | | | `-BinaryOperator 0x1c7a7ce6478 <col:18, col:27> 'int' '<'
|   |     |   | | |   |-ImplicitCastExpr 0x1c7a7ce6448 <col:18> 'int' <LValueToRValue>
|   |     |   | | |   | `-DeclRefExpr 0x1c7a7ce6398 <col:18> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |     |   | | |   `-ImplicitCastExpr 0x1c7a7ce6460 <col:22, col:27> 'int' <LValueToRValue>
|   |     |   | | |     `-ArraySubscriptExpr 0x1c7a7ce6428 <col:22, col:27> 'const int' lvalue
|   |     |   | | |       |-ImplicitCastExpr 0x1c7a7ce63f8 <col:22> 'const int *' <ArrayToPointerDecay>
|   |     |   | | |       | `-DeclRefExpr 0x1c7a7ce63b8 <col:22> 'const int [8]' lvalue Var 0x1c7a7ce38a0 'min' 'const int [8]'
|   |     |   | | |       `-ImplicitCastExpr 0x1c7a7ce6410 <col:26> 'int' <LValueToRValue>
|   |     |   | | |         `-DeclRefExpr 0x1c7a7ce63d8 <col:26> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |     |   | | `-ParenExpr 0x1c7a7ce65b8 <col:33, col:44> 'int'
|   |     |   | |   `-BinaryOperator 0x1c7a7ce6598 <col:34, col:43> 'int' '>'
|   |     |   | |     |-ImplicitCastExpr 0x1c7a7ce6568 <col:34> 'int' <LValueToRValue>
|   |     |   | |     | `-DeclRefExpr 0x1c7a7ce64b8 <col:34> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |     |   | |     `-ImplicitCastExpr 0x1c7a7ce6580 <col:38, col:43> 'int' <LValueToRValue>
|   |     |   | |       `-ArraySubscriptExpr 0x1c7a7ce6548 <col:38, col:43> 'const int' lvalue
|   |     |   | |         |-ImplicitCastExpr 0x1c7a7ce6518 <col:38> 'const int *' <ArrayToPointerDecay>
|   |     |   | |         | `-DeclRefExpr 0x1c7a7ce64d8 <col:38> 'const int [8]' lvalue Var 0x1c7a7ce3bd8 'max' 'const int [8]'
|   |     |   | |         `-ImplicitCastExpr 0x1c7a7ce6530 <col:42> 'int' <LValueToRValue>
|   |     |   | |           `-DeclRefExpr 0x1c7a7ce64f8 <col:42> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |     |   | `-GotoStmt 0x1c7a7ce65f8 <line:91:17, col:22> 'err' 0x1c7a7ce53a0
|   |     |   |-IfStmt 0x1c7a7ce6960 <line:92:13, line:97:13>
|   |     |   | |-ImplicitCastExpr 0x1c7a7ce6648 <line:92:17> 'struct tm *' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x1c7a7ce6628 <col:17> 'struct tm *' lvalue ParmVar 0x1c7a7ce35d0 'tm' 'struct tm *'
|   |     |   | `-CompoundStmt 0x1c7a7ce6948 <col:21, line:97:13>
|   |     |   |   `-IfStmt 0x1c7a7ce6920 <line:93:17, line:96:35> has_else
|   |     |   |     |-BinaryOperator 0x1c7a7ce66c0 <line:93:21, col:26> 'int' '=='
|   |     |   |     | |-ImplicitCastExpr 0x1c7a7ce66a8 <col:21> 'int' <LValueToRValue>
|   |     |   |     | | `-DeclRefExpr 0x1c7a7ce6660 <col:21> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |     |   |     | `-IntegerLiteral 0x1c7a7ce6680 <col:26> 'int' 6
|   |     |   |     |-BinaryOperator 0x1c7a7ce6798 <line:94:21, col:34> 'int' '='
|   |     |   |     | |-DeclRefExpr 0x1c7a7ce66e0 <col:21> 'int' lvalue Var 0x1c7a7ce8828 'offset' 'int'
|   |     |   |     | `-BinaryOperator 0x1c7a7ce6778 <col:30, col:34> 'int' '*'
|   |     |   |     |   |-ImplicitCastExpr 0x1c7a7ce6760 <col:30> 'int' <LValueToRValue>
|   |     |   |     |   | `-DeclRefExpr 0x1c7a7ce6718 <col:30> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |     |   |     |   `-IntegerLiteral 0x1c7a7ce6738 <col:34> 'int' 3600
|   |     |   |     `-IfStmt 0x1c7a7ce6908 <line:95:22, line:96:35>
|   |     |   |       |-BinaryOperator 0x1c7a7ce6818 <line:95:26, col:31> 'int' '=='
|   |     |   |       | |-ImplicitCastExpr 0x1c7a7ce6800 <col:26> 'int' <LValueToRValue>
|   |     |   |       | | `-DeclRefExpr 0x1c7a7ce67b8 <col:26> 'int' lvalue Var 0x1c7a7ce3fd8 'i' 'int'
|   |     |   |       | `-IntegerLiteral 0x1c7a7ce67d8 <col:31> 'int' 7
|   |     |   |       `-CompoundAssignOperator 0x1c7a7ce68d8 <line:96:21, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |   |         |-DeclRefExpr 0x1c7a7ce6838 <col:21> 'int' lvalue Var 0x1c7a7ce8828 'offset' 'int'
|   |     |   |         `-BinaryOperator 0x1c7a7ce68b8 <col:31, col:35> 'int' '*'
|   |     |   |           |-ImplicitCastExpr 0x1c7a7ce68a0 <col:31> 'int' <LValueToRValue>
|   |     |   |           | `-DeclRefExpr 0x1c7a7ce6858 <col:31> 'int' lvalue Var 0x1c7a7ce3f58 'n' 'int'
|   |     |   |           `-IntegerLiteral 0x1c7a7ce6878 <col:35> 'int' 60
|   |     |   `-UnaryOperator 0x1c7a7ce6998 <line:98:13, col:14> 'int' postfix '++'
|   |     |     `-DeclRefExpr 0x1c7a7ce6978 <col:13> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |     `-IfStmt 0x1c7a7ce6da8 <line:100:9, line:101:20>
|   |       |-BinaryOperator 0x1c7a7ce6d50 <line:100:13, col:66> 'int' '&&'
|   |       | |-ImplicitCastExpr 0x1c7a7ce6d38 <col:13> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x1c7a7ce6a38 <col:13> 'int' lvalue Var 0x1c7a7ce8828 'offset' 'int'
|   |       | `-UnaryOperator 0x1c7a7ce6d20 <col:23, col:66> 'int' prefix '!' cannot overflow
|   |       |   `-CallExpr 0x1c7a7ce6cd0 <col:24, col:66> 'int'
|   |       |     |-ImplicitCastExpr 0x1c7a7ce6cb8 <col:24> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | `-DeclRefExpr 0x1c7a7ce6b78 <col:24> 'int ()' Function 0x1c7a7ce6ab0 'OPENSSL_gmtime_adj' 'int ()'
|   |       |     |-ImplicitCastExpr 0x1c7a7ce6d08 <col:43> 'struct tm *' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x1c7a7ce6b98 <col:43> 'struct tm *' lvalue ParmVar 0x1c7a7ce35d0 'tm' 'struct tm *'
|   |       |     |-IntegerLiteral 0x1c7a7ce6bb8 <col:47> 'int' 0
|   |       |     `-BinaryOperator 0x1c7a7ce6c68 <col:50, col:59> 'int' '*'
|   |       |       |-ImplicitCastExpr 0x1c7a7ce6c38 <col:50> 'int' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x1c7a7ce6be0 <col:50> 'int' lvalue Var 0x1c7a7ce8828 'offset' 'int'
|   |       |       `-ImplicitCastExpr 0x1c7a7ce6c50 <col:59> 'int' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x1c7a7ce6c00 <col:59> 'int' lvalue Var 0x1c7a7ce8618 'offsign' 'int'
|   |       `-ReturnStmt 0x1c7a7ce6d98 <line:101:13, col:20>
|   |         `-IntegerLiteral 0x1c7a7ce6d70 <col:20> 'int' 0
|   |-ReturnStmt 0x1c7a7ce6ec8 <line:103:5, col:17>
|   | `-BinaryOperator 0x1c7a7ce6ea8 <col:12, col:17> 'int' '=='
|   |   |-ImplicitCastExpr 0x1c7a7ce6e78 <col:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c7a7ce6e38 <col:12> 'int' lvalue Var 0x1c7a7ce40d8 'o' 'int'
|   |   `-ImplicitCastExpr 0x1c7a7ce6e90 <col:17> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c7a7ce6e58 <col:17> 'int' lvalue Var 0x1c7a7ce4058 'l' 'int'
|   `-LabelStmt 0x1c7a7ce6f10 <line:104:2, line:105:12> 'err'
|     `-ReturnStmt 0x1c7a7ce6f00 <col:5, col:12>
|       `-IntegerLiteral 0x1c7a7ce6ed8 <col:12> 'int' 0
|-FunctionDecl 0x1c7a7ce7070 <line:108:1, line:111:1> line:108:5 invalid ASN1_UTCTIME_check 'int (const int *)'
| |-ParmVarDecl 0x1c7a7ce6fa8 <col:24, col:44> col:44 invalid d 'const int *'
| `-CompoundStmt 0x1c7a7ce71b8 <line:109:1, line:111:1>
|-FunctionDecl 0x1c7a7ceb390 <line:113:1, line:129:1> line:113:5 invalid ASN1_UTCTIME_set_string 'int (int *, const char *)'
| |-ParmVarDecl 0x1c7a7ce71e0 <col:29, col:43> col:43 invalid s 'int *'
| |-ParmVarDecl 0x1c7a7ceb2b0 <col:46, col:58> col:58 used str 'const char *'
| `-CompoundStmt 0x1c7a7cebaa0 <line:114:1, line:129:1>
|   `-IfStmt 0x1c7a7ceba78 <line:120:5, line:128:18> has_else
|     |-OpaqueValueExpr 0x1c7a7ceba60 <<invalid sloc>> '_Bool'
|     |-CompoundStmt 0x1c7a7ceb9e8 <line:120:33, line:127:5>
|     | |-IfStmt 0x1c7a7ceb978 <line:121:9, line:125:9>
|     | | |-OpaqueValueExpr 0x1c7a7ceb960 <<invalid sloc>> '_Bool'
|     | | `-CompoundStmt 0x1c7a7ceb948 <line:121:24, line:125:9>
|     | |   `-IfStmt 0x1c7a7ceb930 <line:122:13, line:123:24>
|     | |     |-OpaqueValueExpr 0x1c7a7ceb918 <<invalid sloc>> '_Bool'
|     | |     `-ReturnStmt 0x1c7a7ceb908 <col:17, col:24>
|     | |       `-IntegerLiteral 0x1c7a7ceb8e0 <col:24> 'int' 0
|     | `-ReturnStmt 0x1c7a7ceb9d8 <line:126:9, col:18>
|     |   `-ParenExpr 0x1c7a7ceb9b8 <col:16, col:18> 'int'
|     |     `-IntegerLiteral 0x1c7a7ceb990 <col:17> 'int' 1
|     `-ReturnStmt 0x1c7a7ceba50 <line:128:9, col:18>
|       `-ParenExpr 0x1c7a7ceba30 <col:16, col:18> 'int'
|         `-IntegerLiteral 0x1c7a7ceba08 <col:17> 'int' 0
|-FunctionDecl 0x1c7a7ceb490 <line:118:16> col:16 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1c7a7ceb530 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1c7a7cebc60 <line:131:1, line:134:1> line:131:15 invalid ASN1_UTCTIME_set 'int *(int *, time_t)'
| |-ParmVarDecl 0x1c7a7cebad0 <col:32, col:46> col:46 invalid s 'int *'
| |-ParmVarDecl 0x1c7a7cebb48 <col:49, col:56> col:56 used t 'time_t':'long long'
| `-CompoundStmt 0x1c7a7cebec0 <line:132:1, line:134:1>
|-FunctionDecl 0x1c7a7cec1b0 <line:136:1, line:188:1> line:136:15 invalid ASN1_UTCTIME_adj 'int *(int *, time_t, int, long)'
| |-ParmVarDecl 0x1c7a7cebee8 <col:32, col:46> col:46 invalid s 'int *'
| |-ParmVarDecl 0x1c7a7cebf60 <col:49, col:56> col:56 used t 'time_t':'long long'
| |-ParmVarDecl 0x1c7a7cebfe0 <line:137:32, col:36> col:36 used offset_day 'int'
| |-ParmVarDecl 0x1c7a7cec060 <col:48, col:53> col:53 used offset_sec 'long'
| `-CompoundStmt 0x1c7a7cec2c0 <line:138:1, line:188:1>
|   |-DeclStmt 0x1c7a7ce72d8 <line:139:5, col:12>
|   | `-VarDecl 0x1c7a7ce7270 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x1c7a7ce7380 <line:140:5, col:18>
|   | `-VarDecl 0x1c7a7ce7318 <col:5, col:16> col:16 used ts 'struct tm *'
|   |-DeclStmt 0x1c7a7ce7420 <line:141:5, col:19>
|   | `-VarDecl 0x1c7a7ce73b8 <col:5, col:15> col:15 used data 'struct tm':'struct tm'
|   |-DeclStmt 0x1c7a7ce74f0 <line:142:5, col:20>
|   | `-VarDecl 0x1c7a7ce7448 <col:5, col:18> col:12 used len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1c7a7ce74d8 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1c7a7ce74b0 <col:18> 'int' 20
|   |-DeclStmt 0x1c7a7ce75b0 <line:143:5, col:19>
|   | `-VarDecl 0x1c7a7ce7520 <col:5, col:18> col:9 used free_s 'int' cinit
|   |   `-IntegerLiteral 0x1c7a7ce7588 <col:18> 'int' 0
|   |-IfStmt 0x1c7a7ce7970 <line:145:5, line:150:5>
|   | |-OpaqueValueExpr 0x1c7a7ce7958 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1c7a7ce7938 <line:145:20, line:150:5>
|   |   |-IfStmt 0x1c7a7ce78a0 <line:147:9, line:148:18>
|   |   | |-OpaqueValueExpr 0x1c7a7ce7888 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1c7a7ce7870 <col:13, col:18> 'err' 0x1c7a7ce7820
|   |   `-BinaryOperator 0x1c7a7ce7918 <line:149:9, col:18> 'int' '='
|   |     |-DeclRefExpr 0x1c7a7ce78b8 <col:9> 'int' lvalue Var 0x1c7a7ce7520 'free_s' 'int'
|   |     `-IntegerLiteral 0x1c7a7ce78f0 <col:18> 'int' 1
|   |-BinaryOperator 0x1c7a7ce7bd0 <line:152:5, col:34> 'struct tm *' '='
|   | |-DeclRefExpr 0x1c7a7ce7988 <col:5> 'struct tm *' lvalue Var 0x1c7a7ce7318 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x1c7a7ce7bb8 <col:10, col:34> 'struct tm *' <IntegralToPointer>
|   |   `-CallExpr 0x1c7a7ce7b88 <col:10, col:34> 'int'
|   |     |-ImplicitCastExpr 0x1c7a7ce7b70 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1c7a7ce7ab0 <col:10> 'int ()' Function 0x1c7a7ce79e8 'OPENSSL_gmtime' 'int ()'
|   |     |-UnaryOperator 0x1c7a7ce7b08 <col:25, col:26> 'time_t *' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x1c7a7ce7ad0 <col:26> 'time_t':'long long' lvalue ParmVar 0x1c7a7cebf60 't' 'time_t':'long long'
|   |     `-UnaryOperator 0x1c7a7ce7b58 <col:29, col:30> 'struct tm *' prefix '&' cannot overflow
|   |       `-DeclRefExpr 0x1c7a7ce7b20 <col:30> 'struct tm':'struct tm' lvalue Var 0x1c7a7ce73b8 'data' 'struct tm':'struct tm'
|   |-IfStmt 0x1c7a7ce7d00 <line:153:5, line:154:14>
|   | |-BinaryOperator 0x1c7a7ce7cc8 <line:153:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1c7a7ce7c98 <.//openssl//file_jk/after\crypto\asn1\a_utctm.c:153:9> 'struct tm *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c7a7ce7bf0 <col:9> 'struct tm *' lvalue Var 0x1c7a7ce7318 'ts' 'struct tm *'
|   | | `-ImplicitCastExpr 0x1c7a7ce7cb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct tm *' <BitCast>
|   | |   `-ParenExpr 0x1c7a7ce7c78 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1c7a7ce7c50 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1c7a7ce7c10 <col:26> 'int' 0
|   | `-GotoStmt 0x1c7a7ce7ce8 <.//openssl//file_jk/after\crypto\asn1\a_utctm.c:154:9, col:14> 'err' 0x1c7a7ce7820
|   |-IfStmt 0x1c7a7ce7f50 <line:156:5, line:159:5>
|   | |-BinaryOperator 0x1c7a7ce7db8 <line:156:9, col:23> 'int' '||'
|   | | |-ImplicitCastExpr 0x1c7a7ce7d88 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c7a7ce7d18 <col:9> 'int' lvalue ParmVar 0x1c7a7cebfe0 'offset_day' 'int'
|   | | `-ImplicitCastExpr 0x1c7a7ce7da0 <col:23> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c7a7ce7d50 <col:23> 'long' lvalue ParmVar 0x1c7a7cec060 'offset_sec' 'long'
|   | `-CompoundStmt 0x1c7a7ce7f38 <col:35, line:159:5>
|   |   `-IfStmt 0x1c7a7ce7f20 <line:157:9, line:158:18>
|   |     |-UnaryOperator 0x1c7a7ce7ef0 <line:157:13, col:59> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x1c7a7ce7e70 <col:14, col:59> 'int'
|   |     |   |-ImplicitCastExpr 0x1c7a7ce7e58 <col:14> 'int (*)()' <FunctionToPointerDecay>
|   |     |   | `-DeclRefExpr 0x1c7a7ce7dd8 <col:14> 'int ()' Function 0x1c7a7ce6ab0 'OPENSSL_gmtime_adj' 'int ()'
|   |     |   |-ImplicitCastExpr 0x1c7a7ce7ea8 <col:33> 'struct tm *' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1c7a7ce7df8 <col:33> 'struct tm *' lvalue Var 0x1c7a7ce7318 'ts' 'struct tm *'
|   |     |   |-ImplicitCastExpr 0x1c7a7ce7ec0 <col:37> 'int' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1c7a7ce7e18 <col:37> 'int' lvalue ParmVar 0x1c7a7cebfe0 'offset_day' 'int'
|   |     |   `-ImplicitCastExpr 0x1c7a7ce7ed8 <col:49> 'long' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1c7a7ce7e38 <col:49> 'long' lvalue ParmVar 0x1c7a7cec060 'offset_sec' 'long'
|   |     `-GotoStmt 0x1c7a7ce7f08 <line:158:13, col:18> 'err' 0x1c7a7ce7820
|   |-IfStmt 0x1c7a7ce8170 <line:161:5, line:162:14>
|   | |-BinaryOperator 0x1c7a7ce8138 <line:161:9, col:50> 'int' '||'
|   | | |-ParenExpr 0x1c7a7ce8030 <col:9, col:26> 'int'
|   | | | `-BinaryOperator 0x1c7a7ce8010 <col:10, col:24> 'int' '<'
|   | | |   |-ImplicitCastExpr 0x1c7a7ce7ff8 <col:10, col:14> 'int' <LValueToRValue>
|   | | |   | `-MemberExpr 0x1c7a7ce7fa0 <col:10, col:14> 'int' lvalue ->tm_year 0x1c7a7cc8ba8
|   | | |   |   `-ImplicitCastExpr 0x1c7a7ce7f88 <col:10> 'struct tm *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x1c7a7ce7f68 <col:10> 'struct tm *' lvalue Var 0x1c7a7ce7318 'ts' 'struct tm *'
|   | | |   `-IntegerLiteral 0x1c7a7ce7fd0 <col:24> 'int' 50
|   | | `-ParenExpr 0x1c7a7ce8118 <col:31, col:50> 'int'
|   | |   `-BinaryOperator 0x1c7a7ce80f8 <col:32, col:47> 'int' '>='
|   | |     |-ImplicitCastExpr 0x1c7a7ce80e0 <col:32, col:36> 'int' <LValueToRValue>
|   | |     | `-MemberExpr 0x1c7a7ce8088 <col:32, col:36> 'int' lvalue ->tm_year 0x1c7a7cc8ba8
|   | |     |   `-ImplicitCastExpr 0x1c7a7ce8070 <col:32> 'struct tm *' <LValueToRValue>
|   | |     |     `-DeclRefExpr 0x1c7a7ce8050 <col:32> 'struct tm *' lvalue Var 0x1c7a7ce7318 'ts' 'struct tm *'
|   | |     `-IntegerLiteral 0x1c7a7ce80b8 <col:47> 'int' 150
|   | `-GotoStmt 0x1c7a7ce8158 <line:162:9, col:14> 'err' 0x1c7a7ce7820
|   |-IfStmt 0x1c7a7ce48d8 <line:165:5, line:173:5>
|   | |-OpaqueValueExpr 0x1c7a7ce48c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1c7a7ce48a0 <line:165:51, line:173:5>
|   |   |-BinaryOperator 0x1c7a7ce44a8 <line:166:9, col:31> 'char *' '='
|   |   | |-DeclRefExpr 0x1c7a7ce42e8 <col:9> 'char *' lvalue Var 0x1c7a7ce7270 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x1c7a7ce4490 <col:13, col:31> 'char *' <IntegralToPointer>
|   |   |   `-CallExpr 0x1c7a7ce4450 <col:13, col:31> 'int'
|   |   |     |-ImplicitCastExpr 0x1c7a7ce4438 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1c7a7ce43f8 <col:13> 'int ()' Function 0x1c7a7ce4330 'OPENSSL_malloc' 'int ()'
|   |   |     `-ImplicitCastExpr 0x1c7a7ce4478 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1c7a7ce4418 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1c7a7ce7448 'len' 'size_t':'unsigned long long'
|   |   `-IfStmt 0x1c7a7ce4700 <line:167:9, line:170:9>
|   |     |-BinaryOperator 0x1c7a7ce45a0 <line:167:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1c7a7ce4570 <.//openssl//file_jk/after\crypto\asn1\a_utctm.c:167:13> 'char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1c7a7ce44c8 <col:13> 'char *' lvalue Var 0x1c7a7ce7270 'p' 'char *'
|   |     | `-ImplicitCastExpr 0x1c7a7ce4588 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |     |   `-ParenExpr 0x1c7a7ce4550 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x1c7a7ce4528 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x1c7a7ce44e8 <col:26> 'int' 0
|   |     `-CompoundStmt 0x1c7a7ce46e8 <.//openssl//file_jk/after\crypto\asn1\a_utctm.c:167:24, line:170:9>
|   |       `-GotoStmt 0x1c7a7ce46d0 <line:169:13, col:18> 'err' 0x1c7a7ce7820
|   |-CallExpr 0x1c7a7ce4df8 <line:175:5, line:177:28> 'int'
|   | |-ImplicitCastExpr 0x1c7a7ce4de0 <line:175:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1c7a7ce49e0 <col:5> 'int ()' Function 0x1c7a7ce4918 'BIO_snprintf' 'int ()'
|   | |-ImplicitCastExpr 0x1c7a7ce4e60 <col:18> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x1c7a7ce4a00 <col:18> 'char *' lvalue Var 0x1c7a7ce7270 'p' 'char *'
|   | |-ImplicitCastExpr 0x1c7a7ce4e78 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1c7a7ce4a20 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1c7a7ce7448 'len' 'size_t':'unsigned long long'
|   | |-ImplicitCastExpr 0x1c7a7ce4e90 <col:26> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x1c7a7ce4a78 <col:26> 'char [26]' lvalue "%02d%02d%02d%02d%02d%02dZ"
|   | |-BinaryOperator 0x1c7a7ce4b58 <col:55, col:69> 'int' '%'
|   | | |-ImplicitCastExpr 0x1c7a7ce4b40 <col:55, col:59> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1c7a7ce4ae8 <col:55, col:59> 'int' lvalue ->tm_year 0x1c7a7cc8ba8
|   | | |   `-ImplicitCastExpr 0x1c7a7ce4ad0 <col:55> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1c7a7ce4ab0 <col:55> 'struct tm *' lvalue Var 0x1c7a7ce7318 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x1c7a7ce4b18 <col:69> 'int' 100
|   | |-BinaryOperator 0x1c7a7ce4c20 <line:176:18, col:31> 'int' '+'
|   | | |-ImplicitCastExpr 0x1c7a7ce4c08 <col:18, col:22> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1c7a7ce4bb0 <col:18, col:22> 'int' lvalue ->tm_mon 0x1c7a7cc8b38
|   | | |   `-ImplicitCastExpr 0x1c7a7ce4b98 <col:18> 'struct tm *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1c7a7ce4b78 <col:18> 'struct tm *' lvalue Var 0x1c7a7ce7318 'ts' 'struct tm *'
|   | | `-IntegerLiteral 0x1c7a7ce4be0 <col:31> 'int' 1
|   | |-ImplicitCastExpr 0x1c7a7ce4ea8 <col:34, col:38> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x1c7a7ce4c78 <col:34, col:38> 'int' lvalue ->tm_mday 0x1c7a7cc8ac8
|   | |   `-ImplicitCastExpr 0x1c7a7ce4c60 <col:34> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1c7a7ce4c40 <col:34> 'struct tm *' lvalue Var 0x1c7a7ce7318 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x1c7a7ce4ec0 <col:47, col:51> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x1c7a7ce4ce0 <col:47, col:51> 'int' lvalue ->tm_hour 0x1c7a7cc8a58
|   | |   `-ImplicitCastExpr 0x1c7a7ce4cc8 <col:47> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1c7a7ce4ca8 <col:47> 'struct tm *' lvalue Var 0x1c7a7ce7318 'ts' 'struct tm *'
|   | |-ImplicitCastExpr 0x1c7a7ce4ed8 <col:60, col:64> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x1c7a7ce4d48 <col:60, col:64> 'int' lvalue ->tm_min 0x1c7a7cc89e8
|   | |   `-ImplicitCastExpr 0x1c7a7ce4d30 <col:60> 'struct tm *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1c7a7ce4d10 <col:60> 'struct tm *' lvalue Var 0x1c7a7ce7318 'ts' 'struct tm *'
|   | `-ImplicitCastExpr 0x1c7a7ce4ef0 <line:177:18, col:22> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x1c7a7ce4db0 <col:18, col:22> 'int' lvalue ->tm_sec 0x1c7a7cc8978
|   |     `-ImplicitCastExpr 0x1c7a7ce4d98 <col:18> 'struct tm *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1c7a7ce4d78 <col:18> 'struct tm *' lvalue Var 0x1c7a7ce7318 'ts' 'struct tm *'
|   |-LabelStmt 0x1c7a7ce5120 <line:184:2, col:5> 'err'
|   | `-NullStmt 0x1c7a7ce5118 <col:5>
|   `-ReturnStmt 0x1c7a7ce51d8 <line:187:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x1c7a7ce51c0 <col:17, col:27> 'int *' <NullToPointer>
|       `-ParenExpr 0x1c7a7ce51a0 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x1c7a7ce5178 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x1c7a7ce5138 <col:26> 'int' 0
|-FunctionDecl 0x1c7a7cec4f0 <.//openssl//file_jk/after\crypto\asn1\a_utctm.c:190:1, line:213:1> line:190:5 invalid ASN1_UTCTIME_cmp_time_t 'int (const int *, time_t)'
| |-ParmVarDecl 0x1c7a7cec358 <col:29, col:49> col:49 invalid s 'const int *'
| |-ParmVarDecl 0x1c7a7cec3d0 <col:52, col:59> col:59 used t 'time_t':'long long'
| `-CompoundStmt 0x1c7a7ced120 <line:191:1, line:213:1>
|   |-DeclStmt 0x1c7a7cec6e0 <line:192:5, col:23>
|   | |-VarDecl 0x1c7a7cec5d8 <col:5, col:15> col:15 used stm 'struct tm':'struct tm'
|   | `-VarDecl 0x1c7a7cec660 <col:5, col:20> col:20 used ttm 'struct tm':'struct tm'
|   |-DeclStmt 0x1c7a7cec810 <line:193:5, col:17>
|   | |-VarDecl 0x1c7a7cec710 <col:5, col:9> col:9 used day 'int'
|   | `-VarDecl 0x1c7a7cec790 <col:5, col:14> col:14 used sec 'int'
|   |-IfStmt 0x1c7a7cec8e0 <line:195:5, line:196:17>
|   | |-OpaqueValueExpr 0x1c7a7cec8c8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c7a7cec8b8 <col:9, col:17>
|   |   `-UnaryOperator 0x1c7a7cec8a0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1c7a7cec878 <col:17> 'int' 2
|   |-IfStmt 0x1c7a7ceca68 <line:198:5, line:199:17>
|   | |-UnaryOperator 0x1c7a7ceca00 <line:198:9, col:33> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1c7a7cec9d0 <col:10, col:33> 'int'
|   | |   |-ImplicitCastExpr 0x1c7a7cec9b8 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1c7a7cec8f8 <col:10> 'int ()' Function 0x1c7a7ce79e8 'OPENSSL_gmtime' 'int ()'
|   | |   |-UnaryOperator 0x1c7a7cec950 <col:25, col:26> 'time_t *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1c7a7cec918 <col:26> 'time_t':'long long' lvalue ParmVar 0x1c7a7cec3d0 't' 'time_t':'long long'
|   | |   `-UnaryOperator 0x1c7a7cec9a0 <col:29, col:30> 'struct tm *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x1c7a7cec968 <col:30> 'struct tm':'struct tm' lvalue Var 0x1c7a7cec660 'ttm' 'struct tm':'struct tm'
|   | `-ReturnStmt 0x1c7a7ceca58 <line:199:9, col:17>
|   |   `-UnaryOperator 0x1c7a7ceca40 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1c7a7ceca18 <col:17> 'int' 2
|   |-IfStmt 0x1c7a7cecd60 <line:201:5, line:202:17>
|   | |-UnaryOperator 0x1c7a7ceccf8 <line:201:9, col:52> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1c7a7ceccb8 <col:10, col:52> 'int'
|   | |   |-ImplicitCastExpr 0x1c7a7cecca0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1c7a7cecb70 <col:10> 'int ()' Function 0x1c7a7cecaa8 'OPENSSL_gmtime_diff' 'int ()'
|   | |   |-UnaryOperator 0x1c7a7cecbc8 <col:30, col:31> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1c7a7cecb90 <col:31> 'int' lvalue Var 0x1c7a7cec710 'day' 'int'
|   | |   |-UnaryOperator 0x1c7a7cecc18 <col:36, col:37> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1c7a7cecbe0 <col:37> 'int' lvalue Var 0x1c7a7cec790 'sec' 'int'
|   | |   |-UnaryOperator 0x1c7a7cecc50 <col:42, col:43> 'struct tm *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1c7a7cecc30 <col:43> 'struct tm':'struct tm' lvalue Var 0x1c7a7cec660 'ttm' 'struct tm':'struct tm'
|   | |   `-UnaryOperator 0x1c7a7cecc88 <col:48, col:49> 'struct tm *' prefix '&' cannot overflow
|   | |     `-DeclRefExpr 0x1c7a7cecc68 <col:49> 'struct tm':'struct tm' lvalue Var 0x1c7a7cec5d8 'stm' 'struct tm':'struct tm'
|   | `-ReturnStmt 0x1c7a7cecd50 <line:202:9, col:17>
|   |   `-UnaryOperator 0x1c7a7cecd38 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1c7a7cecd10 <col:17> 'int' 2
|   |-IfStmt 0x1c7a7cece30 <line:204:5, line:205:16>
|   | |-BinaryOperator 0x1c7a7cecdd8 <line:204:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x1c7a7cecdc0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c7a7cecd78 <col:9> 'int' lvalue Var 0x1c7a7cec710 'day' 'int'
|   | | `-IntegerLiteral 0x1c7a7cecd98 <col:15> 'int' 0
|   | `-ReturnStmt 0x1c7a7cece20 <line:205:9, col:16>
|   |   `-IntegerLiteral 0x1c7a7cecdf8 <col:16> 'int' 1
|   |-IfStmt 0x1c7a7cecf18 <line:206:5, line:207:17>
|   | |-BinaryOperator 0x1c7a7cecea8 <line:206:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1c7a7cece90 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c7a7cece48 <col:9> 'int' lvalue Var 0x1c7a7cec710 'day' 'int'
|   | | `-IntegerLiteral 0x1c7a7cece68 <col:15> 'int' 0
|   | `-ReturnStmt 0x1c7a7cecf08 <line:207:9, col:17>
|   |   `-UnaryOperator 0x1c7a7cecef0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1c7a7cecec8 <col:17> 'int' 1
|   |-IfStmt 0x1c7a7cecfe8 <line:208:5, line:209:16>
|   | |-BinaryOperator 0x1c7a7cecf90 <line:208:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x1c7a7cecf78 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c7a7cecf30 <col:9> 'int' lvalue Var 0x1c7a7cec790 'sec' 'int'
|   | | `-IntegerLiteral 0x1c7a7cecf50 <col:15> 'int' 0
|   | `-ReturnStmt 0x1c7a7cecfd8 <line:209:9, col:16>
|   |   `-IntegerLiteral 0x1c7a7cecfb0 <col:16> 'int' 1
|   |-IfStmt 0x1c7a7ced0d0 <line:210:5, line:211:17>
|   | |-BinaryOperator 0x1c7a7ced060 <line:210:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1c7a7ced048 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c7a7ced000 <col:9> 'int' lvalue Var 0x1c7a7cec790 'sec' 'int'
|   | | `-IntegerLiteral 0x1c7a7ced020 <col:15> 'int' 0
|   | `-ReturnStmt 0x1c7a7ced0c0 <line:211:9, col:17>
|   |   `-UnaryOperator 0x1c7a7ced0a8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1c7a7ced080 <col:17> 'int' 1
|   `-ReturnStmt 0x1c7a7ced110 <line:212:5, col:12>
|     `-IntegerLiteral 0x1c7a7ced0e8 <col:12> 'int' 0
`-FunctionDecl 0x1c7a7ced308 <line:215:1, line:254:1> line:215:5 invalid ASN1_UTCTIME_print 'int (int *, const int *)'
  |-ParmVarDecl 0x1c7a7ced198 <col:24, col:29> col:29 invalid bp 'int *'
  |-ParmVarDecl 0x1c7a7ced218 <col:33, col:53> col:53 invalid tm 'const int *'
  `-CompoundStmt 0x1c7a7cf1240 <line:216:1, line:254:1>
    |-DeclStmt 0x1c7a7ced450 <line:217:5, col:18>
    | `-VarDecl 0x1c7a7ced3e8 <col:5, col:17> col:17 used v 'const char *'
    |-DeclStmt 0x1c7a7ced510 <line:218:5, col:16>
    | `-VarDecl 0x1c7a7ced480 <col:5, col:15> col:9 used gmt 'int' cinit
    |   `-IntegerLiteral 0x1c7a7ced4e8 <col:15> 'int' 0
    |-DeclStmt 0x1c7a7ced5a8 <line:219:5, col:10>
    | `-VarDecl 0x1c7a7ced540 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x1c7a7ced9e8 <line:220:5, col:49>
    | |-VarDecl 0x1c7a7ced5d8 <col:5, col:13> col:9 used y 'int' cinit
    | | `-IntegerLiteral 0x1c7a7ced640 <col:13> 'int' 0
    | |-VarDecl 0x1c7a7ced680 <col:5, col:20> col:16 used M 'int' cinit
    | | `-IntegerLiteral 0x1c7a7ced6e8 <col:20> 'int' 0
    | |-VarDecl 0x1c7a7ced728 <col:5, col:27> col:23 used d 'int' cinit
    | | `-IntegerLiteral 0x1c7a7ced790 <col:27> 'int' 0
    | |-VarDecl 0x1c7a7ced7d0 <col:5, col:34> col:30 used h 'int' cinit
    | | `-IntegerLiteral 0x1c7a7ced838 <col:34> 'int' 0
    | |-VarDecl 0x1c7a7ced878 <col:5, col:41> col:37 used m 'int' cinit
    | | `-IntegerLiteral 0x1c7a7ced8e0 <col:41> 'int' 0
    | `-VarDecl 0x1c7a7ced920 <col:5, col:48> col:44 used s 'int' cinit
    |   `-IntegerLiteral 0x1c7a7ced988 <col:48> 'int' 0
    |-IfStmt 0x1c7a7cedb58 <line:225:5, line:226:14>
    | |-BinaryOperator 0x1c7a7cedad0 <line:225:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x1c7a7cedab8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c7a7ceda70 <col:9> 'int' lvalue Var 0x1c7a7ced540 'i' 'int'
    | | `-IntegerLiteral 0x1c7a7ceda90 <col:13> 'int' 10
    | `-GotoStmt 0x1c7a7cedb40 <line:226:9, col:14> 'err' 0x1c7a7cedaf0
    |-IfStmt 0x1c7a7cedd30 <line:227:5, line:228:15>
    | |-BinaryOperator 0x1c7a7cedc90 <line:227:9, col:21> 'int' '=='
    | | |-ImplicitCastExpr 0x1c7a7cedc78 <col:9, col:16> 'int' <IntegralCast>
    | | | `-ImplicitCastExpr 0x1c7a7cedc60 <col:9, col:16> 'char' <LValueToRValue>
    | | |   `-ArraySubscriptExpr 0x1c7a7cedc28 <col:9, col:16> 'const char' lvalue
    | | |     |-ImplicitCastExpr 0x1c7a7cedc10 <col:9> 'const char *' <LValueToRValue>
    | | |     | `-DeclRefExpr 0x1c7a7cedb70 <col:9> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    | | |     `-BinaryOperator 0x1c7a7cedbf0 <col:11, col:15> 'int' '-'
    | | |       |-ImplicitCastExpr 0x1c7a7cedbd8 <col:11> 'int' <LValueToRValue>
    | | |       | `-DeclRefExpr 0x1c7a7cedb90 <col:11> 'int' lvalue Var 0x1c7a7ced540 'i' 'int'
    | | |       `-IntegerLiteral 0x1c7a7cedbb0 <col:15> 'int' 1
    | | `-CharacterLiteral 0x1c7a7cedc48 <col:21> 'int' 90
    | `-BinaryOperator 0x1c7a7cedd10 <line:228:9, col:15> 'int' '='
    |   |-DeclRefExpr 0x1c7a7cedcb0 <col:9> 'int' lvalue Var 0x1c7a7ced480 'gmt' 'int'
    |   `-IntegerLiteral 0x1c7a7cedce8 <col:15> 'int' 1
    |-ForStmt 0x1c7a7cee0e8 <line:229:5, line:231:18>
    | |-BinaryOperator 0x1c7a7cedd90 <line:229:10, col:14> 'int' '='
    | | |-DeclRefExpr 0x1c7a7cedd48 <col:10> 'int' lvalue Var 0x1c7a7ced540 'i' 'int'
    | | `-IntegerLiteral 0x1c7a7cedd68 <col:14> 'int' 0
    | |-<<<NULL>>>
    | |-BinaryOperator 0x1c7a7cede10 <col:17, col:21> 'int' '<'
    | | |-ImplicitCastExpr 0x1c7a7ceddf8 <col:17> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c7a7ceddb0 <col:17> 'int' lvalue Var 0x1c7a7ced540 'i' 'int'
    | | `-IntegerLiteral 0x1c7a7ceddd0 <col:21> 'int' 10
    | |-UnaryOperator 0x1c7a7cede50 <col:25, col:26> 'int' postfix '++'
    | | `-DeclRefExpr 0x1c7a7cede30 <col:25> 'int' lvalue Var 0x1c7a7ced540 'i' 'int'
    | `-IfStmt 0x1c7a7cee0d0 <line:230:9, line:231:18>
    |   |-BinaryOperator 0x1c7a7cee098 <line:230:13, col:40> 'int' '||'
    |   | |-ParenExpr 0x1c7a7cedf60 <col:13, col:24> 'int'
    |   | | `-BinaryOperator 0x1c7a7cedf40 <col:14, col:21> 'int' '>'
    |   | |   |-ImplicitCastExpr 0x1c7a7cedf28 <col:14, col:17> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1c7a7cedf10 <col:14, col:17> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1c7a7ceded8 <col:14, col:17> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x1c7a7cedea8 <col:14> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1c7a7cede68 <col:14> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |   | |   |     `-ImplicitCastExpr 0x1c7a7cedec0 <col:16> 'int' <LValueToRValue>
    |   | |   |       `-DeclRefExpr 0x1c7a7cede88 <col:16> 'int' lvalue Var 0x1c7a7ced540 'i' 'int'
    |   | |   `-CharacterLiteral 0x1c7a7cedef8 <col:21> 'int' 57
    |   | `-ParenExpr 0x1c7a7cee078 <col:29, col:40> 'int'
    |   |   `-BinaryOperator 0x1c7a7cee058 <col:30, col:37> 'int' '<'
    |   |     |-ImplicitCastExpr 0x1c7a7cee040 <col:30, col:33> 'int' <IntegralCast>
    |   |     | `-ImplicitCastExpr 0x1c7a7cee028 <col:30, col:33> 'char' <LValueToRValue>
    |   |     |   `-ArraySubscriptExpr 0x1c7a7cedff0 <col:30, col:33> 'const char' lvalue
    |   |     |     |-ImplicitCastExpr 0x1c7a7cedfc0 <col:30> 'const char *' <LValueToRValue>
    |   |     |     | `-DeclRefExpr 0x1c7a7cedf80 <col:30> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |   |     |     `-ImplicitCastExpr 0x1c7a7cedfd8 <col:32> 'int' <LValueToRValue>
    |   |     |       `-DeclRefExpr 0x1c7a7cedfa0 <col:32> 'int' lvalue Var 0x1c7a7ced540 'i' 'int'
    |   |     `-CharacterLiteral 0x1c7a7cee010 <col:37> 'int' 48
    |   `-GotoStmt 0x1c7a7cee0b8 <line:231:13, col:18> 'err' 0x1c7a7cedaf0
    |-BinaryOperator 0x1c7a7cee3e8 <line:232:5, col:40> 'int' '='
    | |-DeclRefExpr 0x1c7a7cee120 <col:5> 'int' lvalue Var 0x1c7a7ced5d8 'y' 'int'
    | `-BinaryOperator 0x1c7a7cee3c8 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x1c7a7cee288 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x1c7a7cee240 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x1c7a7cee220 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x1c7a7cee208 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1c7a7cee1f0 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1c7a7cee1b8 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x1c7a7cee1a0 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1c7a7cee158 <col:10> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x1c7a7cee178 <col:12> 'int' 0
    |   | |   `-CharacterLiteral 0x1c7a7cee1d8 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x1c7a7cee260 <col:24> 'int' 10
    |   `-ParenExpr 0x1c7a7cee3a8 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x1c7a7cee388 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x1c7a7cee370 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1c7a7cee358 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1c7a7cee320 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x1c7a7cee308 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1c7a7cee2a8 <col:30> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |       |     `-IntegerLiteral 0x1c7a7cee2e0 <col:32> 'int' 1
    |       `-CharacterLiteral 0x1c7a7cee340 <col:37> 'int' 48
    |-IfStmt 0x1c7a7cee500 <line:233:5, line:234:14>
    | |-BinaryOperator 0x1c7a7cee468 <line:233:9, col:13> 'int' '<'
    | | |-ImplicitCastExpr 0x1c7a7cee450 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c7a7cee408 <col:9> 'int' lvalue Var 0x1c7a7ced5d8 'y' 'int'
    | | `-IntegerLiteral 0x1c7a7cee428 <col:13> 'int' 50
    | `-CompoundAssignOperator 0x1c7a7cee4d0 <line:234:9, col:14> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
    |   |-DeclRefExpr 0x1c7a7cee488 <col:9> 'int' lvalue Var 0x1c7a7ced5d8 'y' 'int'
    |   `-IntegerLiteral 0x1c7a7cee4a8 <col:14> 'int' 100
    |-BinaryOperator 0x1c7a7cee7c8 <line:235:5, col:40> 'int' '='
    | |-DeclRefExpr 0x1c7a7cee518 <col:5> 'int' lvalue Var 0x1c7a7ced680 'M' 'int'
    | `-BinaryOperator 0x1c7a7cee7a8 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x1c7a7cee680 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x1c7a7cee638 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x1c7a7cee618 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x1c7a7cee600 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1c7a7cee5e8 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1c7a7cee5b0 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x1c7a7cee598 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1c7a7cee550 <col:10> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x1c7a7cee570 <col:12> 'int' 2
    |   | |   `-CharacterLiteral 0x1c7a7cee5d0 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x1c7a7cee658 <col:24> 'int' 10
    |   `-ParenExpr 0x1c7a7cee788 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x1c7a7cee768 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x1c7a7cee750 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1c7a7cee738 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1c7a7cee700 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x1c7a7cee6e8 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1c7a7cee6a0 <col:30> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |       |     `-IntegerLiteral 0x1c7a7cee6c0 <col:32> 'int' 3
    |       `-CharacterLiteral 0x1c7a7cee720 <col:37> 'int' 48
    |-IfStmt 0x1c7a7cee960 <line:236:5, line:237:14>
    | |-BinaryOperator 0x1c7a7cee928 <line:236:9, col:27> 'int' '||'
    | | |-ParenExpr 0x1c7a7cee868 <col:9, col:16> 'int'
    | | | `-BinaryOperator 0x1c7a7cee848 <col:10, col:14> 'int' '>'
    | | |   |-ImplicitCastExpr 0x1c7a7cee830 <col:10> 'int' <LValueToRValue>
    | | |   | `-DeclRefExpr 0x1c7a7cee7e8 <col:10> 'int' lvalue Var 0x1c7a7ced680 'M' 'int'
    | | |   `-IntegerLiteral 0x1c7a7cee808 <col:14> 'int' 12
    | | `-ParenExpr 0x1c7a7cee908 <col:21, col:27> 'int'
    | |   `-BinaryOperator 0x1c7a7cee8e8 <col:22, col:26> 'int' '<'
    | |     |-ImplicitCastExpr 0x1c7a7cee8d0 <col:22> 'int' <LValueToRValue>
    | |     | `-DeclRefExpr 0x1c7a7cee888 <col:22> 'int' lvalue Var 0x1c7a7ced680 'M' 'int'
    | |     `-IntegerLiteral 0x1c7a7cee8a8 <col:26> 'int' 1
    | `-GotoStmt 0x1c7a7cee948 <line:237:9, col:14> 'err' 0x1c7a7cedaf0
    |-BinaryOperator 0x1c7a7ceec28 <line:238:5, col:40> 'int' '='
    | |-DeclRefExpr 0x1c7a7cee978 <col:5> 'int' lvalue Var 0x1c7a7ced728 'd' 'int'
    | `-BinaryOperator 0x1c7a7ceec08 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x1c7a7ceeae0 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x1c7a7ceea98 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x1c7a7ceea78 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x1c7a7ceea60 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1c7a7ceea48 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1c7a7ceea10 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x1c7a7cee9f8 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1c7a7cee9b0 <col:10> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x1c7a7cee9d0 <col:12> 'int' 4
    |   | |   `-CharacterLiteral 0x1c7a7ceea30 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x1c7a7ceeab8 <col:24> 'int' 10
    |   `-ParenExpr 0x1c7a7ceebe8 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x1c7a7ceebc8 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x1c7a7ceebb0 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1c7a7ceeb98 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1c7a7ceeb60 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x1c7a7ceeb48 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1c7a7ceeb00 <col:30> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |       |     `-IntegerLiteral 0x1c7a7ceeb20 <col:32> 'int' 5
    |       `-CharacterLiteral 0x1c7a7ceeb80 <col:37> 'int' 48
    |-BinaryOperator 0x1c7a7ceeef8 <line:239:5, col:40> 'int' '='
    | |-DeclRefExpr 0x1c7a7ceec48 <col:5> 'int' lvalue Var 0x1c7a7ced7d0 'h' 'int'
    | `-BinaryOperator 0x1c7a7ceeed8 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x1c7a7ceedb0 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x1c7a7ceed68 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x1c7a7ceed48 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x1c7a7ceed30 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1c7a7ceed18 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1c7a7ceece0 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x1c7a7ceecc8 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1c7a7ceec80 <col:10> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x1c7a7ceeca0 <col:12> 'int' 6
    |   | |   `-CharacterLiteral 0x1c7a7ceed00 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x1c7a7ceed88 <col:24> 'int' 10
    |   `-ParenExpr 0x1c7a7ceeeb8 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x1c7a7ceee98 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x1c7a7ceee80 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1c7a7ceee68 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1c7a7ceee30 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x1c7a7ceee18 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1c7a7ceedd0 <col:30> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |       |     `-IntegerLiteral 0x1c7a7ceedf0 <col:32> 'int' 7
    |       `-CharacterLiteral 0x1c7a7ceee50 <col:37> 'int' 48
    |-BinaryOperator 0x1c7a7cef1c8 <line:240:5, col:40> 'int' '='
    | |-DeclRefExpr 0x1c7a7ceef18 <col:5> 'int' lvalue Var 0x1c7a7ced878 'm' 'int'
    | `-BinaryOperator 0x1c7a7cef1a8 <col:9, col:40> 'int' '+'
    |   |-BinaryOperator 0x1c7a7cef080 <col:9, col:24> 'int' '*'
    |   | |-ParenExpr 0x1c7a7cef038 <col:9, col:20> 'int'
    |   | | `-BinaryOperator 0x1c7a7cef018 <col:10, col:17> 'int' '-'
    |   | |   |-ImplicitCastExpr 0x1c7a7cef000 <col:10, col:13> 'int' <IntegralCast>
    |   | |   | `-ImplicitCastExpr 0x1c7a7ceefe8 <col:10, col:13> 'char' <LValueToRValue>
    |   | |   |   `-ArraySubscriptExpr 0x1c7a7ceefb0 <col:10, col:13> 'const char' lvalue
    |   | |   |     |-ImplicitCastExpr 0x1c7a7ceef98 <col:10> 'const char *' <LValueToRValue>
    |   | |   |     | `-DeclRefExpr 0x1c7a7ceef50 <col:10> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |   | |   |     `-IntegerLiteral 0x1c7a7ceef70 <col:12> 'int' 8
    |   | |   `-CharacterLiteral 0x1c7a7ceefd0 <col:17> 'int' 48
    |   | `-IntegerLiteral 0x1c7a7cef058 <col:24> 'int' 10
    |   `-ParenExpr 0x1c7a7cef188 <col:29, col:40> 'int'
    |     `-BinaryOperator 0x1c7a7cef168 <col:30, col:37> 'int' '-'
    |       |-ImplicitCastExpr 0x1c7a7cef150 <col:30, col:33> 'int' <IntegralCast>
    |       | `-ImplicitCastExpr 0x1c7a7cef138 <col:30, col:33> 'char' <LValueToRValue>
    |       |   `-ArraySubscriptExpr 0x1c7a7cef100 <col:30, col:33> 'const char' lvalue
    |       |     |-ImplicitCastExpr 0x1c7a7cef0e8 <col:30> 'const char *' <LValueToRValue>
    |       |     | `-DeclRefExpr 0x1c7a7cef0a0 <col:30> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |       |     `-IntegerLiteral 0x1c7a7cef0c0 <col:32> 'int' 9
    |       `-CharacterLiteral 0x1c7a7cef120 <col:37> 'int' 48
    |-IfStmt 0x1c7a7cf0940 <line:241:5, line:243:46>
    | |-OpaqueValueExpr 0x1c7a7cf0928 <<invalid sloc>> '_Bool'
    | `-BinaryOperator 0x1c7a7cf0908 <col:9, col:46> 'int' '='
    |   |-DeclRefExpr 0x1c7a7cf0658 <col:9> 'int' lvalue Var 0x1c7a7ced920 's' 'int'
    |   `-BinaryOperator 0x1c7a7cf08e8 <col:13, col:46> 'int' '+'
    |     |-BinaryOperator 0x1c7a7cf07c0 <col:13, col:29> 'int' '*'
    |     | |-ParenExpr 0x1c7a7cf0778 <col:13, col:25> 'int'
    |     | | `-BinaryOperator 0x1c7a7cf0758 <col:14, col:22> 'int' '-'
    |     | |   |-ImplicitCastExpr 0x1c7a7cf0740 <col:14, col:18> 'int' <IntegralCast>
    |     | |   | `-ImplicitCastExpr 0x1c7a7cf0728 <col:14, col:18> 'char' <LValueToRValue>
    |     | |   |   `-ArraySubscriptExpr 0x1c7a7cf06f0 <col:14, col:18> 'const char' lvalue
    |     | |   |     |-ImplicitCastExpr 0x1c7a7cf06d8 <col:14> 'const char *' <LValueToRValue>
    |     | |   |     | `-DeclRefExpr 0x1c7a7cf0690 <col:14> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |     | |   |     `-IntegerLiteral 0x1c7a7cf06b0 <col:16> 'int' 10
    |     | |   `-CharacterLiteral 0x1c7a7cf0710 <col:22> 'int' 48
    |     | `-IntegerLiteral 0x1c7a7cf0798 <col:29> 'int' 10
    |     `-ParenExpr 0x1c7a7cf08c8 <col:34, col:46> 'int'
    |       `-BinaryOperator 0x1c7a7cf08a8 <col:35, col:43> 'int' '-'
    |         |-ImplicitCastExpr 0x1c7a7cf0890 <col:35, col:39> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x1c7a7cf0878 <col:35, col:39> 'char' <LValueToRValue>
    |         |   `-ArraySubscriptExpr 0x1c7a7cf0840 <col:35, col:39> 'const char' lvalue
    |         |     |-ImplicitCastExpr 0x1c7a7cf0828 <col:35> 'const char *' <LValueToRValue>
    |         |     | `-DeclRefExpr 0x1c7a7cf07e0 <col:35> 'const char *' lvalue Var 0x1c7a7ced3e8 'v' 'const char *'
    |         |     `-IntegerLiteral 0x1c7a7cf0800 <col:37> 'int' 11
    |         `-CharacterLiteral 0x1c7a7cf0860 <col:43> 'int' 48
    |-IfStmt 0x1c7a7cf1000 <line:245:5, line:250:18> has_else
    | |-OpaqueValueExpr 0x1c7a7cf0fe8 <<invalid sloc>> '_Bool'
    | |-ReturnStmt 0x1c7a7cf0f80 <line:248:9, col:18>
    | | `-ParenExpr 0x1c7a7cf0f60 <col:16, col:18> 'int'
    | |   `-IntegerLiteral 0x1c7a7cf0f38 <col:17> 'int' 0
    | `-ReturnStmt 0x1c7a7cf0fd8 <line:250:9, col:18>
    |   `-ParenExpr 0x1c7a7cf0fb8 <col:16, col:18> 'int'
    |     `-IntegerLiteral 0x1c7a7cf0f90 <col:17> 'int' 1
    |-LabelStmt 0x1c7a7cf11d0 <line:251:2, col:5> 'err'
    | `-NullStmt 0x1c7a7cf11c8 <col:5>
    `-ReturnStmt 0x1c7a7cf1230 <line:253:5, col:14>
      `-ParenExpr 0x1c7a7cf1210 <col:12, col:14> 'int'
        `-IntegerLiteral 0x1c7a7cf11e8 <col:13> 'int' 0
