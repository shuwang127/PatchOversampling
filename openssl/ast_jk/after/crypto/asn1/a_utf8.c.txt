TranslationUnitDecl 0x1ea3edc2fa8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1ea3edc3840 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1ea3edc3540 '__int128'
|-TypedefDecl 0x1ea3edc38b0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1ea3edc3560 'unsigned __int128'
|-TypedefDecl 0x1ea3edc3be8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1ea3edc39a0 'struct __NSConstantString_tag'
|   `-Record 0x1ea3edc3908 '__NSConstantString_tag'
|-TypedefDecl 0x1ea3edc3c58 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1ea3edc3180 'unsigned long long'
|-TypedefDecl 0x1ea3edc3cf0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1ea3edc3cb0 'char *'
|   `-BuiltinType 0x1ea3edc3040 'char'
|-TypedefDecl 0x1ea3edc3d60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1ea3edc3cb0 'char *'
|   `-BuiltinType 0x1ea3edc3040 'char'
|-TypedefDecl 0x1ea3edc3e20 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1ea3edc3180 'unsigned long long'
|-TypedefDecl 0x1ea3edc3e90 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1ea3edc3cb0 'char *'
|   `-BuiltinType 0x1ea3edc3040 'char'
|-FunctionDecl 0x1ea4083c420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ea4083c4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1ea4083c530 <col:21> Implicit
|-FunctionDecl 0x1ea4083c588 prev 0x1ea4083c420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ea4083c2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1ea4083c678 <col:21> Inherited Implicit
|-TypedefDecl 0x1ea4083c6b8 prev 0x1ea3edc3c58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1ea3edc3180 'unsigned long long'
|-TypedefDecl 0x1ea4083c760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1ea4083c730 'size_t' sugar
|   |-Typedef 0x1ea4083c6b8 'size_t'
|   `-BuiltinType 0x1ea3edc3180 'unsigned long long'
|-TypedefDecl 0x1ea4083c7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1ea3edc30e0 'long long'
|-TypedefDecl 0x1ea4083c840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1ea3edc30e0 'long long'
|-TypedefDecl 0x1ea4083c8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1ea3edc3120 'unsigned short'
|-TypedefDecl 0x1ea4083c920 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1ea3edc3120 'unsigned short'
|-TypedefDecl 0x1ea4083c990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1ea3edc3120 'unsigned short'
|-TypedefDecl 0x1ea4083ca00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1ea3edc30a0 'int'
|-TypedefDecl 0x1ea4083ca70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1ea3edc30c0 'long'
|-TypedefDecl 0x1ea4083cae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1ea3edc30e0 'long long'
|-TypedefDecl 0x1ea4083cb70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1ea4083cb40 '__time64_t' sugar
|   |-Typedef 0x1ea4083cae0 '__time64_t'
|   `-BuiltinType 0x1ea3edc30e0 'long long'
|-FunctionDecl 0x1ea4083cce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1ea4083cf08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1ea40872150 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1ea4083d048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1ea4083d0c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1ea4083d138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1ea4083d1b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1ea40871ef0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1ea40872230 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1ea408722f0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1ea40872460 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1ea40872410 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1ea408723b0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1ea408722d0 'struct threadlocaleinfostruct'
|       `-Record 0x1ea4087efc0 'threadlocaleinfostruct'
|-TypedefDecl 0x1ea40872570 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1ea40872520 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1ea408724c0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1ea40872390 'struct threadmbcinfostruct'
|       `-Record 0x1ea408722f0 'threadmbcinfostruct'
|-RecordDecl 0x1ea408725c8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1ea40872680 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1ea40872740 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ea408727d0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1ea40872860 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1ea40872918 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1ea408728c0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1ea40872720 'struct localeinfo_struct'
|     `-Record 0x1ea40872680 'localeinfo_struct'
|-TypedefDecl 0x1ea408729f0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1ea408729a0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1ea408728c0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1ea40872720 'struct localeinfo_struct'
|       `-Record 0x1ea40872680 'localeinfo_struct'
|-RecordDecl 0x1ea40872a68 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1ea40872b20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ea40872b98 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1ea40872c58 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1ea40872cf0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1ea40872d60 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1ea40872e18 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1ea40872dc0 'struct localerefcount' sugar
|   `-RecordType 0x1ea40872b00 'struct localerefcount'
|     `-Record 0x1ea40872a68 'localerefcount'
|-RecordDecl 0x1ea4087efc0 prev 0x1ea40872230 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1ea4087f040 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ea4087f0b8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1ea4087f128 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1ea4087f198 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1ea4087f208 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1ea4087f3c8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1ea4087f438 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1ea4087f4a8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1ea4087f518 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1ea4087f588 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1ea4087f5f8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1ea4087f650 parent 0x1ea3edc2fa8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1ea4087f7e0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1ea4087f850 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1ea4087f8c0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1ea4087f930 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1ea4087f9d0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1ea4087fa40 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1ea4087fb50 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1ea4087fc88 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1ea4087fd38 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1ea4087fce0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1ea408722d0 'struct threadlocaleinfostruct'
|     `-Record 0x1ea4087efc0 'threadlocaleinfostruct'
|-RecordDecl 0x1ea4087fdd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1ea4087fe90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ea4087ff08 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1ea40881ff0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1ea40882060 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1ea408820d0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1ea40882140 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1ea408821b0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1ea40882220 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1ea40882290 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1ea40882340 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1ea408822f0 'struct _iobuf' sugar
|   `-RecordType 0x1ea4087fe70 'struct _iobuf'
|     `-Record 0x1ea4087fdd0 '_iobuf'
|-FunctionDecl 0x1ea40882578 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1ea40882648 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1ea3edc30e0 'long long'
|-FunctionDecl 0x1ea40882828 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea408826b0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1ea40882b20 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea40882900 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1ea40882978 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ea40882ed0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1ea40882c00 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1ea40882c80 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1ea40882d00 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1ea4088a1e0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ea4088a070 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1ea4088a410 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1ea4088a2d0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ea4088a5c0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea4088a4e0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1ea4088a7b0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea4088aaa8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ea4088a880 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1ea4088a900 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1ea4088ac60 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea4088ab80 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1ea4088ae10 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea4088ad30 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1ea4088afc0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea4088aee0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ea4088b188 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea4088b0a8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1ea4088b318 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea4088b680 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1ea4088b3e0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ea4088b4d8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1ea4088ba38 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1ea4088b760 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1ea4088b7e0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1ea4088b858 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1ea4088bbf8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea4088bb18 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ea4088bec0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ea4088bcd0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1ea4088bd50 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1ea4088c090 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea4088c488 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ea4088c528 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ea4088c590 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ea4088c608 prev 0x1ea4088c488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ea4088c260 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1ea4088c2e0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1ea4088c6b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea4088cb30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1ea4088c860 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1ea4088c8e0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1ea4088c960 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1ea4088ce50 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1ea4088cef0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ea4088cf58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ea4088cfd0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1ea40887040 prev 0x1ea4088ce50 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ea4088cc10 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ea4088cc90 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1ea40887138 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1ea40887300 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ea40887180 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ea40887200 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ea40887558 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea408873e0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1ea40887458 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1ea40887788 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea40887638 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1ea40887a80 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1ea40887860 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1ea408878d8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1ea40887f18 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ea40887fb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ea40888050 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ea408880b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ea40888120 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ea408881a8 prev 0x1ea40887f18 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ea40887b60 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1ea40887bd8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40887c50 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea40887cc8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1ea408886b0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ea40888298 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1ea40888310 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40888388 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40888400 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea40888478 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1ea40888b70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ea408888a0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1ea40888920 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1ea40888998 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1ea40888c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea4088d148 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ea40888d70 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ea40888df0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1ea40888e70 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1ea40888ee8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1ea4088d4f0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ea4088d590 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ea4088d5f8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ea4088d670 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ea4088d6d8 prev 0x1ea4088d4f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ea4088d328 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1ea4088d3a8 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1ea4088d8b8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ea4088d788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea4088dcf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea4088d9f8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1ea4088da78 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1ea4088db10 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea4088ddb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea40889060 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ea4088def0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ea4088df70 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ea40889350 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40889138 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ea408891b8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ea40889230 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408896b0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1ea40889430 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ea40889508 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1ea40889a68 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ea40889788 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1ea40889808 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1ea40889888 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1ea40889cc8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ea40889b48 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1ea40886078 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ea40889d98 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ea40889e18 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1ea40889e98 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1ea408862d8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ea40886158 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ea40886798 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ea40886838 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ea408868a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ea40886908 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ea40886970 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ea408869f8 prev 0x1ea40886798 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ea408863e0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1ea40886458 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408864d0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea40886548 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1ea40886bc0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea40886ae0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ea40886d50 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea40886ed8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea4088f280 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1ea40886fa8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1ea4088f0d0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ea4088f5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ea4088f460 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1ea4088f650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea4088f870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea4088f790 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1ea4088fa90 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1ea4088f948 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1ea4088fc40 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea4088fb60 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1ea4088fe90 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ea4088fd18 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1ea4088fd98 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1ea408900d0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1ea40890170 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ea408901e0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1ea40890248 prev 0x1ea408900d0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1ea4088ff70 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1ea40890338 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1ea40890468 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ea40890388 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1ea408906b8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea40890540 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1ea408905b8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ea40890878 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea40890798 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1ea40890a98 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ea40890950 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1ea40890ce8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea40890b70 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1ea40890be8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ea40890ea8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ea40890dc8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1ea408e3060 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ea40890f80 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1ea40891000 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1ea408e3220 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ea408e3140 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1ea408e34b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1ea408e33d0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1ea408e3558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1ea408e3750 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ea408e3678 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1ea408e38e0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea408e3b88 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ea408e3c28 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ea408e3c98 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1ea408e3d00 prev 0x1ea408e3b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1ea408e3a70 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1ea408e3ed8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1ea408e3da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408dd240 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408dd008 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1ea408dd080 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea408dd2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408dd518 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ea408dd438 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1ea408dd768 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408dd5f0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ea408dd668 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408ddb28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1ea408dd900 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1ea408dd980 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1ea408ddbd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408dde00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea408ddd20 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1ea408e10b8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1ea408e0f70 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1ea408e12a0 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1ea408e16f0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1ea408e1368 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ea408e13e8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1ea408e1468 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1ea408e14e0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ea408e1b70 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea408e17e0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408e1858 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408e18d0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea408e1950 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1ea408e1f80 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea408e1c60 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408e1cd8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea408e1d58 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1ea408e2148 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ea408e2068 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1ea408e2520 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ea408e25c0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ea408e2628 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ea408e26a0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ea408e2708 prev 0x1ea408e2520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ea408e22e0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1ea408e2360 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1ea408e28e8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ea408e27b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408e2cd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408e29f8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1ea408e2a78 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1ea408e2af0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea408e2d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408de040 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1ea408e2ed8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1ea408ddf40 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1ea408de338 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408de120 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1ea408de1a0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1ea408de218 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408de7c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea408de4e0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1ea408de558 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408de5d8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1ea408de880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408dee50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408deac0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1ea408deb38 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408debb8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1ea408dec30 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea408dbf20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408dc280 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea408dc068 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1ea408dc0e0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea408dc160 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1ea408dc618 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408dc368 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1ea408dc3e0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408dc460 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1ea408dc4d8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408dc878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1ea408dc918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408dcbd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1ea408dca60 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1ea408dff60 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1ea408dcca8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1ea408dcd20 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ea408e01e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ea408e0100 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1ea408e0288 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408e0548 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea408e03d0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1ea408e0448 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1ea408e0960 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea408e0a00 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ea408e0a68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ea408e0ad0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea408e0b50 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1ea408e0bb8 prev 0x1ea408e0960 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ea408e0620 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ea408e06a0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1ea408e0718 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ea408e0cb8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1ea408e3fa0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea408e4040 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ea408e40a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ea408e4110 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea408e4190 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ea408e41f8 prev 0x1ea408e3fa0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ea408e0d00 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ea408e0d80 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ea408e0df8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ea408e42f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ea408e4558 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ea408e4340 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ea408e43c0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1ea408e4438 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408e4850 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ea408e4638 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ea408e46b8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1ea408e4730 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408e4b98 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea408e4c38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ea408e4ca0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea408e4d18 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1ea408e4d80 prev 0x1ea408e4b98 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ea408e4938 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1ea408e49b0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ea408e4e78 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1ea408e50e8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea408e5188 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ea408e51f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea408e5268 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1ea408e52d0 prev 0x1ea408e50e8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ea408e4ec8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1ea408e4fb0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ea408e53c8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1ea408e5590 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ea408e5418 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1ea408e5490 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408e57e8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ea408e5670 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ea408e56e8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408e5d48 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea408e5de8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ea408e5e50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ea408e5eb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ea408e5f20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea408def50 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1ea408defb8 prev 0x1ea408e5d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ea408e5988 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408e5a00 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408e5a80 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ea408e5af8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1ea408df1a8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1ea408df078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408df618 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea408df1f8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408df270 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408df2e8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408df368 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ea408df3e0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408dfa58 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea408df710 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408df788 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408df800 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408df880 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1ea408df8f8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408dfe28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea408dfc10 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ea408dfc88 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408dfd08 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1ea408dfee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408eb480 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea408eb1d0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ea408eb248 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408eb2c8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1ea408eb340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ea408eb540 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408eb938 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea408eb688 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408eb700 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408eb780 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ea408eb7f8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408ebcf8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1ea408eba28 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1ea408ebaa8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1ea408ebb20 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408ed0d0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1ea408ed170 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ea408ed1d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ea408ed250 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1ea408ed2b8 prev 0x1ea408ed0d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1ea408ebea0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ea408ebf20 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1ea408ed498 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1ea408ed368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408ed8c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea408ed960 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ea408ed9c8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ea408eda30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea408edab0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1ea408edb18 prev 0x1ea408ed8c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ea408ed5a8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ea408ed628 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1ea408ed6a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1ea408edd00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1ea408edbd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408e6fd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea408e7070 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ea408e70d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ea408e7140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea408e71c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ea408e7228 prev 0x1ea408e6fd0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ea408edd50 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1ea408eddd0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ea408ede48 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ea408e7328 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ea408e74f0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ea408e7378 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1ea408e73f0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408e77e8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea408e75d0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408e7648 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea408e76c8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1ea408e7b80 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea408e78d0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408e7948 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408e79c8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ea408e7a40 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408e7de8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ea408e7c68 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ea408e7ce8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1ea408ec020 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ea408e7ec8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1ea408ec310 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea408ec0f8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1ea408ec170 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea408ec1f0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1ea408ec608 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ea408ec3f0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ea408ec470 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ea408ec4e8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408ec868 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ea408ec6f0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1ea408ec768 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408ecbf8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea408ec948 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1ea408ec9c0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408eca40 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1ea408ecab8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408ecdc8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ea408ecce8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1ea408ee040 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ea408ecea0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ea408ecf18 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408ee200 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea408ee120 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1ea408ee390 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea408ee5d8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408ee460 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1ea408ee4d8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408ee830 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408ee6b8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ea408ee730 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408eea88 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408ee910 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ea408ee988 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408eee38 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408eeb68 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1ea408eebe0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408eec58 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408e9110 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408eef20 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ea408eef98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408e8ff0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408e9408 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408e91f8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ea408e9270 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408e92e8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408e9700 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408e94e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ea408e9568 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1ea408e95e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408e99f8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408e97e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ea408e9860 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ea408e98d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408e9cf0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408e9ad8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ea408e9b58 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ea408e9bd0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408ef1b0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408e9dd0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ea408e9e50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1ea408e9ec8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408e9f40 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408ef548 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408ef298 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ea408ef318 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ea408ef390 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408ef408 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408ef8e0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408ef630 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ea408ef6b0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ea408ef728 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408ef7a0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408efd78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408efa90 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408efb10 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1ea408efb88 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea408efe30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408ea310 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408eff78 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408ea000 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408ea080 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1ea408ea0f8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408ea6b0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408ea400 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408ea478 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408ea4f8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ea408ea570 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408eac00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408ea8a0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408ea920 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1ea408ea998 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ea408eaa10 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ea408eacc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408e8218 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408eae08 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408eae80 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408eaf00 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1ea408eaf78 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408e7fe0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408e8658 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408e8310 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408e8388 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408e8408 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1ea408e8480 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408e84f8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408e88c8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408e8750 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ea408e87c8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408e8b20 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408e89a8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1ea408e8a20 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408e8e10 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408e8c00 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ea408e8c78 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408e8cf0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f7200 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408e8ef8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1ea408e8f70 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408f70e0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f7658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408f73a8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408f7420 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f74a0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1ea408f7518 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea408f7718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408f7b10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408f7860 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408f78d8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f7958 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1ea408f79d0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408f2080 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408f7c00 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408f7c78 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f7cf0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f7d70 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1ea408f7de8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408f25c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408f2278 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408f22f0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f2370 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1ea408f23e8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ea408f2460 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ea408f2688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408f2b08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408f27d8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408f2850 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f28d0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1ea408f2948 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408f29c0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f4100 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408f2c00 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea408f2c78 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f2cf0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f2d70 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ea408f2de8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408f2e60 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f44c0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1ea408f41f8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ea408f4270 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f42f0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1ea408f4730 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ea408f45c0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ea408f4948 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ea408f4c28 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ea408f4a10 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ea408f4a88 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ea408f4e70 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ea408f4d00 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ea408f50b0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ea408f4f40 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1ea408f5238 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ea408f5470 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ea408f5300 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ea408f5378 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1ea408f5620 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ea408f5548 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ea408f58c8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ea408f56f0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea408f5768 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ea408f5c70 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1ea408f59a0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ea408f5a20 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1ea408f5a98 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1ea408f5f70 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ea408f5d50 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f5dc8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ea408f6278 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1ea408f6048 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ea408f60d0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ea408f6580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ea408f6410 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ea408f6628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408f68e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ea408f6768 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1ea408f6bf0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea408f69b8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ea408f6a30 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408f6e40 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea408f6cc8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ea408f6d40 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408f0060 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea408f6f18 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408f0210 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea408f0130 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408f03c0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea408f02e0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408f0758 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f0490 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ea408f0508 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f0580 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f0a48 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f0838 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ea408f08b0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f0928 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f0d38 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f0b28 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ea408f0ba0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f0c18 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f80e0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f0e18 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ea408f0e90 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f0f08 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f83e0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f81c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f8238 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f8630 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f84b8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f8530 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f8880 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f8708 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f8780 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f8ad0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f8958 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f89d0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f8e88 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea408f8ba8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ea408f8c20 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea408f8c98 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408f1280 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f8f68 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ea408f8fe0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f9058 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f1070 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f1638 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f1368 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea408f13e0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f1458 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f1928 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f1718 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1ea408f1790 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f1808 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f1c18 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea408f1a08 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea408f1a80 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea408f1af8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408f1fa0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f1cf8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea408f1d70 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f1de8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f1e60 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f94a0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea408f9118 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea408f9190 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f9208 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea408f9280 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408f99a8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408f9588 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea408f9600 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f9678 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f96f0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408f9768 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408f9d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea408f9b58 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea408f9bd0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408f9c48 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ea408f9e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408fa330 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408fa020 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea408fa100 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408fa178 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea408fa1f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ea408fa3f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea408fa6a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea408fa530 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1ea408fa5a8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408fa860 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea408fa780 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408fab40 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408fa930 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ea408fa9a8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408faa20 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408fad98 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408fac20 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408fac98 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408fcf50 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea408fae70 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea408faee8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea408faf60 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408fd2d8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408fd030 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea408fd0a8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408fd120 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408fd198 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408fd4a0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea408fd3c0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea408fd6e8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea408fd570 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408fd5e8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408fd9f0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408fd7c0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408fd838 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408fdc40 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408fdac8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408fdb40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408fde90 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408fdd18 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408fdd90 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea40901288 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea40900fb8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea40901030 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea409010a8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea40901578 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea40901368 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea409013e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea40901458 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea40901868 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea40901658 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea409016d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea40901748 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea40901c28 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40901948 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ea409019c0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea40901a38 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea40902fb0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40901d08 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ea40901d80 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea40901df8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea409032a0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40903090 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ea40903108 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea40903180 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea409036f0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea40903380 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ea409033f8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea40903470 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea409034e8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea40903a80 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea409037d8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ea40903850 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea409038c8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea40903940 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea40903e10 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea40903b68 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ea40903be0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea40903c58 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea40903cd0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea408ff280 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40903ef8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea408fef70 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408fefe8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408ff060 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408ff610 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408ff368 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea408ff3e0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408ff458 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408ff4d0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408ff9a0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea408ff6f8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea408ff770 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408ff7e8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea408ff860 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea408ffea8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea408ffa88 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea408ffb00 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea408ffb78 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea408ffbf0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea408ffc68 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea40906348 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea40906008 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea40906080 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea409060f8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea40906170 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea409061e8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea40906778 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea40906438 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea409064b0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40906528 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea409065a0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea40906618 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea409069e0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40906868 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea409068e0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea40906c30 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40906ab8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea40906b30 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea40906f18 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea40906d08 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea40906d80 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea40906df8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea40902338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40902090 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea40902108 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40902180 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea409021f8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea409023f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea40902968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40902540 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea409025b8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40902630 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea409026a8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea40902720 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea40902ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea40902b60 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea40902bd8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40902c50 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea40902cc8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ea40902d40 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ea408fff80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea40900590 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea409000c8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea40900140 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea409001b8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40900230 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea409002a8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea40900320 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea40900a90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea40900858 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea409008d0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1ea40900b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ea40900c58 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ea40909278 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea40900f10 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea40909020 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea40909098 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ea40909330 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ea40909448 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ea409099e8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40909708 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea40909780 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea409097f8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1ea40909aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ea40909bc0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ea409041d0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea40909e80 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea40909ef8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea40909f70 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ea40903fc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ea40904290 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ea409043b0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ea409046b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1ea409044d8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ea40904550 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea409045c8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1ea4090c2e0 <line:37:1, line:44:1>
|   |-DeclStmt 0x1ea40904800 <line:38:5, col:21>
|   | `-VarDecl 0x1ea40904798 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ea40904898 <line:39:5, col:13>
|   | `-VarDecl 0x1ea40904830 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ea40904bf0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ea40904bd8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ea40904af0 <col:34> '<builtin fn type>' Function 0x1ea40904988 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ea40904b28 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1ea40904798 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ea40904b60 <col:29> 'const wchar_t *' lvalue ParmVar 0x1ea409045c8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1ea40904eb0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1ea40904c20 <col:5> 'int' lvalue Var 0x1ea40904830 '_Ret' 'int'
|   | `-CallExpr 0x1ea40904df0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1ea40904dd8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ea40904c58 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ea408ffea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ea40904e38 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea40904c78 <col:27> 'wchar_t *' lvalue ParmVar 0x1ea409044d8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ea40904e50 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea40904c98 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ea40904550 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ea40904e68 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea40904cb8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ea409045c8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ea40904e80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1ea40904d40 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1ea40904d18 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1ea40904cd8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1ea40904e98 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ea40904d60 <col:59> 'va_list':'char *' lvalue Var 0x1ea40904798 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ea4090c270 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ea4090c258 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ea4090c1a8 <col:34> '<builtin fn type>' Function 0x1ea4090c040 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ea4090c1e0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1ea40904798 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ea4090c2d0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1ea4090c2b8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ea4090c298 <col:12> 'int' lvalue Var 0x1ea40904830 '_Ret' 'int'
|-FunctionDecl 0x1ea40904988 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1ea40904a28 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ea40904a98 <col:34> Implicit
|-FunctionDecl 0x1ea4090c040 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1ea4090c0e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ea4090c150 <col:34> Implicit
|-FunctionDecl 0x1ea4090c5d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1ea4090c330 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ea4090c3a8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea4090c420 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090c498 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ea4090c8c0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1ea4090c8b0 <line:51:5, col:62>
|     `-CallExpr 0x1ea4090c7f0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1ea4090c7d8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ea4090c6b0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ea408ffea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ea4090c838 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea4090c6d0 <col:27> 'wchar_t *' lvalue ParmVar 0x1ea4090c330 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ea4090c850 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea4090c6f0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ea4090c3a8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ea4090c868 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea4090c710 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ea4090c420 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ea4090c880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1ea4090c798 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1ea4090c770 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1ea4090c730 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1ea4090c898 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ea4090c7b8 <col:59> 'va_list':'char *' lvalue ParmVar 0x1ea4090c498 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ea4090cb60 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1ea4090c8e8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ea4090c960 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea4090c9d8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090ca50 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1ea4090a0c8 <line:61:1, line:68:1>
|   |-DeclStmt 0x1ea4090ccb0 <line:62:5, col:21>
|   | `-VarDecl 0x1ea4090cc48 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ea4090cd48 <line:63:5, col:13>
|   | `-VarDecl 0x1ea4090cce0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ea4090cdf0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ea4090cdd8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ea4090cd60 <col:34> '<builtin fn type>' Function 0x1ea40904988 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ea4090cd80 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1ea4090cc48 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ea4090cdb8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ea4090ca50 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1ea4090cff0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1ea4090ce20 <col:5> 'int' lvalue Var 0x1ea4090cce0 '_Ret' 'int'
|   | `-CallExpr 0x1ea4090cf30 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1ea4090cf18 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ea4090ce58 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ea408ffea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ea4090cf78 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea4090ce78 <col:27> 'wchar_t *' lvalue ParmVar 0x1ea4090c8e8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ea4090cf90 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea4090ce98 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ea4090c960 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ea4090cfa8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea4090ceb8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ea4090c9d8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ea4090cfc0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea4090ced8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ea4090ca50 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1ea4090cfd8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ea4090cef8 <col:64> 'va_list':'char *' lvalue Var 0x1ea4090cc48 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ea4090a058 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ea4090a040 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ea4090d010 <col:34> '<builtin fn type>' Function 0x1ea4090c040 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ea4090a020 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1ea4090cc48 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ea4090a0b8 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1ea4090a0a0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ea4090a080 <col:12> 'int' lvalue Var 0x1ea4090cce0 '_Ret' 'int'
|-FunctionDecl 0x1ea4090a458 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1ea4090a118 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ea4090a190 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea4090a208 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090a280 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ea4090a2f8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ea4090a6e0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1ea4090a6d0 <line:75:5, col:67>
|     `-CallExpr 0x1ea4090a610 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1ea4090a5f8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ea4090a538 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ea408ffea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ea4090a658 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea4090a558 <col:27> 'wchar_t *' lvalue ParmVar 0x1ea4090a118 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ea4090a670 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea4090a578 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ea4090a190 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ea4090a688 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea4090a598 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ea4090a208 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ea4090a6a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea4090a5b8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ea4090a280 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1ea4090a6b8 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ea4090a5d8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1ea4090a2f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ea4090a928 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ea4090a708 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1ea4090a780 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1ea4090ab78 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea4090aa00 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea4090aa78 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea4090ae60 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea4090ac50 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090acc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea4090ad40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea40908178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea40908000 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1ea40908078 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ea40908228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea40908638 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40908428 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1ea409084a0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea40908518 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea409086f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea409089a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea40908830 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ea409088a8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea40908c90 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40908a80 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ea40908af8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea40908b70 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea40905040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea40908e30 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea40908ea8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ea409050f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea409055c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea409052f0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea40905368 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea409053e0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea40905680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea40905938 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea409057c0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ea40905838 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea40905c20 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40905a10 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea40905a88 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea40905b00 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea4090d138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea40905dc0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea40905e38 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40905eb0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ea4090d1f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea4090d770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea4090d3f0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090d468 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea4090d4e0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090d558 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea4090d830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea4090db80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea4090d970 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090d9e8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea4090da60 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea4090df08 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea4090dc60 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090dcd8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea4090dd50 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea4090ddc8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea40912250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea40912170 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ea409122f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea40912670 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea409124f8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea40912570 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea40912720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea40912940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea40912860 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea40912b88 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea40912a10 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea40912a88 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea40912e88 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1ea40912c68 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1ea40912ce0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ea4090f218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ea40913020 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090f070 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1ea4090f2c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea4090f6d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ea4090f410 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ea4090f488 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1ea4090f500 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ea4090fb30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ea4090f870 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090f8e8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090f960 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1ea4090fbe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea409110d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ea4090fd30 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1ea4090fda8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ea4090fe20 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ea4090fe98 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1ea40911330 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1ea409111c0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1ea40911570 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ea40911400 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1ea40911478 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ea40911728 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ea40911648 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1ea40911a18 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ea409117f8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1ea40911870 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ea40911c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ea40911bb0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1ea40911d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea40911f48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ea40911e70 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1ea409151c8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ea40912018 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ea409150d0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ea40915410 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ea409152a0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea40915318 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ea409155c0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ea409154e8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1ea40915768 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ea40915690 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1ea40915918 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea40915838 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ea40915ac8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea409159e8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ea40915e40 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ea40915ba0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1ea40915c18 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40915c90 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea40915d08 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1ea409162b0 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ea40915f30 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1ea40915fa8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40916020 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea409160e0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea40916158 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1ea409165c0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ea409163a0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ea40916420 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1ea409164a0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1ea40916780 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ea409166a0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ea40916a70 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ea40916850 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1ea409168d0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1ea40916950 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1ea40916c30 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ea40916b50 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1ea40916fa8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ea40916d08 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1ea40916d80 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea40916df8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea40916e70 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1ea40913228 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea409130b0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1ea40913128 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1ea40913560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ea409133e0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1ea40913460 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1ea40913610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1ea409138c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ea40913968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1ea40913ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ea40913b30 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1ea40913bb0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1ea40913d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1ea409170f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ea40917190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1ea40917430 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ea40917350 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1ea409174d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1ea40917758 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ea409177f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1ea40917aa0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1ea409179c0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1ea40917b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1ea40917e28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ea40917d48 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1ea40917ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1ea409101f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea40910080 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1ea409100f8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1ea409102a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1ea40910568 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ea40910608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1ea40910990 <.//openssl//file_jk/after\crypto\asn1\a_utf8.c:27:1, line:114:1> line:27:5 UTF8_getc 'int (const unsigned char *, int, unsigned long *)'
| |-ParmVarDecl 0x1ea40910730 <col:15, col:36> col:36 used str 'const unsigned char *'
| |-ParmVarDecl 0x1ea409107b0 <col:41, col:45> col:45 used len 'int'
| |-ParmVarDecl 0x1ea40910860 <col:50, col:65> col:65 used val 'unsigned long *'
| `-CompoundStmt 0x1ea40925150 <line:28:1, line:114:1>
|   |-DeclStmt 0x1ea40910ae0 <line:29:5, col:27>
|   | `-VarDecl 0x1ea40910a78 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x1ea40910b78 <line:30:5, col:24>
|   | `-VarDecl 0x1ea40910b10 <col:5, col:19> col:19 used value 'unsigned long'
|   |-DeclStmt 0x1ea40910c10 <line:31:5, col:12>
|   | `-VarDecl 0x1ea40910ba8 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1ea40910ce0 <line:32:5, line:33:16>
|   | |-BinaryOperator 0x1ea40910c88 <line:32:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x1ea40910c70 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ea40910c28 <col:9> 'int' lvalue ParmVar 0x1ea409107b0 'len' 'int'
|   | | `-IntegerLiteral 0x1ea40910c48 <col:16> 'int' 0
|   | `-ReturnStmt 0x1ea40910cd0 <line:33:9, col:16>
|   |   `-IntegerLiteral 0x1ea40910ca8 <col:16> 'int' 0
|   |-BinaryOperator 0x1ea40910d68 <line:34:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x1ea40910cf8 <col:5> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x1ea40910d50 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ea40910d30 <col:9> 'const unsigned char *' lvalue ParmVar 0x1ea40910730 'str' 'const unsigned char *'
|   |-IfStmt 0x1ea40914fa0 <line:37:5, line:111:17> has_else
|   | |-BinaryOperator 0x1ea40910e98 <line:37:9, col:24> 'int' '=='
|   | | |-ParenExpr 0x1ea40910e50 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1ea40910e30 <col:10, col:15> 'int' '&'
|   | | |   |-ImplicitCastExpr 0x1ea40910e18 <col:10, col:11> 'int' <IntegralCast>
|   | | |   | `-ImplicitCastExpr 0x1ea40910e00 <col:10, col:11> 'unsigned char' <LValueToRValue>
|   | | |   |   `-UnaryOperator 0x1ea40910dc0 <col:10, col:11> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |   |     `-ImplicitCastExpr 0x1ea40910da8 <col:11> 'const unsigned char *' <LValueToRValue>
|   | | |   |       `-DeclRefExpr 0x1ea40910d88 <col:11> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   | | |   `-IntegerLiteral 0x1ea40910dd8 <col:15> 'int' 128
|   | | `-IntegerLiteral 0x1ea40910e70 <col:24> 'int' 0
|   | |-CompoundStmt 0x1ea40919110 <col:27, line:40:5>
|   | | |-BinaryOperator 0x1ea40910fd0 <line:38:9, col:24> 'unsigned long' '='
|   | | | |-DeclRefExpr 0x1ea40910eb8 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   | | | `-ImplicitCastExpr 0x1ea40910fb8 <col:17, col:24> 'unsigned long' <IntegralCast>
|   | | |   `-BinaryOperator 0x1ea40910f98 <col:17, col:24> 'int' '&'
|   | | |     |-ImplicitCastExpr 0x1ea40910f80 <col:17, col:19> 'int' <IntegralCast>
|   | | |     | `-ImplicitCastExpr 0x1ea40910f68 <col:17, col:19> 'unsigned char' <LValueToRValue>
|   | | |     |   `-UnaryOperator 0x1ea40910f28 <col:17, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |     |     `-UnaryOperator 0x1ea40910f10 <col:18, col:19> 'const unsigned char *' postfix '++'
|   | | |     |       `-DeclRefExpr 0x1ea40910ef0 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x1ea40910f40 <col:24> 'int' 127
|   | | `-BinaryOperator 0x1ea40911050 <line:39:9, col:15> 'int' '='
|   | |   |-DeclRefExpr 0x1ea40910ff0 <col:9> 'int' lvalue Var 0x1ea40910ba8 'ret' 'int'
|   | |   `-IntegerLiteral 0x1ea40911028 <col:15> 'int' 1
|   | `-IfStmt 0x1ea40914f78 <line:40:12, line:111:17> has_else
|   |   |-BinaryOperator 0x1ea40919240 <line:40:16, col:31> 'int' '=='
|   |   | |-ParenExpr 0x1ea409191f8 <col:16, col:26> 'int'
|   |   | | `-BinaryOperator 0x1ea409191d8 <col:17, col:22> 'int' '&'
|   |   | |   |-ImplicitCastExpr 0x1ea409191c0 <col:17, col:18> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x1ea409191a8 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |   | |   |   `-UnaryOperator 0x1ea40919168 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |   |     `-ImplicitCastExpr 0x1ea40919150 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x1ea40919130 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |   | |   `-IntegerLiteral 0x1ea40919180 <col:22> 'int' 224
|   |   | `-IntegerLiteral 0x1ea40919218 <col:31> 'int' 192
|   |   |-CompoundStmt 0x1ea40919930 <col:37, line:50:5>
|   |   | |-IfStmt 0x1ea40919330 <line:41:9, line:42:21>
|   |   | | |-BinaryOperator 0x1ea409192c0 <line:41:13, col:19> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1ea409192a8 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1ea40919260 <col:13> 'int' lvalue ParmVar 0x1ea409107b0 'len' 'int'
|   |   | | | `-IntegerLiteral 0x1ea40919280 <col:19> 'int' 2
|   |   | | `-ReturnStmt 0x1ea40919320 <line:42:13, col:21>
|   |   | |   `-UnaryOperator 0x1ea40919308 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1ea409192e0 <col:21> 'int' 1
|   |   | |-IfStmt 0x1ea409194f8 <line:43:9, line:44:21>
|   |   | | |-BinaryOperator 0x1ea40919488 <line:43:13, col:30> 'int' '!='
|   |   | | | |-ParenExpr 0x1ea40919440 <col:13, col:25> 'int'
|   |   | | | | `-BinaryOperator 0x1ea40919420 <col:14, col:21> 'int' '&'
|   |   | | | |   |-ImplicitCastExpr 0x1ea40919408 <col:14, col:17> 'int' <IntegralCast>
|   |   | | | |   | `-ImplicitCastExpr 0x1ea409193f0 <col:14, col:17> 'unsigned char' <LValueToRValue>
|   |   | | | |   |   `-ArraySubscriptExpr 0x1ea409193a8 <col:14, col:17> 'const unsigned char' lvalue
|   |   | | | |   |     |-ImplicitCastExpr 0x1ea40919390 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   | | | |   |     | `-DeclRefExpr 0x1ea40919348 <col:14> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |   | | | |   |     `-IntegerLiteral 0x1ea40919368 <col:16> 'int' 1
|   |   | | | |   `-IntegerLiteral 0x1ea409193c8 <col:21> 'int' 192
|   |   | | | `-IntegerLiteral 0x1ea40919460 <col:30> 'int' 128
|   |   | | `-ReturnStmt 0x1ea409194e8 <line:44:13, col:21>
|   |   | |   `-UnaryOperator 0x1ea409194d0 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1ea409194a8 <col:21> 'int' 3
|   |   | |-BinaryOperator 0x1ea40919678 <line:45:9, col:34> 'unsigned long' '='
|   |   | | |-DeclRefExpr 0x1ea40919510 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x1ea40919660 <col:17, col:34> 'unsigned long' <IntegralCast>
|   |   | |   `-BinaryOperator 0x1ea40919640 <col:17, col:34> 'int' '<<'
|   |   | |     |-ParenExpr 0x1ea409195f8 <col:17, col:29> 'int'
|   |   | |     | `-BinaryOperator 0x1ea409195d8 <col:18, col:25> 'int' '&'
|   |   | |     |   |-ImplicitCastExpr 0x1ea409195c0 <col:18, col:20> 'int' <IntegralCast>
|   |   | |     |   | `-ImplicitCastExpr 0x1ea409195a8 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   | |     |   |   `-UnaryOperator 0x1ea40919568 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |     |   |     `-UnaryOperator 0x1ea40919550 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |   | |     |   |       `-DeclRefExpr 0x1ea40919530 <col:19> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |   | |     |   `-IntegerLiteral 0x1ea40919580 <col:25> 'int' 31
|   |   | |     `-IntegerLiteral 0x1ea40919618 <col:34> 'int' 6
|   |   | |-CompoundAssignOperator 0x1ea40919798 <line:46:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | |-DeclRefExpr 0x1ea40919698 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x1ea40919780 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |   | |   `-BinaryOperator 0x1ea40919760 <col:18, col:25> 'int' '&'
|   |   | |     |-ImplicitCastExpr 0x1ea40919748 <col:18, col:20> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x1ea40919730 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   | |     |   `-UnaryOperator 0x1ea409196f0 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |     |     `-UnaryOperator 0x1ea409196d8 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |   | |     |       `-DeclRefExpr 0x1ea409196b8 <col:19> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |   | |     `-IntegerLiteral 0x1ea40919708 <col:25> 'int' 63
|   |   | |-IfStmt 0x1ea409198b0 <line:47:9, line:48:21>
|   |   | | |-BinaryOperator 0x1ea40919840 <line:47:13, col:21> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1ea40919810 <col:13> 'unsigned long' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1ea409197c8 <col:13> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |   | | | `-ImplicitCastExpr 0x1ea40919828 <col:21> 'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x1ea409197e8 <col:21> 'int' 128
|   |   | | `-ReturnStmt 0x1ea409198a0 <line:48:13, col:21>
|   |   | |   `-UnaryOperator 0x1ea40919888 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1ea40919860 <col:21> 'int' 4
|   |   | `-BinaryOperator 0x1ea40919910 <line:49:9, col:15> 'int' '='
|   |   |   |-DeclRefExpr 0x1ea409198c8 <col:9> 'int' lvalue Var 0x1ea40910ba8 'ret' 'int'
|   |   |   `-IntegerLiteral 0x1ea409198e8 <col:15> 'int' 2
|   |   `-IfStmt 0x1ea40914f50 <line:50:12, line:111:17> has_else
|   |     |-BinaryOperator 0x1ea40919a80 <line:50:16, col:31> 'int' '=='
|   |     | |-ParenExpr 0x1ea40919a38 <col:16, col:26> 'int'
|   |     | | `-BinaryOperator 0x1ea40919a18 <col:17, col:22> 'int' '&'
|   |     | |   |-ImplicitCastExpr 0x1ea40919a00 <col:17, col:18> 'int' <IntegralCast>
|   |     | |   | `-ImplicitCastExpr 0x1ea409199e8 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |     | |   |   `-UnaryOperator 0x1ea409199a8 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   |     `-ImplicitCastExpr 0x1ea40919990 <col:18> 'const unsigned char *' <LValueToRValue>
|   |     | |   |       `-DeclRefExpr 0x1ea40919970 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |     | |   `-IntegerLiteral 0x1ea409199c0 <col:22> 'int' 240
|   |     | `-IntegerLiteral 0x1ea40919a58 <col:31> 'int' 224
|   |     |-CompoundStmt 0x1ea409184c0 <col:37, line:62:5>
|   |     | |-IfStmt 0x1ea40919b70 <line:51:9, line:52:21>
|   |     | | |-BinaryOperator 0x1ea40919b00 <line:51:13, col:19> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x1ea40919ae8 <col:13> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1ea40919aa0 <col:13> 'int' lvalue ParmVar 0x1ea409107b0 'len' 'int'
|   |     | | | `-IntegerLiteral 0x1ea40919ac0 <col:19> 'int' 3
|   |     | | `-ReturnStmt 0x1ea40919b60 <line:52:13, col:21>
|   |     | |   `-UnaryOperator 0x1ea40919b48 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1ea40919b20 <col:21> 'int' 1
|   |     | |-IfStmt 0x1ea40919ef8 <line:53:9, line:55:21>
|   |     | | |-BinaryOperator 0x1ea40919e88 <line:53:13, line:54:38> 'int' '||'
|   |     | | | |-ParenExpr 0x1ea40919ce8 <line:53:13, col:35> 'int'
|   |     | | | | `-BinaryOperator 0x1ea40919cc8 <col:14, col:31> 'int' '!='
|   |     | | | |   |-ParenExpr 0x1ea40919c80 <col:14, col:26> 'int'
|   |     | | | |   | `-BinaryOperator 0x1ea40919c60 <col:15, col:22> 'int' '&'
|   |     | | | |   |   |-ImplicitCastExpr 0x1ea40919c48 <col:15, col:18> 'int' <IntegralCast>
|   |     | | | |   |   | `-ImplicitCastExpr 0x1ea40919c30 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |     | | | |   |   |   `-ArraySubscriptExpr 0x1ea40919be8 <col:15, col:18> 'const unsigned char' lvalue
|   |     | | | |   |   |     |-ImplicitCastExpr 0x1ea40919bd0 <col:15> 'const unsigned char *' <LValueToRValue>
|   |     | | | |   |   |     | `-DeclRefExpr 0x1ea40919b88 <col:15> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |     | | | |   |   |     `-IntegerLiteral 0x1ea40919ba8 <col:17> 'int' 1
|   |     | | | |   |   `-IntegerLiteral 0x1ea40919c08 <col:22> 'int' 192
|   |     | | | |   `-IntegerLiteral 0x1ea40919ca0 <col:31> 'int' 128
|   |     | | | `-ParenExpr 0x1ea40919e68 <line:54:16, col:38> 'int'
|   |     | | |   `-BinaryOperator 0x1ea40919e48 <col:17, col:34> 'int' '!='
|   |     | | |     |-ParenExpr 0x1ea40919e00 <col:17, col:29> 'int'
|   |     | | |     | `-BinaryOperator 0x1ea40919de0 <col:18, col:25> 'int' '&'
|   |     | | |     |   |-ImplicitCastExpr 0x1ea40919dc8 <col:18, col:21> 'int' <IntegralCast>
|   |     | | |     |   | `-ImplicitCastExpr 0x1ea40919db0 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |     | | |     |   |   `-ArraySubscriptExpr 0x1ea40919d68 <col:18, col:21> 'const unsigned char' lvalue
|   |     | | |     |   |     |-ImplicitCastExpr 0x1ea40919d50 <col:18> 'const unsigned char *' <LValueToRValue>
|   |     | | |     |   |     | `-DeclRefExpr 0x1ea40919d08 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |     | | |     |   |     `-IntegerLiteral 0x1ea40919d28 <col:20> 'int' 2
|   |     | | |     |   `-IntegerLiteral 0x1ea40919d88 <col:25> 'int' 192
|   |     | | |     `-IntegerLiteral 0x1ea40919e20 <col:34> 'int' 128
|   |     | | `-ReturnStmt 0x1ea40919ee8 <line:55:13, col:21>
|   |     | |   `-UnaryOperator 0x1ea40919ed0 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1ea40919ea8 <col:21> 'int' 3
|   |     | |-BinaryOperator 0x1ea4091a078 <line:56:9, col:33> 'unsigned long' '='
|   |     | | |-DeclRefExpr 0x1ea40919f10 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1ea4091a060 <col:17, col:33> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1ea4091a040 <col:17, col:33> 'int' '<<'
|   |     | |     |-ParenExpr 0x1ea40919ff8 <col:17, col:28> 'int'
|   |     | |     | `-BinaryOperator 0x1ea40919fd8 <col:18, col:25> 'int' '&'
|   |     | |     |   |-ImplicitCastExpr 0x1ea40919fc0 <col:18, col:20> 'int' <IntegralCast>
|   |     | |     |   | `-ImplicitCastExpr 0x1ea40919fa8 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |     | |     |   |   `-UnaryOperator 0x1ea40919f68 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |   |     `-UnaryOperator 0x1ea40919f50 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |     | |     |   |       `-DeclRefExpr 0x1ea40919f30 <col:19> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |     | |     |   `-IntegerLiteral 0x1ea40919f80 <col:25> 'int' 15
|   |     | |     `-IntegerLiteral 0x1ea4091a018 <col:33> 'int' 12
|   |     | |-CompoundAssignOperator 0x1ea409181f8 <line:57:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     | | |-DeclRefExpr 0x1ea4091a098 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1ea409181e0 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1ea409181c0 <col:18, col:35> 'int' '<<'
|   |     | |     |-ParenExpr 0x1ea40918178 <col:18, col:30> 'int'
|   |     | |     | `-BinaryOperator 0x1ea40918158 <col:19, col:26> 'int' '&'
|   |     | |     |   |-ImplicitCastExpr 0x1ea40918140 <col:19, col:21> 'int' <IntegralCast>
|   |     | |     |   | `-ImplicitCastExpr 0x1ea40918128 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |     | |     |   |   `-UnaryOperator 0x1ea4091a0f0 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |   |     `-UnaryOperator 0x1ea4091a0d8 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |     | |     |   |       `-DeclRefExpr 0x1ea4091a0b8 <col:20> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |     | |     |   `-IntegerLiteral 0x1ea40918100 <col:26> 'int' 63
|   |     | |     `-IntegerLiteral 0x1ea40918198 <col:35> 'int' 6
|   |     | |-CompoundAssignOperator 0x1ea40918328 <line:58:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     | | |-DeclRefExpr 0x1ea40918228 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1ea40918310 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1ea409182f0 <col:18, col:25> 'int' '&'
|   |     | |     |-ImplicitCastExpr 0x1ea409182d8 <col:18, col:20> 'int' <IntegralCast>
|   |     | |     | `-ImplicitCastExpr 0x1ea409182c0 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |     | |     |   `-UnaryOperator 0x1ea40918280 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |     `-UnaryOperator 0x1ea40918268 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |     | |     |       `-DeclRefExpr 0x1ea40918248 <col:19> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |     | |     `-IntegerLiteral 0x1ea40918298 <col:25> 'int' 63
|   |     | |-IfStmt 0x1ea40918440 <line:59:9, line:60:21>
|   |     | | |-BinaryOperator 0x1ea409183d0 <line:59:13, col:21> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x1ea409183a0 <col:13> 'unsigned long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1ea40918358 <col:13> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |     | | | `-ImplicitCastExpr 0x1ea409183b8 <col:21> 'unsigned long' <IntegralCast>
|   |     | | |   `-IntegerLiteral 0x1ea40918378 <col:21> 'int' 2048
|   |     | | `-ReturnStmt 0x1ea40918430 <line:60:13, col:21>
|   |     | |   `-UnaryOperator 0x1ea40918418 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1ea409183f0 <col:21> 'int' 4
|   |     | `-BinaryOperator 0x1ea409184a0 <line:61:9, col:15> 'int' '='
|   |     |   |-DeclRefExpr 0x1ea40918458 <col:9> 'int' lvalue Var 0x1ea40910ba8 'ret' 'int'
|   |     |   `-IntegerLiteral 0x1ea40918478 <col:15> 'int' 3
|   |     `-IfStmt 0x1ea40914f28 <line:62:12, line:111:17> has_else
|   |       |-BinaryOperator 0x1ea40918618 <line:62:16, col:31> 'int' '=='
|   |       | |-ParenExpr 0x1ea409185d0 <col:16, col:26> 'int'
|   |       | | `-BinaryOperator 0x1ea409185b0 <col:17, col:22> 'int' '&'
|   |       | |   |-ImplicitCastExpr 0x1ea40918598 <col:17, col:18> 'int' <IntegralCast>
|   |       | |   | `-ImplicitCastExpr 0x1ea40918580 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |       | |   |   `-UnaryOperator 0x1ea40918540 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |   |     `-ImplicitCastExpr 0x1ea40918528 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | |   |       `-DeclRefExpr 0x1ea40918508 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |       | |   `-IntegerLiteral 0x1ea40918558 <col:22> 'int' 248
|   |       | `-IntegerLiteral 0x1ea409185f0 <col:31> 'int' 240
|   |       |-CompoundStmt 0x1ea4091b430 <col:37, line:76:5>
|   |       | |-IfStmt 0x1ea40918708 <line:63:9, line:64:21>
|   |       | | |-BinaryOperator 0x1ea40918698 <line:63:13, col:19> 'int' '<'
|   |       | | | |-ImplicitCastExpr 0x1ea40918680 <col:13> 'int' <LValueToRValue>
|   |       | | | | `-DeclRefExpr 0x1ea40918638 <col:13> 'int' lvalue ParmVar 0x1ea409107b0 'len' 'int'
|   |       | | | `-IntegerLiteral 0x1ea40918658 <col:19> 'int' 4
|   |       | | `-ReturnStmt 0x1ea409186f8 <line:64:13, col:21>
|   |       | |   `-UnaryOperator 0x1ea409186e0 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1ea409186b8 <col:21> 'int' 1
|   |       | |-IfStmt 0x1ea40918c30 <line:65:9, line:68:21>
|   |       | | |-BinaryOperator 0x1ea40918bc0 <line:65:13, line:67:38> 'int' '||'
|   |       | | | |-BinaryOperator 0x1ea40918a20 <line:65:13, line:66:38> 'int' '||'
|   |       | | | | |-ParenExpr 0x1ea40918880 <line:65:13, col:35> 'int'
|   |       | | | | | `-BinaryOperator 0x1ea40918860 <col:14, col:31> 'int' '!='
|   |       | | | | |   |-ParenExpr 0x1ea40918818 <col:14, col:26> 'int'
|   |       | | | | |   | `-BinaryOperator 0x1ea409187f8 <col:15, col:22> 'int' '&'
|   |       | | | | |   |   |-ImplicitCastExpr 0x1ea409187e0 <col:15, col:18> 'int' <IntegralCast>
|   |       | | | | |   |   | `-ImplicitCastExpr 0x1ea409187c8 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |       | | | | |   |   |   `-ArraySubscriptExpr 0x1ea40918780 <col:15, col:18> 'const unsigned char' lvalue
|   |       | | | | |   |   |     |-ImplicitCastExpr 0x1ea40918768 <col:15> 'const unsigned char *' <LValueToRValue>
|   |       | | | | |   |   |     | `-DeclRefExpr 0x1ea40918720 <col:15> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |       | | | | |   |   |     `-IntegerLiteral 0x1ea40918740 <col:17> 'int' 1
|   |       | | | | |   |   `-IntegerLiteral 0x1ea409187a0 <col:22> 'int' 192
|   |       | | | | |   `-IntegerLiteral 0x1ea40918838 <col:31> 'int' 128
|   |       | | | | `-ParenExpr 0x1ea40918a00 <line:66:16, col:38> 'int'
|   |       | | | |   `-BinaryOperator 0x1ea409189e0 <col:17, col:34> 'int' '!='
|   |       | | | |     |-ParenExpr 0x1ea40918998 <col:17, col:29> 'int'
|   |       | | | |     | `-BinaryOperator 0x1ea40918978 <col:18, col:25> 'int' '&'
|   |       | | | |     |   |-ImplicitCastExpr 0x1ea40918960 <col:18, col:21> 'int' <IntegralCast>
|   |       | | | |     |   | `-ImplicitCastExpr 0x1ea40918948 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |       | | | |     |   |   `-ArraySubscriptExpr 0x1ea40918900 <col:18, col:21> 'const unsigned char' lvalue
|   |       | | | |     |   |     |-ImplicitCastExpr 0x1ea409188e8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | | | |     |   |     | `-DeclRefExpr 0x1ea409188a0 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |       | | | |     |   |     `-IntegerLiteral 0x1ea409188c0 <col:20> 'int' 2
|   |       | | | |     |   `-IntegerLiteral 0x1ea40918920 <col:25> 'int' 192
|   |       | | | |     `-IntegerLiteral 0x1ea409189b8 <col:34> 'int' 128
|   |       | | | `-ParenExpr 0x1ea40918ba0 <line:67:16, col:38> 'int'
|   |       | | |   `-BinaryOperator 0x1ea40918b80 <col:17, col:34> 'int' '!='
|   |       | | |     |-ParenExpr 0x1ea40918b38 <col:17, col:29> 'int'
|   |       | | |     | `-BinaryOperator 0x1ea40918b18 <col:18, col:25> 'int' '&'
|   |       | | |     |   |-ImplicitCastExpr 0x1ea40918b00 <col:18, col:21> 'int' <IntegralCast>
|   |       | | |     |   | `-ImplicitCastExpr 0x1ea40918ae8 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |       | | |     |   |   `-ArraySubscriptExpr 0x1ea40918aa0 <col:18, col:21> 'const unsigned char' lvalue
|   |       | | |     |   |     |-ImplicitCastExpr 0x1ea40918a88 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | | |     |   |     | `-DeclRefExpr 0x1ea40918a40 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |       | | |     |   |     `-IntegerLiteral 0x1ea40918a60 <col:20> 'int' 3
|   |       | | |     |   `-IntegerLiteral 0x1ea40918ac0 <col:25> 'int' 192
|   |       | | |     `-IntegerLiteral 0x1ea40918b58 <col:34> 'int' 128
|   |       | | `-ReturnStmt 0x1ea40918c20 <line:68:13, col:21>
|   |       | |   `-UnaryOperator 0x1ea40918c08 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1ea40918be0 <col:21> 'int' 3
|   |       | |-BinaryOperator 0x1ea40918e18 <line:69:9, col:50> 'unsigned long' '='
|   |       | | |-DeclRefExpr 0x1ea40918c48 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |       | | `-BinaryOperator 0x1ea40918df8 <col:17, col:50> 'unsigned long' '<<'
|   |       | |   |-ParenExpr 0x1ea40918db0 <col:17, col:45> 'unsigned long'
|   |       | |   | `-CStyleCastExpr 0x1ea40918d88 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |       | |   |   `-ParenExpr 0x1ea40918d68 <col:33, col:44> 'int'
|   |       | |   |     `-BinaryOperator 0x1ea40918d10 <col:34, col:41> 'int' '&'
|   |       | |   |       |-ImplicitCastExpr 0x1ea40918cf8 <col:34, col:36> 'int' <IntegralCast>
|   |       | |   |       | `-ImplicitCastExpr 0x1ea40918ce0 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |       | |   |       |   `-UnaryOperator 0x1ea40918ca0 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |   |       |     `-UnaryOperator 0x1ea40918c88 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |       | |   |       |       `-DeclRefExpr 0x1ea40918c68 <col:35> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |       | |   |       `-IntegerLiteral 0x1ea40918cb8 <col:41> 'int' 7
|   |       | |   `-IntegerLiteral 0x1ea40918dd0 <col:50> 'int' 18
|   |       | |-CompoundAssignOperator 0x1ea40918fa0 <line:70:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1ea40918e38 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1ea40918f88 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1ea40918f68 <col:18, col:35> 'int' '<<'
|   |       | |     |-ParenExpr 0x1ea40918f20 <col:18, col:30> 'int'
|   |       | |     | `-BinaryOperator 0x1ea40918f00 <col:19, col:26> 'int' '&'
|   |       | |     |   |-ImplicitCastExpr 0x1ea40918ee8 <col:19, col:21> 'int' <IntegralCast>
|   |       | |     |   | `-ImplicitCastExpr 0x1ea40918ed0 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |       | |     |   |   `-UnaryOperator 0x1ea40918e90 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |   |     `-UnaryOperator 0x1ea40918e78 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |       | |     |   |       `-DeclRefExpr 0x1ea40918e58 <col:20> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |       | |     |   `-IntegerLiteral 0x1ea40918ea8 <col:26> 'int' 63
|   |       | |     `-IntegerLiteral 0x1ea40918f40 <col:35> 'int' 12
|   |       | |-CompoundAssignOperator 0x1ea4091b168 <line:71:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1ea40918fd0 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1ea4091b150 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1ea4091b130 <col:18, col:35> 'int' '<<'
|   |       | |     |-ParenExpr 0x1ea409190b8 <col:18, col:30> 'int'
|   |       | |     | `-BinaryOperator 0x1ea40919098 <col:19, col:26> 'int' '&'
|   |       | |     |   |-ImplicitCastExpr 0x1ea40919080 <col:19, col:21> 'int' <IntegralCast>
|   |       | |     |   | `-ImplicitCastExpr 0x1ea40919068 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |       | |     |   |   `-UnaryOperator 0x1ea40919028 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |   |     `-UnaryOperator 0x1ea40919010 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |       | |     |   |       `-DeclRefExpr 0x1ea40918ff0 <col:20> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |       | |     |   `-IntegerLiteral 0x1ea40919040 <col:26> 'int' 63
|   |       | |     `-IntegerLiteral 0x1ea409190d8 <col:35> 'int' 6
|   |       | |-CompoundAssignOperator 0x1ea4091b298 <line:72:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1ea4091b198 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1ea4091b280 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1ea4091b260 <col:18, col:25> 'int' '&'
|   |       | |     |-ImplicitCastExpr 0x1ea4091b248 <col:18, col:20> 'int' <IntegralCast>
|   |       | |     | `-ImplicitCastExpr 0x1ea4091b230 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |       | |     |   `-UnaryOperator 0x1ea4091b1f0 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |     `-UnaryOperator 0x1ea4091b1d8 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |       | |     |       `-DeclRefExpr 0x1ea4091b1b8 <col:19> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |       | |     `-IntegerLiteral 0x1ea4091b208 <col:25> 'int' 63
|   |       | |-IfStmt 0x1ea4091b3b0 <line:73:9, line:74:21>
|   |       | | |-BinaryOperator 0x1ea4091b340 <line:73:13, col:21> 'int' '<'
|   |       | | | |-ImplicitCastExpr 0x1ea4091b310 <col:13> 'unsigned long' <LValueToRValue>
|   |       | | | | `-DeclRefExpr 0x1ea4091b2c8 <col:13> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |       | | | `-ImplicitCastExpr 0x1ea4091b328 <col:21> 'unsigned long' <IntegralCast>
|   |       | | |   `-IntegerLiteral 0x1ea4091b2e8 <col:21> 'int' 65536
|   |       | | `-ReturnStmt 0x1ea4091b3a0 <line:74:13, col:21>
|   |       | |   `-UnaryOperator 0x1ea4091b388 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1ea4091b360 <col:21> 'int' 4
|   |       | `-BinaryOperator 0x1ea4091b410 <line:75:9, col:15> 'int' '='
|   |       |   |-DeclRefExpr 0x1ea4091b3c8 <col:9> 'int' lvalue Var 0x1ea40910ba8 'ret' 'int'
|   |       |   `-IntegerLiteral 0x1ea4091b3e8 <col:15> 'int' 4
|   |       `-IfStmt 0x1ea40914f00 <line:76:12, line:111:17> has_else
|   |         |-BinaryOperator 0x1ea4091b590 <line:76:16, col:31> 'int' '=='
|   |         | |-ParenExpr 0x1ea4091b548 <col:16, col:26> 'int'
|   |         | | `-BinaryOperator 0x1ea4091b528 <col:17, col:22> 'int' '&'
|   |         | |   |-ImplicitCastExpr 0x1ea4091b510 <col:17, col:18> 'int' <IntegralCast>
|   |         | |   | `-ImplicitCastExpr 0x1ea4091b4f8 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |         | |   |   `-UnaryOperator 0x1ea4091b4b8 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |     `-ImplicitCastExpr 0x1ea4091b4a0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | |   |       `-DeclRefExpr 0x1ea4091b480 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |         | |   `-IntegerLiteral 0x1ea4091b4d0 <col:22> 'int' 252
|   |         | `-IntegerLiteral 0x1ea4091b568 <col:31> 'int' 248
|   |         |-CompoundStmt 0x1ea4091a780 <col:37, line:92:5>
|   |         | |-IfStmt 0x1ea4091b680 <line:77:9, line:78:21>
|   |         | | |-BinaryOperator 0x1ea4091b610 <line:77:13, col:19> 'int' '<'
|   |         | | | |-ImplicitCastExpr 0x1ea4091b5f8 <col:13> 'int' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1ea4091b5b0 <col:13> 'int' lvalue ParmVar 0x1ea409107b0 'len' 'int'
|   |         | | | `-IntegerLiteral 0x1ea4091b5d0 <col:19> 'int' 5
|   |         | | `-ReturnStmt 0x1ea4091b670 <line:78:13, col:21>
|   |         | |   `-UnaryOperator 0x1ea4091b658 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1ea4091b630 <col:21> 'int' 1
|   |         | |-IfStmt 0x1ea4091bd48 <line:79:9, line:83:21>
|   |         | | |-BinaryOperator 0x1ea4091bcd8 <line:79:13, line:82:38> 'int' '||'
|   |         | | | |-BinaryOperator 0x1ea4091bb38 <line:79:13, line:81:38> 'int' '||'
|   |         | | | | |-BinaryOperator 0x1ea4091b998 <line:79:13, line:80:38> 'int' '||'
|   |         | | | | | |-ParenExpr 0x1ea4091b7f8 <line:79:13, col:35> 'int'
|   |         | | | | | | `-BinaryOperator 0x1ea4091b7d8 <col:14, col:31> 'int' '!='
|   |         | | | | | |   |-ParenExpr 0x1ea4091b790 <col:14, col:26> 'int'
|   |         | | | | | |   | `-BinaryOperator 0x1ea4091b770 <col:15, col:22> 'int' '&'
|   |         | | | | | |   |   |-ImplicitCastExpr 0x1ea4091b758 <col:15, col:18> 'int' <IntegralCast>
|   |         | | | | | |   |   | `-ImplicitCastExpr 0x1ea4091b740 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |         | | | | | |   |   |   `-ArraySubscriptExpr 0x1ea4091b6f8 <col:15, col:18> 'const unsigned char' lvalue
|   |         | | | | | |   |   |     |-ImplicitCastExpr 0x1ea4091b6e0 <col:15> 'const unsigned char *' <LValueToRValue>
|   |         | | | | | |   |   |     | `-DeclRefExpr 0x1ea4091b698 <col:15> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |         | | | | | |   |   |     `-IntegerLiteral 0x1ea4091b6b8 <col:17> 'int' 1
|   |         | | | | | |   |   `-IntegerLiteral 0x1ea4091b718 <col:22> 'int' 192
|   |         | | | | | |   `-IntegerLiteral 0x1ea4091b7b0 <col:31> 'int' 128
|   |         | | | | | `-ParenExpr 0x1ea4091b978 <line:80:16, col:38> 'int'
|   |         | | | | |   `-BinaryOperator 0x1ea4091b958 <col:17, col:34> 'int' '!='
|   |         | | | | |     |-ParenExpr 0x1ea4091b910 <col:17, col:29> 'int'
|   |         | | | | |     | `-BinaryOperator 0x1ea4091b8f0 <col:18, col:25> 'int' '&'
|   |         | | | | |     |   |-ImplicitCastExpr 0x1ea4091b8d8 <col:18, col:21> 'int' <IntegralCast>
|   |         | | | | |     |   | `-ImplicitCastExpr 0x1ea4091b8c0 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | | | |     |   |   `-ArraySubscriptExpr 0x1ea4091b878 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | | | |     |   |     |-ImplicitCastExpr 0x1ea4091b860 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | | | |     |   |     | `-DeclRefExpr 0x1ea4091b818 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |         | | | | |     |   |     `-IntegerLiteral 0x1ea4091b838 <col:20> 'int' 2
|   |         | | | | |     |   `-IntegerLiteral 0x1ea4091b898 <col:25> 'int' 192
|   |         | | | | |     `-IntegerLiteral 0x1ea4091b930 <col:34> 'int' 128
|   |         | | | | `-ParenExpr 0x1ea4091bb18 <line:81:16, col:38> 'int'
|   |         | | | |   `-BinaryOperator 0x1ea4091baf8 <col:17, col:34> 'int' '!='
|   |         | | | |     |-ParenExpr 0x1ea4091bab0 <col:17, col:29> 'int'
|   |         | | | |     | `-BinaryOperator 0x1ea4091ba90 <col:18, col:25> 'int' '&'
|   |         | | | |     |   |-ImplicitCastExpr 0x1ea4091ba78 <col:18, col:21> 'int' <IntegralCast>
|   |         | | | |     |   | `-ImplicitCastExpr 0x1ea4091ba60 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | | |     |   |   `-ArraySubscriptExpr 0x1ea4091ba18 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | | |     |   |     |-ImplicitCastExpr 0x1ea4091ba00 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | | |     |   |     | `-DeclRefExpr 0x1ea4091b9b8 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |         | | | |     |   |     `-IntegerLiteral 0x1ea4091b9d8 <col:20> 'int' 3
|   |         | | | |     |   `-IntegerLiteral 0x1ea4091ba38 <col:25> 'int' 192
|   |         | | | |     `-IntegerLiteral 0x1ea4091bad0 <col:34> 'int' 128
|   |         | | | `-ParenExpr 0x1ea4091bcb8 <line:82:16, col:38> 'int'
|   |         | | |   `-BinaryOperator 0x1ea4091bc98 <col:17, col:34> 'int' '!='
|   |         | | |     |-ParenExpr 0x1ea4091bc50 <col:17, col:29> 'int'
|   |         | | |     | `-BinaryOperator 0x1ea4091bc30 <col:18, col:25> 'int' '&'
|   |         | | |     |   |-ImplicitCastExpr 0x1ea4091bc18 <col:18, col:21> 'int' <IntegralCast>
|   |         | | |     |   | `-ImplicitCastExpr 0x1ea4091bc00 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | |     |   |   `-ArraySubscriptExpr 0x1ea4091bbb8 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | |     |   |     |-ImplicitCastExpr 0x1ea4091bba0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | |     |   |     | `-DeclRefExpr 0x1ea4091bb58 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |         | | |     |   |     `-IntegerLiteral 0x1ea4091bb78 <col:20> 'int' 4
|   |         | | |     |   `-IntegerLiteral 0x1ea4091bbd8 <col:25> 'int' 192
|   |         | | |     `-IntegerLiteral 0x1ea4091bc70 <col:34> 'int' 128
|   |         | | `-ReturnStmt 0x1ea4091bd38 <line:83:13, col:21>
|   |         | |   `-UnaryOperator 0x1ea4091bd20 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1ea4091bcf8 <col:21> 'int' 3
|   |         | |-BinaryOperator 0x1ea4091bf30 <line:84:9, col:50> 'unsigned long' '='
|   |         | | |-DeclRefExpr 0x1ea4091bd60 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1ea4091bf10 <col:17, col:50> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1ea4091bec8 <col:17, col:45> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1ea4091bea0 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1ea4091be80 <col:33, col:44> 'int'
|   |         | |   |     `-BinaryOperator 0x1ea4091be28 <col:34, col:41> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1ea4091be10 <col:34, col:36> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1ea4091bdf8 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1ea4091bdb8 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1ea4091bda0 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1ea4091bd80 <col:35> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1ea4091bdd0 <col:41> 'int' 3
|   |         | |   `-IntegerLiteral 0x1ea4091bee8 <col:50> 'int' 24
|   |         | |-CompoundAssignOperator 0x1ea4091a120 <line:85:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1ea4091bf50 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1ea4091c100 <col:18, col:52> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1ea4091c0b8 <col:18, col:47> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1ea4091c090 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1ea4091c070 <col:34, col:46> 'int'
|   |         | |   |     `-BinaryOperator 0x1ea4091c018 <col:35, col:42> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1ea4091c000 <col:35, col:37> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1ea4091bfe8 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1ea4091bfa8 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1ea4091bf90 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1ea4091bf70 <col:36> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1ea4091bfc0 <col:42> 'int' 63
|   |         | |   `-IntegerLiteral 0x1ea4091c0d8 <col:52> 'int' 18
|   |         | |-CompoundAssignOperator 0x1ea4091a320 <line:86:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1ea4091a150 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1ea4091a300 <col:18, col:52> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1ea4091a2b8 <col:18, col:47> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1ea4091a290 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1ea4091a270 <col:34, col:46> 'int'
|   |         | |   |     `-BinaryOperator 0x1ea4091a218 <col:35, col:42> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1ea4091a200 <col:35, col:37> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1ea4091a1e8 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1ea4091a1a8 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1ea4091a190 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1ea4091a170 <col:36> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1ea4091a1c0 <col:42> 'int' 63
|   |         | |   `-IntegerLiteral 0x1ea4091a2d8 <col:52> 'int' 12
|   |         | |-CompoundAssignOperator 0x1ea4091a4b8 <line:87:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1ea4091a350 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |         | | `-ImplicitCastExpr 0x1ea4091a4a0 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |         | |   `-BinaryOperator 0x1ea4091a480 <col:18, col:35> 'int' '<<'
|   |         | |     |-ParenExpr 0x1ea4091a438 <col:18, col:30> 'int'
|   |         | |     | `-BinaryOperator 0x1ea4091a418 <col:19, col:26> 'int' '&'
|   |         | |     |   |-ImplicitCastExpr 0x1ea4091a400 <col:19, col:21> 'int' <IntegralCast>
|   |         | |     |   | `-ImplicitCastExpr 0x1ea4091a3e8 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |         | |     |   |   `-UnaryOperator 0x1ea4091a3a8 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |     |   |     `-UnaryOperator 0x1ea4091a390 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |         | |     |   |       `-DeclRefExpr 0x1ea4091a370 <col:20> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |         | |     |   `-IntegerLiteral 0x1ea4091a3c0 <col:26> 'int' 63
|   |         | |     `-IntegerLiteral 0x1ea4091a458 <col:35> 'int' 6
|   |         | |-CompoundAssignOperator 0x1ea4091a5e8 <line:88:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1ea4091a4e8 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |         | | `-ImplicitCastExpr 0x1ea4091a5d0 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |         | |   `-BinaryOperator 0x1ea4091a5b0 <col:18, col:25> 'int' '&'
|   |         | |     |-ImplicitCastExpr 0x1ea4091a598 <col:18, col:20> 'int' <IntegralCast>
|   |         | |     | `-ImplicitCastExpr 0x1ea4091a580 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |         | |     |   `-UnaryOperator 0x1ea4091a540 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |     |     `-UnaryOperator 0x1ea4091a528 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |         | |     |       `-DeclRefExpr 0x1ea4091a508 <col:19> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |         | |     `-IntegerLiteral 0x1ea4091a558 <col:25> 'int' 63
|   |         | |-IfStmt 0x1ea4091a700 <line:89:9, line:90:21>
|   |         | | |-BinaryOperator 0x1ea4091a690 <line:89:13, col:21> 'int' '<'
|   |         | | | |-ImplicitCastExpr 0x1ea4091a660 <col:13> 'unsigned long' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1ea4091a618 <col:13> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |         | | | `-ImplicitCastExpr 0x1ea4091a678 <col:21> 'unsigned long' <IntegralCast>
|   |         | | |   `-IntegerLiteral 0x1ea4091a638 <col:21> 'int' 2097152
|   |         | | `-ReturnStmt 0x1ea4091a6f0 <line:90:13, col:21>
|   |         | |   `-UnaryOperator 0x1ea4091a6d8 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1ea4091a6b0 <col:21> 'int' 4
|   |         | `-BinaryOperator 0x1ea4091a760 <line:91:9, col:15> 'int' '='
|   |         |   |-DeclRefExpr 0x1ea4091a718 <col:9> 'int' lvalue Var 0x1ea40910ba8 'ret' 'int'
|   |         |   `-IntegerLiteral 0x1ea4091a738 <col:15> 'int' 5
|   |         `-IfStmt 0x1ea40914ed8 <line:92:12, line:111:17> has_else
|   |           |-BinaryOperator 0x1ea4091a8e8 <line:92:16, col:31> 'int' '=='
|   |           | |-ParenExpr 0x1ea4091a8a0 <col:16, col:26> 'int'
|   |           | | `-BinaryOperator 0x1ea4091a880 <col:17, col:22> 'int' '&'
|   |           | |   |-ImplicitCastExpr 0x1ea4091a868 <col:17, col:18> 'int' <IntegralCast>
|   |           | |   | `-ImplicitCastExpr 0x1ea4091a850 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |           | |   |   `-UnaryOperator 0x1ea4091a810 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |     `-ImplicitCastExpr 0x1ea4091a7f8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | |   |       `-DeclRefExpr 0x1ea4091a7d8 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | |   `-IntegerLiteral 0x1ea4091a828 <col:22> 'int' 254
|   |           | `-IntegerLiteral 0x1ea4091a8c0 <col:31> 'int' 252
|   |           |-CompoundStmt 0x1ea40914e28 <col:37, line:110:5>
|   |           | |-IfStmt 0x1ea4091a9d8 <line:93:9, line:94:21>
|   |           | | |-BinaryOperator 0x1ea4091a968 <line:93:13, col:19> 'int' '<'
|   |           | | | |-ImplicitCastExpr 0x1ea4091a950 <col:13> 'int' <LValueToRValue>
|   |           | | | | `-DeclRefExpr 0x1ea4091a908 <col:13> 'int' lvalue ParmVar 0x1ea409107b0 'len' 'int'
|   |           | | | `-IntegerLiteral 0x1ea4091a928 <col:19> 'int' 6
|   |           | | `-ReturnStmt 0x1ea4091a9c8 <line:94:13, col:21>
|   |           | |   `-UnaryOperator 0x1ea4091a9b0 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1ea4091a988 <col:21> 'int' 1
|   |           | |-IfStmt 0x1ea409141f0 <line:95:9, line:100:21>
|   |           | | |-BinaryOperator 0x1ea40914180 <line:95:13, line:99:38> 'int' '||'
|   |           | | | |-BinaryOperator 0x1ea4091b030 <line:95:13, line:98:38> 'int' '||'
|   |           | | | | |-BinaryOperator 0x1ea4091ae90 <line:95:13, line:97:38> 'int' '||'
|   |           | | | | | |-BinaryOperator 0x1ea4091acf0 <line:95:13, line:96:38> 'int' '||'
|   |           | | | | | | |-ParenExpr 0x1ea4091ab50 <line:95:13, col:35> 'int'
|   |           | | | | | | | `-BinaryOperator 0x1ea4091ab30 <col:14, col:31> 'int' '!='
|   |           | | | | | | |   |-ParenExpr 0x1ea4091aae8 <col:14, col:26> 'int'
|   |           | | | | | | |   | `-BinaryOperator 0x1ea4091aac8 <col:15, col:22> 'int' '&'
|   |           | | | | | | |   |   |-ImplicitCastExpr 0x1ea4091aab0 <col:15, col:18> 'int' <IntegralCast>
|   |           | | | | | | |   |   | `-ImplicitCastExpr 0x1ea4091aa98 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |           | | | | | | |   |   |   `-ArraySubscriptExpr 0x1ea4091aa50 <col:15, col:18> 'const unsigned char' lvalue
|   |           | | | | | | |   |   |     |-ImplicitCastExpr 0x1ea4091aa38 <col:15> 'const unsigned char *' <LValueToRValue>
|   |           | | | | | | |   |   |     | `-DeclRefExpr 0x1ea4091a9f0 <col:15> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | | | | | | |   |   |     `-IntegerLiteral 0x1ea4091aa10 <col:17> 'int' 1
|   |           | | | | | | |   |   `-IntegerLiteral 0x1ea4091aa70 <col:22> 'int' 192
|   |           | | | | | | |   `-IntegerLiteral 0x1ea4091ab08 <col:31> 'int' 128
|   |           | | | | | | `-ParenExpr 0x1ea4091acd0 <line:96:16, col:38> 'int'
|   |           | | | | | |   `-BinaryOperator 0x1ea4091acb0 <col:17, col:34> 'int' '!='
|   |           | | | | | |     |-ParenExpr 0x1ea4091ac68 <col:17, col:29> 'int'
|   |           | | | | | |     | `-BinaryOperator 0x1ea4091ac48 <col:18, col:25> 'int' '&'
|   |           | | | | | |     |   |-ImplicitCastExpr 0x1ea4091ac30 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | | | |     |   | `-ImplicitCastExpr 0x1ea4091ac18 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | | | |     |   |   `-ArraySubscriptExpr 0x1ea4091abd0 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | | | |     |   |     |-ImplicitCastExpr 0x1ea4091abb8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | | | |     |   |     | `-DeclRefExpr 0x1ea4091ab70 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | | | | | |     |   |     `-IntegerLiteral 0x1ea4091ab90 <col:20> 'int' 2
|   |           | | | | | |     |   `-IntegerLiteral 0x1ea4091abf0 <col:25> 'int' 192
|   |           | | | | | |     `-IntegerLiteral 0x1ea4091ac88 <col:34> 'int' 128
|   |           | | | | | `-ParenExpr 0x1ea4091ae70 <line:97:16, col:38> 'int'
|   |           | | | | |   `-BinaryOperator 0x1ea4091ae50 <col:17, col:34> 'int' '!='
|   |           | | | | |     |-ParenExpr 0x1ea4091ae08 <col:17, col:29> 'int'
|   |           | | | | |     | `-BinaryOperator 0x1ea4091ade8 <col:18, col:25> 'int' '&'
|   |           | | | | |     |   |-ImplicitCastExpr 0x1ea4091add0 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | | |     |   | `-ImplicitCastExpr 0x1ea4091adb8 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | | |     |   |   `-ArraySubscriptExpr 0x1ea4091ad70 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | | |     |   |     |-ImplicitCastExpr 0x1ea4091ad58 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | | |     |   |     | `-DeclRefExpr 0x1ea4091ad10 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | | | | |     |   |     `-IntegerLiteral 0x1ea4091ad30 <col:20> 'int' 3
|   |           | | | | |     |   `-IntegerLiteral 0x1ea4091ad90 <col:25> 'int' 192
|   |           | | | | |     `-IntegerLiteral 0x1ea4091ae28 <col:34> 'int' 128
|   |           | | | | `-ParenExpr 0x1ea4091b010 <line:98:16, col:38> 'int'
|   |           | | | |   `-BinaryOperator 0x1ea4091aff0 <col:17, col:34> 'int' '!='
|   |           | | | |     |-ParenExpr 0x1ea4091afa8 <col:17, col:29> 'int'
|   |           | | | |     | `-BinaryOperator 0x1ea4091af88 <col:18, col:25> 'int' '&'
|   |           | | | |     |   |-ImplicitCastExpr 0x1ea4091af70 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | |     |   | `-ImplicitCastExpr 0x1ea4091af58 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | |     |   |   `-ArraySubscriptExpr 0x1ea4091af10 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | |     |   |     |-ImplicitCastExpr 0x1ea4091aef8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | |     |   |     | `-DeclRefExpr 0x1ea4091aeb0 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | | | |     |   |     `-IntegerLiteral 0x1ea4091aed0 <col:20> 'int' 4
|   |           | | | |     |   `-IntegerLiteral 0x1ea4091af30 <col:25> 'int' 192
|   |           | | | |     `-IntegerLiteral 0x1ea4091afc8 <col:34> 'int' 128
|   |           | | | `-ParenExpr 0x1ea40914160 <line:99:16, col:38> 'int'
|   |           | | |   `-BinaryOperator 0x1ea40914140 <col:17, col:34> 'int' '!='
|   |           | | |     |-ParenExpr 0x1ea409140f8 <col:17, col:29> 'int'
|   |           | | |     | `-BinaryOperator 0x1ea409140d8 <col:18, col:25> 'int' '&'
|   |           | | |     |   |-ImplicitCastExpr 0x1ea409140c0 <col:18, col:21> 'int' <IntegralCast>
|   |           | | |     |   | `-ImplicitCastExpr 0x1ea4091b0f8 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | |     |   |   `-ArraySubscriptExpr 0x1ea4091b0b0 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | |     |   |     |-ImplicitCastExpr 0x1ea4091b098 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | |     |   |     | `-DeclRefExpr 0x1ea4091b050 <col:18> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | | |     |   |     `-IntegerLiteral 0x1ea4091b070 <col:20> 'int' 5
|   |           | | |     |   `-IntegerLiteral 0x1ea4091b0d0 <col:25> 'int' 192
|   |           | | |     `-IntegerLiteral 0x1ea40914118 <col:34> 'int' 128
|   |           | | `-ReturnStmt 0x1ea409141e0 <line:100:13, col:21>
|   |           | |   `-UnaryOperator 0x1ea409141c8 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1ea409141a0 <col:21> 'int' 3
|   |           | |-BinaryOperator 0x1ea409143d8 <line:101:9, col:50> 'unsigned long' '='
|   |           | | |-DeclRefExpr 0x1ea40914208 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1ea409143b8 <col:17, col:50> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1ea40914370 <col:17, col:45> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1ea40914348 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1ea40914328 <col:33, col:44> 'int'
|   |           | |   |     `-BinaryOperator 0x1ea409142d0 <col:34, col:41> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1ea409142b8 <col:34, col:36> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1ea409142a0 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1ea40914260 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1ea40914248 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1ea40914228 <col:35> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1ea40914278 <col:41> 'int' 1
|   |           | |   `-IntegerLiteral 0x1ea40914390 <col:50> 'int' 30
|   |           | |-CompoundAssignOperator 0x1ea409145c8 <line:102:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1ea409143f8 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1ea409145a8 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1ea40914560 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1ea40914538 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1ea40914518 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1ea409144c0 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1ea409144a8 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1ea40914490 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1ea40914450 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1ea40914438 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1ea40914418 <col:36> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1ea40914468 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1ea40914580 <col:52> 'int' 24
|   |           | |-CompoundAssignOperator 0x1ea409147c8 <line:103:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1ea409145f8 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1ea409147a8 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1ea40914760 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1ea40914738 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1ea40914718 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1ea409146c0 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1ea409146a8 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1ea40914690 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1ea40914650 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1ea40914638 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1ea40914618 <col:36> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1ea40914668 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1ea40914780 <col:52> 'int' 18
|   |           | |-CompoundAssignOperator 0x1ea409149c8 <line:104:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1ea409147f8 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1ea409149a8 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1ea40914960 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1ea40914938 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1ea40914918 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1ea409148c0 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1ea409148a8 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1ea40914890 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1ea40914850 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1ea40914838 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1ea40914818 <col:36> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1ea40914868 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1ea40914980 <col:52> 'int' 12
|   |           | |-CompoundAssignOperator 0x1ea40914b60 <line:105:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1ea409149f8 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |           | | `-ImplicitCastExpr 0x1ea40914b48 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |           | |   `-BinaryOperator 0x1ea40914b28 <col:18, col:35> 'int' '<<'
|   |           | |     |-ParenExpr 0x1ea40914ae0 <col:18, col:30> 'int'
|   |           | |     | `-BinaryOperator 0x1ea40914ac0 <col:19, col:26> 'int' '&'
|   |           | |     |   |-ImplicitCastExpr 0x1ea40914aa8 <col:19, col:21> 'int' <IntegralCast>
|   |           | |     |   | `-ImplicitCastExpr 0x1ea40914a90 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |           | |     |   |   `-UnaryOperator 0x1ea40914a50 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |     |   |     `-UnaryOperator 0x1ea40914a38 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |           | |     |   |       `-DeclRefExpr 0x1ea40914a18 <col:20> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | |     |   `-IntegerLiteral 0x1ea40914a68 <col:26> 'int' 63
|   |           | |     `-IntegerLiteral 0x1ea40914b00 <col:35> 'int' 6
|   |           | |-CompoundAssignOperator 0x1ea40914c90 <line:106:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1ea40914b90 <col:9> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |           | | `-ImplicitCastExpr 0x1ea40914c78 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |           | |   `-BinaryOperator 0x1ea40914c58 <col:18, col:25> 'int' '&'
|   |           | |     |-ImplicitCastExpr 0x1ea40914c40 <col:18, col:20> 'int' <IntegralCast>
|   |           | |     | `-ImplicitCastExpr 0x1ea40914c28 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |           | |     |   `-UnaryOperator 0x1ea40914be8 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |     |     `-UnaryOperator 0x1ea40914bd0 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |           | |     |       `-DeclRefExpr 0x1ea40914bb0 <col:19> 'const unsigned char *' lvalue Var 0x1ea40910a78 'p' 'const unsigned char *'
|   |           | |     `-IntegerLiteral 0x1ea40914c00 <col:25> 'int' 63
|   |           | |-IfStmt 0x1ea40914da8 <line:107:9, line:108:21>
|   |           | | |-BinaryOperator 0x1ea40914d38 <line:107:13, col:21> 'int' '<'
|   |           | | | |-ImplicitCastExpr 0x1ea40914d08 <col:13> 'unsigned long' <LValueToRValue>
|   |           | | | | `-DeclRefExpr 0x1ea40914cc0 <col:13> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   |           | | | `-ImplicitCastExpr 0x1ea40914d20 <col:21> 'unsigned long' <IntegralCast>
|   |           | | |   `-IntegerLiteral 0x1ea40914ce0 <col:21> 'int' 67108864
|   |           | | `-ReturnStmt 0x1ea40914d98 <line:108:13, col:21>
|   |           | |   `-UnaryOperator 0x1ea40914d80 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1ea40914d58 <col:21> 'int' 4
|   |           | `-BinaryOperator 0x1ea40914e08 <line:109:9, col:15> 'int' '='
|   |           |   |-DeclRefExpr 0x1ea40914dc0 <col:9> 'int' lvalue Var 0x1ea40910ba8 'ret' 'int'
|   |           |   `-IntegerLiteral 0x1ea40914de0 <col:15> 'int' 6
|   |           `-ReturnStmt 0x1ea40914ec8 <line:111:9, col:17>
|   |             `-UnaryOperator 0x1ea40914eb0 <col:16, col:17> 'int' prefix '-'
|   |               `-IntegerLiteral 0x1ea40914e88 <col:17> 'int' 2
|   |-BinaryOperator 0x1ea40915050 <line:112:5, col:12> 'unsigned long' '='
|   | |-UnaryOperator 0x1ea40915000 <col:5, col:6> 'unsigned long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ea40914fe8 <col:6> 'unsigned long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ea40914fc8 <col:6> 'unsigned long *' lvalue ParmVar 0x1ea40910860 'val' 'unsigned long *'
|   | `-ImplicitCastExpr 0x1ea40915038 <col:12> 'unsigned long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ea40915018 <col:12> 'unsigned long' lvalue Var 0x1ea40910b10 'value' 'unsigned long'
|   `-ReturnStmt 0x1ea409150a8 <line:113:5, col:12>
|     `-ImplicitCastExpr 0x1ea40915090 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ea40915070 <col:12> 'int' lvalue Var 0x1ea40910ba8 'ret' 'int'
`-FunctionDecl 0x1ea40925410 <line:124:1, line:188:1> line:124:5 UTF8_putc 'int (unsigned char *, int, unsigned long)'
  |-ParmVarDecl 0x1ea409251e0 <col:15, col:30> col:30 used str 'unsigned char *'
  |-ParmVarDecl 0x1ea40925260 <col:35, col:39> col:39 used len 'int'
  |-ParmVarDecl 0x1ea409252e0 <col:44, col:58> col:58 used value 'unsigned long'
  `-CompoundStmt 0x1ea40927398 <line:125:1, line:188:1>
    |-IfStmt 0x1ea40925680 <line:126:5, line:129:17> has_else
    | |-UnaryOperator 0x1ea40925518 <line:126:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1ea40925500 <col:10> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1ea409254e0 <col:10> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    | |-BinaryOperator 0x1ea40925578 <line:127:9, col:15> 'int' '='
    | | |-DeclRefExpr 0x1ea40925530 <col:9> 'int' lvalue ParmVar 0x1ea40925260 'len' 'int'
    | | `-IntegerLiteral 0x1ea40925550 <col:15> 'int' 6
    | `-IfStmt 0x1ea40925668 <line:128:10, line:129:17>
    |   |-BinaryOperator 0x1ea409255f8 <line:128:14, col:21> 'int' '<='
    |   | |-ImplicitCastExpr 0x1ea409255e0 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1ea40925598 <col:14> 'int' lvalue ParmVar 0x1ea40925260 'len' 'int'
    |   | `-IntegerLiteral 0x1ea409255b8 <col:21> 'int' 0
    |   `-ReturnStmt 0x1ea40925658 <line:129:9, col:17>
    |     `-UnaryOperator 0x1ea40925640 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x1ea40925618 <col:17> 'int' 1
    |-IfStmt 0x1ea409258d0 <line:130:5, line:134:5>
    | |-BinaryOperator 0x1ea40925720 <line:130:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1ea409256f0 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1ea409256a8 <col:9> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1ea40925708 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1ea409256c8 <col:17> 'int' 128
    | `-CompoundStmt 0x1ea409258b0 <col:23, line:134:5>
    |   |-IfStmt 0x1ea40925860 <line:131:9, line:132:35>
    |   | |-ImplicitCastExpr 0x1ea40925760 <line:131:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1ea40925740 <col:13> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   | `-BinaryOperator 0x1ea40925840 <line:132:13, col:35> 'unsigned char' '='
    |   |   |-UnaryOperator 0x1ea409257b0 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x1ea40925798 <col:14> 'unsigned char *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1ea40925778 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |   `-CStyleCastExpr 0x1ea40925818 <col:20, col:35> 'unsigned char' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x1ea40925800 <col:35> 'unsigned long' <LValueToRValue> part_of_explicit_cast
    |   |       `-DeclRefExpr 0x1ea409257c8 <col:35> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   `-ReturnStmt 0x1ea409258a0 <line:133:9, col:16>
    |     `-IntegerLiteral 0x1ea40925878 <col:16> 'int' 1
    |-IfStmt 0x1ea40925fb0 <line:135:5, line:143:5>
    | |-BinaryOperator 0x1ea40925960 <line:135:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1ea40925930 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1ea409258e8 <col:9> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1ea40925948 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1ea40925908 <col:17> 'int' 2048
    | `-CompoundStmt 0x1ea40925f88 <col:24, line:143:5>
    |   |-IfStmt 0x1ea40925a50 <line:136:9, line:137:21>
    |   | |-BinaryOperator 0x1ea409259e0 <line:136:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1ea409259c8 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1ea40925980 <col:13> 'int' lvalue ParmVar 0x1ea40925260 'len' 'int'
    |   | | `-IntegerLiteral 0x1ea409259a0 <col:19> 'int' 2
    |   | `-ReturnStmt 0x1ea40925a40 <line:137:13, col:21>
    |   |   `-UnaryOperator 0x1ea40925a28 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1ea40925a00 <col:21> 'int' 1
    |   |-IfStmt 0x1ea40925f38 <line:138:9, line:141:9>
    |   | |-ImplicitCastExpr 0x1ea40925a88 <line:138:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1ea40925a68 <col:13> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1ea40925f18 <col:18, line:141:9>
    |   |   |-BinaryOperator 0x1ea40925cf0 <line:139:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1ea40925ad8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1ea40925ac0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1ea40925aa0 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1ea40925cc8 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1ea40925ca8 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1ea40925c50 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1ea40925bf0 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1ea40925bd0 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1ea40925b70 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1ea40925b50 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1ea40925b38 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1ea40925af0 <col:40> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1ea40925b10 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1ea40925bb8 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1ea40925b90 <col:54> 'int' 31
    |   |   |       `-ImplicitCastExpr 0x1ea40925c38 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1ea40925c10 <col:62> 'int' 192
    |   |   `-BinaryOperator 0x1ea40925ef8 <line:140:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1ea40925d48 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1ea40925d30 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1ea40925d10 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1ea40925ed0 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1ea40925eb0 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1ea40925e58 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1ea40925df8 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1ea40925dd8 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1ea40925da8 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1ea40925d60 <col:37> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1ea40925dc0 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1ea40925d80 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1ea40925e40 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1ea40925e18 <col:53> 'int' 128
    |   `-ReturnStmt 0x1ea40925f78 <line:142:9, col:16>
    |     `-IntegerLiteral 0x1ea40925f50 <col:16> 'int' 2
    |-IfStmt 0x1ea409218d0 <line:144:5, line:153:5>
    | |-BinaryOperator 0x1ea40926040 <line:144:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1ea40926010 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1ea40925fc8 <col:9> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1ea40926028 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1ea40925fe8 <col:17> 'int' 65536
    | `-CompoundStmt 0x1ea409218a8 <col:26, line:153:5>
    |   |-IfStmt 0x1ea40926130 <line:145:9, line:146:21>
    |   | |-BinaryOperator 0x1ea409260c0 <line:145:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1ea409260a8 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1ea40926060 <col:13> 'int' lvalue ParmVar 0x1ea40925260 'len' 'int'
    |   | | `-IntegerLiteral 0x1ea40926080 <col:19> 'int' 3
    |   | `-ReturnStmt 0x1ea40926120 <line:146:13, col:21>
    |   |   `-UnaryOperator 0x1ea40926108 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1ea409260e0 <col:21> 'int' 1
    |   |-IfStmt 0x1ea40921858 <line:147:9, line:151:9>
    |   | |-ImplicitCastExpr 0x1ea40921130 <line:147:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1ea40921110 <col:13> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1ea40921830 <col:18, line:151:9>
    |   |   |-BinaryOperator 0x1ea40921398 <line:148:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1ea40921180 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1ea40921168 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1ea40921148 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1ea40921370 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1ea40921350 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1ea409212f8 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1ea40921298 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1ea40921278 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1ea40921218 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1ea409211f8 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1ea409211e0 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1ea40921198 <col:40> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1ea409211b8 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1ea40921260 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1ea40921238 <col:55> 'int' 15
    |   |   |       `-ImplicitCastExpr 0x1ea409212e0 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1ea409212b8 <col:62> 'int' 224
    |   |   |-BinaryOperator 0x1ea40921608 <line:149:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1ea409213f0 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1ea409213d8 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1ea409213b8 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1ea409215e0 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1ea409215c0 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1ea40921568 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1ea40921508 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1ea409214e8 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1ea40921488 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1ea40921468 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1ea40921450 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1ea40921408 <col:40> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1ea40921428 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1ea409214d0 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1ea409214a8 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1ea40921550 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1ea40921528 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1ea40921810 <line:150:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1ea40921660 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1ea40921648 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1ea40921628 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1ea409217e8 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1ea409217c8 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1ea40921770 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1ea40921710 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1ea409216f0 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1ea409216c0 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1ea40921678 <col:37> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1ea409216d8 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1ea40921698 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1ea40921758 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1ea40921730 <col:53> 'int' 128
    |   `-ReturnStmt 0x1ea40921898 <line:152:9, col:16>
    |     `-IntegerLiteral 0x1ea40921870 <col:16> 'int' 3
    |-IfStmt 0x1ea409244f0 <line:154:5, line:164:5>
    | |-BinaryOperator 0x1ea40921960 <line:154:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1ea40921930 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1ea409218e8 <col:9> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1ea40921948 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1ea40921908 <col:17> 'int' 2097152
    | `-CompoundStmt 0x1ea409244c8 <col:27, line:164:5>
    |   |-IfStmt 0x1ea40921a50 <line:155:9, line:156:21>
    |   | |-BinaryOperator 0x1ea409219e0 <line:155:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1ea409219c8 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1ea40921980 <col:13> 'int' lvalue ParmVar 0x1ea40925260 'len' 'int'
    |   | | `-IntegerLiteral 0x1ea409219a0 <col:19> 'int' 4
    |   | `-ReturnStmt 0x1ea40921a40 <line:156:13, col:21>
    |   |   `-UnaryOperator 0x1ea40921a28 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1ea40921a00 <col:21> 'int' 1
    |   |-IfStmt 0x1ea40924478 <line:157:9, line:162:9>
    |   | |-ImplicitCastExpr 0x1ea40921a88 <line:157:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1ea40921a68 <col:13> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1ea40924448 <col:18, line:162:9>
    |   |   |-BinaryOperator 0x1ea40921cf0 <line:158:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1ea40921ad8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1ea40921ac0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1ea40921aa0 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1ea40921cc8 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1ea40921ca8 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1ea40921c50 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1ea40921bf0 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1ea40921bd0 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1ea40921b70 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1ea40921b50 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1ea40921b38 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1ea40921af0 <col:40> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1ea40921b10 <col:49> 'int' 18
    |   |   |       |   `-ImplicitCastExpr 0x1ea40921bb8 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1ea40921b90 <col:55> 'int' 7
    |   |   |       `-ImplicitCastExpr 0x1ea40921c38 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1ea40921c10 <col:62> 'int' 240
    |   |   |-BinaryOperator 0x1ea40921f60 <line:159:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1ea40921d48 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1ea40921d30 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1ea40921d10 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1ea40921f38 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1ea40921f18 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1ea40921ec0 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1ea40921e60 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1ea40921e40 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1ea40921de0 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1ea40921dc0 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1ea40921da8 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1ea40921d60 <col:40> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1ea40921d80 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1ea40921e28 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1ea40921e00 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1ea40921ea8 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1ea40921e80 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1ea40924220 <line:160:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1ea40921fb8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1ea40921fa0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1ea40921f80 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1ea409241f8 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1ea409241d8 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1ea40924180 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1ea409220d0 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1ea409220b0 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1ea40922050 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1ea40922030 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1ea40922018 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1ea40921fd0 <col:40> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1ea40921ff0 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1ea40922098 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1ea40922070 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1ea40924168 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1ea40924140 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1ea40924428 <line:161:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1ea40924278 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1ea40924260 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1ea40924240 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1ea40924400 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1ea409243e0 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1ea40924388 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1ea40924328 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1ea40924308 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1ea409242d8 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1ea40924290 <col:37> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1ea409242f0 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1ea409242b0 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1ea40924370 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1ea40924348 <col:53> 'int' 128
    |   `-ReturnStmt 0x1ea409244b8 <line:163:9, col:16>
    |     `-IntegerLiteral 0x1ea40924490 <col:16> 'int' 4
    |-IfStmt 0x1ea40922328 <line:165:5, line:176:5>
    | |-BinaryOperator 0x1ea40924580 <line:165:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1ea40924550 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1ea40924508 <col:9> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1ea40924568 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1ea40924528 <col:17> 'int' 67108864
    | `-CompoundStmt 0x1ea40922300 <col:28, line:176:5>
    |   |-IfStmt 0x1ea40924670 <line:166:9, line:167:21>
    |   | |-BinaryOperator 0x1ea40924600 <line:166:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1ea409245e8 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1ea409245a0 <col:13> 'int' lvalue ParmVar 0x1ea40925260 'len' 'int'
    |   | | `-IntegerLiteral 0x1ea409245c0 <col:19> 'int' 5
    |   | `-ReturnStmt 0x1ea40924660 <line:167:13, col:21>
    |   |   `-UnaryOperator 0x1ea40924648 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1ea40924620 <col:21> 'int' 1
    |   |-IfStmt 0x1ea409222b0 <line:168:9, line:174:9>
    |   | |-ImplicitCastExpr 0x1ea409246a8 <line:168:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1ea40924688 <col:13> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1ea40922278 <col:18, line:174:9>
    |   |   |-BinaryOperator 0x1ea40924910 <line:169:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1ea409246f8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1ea409246e0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1ea409246c0 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1ea409248e8 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1ea409248c8 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1ea40924870 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1ea40924810 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1ea409247f0 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1ea40924790 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1ea40924770 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1ea40924758 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1ea40924710 <col:40> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1ea40924730 <col:49> 'int' 24
    |   |   |       |   `-ImplicitCastExpr 0x1ea409247d8 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1ea409247b0 <col:55> 'int' 3
    |   |   |       `-ImplicitCastExpr 0x1ea40924858 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1ea40924830 <col:62> 'int' 248
    |   |   |-BinaryOperator 0x1ea40924b80 <line:170:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1ea40924968 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1ea40924950 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1ea40924930 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1ea40924b58 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1ea40924b38 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1ea40924ae0 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1ea40924a80 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1ea40924a60 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1ea40924a00 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1ea409249e0 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1ea409249c8 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1ea40924980 <col:40> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1ea409249a0 <col:49> 'int' 18
    |   |   |       |   `-ImplicitCastExpr 0x1ea40924a48 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1ea40924a20 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1ea40924ac8 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1ea40924aa0 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1ea40924df0 <line:171:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1ea40924bd8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1ea40924bc0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1ea40924ba0 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1ea40924dc8 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1ea40924da8 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1ea40924d50 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1ea40924cf0 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1ea40924cd0 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1ea40924c70 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1ea40924c50 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1ea40924c38 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1ea40924bf0 <col:40> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1ea40924c10 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1ea40924cb8 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1ea40924c90 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1ea40924d38 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1ea40924d10 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1ea40925060 <line:172:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1ea40924e48 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1ea40924e30 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1ea40924e10 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1ea40925038 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1ea40925018 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1ea40924fc0 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1ea40924f60 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1ea40924f40 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1ea40924ee0 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1ea40924ec0 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1ea40924ea8 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1ea40924e60 <col:40> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1ea40924e80 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1ea40924f28 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1ea40924f00 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1ea40924fa8 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1ea40924f80 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1ea40922258 <line:173:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1ea409250b8 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1ea409250a0 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1ea40925080 <col:14> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1ea40922230 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1ea40922210 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1ea409221b8 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1ea40922158 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1ea40922138 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1ea40925118 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1ea409250d0 <col:37> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1ea40922120 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1ea409250f0 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1ea409221a0 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1ea40922178 <col:53> 'int' 128
    |   `-ReturnStmt 0x1ea409222f0 <line:175:9, col:16>
    |     `-IntegerLiteral 0x1ea409222c8 <col:16> 'int' 5
    |-IfStmt 0x1ea40922410 <line:177:5, line:178:17>
    | |-BinaryOperator 0x1ea409223a0 <line:177:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1ea40922388 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1ea40922340 <col:9> 'int' lvalue ParmVar 0x1ea40925260 'len' 'int'
    | | `-IntegerLiteral 0x1ea40922360 <col:15> 'int' 6
    | `-ReturnStmt 0x1ea40922400 <line:178:9, col:17>
    |   `-UnaryOperator 0x1ea409223e8 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x1ea409223c0 <col:17> 'int' 1
    |-IfStmt 0x1ea40927348 <line:179:5, line:186:5>
    | |-ImplicitCastExpr 0x1ea40922448 <line:179:9> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x1ea40922428 <col:9> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    | `-CompoundStmt 0x1ea40927308 <col:14, line:186:5>
    |   |-BinaryOperator 0x1ea409226b0 <line:180:9, col:62> 'unsigned char' '='
    |   | |-UnaryOperator 0x1ea40922498 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1ea40922480 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1ea40922460 <col:10> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1ea40922688 <col:18, col:62> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1ea40922668 <col:33, col:62> 'unsigned long'
    |   |     `-BinaryOperator 0x1ea40922610 <col:34, col:58> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1ea409225b0 <col:34, col:54> 'unsigned long'
    |   |       | `-BinaryOperator 0x1ea40922590 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1ea40922530 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1ea40922510 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1ea409224f8 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1ea409224b0 <col:36> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1ea409224d0 <col:45> 'int' 30
    |   |       |   `-ImplicitCastExpr 0x1ea40922578 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1ea40922550 <col:51> 'int' 1
    |   |       `-ImplicitCastExpr 0x1ea409225f8 <col:58> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1ea409225d0 <col:58> 'int' 252
    |   |-BinaryOperator 0x1ea40922920 <line:181:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1ea40922708 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1ea409226f0 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1ea409226d0 <col:10> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1ea409228f8 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1ea409228d8 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1ea40922880 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1ea40922820 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1ea40922800 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1ea409227a0 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1ea40922780 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1ea40922768 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1ea40922720 <col:36> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1ea40922740 <col:45> 'int' 24
    |   |       |   `-ImplicitCastExpr 0x1ea409227e8 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1ea409227c0 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1ea40922868 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1ea40922840 <col:59> 'int' 128
    |   |-BinaryOperator 0x1ea40922b90 <line:182:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1ea40922978 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1ea40922960 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1ea40922940 <col:10> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1ea40922b68 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1ea40922b48 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1ea40922af0 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1ea40922a90 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1ea40922a70 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1ea40922a10 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1ea409229f0 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1ea409229d8 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1ea40922990 <col:36> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1ea409229b0 <col:45> 'int' 18
    |   |       |   `-ImplicitCastExpr 0x1ea40922a58 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1ea40922a30 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1ea40922ad8 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1ea40922ab0 <col:59> 'int' 128
    |   |-BinaryOperator 0x1ea40922e00 <line:183:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1ea40922be8 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1ea40922bd0 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1ea40922bb0 <col:10> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1ea40922dd8 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1ea40922db8 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1ea40922d60 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1ea40922d00 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1ea40922ce0 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1ea40922c80 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1ea40922c60 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1ea40922c48 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1ea40922c00 <col:36> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1ea40922c20 <col:45> 'int' 12
    |   |       |   `-ImplicitCastExpr 0x1ea40922cc8 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1ea40922ca0 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1ea40922d48 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1ea40922d20 <col:59> 'int' 128
    |   |-BinaryOperator 0x1ea40923070 <line:184:9, col:62> 'unsigned char' '='
    |   | |-UnaryOperator 0x1ea40922e58 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1ea40922e40 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1ea40922e20 <col:10> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1ea40923048 <col:18, col:62> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1ea40923028 <col:33, col:62> 'unsigned long'
    |   |     `-BinaryOperator 0x1ea40922fd0 <col:34, col:58> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1ea40922f70 <col:34, col:54> 'unsigned long'
    |   |       | `-BinaryOperator 0x1ea40922f50 <col:35, col:50> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1ea40922ef0 <col:35, col:46> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1ea40922ed0 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1ea40922eb8 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1ea40922e70 <col:36> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1ea40922e90 <col:45> 'int' 6
    |   |       |   `-ImplicitCastExpr 0x1ea40922f38 <col:50> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1ea40922f10 <col:50> 'int' 63
    |   |       `-ImplicitCastExpr 0x1ea40922fb8 <col:58> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1ea40922f90 <col:58> 'int' 128
    |   `-BinaryOperator 0x1ea409272e8 <line:185:9, col:53> 'unsigned char' '='
    |     |-UnaryOperator 0x1ea409230c8 <col:9, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x1ea409230b0 <col:10> 'unsigned char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1ea40923090 <col:10> 'unsigned char *' lvalue ParmVar 0x1ea409251e0 'str' 'unsigned char *'
    |     `-CStyleCastExpr 0x1ea409272c0 <col:16, col:53> 'unsigned char' <IntegralCast>
    |       `-ParenExpr 0x1ea409272a0 <col:31, col:53> 'unsigned long'
    |         `-BinaryOperator 0x1ea40927248 <col:32, col:49> 'unsigned long' '|'
    |           |-ParenExpr 0x1ea409271e8 <col:32, col:45> 'unsigned long'
    |           | `-BinaryOperator 0x1ea409271c8 <col:33, col:41> 'unsigned long' '&'
    |           |   |-ImplicitCastExpr 0x1ea40927198 <col:33> 'unsigned long' <LValueToRValue>
    |           |   | `-DeclRefExpr 0x1ea409230e0 <col:33> 'unsigned long' lvalue ParmVar 0x1ea409252e0 'value' 'unsigned long'
    |           |   `-ImplicitCastExpr 0x1ea409271b0 <col:41> 'unsigned long' <IntegralCast>
    |           |     `-IntegerLiteral 0x1ea40927170 <col:41> 'int' 63
    |           `-ImplicitCastExpr 0x1ea40927230 <col:49> 'unsigned long' <IntegralCast>
    |             `-IntegerLiteral 0x1ea40927208 <col:49> 'int' 128
    `-ReturnStmt 0x1ea40927388 <line:187:5, col:12>
      `-IntegerLiteral 0x1ea40927360 <col:12> 'int' 6
