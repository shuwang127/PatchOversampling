TranslationUnitDecl 0x1c4563d4158 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1c4563d49f0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1c4563d46f0 '__int128'
|-TypedefDecl 0x1c4563d4a60 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1c4563d4710 'unsigned __int128'
|-TypedefDecl 0x1c4563d4d98 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1c4563d4b50 'struct __NSConstantString_tag'
|   `-Record 0x1c4563d4ab8 '__NSConstantString_tag'
|-TypedefDecl 0x1c4563d4e08 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1c4563d4330 'unsigned long long'
|-TypedefDecl 0x1c4563d4ea0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1c4563d4e60 'char *'
|   `-BuiltinType 0x1c4563d41f0 'char'
|-TypedefDecl 0x1c4563d4f10 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1c4563d4e60 'char *'
|   `-BuiltinType 0x1c4563d41f0 'char'
|-TypedefDecl 0x1c4563d4fd0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1c4563d4330 'unsigned long long'
|-TypedefDecl 0x1c4563d5040 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1c4563d4e60 'char *'
|   `-BuiltinType 0x1c4563d41f0 'char'
|-FunctionDecl 0x1c457f02450 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c457f024f0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1c457f02560 <col:21> Implicit
|-FunctionDecl 0x1c457f025b8 prev 0x1c457f02450 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c457f022e0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1c457f026a8 <col:21> Inherited Implicit
|-TypedefDecl 0x1c457f026e8 prev 0x1c4563d4e08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1c4563d4330 'unsigned long long'
|-TypedefDecl 0x1c457f02790 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1c457f02760 'size_t' sugar
|   |-Typedef 0x1c457f026e8 'size_t'
|   `-BuiltinType 0x1c4563d4330 'unsigned long long'
|-TypedefDecl 0x1c457f02800 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1c4563d4290 'long long'
|-TypedefDecl 0x1c457f02870 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1c4563d4290 'long long'
|-TypedefDecl 0x1c457f028e0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1c4563d42d0 'unsigned short'
|-TypedefDecl 0x1c457f02950 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1c4563d42d0 'unsigned short'
|-TypedefDecl 0x1c457f029c0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1c4563d42d0 'unsigned short'
|-TypedefDecl 0x1c457f02a30 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1c4563d4250 'int'
|-TypedefDecl 0x1c457f02aa0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1c4563d4270 'long'
|-TypedefDecl 0x1c457f02b10 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1c4563d4290 'long long'
|-TypedefDecl 0x1c457f02ba0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1c457f02b70 '__time64_t' sugar
|   |-Typedef 0x1c457f02b10 '__time64_t'
|   `-BuiltinType 0x1c4563d4290 'long long'
|-FunctionDecl 0x1c457f02d18 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1c457f02f38 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1c457f3a0a0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1c457f03078 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1c457f030f0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1c457f03168 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1c457f031e8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1c457f39e40 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1c457f3a180 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1c457f3a240 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1c457f3a3b0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1c457f3a360 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1c457f3a300 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1c457f3a220 'struct threadlocaleinfostruct'
|       `-Record 0x1c457f3ee90 'threadlocaleinfostruct'
|-TypedefDecl 0x1c457f3a4c0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1c457f3a470 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1c457f3a410 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1c457f3a2e0 'struct threadmbcinfostruct'
|       `-Record 0x1c457f3a240 'threadmbcinfostruct'
|-RecordDecl 0x1c457f3a518 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1c457f3a5d0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1c457f3a690 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c457f3a720 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1c457f3a7b0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1c457f3a868 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1c457f3a810 'struct localeinfo_struct' sugar
|   `-RecordType 0x1c457f3a670 'struct localeinfo_struct'
|     `-Record 0x1c457f3a5d0 'localeinfo_struct'
|-TypedefDecl 0x1c457f3a940 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1c457f3a8f0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1c457f3a810 'struct localeinfo_struct' sugar
|     `-RecordType 0x1c457f3a670 'struct localeinfo_struct'
|       `-Record 0x1c457f3a5d0 'localeinfo_struct'
|-RecordDecl 0x1c457f3a9b8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1c457f3aa70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c457f3aae8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1c457f3aba8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1c457f3ac40 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1c457f3acb0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1c457f3ad68 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1c457f3ad10 'struct localerefcount' sugar
|   `-RecordType 0x1c457f3aa50 'struct localerefcount'
|     `-Record 0x1c457f3a9b8 'localerefcount'
|-RecordDecl 0x1c457f3ee90 prev 0x1c457f3a180 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1c457f3ef10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c457f3ef88 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1c457f3eff8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1c457f3f068 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1c457f3f0d8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1c457f3f298 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1c457f3f308 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1c457f3f378 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1c457f3f3e8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1c457f3f458 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1c457f3f4c8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1c457f3f520 parent 0x1c4563d4158 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1c457f3f6b0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1c457f3f720 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1c457f3f790 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1c457f3f800 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1c457f3f8a0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1c457f3f910 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1c457f3fa20 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1c457f3fb58 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1c457f3fc08 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1c457f3fbb0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1c457f3a220 'struct threadlocaleinfostruct'
|     `-Record 0x1c457f3ee90 'threadlocaleinfostruct'
|-RecordDecl 0x1c457f3fca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1c457f3fd60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c457f3fdd8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1c457f40eb0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1c457f40f20 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1c457f40f90 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1c457f41000 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1c457f41070 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1c457f410e0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1c457f41150 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1c457f41200 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1c457f411b0 'struct _iobuf' sugar
|   `-RecordType 0x1c457f3fd40 'struct _iobuf'
|     `-Record 0x1c457f3fca0 '_iobuf'
|-FunctionDecl 0x1c457f41438 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1c457f41508 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1c4563d4290 'long long'
|-FunctionDecl 0x1c457f416e8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f41570 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1c457f419e0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c457f417c0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1c457f41838 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1c457f41d90 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1c457f41ac0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1c457f41b40 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1c457f41bc0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1c457f4d0e0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c457f4cf70 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1c457f4d310 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1c457f4d1d0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1c457f4d4c0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f4d3e0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1c457f4d6b0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c457f4d9a8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1c457f4d780 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1c457f4d800 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1c457f4db60 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f4da80 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1c457f4dd10 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f4dc30 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1c457f4dec0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f4dde0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1c457f49038 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f48f58 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1c457f491c8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c457f49530 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1c457f49290 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1c457f49388 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1c457f498e8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1c457f49610 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1c457f49690 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1c457f49708 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1c457f49aa8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f499c8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1c457f49d70 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1c457f49b80 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1c457f49c00 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1c457f4df80 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c457f4e378 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1c457f4e418 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1c457f4e480 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1c457f4e4f8 prev 0x1c457f4e378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1c457f4e150 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1c457f4e1d0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1c457f4e5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f4ea20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1c457f4e750 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1c457f4e7d0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1c457f4e850 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1c457f4ed40 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1c457f4ede0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1c457f4ee48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c457f4eec0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1c457f4ef90 prev 0x1c457f4ed40 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c457f4eb00 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c457f4eb80 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1c457f4f088 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1c457f4f250 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c457f4f0d0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1c457f4f150 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1c457f4f4a8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c457f4f330 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1c457f4f3a8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1c457f4f6d8 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c457f4f588 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1c457f4f9d0 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1c457f4f7b0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1c457f4f828 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1c457f4fe68 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1c457f4ff08 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1c457f50fb0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c457f51018 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1c457f51080 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1c457f51108 prev 0x1c457f4fe68 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1c457f4fab0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1c457f4fb28 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f4fba0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457f4fc18 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1c457f51610 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c457f511f8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1c457f51270 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f512e8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f51360 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457f513d8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1c457f51ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1c457f51800 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1c457f51880 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1c457f518f8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1c457f51b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f49fe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1c457f51cd0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1c457f51d50 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1c457f51dd0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1c457f51e48 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1c457f4a390 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c457f4a430 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1c457f4a498 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c457f4a510 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1c457f4a578 prev 0x1c457f4a390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1c457f4a1c8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1c457f4a248 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1c457f4a758 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1c457f4a628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f4ab98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f4a898 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1c457f4a918 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1c457f4a9b0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c457f4ac50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f4ffa0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c457f4ad90 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1c457f4ae10 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1c457f50290 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f50078 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c457f500f8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c457f50170 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f505f0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1c457f50370 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1c457f50448 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1c457f509a8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1c457f506c8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1c457f50748 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1c457f507c8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1c457f50c08 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1c457f50a88 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1c457f52008 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1c457f50cd8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c457f50d58 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1c457f50dd8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1c457f52268 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1c457f520e8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1c457f52728 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1c457f527c8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1c457f52830 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c457f52898 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1c457f52900 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1c457f52988 prev 0x1c457f52728 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1c457f52370 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1c457f523e8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f52460 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457f524d8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1c457f52b50 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f52a70 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1c457f52ce0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c457f52e68 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c457f4b110 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1c457f52f38 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1c457f4af60 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1c457f4b438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c457f4b2f0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1c457f4b4e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f4b700 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f4b620 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1c457f4b920 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1c457f4b7d8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1c457f4bad0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f4b9f0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1c457f4bd20 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1c457f4bba8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1c457f4bc28 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1c457f52fd0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1c457f53070 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c457f530e0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1c457f53148 prev 0x1c457f52fd0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1c457f4be00 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1c457f53238 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1c457f53368 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c457f53288 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1c457f535b8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c457f53440 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1c457f534b8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1c457f53778 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c457f53698 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1c457f53998 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c457f53850 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1c457f53be8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c457f53a70 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1c457f53ae8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1c457f53da8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c457f53cc8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1c457fa2c60 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1c457f53e80 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1c457f53f00 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1c457fa2e20 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c457fa2d40 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1c457fa30b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1c457fa2fd0 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1c457fa3158 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1c457fa3350 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c457fa3278 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1c457fa34e0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c457fa3788 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c457fa3828 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c457fa3898 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1c457fa3900 prev 0x1c457fa3788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1c457fa3670 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1c457fa3ad8 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1c457fa39a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fa1e90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fa1c58 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa1cd0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c457fa1f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fa2168 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c457fa2088 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1c457fa23b8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fa2240 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1c457fa22b8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fa2778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1c457fa2550 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1c457fa25d0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1c457fa2828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fa2a50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c457fa2970 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1c457f9ec98 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1c457f9eb50 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1c457f9ee80 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1c457f9f2d0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1c457f9ef48 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c457f9efc8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1c457f9f048 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1c457f9f0c0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1c457f9f750 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c457f9f3c0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457f9f438 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f9f4b0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457f9f530 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1c457fa4bb0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c457f9f840 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457f9f8b8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457f9f938 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1c457fa4d78 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c457fa4c98 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1c457fa5150 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1c457fa51f0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c457fa5258 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1c457fa52d0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1c457fa5338 prev 0x1c457fa5150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1c457fa4f10 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1c457fa4f90 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1c457fa5518 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1c457fa53e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fa5908 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fa5628 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1c457fa56a8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa5720 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c457fa59c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fa3ca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1c457fa5b08 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1c457fa3ba0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1c457fa3f98 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fa3d80 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1c457fa3e00 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1c457fa3e78 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fa4428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c457fa4140 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1c457fa41b8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fa4238 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1c457fa44e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fa4ab0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fa4720 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1c457fa4798 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fa4818 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa4890 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c457f9db40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f9dea0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c457f9dc88 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1c457f9dd00 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457f9dd80 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1c457f9e238 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f9df88 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1c457f9e000 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f9e080 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1c457f9e0f8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f9e498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1c457f9e538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f9e7f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1c457f9e680 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1c457fa0b70 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1c457f9e8c8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1c457f9e940 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1c457fa0df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1c457fa0d10 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1c457fa0e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fa1158 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c457fa0fe0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1c457fa1058 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1c457fa1570 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c457fa1610 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1c457fa1678 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c457fa16e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c457fa1760 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1c457fa17c8 prev 0x1c457fa1570 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c457fa1230 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1c457fa12b0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa1328 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c457fa18c8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1c457fa5bc0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c457fa5c60 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1c457fa5cc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c457fa5d30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c457fa5db0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1c457fa5e18 prev 0x1c457fa5bc0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c457fa1910 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1c457fa1990 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa1a08 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c457fa5f18 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1c457fa6178 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c457fa5f60 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c457fa5fe0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1c457fa6058 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fa6470 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c457fa6258 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c457fa62d8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1c457fa6350 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fa67b8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c457fa6858 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c457fa68c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c457fa6938 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1c457fa69a0 prev 0x1c457fa67b8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c457fa6558 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa65d0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c457fa6a98 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1c457fa6d08 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c457fa6da8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c457fa6e10 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c457fa6e88 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1c457fa6ef0 prev 0x1c457fa6d08 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c457fa6ae8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa6bd0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c457fa6fe8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1c457fa71b0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c457fa7038 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1c457fa70b0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fa7408 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c457fa7290 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1c457fa7308 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fa7968 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c457fa7a08 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c457fa7a70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c457fa7ad8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c457fa7b40 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c457f9fb60 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1c457f9fbc8 prev 0x1c457fa7968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c457fa75a8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fa7620 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fa76a0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa7718 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1c457f9fdb8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1c457f9fc88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fa0228 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c457f9fe08 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457f9fe80 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f9fef8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f9ff78 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1c457f9fff0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fa0668 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c457fa0320 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fa0398 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fa0410 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fa0490 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1c457fa0508 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fa0a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c457fa0820 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1c457fa0898 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fa0918 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1c457fa0af0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fae0b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c457fade00 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1c457fade78 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fadef8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1c457fadf70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1c457fae170 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fae568 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c457fae2b8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fae330 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fae3b0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1c457fae428 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fae928 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1c457fae658 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1c457fae6d8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1c457fae750 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fa7c80 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1c457fa7d20 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c457fa7d88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1c457fa7e00 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1c457fa7e68 prev 0x1c457fa7c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1c457faead0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1c457faeb50 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1c457fa8048 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1c457fa7f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fa8470 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c457fa8510 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1c457fa8578 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c457fa85e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c457fa8660 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1c457fa86c8 prev 0x1c457fa8470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1c457fa8158 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1c457fa81d8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa8250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1c457fa88b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1c457fa8780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457faec50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1c457faecf0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c457faed58 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1c457faedc0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1c457faee40 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1c457faeea8 prev 0x1c457faec50 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1c457fa8900 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1c457fa8980 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa89f8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1c457faefa8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1c457faf170 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c457faeff8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1c457faf070 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457faf468 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c457faf250 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457faf2c8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457faf348 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1c457faf800 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c457faf550 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457faf5c8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457faf648 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1c457faf6c0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fafa68 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1c457faf8e8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1c457faf968 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1c457faac10 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c457fafb48 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1c457faaf00 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1c457faace8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1c457faad60 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457faade0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1c457fab1f8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1c457faafe0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c457fab060 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1c457fab0d8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fab458 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c457fab2e0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1c457fab358 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fab7e8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1c457fab538 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1c457fab5b0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fab630 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1c457fab6a8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fab9b8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1c457fab8d8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1c457fafc60 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1c457faba90 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1c457fabb08 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fafe20 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c457fafd40 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1c457faffb0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c457fb01f8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fb0080 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1c457fb00f8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fb0450 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fb02d8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c457fb0350 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fb06a8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fb0530 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c457fb05a8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fb0a58 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fb0788 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1c457fb0800 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fb0878 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fa8d10 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fb0b40 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c457fb0bb8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fa8bf0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fa9008 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fa8df8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa8e70 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fa8ee8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fa9300 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fa90e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c457fa9168 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1c457fa91e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fa95f8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fa93e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c457fa9460 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c457fa94d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fa98f0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fa96d8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c457fa9758 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1c457fa97d0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fb0dd0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fa99d0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c457fa9a50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1c457fa9ac8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fa9b40 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb1168 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fb0eb8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c457fb0f38 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1c457fb0fb0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fb1028 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb1500 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fb1250 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c457fb12d0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1c457fb1348 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fb13c0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb1998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fb16b0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fb1730 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1c457fb17a8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c457fb1a50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fb1f90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fb1b98 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fb1c80 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fb1d00 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1c457fb1d78 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fb2330 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fb2080 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fb20f8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fb2178 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1c457fb21f0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fb2880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fb2520 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fb25a0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1c457fb2618 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c457fb2690 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c457fb2940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fb2ec8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fb2a88 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fb2b00 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fb2b80 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1c457fb2bf8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fb2c90 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb3308 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fb2fc0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fb3038 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fb30b8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1c457fb3130 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fb31a8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb3578 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fb3400 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1c457fb3478 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fb37d0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fb3658 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1c457fb36d0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fb3ac0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fb38b0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1c457fb3928 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fb39a0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fabd50 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fb3ba8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1c457fb3c20 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fabc30 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fac1a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fabef8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fabf70 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fabff0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1c457fac068 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c457fac268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fac660 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fac3b0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fac428 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fac4a8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1c457fac520 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457facc30 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457fac750 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fac7c8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fac840 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fac8c0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1c457fac938 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457fad170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457face28 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457facea0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457facf20 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1c457facf98 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c457fad010 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c457fad238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fad6b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fad388 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fad400 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fad480 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1c457fad4f8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fad570 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb9d60 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457fad7b0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1c457fad828 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fad8a0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fad920 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1c457fad998 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457fada10 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fba120 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1c457fb9e58 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c457fb9ed0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb9f50 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1c457fba390 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c457fba220 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1c457fba5a8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1c457fba888 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c457fba670 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c457fba6e8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1c457fbaad0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1c457fba960 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1c457fbad10 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c457fbaba0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1c457fbae98 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1c457fbb0d0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c457fbaf60 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c457fbafd8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1c457fbb280 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1c457fbb1a8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1c457fbb528 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1c457fbb350 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c457fbb3c8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1c457fbb8d0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1c457fbb600 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c457fbb680 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1c457fbb6f8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1c457fbbbd0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c457fbb9b0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c457fbba28 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c457fb5e78 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1c457fbbca8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1c457fb5cd0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c457fb6180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c457fb6010 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1c457fb6228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fb64e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c457fb6368 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1c457fb67f0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457fb65b8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1c457fb6630 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457fb6a40 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457fb68c8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1c457fb6940 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457fb4cb0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c457fb6b18 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457fb4e60 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c457fb4d80 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457fb5010 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c457fb4f30 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457fb53a8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb50e0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1c457fb5158 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb51d0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb5698 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb5488 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1c457fb5500 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb5578 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb5988 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb5778 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c457fb57f0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb5868 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb3ca0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb5a68 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1c457fb5ae0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb5b58 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb3fa0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb3d80 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb3df8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb41f0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb4078 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb40f0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb4440 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb42c8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb4340 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb4690 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb4518 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb4590 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb4a48 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457fb4768 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c457fb47e0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457fb4858 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457fbbf30 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb4b28 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1c457fb4ba0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fb4c18 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fbbd20 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fbc2e8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fbc018 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c457fbc090 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fbc108 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fbc5d8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fbc3c8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1c457fbc440 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fbc4b8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fbc8c8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457fbc6b8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457fbc730 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457fbc7a8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457fbcc50 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fbc9a8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457fbca20 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fbca98 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fbcb10 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb8090 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457fb7d08 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457fb7d80 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fb7df8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457fb7e70 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457fb8598 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb8178 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457fb81f0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fb8268 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fb82e0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb8358 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb8958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457fb8748 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c457fb87c0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fb8838 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c457fb8a10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fb8f20 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb8c10 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c457fb8cf0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457fb8d68 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457fb8de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1c457fb8fe0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457fb9298 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457fb9120 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1c457fb9198 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457fb9450 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c457fb9370 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457fb9730 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb9520 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c457fb9598 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb9610 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457fb9988 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457fb9810 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457fb9888 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f82820 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457fb9a60 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457fb9ad8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457fb9b50 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457f82ba8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457f82900 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457f82978 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f829f0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f82a68 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f82d70 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c457f82c90 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457f82fb8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457f82e40 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f82eb8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f832c0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f83090 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f83108 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f83510 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f83398 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f83410 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f83760 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f835e8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f83660 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f81b08 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f81838 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f818b0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f81928 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f81df8 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f81be8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f81c60 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f81cd8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f820e8 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f81ed8 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f81f50 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f81fc8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f824a8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f821c8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1c457f82240 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f822b8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f7b7b0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f82588 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c457f82600 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f82678 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f7baa0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f7b890 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c457f7b908 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f7b980 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f7bef0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f7bb80 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c457f7bbf8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f7bc70 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f7bce8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f7c280 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f7bfd8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1c457f7c050 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f7c0c8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f7c140 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f7c610 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f7c368 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1c457f7c3e0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f7c458 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f7c4d0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f80b10 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f7c6f8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457f80800 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f80878 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f808f0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f80ea0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f80bf8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457f80c70 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f80ce8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f80d60 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f81230 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f80f88 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457f81000 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f81078 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f810f0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f81738 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f81318 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457f81390 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f81408 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f81480 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f814f8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f7fb58 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f7f818 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457f7f890 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f7f908 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f7f980 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f7f9f8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f7ff88 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f7fc48 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457f7fcc0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f7fd38 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f7fdb0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f7fe28 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f801f0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f80078 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f800f0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f80440 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f802c8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f80340 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f80728 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f80518 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f80590 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f80608 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f83bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f83920 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457f83998 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f83a10 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f83a88 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c457f83c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f841f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f83dd0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457f83e48 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f83ec0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f83f38 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f83fb0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f84730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f843f0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457f84468 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f844e0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f84558 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c457f845d0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1c457f84840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f84e50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f84988 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c457f84a00 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f84a78 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f84af0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f84b68 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f84be0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f85350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457f85118 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c457f85190 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1c457f85400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c457f85518 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c457f7da38 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457f857d0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c457f7d7e0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f7d858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1c457f7daf0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c457f7dc08 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c457f7e1a8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f7dec8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c457f7df40 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f7dfb8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1c457f7e260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c457f7e380 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c457f85a60 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f7e640 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c457f7e6b8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f7e730 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c457f85850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1c457f85b20 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1c457f85c40 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1c457f85f48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1c457f85d68 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c457f85de0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f85e58 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1c457f88b20 <line:37:1, line:44:1>
|   |-DeclStmt 0x1c457f86090 <line:38:5, col:21>
|   | `-VarDecl 0x1c457f86028 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1c457f86128 <line:39:5, col:13>
|   | `-VarDecl 0x1c457f860c0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1c457f86480 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1c457f86468 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c457f86380 <col:34> '<builtin fn type>' Function 0x1c457f86218 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1c457f863b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1c457f86028 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1c457f863f0 <col:29> 'const wchar_t *' lvalue ParmVar 0x1c457f85e58 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1c457f86740 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1c457f864b0 <col:5> 'int' lvalue Var 0x1c457f860c0 '_Ret' 'int'
|   | `-CallExpr 0x1c457f86680 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1c457f86668 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c457f864e8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c457f81738 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1c457f866c8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c457f86508 <col:27> 'wchar_t *' lvalue ParmVar 0x1c457f85d68 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1c457f866e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c457f86528 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c457f85de0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1c457f866f8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c457f86548 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c457f85e58 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1c457f86710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1c457f865d0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1c457f865a8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1c457f86568 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1c457f86728 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c457f865f0 <col:59> 'va_list':'char *' lvalue Var 0x1c457f86028 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1c457f88ab0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1c457f88a98 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c457f889e8 <col:34> '<builtin fn type>' Function 0x1c457f88880 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1c457f88a20 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1c457f86028 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1c457f88b10 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1c457f88af8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c457f88ad8 <col:12> 'int' lvalue Var 0x1c457f860c0 '_Ret' 'int'
|-FunctionDecl 0x1c457f86218 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1c457f862b8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1c457f86328 <col:34> Implicit
|-FunctionDecl 0x1c457f88880 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1c457f88920 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1c457f88990 <col:34> Implicit
|-FunctionDecl 0x1c457f88e18 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1c457f88b70 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c457f88be8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f88c60 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f88cd8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1c457f89100 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1c457f890f0 <line:51:5, col:62>
|     `-CallExpr 0x1c457f89030 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1c457f89018 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c457f88ef0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c457f81738 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1c457f89078 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c457f88f10 <col:27> 'wchar_t *' lvalue ParmVar 0x1c457f88b70 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1c457f89090 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c457f88f30 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c457f88be8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1c457f890a8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c457f88f50 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c457f88c60 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1c457f890c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1c457f88fd8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1c457f88fb0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1c457f88f70 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1c457f890d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1c457f88ff8 <col:59> 'va_list':'char *' lvalue ParmVar 0x1c457f88cd8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1c457f893a0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1c457f89128 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c457f891a0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f89218 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f89290 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1c457f8a948 <line:61:1, line:68:1>
|   |-DeclStmt 0x1c457f894f0 <line:62:5, col:21>
|   | `-VarDecl 0x1c457f89488 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1c457f89588 <line:63:5, col:13>
|   | `-VarDecl 0x1c457f89520 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1c457f89630 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1c457f89618 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c457f895a0 <col:34> '<builtin fn type>' Function 0x1c457f86218 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1c457f895c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1c457f89488 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1c457f895f8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c457f89290 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1c457f89830 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1c457f89660 <col:5> 'int' lvalue Var 0x1c457f89520 '_Ret' 'int'
|   | `-CallExpr 0x1c457f89770 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1c457f89758 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1c457f89698 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c457f81738 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1c457f897b8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c457f896b8 <col:27> 'wchar_t *' lvalue ParmVar 0x1c457f89128 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1c457f897d0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c457f896d8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c457f891a0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1c457f897e8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c457f896f8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c457f89218 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1c457f89800 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c457f89718 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c457f89290 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1c457f89818 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1c457f89738 <col:64> 'va_list':'char *' lvalue Var 0x1c457f89488 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1c457f8a8d8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1c457f8a8c0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1c457f89850 <col:34> '<builtin fn type>' Function 0x1c457f88880 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1c457f8a8a0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1c457f89488 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1c457f8a938 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1c457f8a920 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c457f8a900 <col:12> 'int' lvalue Var 0x1c457f89520 '_Ret' 'int'
|-FunctionDecl 0x1c457f8acd8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1c457f8a998 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1c457f8aa10 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f8aa88 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f8ab00 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1c457f8ab78 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1c457f8af60 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1c457f8af50 <line:75:5, col:67>
|     `-CallExpr 0x1c457f8ae90 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1c457f8ae78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1c457f8adb8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1c457f81738 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1c457f8aed8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c457f8add8 <col:27> 'wchar_t *' lvalue ParmVar 0x1c457f8a998 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1c457f8aef0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1c457f8adf8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c457f8aa10 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1c457f8af08 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c457f8ae18 <col:44> 'const wchar_t *' lvalue ParmVar 0x1c457f8aa88 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1c457f8af20 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1c457f8ae38 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1c457f8ab00 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1c457f8af38 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1c457f8ae58 <col:64> 'va_list':'char *' lvalue ParmVar 0x1c457f8ab78 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1c457f8b1a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c457f8af88 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1c457f8b000 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1c457f8b3f8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1c457f8b280 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f8b2f8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f8b6e0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1c457f8b4d0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f8b548 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1c457f8b5c0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1c457f8ba28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457f8b8b0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1c457f8b928 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c457f8bad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f8bee8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f8bcd8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1c457f8bd50 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f8bdc8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c457f8bfa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f8c258 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457f8c0e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1c457f8c158 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457f8c540 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f8c330 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1c457f8c3a8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f8c420 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f8c930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457f8c6e0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c457f8c758 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c457f8c9e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f8ceb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f8cbe0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c457f8cc58 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f8ccd0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c457f8cf70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f8d228 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457f8d0b0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1c457f8d128 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457f8d510 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f8d300 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c457f8d378 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f8d3f0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f89978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457f8d6b0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c457f8d728 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f8d7a0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c457f89a30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f89fb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f89c30 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c457f89ca8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f89d20 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f89d98 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c457f8a070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f8a3c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457f8a1b0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c457f8a228 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457f8a2a0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457f8a748 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f8a4a0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c457f8a518 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f8a590 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f8a608 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f8da80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1c457f8d9a0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1c457f8db28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f8dea0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f8dd28 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1c457f8dda0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c457f8df50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f8e170 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1c457f8e090 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1c457f8e3b8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1c457f8e240 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1c457f8e2b8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c457f8e6b8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1c457f8e498 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1c457f8e510 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c457f86a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c457f8e850 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c457f86860 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1c457f86ab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f86ec0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c457f86c00 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1c457f86c78 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1c457f86cf0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c457f87320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c457f87060 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c457f870d8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1c457f87150 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1c457f873d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f878b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1c457f87520 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1c457f87598 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c457f87610 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1c457f87688 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1c457f87b10 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1c457f879a0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1c457f87d50 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c457f87be0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1c457f87c58 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1c457f87f08 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c457f87e28 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1c457f881f8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1c457f87fd8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1c457f88050 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c457f88468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1c457f88390 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1c457f88510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c457f88728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1c457f88650 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1c457f91a08 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1c457f887f8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c457f91910 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c457f91c50 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1c457f91ae0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1c457f91b58 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1c457f91e00 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c457f91d28 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1c457f91fa8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1c457f91ed0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1c457f92158 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f92078 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1c457f92308 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1c457f92228 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1c457f92680 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c457f923e0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1c457f92458 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f924d0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457f92548 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1c457f95b20 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c457f92770 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1c457f927e8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f92860 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f95950 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457f959c8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1c457f95e30 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1c457f95c10 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1c457f95c90 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1c457f95d10 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1c457f95ff0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1c457f95f10 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1c457f962e0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1c457f960c0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1c457f96140 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1c457f961c0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1c457f964a0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1c457f963c0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1c457f96818 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1c457f96578 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1c457f965f0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c457f96668 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c457f966e0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1c457f92a98 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c457f92920 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1c457f92998 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1c457f92dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1c457f92c50 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1c457f92cd0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1c457f92e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1c457f93138 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c457f931d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1c457f93518 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1c457f933a0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1c457f93420 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1c457f935c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1c457f90900 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c457f909a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1c457f90c40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1c457f90b60 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1c457f90ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1c457f90f68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c457f91008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1c457f912b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1c457f911d0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1c457f91358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1c457f91638 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1c457f91558 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1c457f916e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1c457f93aa8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1c457f93930 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1c457f939a8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1c457f93b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1c457f93e18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1c457f93eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1c457f94240 <.//openssl//file_jk/after\crypto\asn1\a_utf8.c:27:1, line:114:1> line:27:5 UTF8_getc 'int (const unsigned char *, int, unsigned long *)'
| |-ParmVarDecl 0x1c457f93fe0 <col:15, col:36> col:36 used str 'const unsigned char *'
| |-ParmVarDecl 0x1c457f94060 <col:41, col:45> col:45 used len 'int'
| |-ParmVarDecl 0x1c457f94110 <col:50, col:65> col:65 used val 'unsigned long *'
| `-CompoundStmt 0x1c457fea030 <line:28:1, line:114:1>
|   |-DeclStmt 0x1c457f94390 <line:29:5, col:27>
|   | `-VarDecl 0x1c457f94328 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x1c457f94428 <line:30:5, col:24>
|   | `-VarDecl 0x1c457f943c0 <col:5, col:19> col:19 used value 'unsigned long'
|   |-DeclStmt 0x1c457f944c0 <line:31:5, col:12>
|   | `-VarDecl 0x1c457f94458 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1c457f94590 <line:32:5, line:33:16>
|   | |-BinaryOperator 0x1c457f94538 <line:32:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x1c457f94520 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c457f944d8 <col:9> 'int' lvalue ParmVar 0x1c457f94060 'len' 'int'
|   | | `-IntegerLiteral 0x1c457f944f8 <col:16> 'int' 0
|   | `-ReturnStmt 0x1c457f94580 <line:33:9, col:16>
|   |   `-IntegerLiteral 0x1c457f94558 <col:16> 'int' 0
|   |-BinaryOperator 0x1c457f94618 <line:34:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x1c457f945a8 <col:5> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x1c457f94600 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1c457f945e0 <col:9> 'const unsigned char *' lvalue ParmVar 0x1c457f93fe0 'str' 'const unsigned char *'
|   |-IfStmt 0x1c457f9a870 <line:37:5, line:111:17> has_else
|   | |-BinaryOperator 0x1c457f94748 <line:37:9, col:24> 'int' '=='
|   | | |-ParenExpr 0x1c457f94700 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1c457f946e0 <col:10, col:15> 'int' '&'
|   | | |   |-ImplicitCastExpr 0x1c457f946c8 <col:10, col:11> 'int' <IntegralCast>
|   | | |   | `-ImplicitCastExpr 0x1c457f946b0 <col:10, col:11> 'unsigned char' <LValueToRValue>
|   | | |   |   `-UnaryOperator 0x1c457f94670 <col:10, col:11> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |   |     `-ImplicitCastExpr 0x1c457f94658 <col:11> 'const unsigned char *' <LValueToRValue>
|   | | |   |       `-DeclRefExpr 0x1c457f94638 <col:11> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   | | |   `-IntegerLiteral 0x1c457f94688 <col:15> 'int' 128
|   | | `-IntegerLiteral 0x1c457f94720 <col:24> 'int' 0
|   | |-CompoundStmt 0x1c457f96960 <col:27, line:40:5>
|   | | |-BinaryOperator 0x1c457f94880 <line:38:9, col:24> 'unsigned long' '='
|   | | | |-DeclRefExpr 0x1c457f94768 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   | | | `-ImplicitCastExpr 0x1c457f94868 <col:17, col:24> 'unsigned long' <IntegralCast>
|   | | |   `-BinaryOperator 0x1c457f94848 <col:17, col:24> 'int' '&'
|   | | |     |-ImplicitCastExpr 0x1c457f94830 <col:17, col:19> 'int' <IntegralCast>
|   | | |     | `-ImplicitCastExpr 0x1c457f94818 <col:17, col:19> 'unsigned char' <LValueToRValue>
|   | | |     |   `-UnaryOperator 0x1c457f947d8 <col:17, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |     |     `-UnaryOperator 0x1c457f947c0 <col:18, col:19> 'const unsigned char *' postfix '++'
|   | | |     |       `-DeclRefExpr 0x1c457f947a0 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x1c457f947f0 <col:24> 'int' 127
|   | | `-BinaryOperator 0x1c457f94900 <line:39:9, col:15> 'int' '='
|   | |   |-DeclRefExpr 0x1c457f948a0 <col:9> 'int' lvalue Var 0x1c457f94458 'ret' 'int'
|   | |   `-IntegerLiteral 0x1c457f948d8 <col:15> 'int' 1
|   | `-IfStmt 0x1c457f9a848 <line:40:12, line:111:17> has_else
|   |   |-BinaryOperator 0x1c457f96a90 <line:40:16, col:31> 'int' '=='
|   |   | |-ParenExpr 0x1c457f96a48 <col:16, col:26> 'int'
|   |   | | `-BinaryOperator 0x1c457f96a28 <col:17, col:22> 'int' '&'
|   |   | |   |-ImplicitCastExpr 0x1c457f96a10 <col:17, col:18> 'int' <IntegralCast>
|   |   | |   | `-ImplicitCastExpr 0x1c457f969f8 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |   | |   |   `-UnaryOperator 0x1c457f969b8 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |   |     `-ImplicitCastExpr 0x1c457f969a0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x1c457f96980 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |   | |   `-IntegerLiteral 0x1c457f969d0 <col:22> 'int' 224
|   |   | `-IntegerLiteral 0x1c457f96a68 <col:31> 'int' 192
|   |   |-CompoundStmt 0x1c457f97180 <col:37, line:50:5>
|   |   | |-IfStmt 0x1c457f96b80 <line:41:9, line:42:21>
|   |   | | |-BinaryOperator 0x1c457f96b10 <line:41:13, col:19> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1c457f96af8 <col:13> 'int' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1c457f96ab0 <col:13> 'int' lvalue ParmVar 0x1c457f94060 'len' 'int'
|   |   | | | `-IntegerLiteral 0x1c457f96ad0 <col:19> 'int' 2
|   |   | | `-ReturnStmt 0x1c457f96b70 <line:42:13, col:21>
|   |   | |   `-UnaryOperator 0x1c457f96b58 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1c457f96b30 <col:21> 'int' 1
|   |   | |-IfStmt 0x1c457f96d48 <line:43:9, line:44:21>
|   |   | | |-BinaryOperator 0x1c457f96cd8 <line:43:13, col:30> 'int' '!='
|   |   | | | |-ParenExpr 0x1c457f96c90 <col:13, col:25> 'int'
|   |   | | | | `-BinaryOperator 0x1c457f96c70 <col:14, col:21> 'int' '&'
|   |   | | | |   |-ImplicitCastExpr 0x1c457f96c58 <col:14, col:17> 'int' <IntegralCast>
|   |   | | | |   | `-ImplicitCastExpr 0x1c457f96c40 <col:14, col:17> 'unsigned char' <LValueToRValue>
|   |   | | | |   |   `-ArraySubscriptExpr 0x1c457f96bf8 <col:14, col:17> 'const unsigned char' lvalue
|   |   | | | |   |     |-ImplicitCastExpr 0x1c457f96be0 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   | | | |   |     | `-DeclRefExpr 0x1c457f96b98 <col:14> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |   | | | |   |     `-IntegerLiteral 0x1c457f96bb8 <col:16> 'int' 1
|   |   | | | |   `-IntegerLiteral 0x1c457f96c18 <col:21> 'int' 192
|   |   | | | `-IntegerLiteral 0x1c457f96cb0 <col:30> 'int' 128
|   |   | | `-ReturnStmt 0x1c457f96d38 <line:44:13, col:21>
|   |   | |   `-UnaryOperator 0x1c457f96d20 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1c457f96cf8 <col:21> 'int' 3
|   |   | |-BinaryOperator 0x1c457f96ec8 <line:45:9, col:34> 'unsigned long' '='
|   |   | | |-DeclRefExpr 0x1c457f96d60 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x1c457f96eb0 <col:17, col:34> 'unsigned long' <IntegralCast>
|   |   | |   `-BinaryOperator 0x1c457f96e90 <col:17, col:34> 'int' '<<'
|   |   | |     |-ParenExpr 0x1c457f96e48 <col:17, col:29> 'int'
|   |   | |     | `-BinaryOperator 0x1c457f96e28 <col:18, col:25> 'int' '&'
|   |   | |     |   |-ImplicitCastExpr 0x1c457f96e10 <col:18, col:20> 'int' <IntegralCast>
|   |   | |     |   | `-ImplicitCastExpr 0x1c457f96df8 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   | |     |   |   `-UnaryOperator 0x1c457f96db8 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |     |   |     `-UnaryOperator 0x1c457f96da0 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |   | |     |   |       `-DeclRefExpr 0x1c457f96d80 <col:19> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |   | |     |   `-IntegerLiteral 0x1c457f96dd0 <col:25> 'int' 31
|   |   | |     `-IntegerLiteral 0x1c457f96e68 <col:34> 'int' 6
|   |   | |-CompoundAssignOperator 0x1c457f96fe8 <line:46:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |   | | |-DeclRefExpr 0x1c457f96ee8 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |   | | `-ImplicitCastExpr 0x1c457f96fd0 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |   | |   `-BinaryOperator 0x1c457f96fb0 <col:18, col:25> 'int' '&'
|   |   | |     |-ImplicitCastExpr 0x1c457f96f98 <col:18, col:20> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x1c457f96f80 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |   | |     |   `-UnaryOperator 0x1c457f96f40 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   | |     |     `-UnaryOperator 0x1c457f96f28 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |   | |     |       `-DeclRefExpr 0x1c457f96f08 <col:19> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |   | |     `-IntegerLiteral 0x1c457f96f58 <col:25> 'int' 63
|   |   | |-IfStmt 0x1c457f97100 <line:47:9, line:48:21>
|   |   | | |-BinaryOperator 0x1c457f97090 <line:47:13, col:21> 'int' '<'
|   |   | | | |-ImplicitCastExpr 0x1c457f97060 <col:13> 'unsigned long' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x1c457f97018 <col:13> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |   | | | `-ImplicitCastExpr 0x1c457f97078 <col:21> 'unsigned long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x1c457f97038 <col:21> 'int' 128
|   |   | | `-ReturnStmt 0x1c457f970f0 <line:48:13, col:21>
|   |   | |   `-UnaryOperator 0x1c457f970d8 <col:20, col:21> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1c457f970b0 <col:21> 'int' 4
|   |   | `-BinaryOperator 0x1c457f97160 <line:49:9, col:15> 'int' '='
|   |   |   |-DeclRefExpr 0x1c457f97118 <col:9> 'int' lvalue Var 0x1c457f94458 'ret' 'int'
|   |   |   `-IntegerLiteral 0x1c457f97138 <col:15> 'int' 2
|   |   `-IfStmt 0x1c457f9a820 <line:50:12, line:111:17> has_else
|   |     |-BinaryOperator 0x1c457f972d0 <line:50:16, col:31> 'int' '=='
|   |     | |-ParenExpr 0x1c457f97288 <col:16, col:26> 'int'
|   |     | | `-BinaryOperator 0x1c457f97268 <col:17, col:22> 'int' '&'
|   |     | |   |-ImplicitCastExpr 0x1c457f97250 <col:17, col:18> 'int' <IntegralCast>
|   |     | |   | `-ImplicitCastExpr 0x1c457f97238 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |     | |   |   `-UnaryOperator 0x1c457f971f8 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |   |     `-ImplicitCastExpr 0x1c457f971e0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |     | |   |       `-DeclRefExpr 0x1c457f971c0 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |     | |   `-IntegerLiteral 0x1c457f97210 <col:22> 'int' 240
|   |     | `-IntegerLiteral 0x1c457f972a8 <col:31> 'int' 224
|   |     |-CompoundStmt 0x1c457f94d00 <col:37, line:62:5>
|   |     | |-IfStmt 0x1c457f973c0 <line:51:9, line:52:21>
|   |     | | |-BinaryOperator 0x1c457f97350 <line:51:13, col:19> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x1c457f97338 <col:13> 'int' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1c457f972f0 <col:13> 'int' lvalue ParmVar 0x1c457f94060 'len' 'int'
|   |     | | | `-IntegerLiteral 0x1c457f97310 <col:19> 'int' 3
|   |     | | `-ReturnStmt 0x1c457f973b0 <line:52:13, col:21>
|   |     | |   `-UnaryOperator 0x1c457f97398 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1c457f97370 <col:21> 'int' 1
|   |     | |-IfStmt 0x1c457f97748 <line:53:9, line:55:21>
|   |     | | |-BinaryOperator 0x1c457f976d8 <line:53:13, line:54:38> 'int' '||'
|   |     | | | |-ParenExpr 0x1c457f97538 <line:53:13, col:35> 'int'
|   |     | | | | `-BinaryOperator 0x1c457f97518 <col:14, col:31> 'int' '!='
|   |     | | | |   |-ParenExpr 0x1c457f974d0 <col:14, col:26> 'int'
|   |     | | | |   | `-BinaryOperator 0x1c457f974b0 <col:15, col:22> 'int' '&'
|   |     | | | |   |   |-ImplicitCastExpr 0x1c457f97498 <col:15, col:18> 'int' <IntegralCast>
|   |     | | | |   |   | `-ImplicitCastExpr 0x1c457f97480 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |     | | | |   |   |   `-ArraySubscriptExpr 0x1c457f97438 <col:15, col:18> 'const unsigned char' lvalue
|   |     | | | |   |   |     |-ImplicitCastExpr 0x1c457f97420 <col:15> 'const unsigned char *' <LValueToRValue>
|   |     | | | |   |   |     | `-DeclRefExpr 0x1c457f973d8 <col:15> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |     | | | |   |   |     `-IntegerLiteral 0x1c457f973f8 <col:17> 'int' 1
|   |     | | | |   |   `-IntegerLiteral 0x1c457f97458 <col:22> 'int' 192
|   |     | | | |   `-IntegerLiteral 0x1c457f974f0 <col:31> 'int' 128
|   |     | | | `-ParenExpr 0x1c457f976b8 <line:54:16, col:38> 'int'
|   |     | | |   `-BinaryOperator 0x1c457f97698 <col:17, col:34> 'int' '!='
|   |     | | |     |-ParenExpr 0x1c457f97650 <col:17, col:29> 'int'
|   |     | | |     | `-BinaryOperator 0x1c457f97630 <col:18, col:25> 'int' '&'
|   |     | | |     |   |-ImplicitCastExpr 0x1c457f97618 <col:18, col:21> 'int' <IntegralCast>
|   |     | | |     |   | `-ImplicitCastExpr 0x1c457f97600 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |     | | |     |   |   `-ArraySubscriptExpr 0x1c457f975b8 <col:18, col:21> 'const unsigned char' lvalue
|   |     | | |     |   |     |-ImplicitCastExpr 0x1c457f975a0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |     | | |     |   |     | `-DeclRefExpr 0x1c457f97558 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |     | | |     |   |     `-IntegerLiteral 0x1c457f97578 <col:20> 'int' 2
|   |     | | |     |   `-IntegerLiteral 0x1c457f975d8 <col:25> 'int' 192
|   |     | | |     `-IntegerLiteral 0x1c457f97670 <col:34> 'int' 128
|   |     | | `-ReturnStmt 0x1c457f97738 <line:55:13, col:21>
|   |     | |   `-UnaryOperator 0x1c457f97720 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1c457f976f8 <col:21> 'int' 3
|   |     | |-BinaryOperator 0x1c457f978c8 <line:56:9, col:33> 'unsigned long' '='
|   |     | | |-DeclRefExpr 0x1c457f97760 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1c457f978b0 <col:17, col:33> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1c457f97890 <col:17, col:33> 'int' '<<'
|   |     | |     |-ParenExpr 0x1c457f97848 <col:17, col:28> 'int'
|   |     | |     | `-BinaryOperator 0x1c457f97828 <col:18, col:25> 'int' '&'
|   |     | |     |   |-ImplicitCastExpr 0x1c457f97810 <col:18, col:20> 'int' <IntegralCast>
|   |     | |     |   | `-ImplicitCastExpr 0x1c457f977f8 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |     | |     |   |   `-UnaryOperator 0x1c457f977b8 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |   |     `-UnaryOperator 0x1c457f977a0 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |     | |     |   |       `-DeclRefExpr 0x1c457f97780 <col:19> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |     | |     |   `-IntegerLiteral 0x1c457f977d0 <col:25> 'int' 15
|   |     | |     `-IntegerLiteral 0x1c457f97868 <col:33> 'int' 12
|   |     | |-CompoundAssignOperator 0x1c457f94a38 <line:57:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     | | |-DeclRefExpr 0x1c457f978e8 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1c457f94a20 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1c457f94a00 <col:18, col:35> 'int' '<<'
|   |     | |     |-ParenExpr 0x1c457f949b8 <col:18, col:30> 'int'
|   |     | |     | `-BinaryOperator 0x1c457f94998 <col:19, col:26> 'int' '&'
|   |     | |     |   |-ImplicitCastExpr 0x1c457f94980 <col:19, col:21> 'int' <IntegralCast>
|   |     | |     |   | `-ImplicitCastExpr 0x1c457f94968 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |     | |     |   |   `-UnaryOperator 0x1c457f97940 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |   |     `-UnaryOperator 0x1c457f97928 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |     | |     |   |       `-DeclRefExpr 0x1c457f97908 <col:20> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |     | |     |   `-IntegerLiteral 0x1c457f94940 <col:26> 'int' 63
|   |     | |     `-IntegerLiteral 0x1c457f949d8 <col:35> 'int' 6
|   |     | |-CompoundAssignOperator 0x1c457f94b68 <line:58:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     | | |-DeclRefExpr 0x1c457f94a68 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |     | | `-ImplicitCastExpr 0x1c457f94b50 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |     | |   `-BinaryOperator 0x1c457f94b30 <col:18, col:25> 'int' '&'
|   |     | |     |-ImplicitCastExpr 0x1c457f94b18 <col:18, col:20> 'int' <IntegralCast>
|   |     | |     | `-ImplicitCastExpr 0x1c457f94b00 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |     | |     |   `-UnaryOperator 0x1c457f94ac0 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     |     `-UnaryOperator 0x1c457f94aa8 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |     | |     |       `-DeclRefExpr 0x1c457f94a88 <col:19> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |     | |     `-IntegerLiteral 0x1c457f94ad8 <col:25> 'int' 63
|   |     | |-IfStmt 0x1c457f94c80 <line:59:9, line:60:21>
|   |     | | |-BinaryOperator 0x1c457f94c10 <line:59:13, col:21> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x1c457f94be0 <col:13> 'unsigned long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1c457f94b98 <col:13> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |     | | | `-ImplicitCastExpr 0x1c457f94bf8 <col:21> 'unsigned long' <IntegralCast>
|   |     | | |   `-IntegerLiteral 0x1c457f94bb8 <col:21> 'int' 2048
|   |     | | `-ReturnStmt 0x1c457f94c70 <line:60:13, col:21>
|   |     | |   `-UnaryOperator 0x1c457f94c58 <col:20, col:21> 'int' prefix '-'
|   |     | |     `-IntegerLiteral 0x1c457f94c30 <col:21> 'int' 4
|   |     | `-BinaryOperator 0x1c457f94ce0 <line:61:9, col:15> 'int' '='
|   |     |   |-DeclRefExpr 0x1c457f94c98 <col:9> 'int' lvalue Var 0x1c457f94458 'ret' 'int'
|   |     |   `-IntegerLiteral 0x1c457f94cb8 <col:15> 'int' 3
|   |     `-IfStmt 0x1c457f9a7f8 <line:62:12, line:111:17> has_else
|   |       |-BinaryOperator 0x1c457f94e58 <line:62:16, col:31> 'int' '=='
|   |       | |-ParenExpr 0x1c457f94e10 <col:16, col:26> 'int'
|   |       | | `-BinaryOperator 0x1c457f94df0 <col:17, col:22> 'int' '&'
|   |       | |   |-ImplicitCastExpr 0x1c457f94dd8 <col:17, col:18> 'int' <IntegralCast>
|   |       | |   | `-ImplicitCastExpr 0x1c457f94dc0 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |       | |   |   `-UnaryOperator 0x1c457f94d80 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |   |     `-ImplicitCastExpr 0x1c457f94d68 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | |   |       `-DeclRefExpr 0x1c457f94d48 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |       | |   `-IntegerLiteral 0x1c457f94d98 <col:22> 'int' 248
|   |       | `-IntegerLiteral 0x1c457f94e30 <col:31> 'int' 240
|   |       |-CompoundStmt 0x1c457f97c70 <col:37, line:76:5>
|   |       | |-IfStmt 0x1c457f94f48 <line:63:9, line:64:21>
|   |       | | |-BinaryOperator 0x1c457f94ed8 <line:63:13, col:19> 'int' '<'
|   |       | | | |-ImplicitCastExpr 0x1c457f94ec0 <col:13> 'int' <LValueToRValue>
|   |       | | | | `-DeclRefExpr 0x1c457f94e78 <col:13> 'int' lvalue ParmVar 0x1c457f94060 'len' 'int'
|   |       | | | `-IntegerLiteral 0x1c457f94e98 <col:19> 'int' 4
|   |       | | `-ReturnStmt 0x1c457f94f38 <line:64:13, col:21>
|   |       | |   `-UnaryOperator 0x1c457f94f20 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1c457f94ef8 <col:21> 'int' 1
|   |       | |-IfStmt 0x1c457f95470 <line:65:9, line:68:21>
|   |       | | |-BinaryOperator 0x1c457f95400 <line:65:13, line:67:38> 'int' '||'
|   |       | | | |-BinaryOperator 0x1c457f95260 <line:65:13, line:66:38> 'int' '||'
|   |       | | | | |-ParenExpr 0x1c457f950c0 <line:65:13, col:35> 'int'
|   |       | | | | | `-BinaryOperator 0x1c457f950a0 <col:14, col:31> 'int' '!='
|   |       | | | | |   |-ParenExpr 0x1c457f95058 <col:14, col:26> 'int'
|   |       | | | | |   | `-BinaryOperator 0x1c457f95038 <col:15, col:22> 'int' '&'
|   |       | | | | |   |   |-ImplicitCastExpr 0x1c457f95020 <col:15, col:18> 'int' <IntegralCast>
|   |       | | | | |   |   | `-ImplicitCastExpr 0x1c457f95008 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |       | | | | |   |   |   `-ArraySubscriptExpr 0x1c457f94fc0 <col:15, col:18> 'const unsigned char' lvalue
|   |       | | | | |   |   |     |-ImplicitCastExpr 0x1c457f94fa8 <col:15> 'const unsigned char *' <LValueToRValue>
|   |       | | | | |   |   |     | `-DeclRefExpr 0x1c457f94f60 <col:15> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |       | | | | |   |   |     `-IntegerLiteral 0x1c457f94f80 <col:17> 'int' 1
|   |       | | | | |   |   `-IntegerLiteral 0x1c457f94fe0 <col:22> 'int' 192
|   |       | | | | |   `-IntegerLiteral 0x1c457f95078 <col:31> 'int' 128
|   |       | | | | `-ParenExpr 0x1c457f95240 <line:66:16, col:38> 'int'
|   |       | | | |   `-BinaryOperator 0x1c457f95220 <col:17, col:34> 'int' '!='
|   |       | | | |     |-ParenExpr 0x1c457f951d8 <col:17, col:29> 'int'
|   |       | | | |     | `-BinaryOperator 0x1c457f951b8 <col:18, col:25> 'int' '&'
|   |       | | | |     |   |-ImplicitCastExpr 0x1c457f951a0 <col:18, col:21> 'int' <IntegralCast>
|   |       | | | |     |   | `-ImplicitCastExpr 0x1c457f95188 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |       | | | |     |   |   `-ArraySubscriptExpr 0x1c457f95140 <col:18, col:21> 'const unsigned char' lvalue
|   |       | | | |     |   |     |-ImplicitCastExpr 0x1c457f95128 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | | | |     |   |     | `-DeclRefExpr 0x1c457f950e0 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |       | | | |     |   |     `-IntegerLiteral 0x1c457f95100 <col:20> 'int' 2
|   |       | | | |     |   `-IntegerLiteral 0x1c457f95160 <col:25> 'int' 192
|   |       | | | |     `-IntegerLiteral 0x1c457f951f8 <col:34> 'int' 128
|   |       | | | `-ParenExpr 0x1c457f953e0 <line:67:16, col:38> 'int'
|   |       | | |   `-BinaryOperator 0x1c457f953c0 <col:17, col:34> 'int' '!='
|   |       | | |     |-ParenExpr 0x1c457f95378 <col:17, col:29> 'int'
|   |       | | |     | `-BinaryOperator 0x1c457f95358 <col:18, col:25> 'int' '&'
|   |       | | |     |   |-ImplicitCastExpr 0x1c457f95340 <col:18, col:21> 'int' <IntegralCast>
|   |       | | |     |   | `-ImplicitCastExpr 0x1c457f95328 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |       | | |     |   |   `-ArraySubscriptExpr 0x1c457f952e0 <col:18, col:21> 'const unsigned char' lvalue
|   |       | | |     |   |     |-ImplicitCastExpr 0x1c457f952c8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |       | | |     |   |     | `-DeclRefExpr 0x1c457f95280 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |       | | |     |   |     `-IntegerLiteral 0x1c457f952a0 <col:20> 'int' 3
|   |       | | |     |   `-IntegerLiteral 0x1c457f95300 <col:25> 'int' 192
|   |       | | |     `-IntegerLiteral 0x1c457f95398 <col:34> 'int' 128
|   |       | | `-ReturnStmt 0x1c457f95460 <line:68:13, col:21>
|   |       | |   `-UnaryOperator 0x1c457f95448 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1c457f95420 <col:21> 'int' 3
|   |       | |-BinaryOperator 0x1c457f95658 <line:69:9, col:50> 'unsigned long' '='
|   |       | | |-DeclRefExpr 0x1c457f95488 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |       | | `-BinaryOperator 0x1c457f95638 <col:17, col:50> 'unsigned long' '<<'
|   |       | |   |-ParenExpr 0x1c457f955f0 <col:17, col:45> 'unsigned long'
|   |       | |   | `-CStyleCastExpr 0x1c457f955c8 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |       | |   |   `-ParenExpr 0x1c457f955a8 <col:33, col:44> 'int'
|   |       | |   |     `-BinaryOperator 0x1c457f95550 <col:34, col:41> 'int' '&'
|   |       | |   |       |-ImplicitCastExpr 0x1c457f95538 <col:34, col:36> 'int' <IntegralCast>
|   |       | |   |       | `-ImplicitCastExpr 0x1c457f95520 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |       | |   |       |   `-UnaryOperator 0x1c457f954e0 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |   |       |     `-UnaryOperator 0x1c457f954c8 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |       | |   |       |       `-DeclRefExpr 0x1c457f954a8 <col:35> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |       | |   |       `-IntegerLiteral 0x1c457f954f8 <col:41> 'int' 7
|   |       | |   `-IntegerLiteral 0x1c457f95610 <col:50> 'int' 18
|   |       | |-CompoundAssignOperator 0x1c457f957e0 <line:70:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1c457f95678 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1c457f957c8 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1c457f957a8 <col:18, col:35> 'int' '<<'
|   |       | |     |-ParenExpr 0x1c457f95760 <col:18, col:30> 'int'
|   |       | |     | `-BinaryOperator 0x1c457f95740 <col:19, col:26> 'int' '&'
|   |       | |     |   |-ImplicitCastExpr 0x1c457f95728 <col:19, col:21> 'int' <IntegralCast>
|   |       | |     |   | `-ImplicitCastExpr 0x1c457f95710 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |       | |     |   |   `-UnaryOperator 0x1c457f956d0 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |   |     `-UnaryOperator 0x1c457f956b8 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |       | |     |   |       `-DeclRefExpr 0x1c457f95698 <col:20> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |       | |     |   `-IntegerLiteral 0x1c457f956e8 <col:26> 'int' 63
|   |       | |     `-IntegerLiteral 0x1c457f95780 <col:35> 'int' 12
|   |       | |-CompoundAssignOperator 0x1c457f979a8 <line:71:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1c457f95810 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1c457f97990 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1c457f97970 <col:18, col:35> 'int' '<<'
|   |       | |     |-ParenExpr 0x1c457f958f8 <col:18, col:30> 'int'
|   |       | |     | `-BinaryOperator 0x1c457f958d8 <col:19, col:26> 'int' '&'
|   |       | |     |   |-ImplicitCastExpr 0x1c457f958c0 <col:19, col:21> 'int' <IntegralCast>
|   |       | |     |   | `-ImplicitCastExpr 0x1c457f958a8 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |       | |     |   |   `-UnaryOperator 0x1c457f95868 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |   |     `-UnaryOperator 0x1c457f95850 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |       | |     |   |       `-DeclRefExpr 0x1c457f95830 <col:20> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |       | |     |   `-IntegerLiteral 0x1c457f95880 <col:26> 'int' 63
|   |       | |     `-IntegerLiteral 0x1c457f95918 <col:35> 'int' 6
|   |       | |-CompoundAssignOperator 0x1c457f97ad8 <line:72:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |       | | |-DeclRefExpr 0x1c457f979d8 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |       | | `-ImplicitCastExpr 0x1c457f97ac0 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |       | |   `-BinaryOperator 0x1c457f97aa0 <col:18, col:25> 'int' '&'
|   |       | |     |-ImplicitCastExpr 0x1c457f97a88 <col:18, col:20> 'int' <IntegralCast>
|   |       | |     | `-ImplicitCastExpr 0x1c457f97a70 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |       | |     |   `-UnaryOperator 0x1c457f97a30 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |       | |     |     `-UnaryOperator 0x1c457f97a18 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |       | |     |       `-DeclRefExpr 0x1c457f979f8 <col:19> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |       | |     `-IntegerLiteral 0x1c457f97a48 <col:25> 'int' 63
|   |       | |-IfStmt 0x1c457f97bf0 <line:73:9, line:74:21>
|   |       | | |-BinaryOperator 0x1c457f97b80 <line:73:13, col:21> 'int' '<'
|   |       | | | |-ImplicitCastExpr 0x1c457f97b50 <col:13> 'unsigned long' <LValueToRValue>
|   |       | | | | `-DeclRefExpr 0x1c457f97b08 <col:13> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |       | | | `-ImplicitCastExpr 0x1c457f97b68 <col:21> 'unsigned long' <IntegralCast>
|   |       | | |   `-IntegerLiteral 0x1c457f97b28 <col:21> 'int' 65536
|   |       | | `-ReturnStmt 0x1c457f97be0 <line:74:13, col:21>
|   |       | |   `-UnaryOperator 0x1c457f97bc8 <col:20, col:21> 'int' prefix '-'
|   |       | |     `-IntegerLiteral 0x1c457f97ba0 <col:21> 'int' 4
|   |       | `-BinaryOperator 0x1c457f97c50 <line:75:9, col:15> 'int' '='
|   |       |   |-DeclRefExpr 0x1c457f97c08 <col:9> 'int' lvalue Var 0x1c457f94458 'ret' 'int'
|   |       |   `-IntegerLiteral 0x1c457f97c28 <col:15> 'int' 4
|   |       `-IfStmt 0x1c457f9a7d0 <line:76:12, line:111:17> has_else
|   |         |-BinaryOperator 0x1c457f97dd0 <line:76:16, col:31> 'int' '=='
|   |         | |-ParenExpr 0x1c457f97d88 <col:16, col:26> 'int'
|   |         | | `-BinaryOperator 0x1c457f97d68 <col:17, col:22> 'int' '&'
|   |         | |   |-ImplicitCastExpr 0x1c457f97d50 <col:17, col:18> 'int' <IntegralCast>
|   |         | |   | `-ImplicitCastExpr 0x1c457f97d38 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |         | |   |   `-UnaryOperator 0x1c457f97cf8 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |     `-ImplicitCastExpr 0x1c457f97ce0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | |   |       `-DeclRefExpr 0x1c457f97cc0 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |         | |   `-IntegerLiteral 0x1c457f97d10 <col:22> 'int' 252
|   |         | `-IntegerLiteral 0x1c457f97da8 <col:31> 'int' 248
|   |         |-CompoundStmt 0x1c457f98fe0 <col:37, line:92:5>
|   |         | |-IfStmt 0x1c457f97ec0 <line:77:9, line:78:21>
|   |         | | |-BinaryOperator 0x1c457f97e50 <line:77:13, col:19> 'int' '<'
|   |         | | | |-ImplicitCastExpr 0x1c457f97e38 <col:13> 'int' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1c457f97df0 <col:13> 'int' lvalue ParmVar 0x1c457f94060 'len' 'int'
|   |         | | | `-IntegerLiteral 0x1c457f97e10 <col:19> 'int' 5
|   |         | | `-ReturnStmt 0x1c457f97eb0 <line:78:13, col:21>
|   |         | |   `-UnaryOperator 0x1c457f97e98 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1c457f97e70 <col:21> 'int' 1
|   |         | |-IfStmt 0x1c457f98588 <line:79:9, line:83:21>
|   |         | | |-BinaryOperator 0x1c457f98518 <line:79:13, line:82:38> 'int' '||'
|   |         | | | |-BinaryOperator 0x1c457f98378 <line:79:13, line:81:38> 'int' '||'
|   |         | | | | |-BinaryOperator 0x1c457f981d8 <line:79:13, line:80:38> 'int' '||'
|   |         | | | | | |-ParenExpr 0x1c457f98038 <line:79:13, col:35> 'int'
|   |         | | | | | | `-BinaryOperator 0x1c457f98018 <col:14, col:31> 'int' '!='
|   |         | | | | | |   |-ParenExpr 0x1c457f97fd0 <col:14, col:26> 'int'
|   |         | | | | | |   | `-BinaryOperator 0x1c457f97fb0 <col:15, col:22> 'int' '&'
|   |         | | | | | |   |   |-ImplicitCastExpr 0x1c457f97f98 <col:15, col:18> 'int' <IntegralCast>
|   |         | | | | | |   |   | `-ImplicitCastExpr 0x1c457f97f80 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |         | | | | | |   |   |   `-ArraySubscriptExpr 0x1c457f97f38 <col:15, col:18> 'const unsigned char' lvalue
|   |         | | | | | |   |   |     |-ImplicitCastExpr 0x1c457f97f20 <col:15> 'const unsigned char *' <LValueToRValue>
|   |         | | | | | |   |   |     | `-DeclRefExpr 0x1c457f97ed8 <col:15> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |         | | | | | |   |   |     `-IntegerLiteral 0x1c457f97ef8 <col:17> 'int' 1
|   |         | | | | | |   |   `-IntegerLiteral 0x1c457f97f58 <col:22> 'int' 192
|   |         | | | | | |   `-IntegerLiteral 0x1c457f97ff0 <col:31> 'int' 128
|   |         | | | | | `-ParenExpr 0x1c457f981b8 <line:80:16, col:38> 'int'
|   |         | | | | |   `-BinaryOperator 0x1c457f98198 <col:17, col:34> 'int' '!='
|   |         | | | | |     |-ParenExpr 0x1c457f98150 <col:17, col:29> 'int'
|   |         | | | | |     | `-BinaryOperator 0x1c457f98130 <col:18, col:25> 'int' '&'
|   |         | | | | |     |   |-ImplicitCastExpr 0x1c457f98118 <col:18, col:21> 'int' <IntegralCast>
|   |         | | | | |     |   | `-ImplicitCastExpr 0x1c457f98100 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | | | |     |   |   `-ArraySubscriptExpr 0x1c457f980b8 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | | | |     |   |     |-ImplicitCastExpr 0x1c457f980a0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | | | |     |   |     | `-DeclRefExpr 0x1c457f98058 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |         | | | | |     |   |     `-IntegerLiteral 0x1c457f98078 <col:20> 'int' 2
|   |         | | | | |     |   `-IntegerLiteral 0x1c457f980d8 <col:25> 'int' 192
|   |         | | | | |     `-IntegerLiteral 0x1c457f98170 <col:34> 'int' 128
|   |         | | | | `-ParenExpr 0x1c457f98358 <line:81:16, col:38> 'int'
|   |         | | | |   `-BinaryOperator 0x1c457f98338 <col:17, col:34> 'int' '!='
|   |         | | | |     |-ParenExpr 0x1c457f982f0 <col:17, col:29> 'int'
|   |         | | | |     | `-BinaryOperator 0x1c457f982d0 <col:18, col:25> 'int' '&'
|   |         | | | |     |   |-ImplicitCastExpr 0x1c457f982b8 <col:18, col:21> 'int' <IntegralCast>
|   |         | | | |     |   | `-ImplicitCastExpr 0x1c457f982a0 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | | |     |   |   `-ArraySubscriptExpr 0x1c457f98258 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | | |     |   |     |-ImplicitCastExpr 0x1c457f98240 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | | |     |   |     | `-DeclRefExpr 0x1c457f981f8 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |         | | | |     |   |     `-IntegerLiteral 0x1c457f98218 <col:20> 'int' 3
|   |         | | | |     |   `-IntegerLiteral 0x1c457f98278 <col:25> 'int' 192
|   |         | | | |     `-IntegerLiteral 0x1c457f98310 <col:34> 'int' 128
|   |         | | | `-ParenExpr 0x1c457f984f8 <line:82:16, col:38> 'int'
|   |         | | |   `-BinaryOperator 0x1c457f984d8 <col:17, col:34> 'int' '!='
|   |         | | |     |-ParenExpr 0x1c457f98490 <col:17, col:29> 'int'
|   |         | | |     | `-BinaryOperator 0x1c457f98470 <col:18, col:25> 'int' '&'
|   |         | | |     |   |-ImplicitCastExpr 0x1c457f98458 <col:18, col:21> 'int' <IntegralCast>
|   |         | | |     |   | `-ImplicitCastExpr 0x1c457f98440 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |         | | |     |   |   `-ArraySubscriptExpr 0x1c457f983f8 <col:18, col:21> 'const unsigned char' lvalue
|   |         | | |     |   |     |-ImplicitCastExpr 0x1c457f983e0 <col:18> 'const unsigned char *' <LValueToRValue>
|   |         | | |     |   |     | `-DeclRefExpr 0x1c457f98398 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |         | | |     |   |     `-IntegerLiteral 0x1c457f983b8 <col:20> 'int' 4
|   |         | | |     |   `-IntegerLiteral 0x1c457f98418 <col:25> 'int' 192
|   |         | | |     `-IntegerLiteral 0x1c457f984b0 <col:34> 'int' 128
|   |         | | `-ReturnStmt 0x1c457f98578 <line:83:13, col:21>
|   |         | |   `-UnaryOperator 0x1c457f98560 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1c457f98538 <col:21> 'int' 3
|   |         | |-BinaryOperator 0x1c457f98770 <line:84:9, col:50> 'unsigned long' '='
|   |         | | |-DeclRefExpr 0x1c457f985a0 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1c457f98750 <col:17, col:50> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1c457f98708 <col:17, col:45> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1c457f986e0 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1c457f986c0 <col:33, col:44> 'int'
|   |         | |   |     `-BinaryOperator 0x1c457f98668 <col:34, col:41> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1c457f98650 <col:34, col:36> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1c457f98638 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1c457f985f8 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1c457f985e0 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1c457f985c0 <col:35> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1c457f98610 <col:41> 'int' 3
|   |         | |   `-IntegerLiteral 0x1c457f98728 <col:50> 'int' 24
|   |         | |-CompoundAssignOperator 0x1c457f98980 <line:85:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1c457f98790 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1c457f98940 <col:18, col:52> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1c457f988f8 <col:18, col:47> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1c457f988d0 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1c457f988b0 <col:34, col:46> 'int'
|   |         | |   |     `-BinaryOperator 0x1c457f98858 <col:35, col:42> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1c457f98840 <col:35, col:37> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1c457f98828 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1c457f987e8 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1c457f987d0 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1c457f987b0 <col:36> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1c457f98800 <col:42> 'int' 63
|   |         | |   `-IntegerLiteral 0x1c457f98918 <col:52> 'int' 18
|   |         | |-CompoundAssignOperator 0x1c457f98b80 <line:86:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1c457f989b0 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |         | | `-BinaryOperator 0x1c457f98b60 <col:18, col:52> 'unsigned long' '<<'
|   |         | |   |-ParenExpr 0x1c457f98b18 <col:18, col:47> 'unsigned long'
|   |         | |   | `-CStyleCastExpr 0x1c457f98af0 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |         | |   |   `-ParenExpr 0x1c457f98ad0 <col:34, col:46> 'int'
|   |         | |   |     `-BinaryOperator 0x1c457f98a78 <col:35, col:42> 'int' '&'
|   |         | |   |       |-ImplicitCastExpr 0x1c457f98a60 <col:35, col:37> 'int' <IntegralCast>
|   |         | |   |       | `-ImplicitCastExpr 0x1c457f98a48 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |         | |   |       |   `-UnaryOperator 0x1c457f98a08 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |   |       |     `-UnaryOperator 0x1c457f989f0 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |         | |   |       |       `-DeclRefExpr 0x1c457f989d0 <col:36> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |         | |   |       `-IntegerLiteral 0x1c457f98a20 <col:42> 'int' 63
|   |         | |   `-IntegerLiteral 0x1c457f98b38 <col:52> 'int' 12
|   |         | |-CompoundAssignOperator 0x1c457f98d18 <line:87:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1c457f98bb0 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |         | | `-ImplicitCastExpr 0x1c457f98d00 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |         | |   `-BinaryOperator 0x1c457f98ce0 <col:18, col:35> 'int' '<<'
|   |         | |     |-ParenExpr 0x1c457f98c98 <col:18, col:30> 'int'
|   |         | |     | `-BinaryOperator 0x1c457f98c78 <col:19, col:26> 'int' '&'
|   |         | |     |   |-ImplicitCastExpr 0x1c457f98c60 <col:19, col:21> 'int' <IntegralCast>
|   |         | |     |   | `-ImplicitCastExpr 0x1c457f98c48 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |         | |     |   |   `-UnaryOperator 0x1c457f98c08 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |     |   |     `-UnaryOperator 0x1c457f98bf0 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |         | |     |   |       `-DeclRefExpr 0x1c457f98bd0 <col:20> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |         | |     |   `-IntegerLiteral 0x1c457f98c20 <col:26> 'int' 63
|   |         | |     `-IntegerLiteral 0x1c457f98cb8 <col:35> 'int' 6
|   |         | |-CompoundAssignOperator 0x1c457f98e48 <line:88:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |         | | |-DeclRefExpr 0x1c457f98d48 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |         | | `-ImplicitCastExpr 0x1c457f98e30 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |         | |   `-BinaryOperator 0x1c457f98e10 <col:18, col:25> 'int' '&'
|   |         | |     |-ImplicitCastExpr 0x1c457f98df8 <col:18, col:20> 'int' <IntegralCast>
|   |         | |     | `-ImplicitCastExpr 0x1c457f98de0 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |         | |     |   `-UnaryOperator 0x1c457f98da0 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |         | |     |     `-UnaryOperator 0x1c457f98d88 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |         | |     |       `-DeclRefExpr 0x1c457f98d68 <col:19> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |         | |     `-IntegerLiteral 0x1c457f98db8 <col:25> 'int' 63
|   |         | |-IfStmt 0x1c457f98f60 <line:89:9, line:90:21>
|   |         | | |-BinaryOperator 0x1c457f98ef0 <line:89:13, col:21> 'int' '<'
|   |         | | | |-ImplicitCastExpr 0x1c457f98ec0 <col:13> 'unsigned long' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1c457f98e78 <col:13> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |         | | | `-ImplicitCastExpr 0x1c457f98ed8 <col:21> 'unsigned long' <IntegralCast>
|   |         | | |   `-IntegerLiteral 0x1c457f98e98 <col:21> 'int' 2097152
|   |         | | `-ReturnStmt 0x1c457f98f50 <line:90:13, col:21>
|   |         | |   `-UnaryOperator 0x1c457f98f38 <col:20, col:21> 'int' prefix '-'
|   |         | |     `-IntegerLiteral 0x1c457f98f10 <col:21> 'int' 4
|   |         | `-BinaryOperator 0x1c457f98fc0 <line:91:9, col:15> 'int' '='
|   |         |   |-DeclRefExpr 0x1c457f98f78 <col:9> 'int' lvalue Var 0x1c457f94458 'ret' 'int'
|   |         |   `-IntegerLiteral 0x1c457f98f98 <col:15> 'int' 5
|   |         `-IfStmt 0x1c457f9a7a8 <line:92:12, line:111:17> has_else
|   |           |-BinaryOperator 0x1c457f99148 <line:92:16, col:31> 'int' '=='
|   |           | |-ParenExpr 0x1c457f99100 <col:16, col:26> 'int'
|   |           | | `-BinaryOperator 0x1c457f990e0 <col:17, col:22> 'int' '&'
|   |           | |   |-ImplicitCastExpr 0x1c457f990c8 <col:17, col:18> 'int' <IntegralCast>
|   |           | |   | `-ImplicitCastExpr 0x1c457f990b0 <col:17, col:18> 'unsigned char' <LValueToRValue>
|   |           | |   |   `-UnaryOperator 0x1c457f99070 <col:17, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |     `-ImplicitCastExpr 0x1c457f99058 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | |   |       `-DeclRefExpr 0x1c457f99038 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | |   `-IntegerLiteral 0x1c457f99088 <col:22> 'int' 254
|   |           | `-IntegerLiteral 0x1c457f99120 <col:31> 'int' 252
|   |           |-CompoundStmt 0x1c457f9a6f8 <col:37, line:110:5>
|   |           | |-IfStmt 0x1c457f99238 <line:93:9, line:94:21>
|   |           | | |-BinaryOperator 0x1c457f991c8 <line:93:13, col:19> 'int' '<'
|   |           | | | |-ImplicitCastExpr 0x1c457f991b0 <col:13> 'int' <LValueToRValue>
|   |           | | | | `-DeclRefExpr 0x1c457f99168 <col:13> 'int' lvalue ParmVar 0x1c457f94060 'len' 'int'
|   |           | | | `-IntegerLiteral 0x1c457f99188 <col:19> 'int' 6
|   |           | | `-ReturnStmt 0x1c457f99228 <line:94:13, col:21>
|   |           | |   `-UnaryOperator 0x1c457f99210 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1c457f991e8 <col:21> 'int' 1
|   |           | |-IfStmt 0x1c457f99ac0 <line:95:9, line:100:21>
|   |           | | |-BinaryOperator 0x1c457f99a50 <line:95:13, line:99:38> 'int' '||'
|   |           | | | |-BinaryOperator 0x1c457f99890 <line:95:13, line:98:38> 'int' '||'
|   |           | | | | |-BinaryOperator 0x1c457f996f0 <line:95:13, line:97:38> 'int' '||'
|   |           | | | | | |-BinaryOperator 0x1c457f99550 <line:95:13, line:96:38> 'int' '||'
|   |           | | | | | | |-ParenExpr 0x1c457f993b0 <line:95:13, col:35> 'int'
|   |           | | | | | | | `-BinaryOperator 0x1c457f99390 <col:14, col:31> 'int' '!='
|   |           | | | | | | |   |-ParenExpr 0x1c457f99348 <col:14, col:26> 'int'
|   |           | | | | | | |   | `-BinaryOperator 0x1c457f99328 <col:15, col:22> 'int' '&'
|   |           | | | | | | |   |   |-ImplicitCastExpr 0x1c457f99310 <col:15, col:18> 'int' <IntegralCast>
|   |           | | | | | | |   |   | `-ImplicitCastExpr 0x1c457f992f8 <col:15, col:18> 'unsigned char' <LValueToRValue>
|   |           | | | | | | |   |   |   `-ArraySubscriptExpr 0x1c457f992b0 <col:15, col:18> 'const unsigned char' lvalue
|   |           | | | | | | |   |   |     |-ImplicitCastExpr 0x1c457f99298 <col:15> 'const unsigned char *' <LValueToRValue>
|   |           | | | | | | |   |   |     | `-DeclRefExpr 0x1c457f99250 <col:15> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | | | | | | |   |   |     `-IntegerLiteral 0x1c457f99270 <col:17> 'int' 1
|   |           | | | | | | |   |   `-IntegerLiteral 0x1c457f992d0 <col:22> 'int' 192
|   |           | | | | | | |   `-IntegerLiteral 0x1c457f99368 <col:31> 'int' 128
|   |           | | | | | | `-ParenExpr 0x1c457f99530 <line:96:16, col:38> 'int'
|   |           | | | | | |   `-BinaryOperator 0x1c457f99510 <col:17, col:34> 'int' '!='
|   |           | | | | | |     |-ParenExpr 0x1c457f994c8 <col:17, col:29> 'int'
|   |           | | | | | |     | `-BinaryOperator 0x1c457f994a8 <col:18, col:25> 'int' '&'
|   |           | | | | | |     |   |-ImplicitCastExpr 0x1c457f99490 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | | | |     |   | `-ImplicitCastExpr 0x1c457f99478 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | | | |     |   |   `-ArraySubscriptExpr 0x1c457f99430 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | | | |     |   |     |-ImplicitCastExpr 0x1c457f99418 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | | | |     |   |     | `-DeclRefExpr 0x1c457f993d0 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | | | | | |     |   |     `-IntegerLiteral 0x1c457f993f0 <col:20> 'int' 2
|   |           | | | | | |     |   `-IntegerLiteral 0x1c457f99450 <col:25> 'int' 192
|   |           | | | | | |     `-IntegerLiteral 0x1c457f994e8 <col:34> 'int' 128
|   |           | | | | | `-ParenExpr 0x1c457f996d0 <line:97:16, col:38> 'int'
|   |           | | | | |   `-BinaryOperator 0x1c457f996b0 <col:17, col:34> 'int' '!='
|   |           | | | | |     |-ParenExpr 0x1c457f99668 <col:17, col:29> 'int'
|   |           | | | | |     | `-BinaryOperator 0x1c457f99648 <col:18, col:25> 'int' '&'
|   |           | | | | |     |   |-ImplicitCastExpr 0x1c457f99630 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | | |     |   | `-ImplicitCastExpr 0x1c457f99618 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | | |     |   |   `-ArraySubscriptExpr 0x1c457f995d0 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | | |     |   |     |-ImplicitCastExpr 0x1c457f995b8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | | |     |   |     | `-DeclRefExpr 0x1c457f99570 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | | | | |     |   |     `-IntegerLiteral 0x1c457f99590 <col:20> 'int' 3
|   |           | | | | |     |   `-IntegerLiteral 0x1c457f995f0 <col:25> 'int' 192
|   |           | | | | |     `-IntegerLiteral 0x1c457f99688 <col:34> 'int' 128
|   |           | | | | `-ParenExpr 0x1c457f99870 <line:98:16, col:38> 'int'
|   |           | | | |   `-BinaryOperator 0x1c457f99850 <col:17, col:34> 'int' '!='
|   |           | | | |     |-ParenExpr 0x1c457f99808 <col:17, col:29> 'int'
|   |           | | | |     | `-BinaryOperator 0x1c457f997e8 <col:18, col:25> 'int' '&'
|   |           | | | |     |   |-ImplicitCastExpr 0x1c457f997d0 <col:18, col:21> 'int' <IntegralCast>
|   |           | | | |     |   | `-ImplicitCastExpr 0x1c457f997b8 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | | |     |   |   `-ArraySubscriptExpr 0x1c457f99770 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | | |     |   |     |-ImplicitCastExpr 0x1c457f99758 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | | |     |   |     | `-DeclRefExpr 0x1c457f99710 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | | | |     |   |     `-IntegerLiteral 0x1c457f99730 <col:20> 'int' 4
|   |           | | | |     |   `-IntegerLiteral 0x1c457f99790 <col:25> 'int' 192
|   |           | | | |     `-IntegerLiteral 0x1c457f99828 <col:34> 'int' 128
|   |           | | | `-ParenExpr 0x1c457f99a30 <line:99:16, col:38> 'int'
|   |           | | |   `-BinaryOperator 0x1c457f99a10 <col:17, col:34> 'int' '!='
|   |           | | |     |-ParenExpr 0x1c457f999c8 <col:17, col:29> 'int'
|   |           | | |     | `-BinaryOperator 0x1c457f999a8 <col:18, col:25> 'int' '&'
|   |           | | |     |   |-ImplicitCastExpr 0x1c457f99990 <col:18, col:21> 'int' <IntegralCast>
|   |           | | |     |   | `-ImplicitCastExpr 0x1c457f99958 <col:18, col:21> 'unsigned char' <LValueToRValue>
|   |           | | |     |   |   `-ArraySubscriptExpr 0x1c457f99910 <col:18, col:21> 'const unsigned char' lvalue
|   |           | | |     |   |     |-ImplicitCastExpr 0x1c457f998f8 <col:18> 'const unsigned char *' <LValueToRValue>
|   |           | | |     |   |     | `-DeclRefExpr 0x1c457f998b0 <col:18> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | | |     |   |     `-IntegerLiteral 0x1c457f998d0 <col:20> 'int' 5
|   |           | | |     |   `-IntegerLiteral 0x1c457f99930 <col:25> 'int' 192
|   |           | | |     `-IntegerLiteral 0x1c457f999e8 <col:34> 'int' 128
|   |           | | `-ReturnStmt 0x1c457f99ab0 <line:100:13, col:21>
|   |           | |   `-UnaryOperator 0x1c457f99a98 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1c457f99a70 <col:21> 'int' 3
|   |           | |-BinaryOperator 0x1c457f99ca8 <line:101:9, col:50> 'unsigned long' '='
|   |           | | |-DeclRefExpr 0x1c457f99ad8 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1c457f99c88 <col:17, col:50> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1c457f99c40 <col:17, col:45> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1c457f99c18 <col:18, col:44> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1c457f99bf8 <col:33, col:44> 'int'
|   |           | |   |     `-BinaryOperator 0x1c457f99ba0 <col:34, col:41> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1c457f99b88 <col:34, col:36> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1c457f99b70 <col:34, col:36> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1c457f99b30 <col:34, col:36> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1c457f99b18 <col:35, col:36> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1c457f99af8 <col:35> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1c457f99b48 <col:41> 'int' 1
|   |           | |   `-IntegerLiteral 0x1c457f99c60 <col:50> 'int' 30
|   |           | |-CompoundAssignOperator 0x1c457f99e98 <line:102:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1c457f99cc8 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1c457f99e78 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1c457f99e30 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1c457f99e08 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1c457f99de8 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1c457f99d90 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1c457f99d78 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1c457f99d60 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1c457f99d20 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1c457f99d08 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1c457f99ce8 <col:36> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1c457f99d38 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1c457f99e50 <col:52> 'int' 24
|   |           | |-CompoundAssignOperator 0x1c457f9a098 <line:103:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1c457f99ec8 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1c457f9a078 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1c457f9a030 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1c457f9a008 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1c457f99fe8 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1c457f99f90 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1c457f99f78 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1c457f99f60 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1c457f99f20 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1c457f99f08 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1c457f99ee8 <col:36> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1c457f99f38 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1c457f9a050 <col:52> 'int' 18
|   |           | |-CompoundAssignOperator 0x1c457f9a298 <line:104:9, col:52> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1c457f9a0c8 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |           | | `-BinaryOperator 0x1c457f9a278 <col:18, col:52> 'unsigned long' '<<'
|   |           | |   |-ParenExpr 0x1c457f9a230 <col:18, col:47> 'unsigned long'
|   |           | |   | `-CStyleCastExpr 0x1c457f9a208 <col:19, col:46> 'unsigned long' <IntegralCast>
|   |           | |   |   `-ParenExpr 0x1c457f9a1e8 <col:34, col:46> 'int'
|   |           | |   |     `-BinaryOperator 0x1c457f9a190 <col:35, col:42> 'int' '&'
|   |           | |   |       |-ImplicitCastExpr 0x1c457f9a178 <col:35, col:37> 'int' <IntegralCast>
|   |           | |   |       | `-ImplicitCastExpr 0x1c457f9a160 <col:35, col:37> 'unsigned char' <LValueToRValue>
|   |           | |   |       |   `-UnaryOperator 0x1c457f9a120 <col:35, col:37> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |   |       |     `-UnaryOperator 0x1c457f9a108 <col:36, col:37> 'const unsigned char *' postfix '++'
|   |           | |   |       |       `-DeclRefExpr 0x1c457f9a0e8 <col:36> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | |   |       `-IntegerLiteral 0x1c457f9a138 <col:42> 'int' 63
|   |           | |   `-IntegerLiteral 0x1c457f9a250 <col:52> 'int' 12
|   |           | |-CompoundAssignOperator 0x1c457f9a430 <line:105:9, col:35> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1c457f9a2c8 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |           | | `-ImplicitCastExpr 0x1c457f9a418 <col:18, col:35> 'unsigned long' <IntegralCast>
|   |           | |   `-BinaryOperator 0x1c457f9a3f8 <col:18, col:35> 'int' '<<'
|   |           | |     |-ParenExpr 0x1c457f9a3b0 <col:18, col:30> 'int'
|   |           | |     | `-BinaryOperator 0x1c457f9a390 <col:19, col:26> 'int' '&'
|   |           | |     |   |-ImplicitCastExpr 0x1c457f9a378 <col:19, col:21> 'int' <IntegralCast>
|   |           | |     |   | `-ImplicitCastExpr 0x1c457f9a360 <col:19, col:21> 'unsigned char' <LValueToRValue>
|   |           | |     |   |   `-UnaryOperator 0x1c457f9a320 <col:19, col:21> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |     |   |     `-UnaryOperator 0x1c457f9a308 <col:20, col:21> 'const unsigned char *' postfix '++'
|   |           | |     |   |       `-DeclRefExpr 0x1c457f9a2e8 <col:20> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | |     |   `-IntegerLiteral 0x1c457f9a338 <col:26> 'int' 63
|   |           | |     `-IntegerLiteral 0x1c457f9a3d0 <col:35> 'int' 6
|   |           | |-CompoundAssignOperator 0x1c457f9a560 <line:106:9, col:25> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |           | | |-DeclRefExpr 0x1c457f9a460 <col:9> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |           | | `-ImplicitCastExpr 0x1c457f9a548 <col:18, col:25> 'unsigned long' <IntegralCast>
|   |           | |   `-BinaryOperator 0x1c457f9a528 <col:18, col:25> 'int' '&'
|   |           | |     |-ImplicitCastExpr 0x1c457f9a510 <col:18, col:20> 'int' <IntegralCast>
|   |           | |     | `-ImplicitCastExpr 0x1c457f9a4f8 <col:18, col:20> 'unsigned char' <LValueToRValue>
|   |           | |     |   `-UnaryOperator 0x1c457f9a4b8 <col:18, col:20> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |           | |     |     `-UnaryOperator 0x1c457f9a4a0 <col:19, col:20> 'const unsigned char *' postfix '++'
|   |           | |     |       `-DeclRefExpr 0x1c457f9a480 <col:19> 'const unsigned char *' lvalue Var 0x1c457f94328 'p' 'const unsigned char *'
|   |           | |     `-IntegerLiteral 0x1c457f9a4d0 <col:25> 'int' 63
|   |           | |-IfStmt 0x1c457f9a678 <line:107:9, line:108:21>
|   |           | | |-BinaryOperator 0x1c457f9a608 <line:107:13, col:21> 'int' '<'
|   |           | | | |-ImplicitCastExpr 0x1c457f9a5d8 <col:13> 'unsigned long' <LValueToRValue>
|   |           | | | | `-DeclRefExpr 0x1c457f9a590 <col:13> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   |           | | | `-ImplicitCastExpr 0x1c457f9a5f0 <col:21> 'unsigned long' <IntegralCast>
|   |           | | |   `-IntegerLiteral 0x1c457f9a5b0 <col:21> 'int' 67108864
|   |           | | `-ReturnStmt 0x1c457f9a668 <line:108:13, col:21>
|   |           | |   `-UnaryOperator 0x1c457f9a650 <col:20, col:21> 'int' prefix '-'
|   |           | |     `-IntegerLiteral 0x1c457f9a628 <col:21> 'int' 4
|   |           | `-BinaryOperator 0x1c457f9a6d8 <line:109:9, col:15> 'int' '='
|   |           |   |-DeclRefExpr 0x1c457f9a690 <col:9> 'int' lvalue Var 0x1c457f94458 'ret' 'int'
|   |           |   `-IntegerLiteral 0x1c457f9a6b0 <col:15> 'int' 6
|   |           `-ReturnStmt 0x1c457f9a798 <line:111:9, col:17>
|   |             `-UnaryOperator 0x1c457f9a780 <col:16, col:17> 'int' prefix '-'
|   |               `-IntegerLiteral 0x1c457f9a758 <col:17> 'int' 2
|   |-BinaryOperator 0x1c457f9a920 <line:112:5, col:12> 'unsigned long' '='
|   | |-UnaryOperator 0x1c457f9a8d0 <col:5, col:6> 'unsigned long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1c457f9a8b8 <col:6> 'unsigned long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1c457f9a898 <col:6> 'unsigned long *' lvalue ParmVar 0x1c457f94110 'val' 'unsigned long *'
|   | `-ImplicitCastExpr 0x1c457f9a908 <col:12> 'unsigned long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1c457f9a8e8 <col:12> 'unsigned long' lvalue Var 0x1c457f943c0 'value' 'unsigned long'
|   `-ReturnStmt 0x1c457f9a978 <line:113:5, col:12>
|     `-ImplicitCastExpr 0x1c457f9a960 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1c457f9a940 <col:12> 'int' lvalue Var 0x1c457f94458 'ret' 'int'
`-FunctionDecl 0x1c457fea2f0 <line:124:1, line:188:1> line:124:5 UTF8_putc 'int (unsigned char *, int, unsigned long)'
  |-ParmVarDecl 0x1c457fea0c0 <col:15, col:30> col:30 used str 'unsigned char *'
  |-ParmVarDecl 0x1c457fea140 <col:35, col:39> col:39 used len 'int'
  |-ParmVarDecl 0x1c457fea1c0 <col:44, col:58> col:58 used value 'unsigned long'
  `-CompoundStmt 0x1c457fef2a8 <line:125:1, line:188:1>
    |-IfStmt 0x1c457fea560 <line:126:5, line:129:17> has_else
    | |-UnaryOperator 0x1c457fea3f8 <line:126:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1c457fea3e0 <col:10> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1c457fea3c0 <col:10> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    | |-BinaryOperator 0x1c457fea458 <line:127:9, col:15> 'int' '='
    | | |-DeclRefExpr 0x1c457fea410 <col:9> 'int' lvalue ParmVar 0x1c457fea140 'len' 'int'
    | | `-IntegerLiteral 0x1c457fea430 <col:15> 'int' 6
    | `-IfStmt 0x1c457fea548 <line:128:10, line:129:17>
    |   |-BinaryOperator 0x1c457fea4d8 <line:128:14, col:21> 'int' '<='
    |   | |-ImplicitCastExpr 0x1c457fea4c0 <col:14> 'int' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1c457fea478 <col:14> 'int' lvalue ParmVar 0x1c457fea140 'len' 'int'
    |   | `-IntegerLiteral 0x1c457fea498 <col:21> 'int' 0
    |   `-ReturnStmt 0x1c457fea538 <line:129:9, col:17>
    |     `-UnaryOperator 0x1c457fea520 <col:16, col:17> 'int' prefix '-'
    |       `-IntegerLiteral 0x1c457fea4f8 <col:17> 'int' 1
    |-IfStmt 0x1c457fea7b0 <line:130:5, line:134:5>
    | |-BinaryOperator 0x1c457fea600 <line:130:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1c457fea5d0 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c457fea588 <col:9> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1c457fea5e8 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1c457fea5a8 <col:17> 'int' 128
    | `-CompoundStmt 0x1c457fea790 <col:23, line:134:5>
    |   |-IfStmt 0x1c457fea740 <line:131:9, line:132:35>
    |   | |-ImplicitCastExpr 0x1c457fea640 <line:131:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1c457fea620 <col:13> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   | `-BinaryOperator 0x1c457fea720 <line:132:13, col:35> 'unsigned char' '='
    |   |   |-UnaryOperator 0x1c457fea690 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x1c457fea678 <col:14> 'unsigned char *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1c457fea658 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |   `-CStyleCastExpr 0x1c457fea6f8 <col:20, col:35> 'unsigned char' <IntegralCast>
    |   |     `-ImplicitCastExpr 0x1c457fea6e0 <col:35> 'unsigned long' <LValueToRValue> part_of_explicit_cast
    |   |       `-DeclRefExpr 0x1c457fea6a8 <col:35> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   `-ReturnStmt 0x1c457fea780 <line:133:9, col:16>
    |     `-IntegerLiteral 0x1c457fea758 <col:16> 'int' 1
    |-IfStmt 0x1c457feae90 <line:135:5, line:143:5>
    | |-BinaryOperator 0x1c457fea840 <line:135:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1c457fea810 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c457fea7c8 <col:9> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1c457fea828 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1c457fea7e8 <col:17> 'int' 2048
    | `-CompoundStmt 0x1c457feae68 <col:24, line:143:5>
    |   |-IfStmt 0x1c457fea930 <line:136:9, line:137:21>
    |   | |-BinaryOperator 0x1c457fea8c0 <line:136:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1c457fea8a8 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1c457fea860 <col:13> 'int' lvalue ParmVar 0x1c457fea140 'len' 'int'
    |   | | `-IntegerLiteral 0x1c457fea880 <col:19> 'int' 2
    |   | `-ReturnStmt 0x1c457fea920 <line:137:13, col:21>
    |   |   `-UnaryOperator 0x1c457fea908 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1c457fea8e0 <col:21> 'int' 1
    |   |-IfStmt 0x1c457feae18 <line:138:9, line:141:9>
    |   | |-ImplicitCastExpr 0x1c457fea968 <line:138:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1c457fea948 <col:13> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1c457feadf8 <col:18, line:141:9>
    |   |   |-BinaryOperator 0x1c457feabd0 <line:139:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1c457fea9b8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1c457fea9a0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1c457fea980 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1c457feaba8 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1c457feab88 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1c457feab30 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1c457feaad0 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1c457feaab0 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1c457feaa50 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1c457feaa30 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1c457feaa18 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1c457fea9d0 <col:40> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1c457fea9f0 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1c457feaa98 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1c457feaa70 <col:54> 'int' 31
    |   |   |       `-ImplicitCastExpr 0x1c457feab18 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1c457feaaf0 <col:62> 'int' 192
    |   |   `-BinaryOperator 0x1c457feadd8 <line:140:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1c457feac28 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1c457feac10 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1c457feabf0 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1c457feadb0 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1c457fead90 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1c457fead38 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1c457feacd8 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1c457feacb8 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1c457feac88 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1c457feac40 <col:37> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1c457feaca0 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1c457feac60 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1c457fead20 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1c457feacf8 <col:53> 'int' 128
    |   `-ReturnStmt 0x1c457feae58 <line:142:9, col:16>
    |     `-IntegerLiteral 0x1c457feae30 <col:16> 'int' 2
    |-IfStmt 0x1c457fec810 <line:144:5, line:153:5>
    | |-BinaryOperator 0x1c457feaf20 <line:144:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1c457feaef0 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c457feaea8 <col:9> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1c457feaf08 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1c457feaec8 <col:17> 'int' 65536
    | `-CompoundStmt 0x1c457fec7e8 <col:26, line:153:5>
    |   |-IfStmt 0x1c457feb010 <line:145:9, line:146:21>
    |   | |-BinaryOperator 0x1c457feafa0 <line:145:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1c457feaf88 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1c457feaf40 <col:13> 'int' lvalue ParmVar 0x1c457fea140 'len' 'int'
    |   | | `-IntegerLiteral 0x1c457feaf60 <col:19> 'int' 3
    |   | `-ReturnStmt 0x1c457feb000 <line:146:13, col:21>
    |   |   `-UnaryOperator 0x1c457feafe8 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1c457feafc0 <col:21> 'int' 1
    |   |-IfStmt 0x1c457fec798 <line:147:9, line:151:9>
    |   | |-ImplicitCastExpr 0x1c457fec070 <line:147:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1c457fec050 <col:13> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1c457fec770 <col:18, line:151:9>
    |   |   |-BinaryOperator 0x1c457fec2d8 <line:148:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1c457fec0c0 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1c457fec0a8 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1c457fec088 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1c457fec2b0 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1c457fec290 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1c457fec238 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1c457fec1d8 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1c457fec1b8 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1c457fec158 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1c457fec138 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1c457fec120 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1c457fec0d8 <col:40> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1c457fec0f8 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1c457fec1a0 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1c457fec178 <col:55> 'int' 15
    |   |   |       `-ImplicitCastExpr 0x1c457fec220 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1c457fec1f8 <col:62> 'int' 224
    |   |   |-BinaryOperator 0x1c457fec548 <line:149:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1c457fec330 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1c457fec318 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1c457fec2f8 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1c457fec520 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1c457fec500 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1c457fec4a8 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1c457fec448 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1c457fec428 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1c457fec3c8 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1c457fec3a8 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1c457fec390 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1c457fec348 <col:40> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1c457fec368 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1c457fec410 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1c457fec3e8 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1c457fec490 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1c457fec468 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1c457fec750 <line:150:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1c457fec5a0 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1c457fec588 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1c457fec568 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1c457fec728 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1c457fec708 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1c457fec6b0 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1c457fec650 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1c457fec630 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1c457fec600 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1c457fec5b8 <col:37> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1c457fec618 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1c457fec5d8 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1c457fec698 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1c457fec670 <col:53> 'int' 128
    |   `-ReturnStmt 0x1c457fec7d8 <line:152:9, col:16>
    |     `-IntegerLiteral 0x1c457fec7b0 <col:16> 'int' 3
    |-IfStmt 0x1c457fe73b0 <line:154:5, line:164:5>
    | |-BinaryOperator 0x1c457fec8a0 <line:154:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1c457fec870 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c457fec828 <col:9> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1c457fec888 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1c457fec848 <col:17> 'int' 2097152
    | `-CompoundStmt 0x1c457fe7388 <col:27, line:164:5>
    |   |-IfStmt 0x1c457fec990 <line:155:9, line:156:21>
    |   | |-BinaryOperator 0x1c457fec920 <line:155:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1c457fec908 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1c457fec8c0 <col:13> 'int' lvalue ParmVar 0x1c457fea140 'len' 'int'
    |   | | `-IntegerLiteral 0x1c457fec8e0 <col:19> 'int' 4
    |   | `-ReturnStmt 0x1c457fec980 <line:156:13, col:21>
    |   |   `-UnaryOperator 0x1c457fec968 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1c457fec940 <col:21> 'int' 1
    |   |-IfStmt 0x1c457fe7338 <line:157:9, line:162:9>
    |   | |-ImplicitCastExpr 0x1c457fec9c8 <line:157:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1c457fec9a8 <col:13> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1c457fe7308 <col:18, line:162:9>
    |   |   |-BinaryOperator 0x1c457fecc30 <line:158:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1c457feca18 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1c457feca00 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1c457fec9e0 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1c457fecc08 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1c457fecbe8 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1c457fecb90 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1c457fecb30 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1c457fecb10 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1c457fecab0 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1c457feca90 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1c457feca78 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1c457feca30 <col:40> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1c457feca50 <col:49> 'int' 18
    |   |   |       |   `-ImplicitCastExpr 0x1c457fecaf8 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1c457fecad0 <col:55> 'int' 7
    |   |   |       `-ImplicitCastExpr 0x1c457fecb78 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1c457fecb50 <col:62> 'int' 240
    |   |   |-BinaryOperator 0x1c457fecea0 <line:159:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1c457fecc88 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1c457fecc70 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1c457fecc50 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1c457fece78 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1c457fece58 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1c457fece00 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1c457fecda0 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1c457fecd80 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1c457fecd20 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1c457fecd00 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1c457fecce8 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1c457fecca0 <col:40> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1c457feccc0 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1c457fecd68 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1c457fecd40 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1c457fecde8 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1c457fecdc0 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1c457fe70e0 <line:160:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1c457fecef8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1c457fecee0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1c457fecec0 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1c457fe70b8 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1c457fe7098 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1c457fe7040 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1c457fed010 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1c457fecff0 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1c457fecf90 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1c457fecf70 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1c457fecf58 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1c457fecf10 <col:40> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1c457fecf30 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1c457fecfd8 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1c457fecfb0 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1c457fe7028 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1c457fe7000 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1c457fe72e8 <line:161:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1c457fe7138 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1c457fe7120 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1c457fe7100 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1c457fe72c0 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1c457fe72a0 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1c457fe7248 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1c457fe71e8 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1c457fe71c8 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1c457fe7198 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1c457fe7150 <col:37> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1c457fe71b0 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1c457fe7170 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1c457fe7230 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1c457fe7208 <col:53> 'int' 128
    |   `-ReturnStmt 0x1c457fe7378 <line:163:9, col:16>
    |     `-IntegerLiteral 0x1c457fe7350 <col:16> 'int' 4
    |-IfStmt 0x1c457feb248 <line:165:5, line:176:5>
    | |-BinaryOperator 0x1c457fe7440 <line:165:9, col:17> 'int' '<'
    | | |-ImplicitCastExpr 0x1c457fe7410 <col:9> 'unsigned long' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c457fe73c8 <col:9> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    | | `-ImplicitCastExpr 0x1c457fe7428 <col:17> 'unsigned long' <IntegralCast>
    | |   `-IntegerLiteral 0x1c457fe73e8 <col:17> 'int' 67108864
    | `-CompoundStmt 0x1c457feb220 <col:28, line:176:5>
    |   |-IfStmt 0x1c457fe7530 <line:166:9, line:167:21>
    |   | |-BinaryOperator 0x1c457fe74c0 <line:166:13, col:19> 'int' '<'
    |   | | |-ImplicitCastExpr 0x1c457fe74a8 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x1c457fe7460 <col:13> 'int' lvalue ParmVar 0x1c457fea140 'len' 'int'
    |   | | `-IntegerLiteral 0x1c457fe7480 <col:19> 'int' 5
    |   | `-ReturnStmt 0x1c457fe7520 <line:167:13, col:21>
    |   |   `-UnaryOperator 0x1c457fe7508 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1c457fe74e0 <col:21> 'int' 1
    |   |-IfStmt 0x1c457feb1d0 <line:168:9, line:174:9>
    |   | |-ImplicitCastExpr 0x1c457fe7568 <line:168:13> 'unsigned char *' <LValueToRValue>
    |   | | `-DeclRefExpr 0x1c457fe7548 <col:13> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   | `-CompoundStmt 0x1c457feb198 <col:18, line:174:9>
    |   |   |-BinaryOperator 0x1c457fe77d0 <line:169:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1c457fe75b8 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1c457fe75a0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1c457fe7580 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1c457fe77a8 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1c457fe7788 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1c457fe7730 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1c457fe76d0 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1c457fe76b0 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1c457fe7650 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1c457fe7630 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1c457fe7618 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1c457fe75d0 <col:40> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1c457fe75f0 <col:49> 'int' 24
    |   |   |       |   `-ImplicitCastExpr 0x1c457fe7698 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1c457fe7670 <col:55> 'int' 3
    |   |   |       `-ImplicitCastExpr 0x1c457fe7718 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1c457fe76f0 <col:62> 'int' 248
    |   |   |-BinaryOperator 0x1c457fe7a40 <line:170:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1c457fe7828 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1c457fe7810 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1c457fe77f0 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1c457fe7a18 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1c457fe79f8 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1c457fe79a0 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1c457fe7940 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1c457fe7920 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1c457fe78c0 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1c457fe78a0 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1c457fe7888 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1c457fe7840 <col:40> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1c457fe7860 <col:49> 'int' 18
    |   |   |       |   `-ImplicitCastExpr 0x1c457fe7908 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1c457fe78e0 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1c457fe7988 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1c457fe7960 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1c457fe7cb0 <line:171:13, col:67> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1c457fe7a98 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1c457fe7a80 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1c457fe7a60 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1c457fe7c88 <col:22, col:67> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1c457fe7c68 <col:37, col:67> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1c457fe7c10 <col:38, col:63> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1c457fe7bb0 <col:38, col:59> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1c457fe7b90 <col:39, col:55> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1c457fe7b30 <col:39, col:51> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1c457fe7b10 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1c457fe7af8 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1c457fe7ab0 <col:40> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1c457fe7ad0 <col:49> 'int' 12
    |   |   |       |   `-ImplicitCastExpr 0x1c457fe7b78 <col:55> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1c457fe7b50 <col:55> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1c457fe7bf8 <col:63> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1c457fe7bd0 <col:63> 'int' 128
    |   |   |-BinaryOperator 0x1c457fe7f20 <line:172:13, col:66> 'unsigned char' '='
    |   |   | |-UnaryOperator 0x1c457fe7d08 <col:13, col:17> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |   | | `-UnaryOperator 0x1c457fe7cf0 <col:14, col:17> 'unsigned char *' postfix '++'
    |   |   | |   `-DeclRefExpr 0x1c457fe7cd0 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |   | `-CStyleCastExpr 0x1c457fe7ef8 <col:22, col:66> 'unsigned char' <IntegralCast>
    |   |   |   `-ParenExpr 0x1c457fe7ed8 <col:37, col:66> 'unsigned long'
    |   |   |     `-BinaryOperator 0x1c457fe7e80 <col:38, col:62> 'unsigned long' '|'
    |   |   |       |-ParenExpr 0x1c457fe7e20 <col:38, col:58> 'unsigned long'
    |   |   |       | `-BinaryOperator 0x1c457fe7e00 <col:39, col:54> 'unsigned long' '&'
    |   |   |       |   |-ParenExpr 0x1c457fe7da0 <col:39, col:50> 'unsigned long'
    |   |   |       |   | `-BinaryOperator 0x1c457fe7d80 <col:40, col:49> 'unsigned long' '>>'
    |   |   |       |   |   |-ImplicitCastExpr 0x1c457fe7d68 <col:40> 'unsigned long' <LValueToRValue>
    |   |   |       |   |   | `-DeclRefExpr 0x1c457fe7d20 <col:40> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |   |       |   |   `-IntegerLiteral 0x1c457fe7d40 <col:49> 'int' 6
    |   |   |       |   `-ImplicitCastExpr 0x1c457fe7de8 <col:54> 'unsigned long' <IntegralCast>
    |   |   |       |     `-IntegerLiteral 0x1c457fe7dc0 <col:54> 'int' 63
    |   |   |       `-ImplicitCastExpr 0x1c457fe7e68 <col:62> 'unsigned long' <IntegralCast>
    |   |   |         `-IntegerLiteral 0x1c457fe7e40 <col:62> 'int' 128
    |   |   `-BinaryOperator 0x1c457feb178 <line:173:13, col:57> 'unsigned char' '='
    |   |     |-UnaryOperator 0x1c457fe7f78 <col:13, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
    |   |     | `-ImplicitCastExpr 0x1c457fe7f60 <col:14> 'unsigned char *' <LValueToRValue>
    |   |     |   `-DeclRefExpr 0x1c457fe7f40 <col:14> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   |     `-CStyleCastExpr 0x1c457feb150 <col:20, col:57> 'unsigned char' <IntegralCast>
    |   |       `-ParenExpr 0x1c457feb130 <col:35, col:57> 'unsigned long'
    |   |         `-BinaryOperator 0x1c457feb0d8 <col:36, col:53> 'unsigned long' '|'
    |   |           |-ParenExpr 0x1c457feb078 <col:36, col:49> 'unsigned long'
    |   |           | `-BinaryOperator 0x1c457feb058 <col:37, col:45> 'unsigned long' '&'
    |   |           |   |-ImplicitCastExpr 0x1c457fe7fd8 <col:37> 'unsigned long' <LValueToRValue>
    |   |           |   | `-DeclRefExpr 0x1c457fe7f90 <col:37> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |           |   `-ImplicitCastExpr 0x1c457feb040 <col:45> 'unsigned long' <IntegralCast>
    |   |           |     `-IntegerLiteral 0x1c457fe7fb0 <col:45> 'int' 63
    |   |           `-ImplicitCastExpr 0x1c457feb0c0 <col:53> 'unsigned long' <IntegralCast>
    |   |             `-IntegerLiteral 0x1c457feb098 <col:53> 'int' 128
    |   `-ReturnStmt 0x1c457feb210 <line:175:9, col:16>
    |     `-IntegerLiteral 0x1c457feb1e8 <col:16> 'int' 5
    |-IfStmt 0x1c457feb330 <line:177:5, line:178:17>
    | |-BinaryOperator 0x1c457feb2c0 <line:177:9, col:15> 'int' '<'
    | | |-ImplicitCastExpr 0x1c457feb2a8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x1c457feb260 <col:9> 'int' lvalue ParmVar 0x1c457fea140 'len' 'int'
    | | `-IntegerLiteral 0x1c457feb280 <col:15> 'int' 6
    | `-ReturnStmt 0x1c457feb320 <line:178:9, col:17>
    |   `-UnaryOperator 0x1c457feb308 <col:16, col:17> 'int' prefix '-'
    |     `-IntegerLiteral 0x1c457feb2e0 <col:17> 'int' 1
    |-IfStmt 0x1c457fef258 <line:179:5, line:186:5>
    | |-ImplicitCastExpr 0x1c457feb368 <line:179:9> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x1c457feb348 <col:9> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    | `-CompoundStmt 0x1c457fef218 <col:14, line:186:5>
    |   |-BinaryOperator 0x1c457feb5d0 <line:180:9, col:62> 'unsigned char' '='
    |   | |-UnaryOperator 0x1c457feb3b8 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1c457feb3a0 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1c457feb380 <col:10> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1c457feb5a8 <col:18, col:62> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1c457feb588 <col:33, col:62> 'unsigned long'
    |   |     `-BinaryOperator 0x1c457feb530 <col:34, col:58> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1c457feb4d0 <col:34, col:54> 'unsigned long'
    |   |       | `-BinaryOperator 0x1c457feb4b0 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1c457feb450 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1c457feb430 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1c457feb418 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1c457feb3d0 <col:36> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1c457feb3f0 <col:45> 'int' 30
    |   |       |   `-ImplicitCastExpr 0x1c457feb498 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1c457feb470 <col:51> 'int' 1
    |   |       `-ImplicitCastExpr 0x1c457feb518 <col:58> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1c457feb4f0 <col:58> 'int' 252
    |   |-BinaryOperator 0x1c457feb840 <line:181:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1c457feb628 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1c457feb610 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1c457feb5f0 <col:10> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1c457feb818 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1c457feb7f8 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1c457feb7a0 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1c457feb740 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1c457feb720 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1c457feb6c0 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1c457feb6a0 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1c457feb688 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1c457feb640 <col:36> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1c457feb660 <col:45> 'int' 24
    |   |       |   `-ImplicitCastExpr 0x1c457feb708 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1c457feb6e0 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1c457feb788 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1c457feb760 <col:59> 'int' 128
    |   |-BinaryOperator 0x1c457febab0 <line:182:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1c457feb898 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1c457feb880 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1c457feb860 <col:10> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1c457feba88 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1c457feba68 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1c457feba10 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1c457feb9b0 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1c457feb990 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1c457feb930 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1c457feb910 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1c457feb8f8 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1c457feb8b0 <col:36> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1c457feb8d0 <col:45> 'int' 18
    |   |       |   `-ImplicitCastExpr 0x1c457feb978 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1c457feb950 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1c457feb9f8 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1c457feb9d0 <col:59> 'int' 128
    |   |-BinaryOperator 0x1c457febd20 <line:183:9, col:63> 'unsigned char' '='
    |   | |-UnaryOperator 0x1c457febb08 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1c457febaf0 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1c457febad0 <col:10> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1c457febcf8 <col:18, col:63> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1c457febcd8 <col:33, col:63> 'unsigned long'
    |   |     `-BinaryOperator 0x1c457febc80 <col:34, col:59> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1c457febc20 <col:34, col:55> 'unsigned long'
    |   |       | `-BinaryOperator 0x1c457febc00 <col:35, col:51> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1c457febba0 <col:35, col:47> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1c457febb80 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1c457febb68 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1c457febb20 <col:36> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1c457febb40 <col:45> 'int' 12
    |   |       |   `-ImplicitCastExpr 0x1c457febbe8 <col:51> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1c457febbc0 <col:51> 'int' 63
    |   |       `-ImplicitCastExpr 0x1c457febc68 <col:59> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1c457febc40 <col:59> 'int' 128
    |   |-BinaryOperator 0x1c457febf90 <line:184:9, col:62> 'unsigned char' '='
    |   | |-UnaryOperator 0x1c457febd78 <col:9, col:13> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-UnaryOperator 0x1c457febd60 <col:10, col:13> 'unsigned char *' postfix '++'
    |   | |   `-DeclRefExpr 0x1c457febd40 <col:10> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |   | `-CStyleCastExpr 0x1c457febf68 <col:18, col:62> 'unsigned char' <IntegralCast>
    |   |   `-ParenExpr 0x1c457febf48 <col:33, col:62> 'unsigned long'
    |   |     `-BinaryOperator 0x1c457febef0 <col:34, col:58> 'unsigned long' '|'
    |   |       |-ParenExpr 0x1c457febe90 <col:34, col:54> 'unsigned long'
    |   |       | `-BinaryOperator 0x1c457febe70 <col:35, col:50> 'unsigned long' '&'
    |   |       |   |-ParenExpr 0x1c457febe10 <col:35, col:46> 'unsigned long'
    |   |       |   | `-BinaryOperator 0x1c457febdf0 <col:36, col:45> 'unsigned long' '>>'
    |   |       |   |   |-ImplicitCastExpr 0x1c457febdd8 <col:36> 'unsigned long' <LValueToRValue>
    |   |       |   |   | `-DeclRefExpr 0x1c457febd90 <col:36> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |   |       |   |   `-IntegerLiteral 0x1c457febdb0 <col:45> 'int' 6
    |   |       |   `-ImplicitCastExpr 0x1c457febe58 <col:50> 'unsigned long' <IntegralCast>
    |   |       |     `-IntegerLiteral 0x1c457febe30 <col:50> 'int' 63
    |   |       `-ImplicitCastExpr 0x1c457febed8 <col:58> 'unsigned long' <IntegralCast>
    |   |         `-IntegerLiteral 0x1c457febeb0 <col:58> 'int' 128
    |   `-BinaryOperator 0x1c457fef1f8 <line:185:9, col:53> 'unsigned char' '='
    |     |-UnaryOperator 0x1c457febfe8 <col:9, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
    |     | `-ImplicitCastExpr 0x1c457febfd0 <col:10> 'unsigned char *' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1c457febfb0 <col:10> 'unsigned char *' lvalue ParmVar 0x1c457fea0c0 'str' 'unsigned char *'
    |     `-CStyleCastExpr 0x1c457fef1d0 <col:16, col:53> 'unsigned char' <IntegralCast>
    |       `-ParenExpr 0x1c457fef1b0 <col:31, col:53> 'unsigned long'
    |         `-BinaryOperator 0x1c457fef158 <col:32, col:49> 'unsigned long' '|'
    |           |-ParenExpr 0x1c457fef0f8 <col:32, col:45> 'unsigned long'
    |           | `-BinaryOperator 0x1c457fef0d8 <col:33, col:41> 'unsigned long' '&'
    |           |   |-ImplicitCastExpr 0x1c457fef0a8 <col:33> 'unsigned long' <LValueToRValue>
    |           |   | `-DeclRefExpr 0x1c457fec000 <col:33> 'unsigned long' lvalue ParmVar 0x1c457fea1c0 'value' 'unsigned long'
    |           |   `-ImplicitCastExpr 0x1c457fef0c0 <col:41> 'unsigned long' <IntegralCast>
    |           |     `-IntegerLiteral 0x1c457fef080 <col:41> 'int' 63
    |           `-ImplicitCastExpr 0x1c457fef140 <col:49> 'unsigned long' <IntegralCast>
    |             `-IntegerLiteral 0x1c457fef118 <col:49> 'int' 128
    `-ReturnStmt 0x1c457fef298 <line:187:5, col:12>
      `-IntegerLiteral 0x1c457fef270 <col:12> 'int' 6
