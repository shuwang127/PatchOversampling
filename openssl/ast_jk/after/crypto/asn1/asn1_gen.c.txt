TranslationUnitDecl 0x27b16bece98 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x27b16bed730 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x27b16bed430 '__int128'
|-TypedefDecl 0x27b16bed7a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x27b16bed450 'unsigned __int128'
|-TypedefDecl 0x27b16bedad8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x27b16bed890 'struct __NSConstantString_tag'
|   `-Record 0x27b16bed7f8 '__NSConstantString_tag'
|-TypedefDecl 0x27b16bedb48 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x27b16bed070 'unsigned long long'
|-TypedefDecl 0x27b16bedbe0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x27b16bedba0 'char *'
|   `-BuiltinType 0x27b16becf30 'char'
|-TypedefDecl 0x27b16bedc50 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x27b16bedba0 'char *'
|   `-BuiltinType 0x27b16becf30 'char'
|-RecordDecl 0x27b16bedca8 <.//openssl//file_jk/after\crypto\asn1\asn1_gen.c:41:1, line:45:1> line:41:8 struct tag_name_st definition
| |-FieldDecl 0x27b16bedd78 <line:42:5, col:17> col:17 referenced strnam 'const char *'
| |-FieldDecl 0x27b16bedde8 <line:43:5, col:9> col:9 referenced len 'int'
| `-FieldDecl 0x27b16c51af0 <line:44:5, col:9> col:9 referenced tag 'int'
|-RecordDecl 0x27b16c51b48 <line:47:9, line:53:1> line:47:9 struct definition
| |-FieldDecl 0x27b16c51c18 <line:48:5, col:9> col:9 referenced exp_tag 'int'
| |-FieldDecl 0x27b16c51c88 <line:49:5, col:9> col:9 referenced exp_class 'int'
| |-FieldDecl 0x27b16c51cf8 <line:50:5, col:9> col:9 referenced exp_constructed 'int'
| |-FieldDecl 0x27b16c51d68 <line:51:5, col:9> col:9 referenced exp_pad 'int'
| `-FieldDecl 0x27b16c51dd8 <line:52:5, col:10> col:10 referenced exp_len 'long'
|-TypedefDecl 0x27b16c51e88 <line:47:1, line:53:3> col:3 referenced tag_exp_type 'struct tag_exp_type':'tag_exp_type'
| `-ElaboratedType 0x27b16c51e30 'struct tag_exp_type' sugar
|   `-RecordType 0x27b16c51be0 'tag_exp_type'
|     `-Record 0x27b16c51b48 ''
|-RecordDecl 0x27b16c51ef8 <line:55:9, line:63:1> line:55:9 struct definition
| |-FieldDecl 0x27b16c51fc8 <line:56:5, col:9> col:9 referenced imp_tag 'int'
| |-FieldDecl 0x27b16c52038 <line:57:5, col:9> col:9 referenced imp_class 'int'
| |-FieldDecl 0x27b16c520a8 <line:58:5, col:9> col:9 referenced utype 'int'
| |-FieldDecl 0x27b16c52118 <line:59:5, col:9> col:9 referenced format 'int'
| |-FieldDecl 0x27b16c52188 <line:60:5, col:17> col:17 referenced str 'const char *'
| |-FieldDecl 0x27b16c52348 <line:61:5, col:44> col:18 referenced exp_list 'tag_exp_type [20]'
| `-FieldDecl 0x27b16c523b8 <line:62:5, col:9> col:9 referenced exp_count 'int'
|-TypedefDecl 0x27b16c52468 <line:55:1, line:63:3> col:3 referenced tag_exp_arg 'struct tag_exp_arg':'tag_exp_arg'
| `-ElaboratedType 0x27b16c52410 'struct tag_exp_arg' sugar
|   `-RecordType 0x27b16c51f90 'tag_exp_arg'
|     `-Record 0x27b16c51ef8 ''
|-FunctionDecl 0x27b16c527a0 <line:65:1, line:66:40> line:65:19 invalid generate_v3 'int *(const char *, int *, int, int *)' static
| |-ParmVarDecl 0x27b16c524f0 <col:31, col:43> col:43 str 'const char *'
| |-ParmVarDecl 0x27b16c525a0 <col:48, col:60> col:60 invalid cnf 'int *'
| |-ParmVarDecl 0x27b16c52620 <col:65, col:69> col:69 depth 'int'
| `-ParmVarDecl 0x27b16c526a0 <line:66:31, col:36> col:36 perr 'int *'
|-FunctionDecl 0x27b16c52b00 <line:67:1, col:61> col:12 used bitstr_cb 'int (const char *, int, void *)' static
| |-ParmVarDecl 0x27b16c52878 <col:22, col:34> col:34 elem 'const char *'
| |-ParmVarDecl 0x27b16c528f8 <col:40, col:44> col:44 len 'int'
| `-ParmVarDecl 0x27b16c52978 <col:49, col:55> col:55 bitstr 'void *'
|-FunctionDecl 0x27b16c52e20 <line:68:1, col:59> col:12 used asn1_cb 'int (const char *, int, void *)' static
| |-ParmVarDecl 0x27b16c52c30 <col:20, col:32> col:32 elem 'const char *'
| |-ParmVarDecl 0x27b16c52cb0 <col:38, col:42> col:42 len 'int'
| `-ParmVarDecl 0x27b16c52d30 <col:47, col:53> col:53 bitstr 'void *'
|-FunctionDecl 0x27b16c53400 <line:69:1, line:70:67> line:69:12 used append_exp 'int (tag_exp_arg *, int, int, int, int, int)' static
| |-ParmVarDecl 0x27b16c52f78 <col:23, col:36> col:36 arg 'tag_exp_arg *'
| |-ParmVarDecl 0x27b16c52ff8 <col:41, col:45> col:45 exp_tag 'int'
| |-ParmVarDecl 0x27b16c53078 <col:54, col:58> col:58 exp_class 'int'
| |-ParmVarDecl 0x27b16c530f8 <line:70:23, col:27> col:27 exp_constructed 'int'
| |-ParmVarDecl 0x27b16c53178 <col:44, col:48> col:48 exp_pad 'int'
| `-ParmVarDecl 0x27b16c531f8 <col:57, col:61> col:61 imp_ok 'int'
|-FunctionDecl 0x27b16c537e0 <line:71:1, line:72:37> line:71:12 used parse_tagging 'int (const char *, int, int *, int *)' static
| |-ParmVarDecl 0x27b16c53500 <col:26, col:38> col:38 vstart 'const char *'
| |-ParmVarDecl 0x27b16c53580 <col:46, col:50> col:50 vlen 'int'
| |-ParmVarDecl 0x27b16c53600 <col:56, col:61> col:61 ptag 'int *'
| `-ParmVarDecl 0x27b16c53680 <line:72:26, col:31> col:31 pclass 'int *'
|-FunctionDecl 0x27b16c53c20 <line:73:1, line:74:50> line:73:19 invalid asn1_multi 'int *(int, const char *, int *, int, int *)' static
| |-ParmVarDecl 0x27b16c538d0 <col:30, col:34> col:34 utype 'int'
| |-ParmVarDecl 0x27b16c53950 <col:41, col:53> col:53 section 'const char *'
| |-ParmVarDecl 0x27b16c539d0 <col:62, col:74> col:74 invalid cnf 'int *'
| |-ParmVarDecl 0x27b16c53a50 <line:74:30, col:34> col:34 depth 'int'
| `-ParmVarDecl 0x27b16c53b10 <col:41, col:46> col:46 perr 'int *'
|-FunctionDecl 0x27b16c53f30 <line:75:1, col:71> col:19 invalid asn1_str2type 'int *(const char *, int, int)' static
| |-ParmVarDecl 0x27b16c53d00 <col:33, col:45> col:45 str 'const char *'
| |-ParmVarDecl 0x27b16c53d80 <col:50, col:54> col:54 format 'int'
| `-ParmVarDecl 0x27b16c53e00 <col:62, col:66> col:66 utype 'int'
|-FunctionDecl 0x27b16c54190 <line:76:1, col:52> col:12 used asn1_str2tag 'int (const char *, int)' static
| |-ParmVarDecl 0x27b16c54000 <col:25, col:37> col:37 tagstr 'const char *'
| `-ParmVarDecl 0x27b16c54080 <col:45, col:49> col:49 len 'int'
|-FunctionDecl 0x27b16c543d0 <line:78:1, line:87:1> line:78:12 invalid ASN1_generate_nconf 'int *(const char *, int *)'
| |-ParmVarDecl 0x27b16c54270 <col:32, col:44> col:44 used str 'const char *'
| |-ParmVarDecl 0x27b16c542f0 <col:49, col:55> col:55 invalid nconf 'int *'
| `-CompoundStmt 0x27b16c54760 <line:79:1, line:87:1>
|-FunctionDecl 0x27b16c548a8 <line:89:1, line:96:1> line:89:12 invalid ASN1_generate_v3 'int *(const char *, int *)'
| |-ParmVarDecl 0x27b16c54788 <col:29, col:41> col:41 used str 'const char *'
| |-ParmVarDecl 0x27b16c54808 <col:46, col:58> col:58 invalid cnf 'int *'
| `-CompoundStmt 0x27b16c54c68 <line:90:1, line:96:1>
|   `-DeclStmt 0x27b16c54a18 <line:91:5, col:16>
|     `-VarDecl 0x27b16c54988 <col:5, col:15> col:9 used err 'int' cinit
|       `-IntegerLiteral 0x27b16c549f0 <col:15> 'int' 0
|-FunctionDecl 0x27b16c54ec8 <line:98:1, line:238:1> line:98:19 invalid generate_v3 'int *(const char *, int *, int, int *)' static
| |-ParmVarDecl 0x27b16c54c98 <col:31, col:43> col:43 used str 'const char *'
| |-ParmVarDecl 0x27b16c54d18 <col:48, col:60> col:60 invalid cnf 'int *'
| |-ParmVarDecl 0x27b16c54d98 <col:65, col:69> col:69 used depth 'int'
| |-ParmVarDecl 0x27b16c54e18 <line:99:31, col:36> col:36 used perr 'int *'
| `-CompoundStmt 0x27b16c633d0 <line:100:1, line:238:1>
|   |-DeclStmt 0x27b16c55018 <line:102:5, col:26>
|   | `-VarDecl 0x27b16c54fb0 <col:5, col:17> col:17 used asn1_tags 'tag_exp_arg':'tag_exp_arg'
|   |-DeclStmt 0x27b16c55100 <line:103:5, col:23>
|   | `-VarDecl 0x27b16c55098 <col:5, col:19> col:19 used etmp 'tag_exp_type *'
|   |-DeclStmt 0x27b16c55230 <line:105:5, col:15>
|   | |-VarDecl 0x27b16c55130 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x27b16c551b0 <col:5, col:12> col:12 used len 'int'
|   |-DeclStmt 0x27b16c55390 <line:107:5, col:52>
|   | |-VarDecl 0x27b16c55290 <col:5, col:20> col:20 used orig_der 'unsigned char *'
|   | `-VarDecl 0x27b16c55310 <col:5, col:38> col:38 used new_der 'unsigned char *'
|   |-DeclStmt 0x27b16c55458 <line:108:5, col:35>
|   | `-VarDecl 0x27b16c553f0 <col:5, col:26> col:26 used cpy_start 'const unsigned char *'
|   |-DeclStmt 0x27b16c554f0 <line:109:5, col:21>
|   | `-VarDecl 0x27b16c55488 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-DeclStmt 0x27b16c55588 <line:110:5, col:28>
|   | `-VarDecl 0x27b16c55520 <col:5, col:26> col:26 used cp 'const unsigned char *'
|   |-DeclStmt 0x27b16c55620 <line:111:5, col:16>
|   | `-VarDecl 0x27b16c555b8 <col:5, col:9> col:9 used cpy_len 'int'
|   |-DeclStmt 0x27b16c556f8 <line:112:5, col:21>
|   | `-VarDecl 0x27b16c55650 <col:5, col:20> col:10 used hdr_len 'long' cinit
|   |   `-ImplicitCastExpr 0x27b16c556e0 <col:20> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x27b16c556b8 <col:20> 'int' 0
|   |-DeclStmt 0x27b16c558d8 <line:113:5, col:48>
|   | |-VarDecl 0x27b16c55728 <col:5, col:27> col:9 used hdr_constructed 'int' cinit
|   | | `-IntegerLiteral 0x27b16c55790 <col:27> 'int' 0
|   | |-VarDecl 0x27b16c557d0 <col:5, col:30> col:30 used hdr_tag 'int'
|   | `-VarDecl 0x27b16c55850 <col:5, col:39> col:39 used hdr_class 'int'
|   |-DeclStmt 0x27b16c55970 <line:114:5, col:10>
|   | `-VarDecl 0x27b16c55908 <col:5, col:9> col:9 used r 'int'
|   |-BinaryOperator 0x27b16c55a30 <line:116:5, col:26> 'int' '='
|   | |-MemberExpr 0x27b16c559c0 <col:5, col:15> 'int' lvalue .imp_tag 0x27b16c51fc8
|   | | `-DeclRefExpr 0x27b16c55988 <col:5> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | `-UnaryOperator 0x27b16c55a18 <col:25, col:26> 'int' prefix '-'
|   |   `-IntegerLiteral 0x27b16c559f0 <col:26> 'int' 1
|   |-BinaryOperator 0x27b16c61af0 <line:117:5, col:28> 'int' '='
|   | |-MemberExpr 0x27b16c55af0 <col:5, col:15> 'int' lvalue .imp_class 0x27b16c52038
|   | | `-DeclRefExpr 0x27b16c55ad0 <col:5> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | `-UnaryOperator 0x27b16c61ad8 <col:27, col:28> 'int' prefix '-'
|   |   `-IntegerLiteral 0x27b16c61ab0 <col:28> 'int' 1
|   |-BinaryOperator 0x27b16c61b88 <line:118:5, line:33:33> 'int' '='
|   | |-MemberExpr 0x27b16c61b30 <line:118:5, col:15> 'int' lvalue .format 0x27b16c52118
|   | | `-DeclRefExpr 0x27b16c61b10 <col:5> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | `-IntegerLiteral 0x27b16c61b60 <line:33:33> 'int' 1
|   |-BinaryOperator 0x27b16c61c20 <line:119:5, col:27> 'int' '='
|   | |-MemberExpr 0x27b16c61bc8 <col:5, col:15> 'int' lvalue .exp_count 0x27b16c523b8
|   | | `-DeclRefExpr 0x27b16c61ba8 <col:5> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | `-IntegerLiteral 0x27b16c61bf8 <col:27> 'int' 0
|   |-IfStmt 0x27b16c61fc0 <line:120:5, line:123:5>
|   | |-BinaryOperator 0x27b16c61f28 <line:120:9, col:62> 'int' '!='
|   | | |-CallExpr 0x27b16c61e60 <col:9, col:57> 'int'
|   | | | |-ImplicitCastExpr 0x27b16c61e48 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x27b16c61d30 <col:9> 'int ()' Function 0x27b16c61c68 'CONF_parse_list' 'int ()'
|   | | | |-ImplicitCastExpr 0x27b16c61ea8 <col:25> 'const char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x27b16c61d50 <col:25> 'const char *' lvalue ParmVar 0x27b16c54c98 'str' 'const char *'
|   | | | |-CharacterLiteral 0x27b16c61d88 <col:30> 'int' 44
|   | | | |-IntegerLiteral 0x27b16c61da0 <col:35> 'int' 1
|   | | | |-ImplicitCastExpr 0x27b16c61ee8 <col:38> 'int (*)(const char *, int, void *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x27b16c61dc8 <col:38> 'int (const char *, int, void *)' Function 0x27b16c52e20 'asn1_cb' 'int (const char *, int, void *)'
|   | | | `-UnaryOperator 0x27b16c61e08 <col:47, col:48> 'tag_exp_arg *' prefix '&' cannot overflow
|   | | |   `-DeclRefExpr 0x27b16c61de8 <col:48> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | | `-IntegerLiteral 0x27b16c61f00 <col:62> 'int' 0
|   | `-CompoundStmt 0x27b16c61fb0 <col:65, line:123:5>
|   |-IfStmt 0x27b16c62428 <line:125:5, line:137:9> has_else
|   | |-OpaqueValueExpr 0x27b16c62410 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x27b16c622f8 <line:126:45, line:136:5>
|   | | |-IfStmt 0x27b16c620f0 <line:127:9, line:130:9>
|   | | | |-OpaqueValueExpr 0x27b16c620d8 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x27b16c620c8 <line:127:19, line:130:9>
|   | | `-IfStmt 0x27b16c62200 <line:131:9, line:134:9>
|   | |   |-BinaryOperator 0x27b16c62180 <line:131:13, line:28:33> 'int' '>='
|   | |   | |-ImplicitCastExpr 0x27b16c62168 <line:131:13> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x27b16c62108 <col:13> 'int' lvalue ParmVar 0x27b16c54d98 'depth' 'int'
|   | |   | `-IntegerLiteral 0x27b16c62140 <line:28:33> 'int' 50
|   | |   `-CompoundStmt 0x27b16c621f0 <line:131:46, line:134:9>
|   | `-NullStmt 0x27b16c62408 <line:137:9>
|   |-BinaryOperator 0x27b16c62988 <line:151:5, col:17> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x27b16c62900 <col:5> 'const unsigned char *' lvalue Var 0x27b16c553f0 'cpy_start' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x27b16c62970 <col:17> 'const unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x27b16c62958 <col:17> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x27b16c62938 <col:17> 'unsigned char *' lvalue Var 0x27b16c55290 'orig_der' 'unsigned char *'
|   |-IfStmt 0x27b16c66558 <line:154:5, line:180:15> has_else
|   | |-BinaryOperator 0x27b16c62a50 <line:154:9, col:31> 'int' '!='
|   | | |-ImplicitCastExpr 0x27b16c62a38 <col:9, col:19> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x27b16c629c8 <col:9, col:19> 'int' lvalue .imp_tag 0x27b16c51fc8
|   | | |   `-DeclRefExpr 0x27b16c629a8 <col:9> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | | `-UnaryOperator 0x27b16c62a20 <col:30, col:31> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x27b16c629f8 <col:31> 'int' 1
|   | |-CompoundStmt 0x27b16c664a8 <col:34, line:179:5>
|   | | |-BinaryOperator 0x27b16c65e18 <line:157:9, line:158:36> 'int' '='
|   | | | |-DeclRefExpr 0x27b16c62a70 <line:157:9> 'int' lvalue Var 0x27b16c55908 'r' 'int'
|   | | | `-CallExpr 0x27b16c65db8 <col:13, line:158:36> 'int'
|   | | |   |-ImplicitCastExpr 0x27b16c65da0 <line:157:13> 'int (*)()' <FunctionToPointerDecay>
|   | | |   | `-DeclRefExpr 0x27b16c65be0 <col:13> 'int ()' Function 0x27b16c65b18 'ASN1_get_object' 'int ()'
|   | | |   |-UnaryOperator 0x27b16c65c48 <col:29, col:30> 'const unsigned char **' prefix '&' cannot overflow
|   | | |   | `-DeclRefExpr 0x27b16c65c00 <col:30> 'const unsigned char *' lvalue Var 0x27b16c553f0 'cpy_start' 'const unsigned char *'
|   | | |   |-UnaryOperator 0x27b16c65cc8 <col:41, col:42> 'long *' prefix '&' cannot overflow
|   | | |   | `-DeclRefExpr 0x27b16c65c60 <col:42> 'long' lvalue Var 0x27b16c55650 'hdr_len' 'long'
|   | | |   |-UnaryOperator 0x27b16c65d18 <col:51, col:52> 'int *' prefix '&' cannot overflow
|   | | |   | `-DeclRefExpr 0x27b16c65ce0 <col:52> 'int' lvalue Var 0x27b16c557d0 'hdr_tag' 'int'
|   | | |   |-UnaryOperator 0x27b16c65d68 <col:61, col:62> 'int *' prefix '&' cannot overflow
|   | | |   | `-DeclRefExpr 0x27b16c65d30 <col:62> 'int' lvalue Var 0x27b16c55850 'hdr_class' 'int'
|   | | |   `-ImplicitCastExpr 0x27b16c65e00 <line:158:29> 'int' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x27b16c65d80 <col:29> 'int' lvalue Var 0x27b16c555b8 'cpy_len' 'int'
|   | | |-IfStmt 0x27b16c65f20 <line:159:9, line:160:18>
|   | | | |-BinaryOperator 0x27b16c65e98 <line:159:13, col:17> 'int' '&'
|   | | | | |-ImplicitCastExpr 0x27b16c65e80 <col:13> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x27b16c65e38 <col:13> 'int' lvalue Var 0x27b16c55908 'r' 'int'
|   | | | | `-IntegerLiteral 0x27b16c65e58 <col:17> 'int' 128
|   | | | `-GotoStmt 0x27b16c65f08 <line:160:13, col:18> 'err' 0x27b16c65eb8
|   | | |-CompoundAssignOperator 0x27b16c65fe8 <line:162:9, col:32> 'int' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | | |-DeclRefExpr 0x27b16c65f38 <col:9> 'int' lvalue Var 0x27b16c555b8 'cpy_len' 'int'
|   | | | `-BinaryOperator 0x27b16c65fc8 <col:20, col:32> 'long long' '-'
|   | | |   |-ImplicitCastExpr 0x27b16c65f98 <col:20> 'const unsigned char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x27b16c65f58 <col:20> 'const unsigned char *' lvalue Var 0x27b16c553f0 'cpy_start' 'const unsigned char *'
|   | | |   `-ImplicitCastExpr 0x27b16c65fb0 <col:32> 'unsigned char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x27b16c65f78 <col:32> 'unsigned char *' lvalue Var 0x27b16c55290 'orig_der' 'unsigned char *'
|   | | |-IfStmt 0x27b16c66200 <line:167:9, line:173:13> has_else
|   | | | |-BinaryOperator 0x27b16c66078 <line:167:13, col:17> 'int' '&'
|   | | | | |-ImplicitCastExpr 0x27b16c66060 <col:13> 'int' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x27b16c66018 <col:13> 'int' lvalue Var 0x27b16c55908 'r' 'int'
|   | | | | `-IntegerLiteral 0x27b16c66038 <col:17> 'int' 1
|   | | | |-CompoundStmt 0x27b16c66198 <col:22, line:171:9>
|   | | | | |-BinaryOperator 0x27b16c660f8 <line:169:13, col:31> 'int' '='
|   | | | | | |-DeclRefExpr 0x27b16c66098 <col:13> 'int' lvalue Var 0x27b16c55728 'hdr_constructed' 'int'
|   | | | | | `-IntegerLiteral 0x27b16c660d0 <col:31> 'int' 2
|   | | | | `-BinaryOperator 0x27b16c66178 <line:170:13, col:23> 'long' '='
|   | | | |   |-DeclRefExpr 0x27b16c66118 <col:13> 'long' lvalue Var 0x27b16c55650 'hdr_len' 'long'
|   | | | |   `-ImplicitCastExpr 0x27b16c66160 <col:23> 'long' <IntegralCast>
|   | | | |     `-IntegerLiteral 0x27b16c66138 <col:23> 'int' 0
|   | | | `-NullStmt 0x27b16c661f8 <line:173:13>
|   | | `-BinaryOperator 0x27b16c66488 <line:178:9, col:61> 'int' '='
|   | |   |-DeclRefExpr 0x27b16c66228 <col:9> 'int' lvalue Var 0x27b16c551b0 'len' 'int'
|   | |   `-CallExpr 0x27b16c66420 <col:15, col:61> 'int'
|   | |     |-ImplicitCastExpr 0x27b16c66408 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x27b16c66350 <col:15> 'int ()' Function 0x27b16c66288 'ASN1_object_size' 'int ()'
|   | |     |-IntegerLiteral 0x27b16c66370 <col:32> 'int' 0
|   | |     |-ImplicitCastExpr 0x27b16c66458 <col:35> 'long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x27b16c66398 <col:35> 'long' lvalue Var 0x27b16c55650 'hdr_len' 'long'
|   | |     `-ImplicitCastExpr 0x27b16c66470 <col:44, col:54> 'int' <LValueToRValue>
|   | |       `-MemberExpr 0x27b16c663d8 <col:44, col:54> 'int' lvalue .imp_tag 0x27b16c51fc8
|   | |         `-DeclRefExpr 0x27b16c663b8 <col:44> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | `-BinaryOperator 0x27b16c66538 <line:180:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x27b16c664e0 <col:9> 'int' lvalue Var 0x27b16c551b0 'len' 'int'
|   |   `-ImplicitCastExpr 0x27b16c66520 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x27b16c66500 <col:15> 'int' lvalue Var 0x27b16c555b8 'cpy_len' 'int'
|   |-ForStmt 0x27b16c60c18 <line:184:5, line:191:5>
|   | |-BinaryOperator 0x27b16c66790 <line:184:10, col:67> 'tag_exp_type *' ','
|   | | |-BinaryOperator 0x27b16c665e0 <col:10, col:14> 'int' '='
|   | | | |-DeclRefExpr 0x27b16c66580 <col:10> 'int' lvalue Var 0x27b16c55130 'i' 'int'
|   | | | `-IntegerLiteral 0x27b16c665b8 <col:14> 'int' 0
|   | | `-BinaryOperator 0x27b16c66770 <col:17, col:67> 'tag_exp_type *' '='
|   | |   |-DeclRefExpr 0x27b16c66600 <col:17> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   | |   `-BinaryOperator 0x27b16c66750 <col:24, col:67> 'tag_exp_type *' '-'
|   | |     |-BinaryOperator 0x27b16c66708 <col:24, col:55> 'tag_exp_type *' '+'
|   | |     | |-ImplicitCastExpr 0x27b16c666d8 <col:24, col:34> 'tag_exp_type *' <ArrayToPointerDecay>
|   | |     | | `-MemberExpr 0x27b16c66658 <col:24, col:34> 'tag_exp_type [20]' lvalue .exp_list 0x27b16c52348
|   | |     | |   `-DeclRefExpr 0x27b16c66638 <col:24> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | |     | `-ImplicitCastExpr 0x27b16c666f0 <col:45, col:55> 'int' <LValueToRValue>
|   | |     |   `-MemberExpr 0x27b16c666a8 <col:45, col:55> 'int' lvalue .exp_count 0x27b16c523b8
|   | |     |     `-DeclRefExpr 0x27b16c66688 <col:45> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | |     `-IntegerLiteral 0x27b16c66728 <col:67> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x27b16c66850 <line:185:10, col:24> 'int' '<'
|   | | |-ImplicitCastExpr 0x27b16c66820 <col:10> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x27b16c667b0 <col:10> 'int' lvalue Var 0x27b16c55130 'i' 'int'
|   | | `-ImplicitCastExpr 0x27b16c66838 <col:14, col:24> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x27b16c667f0 <col:14, col:24> 'int' lvalue .exp_count 0x27b16c523b8
|   | |     `-DeclRefExpr 0x27b16c667d0 <col:14> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | |-BinaryOperator 0x27b16c668e0 <col:35, col:44> 'tag_exp_type *' ','
|   | | |-UnaryOperator 0x27b16c66890 <col:35, col:36> 'int' postfix '++'
|   | | | `-DeclRefExpr 0x27b16c66870 <col:35> 'int' lvalue Var 0x27b16c55130 'i' 'int'
|   | | `-UnaryOperator 0x27b16c668c8 <col:40, col:44> 'tag_exp_type *' postfix '--'
|   | |   `-DeclRefExpr 0x27b16c668a8 <col:40> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   | `-CompoundStmt 0x27b16c60bf0 <col:48, line:191:5>
|   |   |-CompoundAssignOperator 0x27b16c669a0 <line:187:9, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x27b16c66900 <col:9> 'int' lvalue Var 0x27b16c551b0 'len' 'int'
|   |   | `-ImplicitCastExpr 0x27b16c66988 <col:16, col:22> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x27b16c66958 <col:16, col:22> 'int' lvalue ->exp_pad 0x27b16c51d68
|   |   |     `-ImplicitCastExpr 0x27b16c66940 <col:16> 'tag_exp_type *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x27b16c66920 <col:16> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   |   |-BinaryOperator 0x27b16c66a88 <line:188:9, col:25> 'long' '='
|   |   | |-MemberExpr 0x27b16c66a08 <col:9, col:15> 'long' lvalue ->exp_len 0x27b16c51dd8
|   |   | | `-ImplicitCastExpr 0x27b16c669f0 <col:9> 'tag_exp_type *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x27b16c669d0 <col:9> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   |   | `-ImplicitCastExpr 0x27b16c66a70 <col:25> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x27b16c66a58 <col:25> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x27b16c66a38 <col:25> 'int' lvalue Var 0x27b16c551b0 'len' 'int'
|   |   `-BinaryOperator 0x27b16c60bd0 <line:190:9, col:53> 'int' '='
|   |     |-DeclRefExpr 0x27b16c66aa8 <col:9> 'int' lvalue Var 0x27b16c551b0 'len' 'int'
|   |     `-CallExpr 0x27b16c60b68 <col:15, col:53> 'int'
|   |       |-ImplicitCastExpr 0x27b16c60b50 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x27b16c66ac8 <col:15> 'int ()' Function 0x27b16c66288 'ASN1_object_size' 'int ()'
|   |       |-IntegerLiteral 0x27b16c60aa0 <col:32> 'int' 0
|   |       |-ImplicitCastExpr 0x27b16c60ba0 <col:35> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x27b16c60ac8 <col:35> 'int' lvalue Var 0x27b16c551b0 'len' 'int'
|   |       `-ImplicitCastExpr 0x27b16c60bb8 <col:40, col:46> 'int' <LValueToRValue>
|   |         `-MemberExpr 0x27b16c60b20 <col:40, col:46> 'int' lvalue ->exp_tag 0x27b16c51c18
|   |           `-ImplicitCastExpr 0x27b16c60b08 <col:40> 'tag_exp_type *' <LValueToRValue>
|   |             `-DeclRefExpr 0x27b16c60ae8 <col:40> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   |-BinaryOperator 0x27b16c60e28 <line:195:5, col:33> 'unsigned char *' '='
|   | |-DeclRefExpr 0x27b16c60c50 <col:5> 'unsigned char *' lvalue Var 0x27b16c55310 'new_der' 'unsigned char *'
|   | `-ImplicitCastExpr 0x27b16c60e10 <col:15, col:33> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x27b16c60dd0 <col:15, col:33> 'int'
|   |     |-ImplicitCastExpr 0x27b16c60db8 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x27b16c60d78 <col:15> 'int ()' Function 0x27b16c60cb0 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x27b16c60df8 <col:30> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x27b16c60d98 <col:30> 'int' lvalue Var 0x27b16c551b0 'len' 'int'
|   |-IfStmt 0x27b16c60e98 <line:196:5, line:197:14>
|   | |-OpaqueValueExpr 0x27b16c60e80 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x27b16c60e68 <col:9, col:14> 'err' 0x27b16c65eb8
|   |-BinaryOperator 0x27b16c60f20 <line:201:5, col:9> 'unsigned char *' '='
|   | |-DeclRefExpr 0x27b16c60eb0 <col:5> 'unsigned char *' lvalue Var 0x27b16c55488 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x27b16c60f08 <col:9> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x27b16c60ee8 <col:9> 'unsigned char *' lvalue Var 0x27b16c55310 'new_der' 'unsigned char *'
|   |-ForStmt 0x27b16c616d0 <line:205:5, line:211:5>
|   | |-BinaryOperator 0x27b16c61050 <line:205:10, col:34> 'tag_exp_type *' ','
|   | | |-BinaryOperator 0x27b16c60f88 <col:10, col:14> 'int' '='
|   | | | |-DeclRefExpr 0x27b16c60f40 <col:10> 'int' lvalue Var 0x27b16c55130 'i' 'int'
|   | | | `-IntegerLiteral 0x27b16c60f60 <col:14> 'int' 0
|   | | `-BinaryOperator 0x27b16c61030 <col:17, col:34> 'tag_exp_type *' '='
|   | |   |-DeclRefExpr 0x27b16c60fa8 <col:17> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   | |   `-ImplicitCastExpr 0x27b16c61018 <col:24, col:34> 'tag_exp_type *' <ArrayToPointerDecay>
|   | |     `-MemberExpr 0x27b16c60fe8 <col:24, col:34> 'tag_exp_type [20]' lvalue .exp_list 0x27b16c52348
|   | |       `-DeclRefExpr 0x27b16c60fc8 <col:24> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x27b16c61110 <col:44, col:58> 'int' '<'
|   | | |-ImplicitCastExpr 0x27b16c610e0 <col:44> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x27b16c61070 <col:44> 'int' lvalue Var 0x27b16c55130 'i' 'int'
|   | | `-ImplicitCastExpr 0x27b16c610f8 <col:48, col:58> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x27b16c610b0 <col:48, col:58> 'int' lvalue .exp_count 0x27b16c523b8
|   | |     `-DeclRefExpr 0x27b16c61090 <col:48> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | |-BinaryOperator 0x27b16c611a0 <line:206:10, col:19> 'tag_exp_type *' ','
|   | | |-UnaryOperator 0x27b16c61150 <col:10, col:11> 'int' postfix '++'
|   | | | `-DeclRefExpr 0x27b16c61130 <col:10> 'int' lvalue Var 0x27b16c55130 'i' 'int'
|   | | `-UnaryOperator 0x27b16c61188 <col:15, col:19> 'tag_exp_type *' postfix '++'
|   | |   `-DeclRefExpr 0x27b16c61168 <col:15> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   | `-CompoundStmt 0x27b16c616b0 <col:23, line:211:5>
|   |   |-CallExpr 0x27b16c614c0 <line:207:9, line:208:55> 'int'
|   |   | |-ImplicitCastExpr 0x27b16c614a8 <line:207:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x27b16c612b0 <col:9> 'int ()' Function 0x27b16c611e8 'ASN1_put_object' 'int ()'
|   |   | |-UnaryOperator 0x27b16c612f0 <col:25, col:26> 'unsigned char **' prefix '&' cannot overflow
|   |   | | `-DeclRefExpr 0x27b16c612d0 <col:26> 'unsigned char *' lvalue Var 0x27b16c55488 'p' 'unsigned char *'
|   |   | |-ImplicitCastExpr 0x27b16c61508 <col:29, col:35> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x27b16c61340 <col:29, col:35> 'int' lvalue ->exp_constructed 0x27b16c51cf8
|   |   | |   `-ImplicitCastExpr 0x27b16c61328 <col:29> 'tag_exp_type *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x27b16c61308 <col:29> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   |   | |-ImplicitCastExpr 0x27b16c61520 <col:52, col:58> 'long' <LValueToRValue>
|   |   | | `-MemberExpr 0x27b16c613a8 <col:52, col:58> 'long' lvalue ->exp_len 0x27b16c51dd8
|   |   | |   `-ImplicitCastExpr 0x27b16c61390 <col:52> 'tag_exp_type *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x27b16c61370 <col:52> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   |   | |-ImplicitCastExpr 0x27b16c61538 <line:208:25, col:31> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x27b16c61410 <col:25, col:31> 'int' lvalue ->exp_tag 0x27b16c51c18
|   |   | |   `-ImplicitCastExpr 0x27b16c613f8 <col:25> 'tag_exp_type *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x27b16c613d8 <col:25> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   |   | `-ImplicitCastExpr 0x27b16c61550 <col:40, col:46> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x27b16c61478 <col:40, col:46> 'int' lvalue ->exp_class 0x27b16c51c88
|   |   |     `-ImplicitCastExpr 0x27b16c61460 <col:40> 'tag_exp_type *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x27b16c61440 <col:40> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   |   `-IfStmt 0x27b16c61698 <line:209:9, line:210:20>
|   |     |-ImplicitCastExpr 0x27b16c615d0 <line:209:13, col:19> 'int' <LValueToRValue>
|   |     | `-MemberExpr 0x27b16c615a0 <col:13, col:19> 'int' lvalue ->exp_pad 0x27b16c51d68
|   |     |   `-ImplicitCastExpr 0x27b16c61588 <col:13> 'tag_exp_type *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x27b16c61568 <col:13> 'tag_exp_type *' lvalue Var 0x27b16c55098 'etmp' 'tag_exp_type *'
|   |     `-BinaryOperator 0x27b16c61678 <line:210:13, col:20> 'unsigned char' '='
|   |       |-UnaryOperator 0x27b16c61620 <col:13, col:15> 'unsigned char' lvalue prefix '*' cannot overflow
|   |       | `-UnaryOperator 0x27b16c61608 <col:14, col:15> 'unsigned char *' postfix '++'
|   |       |   `-DeclRefExpr 0x27b16c615e8 <col:14> 'unsigned char *' lvalue Var 0x27b16c55488 'p' 'unsigned char *'
|   |       `-ImplicitCastExpr 0x27b16c61660 <col:20> 'unsigned char' <IntegralCast>
|   |         `-IntegerLiteral 0x27b16c61638 <col:20> 'int' 0
|   |-IfStmt 0x27b16c62b20 <line:215:5, line:222:5>
|   | |-BinaryOperator 0x27b16c617b0 <line:215:9, col:31> 'int' '!='
|   | | |-ImplicitCastExpr 0x27b16c61798 <col:9, col:19> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x27b16c61728 <col:9, col:19> 'int' lvalue .imp_tag 0x27b16c51fc8
|   | | |   `-DeclRefExpr 0x27b16c61708 <col:9> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   | | `-UnaryOperator 0x27b16c61780 <col:30, col:31> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x27b16c61758 <col:31> 'int' 1
|   | `-CompoundStmt 0x27b16c62b08 <col:34, line:222:5>
|   |   `-CallExpr 0x27b16c61a30 <line:220:9, line:221:63> 'int'
|   |     |-ImplicitCastExpr 0x27b16c61a18 <line:220:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x27b16c618e0 <col:9> 'int ()' Function 0x27b16c611e8 'ASN1_put_object' 'int ()'
|   |     |-UnaryOperator 0x27b16c61920 <col:25, col:26> 'unsigned char **' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x27b16c61900 <col:26> 'unsigned char *' lvalue Var 0x27b16c55488 'p' 'unsigned char *'
|   |     |-ImplicitCastExpr 0x27b16c61a78 <col:29> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x27b16c61938 <col:29> 'int' lvalue Var 0x27b16c55728 'hdr_constructed' 'int'
|   |     |-ImplicitCastExpr 0x27b16c62ac0 <col:46> 'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x27b16c61958 <col:46> 'long' lvalue Var 0x27b16c55650 'hdr_len' 'long'
|   |     |-ImplicitCastExpr 0x27b16c62ad8 <line:221:25, col:35> 'int' <LValueToRValue>
|   |     | `-MemberExpr 0x27b16c61998 <col:25, col:35> 'int' lvalue .imp_tag 0x27b16c51fc8
|   |     |   `-DeclRefExpr 0x27b16c61978 <col:25> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   |     `-ImplicitCastExpr 0x27b16c62af0 <col:44, col:54> 'int' <LValueToRValue>
|   |       `-MemberExpr 0x27b16c619e8 <col:44, col:54> 'int' lvalue .imp_class 0x27b16c52038
|   |         `-DeclRefExpr 0x27b16c619c8 <col:44> 'tag_exp_arg':'tag_exp_arg' lvalue Var 0x27b16c54fb0 'asn1_tags' 'tag_exp_arg':'tag_exp_arg'
|   |-CallExpr 0x27b16c62ec0 <line:225:5, col:33> 'void *'
|   | |-ImplicitCastExpr 0x27b16c62ea8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x27b16c62da0 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x27b16c62bb0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x27b16c62f10 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x27b16c62ef8 <col:12> 'unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x27b16c62dd8 <col:12> 'unsigned char *' lvalue Var 0x27b16c55488 'p' 'unsigned char *'
|   | |-ImplicitCastExpr 0x27b16c62f40 <col:15> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x27b16c62f28 <col:15> 'const unsigned char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x27b16c62df8 <col:15> 'const unsigned char *' lvalue Var 0x27b16c553f0 'cpy_start' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x27b16c62f70 <col:26> 'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x27b16c62f58 <col:26> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x27b16c62e18 <col:26> 'int' lvalue Var 0x27b16c555b8 'cpy_len' 'int'
|   |-BinaryOperator 0x27b16c63010 <line:227:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x27b16c62f88 <col:5> 'const unsigned char *' lvalue Var 0x27b16c55520 'cp' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x27b16c62ff8 <col:10> 'const unsigned char *' <NoOp>
|   |   `-ImplicitCastExpr 0x27b16c62fe0 <col:10> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x27b16c62fc0 <col:10> 'unsigned char *' lvalue Var 0x27b16c55310 'new_der' 'unsigned char *'
|   |-LabelStmt 0x27b16c63320 <line:232:2, line:233:26> 'err'
|   | `-CallExpr 0x27b16c632e0 <col:5, col:26> 'int'
|   |   |-ImplicitCastExpr 0x27b16c632c8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x27b16c63288 <col:5> 'int ()' Function 0x27b16c631c0 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x27b16c63308 <col:18> 'unsigned char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x27b16c632a8 <col:18> 'unsigned char *' lvalue Var 0x27b16c55290 'orig_der' 'unsigned char *'
|   `-CallExpr 0x27b16c63390 <line:234:5, col:25> 'int'
|     |-ImplicitCastExpr 0x27b16c63378 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x27b16c63338 <col:5> 'int ()' Function 0x27b16c631c0 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x27b16c633b8 <col:18> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x27b16c63358 <col:18> 'unsigned char *' lvalue Var 0x27b16c55310 'new_der' 'unsigned char *'
|-FunctionDecl 0x27b16c62bb0 <line:225:5> col:5 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x27b16c62c50 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x27b16c62cb8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x27b16c62d20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x27b16c636d0 prev 0x27b16c52e20 <line:240:1, line:346:1> line:240:12 used asn1_cb 'int (const char *, int, void *)' static
| |-ParmVarDecl 0x27b16c634e0 <col:20, col:32> col:32 used elem 'const char *'
| |-ParmVarDecl 0x27b16c63560 <col:38, col:42> col:42 used len 'int'
| |-ParmVarDecl 0x27b16c635e0 <col:47, col:53> col:53 used bitstr 'void *'
| `-CompoundStmt 0x27b16c671b8 <line:241:1, line:346:1>
|   |-DeclStmt 0x27b16c63850 <line:242:5, col:30>
|   | `-VarDecl 0x27b16c63798 <col:5, col:24> col:18 used arg 'tag_exp_arg *' cinit
|   |   `-ImplicitCastExpr 0x27b16c63838 <col:24> 'tag_exp_arg *' <BitCast>
|   |     `-ImplicitCastExpr 0x27b16c63820 <col:24> 'void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x27b16c63800 <col:24> 'void *' lvalue ParmVar 0x27b16c635e0 'bitstr' 'void *'
|   |-DeclStmt 0x27b16c638e8 <line:243:5, col:10>
|   | `-VarDecl 0x27b16c63880 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x27b16c63980 <line:244:5, col:14>
|   | `-VarDecl 0x27b16c63918 <col:5, col:9> col:9 used utype 'int'
|   |-DeclStmt 0x27b16c63a40 <line:245:5, col:17>
|   | `-VarDecl 0x27b16c639b0 <col:5, col:16> col:9 used vlen 'int' cinit
|   |   `-IntegerLiteral 0x27b16c63a18 <col:16> 'int' 0
|   |-DeclStmt 0x27b16c63bd0 <line:246:5, col:34>
|   | |-VarDecl 0x27b16c63ad0 <col:5, col:17> col:17 used p 'const char *'
|   | `-VarDecl 0x27b16c63b50 <col:5, col:21> col:21 used vstart 'const char *'
|   |-DeclStmt 0x27b16c63d00 <line:248:5, col:27>
|   | |-VarDecl 0x27b16c63c00 <col:5, col:9> col:9 used tmp_tag 'int'
|   | `-VarDecl 0x27b16c63c80 <col:5, col:18> col:18 used tmp_class 'int'
|   |-IfStmt 0x27b16c63da0 <line:250:5, line:251:17>
|   | |-OpaqueValueExpr 0x27b16c63d88 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x27b16c63d78 <col:9, col:17>
|   |   `-UnaryOperator 0x27b16c63d60 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x27b16c63d38 <col:17> 'int' 1
|   |-ForStmt 0x27b16c64478 <line:253:5, line:261:5>
|   | |-BinaryOperator 0x27b16c63ec8 <line:253:10, col:21> 'const char *' ','
|   | | |-BinaryOperator 0x27b16c63e18 <col:10, col:14> 'int' '='
|   | | | |-DeclRefExpr 0x27b16c63db8 <col:10> 'int' lvalue Var 0x27b16c63880 'i' 'int'
|   | | | `-IntegerLiteral 0x27b16c63df0 <col:14> 'int' 0
|   | | `-BinaryOperator 0x27b16c63ea8 <col:17, col:21> 'const char *' '='
|   | |   |-DeclRefExpr 0x27b16c63e38 <col:17> 'const char *' lvalue Var 0x27b16c63ad0 'p' 'const char *'
|   | |   `-ImplicitCastExpr 0x27b16c63e90 <col:21> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x27b16c63e70 <col:21> 'const char *' lvalue ParmVar 0x27b16c634e0 'elem' 'const char *'
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x27b16c63f58 <col:27, col:31> 'int' '<'
|   | | |-ImplicitCastExpr 0x27b16c63f28 <col:27> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x27b16c63ee8 <col:27> 'int' lvalue Var 0x27b16c63880 'i' 'int'
|   | | `-ImplicitCastExpr 0x27b16c63f40 <col:31> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x27b16c63f08 <col:31> 'int' lvalue ParmVar 0x27b16c63560 'len' 'int'
|   | |-BinaryOperator 0x27b16c63fe8 <col:36, col:42> 'int' ','
|   | | |-UnaryOperator 0x27b16c63f98 <col:36, col:37> 'const char *' postfix '++'
|   | | | `-DeclRefExpr 0x27b16c63f78 <col:36> 'const char *' lvalue Var 0x27b16c63ad0 'p' 'const char *'
|   | | `-UnaryOperator 0x27b16c63fd0 <col:41, col:42> 'int' postfix '++'
|   | |   `-DeclRefExpr 0x27b16c63fb0 <col:41> 'int' lvalue Var 0x27b16c63880 'i' 'int'
|   | `-CompoundStmt 0x27b16c64460 <col:46, line:261:5>
|   |   `-IfStmt 0x27b16c64448 <line:255:9, line:260:9>
|   |     |-BinaryOperator 0x27b16c640a0 <line:255:13, col:19> 'int' '=='
|   |     | |-ImplicitCastExpr 0x27b16c64088 <col:13, col:14> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x27b16c64070 <col:13, col:14> 'char' <LValueToRValue>
|   |     | |   `-UnaryOperator 0x27b16c64040 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow
|   |     | |     `-ImplicitCastExpr 0x27b16c64028 <col:14> 'const char *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x27b16c64008 <col:14> 'const char *' lvalue Var 0x27b16c63ad0 'p' 'const char *'
|   |     | `-CharacterLiteral 0x27b16c64058 <col:19> 'int' 58
|   |     `-CompoundStmt 0x27b16c64418 <col:24, line:260:9>
|   |       |-BinaryOperator 0x27b16c64178 <line:256:13, col:26> 'const char *' '='
|   |       | |-DeclRefExpr 0x27b16c640c0 <col:13> 'const char *' lvalue Var 0x27b16c63b50 'vstart' 'const char *'
|   |       | `-BinaryOperator 0x27b16c64158 <col:22, col:26> 'const char *' '+'
|   |       |   |-ImplicitCastExpr 0x27b16c64140 <col:22> 'const char *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x27b16c640f8 <col:22> 'const char *' lvalue Var 0x27b16c63ad0 'p' 'const char *'
|   |       |   `-IntegerLiteral 0x27b16c64118 <col:26> 'int' 1
|   |       |-BinaryOperator 0x27b16c64308 <line:257:13, col:40> 'int' '='
|   |       | |-DeclRefExpr 0x27b16c64198 <col:13> 'int' lvalue Var 0x27b16c639b0 'vlen' 'int'
|   |       | `-ImplicitCastExpr 0x27b16c642f0 <col:20, col:40> 'int' <IntegralCast>
|   |       |   `-BinaryOperator 0x27b16c642d0 <col:20, col:40> 'long long' '-'
|   |       |     |-ImplicitCastExpr 0x27b16c642b8 <col:20> 'long long' <IntegralCast>
|   |       |     | `-ImplicitCastExpr 0x27b16c642a0 <col:20> 'int' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x27b16c641d0 <col:20> 'int' lvalue ParmVar 0x27b16c63560 'len' 'int'
|   |       |     `-ParenExpr 0x27b16c64280 <col:26, col:40> 'long long'
|   |       |       `-BinaryOperator 0x27b16c64260 <col:27, col:36> 'long long' '-'
|   |       |         |-ImplicitCastExpr 0x27b16c64230 <col:27> 'const char *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x27b16c641f0 <col:27> 'const char *' lvalue Var 0x27b16c63b50 'vstart' 'const char *'
|   |       |         `-ImplicitCastExpr 0x27b16c64248 <col:36> 'const char *' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x27b16c64210 <col:36> 'const char *' lvalue ParmVar 0x27b16c634e0 'elem' 'const char *'
|   |       |-BinaryOperator 0x27b16c643f0 <line:258:13, col:23> 'int' '='
|   |       | |-DeclRefExpr 0x27b16c64328 <col:13> 'int' lvalue ParmVar 0x27b16c63560 'len' 'int'
|   |       | `-ImplicitCastExpr 0x27b16c643d8 <col:19, col:23> 'int' <IntegralCast>
|   |       |   `-BinaryOperator 0x27b16c643b8 <col:19, col:23> 'long long' '-'
|   |       |     |-ImplicitCastExpr 0x27b16c64388 <col:19> 'const char *' <LValueToRValue>
|   |       |     | `-DeclRefExpr 0x27b16c64348 <col:19> 'const char *' lvalue Var 0x27b16c63ad0 'p' 'const char *'
|   |       |     `-ImplicitCastExpr 0x27b16c643a0 <col:23> 'const char *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x27b16c64368 <col:23> 'const char *' lvalue ParmVar 0x27b16c634e0 'elem' 'const char *'
|   |       `-BreakStmt 0x27b16c64410 <line:259:13>
|   |-BinaryOperator 0x27b16c645f0 <line:263:5, col:35> 'int' '='
|   | |-DeclRefExpr 0x27b16c644b0 <col:5> 'int' lvalue Var 0x27b16c63918 'utype' 'int'
|   | `-CallExpr 0x27b16c64590 <col:13, col:35> 'int'
|   |   |-ImplicitCastExpr 0x27b16c64578 <col:13> 'int (*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x27b16c644e8 <col:13> 'int (const char *, int)' Function 0x27b16c54190 'asn1_str2tag' 'int (const char *, int)'
|   |   |-ImplicitCastExpr 0x27b16c645c0 <col:26> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x27b16c64508 <col:26> 'const char *' lvalue ParmVar 0x27b16c634e0 'elem' 'const char *'
|   |   `-ImplicitCastExpr 0x27b16c645d8 <col:32> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x27b16c64528 <col:32> 'int' lvalue ParmVar 0x27b16c63560 'len' 'int'
|   |-IfStmt 0x27b16c64968 <line:265:5, line:269:5>
|   | |-BinaryOperator 0x27b16c64688 <line:265:9, col:19> 'int' '=='
|   | | |-ImplicitCastExpr 0x27b16c64670 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x27b16c64610 <col:9> 'int' lvalue Var 0x27b16c63918 'utype' 'int'
|   | | `-UnaryOperator 0x27b16c64658 <col:18, col:19> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x27b16c64630 <col:19> 'int' 1
|   | `-CompoundStmt 0x27b16c64948 <col:22, line:269:5>
|   |   |-CallExpr 0x27b16c64890 <line:267:9, col:43> 'int'
|   |   | |-ImplicitCastExpr 0x27b16c64878 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x27b16c647b8 <col:9> 'int ()' Function 0x27b16c646f0 'ERR_add_error_data' 'int ()'
|   |   | |-IntegerLiteral 0x27b16c647d8 <col:28> 'int' 2
|   |   | |-ImplicitCastExpr 0x27b16c648c8 <col:31> 'char *' <ArrayToPointerDecay>
|   |   | | `-StringLiteral 0x27b16c64838 <col:31> 'char [5]' lvalue "tag="
|   |   | `-ImplicitCastExpr 0x27b16c648e0 <col:39> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x27b16c64858 <col:39> 'const char *' lvalue ParmVar 0x27b16c634e0 'elem' 'const char *'
|   |   `-ReturnStmt 0x27b16c64938 <line:268:9, col:17>
|   |     `-UnaryOperator 0x27b16c64920 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x27b16c648f8 <col:17> 'int' 1
|   |-IfStmt 0x27b16c64e30 <line:272:5, line:281:5>
|   | |-UnaryOperator 0x27b16c64a20 <line:272:9, col:32> 'int' prefix '!' cannot overflow
|   | | `-ParenExpr 0x27b16c64a00 <col:10, col:32> 'int'
|   | |   `-BinaryOperator 0x27b16c649e0 <col:11, line:14:33> 'int' '&'
|   | |     |-ImplicitCastExpr 0x27b16c649c8 <line:272:11> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x27b16c64980 <col:11> 'int' lvalue Var 0x27b16c63918 'utype' 'int'
|   | |     `-IntegerLiteral 0x27b16c649a0 <line:14:33> 'int' 65536
|   | `-CompoundStmt 0x27b16c64e00 <line:272:35, line:281:5>
|   |   |-BinaryOperator 0x27b16c64b18 <line:273:9, col:22> 'int' '='
|   |   | |-MemberExpr 0x27b16c64a88 <col:9, col:14> 'int' lvalue ->utype 0x27b16c520a8
|   |   | | `-ImplicitCastExpr 0x27b16c64a70 <col:9> 'tag_exp_arg *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x27b16c64a38 <col:9> 'tag_exp_arg *' lvalue Var 0x27b16c63798 'arg' 'tag_exp_arg *'
|   |   | `-ImplicitCastExpr 0x27b16c64b00 <col:22> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x27b16c64ae0 <col:22> 'int' lvalue Var 0x27b16c63918 'utype' 'int'
|   |   |-BinaryOperator 0x27b16c64bd8 <line:274:9, col:20> 'const char *' '='
|   |   | |-MemberExpr 0x27b16c64b70 <col:9, col:14> 'const char *' lvalue ->str 0x27b16c52188
|   |   | | `-ImplicitCastExpr 0x27b16c64b58 <col:9> 'tag_exp_arg *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x27b16c64b38 <col:9> 'tag_exp_arg *' lvalue Var 0x27b16c63798 'arg' 'tag_exp_arg *'
|   |   | `-ImplicitCastExpr 0x27b16c64bc0 <col:20> 'const char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x27b16c64ba0 <col:20> 'const char *' lvalue Var 0x27b16c63b50 'vstart' 'const char *'
|   |   |-IfStmt 0x27b16c64db0 <line:276:9, line:279:9>
|   |   | |-BinaryOperator 0x27b16c64d08 <line:276:13, col:32> 'int' '&&'
|   |   | | |-UnaryOperator 0x27b16c64c30 <col:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x27b16c64c18 <col:14> 'const char *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x27b16c64bf8 <col:14> 'const char *' lvalue Var 0x27b16c63b50 'vstart' 'const char *'
|   |   | | `-ImplicitCastExpr 0x27b16c64cf0 <col:24, col:32> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x27b16c64cd8 <col:24, col:32> 'char' <LValueToRValue>
|   |   | |     `-ArraySubscriptExpr 0x27b16c64cb8 <col:24, col:32> 'const char' lvalue
|   |   | |       |-ImplicitCastExpr 0x27b16c64c88 <col:24> 'const char *' <LValueToRValue>
|   |   | |       | `-DeclRefExpr 0x27b16c64c48 <col:24> 'const char *' lvalue ParmVar 0x27b16c634e0 'elem' 'const char *'
|   |   | |       `-ImplicitCastExpr 0x27b16c64ca0 <col:29> 'int' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x27b16c64c68 <col:29> 'int' lvalue ParmVar 0x27b16c63560 'len' 'int'
|   |   | `-CompoundStmt 0x27b16c64d98 <col:35, line:279:9>
|   |   |   `-ReturnStmt 0x27b16c64d88 <line:278:13, col:21>
|   |   |     `-UnaryOperator 0x27b16c64d70 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x27b16c64d48 <col:21> 'int' 1
|   |   `-ReturnStmt 0x27b16c64df0 <line:280:9, col:16>
|   |     `-IntegerLiteral 0x27b16c64dc8 <col:16> 'int' 0
|   |-SwitchStmt 0x27b16c64e80 <line:283:5, line:342:5>
|   | |-ImplicitCastExpr 0x27b16c64e68 <line:283:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x27b16c64e48 <col:13> 'int' lvalue Var 0x27b16c63918 'utype' 'int'
|   | `-CompoundStmt 0x27b16c670e8 <col:20, line:342:5>
|   |   |-CaseStmt 0x27b16c64f48 <line:285:5, line:290:9>
|   |   | |-ConstantExpr 0x27b16c64f30 <line:15:33, col:49> 'int'
|   |   | | `-ParenExpr 0x27b16c64f10 <col:33, col:49> 'int'
|   |   | |   `-BinaryOperator 0x27b16c64ef0 <line:14:33, line:15:48> 'int' '|'
|   |   | |     |-IntegerLiteral 0x27b16c64ea0 <line:14:33> 'int' 65536
|   |   | |     `-IntegerLiteral 0x27b16c64ec8 <line:15:48> 'int' 1
|   |   | `-IfStmt 0x27b16c650d8 <line:287:9, line:290:9>
|   |   |   |-BinaryOperator 0x27b16c65030 <line:287:13, col:30> 'int' '!='
|   |   |   | |-ImplicitCastExpr 0x27b16c65018 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x27b16c64fa8 <col:13, col:18> 'int' lvalue ->imp_tag 0x27b16c51fc8
|   |   |   | |   `-ImplicitCastExpr 0x27b16c64f90 <col:13> 'tag_exp_arg *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x27b16c64f70 <col:13> 'tag_exp_arg *' lvalue Var 0x27b16c63798 'arg' 'tag_exp_arg *'
|   |   |   | `-UnaryOperator 0x27b16c65000 <col:29, col:30> 'int' prefix '-'
|   |   |   |   `-IntegerLiteral 0x27b16c64fd8 <col:30> 'int' 1
|   |   |   `-CompoundStmt 0x27b16c650c0 <col:33, line:290:9>
|   |   |     `-ReturnStmt 0x27b16c650b0 <line:289:13, col:21>
|   |   |       `-UnaryOperator 0x27b16c65098 <col:20, col:21> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x27b16c65070 <col:21> 'int' 1
|   |   |-IfStmt 0x27b16c65368 <line:291:9, line:292:21>
|   |   | |-UnaryOperator 0x27b16c65300 <line:291:13, col:72> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x27b16c65290 <col:14, col:72> 'int'
|   |   | |   |-ImplicitCastExpr 0x27b16c65278 <col:14> 'int (*)(const char *, int, int *, int *)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x27b16c650f0 <col:14> 'int (const char *, int, int *, int *)' Function 0x27b16c537e0 'parse_tagging' 'int (const char *, int, int *, int *)'
|   |   | |   |-ImplicitCastExpr 0x27b16c652d0 <col:28> 'const char *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x27b16c65110 <col:28> 'const char *' lvalue Var 0x27b16c63b50 'vstart' 'const char *'
|   |   | |   |-ImplicitCastExpr 0x27b16c652e8 <col:36> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x27b16c65130 <col:36> 'int' lvalue Var 0x27b16c639b0 'vlen' 'int'
|   |   | |   |-UnaryOperator 0x27b16c651b8 <col:42, col:48> 'int *' prefix '&' cannot overflow
|   |   | |   | `-MemberExpr 0x27b16c65188 <col:43, col:48> 'int' lvalue ->imp_tag 0x27b16c51fc8
|   |   | |   |   `-ImplicitCastExpr 0x27b16c65170 <col:43> 'tag_exp_arg *' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x27b16c65150 <col:43> 'tag_exp_arg *' lvalue Var 0x27b16c63798 'arg' 'tag_exp_arg *'
|   |   | |   `-UnaryOperator 0x27b16c65238 <col:57, col:63> 'int *' prefix '&' cannot overflow
|   |   | |     `-MemberExpr 0x27b16c65208 <col:58, col:63> 'int' lvalue ->imp_class 0x27b16c52038
|   |   | |       `-ImplicitCastExpr 0x27b16c651f0 <col:58> 'tag_exp_arg *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x27b16c651d0 <col:58> 'tag_exp_arg *' lvalue Var 0x27b16c63798 'arg' 'tag_exp_arg *'
|   |   | `-ReturnStmt 0x27b16c65358 <line:292:13, col:21>
|   |   |   `-UnaryOperator 0x27b16c65340 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x27b16c65318 <col:21> 'int' 1
|   |   |-BreakStmt 0x27b16c65380 <line:293:9>
|   |   |-CaseStmt 0x27b16c65430 <line:295:5, line:298:21>
|   |   | |-ConstantExpr 0x27b16c65418 <line:16:33, col:49> 'int'
|   |   | | `-ParenExpr 0x27b16c653f8 <col:33, col:49> 'int'
|   |   | |   `-BinaryOperator 0x27b16c653d8 <line:14:33, line:16:48> 'int' '|'
|   |   | |     |-IntegerLiteral 0x27b16c65388 <line:14:33> 'int' 65536
|   |   | |     `-IntegerLiteral 0x27b16c653b0 <line:16:48> 'int' 2
|   |   | `-IfStmt 0x27b16c65648 <line:297:9, line:298:21>
|   |   |   |-UnaryOperator 0x27b16c655e0 <line:297:13, col:62> 'int' prefix '!' cannot overflow
|   |   |   | `-CallExpr 0x27b16c65570 <col:14, col:62> 'int'
|   |   |   |   |-ImplicitCastExpr 0x27b16c65558 <col:14> 'int (*)(const char *, int, int *, int *)' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x27b16c65458 <col:14> 'int (const char *, int, int *, int *)' Function 0x27b16c537e0 'parse_tagging' 'int (const char *, int, int *, int *)'
|   |   |   |   |-ImplicitCastExpr 0x27b16c655b0 <col:28> 'const char *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x27b16c65478 <col:28> 'const char *' lvalue Var 0x27b16c63b50 'vstart' 'const char *'
|   |   |   |   |-ImplicitCastExpr 0x27b16c655c8 <col:36> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x27b16c65498 <col:36> 'int' lvalue Var 0x27b16c639b0 'vlen' 'int'
|   |   |   |   |-UnaryOperator 0x27b16c654f0 <col:42, col:43> 'int *' prefix '&' cannot overflow
|   |   |   |   | `-DeclRefExpr 0x27b16c654b8 <col:43> 'int' lvalue Var 0x27b16c63c00 'tmp_tag' 'int'
|   |   |   |   `-UnaryOperator 0x27b16c65540 <col:52, col:53> 'int *' prefix '&' cannot overflow
|   |   |   |     `-DeclRefExpr 0x27b16c65508 <col:53> 'int' lvalue Var 0x27b16c63c80 'tmp_class' 'int'
|   |   |   `-ReturnStmt 0x27b16c65638 <line:298:13, col:21>
|   |   |     `-UnaryOperator 0x27b16c65620 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x27b16c655f8 <col:21> 'int' 1
|   |   |-IfStmt 0x27b16c658d0 <line:299:9, line:300:21>
|   |   | |-UnaryOperator 0x27b16c65868 <line:299:13, col:57> 'int' prefix '!' cannot overflow
|   |   | | `-CallExpr 0x27b16c657d0 <col:14, col:57> 'int'
|   |   | |   |-ImplicitCastExpr 0x27b16c657b8 <col:14> 'int (*)(tag_exp_arg *, int, int, int, int, int)' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x27b16c65660 <col:14> 'int (tag_exp_arg *, int, int, int, int, int)' Function 0x27b16c53400 'append_exp' 'int (tag_exp_arg *, int, int, int, int, int)'
|   |   | |   |-ImplicitCastExpr 0x27b16c65820 <col:25> 'tag_exp_arg *' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x27b16c65680 <col:25> 'tag_exp_arg *' lvalue Var 0x27b16c63798 'arg' 'tag_exp_arg *'
|   |   | |   |-ImplicitCastExpr 0x27b16c65838 <col:30> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x27b16c656a0 <col:30> 'int' lvalue Var 0x27b16c63c00 'tmp_tag' 'int'
|   |   | |   |-ImplicitCastExpr 0x27b16c65850 <col:39> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x27b16c656c0 <col:39> 'int' lvalue Var 0x27b16c63c80 'tmp_class' 'int'
|   |   | |   |-IntegerLiteral 0x27b16c656e0 <col:50> 'int' 1
|   |   | |   |-IntegerLiteral 0x27b16c65708 <col:53> 'int' 0
|   |   | |   `-IntegerLiteral 0x27b16c65730 <col:56> 'int' 0
|   |   | `-ReturnStmt 0x27b16c658c0 <line:300:13, col:21>
|   |   |   `-UnaryOperator 0x27b16c658a8 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x27b16c65880 <col:21> 'int' 1
|   |   |-BreakStmt 0x27b16c658e8 <line:301:9>
|   |   |-CaseStmt 0x27b16c65998 <line:303:5, line:305:21>
|   |   | |-ConstantExpr 0x27b16c65980 <line:20:33, col:49> 'int'
|   |   | | `-ParenExpr 0x27b16c65960 <col:33, col:49> 'int'
|   |   | |   `-BinaryOperator 0x27b16c65940 <line:14:33, line:20:48> 'int' '|'
|   |   | |     |-IntegerLiteral 0x27b16c658f0 <line:14:33> 'int' 65536
|   |   | |     `-IntegerLiteral 0x27b16c65918 <line:20:48> 'int' 6
|   |   | `-IfStmt 0x27b16c5ea80 <line:304:9, line:305:21>
|   |   |   |-OpaqueValueExpr 0x27b16c65ac8 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x27b16c65ab8 <col:13, col:21>
|   |   |     `-UnaryOperator 0x27b16c65aa0 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x27b16c65a78 <col:21> 'int' 1
|   |   |-BreakStmt 0x27b16c5ea98 <line:306:9>
|   |   |-CaseStmt 0x27b16c5eb48 <line:308:5, line:310:21>
|   |   | |-ConstantExpr 0x27b16c5eb30 <line:21:33, col:49> 'int'
|   |   | | `-ParenExpr 0x27b16c5eb10 <col:33, col:49> 'int'
|   |   | |   `-BinaryOperator 0x27b16c5eaf0 <line:14:33, line:21:48> 'int' '|'
|   |   | |     |-IntegerLiteral 0x27b16c5eaa0 <line:14:33> 'int' 65536
|   |   | |     `-IntegerLiteral 0x27b16c5eac8 <line:21:48> 'int' 7
|   |   | `-IfStmt 0x27b16c5ec90 <line:309:9, line:310:21>
|   |   |   |-OpaqueValueExpr 0x27b16c5ec78 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x27b16c5ec68 <col:13, col:21>
|   |   |     `-UnaryOperator 0x27b16c5ec50 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x27b16c5ec28 <col:21> 'int' 1
|   |   |-BreakStmt 0x27b16c5eca8 <line:311:9>
|   |   |-CaseStmt 0x27b16c5ed58 <line:313:5, line:315:21>
|   |   | |-ConstantExpr 0x27b16c5ed40 <line:18:33, col:49> 'int'
|   |   | | `-ParenExpr 0x27b16c5ed20 <col:33, col:49> 'int'
|   |   | |   `-BinaryOperator 0x27b16c5ed00 <line:14:33, line:18:48> 'int' '|'
|   |   | |     |-IntegerLiteral 0x27b16c5ecb0 <line:14:33> 'int' 65536
|   |   | |     `-IntegerLiteral 0x27b16c5ecd8 <line:18:48> 'int' 4
|   |   | `-IfStmt 0x27b16c5eea0 <line:314:9, line:315:21>
|   |   |   |-OpaqueValueExpr 0x27b16c5ee88 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x27b16c5ee78 <col:13, col:21>
|   |   |     `-UnaryOperator 0x27b16c5ee60 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x27b16c5ee38 <col:21> 'int' 1
|   |   |-BreakStmt 0x27b16c5eeb8 <line:316:9>
|   |   |-CaseStmt 0x27b16c5ef68 <line:318:5, line:320:21>
|   |   | |-ConstantExpr 0x27b16c5ef50 <line:19:33, col:49> 'int'
|   |   | | `-ParenExpr 0x27b16c5ef30 <col:33, col:49> 'int'
|   |   | |   `-BinaryOperator 0x27b16c5ef10 <line:14:33, line:19:48> 'int' '|'
|   |   | |     |-IntegerLiteral 0x27b16c5eec0 <line:14:33> 'int' 65536
|   |   | |     `-IntegerLiteral 0x27b16c5eee8 <line:19:48> 'int' 5
|   |   | `-IfStmt 0x27b16c5f0b0 <line:319:9, line:320:21>
|   |   |   |-OpaqueValueExpr 0x27b16c5f098 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x27b16c5f088 <col:13, col:21>
|   |   |     `-UnaryOperator 0x27b16c5f070 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x27b16c5f048 <col:21> 'int' 1
|   |   |-BreakStmt 0x27b16c5f0c8 <line:321:9>
|   |   |-CaseStmt 0x27b16c5f178 <line:323:5, line:327:9>
|   |   | |-ConstantExpr 0x27b16c5f160 <line:22:33, col:49> 'int'
|   |   | | `-ParenExpr 0x27b16c5f140 <col:33, col:49> 'int'
|   |   | |   `-BinaryOperator 0x27b16c5f120 <line:14:33, line:22:48> 'int' '|'
|   |   | |     |-IntegerLiteral 0x27b16c5f0d0 <line:14:33> 'int' 65536
|   |   | |     `-IntegerLiteral 0x27b16c5f0f8 <line:22:48> 'int' 8
|   |   | `-IfStmt 0x27b16c5f278 <line:324:9, line:327:9>
|   |   |   |-UnaryOperator 0x27b16c5f1d8 <line:324:13, col:14> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x27b16c5f1c0 <col:14> 'const char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x27b16c5f1a0 <col:14> 'const char *' lvalue Var 0x27b16c63b50 'vstart' 'const char *'
|   |   |   `-CompoundStmt 0x27b16c5f260 <col:22, line:327:9>
|   |   |     `-ReturnStmt 0x27b16c5f250 <line:326:13, col:21>
|   |   |       `-UnaryOperator 0x27b16c5f238 <col:20, col:21> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x27b16c5f210 <col:21> 'int' 1
|   |   |-IfStmt 0x27b16c670b8 <line:328:9, line:339:9> has_else
|   |   | |-BinaryOperator 0x27b16c5f6d0 <line:328:13, col:44> 'int' '=='
|   |   | | |-CallExpr 0x27b16c5f610 <col:13, col:39> 'int'
|   |   | | | |-ImplicitCastExpr 0x27b16c5f5f8 <col:13> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | | | `-DeclRefExpr 0x27b16c5f4c0 <col:13> 'int (const char *, const char *, unsigned long long)' Function 0x27b16c5f2d0 'strncmp' 'int (const char *, const char *, unsigned long long)'
|   |   | | | |-ImplicitCastExpr 0x27b16c5f648 <col:21> 'const char *' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x27b16c5f4f8 <col:21> 'const char *' lvalue Var 0x27b16c63b50 'vstart' 'const char *'
|   |   | | | |-ImplicitCastExpr 0x27b16c5f678 <col:29> 'const char *' <NoOp>
|   |   | | | | `-ImplicitCastExpr 0x27b16c5f660 <col:29> 'char *' <ArrayToPointerDecay>
|   |   | | | |   `-StringLiteral 0x27b16c5f558 <col:29> 'char [6]' lvalue "ASCII"
|   |   | | | `-ImplicitCastExpr 0x27b16c5f690 <col:38> 'unsigned long long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x27b16c5f578 <col:38> 'int' 5
|   |   | | `-IntegerLiteral 0x27b16c5f6a8 <col:44> 'int' 0
|   |   | |-BinaryOperator 0x27b16c5f780 <line:329:13, line:33:33> 'int' '='
|   |   | | |-MemberExpr 0x27b16c5f728 <line:329:13, col:18> 'int' lvalue ->format 0x27b16c52118
|   |   | | | `-ImplicitCastExpr 0x27b16c5f710 <col:13> 'tag_exp_arg *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x27b16c5f6f0 <col:13> 'tag_exp_arg *' lvalue Var 0x27b16c63798 'arg' 'tag_exp_arg *'
|   |   | | `-IntegerLiteral 0x27b16c5f758 <line:33:33> 'int' 1
|   |   | `-IfStmt 0x27b16c67090 <line:330:14, line:339:9> has_else
|   |   |   |-BinaryOperator 0x27b16c5f930 <line:330:18, col:48> 'int' '=='
|   |   |   | |-CallExpr 0x27b16c5f870 <col:18, col:43> 'int'
|   |   |   | | |-ImplicitCastExpr 0x27b16c5f858 <col:18> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | | | `-DeclRefExpr 0x27b16c5f7a0 <col:18> 'int (const char *, const char *, unsigned long long)' Function 0x27b16c5f2d0 'strncmp' 'int (const char *, const char *, unsigned long long)'
|   |   |   | | |-ImplicitCastExpr 0x27b16c5f8a8 <col:26> 'const char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x27b16c5f7c0 <col:26> 'const char *' lvalue Var 0x27b16c63b50 'vstart' 'const char *'
|   |   |   | | |-ImplicitCastExpr 0x27b16c5f8d8 <col:34> 'const char *' <NoOp>
|   |   |   | | | `-ImplicitCastExpr 0x27b16c5f8c0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |   | | |   `-StringLiteral 0x27b16c5f7e0 <col:34> 'char [5]' lvalue "UTF8"
|   |   |   | | `-ImplicitCastExpr 0x27b16c5f8f0 <col:42> 'unsigned long long' <IntegralCast>
|   |   |   | |   `-IntegerLiteral 0x27b16c5f800 <col:42> 'int' 4
|   |   |   | `-IntegerLiteral 0x27b16c5f908 <col:48> 'int' 0
|   |   |   |-BinaryOperator 0x27b16c5f9e0 <line:331:13, line:35:33> 'int' '='
|   |   |   | |-MemberExpr 0x27b16c5f988 <line:331:13, col:18> 'int' lvalue ->format 0x27b16c52118
|   |   |   | | `-ImplicitCastExpr 0x27b16c5f970 <col:13> 'tag_exp_arg *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x27b16c5f950 <col:13> 'tag_exp_arg *' lvalue Var 0x27b16c63798 'arg' 'tag_exp_arg *'
|   |   |   | `-IntegerLiteral 0x27b16c5f9b8 <line:35:33> 'int' 2
|   |   |   `-IfStmt 0x27b16c67068 <line:332:14, line:339:9> has_else
|   |   |     |-BinaryOperator 0x27b16c66c50 <line:332:18, col:47> 'int' '=='
|   |   |     | |-CallExpr 0x27b16c66b90 <col:18, col:42> 'int'
|   |   |     | | |-ImplicitCastExpr 0x27b16c66b78 <col:18> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   |   |     | | | `-DeclRefExpr 0x27b16c5fa00 <col:18> 'int (const char *, const char *, unsigned long long)' Function 0x27b16c5f2d0 'strncmp' 'int (const char *, const char *, unsigned long long)'
|   |   |     | | |-ImplicitCastExpr 0x27b16c66bc8 <col:26> 'const char *' <LValueToRValue>
|   |   |     | | | `-DeclRefExpr 0x27b16c5fa20 <col:26> 'const char *' lvalue Var 0x27b16c63b50 'vstart' 'const char *'
|   |   |     | | |-ImplicitCastExpr 0x27b16c66bf8 <col:34> 'const char *' <NoOp>
|   |   |     | | | `-ImplicitCastExpr 0x27b16c66be0 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |     | | |   `-StringLiteral 0x27b16c66b00 <col:34> 'char [4]' lvalue "HEX"
|   |   |     | | `-ImplicitCastExpr 0x27b16c66c10 <col:41> 'unsigned long long' <IntegralCast>
|   |   |     | |   `-IntegerLiteral 0x27b16c66b20 <col:41> 'int' 3
|   |   |     | `-IntegerLiteral 0x27b16c66c28 <col:47> 'int' 0
|   |   |     |-BinaryOperator 0x27b16c66d00 <line:333:13, line:37:33> 'int' '='
|   |   |     | |-MemberExpr 0x27b16c66ca8 <line:333:13, col:18> 'int' lvalue ->format 0x27b16c52118
|   |   |     | | `-ImplicitCastExpr 0x27b16c66c90 <col:13> 'tag_exp_arg *' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x27b16c66c70 <col:13> 'tag_exp_arg *' lvalue Var 0x27b16c63798 'arg' 'tag_exp_arg *'
|   |   |     | `-IntegerLiteral 0x27b16c66cd8 <line:37:33> 'int' 3
|   |   |     `-IfStmt 0x27b16c67040 <line:334:14, line:339:9> has_else
|   |   |       |-BinaryOperator 0x27b16c66ee8 <line:334:18, col:51> 'int' '=='
|   |   |       | |-CallExpr 0x27b16c66e28 <col:18, col:46> 'int'
|   |   |       | | |-ImplicitCastExpr 0x27b16c66e10 <col:18> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   |   |       | | | `-DeclRefExpr 0x27b16c66d20 <col:18> 'int (const char *, const char *, unsigned long long)' Function 0x27b16c5f2d0 'strncmp' 'int (const char *, const char *, unsigned long long)'
|   |   |       | | |-ImplicitCastExpr 0x27b16c66e60 <col:26> 'const char *' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x27b16c66d40 <col:26> 'const char *' lvalue Var 0x27b16c63b50 'vstart' 'const char *'
|   |   |       | | |-ImplicitCastExpr 0x27b16c66e90 <col:34> 'const char *' <NoOp>
|   |   |       | | | `-ImplicitCastExpr 0x27b16c66e78 <col:34> 'char *' <ArrayToPointerDecay>
|   |   |       | | |   `-StringLiteral 0x27b16c66d98 <col:34> 'char [8]' lvalue "BITLIST"
|   |   |       | | `-ImplicitCastExpr 0x27b16c66ea8 <col:45> 'unsigned long long' <IntegralCast>
|   |   |       | |   `-IntegerLiteral 0x27b16c66db8 <col:45> 'int' 7
|   |   |       | `-IntegerLiteral 0x27b16c66ec0 <col:51> 'int' 0
|   |   |       |-BinaryOperator 0x27b16c66f98 <line:335:13, line:39:33> 'int' '='
|   |   |       | |-MemberExpr 0x27b16c66f40 <line:335:13, col:18> 'int' lvalue ->format 0x27b16c52118
|   |   |       | | `-ImplicitCastExpr 0x27b16c66f28 <col:13> 'tag_exp_arg *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x27b16c66f08 <col:13> 'tag_exp_arg *' lvalue Var 0x27b16c63798 'arg' 'tag_exp_arg *'
|   |   |       | `-IntegerLiteral 0x27b16c66f70 <line:39:33> 'int' 4
|   |   |       `-CompoundStmt 0x27b16c67028 <line:336:14, line:339:9>
|   |   |         `-ReturnStmt 0x27b16c67018 <line:338:13, col:21>
|   |   |           `-UnaryOperator 0x27b16c67000 <col:20, col:21> 'int' prefix '-'
|   |   |             `-IntegerLiteral 0x27b16c66fd8 <col:21> 'int' 1
|   |   `-BreakStmt 0x27b16c670e0 <line:340:9>
|   `-ReturnStmt 0x27b16c671a8 <line:344:5, col:12>
|     `-IntegerLiteral 0x27b16c67180 <col:12> 'int' 1
|-FunctionDecl 0x27b16c5f2d0 <line:328:13> col:13 implicit used strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x27b16c5f370 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x27b16c5f3d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x27b16c5f440 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x27b16c674d8 prev 0x27b16c537e0 <line:348:1, line:401:1> line:348:12 used parse_tagging 'int (const char *, int, int *, int *)' static
| |-ParmVarDecl 0x27b16c67248 <col:26, col:38> col:38 used vstart 'const char *'
| |-ParmVarDecl 0x27b16c672c8 <col:46, col:50> col:50 used vlen 'int'
| |-ParmVarDecl 0x27b16c67348 <col:56, col:61> col:61 used ptag 'int *'
| |-ParmVarDecl 0x27b16c673c8 <col:67, col:72> col:72 used pclass 'int *'
| `-CompoundStmt 0x27b16c69c00 <line:349:1, line:401:1>
|   |-DeclStmt 0x27b16c676a0 <line:350:5, col:17>
|   | `-VarDecl 0x27b16c67638 <col:5, col:16> col:10 used erch 'char [2]'
|   |-DeclStmt 0x27b16c67738 <line:351:5, col:17>
|   | `-VarDecl 0x27b16c676d0 <col:5, col:10> col:10 used tag_num 'long'
|   |-DeclStmt 0x27b16c677d0 <line:352:5, col:15>
|   | `-VarDecl 0x27b16c67768 <col:5, col:11> col:11 used eptr 'char *'
|   |-IfStmt 0x27b16c67870 <line:353:5, line:354:16>
|   | |-UnaryOperator 0x27b16c67820 <line:353:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x27b16c67808 <col:10> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x27b16c677e8 <col:10> 'const char *' lvalue ParmVar 0x27b16c67248 'vstart' 'const char *'
|   | `-ReturnStmt 0x27b16c67860 <line:354:9, col:16>
|   |   `-IntegerLiteral 0x27b16c67838 <col:16> 'int' 0
|   |-BinaryOperator 0x27b16c5fca8 <line:355:5, col:40> 'long' '='
|   | |-DeclRefExpr 0x27b16c67888 <col:5> 'long' lvalue Var 0x27b16c676d0 'tag_num' 'long'
|   | `-ImplicitCastExpr 0x27b16c5fc90 <col:15, col:40> 'long' <IntegralCast>
|   |   `-CallExpr 0x27b16c5fc40 <col:15, col:40> 'unsigned long'
|   |     |-ImplicitCastExpr 0x27b16c5fc28 <col:15> 'unsigned long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x27b16c5fb10 <col:15> 'unsigned long (const char *, char **, int)' Function 0x27b16c67930 'strtoul' 'unsigned long (const char *, char **, int)'
|   |     |-ImplicitCastExpr 0x27b16c5fc78 <col:23> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x27b16c5fb48 <col:23> 'const char *' lvalue ParmVar 0x27b16c67248 'vstart' 'const char *'
|   |     |-UnaryOperator 0x27b16c5fba0 <col:31, col:32> 'char **' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x27b16c5fb68 <col:32> 'char *' lvalue Var 0x27b16c67768 'eptr' 'char *'
|   |     `-IntegerLiteral 0x27b16c5fbb8 <col:38> 'int' 10
|   |-IfStmt 0x27b16c5ff48 <line:357:5, line:358:16>
|   | |-BinaryOperator 0x27b16c5fef0 <line:357:9, col:47> 'int' '&&'
|   | | |-BinaryOperator 0x27b16c5fdb0 <col:9, col:18> 'int' '&&'
|   | | | |-ImplicitCastExpr 0x27b16c5fd68 <col:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x27b16c5fcc8 <col:9> 'char *' lvalue Var 0x27b16c67768 'eptr' 'char *'
|   | | | `-ImplicitCastExpr 0x27b16c5fd98 <col:17, col:18> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x27b16c5fd80 <col:17, col:18> 'char' <LValueToRValue>
|   | | |     `-UnaryOperator 0x27b16c5fd50 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   | | |       `-ImplicitCastExpr 0x27b16c5fd38 <col:18> 'char *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x27b16c5fd18 <col:18> 'char *' lvalue Var 0x27b16c67768 'eptr' 'char *'
|   | | `-ParenExpr 0x27b16c5fed0 <col:26, col:47> 'int'
|   | |   `-BinaryOperator 0x27b16c5feb0 <col:27, col:43> 'int' '>'
|   | |     |-ImplicitCastExpr 0x27b16c5fe80 <col:27> 'char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x27b16c5fdd0 <col:27> 'char *' lvalue Var 0x27b16c67768 'eptr' 'char *'
|   | |     `-ImplicitCastExpr 0x27b16c5fe98 <col:34, col:43> 'char *' <BitCast>
|   | |       `-BinaryOperator 0x27b16c5fe60 <col:34, col:43> 'const char *' '+'
|   | |         |-ImplicitCastExpr 0x27b16c5fe30 <col:34> 'const char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x27b16c5fdf0 <col:34> 'const char *' lvalue ParmVar 0x27b16c67248 'vstart' 'const char *'
|   | |         `-ImplicitCastExpr 0x27b16c5fe48 <col:43> 'int' <LValueToRValue>
|   | |           `-DeclRefExpr 0x27b16c5fe10 <col:43> 'int' lvalue ParmVar 0x27b16c672c8 'vlen' 'int'
|   | `-ReturnStmt 0x27b16c5ff38 <line:358:9, col:16>
|   |   `-IntegerLiteral 0x27b16c5ff10 <col:16> 'int' 0
|   |-IfStmt 0x27b16c60068 <line:359:5, line:362:5>
|   | |-BinaryOperator 0x27b16c5ffd8 <line:359:9, col:19> 'int' '<'
|   | | |-ImplicitCastExpr 0x27b16c5ffa8 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x27b16c5ff60 <col:9> 'long' lvalue Var 0x27b16c676d0 'tag_num' 'long'
|   | | `-ImplicitCastExpr 0x27b16c5ffc0 <col:19> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x27b16c5ff80 <col:19> 'int' 0
|   | `-CompoundStmt 0x27b16c60050 <col:22, line:362:5>
|   |   `-ReturnStmt 0x27b16c60040 <line:361:9, col:16>
|   |     `-IntegerLiteral 0x27b16c60018 <col:16> 'int' 0
|   |-BinaryOperator 0x27b16c60120 <line:363:5, col:13> 'int' '='
|   | |-UnaryOperator 0x27b16c600b8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x27b16c600a0 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x27b16c60080 <col:6> 'int *' lvalue ParmVar 0x27b16c67348 'ptag' 'int *'
|   | `-ImplicitCastExpr 0x27b16c60108 <col:13> 'int' <IntegralCast>
|   |   `-ImplicitCastExpr 0x27b16c600f0 <col:13> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x27b16c600d0 <col:13> 'long' lvalue Var 0x27b16c676d0 'tag_num' 'long'
|   |-IfStmt 0x27b16c602c0 <line:365:5, line:368:16> has_else
|   | |-ImplicitCastExpr 0x27b16c60160 <line:365:9> 'char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x27b16c60140 <col:9> 'char *' lvalue Var 0x27b16c67768 'eptr' 'char *'
|   | |-CompoundAssignOperator 0x27b16c60228 <line:366:9, col:24> 'int' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |-DeclRefExpr 0x27b16c60178 <col:9> 'int' lvalue ParmVar 0x27b16c672c8 'vlen' 'int'
|   | | `-BinaryOperator 0x27b16c60208 <col:17, col:24> 'long long' '-'
|   | |   |-ImplicitCastExpr 0x27b16c601d8 <col:17> 'char *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x27b16c60198 <col:17> 'char *' lvalue Var 0x27b16c67768 'eptr' 'char *'
|   | |   `-ImplicitCastExpr 0x27b16c601f0 <col:24> 'const char *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x27b16c601b8 <col:24> 'const char *' lvalue ParmVar 0x27b16c67248 'vstart' 'const char *'
|   | `-BinaryOperator 0x27b16c602a0 <line:368:9, col:16> 'int' '='
|   |   |-DeclRefExpr 0x27b16c60258 <col:9> 'int' lvalue ParmVar 0x27b16c672c8 'vlen' 'int'
|   |   `-IntegerLiteral 0x27b16c60278 <col:16> 'int' 0
|   |-IfStmt 0x27b16c69ba0 <line:369:5, line:397:9> has_else
|   | |-ImplicitCastExpr 0x27b16c60308 <line:369:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x27b16c602e8 <col:9> 'int' lvalue ParmVar 0x27b16c672c8 'vlen' 'int'
|   | |-CompoundStmt 0x27b16c69b30 <col:15, line:396:5>
|   | | `-SwitchStmt 0x27b16c603a0 <line:370:9, line:395:9>
|   | |   |-ImplicitCastExpr 0x27b16c60388 <line:370:17, col:18> 'int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x27b16c60370 <col:17, col:18> 'char' <LValueToRValue>
|   | |   |   `-UnaryOperator 0x27b16c60358 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   | |   |     `-ImplicitCastExpr 0x27b16c60340 <col:18> 'char *' <LValueToRValue>
|   | |   |       `-DeclRefExpr 0x27b16c60320 <col:18> 'char *' lvalue Var 0x27b16c67768 'eptr' 'char *'
|   | |   `-CompoundStmt 0x27b16c60a20 <col:24, line:395:9>
|   | |     |-CaseStmt 0x27b16c603f0 <line:372:9, <invalid sloc>>
|   | |     | |-ConstantExpr 0x27b16c603d8 <col:14> 'int'
|   | |     | | `-CharacterLiteral 0x27b16c603c0 <col:14> 'int' 85
|   | |     | `-NullStmt 0x27b16c60468 <<invalid sloc>>
|   | |     |-BreakStmt 0x27b16c60470 <line:374:13>
|   | |     |-CaseStmt 0x27b16c604a8 <line:376:9, <invalid sloc>>
|   | |     | |-ConstantExpr 0x27b16c60490 <col:14> 'int'
|   | |     | | `-CharacterLiteral 0x27b16c60478 <col:14> 'int' 65
|   | |     | `-NullStmt 0x27b16c60520 <<invalid sloc>>
|   | |     |-BreakStmt 0x27b16c60528 <line:378:13>
|   | |     |-CaseStmt 0x27b16c60560 <line:380:9, <invalid sloc>>
|   | |     | |-ConstantExpr 0x27b16c60548 <col:14> 'int'
|   | |     | | `-CharacterLiteral 0x27b16c60530 <col:14> 'int' 80
|   | |     | `-NullStmt 0x27b16c605d8 <<invalid sloc>>
|   | |     |-BreakStmt 0x27b16c605e0 <line:382:13>
|   | |     |-CaseStmt 0x27b16c60618 <line:384:9, <invalid sloc>>
|   | |     | |-ConstantExpr 0x27b16c60600 <col:14> 'int'
|   | |     | | `-CharacterLiteral 0x27b16c605e8 <col:14> 'int' 67
|   | |     | `-NullStmt 0x27b16c60690 <<invalid sloc>>
|   | |     |-BreakStmt 0x27b16c60698 <line:386:13>
|   | |     |-DefaultStmt 0x27b16c607c0 <line:388:9, line:389:24>
|   | |     | `-BinaryOperator 0x27b16c607a0 <col:13, col:24> 'char' '='
|   | |     |   |-ArraySubscriptExpr 0x27b16c60718 <col:13, col:19> 'char' lvalue
|   | |     |   | |-ImplicitCastExpr 0x27b16c60700 <col:13> 'char *' <ArrayToPointerDecay>
|   | |     |   | | `-DeclRefExpr 0x27b16c606a0 <col:13> 'char [2]' lvalue Var 0x27b16c67638 'erch' 'char [2]'
|   | |     |   | `-IntegerLiteral 0x27b16c606d8 <col:18> 'int' 0
|   | |     |   `-ImplicitCastExpr 0x27b16c60788 <col:23, col:24> 'char' <LValueToRValue>
|   | |     |     `-UnaryOperator 0x27b16c60770 <col:23, col:24> 'char' lvalue prefix '*' cannot overflow
|   | |     |       `-ImplicitCastExpr 0x27b16c60758 <col:24> 'char *' <LValueToRValue>
|   | |     |         `-DeclRefExpr 0x27b16c60738 <col:24> 'char *' lvalue Var 0x27b16c67768 'eptr' 'char *'
|   | |     |-BinaryOperator 0x27b16c608a0 <line:390:13, col:23> 'char' '='
|   | |     | |-ArraySubscriptExpr 0x27b16c60840 <col:13, col:19> 'char' lvalue
|   | |     | | |-ImplicitCastExpr 0x27b16c60828 <col:13> 'char *' <ArrayToPointerDecay>
|   | |     | | | `-DeclRefExpr 0x27b16c607e0 <col:13> 'char [2]' lvalue Var 0x27b16c67638 'erch' 'char [2]'
|   | |     | | `-IntegerLiteral 0x27b16c60800 <col:18> 'int' 1
|   | |     | `-ImplicitCastExpr 0x27b16c60888 <col:23> 'char' <IntegralCast>
|   | |     |   `-IntegerLiteral 0x27b16c60860 <col:23> 'int' 0
|   | |     |-CallExpr 0x27b16c60980 <line:392:13, col:48> 'int'
|   | |     | |-ImplicitCastExpr 0x27b16c60968 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x27b16c608e0 <col:13> 'int ()' Function 0x27b16c646f0 'ERR_add_error_data' 'int ()'
|   | |     | |-IntegerLiteral 0x27b16c60900 <col:32> 'int' 2
|   | |     | |-ImplicitCastExpr 0x27b16c609b8 <col:35> 'char *' <ArrayToPointerDecay>
|   | |     | | `-StringLiteral 0x27b16c60928 <col:35> 'char [6]' lvalue "Char="
|   | |     | `-ImplicitCastExpr 0x27b16c609d0 <col:44> 'char *' <ArrayToPointerDecay>
|   | |     |   `-DeclRefExpr 0x27b16c60948 <col:44> 'char [2]' lvalue Var 0x27b16c67638 'erch' 'char [2]'
|   | |     `-ReturnStmt 0x27b16c60a10 <line:393:13, col:20>
|   | |       `-IntegerLiteral 0x27b16c609e8 <col:20> 'int' 0
|   | `-NullStmt 0x27b16c69b98 <line:397:9>
|   `-ReturnStmt 0x27b16c69bf0 <line:399:5, col:12>
|     `-IntegerLiteral 0x27b16c69bc8 <col:12> 'int' 1
|-FunctionDecl 0x27b16c67930 <line:355:15> col:15 implicit used strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x27b16c679d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x27b16c67a38 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x27b16c5fa90 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x27b16c69f38 <line:405:1, line:464:1> line:405:19 invalid asn1_multi 'int *(int, const char *, int *, int, int *)' static
| |-ParmVarDecl 0x27b16c69c80 <col:30, col:34> col:34 used utype 'int'
| |-ParmVarDecl 0x27b16c69d00 <col:41, col:53> col:53 used section 'const char *'
| |-ParmVarDecl 0x27b16c69d80 <col:62, col:74> col:74 invalid cnf 'int *'
| |-ParmVarDecl 0x27b16c69e00 <line:406:30, col:34> col:34 used depth 'int'
| |-ParmVarDecl 0x27b16c69e80 <col:41, col:46> col:46 used perr 'int *'
| `-CompoundStmt 0x27b16c6d808 <line:407:1, line:464:1>
|   |-DeclStmt 0x27b16c6a1c8 <line:411:5, col:30>
|   | `-VarDecl 0x27b16c6a160 <col:5, col:20> col:20 used der 'unsigned char *'
|   |-DeclStmt 0x27b16c6a260 <line:412:5, col:15>
|   | `-VarDecl 0x27b16c6a1f8 <col:5, col:9> col:9 used derlen 'int'
|   |-DeclStmt 0x27b16c6a2f8 <line:413:5, col:10>
|   | `-VarDecl 0x27b16c6a290 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x27b16c6a4d8 <line:415:5, line:416:14>
|   | |-OpaqueValueExpr 0x27b16c6a4c0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x27b16c6a4a8 <col:9, col:14> 'bad' 0x27b16c6a458
|   |-IfStmt 0x27b16c6cd58 <line:417:5, line:432:5>
|   | |-ImplicitCastExpr 0x27b16c6a528 <line:417:9> 'const char *' <LValueToRValue>
|   | | `-DeclRefExpr 0x27b16c6a4f0 <col:9> 'const char *' lvalue ParmVar 0x27b16c69d00 'section' 'const char *'
|   | `-CompoundStmt 0x27b16c6cd38 <col:18, line:432:5>
|   |   |-IfStmt 0x27b16c6a570 <line:418:9, line:419:18>
|   |   | |-OpaqueValueExpr 0x27b16c6a558 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x27b16c6a540 <col:13, col:18> 'bad' 0x27b16c6a458
|   |   `-IfStmt 0x27b16c6a740 <line:421:9, line:422:18>
|   |     |-OpaqueValueExpr 0x27b16c6a728 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x27b16c6a710 <col:13, col:18> 'bad' 0x27b16c6a458
|   |-IfStmt 0x27b16c6d140 <line:443:5, line:444:14>
|   | |-BinaryOperator 0x27b16c6d108 <line:443:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x27b16c6d0f0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x27b16c6d0a8 <col:9> 'int' lvalue Var 0x27b16c6a1f8 'derlen' 'int'
|   | | `-IntegerLiteral 0x27b16c6d0c8 <col:18> 'int' 0
|   | `-GotoStmt 0x27b16c6d128 <line:444:9, col:14> 'bad' 0x27b16c6a458
|   |-IfStmt 0x27b16c6d2d0 <line:445:5, line:446:14>
|   | |-OpaqueValueExpr 0x27b16c6d2b8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x27b16c6d2a0 <col:9, col:14> 'bad' 0x27b16c6a458
|   |-IfStmt 0x27b16c6d4a0 <line:447:5, line:448:14>
|   | |-OpaqueValueExpr 0x27b16c6d488 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x27b16c6d470 <col:9, col:14> 'bad' 0x27b16c6a458
|   `-LabelStmt 0x27b16c6d5d0 <line:456:2, line:458:21> 'bad'
|     `-CallExpr 0x27b16c6d590 <col:5, col:21> 'int'
|       |-ImplicitCastExpr 0x27b16c6d578 <col:5> 'int (*)()' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x27b16c6d538 <col:5> 'int ()' Function 0x27b16c631c0 'OPENSSL_free' 'int ()'
|       `-ImplicitCastExpr 0x27b16c6d5b8 <col:18> 'unsigned char *' <LValueToRValue>
|         `-DeclRefExpr 0x27b16c6d558 <col:18> 'unsigned char *' lvalue Var 0x27b16c6a160 'der' 'unsigned char *'
|-FunctionDecl 0x27b16c67bf8 prev 0x27b16c53400 <line:466:1, line:500:1> line:466:12 used append_exp 'int (tag_exp_arg *, int, int, int, int, int)' static
| |-ParmVarDecl 0x27b16c6d870 <col:23, col:36> col:36 used arg 'tag_exp_arg *'
| |-ParmVarDecl 0x27b16c6d8f0 <col:41, col:45> col:45 used exp_tag 'int'
| |-ParmVarDecl 0x27b16c6d970 <col:54, col:58> col:58 used exp_class 'int'
| |-ParmVarDecl 0x27b16c6d9f0 <line:467:23, col:27> col:27 used exp_constructed 'int'
| |-ParmVarDecl 0x27b16c6da70 <col:44, col:48> col:48 used exp_pad 'int'
| |-ParmVarDecl 0x27b16c6daf0 <col:57, col:61> col:61 used imp_ok 'int'
| `-CompoundStmt 0x27b16c68a60 <line:468:1, line:500:1>
|   |-DeclStmt 0x27b16c67d40 <line:469:5, col:26>
|   | `-VarDecl 0x27b16c67cd8 <col:5, col:19> col:19 used exp_tmp 'tag_exp_type *'
|   |-IfStmt 0x27b16c67f38 <line:471:5, line:474:5>
|   | |-BinaryOperator 0x27b16c67ea8 <line:471:9, col:34> 'int' '&&'
|   | | |-ParenExpr 0x27b16c67e38 <col:9, col:28> 'int'
|   | | | `-BinaryOperator 0x27b16c67e18 <col:10, col:27> 'int' '!='
|   | | |   |-ImplicitCastExpr 0x27b16c67e00 <col:10, col:15> 'int' <LValueToRValue>
|   | | |   | `-MemberExpr 0x27b16c67d90 <col:10, col:15> 'int' lvalue ->imp_tag 0x27b16c51fc8
|   | | |   |   `-ImplicitCastExpr 0x27b16c67d78 <col:10> 'tag_exp_arg *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x27b16c67d58 <col:10> 'tag_exp_arg *' lvalue ParmVar 0x27b16c6d870 'arg' 'tag_exp_arg *'
|   | | |   `-UnaryOperator 0x27b16c67de8 <col:26, col:27> 'int' prefix '-'
|   | | |     `-IntegerLiteral 0x27b16c67dc0 <col:27> 'int' 1
|   | | `-UnaryOperator 0x27b16c67e90 <col:33, col:34> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x27b16c67e78 <col:34> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x27b16c67e58 <col:34> 'int' lvalue ParmVar 0x27b16c6daf0 'imp_ok' 'int'
|   | `-CompoundStmt 0x27b16c67f20 <col:42, line:474:5>
|   |   `-ReturnStmt 0x27b16c67f10 <line:473:9, col:16>
|   |     `-IntegerLiteral 0x27b16c67ee8 <col:16> 'int' 0
|   |-IfStmt 0x27b16c68088 <line:476:5, line:479:5>
|   | |-BinaryOperator 0x27b16c67ff8 <line:476:9, line:26:33> 'int' '=='
|   | | |-ImplicitCastExpr 0x27b16c67fe0 <line:476:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x27b16c67f88 <col:9, col:14> 'int' lvalue ->exp_count 0x27b16c523b8
|   | | |   `-ImplicitCastExpr 0x27b16c67f70 <col:9> 'tag_exp_arg *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x27b16c67f50 <col:9> 'tag_exp_arg *' lvalue ParmVar 0x27b16c6d870 'arg' 'tag_exp_arg *'
|   | | `-IntegerLiteral 0x27b16c67fb8 <line:26:33> 'int' 20
|   | `-CompoundStmt 0x27b16c68070 <line:476:46, line:479:5>
|   |   `-ReturnStmt 0x27b16c68060 <line:478:9, col:16>
|   |     `-IntegerLiteral 0x27b16c68038 <col:16> 'int' 0
|   |-BinaryOperator 0x27b16c68210 <line:481:5, col:46> 'tag_exp_type *' '='
|   | |-DeclRefExpr 0x27b16c680a0 <col:5> 'tag_exp_type *' lvalue Var 0x27b16c67cd8 'exp_tmp' 'tag_exp_type *'
|   | `-UnaryOperator 0x27b16c681f8 <col:15, col:46> 'tag_exp_type *' prefix '&' cannot overflow
|   |   `-ArraySubscriptExpr 0x27b16c681d8 <col:16, col:46> 'tag_exp_type':'tag_exp_type' lvalue
|   |     |-ImplicitCastExpr 0x27b16c681c0 <col:16, col:21> 'tag_exp_type *' <ArrayToPointerDecay>
|   |     | `-MemberExpr 0x27b16c68110 <col:16, col:21> 'tag_exp_type [20]' lvalue ->exp_list 0x27b16c52348
|   |     |   `-ImplicitCastExpr 0x27b16c680f8 <col:16> 'tag_exp_arg *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x27b16c680d8 <col:16> 'tag_exp_arg *' lvalue ParmVar 0x27b16c6d870 'arg' 'tag_exp_arg *'
|   |     `-UnaryOperator 0x27b16c681a8 <col:30, col:44> 'int' postfix '++'
|   |       `-MemberExpr 0x27b16c68178 <col:30, col:35> 'int' lvalue ->exp_count 0x27b16c523b8
|   |         `-ImplicitCastExpr 0x27b16c68160 <col:30> 'tag_exp_arg *' <LValueToRValue>
|   |           `-DeclRefExpr 0x27b16c68140 <col:30> 'tag_exp_arg *' lvalue ParmVar 0x27b16c6d870 'arg' 'tag_exp_arg *'
|   |-IfStmt 0x27b16c68880 <line:487:5, line:495:5> has_else
|   | |-BinaryOperator 0x27b16c682f0 <line:487:9, col:26> 'int' '!='
|   | | |-ImplicitCastExpr 0x27b16c682d8 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x27b16c68268 <col:9, col:14> 'int' lvalue ->imp_tag 0x27b16c51fc8
|   | | |   `-ImplicitCastExpr 0x27b16c68250 <col:9> 'tag_exp_arg *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x27b16c68230 <col:9> 'tag_exp_arg *' lvalue ParmVar 0x27b16c6d870 'arg' 'tag_exp_arg *'
|   | | `-UnaryOperator 0x27b16c682c0 <col:25, col:26> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x27b16c68298 <col:26> 'int' 1
|   | |-CompoundStmt 0x27b16c686b0 <col:29, line:492:5>
|   | | |-BinaryOperator 0x27b16c683f8 <line:488:9, col:33> 'int' '='
|   | | | |-MemberExpr 0x27b16c68348 <col:9, col:18> 'int' lvalue ->exp_tag 0x27b16c51c18
|   | | | | `-ImplicitCastExpr 0x27b16c68330 <col:9> 'tag_exp_type *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x27b16c68310 <col:9> 'tag_exp_type *' lvalue Var 0x27b16c67cd8 'exp_tmp' 'tag_exp_type *'
|   | | | `-ImplicitCastExpr 0x27b16c683e0 <col:28, col:33> 'int' <LValueToRValue>
|   | | |   `-MemberExpr 0x27b16c683b0 <col:28, col:33> 'int' lvalue ->imp_tag 0x27b16c51fc8
|   | | |     `-ImplicitCastExpr 0x27b16c68398 <col:28> 'tag_exp_arg *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x27b16c68378 <col:28> 'tag_exp_arg *' lvalue ParmVar 0x27b16c6d870 'arg' 'tag_exp_arg *'
|   | | |-BinaryOperator 0x27b16c68500 <line:489:9, col:35> 'int' '='
|   | | | |-MemberExpr 0x27b16c68450 <col:9, col:18> 'int' lvalue ->exp_class 0x27b16c51c88
|   | | | | `-ImplicitCastExpr 0x27b16c68438 <col:9> 'tag_exp_type *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x27b16c68418 <col:9> 'tag_exp_type *' lvalue Var 0x27b16c67cd8 'exp_tmp' 'tag_exp_type *'
|   | | | `-ImplicitCastExpr 0x27b16c684e8 <col:30, col:35> 'int' <LValueToRValue>
|   | | |   `-MemberExpr 0x27b16c684b8 <col:30, col:35> 'int' lvalue ->imp_class 0x27b16c52038
|   | | |     `-ImplicitCastExpr 0x27b16c684a0 <col:30> 'tag_exp_arg *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x27b16c68480 <col:30> 'tag_exp_arg *' lvalue ParmVar 0x27b16c6d870 'arg' 'tag_exp_arg *'
|   | | |-BinaryOperator 0x27b16c685c8 <line:490:9, col:25> 'int' '='
|   | | | |-MemberExpr 0x27b16c68558 <col:9, col:14> 'int' lvalue ->imp_tag 0x27b16c51fc8
|   | | | | `-ImplicitCastExpr 0x27b16c68540 <col:9> 'tag_exp_arg *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x27b16c68520 <col:9> 'tag_exp_arg *' lvalue ParmVar 0x27b16c6d870 'arg' 'tag_exp_arg *'
|   | | | `-UnaryOperator 0x27b16c685b0 <col:24, col:25> 'int' prefix '-'
|   | | |   `-IntegerLiteral 0x27b16c68588 <col:25> 'int' 1
|   | | `-BinaryOperator 0x27b16c68690 <line:491:9, col:27> 'int' '='
|   | |   |-MemberExpr 0x27b16c68620 <col:9, col:14> 'int' lvalue ->imp_class 0x27b16c52038
|   | |   | `-ImplicitCastExpr 0x27b16c68608 <col:9> 'tag_exp_arg *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x27b16c685e8 <col:9> 'tag_exp_arg *' lvalue ParmVar 0x27b16c6d870 'arg' 'tag_exp_arg *'
|   | |   `-UnaryOperator 0x27b16c68678 <col:26, col:27> 'int' prefix '-'
|   | |     `-IntegerLiteral 0x27b16c68650 <col:27> 'int' 1
|   | `-CompoundStmt 0x27b16c68860 <line:492:12, line:495:5>
|   |   |-BinaryOperator 0x27b16c68780 <line:493:9, col:28> 'int' '='
|   |   | |-MemberExpr 0x27b16c68718 <col:9, col:18> 'int' lvalue ->exp_tag 0x27b16c51c18
|   |   | | `-ImplicitCastExpr 0x27b16c68700 <col:9> 'tag_exp_type *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x27b16c686e0 <col:9> 'tag_exp_type *' lvalue Var 0x27b16c67cd8 'exp_tmp' 'tag_exp_type *'
|   |   | `-ImplicitCastExpr 0x27b16c68768 <col:28> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x27b16c68748 <col:28> 'int' lvalue ParmVar 0x27b16c6d8f0 'exp_tag' 'int'
|   |   `-BinaryOperator 0x27b16c68840 <line:494:9, col:30> 'int' '='
|   |     |-MemberExpr 0x27b16c687d8 <col:9, col:18> 'int' lvalue ->exp_class 0x27b16c51c88
|   |     | `-ImplicitCastExpr 0x27b16c687c0 <col:9> 'tag_exp_type *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x27b16c687a0 <col:9> 'tag_exp_type *' lvalue Var 0x27b16c67cd8 'exp_tmp' 'tag_exp_type *'
|   |     `-ImplicitCastExpr 0x27b16c68828 <col:30> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x27b16c68808 <col:30> 'int' lvalue ParmVar 0x27b16c6d970 'exp_class' 'int'
|   |-BinaryOperator 0x27b16c68948 <line:496:5, col:32> 'int' '='
|   | |-MemberExpr 0x27b16c688e0 <col:5, col:14> 'int' lvalue ->exp_constructed 0x27b16c51cf8
|   | | `-ImplicitCastExpr 0x27b16c688c8 <col:5> 'tag_exp_type *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x27b16c688a8 <col:5> 'tag_exp_type *' lvalue Var 0x27b16c67cd8 'exp_tmp' 'tag_exp_type *'
|   | `-ImplicitCastExpr 0x27b16c68930 <col:32> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x27b16c68910 <col:32> 'int' lvalue ParmVar 0x27b16c6d9f0 'exp_constructed' 'int'
|   |-BinaryOperator 0x27b16c68a08 <line:497:5, col:24> 'int' '='
|   | |-MemberExpr 0x27b16c689a0 <col:5, col:14> 'int' lvalue ->exp_pad 0x27b16c51d68
|   | | `-ImplicitCastExpr 0x27b16c68988 <col:5> 'tag_exp_type *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x27b16c68968 <col:5> 'tag_exp_type *' lvalue Var 0x27b16c67cd8 'exp_tmp' 'tag_exp_type *'
|   | `-ImplicitCastExpr 0x27b16c689f0 <col:24> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x27b16c689d0 <col:24> 'int' lvalue ParmVar 0x27b16c6da70 'exp_pad' 'int'
|   `-ReturnStmt 0x27b16c68a50 <line:499:5, col:12>
|     `-IntegerLiteral 0x27b16c68a28 <col:12> 'int' 1
|-FunctionDecl 0x27b16c6ecd0 prev 0x27b16c54190 <line:502:1, line:576:1> line:502:12 used asn1_str2tag 'int (const char *, int)' static
| |-ParmVarDecl 0x27b16c6eb80 <col:25, col:37> col:37 used tagstr 'const char *'
| |-ParmVarDecl 0x27b16c6ec00 <col:45, col:49> col:49 used len 'int'
| `-CompoundStmt 0x27b16c722e0 <line:503:1, line:576:1>
|   |-DeclStmt 0x27b16c6ee00 <line:504:5, col:19>
|   | `-VarDecl 0x27b16c6ed98 <col:5, col:18> col:18 used i 'unsigned int'
|   |-DeclStmt 0x27b16c71728 <line:505:5, line:564:6>
|   | |-VarDecl 0x27b16c6eed0 <line:505:5, col:38> col:38 used tntmp 'const struct tag_name_st *' static
|   | `-VarDecl 0x27b16c6efc8 <col:5, col:50> col:45 used tnst 'const struct tag_name_st []' static
|   |-IfStmt 0x27b16c71a68 <line:566:5, line:567:28>
|   | |-BinaryOperator 0x27b16c717b8 <line:566:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x27b16c717a0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x27b16c71740 <col:9> 'int' lvalue ParmVar 0x27b16c6ec00 'len' 'int'
|   | | `-UnaryOperator 0x27b16c71788 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x27b16c71760 <col:17> 'int' 1
|   | `-BinaryOperator 0x27b16c71a48 <line:567:9, col:28> 'int' '='
|   |   |-DeclRefExpr 0x27b16c717d8 <col:9> 'int' lvalue ParmVar 0x27b16c6ec00 'len' 'int'
|   |   `-ImplicitCastExpr 0x27b16c71a30 <col:15, col:28> 'int' <IntegralCast>
|   |     `-CallExpr 0x27b16c719f0 <col:15, col:28> 'unsigned long long'
|   |       |-ImplicitCastExpr 0x27b16c719d8 <col:15> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x27b16c71940 <col:15> 'unsigned long long (const char *)' Function 0x27b16c71830 'strlen' 'unsigned long long (const char *)'
|   |       `-ImplicitCastExpr 0x27b16c71a18 <col:22> 'const char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x27b16c71978 <col:22> 'const char *' lvalue ParmVar 0x27b16c6eb80 'tagstr' 'const char *'
|   |-BinaryOperator 0x27b16c71b08 <line:569:5, col:13> 'const struct tag_name_st *' '='
|   | |-DeclRefExpr 0x27b16c71a80 <col:5> 'const struct tag_name_st *' lvalue Var 0x27b16c6eed0 'tntmp' 'const struct tag_name_st *'
|   | `-ImplicitCastExpr 0x27b16c71af0 <col:13> 'const struct tag_name_st *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x27b16c71ab8 <col:13> 'const struct tag_name_st []' lvalue Var 0x27b16c6efc8 'tnst' 'const struct tag_name_st []'
|   |-ForStmt 0x27b16c72258 <line:570:5, line:573:5>
|   | |-BinaryOperator 0x27b16c71bb0 <line:570:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x27b16c71b28 <col:10> 'unsigned int' lvalue Var 0x27b16c6ed98 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x27b16c71b88 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x27b16c71b60 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x27b16c71da8 <col:17, col:36> 'int' '<'
|   | | |-ImplicitCastExpr 0x27b16c71d78 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x27b16c71bd0 <col:17> 'unsigned int' lvalue Var 0x27b16c6ed98 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x27b16c71d90 <col:21, col:36> 'unsigned int' <IntegralCast>
|   | |   `-CallExpr 0x27b16c71d38 <col:21, col:36> 'int'
|   | |     |-ImplicitCastExpr 0x27b16c71d20 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   | |     | `-DeclRefExpr 0x27b16c71ce0 <col:21> 'int ()' Function 0x27b16c71c18 'OSSL_NELEM' 'int ()'
|   | |     `-ImplicitCastExpr 0x27b16c71d60 <col:32> 'const struct tag_name_st *' <ArrayToPointerDecay>
|   | |       `-DeclRefExpr 0x27b16c71d00 <col:32> 'const struct tag_name_st []' lvalue Var 0x27b16c6efc8 'tnst' 'const struct tag_name_st []'
|   | |-BinaryOperator 0x27b16c71e38 <col:39, col:49> 'const struct tag_name_st *' ','
|   | | |-UnaryOperator 0x27b16c71de8 <col:39, col:40> 'unsigned int' postfix '++'
|   | | | `-DeclRefExpr 0x27b16c71dc8 <col:39> 'unsigned int' lvalue Var 0x27b16c6ed98 'i' 'unsigned int'
|   | | `-UnaryOperator 0x27b16c71e20 <col:44, col:49> 'const struct tag_name_st *' postfix '++'
|   | |   `-DeclRefExpr 0x27b16c71e00 <col:44> 'const struct tag_name_st *' lvalue Var 0x27b16c6eed0 'tntmp' 'const struct tag_name_st *'
|   | `-CompoundStmt 0x27b16c72240 <col:53, line:573:5>
|   |   `-IfStmt 0x27b16c72228 <line:571:9, line:572:27>
|   |     |-BinaryOperator 0x27b16c72178 <line:571:13, col:77> 'int' '&&'
|   |     | |-ParenExpr 0x27b16c71f30 <col:13, col:31> 'int'
|   |     | | `-BinaryOperator 0x27b16c71f10 <col:14, col:28> 'int' '=='
|   |     | |   |-ImplicitCastExpr 0x27b16c71ee0 <col:14> 'int' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x27b16c71e58 <col:14> 'int' lvalue ParmVar 0x27b16c6ec00 'len' 'int'
|   |     | |   `-ImplicitCastExpr 0x27b16c71ef8 <col:21, col:28> 'int' <LValueToRValue>
|   |     | |     `-MemberExpr 0x27b16c71eb0 <col:21, col:28> 'const int' lvalue ->len 0x27b16bedde8
|   |     | |       `-ImplicitCastExpr 0x27b16c71e98 <col:21> 'const struct tag_name_st *' <LValueToRValue>
|   |     | |         `-DeclRefExpr 0x27b16c71e78 <col:21> 'const struct tag_name_st *' lvalue Var 0x27b16c6eed0 'tntmp' 'const struct tag_name_st *'
|   |     | `-ParenExpr 0x27b16c72158 <col:36, col:77> 'int'
|   |     |   `-BinaryOperator 0x27b16c72138 <col:37, col:76> 'int' '=='
|   |     |     |-CallExpr 0x27b16c72078 <col:37, col:71> 'int'
|   |     |     | |-ImplicitCastExpr 0x27b16c72060 <col:37> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   |     |     | | `-DeclRefExpr 0x27b16c71f50 <col:37> 'int (const char *, const char *, unsigned long long)' Function 0x27b16c5f2d0 'strncmp' 'int (const char *, const char *, unsigned long long)'
|   |     |     | |-ImplicitCastExpr 0x27b16c720b0 <col:45, col:52> 'const char *' <LValueToRValue>
|   |     |     | | `-MemberExpr 0x27b16c71fa8 <col:45, col:52> 'const char *const' lvalue ->strnam 0x27b16bedd78
|   |     |     | |   `-ImplicitCastExpr 0x27b16c71f90 <col:45> 'const struct tag_name_st *' <LValueToRValue>
|   |     |     | |     `-DeclRefExpr 0x27b16c71f70 <col:45> 'const struct tag_name_st *' lvalue Var 0x27b16c6eed0 'tntmp' 'const struct tag_name_st *'
|   |     |     | |-ImplicitCastExpr 0x27b16c720c8 <col:60> 'const char *' <LValueToRValue>
|   |     |     | | `-DeclRefExpr 0x27b16c71fd8 <col:60> 'const char *' lvalue ParmVar 0x27b16c6eb80 'tagstr' 'const char *'
|   |     |     | `-ImplicitCastExpr 0x27b16c720f8 <col:68> 'unsigned long long' <IntegralCast>
|   |     |     |   `-ImplicitCastExpr 0x27b16c720e0 <col:68> 'int' <LValueToRValue>
|   |     |     |     `-DeclRefExpr 0x27b16c71ff8 <col:68> 'int' lvalue ParmVar 0x27b16c6ec00 'len' 'int'
|   |     |     `-IntegerLiteral 0x27b16c72110 <col:76> 'int' 0
|   |     `-ReturnStmt 0x27b16c72218 <line:572:13, col:27>
|   |       `-ImplicitCastExpr 0x27b16c72200 <col:20, col:27> 'int' <LValueToRValue>
|   |         `-MemberExpr 0x27b16c721d0 <col:20, col:27> 'const int' lvalue ->tag 0x27b16c51af0
|   |           `-ImplicitCastExpr 0x27b16c721b8 <col:20> 'const struct tag_name_st *' <LValueToRValue>
|   |             `-DeclRefExpr 0x27b16c72198 <col:20> 'const struct tag_name_st *' lvalue Var 0x27b16c6eed0 'tntmp' 'const struct tag_name_st *'
|   `-ReturnStmt 0x27b16c722d0 <line:575:5, col:13>
|     `-UnaryOperator 0x27b16c722b8 <col:12, col:13> 'int' prefix '-'
|       `-IntegerLiteral 0x27b16c72290 <col:13> 'int' 1
|-FunctionDecl 0x27b16c71830 <line:567:15> col:15 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x27b16c718d0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x27b16c72528 <line:578:1, line:743:1> line:578:19 invalid asn1_str2type 'int *(const char *, int, int)' static
| |-ParmVarDecl 0x27b16c72338 <col:33, col:45> col:45 used str 'const char *'
| |-ParmVarDecl 0x27b16c723b8 <col:50, col:54> col:54 used format 'int'
| |-ParmVarDecl 0x27b16c72438 <col:62, col:66> col:66 used utype 'int'
| `-CompoundStmt 0x27b16c74e38 <line:579:1, line:743:1>
|   |-DeclStmt 0x27b16c72678 <line:582:5, col:25>
|   | `-VarDecl 0x27b16c72610 <col:5, col:20> col:20 used rdata 'unsigned char *'
|   |-DeclStmt 0x27b16c72710 <line:583:5, col:15>
|   | `-VarDecl 0x27b16c726a8 <col:5, col:10> col:10 used rdlen 'long'
|   |-DeclStmt 0x27b16c727d0 <line:584:5, col:22>
|   | `-VarDecl 0x27b16c72740 <col:5, col:21> col:9 used no_unused 'int' cinit
|   |   `-IntegerLiteral 0x27b16c727a8 <col:21> 'int' 1
|   |-IfStmt 0x27b16c72888 <line:586:5, line:589:5>
|   | |-OpaqueValueExpr 0x27b16c72870 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x27b16c72860 <line:586:43, line:589:5>
|   |-IfStmt 0x27b16c729b0 <line:591:5, line:592:15>
|   | |-UnaryOperator 0x27b16c728d8 <line:591:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x27b16c728c0 <col:10> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x27b16c728a0 <col:10> 'const char *' lvalue ParmVar 0x27b16c72338 'str' 'const char *'
|   | `-BinaryOperator 0x27b16c72990 <line:592:9, col:15> 'const char *' '='
|   |   |-DeclRefExpr 0x27b16c728f0 <col:9> 'const char *' lvalue ParmVar 0x27b16c72338 'str' 'const char *'
|   |   `-ImplicitCastExpr 0x27b16c72978 <col:15> 'const char *' <NoOp>
|   |     `-ImplicitCastExpr 0x27b16c72960 <col:15> 'char *' <ArrayToPointerDecay>
|   |       `-StringLiteral 0x27b16c72948 <col:15> 'char [1]' lvalue ""
|   |-SwitchStmt 0x27b16c72a00 <line:594:5, line:731:5>
|   | |-ImplicitCastExpr 0x27b16c729e8 <line:594:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x27b16c729c8 <col:13> 'int' lvalue ParmVar 0x27b16c72438 'utype' 'int'
|   | `-CompoundStmt 0x27b16c74be0 <col:20, line:731:5>
|   |   |-IfStmt 0x27b16c72b98 <line:597:9, line:600:9>
|   |   | |-BinaryOperator 0x27b16c72ad8 <line:597:13, col:21> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x27b16c72a90 <col:13> 'const char *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x27b16c72a20 <col:13> 'const char *' lvalue ParmVar 0x27b16c72338 'str' 'const char *'
|   |   | | `-ImplicitCastExpr 0x27b16c72ac0 <col:20, col:21> 'int' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x27b16c72aa8 <col:20, col:21> 'char' <LValueToRValue>
|   |   | |     `-UnaryOperator 0x27b16c72a78 <col:20, col:21> 'const char' lvalue prefix '*' cannot overflow
|   |   | |       `-ImplicitCastExpr 0x27b16c72a60 <col:21> 'const char *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x27b16c72a40 <col:21> 'const char *' lvalue ParmVar 0x27b16c72338 'str' 'const char *'
|   |   | `-CompoundStmt 0x27b16c72b80 <col:26, line:600:9>
|   |   |   `-GotoStmt 0x27b16c72b68 <line:599:13, col:18> 'bad_form' 0x27b16c72b18
|   |   |-BreakStmt 0x27b16c72bc0 <line:601:9>
|   |   |-IfStmt 0x27b16c72c98 <line:604:9, line:607:9>
|   |   | |-BinaryOperator 0x27b16c72c28 <line:604:13, line:33:33> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x27b16c72c10 <line:604:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x27b16c72bc8 <col:13> 'int' lvalue ParmVar 0x27b16c723b8 'format' 'int'
|   |   | | `-IntegerLiteral 0x27b16c72be8 <line:33:33> 'int' 1
|   |   | `-CompoundStmt 0x27b16c72c80 <line:604:46, line:607:9>
|   |   |   `-GotoStmt 0x27b16c72c68 <line:606:13, col:18> 'bad_form' 0x27b16c72b18
|   |   |-IfStmt 0x27b16c72ef0 <line:611:9, line:614:9>
|   |   | |-OpaqueValueExpr 0x27b16c72ed8 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x27b16c72ec0 <line:611:66, line:614:9>
|   |   |   `-GotoStmt 0x27b16c72ea8 <line:613:13, col:18> 'bad_str' 0x27b16c72e58
|   |   |-BreakStmt 0x27b16c72f08 <line:615:9>
|   |   |-IfStmt 0x27b16c72fe0 <line:619:9, line:622:9>
|   |   | |-BinaryOperator 0x27b16c72f70 <line:619:13, line:33:33> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x27b16c72f58 <line:619:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x27b16c72f10 <col:13> 'int' lvalue ParmVar 0x27b16c723b8 'format' 'int'
|   |   | | `-IntegerLiteral 0x27b16c72f30 <line:33:33> 'int' 1
|   |   | `-CompoundStmt 0x27b16c72fc8 <line:619:46, line:622:9>
|   |   |   `-GotoStmt 0x27b16c72fb0 <line:621:13, col:18> 'bad_form' 0x27b16c72b18
|   |   |-IfStmt 0x27b16c73190 <line:623:9, line:627:9>
|   |   | |-OpaqueValueExpr 0x27b16c73178 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x27b16c73160 <line:624:61, line:627:9>
|   |   |   `-GotoStmt 0x27b16c73148 <line:626:13, col:18> 'bad_str' 0x27b16c72e58
|   |   |-BreakStmt 0x27b16c731a8 <line:628:9>
|   |   |-IfStmt 0x27b16c73280 <line:631:9, line:634:9>
|   |   | |-BinaryOperator 0x27b16c73210 <line:631:13, line:33:33> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x27b16c731f8 <line:631:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x27b16c731b0 <col:13> 'int' lvalue ParmVar 0x27b16c723b8 'format' 'int'
|   |   | | `-IntegerLiteral 0x27b16c731d0 <line:33:33> 'int' 1
|   |   | `-CompoundStmt 0x27b16c73268 <line:631:46, line:634:9>
|   |   |   `-GotoStmt 0x27b16c73250 <line:633:13, col:18> 'bad_form' 0x27b16c72b18
|   |   |-IfStmt 0x27b16c734b8 <line:635:9, line:638:9>
|   |   | |-OpaqueValueExpr 0x27b16c734a0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x27b16c73488 <line:635:65, line:638:9>
|   |   |   `-GotoStmt 0x27b16c73470 <line:637:13, col:18> 'bad_str' 0x27b16c72e58
|   |   |-BreakStmt 0x27b16c734d0 <line:639:9>
|   |   |-IfStmt 0x27b16c735a8 <line:643:9, line:646:9>
|   |   | |-BinaryOperator 0x27b16c73538 <line:643:13, line:33:33> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x27b16c73520 <line:643:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x27b16c734d8 <col:13> 'int' lvalue ParmVar 0x27b16c723b8 'format' 'int'
|   |   | | `-IntegerLiteral 0x27b16c734f8 <line:33:33> 'int' 1
|   |   | `-CompoundStmt 0x27b16c73590 <line:643:46, line:646:9>
|   |   |   `-GotoStmt 0x27b16c73578 <line:645:13, col:18> 'bad_form' 0x27b16c72b18
|   |   |-IfStmt 0x27b16c73770 <line:647:9, line:650:9>
|   |   | |-OpaqueValueExpr 0x27b16c73758 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x27b16c73740 <line:647:68, line:650:9>
|   |   |   `-GotoStmt 0x27b16c73728 <line:649:13, col:18> 'bad_str' 0x27b16c72e58
|   |   |-IfStmt 0x27b16c73960 <line:651:9, line:654:9>
|   |   | |-OpaqueValueExpr 0x27b16c73948 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x27b16c73930 <line:651:65, line:654:9>
|   |   |   `-GotoStmt 0x27b16c73918 <line:653:13, col:18> 'bad_str' 0x27b16c72e58
|   |   |-IfStmt 0x27b16c73b10 <line:656:9, line:659:9>
|   |   | |-OpaqueValueExpr 0x27b16c73af8 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x27b16c73ae0 <line:656:56, line:659:9>
|   |   |   `-GotoStmt 0x27b16c73ac8 <line:658:13, col:18> 'bad_str' 0x27b16c72e58
|   |   |-BreakStmt 0x27b16c73b28 <line:661:9>
|   |   |-IfStmt 0x27b16c73d18 <line:672:9, line:679:9> has_else
|   |   | |-BinaryOperator 0x27b16c73b90 <line:672:13, line:33:33> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x27b16c73b78 <line:672:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x27b16c73b30 <col:13> 'int' lvalue ParmVar 0x27b16c723b8 'format' 'int'
|   |   | | `-IntegerLiteral 0x27b16c73b50 <line:33:33> 'int' 1
|   |   | |-NullStmt 0x27b16c73d10 <line:673:13>
|   |   | `-IfStmt 0x27b16c73ce8 <line:674:14, line:679:9> has_else
|   |   |   |-BinaryOperator 0x27b16c73c50 <line:674:18, line:35:33> 'int' '=='
|   |   |   | |-ImplicitCastExpr 0x27b16c73c38 <line:674:18> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x27b16c73bf0 <col:18> 'int' lvalue ParmVar 0x27b16c723b8 'format' 'int'
|   |   |   | `-IntegerLiteral 0x27b16c73c10 <line:35:33> 'int' 2
|   |   |   |-NullStmt 0x27b16c73ce0 <line:675:13>
|   |   |   `-CompoundStmt 0x27b16c73cc8 <line:676:14, line:679:9>
|   |   |     `-GotoStmt 0x27b16c73cb0 <line:678:13, col:18> 'bad_form' 0x27b16c72b18
|   |   |-IfStmt 0x27b16c74140 <line:681:9, line:685:9>
|   |   | |-OpaqueValueExpr 0x27b16c74128 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x27b16c74110 <line:682:71, line:685:9>
|   |   |   `-GotoStmt 0x27b16c740f8 <line:684:13, col:18> 'bad_str' 0x27b16c72e58
|   |   |-BreakStmt 0x27b16c74158 <line:687:9>
|   |   |-IfStmt 0x27b16c74220 <line:691:9, line:694:9>
|   |   | |-OpaqueValueExpr 0x27b16c74208 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x27b16c741f0 <line:691:68, line:694:9>
|   |   |   `-GotoStmt 0x27b16c741d8 <line:693:13, col:18> 'bad_form' 0x27b16c72b18
|   |   |-IfStmt 0x27b16c74a60 <line:696:9, line:718:9> has_else
|   |   | |-BinaryOperator 0x27b16c74298 <line:696:13, line:37:33> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x27b16c74280 <line:696:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x27b16c74238 <col:13> 'int' lvalue ParmVar 0x27b16c723b8 'format' 'int'
|   |   | | `-IntegerLiteral 0x27b16c74258 <line:37:33> 'int' 3
|   |   | |-CompoundStmt 0x27b16c74608 <line:696:44, line:704:9>
|   |   | | `-IfStmt 0x27b16c74590 <line:697:13, line:700:13>
|   |   | |   |-OpaqueValueExpr 0x27b16c74578 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x27b16c74560 <line:697:68, line:700:13>
|   |   | |     `-GotoStmt 0x27b16c74548 <line:699:17, col:22> 'bad_str' 0x27b16c72e58
|   |   | `-IfStmt 0x27b16c74a38 <line:704:16, line:718:9> has_else
|   |   |   |-BinaryOperator 0x27b16c74680 <line:704:20, line:33:33> 'int' '=='
|   |   |   | |-ImplicitCastExpr 0x27b16c74668 <line:704:20> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x27b16c74620 <col:20> 'int' lvalue ParmVar 0x27b16c723b8 'format' 'int'
|   |   |   | `-IntegerLiteral 0x27b16c74640 <line:33:33> 'int' 1
|   |   |   |-NullStmt 0x27b16c74a30 <line:705:13>
|   |   |   `-IfStmt 0x27b16c74a08 <line:706:14, line:718:9> has_else
|   |   |     |-OpaqueValueExpr 0x27b16c749f0 <<invalid sloc>> '_Bool'
|   |   |     |-CompoundStmt 0x27b16c74980 <line:707:51, line:715:9>
|   |   |     | |-IfStmt 0x27b16c748e8 <line:708:13, line:712:13>
|   |   |     | | |-OpaqueValueExpr 0x27b16c748d0 <<invalid sloc>> '_Bool'
|   |   |     | | `-CompoundStmt 0x27b16c748b8 <line:709:67, line:712:13>
|   |   |     | |   `-GotoStmt 0x27b16c748a0 <line:711:17, col:22> 'bad_str' 0x27b16c72e58
|   |   |     | `-BinaryOperator 0x27b16c74960 <line:713:13, col:25> 'int' '='
|   |   |     |   |-DeclRefExpr 0x27b16c74900 <col:13> 'int' lvalue Var 0x27b16c72740 'no_unused' 'int'
|   |   |     |   `-IntegerLiteral 0x27b16c74938 <col:25> 'int' 0
|   |   |     `-CompoundStmt 0x27b16c749d8 <line:715:16, line:718:9>
|   |   |       `-GotoStmt 0x27b16c749c0 <line:717:13, col:18> 'bad_form' 0x27b16c72b18
|   |   |-IfStmt 0x27b16c74b18 <line:720:9, line:724:9>
|   |   | |-OpaqueValueExpr 0x27b16c74b00 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x27b16c74af0 <line:720:56, line:724:9>
|   |   |-BreakStmt 0x27b16c74b30 <line:726:9>
|   |   |-DefaultStmt 0x27b16c74b60 <line:728:5, col:12>
|   |   | `-NullStmt 0x27b16c74b58 <col:12>
|   |   `-GotoStmt 0x27b16c74b80 <line:730:9, col:14> 'bad_str' 0x27b16c72e58
|   |-LabelStmt 0x27b16c74de0 <line:736:2, line:737:41> 'bad_str'
|   | `-CallExpr 0x27b16c74d78 <col:5, col:41> 'int'
|   |   |-ImplicitCastExpr 0x27b16c74d60 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x27b16c74cd8 <col:5> 'int ()' Function 0x27b16c646f0 'ERR_add_error_data' 'int ()'
|   |   |-IntegerLiteral 0x27b16c74cf8 <col:24> 'int' 2
|   |   |-ImplicitCastExpr 0x27b16c74db0 <col:27> 'char *' <ArrayToPointerDecay>
|   |   | `-StringLiteral 0x27b16c74d20 <col:27> 'char [8]' lvalue "string="
|   |   `-ImplicitCastExpr 0x27b16c74dc8 <col:38> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x27b16c74d40 <col:38> 'const char *' lvalue ParmVar 0x27b16c72338 'str' 'const char *'
|   `-LabelStmt 0x27b16c74e20 <line:738:2, col:10> 'bad_form'
|     `-NullStmt 0x27b16c74e18 <col:10>
|-FunctionDecl 0x27b16c75090 prev 0x27b16c52b00 <line:745:1, line:763:1> line:745:12 used bitstr_cb 'int (const char *, int, void *)' static
| |-ParmVarDecl 0x27b16c74ea0 <col:22, col:34> col:34 used elem 'const char *'
| |-ParmVarDecl 0x27b16c74f20 <col:40, col:44> col:44 used len 'int'
| |-ParmVarDecl 0x27b16c74fa0 <col:49, col:55> col:55 used bitstr 'void *'
| `-CompoundStmt 0x27b16c75b18 <line:746:1, line:763:1>
|   |-DeclStmt 0x27b16c751c8 <line:747:5, col:16>
|   | `-VarDecl 0x27b16c75160 <col:5, col:10> col:10 used bitnum 'long'
|   |-DeclStmt 0x27b16c75260 <line:748:5, col:15>
|   | `-VarDecl 0x27b16c751f8 <col:5, col:11> col:11 used eptr 'char *'
|   |-IfStmt 0x27b16c75300 <line:749:5, line:750:16>
|   | |-UnaryOperator 0x27b16c752b0 <line:749:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x27b16c75298 <col:10> 'const char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x27b16c75278 <col:10> 'const char *' lvalue ParmVar 0x27b16c74ea0 'elem' 'const char *'
|   | `-ReturnStmt 0x27b16c752f0 <line:750:9, col:16>
|   |   `-IntegerLiteral 0x27b16c752c8 <col:16> 'int' 0
|   |-BinaryOperator 0x27b16c754a0 <line:751:5, col:37> 'long' '='
|   | |-DeclRefExpr 0x27b16c75318 <col:5> 'long' lvalue Var 0x27b16c75160 'bitnum' 'long'
|   | `-ImplicitCastExpr 0x27b16c75488 <col:14, col:37> 'long' <IntegralCast>
|   |   `-CallExpr 0x27b16c75438 <col:14, col:37> 'unsigned long'
|   |     |-ImplicitCastExpr 0x27b16c75420 <col:14> 'unsigned long (*)(const char *, char **, int)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x27b16c75350 <col:14> 'unsigned long (const char *, char **, int)' Function 0x27b16c67930 'strtoul' 'unsigned long (const char *, char **, int)'
|   |     |-ImplicitCastExpr 0x27b16c75470 <col:22> 'const char *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x27b16c75370 <col:22> 'const char *' lvalue ParmVar 0x27b16c74ea0 'elem' 'const char *'
|   |     |-UnaryOperator 0x27b16c753c8 <col:28, col:29> 'char **' prefix '&' cannot overflow
|   |     | `-DeclRefExpr 0x27b16c75390 <col:29> 'char *' lvalue Var 0x27b16c751f8 'eptr' 'char *'
|   |     `-IntegerLiteral 0x27b16c753e0 <col:35> 'int' 10
|   |-IfStmt 0x27b16c75710 <line:752:5, line:753:16>
|   | |-BinaryOperator 0x27b16c756b8 <line:752:9, col:45> 'int' '&&'
|   | | |-BinaryOperator 0x27b16c75578 <col:9, col:18> 'int' '&&'
|   | | | |-ImplicitCastExpr 0x27b16c75530 <col:9> 'char *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x27b16c754c0 <col:9> 'char *' lvalue Var 0x27b16c751f8 'eptr' 'char *'
|   | | | `-ImplicitCastExpr 0x27b16c75560 <col:17, col:18> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x27b16c75548 <col:17, col:18> 'char' <LValueToRValue>
|   | | |     `-UnaryOperator 0x27b16c75518 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|   | | |       `-ImplicitCastExpr 0x27b16c75500 <col:18> 'char *' <LValueToRValue>
|   | | |         `-DeclRefExpr 0x27b16c754e0 <col:18> 'char *' lvalue Var 0x27b16c751f8 'eptr' 'char *'
|   | | `-ParenExpr 0x27b16c75698 <col:26, col:45> 'int'
|   | |   `-BinaryOperator 0x27b16c75678 <col:27, col:42> 'int' '!='
|   | |     |-ImplicitCastExpr 0x27b16c75648 <col:27> 'char *' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x27b16c75598 <col:27> 'char *' lvalue Var 0x27b16c751f8 'eptr' 'char *'
|   | |     `-ImplicitCastExpr 0x27b16c75660 <col:35, col:42> 'char *' <BitCast>
|   | |       `-BinaryOperator 0x27b16c75628 <col:35, col:42> 'const char *' '+'
|   | |         |-ImplicitCastExpr 0x27b16c755f8 <col:35> 'const char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x27b16c755b8 <col:35> 'const char *' lvalue ParmVar 0x27b16c74ea0 'elem' 'const char *'
|   | |         `-ImplicitCastExpr 0x27b16c75610 <col:42> 'int' <LValueToRValue>
|   | |           `-DeclRefExpr 0x27b16c755d8 <col:42> 'int' lvalue ParmVar 0x27b16c74f20 'len' 'int'
|   | `-ReturnStmt 0x27b16c75700 <line:753:9, col:16>
|   |   `-IntegerLiteral 0x27b16c756d8 <col:16> 'int' 0
|   |-IfStmt 0x27b16c75830 <line:754:5, line:757:5>
|   | |-BinaryOperator 0x27b16c757a0 <line:754:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x27b16c75770 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x27b16c75728 <col:9> 'long' lvalue Var 0x27b16c75160 'bitnum' 'long'
|   | | `-ImplicitCastExpr 0x27b16c75788 <col:18> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x27b16c75748 <col:18> 'int' 0
|   | `-CompoundStmt 0x27b16c75818 <col:21, line:757:5>
|   |   `-ReturnStmt 0x27b16c75808 <line:756:9, col:16>
|   |     `-IntegerLiteral 0x27b16c757e0 <col:16> 'int' 0
|   |-IfStmt 0x27b16c75ac8 <line:758:5, line:761:5>
|   | |-UnaryOperator 0x27b16c75a40 <line:758:9, col:51> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x27b16c759d8 <col:10, col:51> 'int'
|   | |   |-ImplicitCastExpr 0x27b16c759c0 <col:10> 'int (*)()' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x27b16c75938 <col:10> 'int ()' Function 0x27b16c75870 'ASN1_BIT_STRING_set_bit' 'int ()'
|   | |   |-ImplicitCastExpr 0x27b16c75a10 <col:34> 'void *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x27b16c75958 <col:34> 'void *' lvalue ParmVar 0x27b16c74fa0 'bitstr' 'void *'
|   | |   |-ImplicitCastExpr 0x27b16c75a28 <col:42> 'long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x27b16c75978 <col:42> 'long' lvalue Var 0x27b16c75160 'bitnum' 'long'
|   | |   `-IntegerLiteral 0x27b16c75998 <col:50> 'int' 1
|   | `-CompoundStmt 0x27b16c75ab0 <col:54, line:761:5>
|   |   `-ReturnStmt 0x27b16c75aa0 <line:760:9, col:16>
|   |     `-IntegerLiteral 0x27b16c75a78 <col:16> 'int' 0
|   `-ReturnStmt 0x27b16c75b08 <line:762:5, col:12>
|     `-IntegerLiteral 0x27b16c75ae0 <col:12> 'int' 1
|-FunctionDecl 0x27b16c6dd60 <line:765:1, line:783:1> line:765:12 used mask_cb 'int (const char *, int, void *)' static
| |-ParmVarDecl 0x27b16c6db70 <col:20, col:32> col:32 used elem 'const char *'
| |-ParmVarDecl 0x27b16c6dbf0 <col:38, col:42> col:42 used len 'int'
| |-ParmVarDecl 0x27b16c6dc70 <col:47, col:53> col:53 used arg 'void *'
| `-CompoundStmt 0x27b16c6e980 <line:766:1, line:783:1>
|   |-DeclStmt 0x27b16c6dfc0 <line:767:5, col:40>
|   | |-VarDecl 0x27b16c6de70 <col:5, col:28> col:20 used pmask 'unsigned long *' cinit
|   | | `-ImplicitCastExpr 0x27b16c6df10 <col:28> 'unsigned long *' <BitCast>
|   | |   `-ImplicitCastExpr 0x27b16c6def8 <col:28> 'void *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x27b16c6ded8 <col:28> 'void *' lvalue ParmVar 0x27b16c6dc70 'arg' 'void *'
|   | `-VarDecl 0x27b16c6df40 <col:5, col:33> col:33 used tmpmask 'unsigned long'
|   |-DeclStmt 0x27b16c6e058 <line:768:5, col:12>
|   | `-VarDecl 0x27b16c6dff0 <col:5, col:9> col:9 used tag 'int'
|   |-IfStmt 0x27b16c6e0e0 <line:769:5, line:770:16>
|   | |-OpaqueValueExpr 0x27b16c6e0c8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x27b16c6e0b8 <col:9, col:16>
|   |   `-IntegerLiteral 0x27b16c6e090 <col:16> 'int' 0
|   |-IfStmt 0x27b16c6e440 <line:771:5, line:774:5>
|   | |-BinaryOperator 0x27b16c6e368 <line:771:9, col:52> 'int' '&&'
|   | | |-ParenExpr 0x27b16c6e178 <col:9, col:18> 'int'
|   | | | `-BinaryOperator 0x27b16c6e158 <col:10, col:17> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x27b16c6e140 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x27b16c6e0f8 <col:10> 'int' lvalue ParmVar 0x27b16c6dbf0 'len' 'int'
|   | | |   `-IntegerLiteral 0x27b16c6e118 <col:17> 'int' 3
|   | | `-ParenExpr 0x27b16c6e348 <col:23, col:52> 'int'
|   | |   `-BinaryOperator 0x27b16c6e328 <col:24, col:51> 'int' '=='
|   | |     |-CallExpr 0x27b16c6e268 <col:24, col:46> 'int'
|   | |     | |-ImplicitCastExpr 0x27b16c6e250 <col:24> 'int (*)(const char *, const char *, unsigned long long)' <FunctionToPointerDecay>
|   | |     | | `-DeclRefExpr 0x27b16c6e198 <col:24> 'int (const char *, const char *, unsigned long long)' Function 0x27b16c5f2d0 'strncmp' 'int (const char *, const char *, unsigned long long)'
|   | |     | |-ImplicitCastExpr 0x27b16c6e2a0 <col:32> 'const char *' <LValueToRValue>
|   | |     | | `-DeclRefExpr 0x27b16c6e1b8 <col:32> 'const char *' lvalue ParmVar 0x27b16c6db70 'elem' 'const char *'
|   | |     | |-ImplicitCastExpr 0x27b16c6e2d0 <col:38> 'const char *' <NoOp>
|   | |     | | `-ImplicitCastExpr 0x27b16c6e2b8 <col:38> 'char *' <ArrayToPointerDecay>
|   | |     | |   `-StringLiteral 0x27b16c6e1d8 <col:38> 'char [4]' lvalue "DIR"
|   | |     | `-ImplicitCastExpr 0x27b16c6e2e8 <col:45> 'unsigned long long' <IntegralCast>
|   | |     |   `-IntegerLiteral 0x27b16c6e1f8 <col:45> 'int' 3
|   | |     `-IntegerLiteral 0x27b16c6e300 <col:51> 'int' 0
|   | `-CompoundStmt 0x27b16c6e428 <col:55, line:774:5>
|   |   `-ReturnStmt 0x27b16c6e418 <line:773:9, col:16>
|   |     `-IntegerLiteral 0x27b16c6e3f0 <col:16> 'int' 1
|   |-BinaryOperator 0x27b16c6e568 <line:775:5, col:33> 'int' '='
|   | |-DeclRefExpr 0x27b16c6e458 <col:5> 'int' lvalue Var 0x27b16c6dff0 'tag' 'int'
|   | `-CallExpr 0x27b16c6e508 <col:11, col:33> 'int'
|   |   |-ImplicitCastExpr 0x27b16c6e4f0 <col:11> 'int (*)(const char *, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x27b16c6e490 <col:11> 'int (const char *, int)' Function 0x27b16c6ecd0 'asn1_str2tag' 'int (const char *, int)'
|   |   |-ImplicitCastExpr 0x27b16c6e538 <col:24> 'const char *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x27b16c6e4b0 <col:24> 'const char *' lvalue ParmVar 0x27b16c6db70 'elem' 'const char *'
|   |   `-ImplicitCastExpr 0x27b16c6e550 <col:30> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x27b16c6e4d0 <col:30> 'int' lvalue ParmVar 0x27b16c6dbf0 'len' 'int'
|   |-IfStmt 0x27b16c6e6d0 <line:776:5, line:777:16>
|   | |-BinaryOperator 0x27b16c6e678 <line:776:9, col:37> 'int' '||'
|   | | |-UnaryOperator 0x27b16c6e5c0 <col:9, col:10> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x27b16c6e5a8 <col:10> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x27b16c6e588 <col:10> 'int' lvalue Var 0x27b16c6dff0 'tag' 'int'
|   | | `-ParenExpr 0x27b16c6e658 <col:17, col:37> 'int'
|   | |   `-BinaryOperator 0x27b16c6e638 <col:18, line:14:33> 'int' '&'
|   | |     |-ImplicitCastExpr 0x27b16c6e620 <line:776:18> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x27b16c6e5d8 <col:18> 'int' lvalue Var 0x27b16c6dff0 'tag' 'int'
|   | |     `-IntegerLiteral 0x27b16c6e5f8 <line:14:33> 'int' 65536
|   | `-ReturnStmt 0x27b16c6e6c0 <line:777:9, col:16>
|   |   `-IntegerLiteral 0x27b16c6e698 <col:16> 'int' 0
|   |-BinaryOperator 0x27b16c6e7d0 <line:778:5, col:31> 'unsigned long' '='
|   | |-DeclRefExpr 0x27b16c6e6e8 <col:5> 'unsigned long' lvalue Var 0x27b16c6df40 'tmpmask' 'unsigned long'
|   | `-ImplicitCastExpr 0x27b16c6e7b8 <col:15, col:31> 'unsigned long' <IntegralCast>
|   |   `-CallExpr 0x27b16c6e778 <col:15, col:31> 'int'
|   |     |-ImplicitCastExpr 0x27b16c6e760 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x27b16c6e720 <col:15> 'int ()' Function 0x27b16c73f50 'ASN1_tag2bit' 'int ()'
|   |     `-ImplicitCastExpr 0x27b16c6e7a0 <col:28> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x27b16c6e740 <col:28> 'int' lvalue Var 0x27b16c6dff0 'tag' 'int'
|   |-IfStmt 0x27b16c6e878 <line:779:5, line:780:16>
|   | |-UnaryOperator 0x27b16c6e828 <line:779:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x27b16c6e810 <col:10> 'unsigned long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x27b16c6e7f0 <col:10> 'unsigned long' lvalue Var 0x27b16c6df40 'tmpmask' 'unsigned long'
|   | `-ReturnStmt 0x27b16c6e868 <line:780:9, col:16>
|   |   `-IntegerLiteral 0x27b16c6e840 <col:16> 'int' 0
|   |-CompoundAssignOperator 0x27b16c6e918 <line:781:5, col:15> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   | |-UnaryOperator 0x27b16c6e8c8 <col:5, col:6> 'unsigned long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x27b16c6e8b0 <col:6> 'unsigned long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x27b16c6e890 <col:6> 'unsigned long *' lvalue Var 0x27b16c6de70 'pmask' 'unsigned long *'
|   | `-ImplicitCastExpr 0x27b16c6e900 <col:15> 'unsigned long' <LValueToRValue>
|   |   `-DeclRefExpr 0x27b16c6e8e0 <col:15> 'unsigned long' lvalue Var 0x27b16c6df40 'tmpmask' 'unsigned long'
|   `-ReturnStmt 0x27b16c6e970 <line:782:5, col:12>
|     `-IntegerLiteral 0x27b16c6e948 <col:12> 'int' 1
`-FunctionDecl 0x27b16c7cc98 <line:785:1, line:789:1> line:785:5 ASN1_str2mask 'int (const char *, unsigned long *)'
  |-ParmVarDecl 0x27b16c6e9f8 <col:19, col:31> col:31 used str 'const char *'
  |-ParmVarDecl 0x27b16c6ea78 <col:36, col:51> col:51 used pmask 'unsigned long *'
  `-CompoundStmt 0x27b16c7cf88 <line:786:1, line:789:1>
    |-BinaryOperator 0x27b16c7cdf0 <line:787:5, col:14> 'unsigned long' '='
    | |-UnaryOperator 0x27b16c7cd98 <col:5, col:6> 'unsigned long' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x27b16c7cd80 <col:6> 'unsigned long *' <LValueToRValue>
    | |   `-DeclRefExpr 0x27b16c7cd60 <col:6> 'unsigned long *' lvalue ParmVar 0x27b16c6ea78 'pmask' 'unsigned long *'
    | `-ImplicitCastExpr 0x27b16c7cdd8 <col:14> 'unsigned long' <IntegralCast>
    |   `-IntegerLiteral 0x27b16c7cdb0 <col:14> 'int' 0
    `-ReturnStmt 0x27b16c7cf78 <line:788:5, col:55>
      `-CallExpr 0x27b16c7cee8 <col:12, col:55> 'int'
        |-ImplicitCastExpr 0x27b16c7ced0 <col:12> 'int (*)()' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x27b16c7ce10 <col:12> 'int ()' Function 0x27b16c61c68 'CONF_parse_list' 'int ()'
        |-ImplicitCastExpr 0x27b16c7cf30 <col:28> 'const char *' <LValueToRValue>
        | `-DeclRefExpr 0x27b16c7ce30 <col:28> 'const char *' lvalue ParmVar 0x27b16c6e9f8 'str' 'const char *'
        |-CharacterLiteral 0x27b16c7ce50 <col:33> 'int' 124
        |-IntegerLiteral 0x27b16c7ce68 <col:38> 'int' 1
        |-ImplicitCastExpr 0x27b16c7cf48 <col:41> 'int (*)(const char *, int, void *)' <FunctionToPointerDecay>
        | `-DeclRefExpr 0x27b16c7ce90 <col:41> 'int (const char *, int, void *)' Function 0x27b16c6dd60 'mask_cb' 'int (const char *, int, void *)'
        `-ImplicitCastExpr 0x27b16c7cf60 <col:50> 'unsigned long *' <LValueToRValue>
          `-DeclRefExpr 0x27b16c7ceb0 <col:50> 'unsigned long *' lvalue ParmVar 0x27b16c6ea78 'pmask' 'unsigned long *'
