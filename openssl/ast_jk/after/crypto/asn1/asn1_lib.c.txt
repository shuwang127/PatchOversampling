TranslationUnitDecl 0x2640c383318 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2640c383bb0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2640c3838b0 '__int128'
|-TypedefDecl 0x2640c383c20 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2640c3838d0 'unsigned __int128'
|-TypedefDecl 0x2640c383f58 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2640c383d10 'struct __NSConstantString_tag'
|   `-Record 0x2640c383c78 '__NSConstantString_tag'
|-TypedefDecl 0x2640c383fc8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2640c3834f0 'unsigned long long'
|-TypedefDecl 0x2640c384060 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2640c384020 'char *'
|   `-BuiltinType 0x2640c3833b0 'char'
|-TypedefDecl 0x2640c3840d0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2640c384020 'char *'
|   `-BuiltinType 0x2640c3833b0 'char'
|-TypedefDecl 0x2640c384190 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2640c3834f0 'unsigned long long'
|-TypedefDecl 0x2640c384200 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2640c384020 'char *'
|   `-BuiltinType 0x2640c3833b0 'char'
|-FunctionDecl 0x2640dee83b0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2640dee8450 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2640dee84c0 <col:21> Implicit
|-FunctionDecl 0x2640dee8518 prev 0x2640dee83b0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2640dee8240 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2640dee8608 <col:21> Inherited Implicit
|-TypedefDecl 0x2640dee8648 prev 0x2640c383fc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2640c3834f0 'unsigned long long'
|-TypedefDecl 0x2640dee86f0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2640dee86c0 'size_t' sugar
|   |-Typedef 0x2640dee8648 'size_t'
|   `-BuiltinType 0x2640c3834f0 'unsigned long long'
|-TypedefDecl 0x2640dee8760 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2640c383450 'long long'
|-TypedefDecl 0x2640dee87d0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2640c383450 'long long'
|-TypedefDecl 0x2640dee8840 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2640c383490 'unsigned short'
|-TypedefDecl 0x2640dee88b0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x2640c383490 'unsigned short'
|-TypedefDecl 0x2640dee8920 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2640c383490 'unsigned short'
|-TypedefDecl 0x2640dee8990 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2640c383410 'int'
|-TypedefDecl 0x2640dee8a00 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2640c383430 'long'
|-TypedefDecl 0x2640dee8a70 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2640c383450 'long long'
|-TypedefDecl 0x2640dee8b00 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2640dee8ad0 '__time64_t' sugar
|   |-Typedef 0x2640dee8a70 '__time64_t'
|   `-BuiltinType 0x2640c383450 'long long'
|-FunctionDecl 0x2640dee8c78 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2640dee8e98 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2640df2d980 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2640dee8fd8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2640dee9050 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2640dee90c8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2640dee9148 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2640df2d720 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2640df2da60 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2640df2db20 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2640df2dc90 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2640df2dc40 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2640df2dbe0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2640df2db00 'struct threadlocaleinfostruct'
|       `-Record 0x2640df33780 'threadlocaleinfostruct'
|-TypedefDecl 0x2640df2dda0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2640df2dd50 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2640df2dcf0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2640df2dbc0 'struct threadmbcinfostruct'
|       `-Record 0x2640df2db20 'threadmbcinfostruct'
|-RecordDecl 0x2640df2ddf8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2640df2deb0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2640df2df70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2640df2e000 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2640df2e090 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2640df2e148 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2640df2e0f0 'struct localeinfo_struct' sugar
|   `-RecordType 0x2640df2df50 'struct localeinfo_struct'
|     `-Record 0x2640df2deb0 'localeinfo_struct'
|-TypedefDecl 0x2640df2e220 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2640df2e1d0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2640df2e0f0 'struct localeinfo_struct' sugar
|     `-RecordType 0x2640df2df50 'struct localeinfo_struct'
|       `-Record 0x2640df2deb0 'localeinfo_struct'
|-RecordDecl 0x2640df2e298 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2640df2e350 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2640df2e3c8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2640df2e488 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2640df2e520 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2640df2e590 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2640df2e648 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2640df2e5f0 'struct localerefcount' sugar
|   `-RecordType 0x2640df2e330 'struct localerefcount'
|     `-Record 0x2640df2e298 'localerefcount'
|-RecordDecl 0x2640df33780 prev 0x2640df2da60 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2640df33800 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2640df33878 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2640df338e8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2640df33958 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2640df339c8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2640df33b88 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2640df33bf8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2640df33c68 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2640df33cd8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2640df33d48 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2640df33db8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2640df33e10 parent 0x2640c383318 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2640df33fa0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2640df34010 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2640df34080 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2640df340f0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2640df34190 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2640df34200 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2640df34310 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2640df34448 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2640df344f8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2640df344a0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2640df2db00 'struct threadlocaleinfostruct'
|     `-Record 0x2640df33780 'threadlocaleinfostruct'
|-RecordDecl 0x2640df34590 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x2640df34650 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2640df346c8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x2640df30750 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x2640df307c0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x2640df30830 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x2640df308a0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x2640df30910 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x2640df30980 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x2640df309f0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x2640df30aa0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x2640df30a50 'struct _iobuf' sugar
|   `-RecordType 0x2640df34630 'struct _iobuf'
|     `-Record 0x2640df34590 '_iobuf'
|-FunctionDecl 0x2640df30cd8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x2640df30da8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x2640c383450 'long long'
|-FunctionDecl 0x2640df30f88 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640df30e10 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x2640df31280 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2640df31060 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x2640df310d8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2640df31630 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x2640df31360 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x2640df313e0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x2640df31460 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x2640df39950 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2640df397e0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x2640df39b80 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x2640df39a40 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2640df39d30 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640df39c50 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x2640df39f20 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2640df3a218 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2640df39ff0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x2640df3a070 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x2640df3a3d0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640df3a2f0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x2640df3a580 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640df3a4a0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x2640df3a730 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640df3a650 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2640df32878 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640df32798 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x2640df32a08 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2640df32d70 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x2640df32ad0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2640df32bc8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x2640df33128 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x2640df32e50 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x2640df32ed0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x2640df32f48 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x2640df332e8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640df33208 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2640df335b0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2640df333c0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x2640df33440 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x2640df3a7f0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2640df3abe8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x2640df3ac88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2640df3acf0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2640df3ad68 prev 0x2640df3abe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2640df3a9c0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x2640df3aa40 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x2640df3ae18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df3b290 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x2640df3afc0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x2640df3b040 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x2640df3b0c0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x2640df3b5b0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x2640df3b650 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2640df3b6b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2640df3b730 <col:40> Implicit printf 2 3
|-FunctionDecl 0x2640df3c810 prev 0x2640df3b5b0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2640df3b370 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2640df3b3f0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x2640df3c908 <col:40> Inherited printf 2 3
|-FunctionDecl 0x2640df3cad0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2640df3c950 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2640df3c9d0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2640df3cd28 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2640df3cbb0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x2640df3cc28 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x2640df3cf58 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2640df3ce08 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x2640df3d250 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x2640df3d030 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x2640df3d0a8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x2640df3d6e8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2640df3d788 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2640df3d820 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2640df3d888 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2640df3d8f0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2640df3d978 prev 0x2640df3d6e8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2640df3d330 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x2640df3d3a8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df3d420 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640df3d498 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x2640df3de80 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2640df3da68 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x2640df3dae0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df3db58 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df3dbd0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640df3dc48 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x2640df3e340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2640df3e070 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x2640df3e0f0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x2640df3e168 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x2640df3e3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df3e8d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x2640df3e540 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2640df3e5c0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x2640df3e640 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x2640df3e6b8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x2640df3ec80 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2640df3ed20 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2640df3ed88 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2640df3ee00 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2640df3ee68 prev 0x2640df3ec80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2640df3eab8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x2640df3eb38 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x2640df3f048 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2640df3ef18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df3f488 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df3f188 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x2640df3f208 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x2640df3f2a0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2640df3f540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df42870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2640df3f680 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2640df3f700 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x2640df42b60 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df42948 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2640df429c8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2640df42a40 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640df42ec0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x2640df42c40 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x2640df42d18 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x2640df43278 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2640df42f98 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x2640df43018 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x2640df43098 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x2640df434d8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2640df43358 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x2640df40898 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2640df435a8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2640df43628 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x2640df436a8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x2640df40af8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2640df40978 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2640df40fb8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x2640df41058 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2640df410c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2640df41128 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x2640df41190 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x2640df41218 prev 0x2640df40fb8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x2640df40c00 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x2640df40c78 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df40cf0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640df40d68 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x2640df413e0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640df41300 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x2640df41570 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2640df416f8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2640df41a20 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x2640df417c8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x2640df41870 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2640df41d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2640df41c00 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x2640df41df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df42010 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640df41f30 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x2640df42230 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x2640df420e8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x2640df423e0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640df42300 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x2640df42630 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x2640df424b8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x2640df42538 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x2640df3f840 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x2640df3f8e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2640df3f950 <col:40> Implicit printf 1 2
|-FunctionDecl 0x2640df3f9b8 prev 0x2640df3f840 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x2640df42710 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x2640df3faa8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x2640df3fbd8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2640df3faf8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x2640df3fe28 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2640df3fcb0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x2640df3fd28 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2640df3ffe8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2640df3ff08 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x2640df40208 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2640df400c0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x2640df40458 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2640df402e0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x2640df40358 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x2640df40618 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2640df40538 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x2640df930e0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2640df406f0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x2640df40770 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x2640df932a0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x2640df931c0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x2640df93530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x2640df93450 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x2640df935d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x2640df937d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2640df936f8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x2640df93960 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2640df93c08 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x2640df93ca8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2640df93d18 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x2640df93d80 prev 0x2640df93c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x2640df93af0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x2640df93f58 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x2640df93e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df94330 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df940f8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x2640df94170 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2640df943e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df94608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2640df94528 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x2640df94858 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df946e0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2640df94758 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640df94c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x2640df949f0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x2640df94a70 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x2640df94cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df94ef0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2640df94e10 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x2640df95178 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x2640df95030 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x2640df95360 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x2640df957b0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x2640df95428 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2640df954a8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x2640df95528 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x2640df955a0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2640df95c30 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x2640df958a0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df95918 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df95990 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640df95a10 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x2640df8dfc0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2640df95d20 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df95d98 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640df95e18 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x2640df8e188 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2640df8e0a8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x2640df8e560 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x2640df8e600 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2640df8e668 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x2640df8e6e0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x2640df8e748 prev 0x2640df8e560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x2640df8e320 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x2640df8e3a0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x2640df8e928 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x2640df8e7f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df8ed18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df8ea38 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x2640df8eab8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x2640df8eb30 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2640df8edd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df96140 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x2640df8ef18 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x2640df96040 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x2640df96438 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df96220 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x2640df962a0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x2640df96318 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640df968c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2640df965e0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x2640df96658 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df966d8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x2640df96980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df96f50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df96bc0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x2640df96c38 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df96cb8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x2640df96d30 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2640df8ffe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df90340 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2640df90128 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x2640df901a0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640df90220 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x2640df906d8 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df90428 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x2640df904a0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df90520 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x2640df90598 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640df90938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x2640df909d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df90c90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x2640df90b20 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x2640df8efd0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x2640df90d68 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x2640df90de0 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2640df8f250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2640df8f170 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x2640df8f2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df8f5b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2640df8f440 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x2640df8f4b8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x2640df8f9d0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2640df8fa70 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x2640df8fad8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2640df8fb40 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2640df8fbc0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x2640df8fc28 prev 0x2640df8f9d0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2640df8f690 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2640df8f710 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x2640df8f788 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2640df8fd28 <col:40> Inherited printf 2 0
|-FunctionDecl 0x2640df97050 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2640df970f0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x2640df97158 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2640df971c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2640df97240 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2640df972a8 prev 0x2640df97050 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2640df8fd70 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x2640df8fdf0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2640df8fe68 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2640df973a8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2640df97608 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2640df973f0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2640df97470 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x2640df974e8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df97900 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2640df976e8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2640df97768 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x2640df977e0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df97c48 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2640df97ce8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2640df97d50 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2640df97dc8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x2640df97e30 prev 0x2640df97c48 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2640df979e8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x2640df97a60 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2640df97f28 <col:40> Inherited printf 1 0
|-FunctionDecl 0x2640df98198 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2640df98238 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2640df982a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2640df98318 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x2640df98380 prev 0x2640df98198 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2640df97f78 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x2640df98060 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2640df98478 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x2640df98640 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2640df984c8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x2640df98540 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df98898 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2640df98720 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2640df98798 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df98df8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2640df98e98 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2640df98f00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x2640df98f68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2640df98fd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2640df90ff0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x2640df91058 prev 0x2640df98df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2640df98a38 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df98ab0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df98b30 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2640df98ba8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x2640df91248 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x2640df91118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df916b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2640df91298 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df91310 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df91388 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df91408 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2640df91480 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df91af8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2640df917b0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df91828 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df918a0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df91920 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x2640df91998 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df91ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2640df91cb0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2640df91d28 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df91da8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x2640df91f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df994e0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2640df99230 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x2640df992a8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df99328 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x2640df993a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2640df995a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df99998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2640df996e8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df99760 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df997e0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2640df99858 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df99d58 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x2640df99a88 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x2640df99b08 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x2640df99b80 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df920a0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x2640df92140 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2640df921a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x2640df92220 <col:85> Implicit printf 2 3
|-FunctionDecl 0x2640df92288 prev 0x2640df920a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x2640df99f00 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2640df99f80 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x2640df92468 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x2640df92338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df92890 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x2640df92930 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2640df92998 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2640df92a00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2640df92a80 <col:94> Implicit printf 2 0
|-FunctionDecl 0x2640df92ae8 prev 0x2640df92890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x2640df92578 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x2640df925f8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x2640df92670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x2640df92cd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x2640df92ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df9b090 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x2640df9b130 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2640df9b198 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x2640df9b200 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x2640df9b280 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x2640df9b2e8 prev 0x2640df9b090 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x2640df92d20 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x2640df92da0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x2640df92e18 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x2640df9b3e8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x2640df9b5b0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2640df9b438 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x2640df9b4b0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df9b8a8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2640df9b690 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df9b708 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640df9b788 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x2640df9bc40 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2640df9b990 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df9ba08 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df9ba88 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x2640df9bb00 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df9bea8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x2640df9bd28 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2640df9bda8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x2640df9f0d0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2640df9bf88 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x2640df9f3c0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x2640df9f1a8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x2640df9f220 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640df9f2a0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x2640df9f6b8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x2640df9f4a0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2640df9f520 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x2640df9f598 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df9f918 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2640df9f7a0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x2640df9f818 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df9fca8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x2640df9f9f8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x2640df9fa70 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df9faf0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x2640df9fb68 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df9fe78 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x2640df9fd98 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x2640dfa00e0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x2640df9ff50 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x2640df9ffc8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa02a0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x2640dfa01c0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x2640dfa0430 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x2640dfa0678 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfa0500 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x2640dfa0578 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfa08d0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfa0758 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2640dfa07d0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfa0b28 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfa09b0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2640dfa0a28 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfa0ed8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfa0c08 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x2640dfa0c80 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfa0cf8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df9e1e0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfa0fc0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2640dfa1038 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640df9e0c0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df9e4d8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640df9e2c8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2640df9e340 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640df9e3b8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df9e7d0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df9e5b8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2640df9e638 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x2640df9e6b0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640df9eac8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df9e8b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2640df9e930 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2640df9e9a8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640df9edc0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df9eba8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2640df9ec28 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x2640df9eca0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfa1250 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640df9eea0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2640df9ef20 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x2640df9ef98 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640df9f010 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa15e8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfa1338 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2640dfa13b8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2640dfa1430 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfa14a8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa1980 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfa16d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2640dfa1750 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x2640dfa17c8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfa1840 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa1e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfa1b30 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x2640dfa1bb0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x2640dfa1c28 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2640dfa1ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfa2410 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfa2018 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2640dfa2100 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfa2180 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x2640dfa21f8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfa27b0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfa2500 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x2640dfa2578 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfa25f8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x2640dfa2670 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfa2d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfa29a0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x2640dfa2a20 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x2640dfa2a98 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2640dfa2b10 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2640dfa2dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfa3348 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfa2f08 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2640dfa2f80 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfa3000 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x2640dfa3078 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfa3110 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa3788 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfa3440 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2640dfa34b8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfa3538 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x2640dfa35b0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfa3628 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa39f8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfa3880 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x2640dfa38f8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfa3c50 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfa3ad8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x2640dfa3b50 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfa3f40 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfa3d30 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x2640dfa3da8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfa3e20 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df9c1d0 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfa4028 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x2640dfa40a0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640df9c0b0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640df9c628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df9c378 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df9c3f0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df9c470 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x2640df9c4e8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2640df9c6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df9cae0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df9c830 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df9c8a8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df9c928 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x2640df9c9a0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640df9d0b0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x2640df9cbd0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df9cc48 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df9ccc0 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df9cd40 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x2640df9cdb8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640df9d5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640df9d2a8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df9d320 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df9d3a0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x2640df9d418 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2640df9d490 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2640df9d6b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640df9db38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640df9d808 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df9d880 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df9d900 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x2640df9d978 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640df9d9f0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa61a0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640df9dc30 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x2640df9dca8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df9dd20 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640df9dda0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x2640df9de18 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640df9de90 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa6560 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x2640dfa6298 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2640dfa6310 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2640dfa6390 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x2640dfa67d0 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2640dfa6660 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x2640dfa69e8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2640dfa6cc8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2640dfa6ab0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2640dfa6b28 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2640dfa6f10 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2640dfa6da0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2640dfa4120 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2640dfa6fe0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x2640dfa42a8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x2640dfa44e0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2640dfa4370 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2640dfa43e8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x2640dfa4690 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x2640dfa45b8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2640dfa4938 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2640dfa4760 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2640dfa47d8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x2640dfa4ce0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x2640dfa4a10 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2640dfa4a90 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x2640dfa4b08 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x2640dfa4fe0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2640dfa4dc0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2640dfa4e38 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2640dfa52e8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x2640dfa50b8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x2640dfa5140 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2640dfa55f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2640dfa5480 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x2640dfa5698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfa5958 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2640dfa57d8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x2640dfa5c60 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfa5a28 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x2640dfa5aa0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfa5eb0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfa5d38 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x2640dfa5db0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfa8160 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2640dfa5f88 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfa8310 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2640dfa8230 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfa84c0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2640dfa83e0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfa8858 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfa8590 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x2640dfa8608 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfa8680 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa8b48 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfa8938 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x2640dfa89b0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfa8a28 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa8e38 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfa8c28 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2640dfa8ca0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfa8d18 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa9170 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfa8f18 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x2640dfa8f90 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfa9008 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa9470 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfa9250 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfa92c8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa96c0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfa9548 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfa95c0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa9910 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfa9798 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfa9810 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa9b60 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfa99e8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfa9a60 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfa9f18 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfa9c38 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2640dfa9cb0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640dfa9d28 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfaa390 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfa9ff8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2640dfaa070 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfaa0e8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfaa180 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfaa748 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfaa478 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2640dfaa4f0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfaa568 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfaaa38 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfaa828 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x2640dfaa8a0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfaa918 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfaad28 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfaab18 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfaab90 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640dfaac08 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfab0b0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfaae08 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfaae80 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfaaef8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfaaf70 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfab540 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfab1b8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfab230 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfab2a8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640dfab320 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfaba48 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfab628 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfab6a0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfab718 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfab790 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfab808 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfabe08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfabbf8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2640dfabc70 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfabce8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2640dfabec0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfac3d0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfac0c0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2640dfac1a0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfac218 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfac290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x2640dfac490 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfac748 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfac5d0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x2640dfac648 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfac900 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2640dfac820 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfacbe0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfac9d0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2640dfaca48 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfacac0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dface38 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfaccc0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfacd38 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb0000 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfacf10 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfacf88 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640dfad000 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfb0388 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfb00e0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfb0158 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb01d0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb0248 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb0550 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2640dfb0470 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfb0798 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfb0620 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb0698 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb0aa0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb0870 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb08e8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfb0cf0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb0b78 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb0bf0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfb0f40 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb0dc8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb0e40 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfb6358 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfb6088 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb6100 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfb6178 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb6648 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfb6438 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb64b0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfb6528 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb6938 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfb6728 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb67a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfb6818 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb6cf8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb6a18 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x2640dfb6a90 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb6b08 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfaeff0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb6dd8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2640dfb6e50 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb6ec8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfaf2e0 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfaf0d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2640dfaf148 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfaf1c0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfaf730 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfaf3c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2640dfaf438 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfaf4b0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfaf528 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfafac0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfaf818 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2640dfaf890 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfaf908 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfaf980 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfafe50 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfafba8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x2640dfafc20 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfafc98 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfafd10 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb7380 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfaff38 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfb7070 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb70e8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb7160 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfb7710 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb7468 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfb74e0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb7558 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb75d0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfb7aa0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb77f8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfb7870 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb78e8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb7960 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfb7fa8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfb7b88 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfb7c00 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb7c78 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb7cf0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfb7d68 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb43a8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfb4068 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfb40e0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb4158 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb41d0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfb4248 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb47d8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfb4498 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfb4510 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb4588 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb4600 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfb4678 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb4a40 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb48c8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb4940 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfb4c90 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb4b18 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb4b90 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfb4f78 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfb4d68 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb4de0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfb4e58 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb33c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb3120 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfb3198 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb3210 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb3288 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2640dfb3488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfb39f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb35d0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfb3648 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb36c0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb3738 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfb37b0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfb3f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfb3bf0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfb3c68 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb3ce0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb3d58 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2640dfb3dd0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x2640dfb1010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfb1620 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfb1158 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x2640dfb11d0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb1248 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb12c0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb1338 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfb13b0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfb1b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfb18e8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2640dfb1960 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x2640dfb1bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2640dfb1ce8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2640dfb82e8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfb1fa0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2640dfb8090 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb8108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2640dfb83a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2640dfb84b8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2640dfb8a58 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfb8778 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2640dfb87f0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb8868 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x2640dfb8b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2640dfb8c30 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2640dfb92a0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfb8ef0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2640dfb8f68 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfb8fe0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2640dfb9090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x2640dfb9360 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x2640dfb9480 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x2640dfb9788 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x2640dfb95a8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x2640dfb9620 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfb9698 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x2640dfba340 <line:37:1, line:44:1>
|   |-DeclStmt 0x2640dfb98d0 <line:38:5, col:21>
|   | `-VarDecl 0x2640dfb9868 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2640dfb9968 <line:39:5, col:13>
|   | `-VarDecl 0x2640dfb9900 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2640dfb9cc0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2640dfb9ca8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2640dfb9bc0 <col:34> '<builtin fn type>' Function 0x2640dfb9a58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2640dfb9bf8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x2640dfb9868 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2640dfb9c30 <col:29> 'const wchar_t *' lvalue ParmVar 0x2640dfb9698 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x2640dfb9f80 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x2640dfb9cf0 <col:5> 'int' lvalue Var 0x2640dfb9900 '_Ret' 'int'
|   | `-CallExpr 0x2640dfb9ec0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x2640dfb9ea8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2640dfb9d28 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2640dfb7fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2640dfb9f08 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2640dfb9d48 <col:27> 'wchar_t *' lvalue ParmVar 0x2640dfb95a8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2640dfb9f20 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2640dfb9d68 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2640dfb9620 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2640dfb9f38 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2640dfb9d88 <col:44> 'const wchar_t *' lvalue ParmVar 0x2640dfb9698 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2640dfb9f50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x2640dfb9e10 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x2640dfb9de8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x2640dfb9da8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x2640dfb9f68 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2640dfb9e30 <col:59> 'va_list':'char *' lvalue Var 0x2640dfb9868 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2640dfba2d0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2640dfba2b8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2640dfba208 <col:34> '<builtin fn type>' Function 0x2640dfba0a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2640dfba240 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x2640dfb9868 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2640dfba330 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x2640dfba318 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2640dfba2f8 <col:12> 'int' lvalue Var 0x2640dfb9900 '_Ret' 'int'
|-FunctionDecl 0x2640dfb9a58 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x2640dfb9af8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2640dfb9b68 <col:34> Implicit
|-FunctionDecl 0x2640dfba0a0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x2640dfba140 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x2640dfba1b0 <col:34> Implicit
|-FunctionDecl 0x2640dfba638 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x2640dfba390 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x2640dfba408 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfba480 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfba4f8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2640dfba920 <line:50:1, line:52:1>
|   `-ReturnStmt 0x2640dfba910 <line:51:5, col:62>
|     `-CallExpr 0x2640dfba850 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x2640dfba838 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2640dfba710 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2640dfb7fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2640dfba898 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2640dfba730 <col:27> 'wchar_t *' lvalue ParmVar 0x2640dfba390 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2640dfba8b0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2640dfba750 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2640dfba408 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2640dfba8c8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2640dfba770 <col:44> 'const wchar_t *' lvalue ParmVar 0x2640dfba480 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2640dfba8e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x2640dfba7f8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x2640dfba7d0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x2640dfba790 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x2640dfba8f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2640dfba818 <col:59> 'va_list':'char *' lvalue ParmVar 0x2640dfba4f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2640dfbabc0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x2640dfba948 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x2640dfba9c0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfbaa38 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfbaab0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x2640dfbe188 <line:61:1, line:68:1>
|   |-DeclStmt 0x2640dfbad10 <line:62:5, col:21>
|   | `-VarDecl 0x2640dfbaca8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x2640dfbada8 <line:63:5, col:13>
|   | `-VarDecl 0x2640dfbad40 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x2640dfbae50 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x2640dfbae38 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2640dfbadc0 <col:34> '<builtin fn type>' Function 0x2640dfb9a58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x2640dfbade0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x2640dfbaca8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x2640dfbae18 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2640dfbaab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x2640dfbb050 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x2640dfbae80 <col:5> 'int' lvalue Var 0x2640dfbad40 '_Ret' 'int'
|   | `-CallExpr 0x2640dfbaf90 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x2640dfbaf78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2640dfbaeb8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2640dfb7fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x2640dfbafd8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2640dfbaed8 <col:27> 'wchar_t *' lvalue ParmVar 0x2640dfba948 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x2640dfbaff0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2640dfbaef8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2640dfba9c0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x2640dfbb008 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2640dfbaf18 <col:44> 'const wchar_t *' lvalue ParmVar 0x2640dfbaa38 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x2640dfbb020 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2640dfbaf38 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2640dfbaab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x2640dfbb038 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x2640dfbaf58 <col:64> 'va_list':'char *' lvalue Var 0x2640dfbaca8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x2640dfbe118 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x2640dfbe100 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x2640dfbb070 <col:34> '<builtin fn type>' Function 0x2640dfba0a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x2640dfbe0e0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x2640dfbaca8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x2640dfbe178 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x2640dfbe160 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2640dfbe140 <col:12> 'int' lvalue Var 0x2640dfbad40 '_Ret' 'int'
|-FunctionDecl 0x2640dfbe518 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x2640dfbe1d8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x2640dfbe250 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfbe2c8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfbe340 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x2640dfbe3b8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x2640dfbe7a0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x2640dfbe790 <line:75:5, col:67>
|     `-CallExpr 0x2640dfbe6d0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x2640dfbe6b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2640dfbe5f8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x2640dfb7fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x2640dfbe718 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2640dfbe618 <col:27> 'wchar_t *' lvalue ParmVar 0x2640dfbe1d8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x2640dfbe730 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x2640dfbe638 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x2640dfbe250 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x2640dfbe748 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x2640dfbe658 <col:44> 'const wchar_t *' lvalue ParmVar 0x2640dfbe2c8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x2640dfbe760 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x2640dfbe678 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x2640dfbe340 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x2640dfbe778 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x2640dfbe698 <col:64> 'va_list':'char *' lvalue ParmVar 0x2640dfbe3b8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x2640dfbe9e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2640dfbe7c8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x2640dfbe840 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x2640dfbec38 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x2640dfbeac0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfbeb38 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfbef20 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x2640dfbed10 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfbed88 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x2640dfbee00 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x2640dfbf268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfbf0f0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x2640dfbf168 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2640dfbf318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfbf728 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfbf518 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x2640dfbf590 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfbf608 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2640dfbf7e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfbfa98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfbf920 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x2640dfbf998 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfbfd80 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfbfb70 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x2640dfbfbe8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfbfc60 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfc0170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfbff20 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2640dfbff98 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2640dfc0220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfc06f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfc0420 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2640dfc0498 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfc0510 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2640dfc07b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfc0a68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfc08f0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2640dfc0968 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfc0d50 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfc0b40 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2640dfc0bb8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfc0c30 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfc2208 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfc0ef0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2640dfc0f68 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfc0fe0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2640dfc22c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfc2840 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfc24c0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2640dfc2538 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfc25b0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfc2628 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2640dfc2900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfc2c50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfc2a40 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2640dfc2ab8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640dfc2b30 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfc2fd8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfc2d30 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2640dfc2da8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfc2e20 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfc2e98 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfc12c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x2640dfc11e0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x2640dfc1368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfc16e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfc1568 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x2640dfc15e0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2640dfc1790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfc19b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x2640dfc18d0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x2640dfc1bf8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x2640dfc1a80 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x2640dfc1af8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2640dfc1ef8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x2640dfc1cd8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x2640dfc1d50 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x2640dfbb258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2640dfc2090 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2640dfbb0b0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x2640dfbb308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfbb710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2640dfbb450 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x2640dfbb4c8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x2640dfbb540 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x2640dfbbb70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2640dfbb8b0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2640dfbb928 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x2640dfbb9a0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x2640dfbbc28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfc3178 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x2640dfbbd70 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x2640dfbbde8 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x2640dfbbe60 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x2640dfbbed8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x2640dfc33d0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x2640dfc3260 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2640dfc3610 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2640dfc34a0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x2640dfc3518 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x2640dfc37c8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x2640dfc36e8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x2640dfc3ab8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2640dfc3898 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x2640dfc3910 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2640dfc3d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2640dfc3c50 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x2640dfc3dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2640dfc3fe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x2640dfc3f10 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x2640dfbc1b8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x2640dfc40b8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2640dfbc0c0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2640dfbc400 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x2640dfbc290 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x2640dfbc308 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x2640dfbc5b0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2640dfbc4d8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x2640dfbc758 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x2640dfbc680 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x2640dfbc908 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640dfbc828 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x2640dfbcab8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x2640dfbc9d8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x2640dfbce30 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2640dfbcb90 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x2640dfbcc08 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfbcc80 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640dfbccf8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x2640dfcb380 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2640dfbcf20 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x2640dfbcf98 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfbd010 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfcb1b0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640dfcb228 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x2640dfcb690 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x2640dfcb470 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x2640dfcb4f0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x2640dfcb570 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x2640dfcb850 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x2640dfcb770 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x2640dfcbb40 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x2640dfcb920 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x2640dfcb9a0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x2640dfcba20 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x2640dfcbd00 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x2640dfcbc20 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x2640dfcc078 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x2640dfcbdd8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x2640dfcbe50 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2640dfcbec8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2640dfcbf40 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x2640dfc42b8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2640dfc4140 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x2640dfc41b8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x2640dfc45f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x2640dfc4470 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x2640dfc44f0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x2640dfc46a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x2640dfc4958 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2640dfc49f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x2640dfc4d38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x2640dfc4bc0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x2640dfc4c40 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x2640dfc4de8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x2640dfc6160 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2640dfc6200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x2640dfc64a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2640dfc63c0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x2640dfc6548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x2640dfc67c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2640dfc6868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x2640dfc6b10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x2640dfc6a30 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x2640dfc6bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x2640dfc6e98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x2640dfc6db8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x2640dfc6f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x2640dfca318 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x2640dfca1a0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x2640dfca218 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x2640dfca3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x2640dfca688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x2640dfca728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x2640dfcab50 <.//openssl//file_jk/after\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2640dfca9b0 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x2640dfcaa30 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x2640dfcaf20 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2640dfcad80 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x2640dfcae00 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x2640dfcafd0 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x2640dfcb0a8 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x2640dfcb118 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x2640dfd76c0 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x2640dfd7730 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x2640dfd77a0 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x2640dfd7810 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x2640dfd7880 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x2640dfd78f0 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x2640dfd7998 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x2640dfd7b68 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x2640dfd7bd8 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x2640dfd7c30 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x2640dfd7d48 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x2640dfd7cf0 'struct mime_param_st' sugar
|   `-RecordType 0x2640dfd7cd0 'struct mime_param_st'
|     `-Record 0x2640dfd7c30 'mime_param_st'
|-FunctionDecl 0x2640dfd7ef0 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x2640dfd7df0 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x2640dfd7fb0 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x2640dfd80c8 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x2640dfd8070 'struct mime_header_st' sugar
|   `-RecordType 0x2640dfd8050 'struct mime_header_st'
|     `-Record 0x2640dfd7fb0 'mime_header_st'
|-FunctionDecl 0x2640dfd8270 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x2640dfd8170 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x2640dfd83c0 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x2640dfd85a8 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x2640dfd8458 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x2640dfd84d8 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x2640dfd37e0 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x2640dfd3680 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x2640dfd3700 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x2640dfd3aa0 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x2640dfd38b0 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x2640dfd3930 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x2640dfd39b0 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x2640dfd3cd8 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x2640dfd3b78 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x2640dfd3bf8 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x2640dfd3f90 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x2640dfd3da8 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x2640dfd3e28 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x2640dfd3ea8 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x2640dfd4210 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x2640dfd4068 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x2640dfd40e8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x2640dfd4168 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x2640dfd4438 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x2640dfd42e8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x2640dfd4368 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x2640dfd86d0 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x2640dfd4508 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x2640dfd4588 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x2640dfd8a80 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x2640dfd8798 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x2640dfd8878 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x2640dfd8900 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x2640dfd8980 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x2640dfd8de0 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x2640dfd8b60 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x2640dfd8be0 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x2640dfd8c60 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x2640dfd8ce0 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x2640dfd90a8 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x2640dfd8ec0 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x2640dfd8f40 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x2640dfd8fc0 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x2640dfd9320 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x2640dfd9180 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x2640dfd9200 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x2640dfd9280 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x2640dfd9510 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x2640dfd93f8 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x2640dfd9478 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x2640dfd27e0 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2640dfd95e0 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x2640dfd2670 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x2640dfd26f0 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x2640dfd2a10 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x2640dfd28b0 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x2640dfd2938 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x2640dfd2c90 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2640dfd2ae0 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x2640dfd2b68 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x2640dfd2be8 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x2640dfd2e88 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x2640dfd2d60 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x2640dfd2de8 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x2640dfd3108 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2640dfd2f58 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x2640dfd2fe0 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x2640dfd3060 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x2640dfd3460 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x2640dfd31d8 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x2640dfd3258 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x2640dfd32e0 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x2640dfd3360 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x2640dfdb7f0 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x2640dfd3538 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x2640dfd35b8 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x2640dfdb700 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x2640dfdbbd0 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:16:1, line:17:36> line:16:12 used asn1_get_length 'int (const unsigned char **, int *, long *, long)' static
| |-ParmVarDecl 0x2640dfdb8c8 <col:28, col:50> col:50 pp 'const unsigned char **'
| |-ParmVarDecl 0x2640dfdb948 <col:54, col:59> col:59 inf 'int *'
| |-ParmVarDecl 0x2640dfdb9f0 <col:64, col:70> col:70 rl 'long *'
| `-ParmVarDecl 0x2640dfdba70 <line:17:28, col:33> col:33 max 'long'
|-FunctionDecl 0x2640dfdbe48 <line:18:1, col:59> col:13 used asn1_put_length 'void (unsigned char **, int)' static
| |-ParmVarDecl 0x2640dfdbcc8 <col:29, col:45> col:45 pp 'unsigned char **'
| `-ParmVarDecl 0x2640dfdbd48 <col:49, col:53> col:53 length 'int'
|-FunctionDecl 0x2640dfdc0c0 <line:20:1, line:32:1> line:20:12 used _asn1_check_infinite_end 'int (const unsigned char **, long)' static
| |-ParmVarDecl 0x2640dfdbf30 <col:37, col:59> col:59 used p 'const unsigned char **'
| |-ParmVarDecl 0x2640dfdbfb0 <col:62, col:67> col:67 used len 'long'
| `-CompoundStmt 0x2640dfd67f0 <line:21:1, line:32:1>
|   |-IfStmt 0x2640dfd6770 <line:25:5, line:30:5> has_else
|   | |-BinaryOperator 0x2640dfdc200 <line:25:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x2640dfdc1d0 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2640dfdc188 <col:9> 'long' lvalue ParmVar 0x2640dfdbfb0 'len' 'long'
|   | | `-ImplicitCastExpr 0x2640dfdc1e8 <col:16> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2640dfdc1a8 <col:16> 'int' 0
|   | |-ReturnStmt 0x2640dfdc268 <line:26:9, col:18>
|   | | `-ParenExpr 0x2640dfdc248 <col:16, col:18> 'int'
|   | |   `-IntegerLiteral 0x2640dfdc220 <col:17> 'int' 1
|   | `-IfStmt 0x2640dfd6758 <line:27:10, line:30:5>
|   |   |-BinaryOperator 0x2640dfdc648 <line:27:14, col:59> 'int' '&&'
|   |   | |-BinaryOperator 0x2640dfdc4c0 <col:14, col:41> 'int' '&&'
|   |   | | |-ParenExpr 0x2640dfdc310 <col:14, col:23> 'int'
|   |   | | | `-BinaryOperator 0x2640dfdc2f0 <col:15, col:22> 'int' '>='
|   |   | | |   |-ImplicitCastExpr 0x2640dfdc2c0 <col:15> 'long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x2640dfdc278 <col:15> 'long' lvalue ParmVar 0x2640dfdbfb0 'len' 'long'
|   |   | | |   `-ImplicitCastExpr 0x2640dfdc2d8 <col:22> 'long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x2640dfdc298 <col:22> 'int' 2
|   |   | | `-ParenExpr 0x2640dfdc4a0 <col:28, col:41> 'int'
|   |   | |   `-BinaryOperator 0x2640dfdc480 <col:29, col:40> 'int' '=='
|   |   | |     |-ImplicitCastExpr 0x2640dfdc468 <col:29, col:35> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x2640dfdc450 <col:29, col:35> 'unsigned char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x2640dfdc408 <col:29, col:35> 'const unsigned char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x2640dfdc3f0 <col:29, col:32> 'const unsigned char *' <LValueToRValue>
|   |   | |     |     | `-ParenExpr 0x2640dfdc3a8 <col:29, col:32> 'const unsigned char *' lvalue
|   |   | |     |     |   `-UnaryOperator 0x2640dfdc390 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | |     |     |     `-ImplicitCastExpr 0x2640dfdc378 <col:31> 'const unsigned char **' <LValueToRValue>
|   |   | |     |     |       `-DeclRefExpr 0x2640dfdc358 <col:31> 'const unsigned char **' lvalue ParmVar 0x2640dfdbf30 'p' 'const unsigned char **'
|   |   | |     |     `-IntegerLiteral 0x2640dfdc3c8 <col:34> 'int' 0
|   |   | |     `-IntegerLiteral 0x2640dfdc428 <col:40> 'int' 0
|   |   | `-ParenExpr 0x2640dfdc628 <col:46, col:59> 'int'
|   |   |   `-BinaryOperator 0x2640dfdc608 <col:47, col:58> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x2640dfdc5f0 <col:47, col:53> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x2640dfdc5d8 <col:47, col:53> 'unsigned char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x2640dfdc590 <col:47, col:53> 'const unsigned char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x2640dfdc578 <col:47, col:50> 'const unsigned char *' <LValueToRValue>
|   |   |     |     | `-ParenExpr 0x2640dfdc530 <col:47, col:50> 'const unsigned char *' lvalue
|   |   |     |     |   `-UnaryOperator 0x2640dfdc518 <col:48, col:49> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   |     |     |     `-ImplicitCastExpr 0x2640dfdc500 <col:49> 'const unsigned char **' <LValueToRValue>
|   |   |     |     |       `-DeclRefExpr 0x2640dfdc4e0 <col:49> 'const unsigned char **' lvalue ParmVar 0x2640dfdbf30 'p' 'const unsigned char **'
|   |   |     |     `-IntegerLiteral 0x2640dfdc550 <col:52> 'int' 1
|   |   |     `-IntegerLiteral 0x2640dfdc5b0 <col:58> 'int' 0
|   |   `-CompoundStmt 0x2640dfd6738 <col:62, line:30:5>
|   |     |-CompoundAssignOperator 0x2640dfd66b0 <line:28:9, col:17> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     | |-ParenExpr 0x2640dfdc6b8 <col:9, col:12> 'const unsigned char *' lvalue
|   |     | | `-UnaryOperator 0x2640dfdc6a0 <col:10, col:11> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     | |   `-ImplicitCastExpr 0x2640dfdc688 <col:11> 'const unsigned char **' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x2640dfdc668 <col:11> 'const unsigned char **' lvalue ParmVar 0x2640dfdbf30 'p' 'const unsigned char **'
|   |     | `-IntegerLiteral 0x2640dfdc6d8 <col:17> 'int' 2
|   |     `-ReturnStmt 0x2640dfd6728 <line:29:9, col:18>
|   |       `-ParenExpr 0x2640dfd6708 <col:16, col:18> 'int'
|   |         `-IntegerLiteral 0x2640dfd66e0 <col:17> 'int' 1
|   `-ReturnStmt 0x2640dfd67e0 <line:31:5, col:14>
|     `-ParenExpr 0x2640dfd67c0 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x2640dfd6798 <col:13> 'int' 0
|-FunctionDecl 0x2640dfd69c0 <line:34:1, line:37:1> line:34:5 ASN1_check_infinite_end 'int (unsigned char **, long)'
| |-ParmVarDecl 0x2640dfd6830 <col:29, col:45> col:45 used p 'unsigned char **'
| |-ParmVarDecl 0x2640dfd68b0 <col:48, col:53> col:53 used len 'long'
| `-CompoundStmt 0x2640dfd6be8 <line:35:1, line:37:1>
|   `-ReturnStmt 0x2640dfd6bd8 <line:36:5, col:67>
|     `-CallExpr 0x2640dfd6b90 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x2640dfd6b78 <col:12> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2640dfd6a88 <col:12> 'int (const unsigned char **, long)' Function 0x2640dfdc0c0 '_asn1_check_infinite_end' 'int (const unsigned char **, long)'
|       |-CStyleCastExpr 0x2640dfd6b00 <col:37, col:61> 'const unsigned char **' <NoOp>
|       | `-ImplicitCastExpr 0x2640dfd6ae8 <col:61> 'unsigned char **' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x2640dfd6aa8 <col:61> 'unsigned char **' lvalue ParmVar 0x2640dfd6830 'p' 'unsigned char **'
|       `-ImplicitCastExpr 0x2640dfd6bc0 <col:64> 'long' <LValueToRValue>
|         `-DeclRefExpr 0x2640dfd6b28 <col:64> 'long' lvalue ParmVar 0x2640dfd68b0 'len' 'long'
|-FunctionDecl 0x2640dfd6d70 <line:39:1, line:42:1> line:39:5 ASN1_const_check_infinite_end 'int (const unsigned char **, long)'
| |-ParmVarDecl 0x2640dfd6c20 <col:35, col:57> col:57 used p 'const unsigned char **'
| |-ParmVarDecl 0x2640dfd6ca0 <col:60, col:65> col:65 used len 'long'
| `-CompoundStmt 0x2640dfd6f20 <line:40:1, line:42:1>
|   `-ReturnStmt 0x2640dfd6f10 <line:41:5, col:43>
|     `-CallExpr 0x2640dfd6eb0 <col:12, col:43> 'int'
|       |-ImplicitCastExpr 0x2640dfd6e98 <col:12> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x2640dfd6e38 <col:12> 'int (const unsigned char **, long)' Function 0x2640dfdc0c0 '_asn1_check_infinite_end' 'int (const unsigned char **, long)'
|       |-ImplicitCastExpr 0x2640dfd6ee0 <col:37> 'const unsigned char **' <LValueToRValue>
|       | `-DeclRefExpr 0x2640dfd6e58 <col:37> 'const unsigned char **' lvalue ParmVar 0x2640dfd6c20 'p' 'const unsigned char **'
|       `-ImplicitCastExpr 0x2640dfd6ef8 <col:40> 'long' <LValueToRValue>
|         `-DeclRefExpr 0x2640dfd6e78 <col:40> 'long' lvalue ParmVar 0x2640dfd6ca0 'len' 'long'
|-FunctionDecl 0x2640dfd72e0 <line:44:1, line:103:1> line:44:5 ASN1_get_object 'int (const unsigned char **, long *, int *, int *, long)'
| |-ParmVarDecl 0x2640dfd6f58 <col:21, col:43> col:43 used pp 'const unsigned char **'
| |-ParmVarDecl 0x2640dfd6fd8 <col:47, col:53> col:53 used plength 'long *'
| |-ParmVarDecl 0x2640dfd7058 <col:62, col:67> col:67 used ptag 'int *'
| |-ParmVarDecl 0x2640dfd70d8 <line:45:21, col:26> col:26 used pclass 'int *'
| |-ParmVarDecl 0x2640dfd7158 <col:34, col:39> col:39 used omax 'long'
| `-CompoundStmt 0x2640dfd51a0 <line:46:1, line:103:1>
|   |-DeclStmt 0x2640dfd74d8 <line:47:5, col:15>
|   | |-VarDecl 0x2640dfd73d8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x2640dfd7458 <col:5, col:12> col:12 used ret 'int'
|   |-DeclStmt 0x2640dfd7570 <line:48:5, col:11>
|   | `-VarDecl 0x2640dfd7508 <col:5, col:10> col:10 used l 'long'
|   |-DeclStmt 0x2640dfd7670 <line:49:5, col:33>
|   | `-VarDecl 0x2640dfd75a0 <col:5, col:31> col:26 used p 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2640dfd7658 <col:30, col:31> 'const unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x2640dfd7640 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x2640dfd7628 <col:31> 'const unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x2640dfd7608 <col:31> 'const unsigned char **' lvalue ParmVar 0x2640dfd6f58 'pp' 'const unsigned char **'
|   |-DeclStmt 0x2640dfda878 <line:50:5, col:25>
|   | |-VarDecl 0x2640dfda6f0 <col:5, col:9> col:9 used tag 'int'
|   | |-VarDecl 0x2640dfda770 <col:5, col:14> col:14 used xclass 'int'
|   | `-VarDecl 0x2640dfda7f0 <col:5, col:22> col:22 used inf 'int'
|   |-DeclStmt 0x2640dfda948 <line:51:5, col:20>
|   | `-VarDecl 0x2640dfda8a8 <col:5, col:16> col:10 used max 'long' cinit
|   |   `-ImplicitCastExpr 0x2640dfda930 <col:16> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x2640dfda910 <col:16> 'long' lvalue ParmVar 0x2640dfd7158 'omax' 'long'
|   |-IfStmt 0x2640dfdaa30 <line:53:5, line:54:14>
|   | |-UnaryOperator 0x2640dfda9b0 <line:53:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2640dfda998 <col:10> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2640dfda960 <col:10> 'long' lvalue Var 0x2640dfda8a8 'max' 'long'
|   | `-GotoStmt 0x2640dfdaa18 <line:54:9, col:14> 'err' 0x2640dfda9c8
|   |-IfStmt 0x2640dfd47d0 <line:58:5, line:81:5> has_else
|   | |-OpaqueValueExpr 0x2640dfd47b8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2640dfdb610 <line:58:36, line:76:5>
|   | | |-UnaryOperator 0x2640dfdac38 <line:59:9, col:10> 'const unsigned char *' postfix '++'
|   | | | `-DeclRefExpr 0x2640dfdac18 <col:9> 'const unsigned char *' lvalue Var 0x2640dfd75a0 'p' 'const unsigned char *'
|   | | |-IfStmt 0x2640dfdad00 <line:60:9, line:61:18>
|   | | | |-BinaryOperator 0x2640dfdacc8 <line:60:13, col:22> 'int' '=='
|   | | | | |-UnaryOperator 0x2640dfdac70 <col:13, col:15> 'long' prefix '--'
|   | | | | | `-DeclRefExpr 0x2640dfdac50 <col:15> 'long' lvalue Var 0x2640dfda8a8 'max' 'long'
|   | | | | `-ImplicitCastExpr 0x2640dfdacb0 <col:22> 'long' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x2640dfdac88 <col:22> 'int' 0
|   | | | `-GotoStmt 0x2640dfdace8 <line:61:13, col:18> 'err' 0x2640dfda9c8
|   | | |-BinaryOperator 0x2640dfdad90 <line:62:9, col:13> 'long' '='
|   | | | |-DeclRefExpr 0x2640dfdad18 <col:9> 'long' lvalue Var 0x2640dfd7508 'l' 'long'
|   | | | `-ImplicitCastExpr 0x2640dfdad78 <col:13> 'long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x2640dfdad50 <col:13> 'int' 0
|   | | |-WhileStmt 0x2640dfdb280 <line:63:9, line:70:9>
|   | | | |-BinaryOperator 0x2640dfdae58 <line:63:16, col:21> 'int' '&'
|   | | | | |-ImplicitCastExpr 0x2640dfdae40 <col:16, col:17> 'int' <IntegralCast>
|   | | | | | `-ImplicitCastExpr 0x2640dfdae28 <col:16, col:17> 'unsigned char' <LValueToRValue>
|   | | | | |   `-UnaryOperator 0x2640dfdade8 <col:16, col:17> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | | | |     `-ImplicitCastExpr 0x2640dfdadd0 <col:17> 'const unsigned char *' <LValueToRValue>
|   | | | | |       `-DeclRefExpr 0x2640dfdadb0 <col:17> 'const unsigned char *' lvalue Var 0x2640dfd75a0 'p' 'const unsigned char *'
|   | | | | `-IntegerLiteral 0x2640dfdae00 <col:21> 'int' 128
|   | | | `-CompoundStmt 0x2640dfdb250 <col:27, line:70:9>
|   | | |   |-CompoundAssignOperator 0x2640dfdaed8 <line:64:13, col:19> 'long' '<<=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   | |-DeclRefExpr 0x2640dfdae78 <col:13> 'long' lvalue Var 0x2640dfd7508 'l' 'long'
|   | | |   | `-IntegerLiteral 0x2640dfdae98 <col:19> 'long' 7
|   | | |   |-CompoundAssignOperator 0x2640dfdb028 <line:65:13, col:27> 'long' '|=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   | |-DeclRefExpr 0x2640dfdaf08 <col:13> 'long' lvalue Var 0x2640dfd7508 'l' 'long'
|   | | |   | `-ImplicitCastExpr 0x2640dfdb010 <col:18, col:27> 'long' <IntegralCast>
|   | | |   |   `-BinaryOperator 0x2640dfdaff0 <col:18, col:27> 'int' '&'
|   | | |   |     |-ImplicitCastExpr 0x2640dfdafd8 <col:18, col:23> 'int' <IntegralCast>
|   | | |   |     | `-ImplicitCastExpr 0x2640dfdafc0 <col:18, col:23> 'unsigned char' <LValueToRValue>
|   | | |   |     |   `-UnaryOperator 0x2640dfdaf80 <col:18, col:23> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |   |     |     `-ParenExpr 0x2640dfdaf60 <col:19, col:23> 'const unsigned char *'
|   | | |   |     |       `-UnaryOperator 0x2640dfdaf48 <col:20, col:21> 'const unsigned char *' postfix '++'
|   | | |   |     |         `-DeclRefExpr 0x2640dfdaf28 <col:20> 'const unsigned char *' lvalue Var 0x2640dfd75a0 'p' 'const unsigned char *'
|   | | |   |     `-IntegerLiteral 0x2640dfdaf98 <col:27> 'int' 127
|   | | |   |-IfStmt 0x2640dfdb108 <line:66:13, line:67:22>
|   | | |   | |-BinaryOperator 0x2640dfdb0d0 <line:66:17, col:26> 'int' '=='
|   | | |   | | |-UnaryOperator 0x2640dfdb078 <col:17, col:19> 'long' prefix '--'
|   | | |   | | | `-DeclRefExpr 0x2640dfdb058 <col:19> 'long' lvalue Var 0x2640dfda8a8 'max' 'long'
|   | | |   | | `-ImplicitCastExpr 0x2640dfdb0b8 <col:26> 'long' <IntegralCast>
|   | | |   | |   `-IntegerLiteral 0x2640dfdb090 <col:26> 'int' 0
|   | | |   | `-GotoStmt 0x2640dfdb0f0 <line:67:17, col:22> 'err' 0x2640dfda9c8
|   | | |   `-IfStmt 0x2640dfdb238 <line:68:13, line:69:22>
|   | | |     |-BinaryOperator 0x2640dfdb200 <line:68:17, col:35> 'int' '>'
|   | | |     | |-ImplicitCastExpr 0x2640dfdb1d0 <col:17> 'long' <LValueToRValue>
|   | | |     | | `-DeclRefExpr 0x2640dfdb120 <col:17> 'long' lvalue Var 0x2640dfd7508 'l' 'long'
|   | | |     | `-ImplicitCastExpr 0x2640dfdb1e8 <col:21, col:35> 'long' <IntegralCast>
|   | | |     |   `-ParenExpr 0x2640dfdb1b0 <col:21, col:35> 'int'
|   | | |     |     `-BinaryOperator 0x2640dfdb190 <<built-in>:30:21, .//openssl//file_jk/after\crypto\asn1\asn1_lib.c:68:33> 'int' '>>'
|   | | |     |       |-IntegerLiteral 0x2640dfdb140 <<built-in>:30:21> 'int' 2147483647
|   | | |     |       `-IntegerLiteral 0x2640dfdb168 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:68:33> 'long' 7
|   | | |     `-GotoStmt 0x2640dfdb220 <line:69:17, col:22> 'err' 0x2640dfda9c8
|   | | |-CompoundAssignOperator 0x2640dfdb2f8 <line:71:9, col:15> 'long' '<<=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |-DeclRefExpr 0x2640dfdb298 <col:9> 'long' lvalue Var 0x2640dfd7508 'l' 'long'
|   | | | `-IntegerLiteral 0x2640dfdb2b8 <col:15> 'long' 7
|   | | |-CompoundAssignOperator 0x2640dfdb448 <line:72:9, col:23> 'long' '|=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |-DeclRefExpr 0x2640dfdb328 <col:9> 'long' lvalue Var 0x2640dfd7508 'l' 'long'
|   | | | `-ImplicitCastExpr 0x2640dfdb430 <col:14, col:23> 'long' <IntegralCast>
|   | | |   `-BinaryOperator 0x2640dfdb410 <col:14, col:23> 'int' '&'
|   | | |     |-ImplicitCastExpr 0x2640dfdb3f8 <col:14, col:19> 'int' <IntegralCast>
|   | | |     | `-ImplicitCastExpr 0x2640dfdb3e0 <col:14, col:19> 'unsigned char' <LValueToRValue>
|   | | |     |   `-UnaryOperator 0x2640dfdb3a0 <col:14, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |     |     `-ParenExpr 0x2640dfdb380 <col:15, col:19> 'const unsigned char *'
|   | | |     |       `-UnaryOperator 0x2640dfdb368 <col:16, col:17> 'const unsigned char *' postfix '++'
|   | | |     |         `-DeclRefExpr 0x2640dfdb348 <col:16> 'const unsigned char *' lvalue Var 0x2640dfd75a0 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x2640dfdb3b8 <col:23> 'int' 127
|   | | |-BinaryOperator 0x2640dfdb528 <line:73:9, col:20> 'int' '='
|   | | | |-DeclRefExpr 0x2640dfdb478 <col:9> 'int' lvalue Var 0x2640dfda6f0 'tag' 'int'
|   | | | `-CStyleCastExpr 0x2640dfdb500 <col:15, col:20> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x2640dfdb4e8 <col:20> 'long' <LValueToRValue> part_of_explicit_cast
|   | | |     `-DeclRefExpr 0x2640dfdb4b0 <col:20> 'long' lvalue Var 0x2640dfd7508 'l' 'long'
|   | | `-IfStmt 0x2640dfdb5f8 <line:74:9, line:75:18>
|   | |   |-BinaryOperator 0x2640dfdb5c0 <line:74:13, col:22> 'int' '=='
|   | |   | |-UnaryOperator 0x2640dfdb568 <col:13, col:15> 'long' prefix '--'
|   | |   | | `-DeclRefExpr 0x2640dfdb548 <col:15> 'long' lvalue Var 0x2640dfda8a8 'max' 'long'
|   | |   | `-ImplicitCastExpr 0x2640dfdb5a8 <col:22> 'long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x2640dfdb580 <col:22> 'int' 0
|   | |   `-GotoStmt 0x2640dfdb5e0 <line:75:13, col:18> 'err' 0x2640dfda9c8
|   | `-CompoundStmt 0x2640dfd4790 <line:76:12, line:81:5>
|   |   |-BinaryOperator 0x2640dfdb6b8 <line:77:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x2640dfdb660 <col:9> 'int' lvalue Var 0x2640dfda6f0 'tag' 'int'
|   |   | `-ImplicitCastExpr 0x2640dfdb6a0 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2640dfdb680 <col:15> 'int' lvalue Var 0x2640dfd73d8 'i' 'int'
|   |   |-UnaryOperator 0x2640dfd46b0 <line:78:9, col:10> 'const unsigned char *' postfix '++'
|   |   | `-DeclRefExpr 0x2640dfd4690 <col:9> 'const unsigned char *' lvalue Var 0x2640dfd75a0 'p' 'const unsigned char *'
|   |   `-IfStmt 0x2640dfd4778 <line:79:9, line:80:18>
|   |     |-BinaryOperator 0x2640dfd4740 <line:79:13, col:22> 'int' '=='
|   |     | |-UnaryOperator 0x2640dfd46e8 <col:13, col:15> 'long' prefix '--'
|   |     | | `-DeclRefExpr 0x2640dfd46c8 <col:15> 'long' lvalue Var 0x2640dfda8a8 'max' 'long'
|   |     | `-ImplicitCastExpr 0x2640dfd4728 <col:22> 'long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x2640dfd4700 <col:22> 'int' 0
|   |     `-GotoStmt 0x2640dfd4760 <line:80:13, col:18> 'err' 0x2640dfda9c8
|   |-BinaryOperator 0x2640dfd4880 <line:82:5, col:13> 'int' '='
|   | |-UnaryOperator 0x2640dfd4830 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2640dfd4818 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2640dfd47f8 <col:6> 'int *' lvalue ParmVar 0x2640dfd7058 'ptag' 'int *'
|   | `-ImplicitCastExpr 0x2640dfd4868 <col:13> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2640dfd4848 <col:13> 'int' lvalue Var 0x2640dfda6f0 'tag' 'int'
|   |-BinaryOperator 0x2640dfd4928 <line:83:5, col:15> 'int' '='
|   | |-UnaryOperator 0x2640dfd48d8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2640dfd48c0 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2640dfd48a0 <col:6> 'int *' lvalue ParmVar 0x2640dfd70d8 'pclass' 'int *'
|   | `-ImplicitCastExpr 0x2640dfd4910 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x2640dfd48f0 <col:15> 'int' lvalue Var 0x2640dfda770 'xclass' 'int'
|   |-IfStmt 0x2640dfd4b10 <line:84:5, line:85:14>
|   | |-UnaryOperator 0x2640dfd4ae0 <line:84:9, col:48> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x2640dfd4a70 <col:10, col:48> 'int'
|   | |   |-ImplicitCastExpr 0x2640dfd4a58 <col:10> 'int (*)(const unsigned char **, int *, long *, long)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x2640dfd4948 <col:10> 'int (const unsigned char **, int *, long *, long)' Function 0x2640dfdbbd0 'asn1_get_length' 'int (const unsigned char **, int *, long *, long)'
|   | |   |-UnaryOperator 0x2640dfd4988 <col:26, col:27> 'const unsigned char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x2640dfd4968 <col:27> 'const unsigned char *' lvalue Var 0x2640dfd75a0 'p' 'const unsigned char *'
|   | |   |-UnaryOperator 0x2640dfd49d8 <col:30, col:31> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x2640dfd49a0 <col:31> 'int' lvalue Var 0x2640dfda7f0 'inf' 'int'
|   | |   |-ImplicitCastExpr 0x2640dfd4ab0 <col:36> 'long *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2640dfd49f0 <col:36> 'long *' lvalue ParmVar 0x2640dfd6fd8 'plength' 'long *'
|   | |   `-ImplicitCastExpr 0x2640dfd4ac8 <col:45> 'long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2640dfd4a10 <col:45> 'long' lvalue Var 0x2640dfda8a8 'max' 'long'
|   | `-GotoStmt 0x2640dfd4af8 <line:85:9, col:14> 'err' 0x2640dfda9c8
|   |-IfStmt 0x2640dfd4b98 <line:87:5, line:88:14>
|   | |-OpaqueValueExpr 0x2640dfd4b80 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2640dfd4b68 <col:9, col:14> 'err' 0x2640dfda9c8
|   |-IfStmt 0x2640dfd4f88 <line:90:5, line:97:5>
|   | |-BinaryOperator 0x2640dfd4da0 <line:90:9, col:37> 'int' '>'
|   | | |-ImplicitCastExpr 0x2640dfd4d88 <col:9, col:10> 'long long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2640dfd4d70 <col:9, col:10> 'long' <LValueToRValue>
|   | | |   `-UnaryOperator 0x2640dfd4be8 <col:9, col:10> 'long' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x2640dfd4bd0 <col:10> 'long *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2640dfd4bb0 <col:10> 'long *' lvalue ParmVar 0x2640dfd6fd8 'plength' 'long *'
|   | | `-ParenExpr 0x2640dfd4d50 <col:20, col:37> 'long long'
|   | |   `-BinaryOperator 0x2640dfd4d30 <col:21, col:36> 'long long' '-'
|   | |     |-ImplicitCastExpr 0x2640dfd4d18 <col:21> 'long long' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x2640dfd4d00 <col:21> 'long' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x2640dfd4c00 <col:21> 'long' lvalue ParmVar 0x2640dfd7158 'omax' 'long'
|   | |     `-ParenExpr 0x2640dfd4ce0 <col:28, col:36> 'long long'
|   | |       `-BinaryOperator 0x2640dfd4cc0 <col:29, col:34> 'long long' '-'
|   | |         |-ImplicitCastExpr 0x2640dfd4c90 <col:29> 'const unsigned char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x2640dfd4c20 <col:29> 'const unsigned char *' lvalue Var 0x2640dfd75a0 'p' 'const unsigned char *'
|   | |         `-ImplicitCastExpr 0x2640dfd4ca8 <col:33, col:34> 'const unsigned char *' <LValueToRValue>
|   | |           `-UnaryOperator 0x2640dfd4c78 <col:33, col:34> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | |             `-ImplicitCastExpr 0x2640dfd4c60 <col:34> 'const unsigned char **' <LValueToRValue>
|   | |               `-DeclRefExpr 0x2640dfd4c40 <col:34> 'const unsigned char **' lvalue ParmVar 0x2640dfd6f58 'pp' 'const unsigned char **'
|   | `-CompoundStmt 0x2640dfd4f70 <col:40, line:97:5>
|   |   `-CompoundAssignOperator 0x2640dfd4f40 <line:96:9, col:16> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x2640dfd4ef8 <col:9> 'int' lvalue Var 0x2640dfd7458 'ret' 'int'
|   |     `-IntegerLiteral 0x2640dfd4f18 <col:16> 'int' 128
|   |-BinaryOperator 0x2640dfd5028 <line:98:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2640dfd4fd8 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2640dfd4fc0 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2640dfd4fa0 <col:6> 'const unsigned char **' lvalue ParmVar 0x2640dfd6f58 'pp' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2640dfd5010 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2640dfd4ff0 <col:11> 'const unsigned char *' lvalue Var 0x2640dfd75a0 'p' 'const unsigned char *'
|   |-ReturnStmt 0x2640dfd50f8 <line:99:5, col:22>
|   | `-ParenExpr 0x2640dfd50d8 <col:12, col:22> 'int'
|   |   `-BinaryOperator 0x2640dfd50b8 <col:13, col:19> 'int' '|'
|   |     |-ImplicitCastExpr 0x2640dfd5088 <col:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x2640dfd5048 <col:13> 'int' lvalue Var 0x2640dfd7458 'ret' 'int'
|   |     `-ImplicitCastExpr 0x2640dfd50a0 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2640dfd5068 <col:19> 'int' lvalue Var 0x2640dfda7f0 'inf' 'int'
|   |-LabelStmt 0x2640dfd5130 <line:100:2, col:5> 'err'
|   | `-NullStmt 0x2640dfd5128 <col:5>
|   `-ReturnStmt 0x2640dfd5190 <line:102:5, col:17>
|     `-ParenExpr 0x2640dfd5170 <col:12, col:17> 'int'
|       `-IntegerLiteral 0x2640dfd5148 <col:13> 'int' 128
|-FunctionDecl 0x2640dfd54e0 prev 0x2640dfdbbd0 <line:105:1, line:143:1> line:105:12 used asn1_get_length 'int (const unsigned char **, int *, long *, long)' static
| |-ParmVarDecl 0x2640dfd5250 <col:28, col:50> col:50 used pp 'const unsigned char **'
| |-ParmVarDecl 0x2640dfd52d0 <col:54, col:59> col:59 used inf 'int *'
| |-ParmVarDecl 0x2640dfd5350 <col:64, col:70> col:70 used rl 'long *'
| |-ParmVarDecl 0x2640dfd53d0 <line:106:28, col:33> col:33 used max 'long'
| `-CompoundStmt 0x2640dfd58d8 <line:107:1, line:143:1>
|   |-DeclStmt 0x2640dfdc710 <line:108:5, col:33>
|   | `-VarDecl 0x2640dfd55b8 <col:5, col:31> col:26 used p 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2640dfd5670 <col:30, col:31> 'const unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x2640dfd5658 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x2640dfd5640 <col:31> 'const unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x2640dfd5620 <col:31> 'const unsigned char **' lvalue ParmVar 0x2640dfd5250 'pp' 'const unsigned char **'
|   |-DeclStmt 0x2640dfdc7e8 <line:109:5, col:26>
|   | `-VarDecl 0x2640dfdc740 <col:5, col:25> col:19 used ret 'unsigned long' cinit
|   |   `-ImplicitCastExpr 0x2640dfdc7d0 <col:25> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x2640dfdc7a8 <col:25> 'int' 0
|   |-DeclStmt 0x2640dfdc880 <line:110:5, col:20>
|   | `-VarDecl 0x2640dfdc818 <col:5, col:19> col:19 used i 'unsigned long'
|   |-IfStmt 0x2640dfdc968 <line:112:5, line:113:16>
|   | |-BinaryOperator 0x2640dfdc910 <line:112:9, col:17> 'int' '<'
|   | | |-UnaryOperator 0x2640dfdc8b8 <col:9, col:12> 'long' postfix '--'
|   | | | `-DeclRefExpr 0x2640dfdc898 <col:9> 'long' lvalue ParmVar 0x2640dfd53d0 'max' 'long'
|   | | `-ImplicitCastExpr 0x2640dfdc8f8 <col:17> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2640dfdc8d0 <col:17> 'int' 1
|   | `-ReturnStmt 0x2640dfdc958 <line:113:9, col:16>
|   |   `-IntegerLiteral 0x2640dfdc930 <col:16> 'int' 0
|   |-IfStmt 0x2640dfdd658 <line:114:5, line:137:5> has_else
|   | |-BinaryOperator 0x2640dfdca40 <line:114:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x2640dfdca28 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2640dfdca10 <col:9, col:10> 'unsigned char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x2640dfdc9d0 <col:9, col:10> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x2640dfdc9b8 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2640dfdc980 <col:10> 'const unsigned char *' lvalue Var 0x2640dfd55b8 'p' 'const unsigned char *'
|   | | `-IntegerLiteral 0x2640dfdc9e8 <col:15> 'int' 128
|   | |-CompoundStmt 0x2640dfdcbc8 <col:21, line:118:5>
|   | | |-BinaryOperator 0x2640dfdcad8 <line:115:9, col:16> 'int' '='
|   | | | |-UnaryOperator 0x2640dfdca98 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x2640dfdca80 <col:10> 'int *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2640dfdca60 <col:10> 'int *' lvalue ParmVar 0x2640dfd52d0 'inf' 'int *'
|   | | | `-IntegerLiteral 0x2640dfdcab0 <col:16> 'int' 1
|   | | |-BinaryOperator 0x2640dfdcb70 <line:116:9, col:15> 'unsigned long' '='
|   | | | |-DeclRefExpr 0x2640dfdcaf8 <col:9> 'unsigned long' lvalue Var 0x2640dfdc740 'ret' 'unsigned long'
|   | | | `-ImplicitCastExpr 0x2640dfdcb58 <col:15> 'unsigned long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x2640dfdcb30 <col:15> 'int' 0
|   | | `-UnaryOperator 0x2640dfdcbb0 <line:117:9, col:10> 'const unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x2640dfdcb90 <col:9> 'const unsigned char *' lvalue Var 0x2640dfd55b8 'p' 'const unsigned char *'
|   | `-CompoundStmt 0x2640dfdd630 <line:118:12, line:137:5>
|   |   |-BinaryOperator 0x2640dfdcc68 <line:119:9, col:16> 'int' '='
|   |   | |-UnaryOperator 0x2640dfdcc28 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x2640dfdcc10 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2640dfdcbf0 <col:10> 'int *' lvalue ParmVar 0x2640dfd52d0 'inf' 'int *'
|   |   | `-IntegerLiteral 0x2640dfdcc40 <col:16> 'int' 0
|   |   |-BinaryOperator 0x2640dfdcdc8 <line:120:9, col:18> 'unsigned long' '='
|   |   | |-DeclRefExpr 0x2640dfdcc88 <col:9> 'unsigned long' lvalue Var 0x2640dfdc818 'i' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x2640dfdcdb0 <col:13, col:18> 'unsigned long' <IntegralCast>
|   |   |   `-BinaryOperator 0x2640dfdcd90 <col:13, col:18> 'int' '&'
|   |   |     |-ImplicitCastExpr 0x2640dfdcd78 <col:13, col:14> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x2640dfdcd60 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |   |     |   `-UnaryOperator 0x2640dfdcd20 <col:13, col:14> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |     `-ImplicitCastExpr 0x2640dfdcd08 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x2640dfdcce8 <col:14> 'const unsigned char *' lvalue Var 0x2640dfd55b8 'p' 'const unsigned char *'
|   |   |     `-IntegerLiteral 0x2640dfdcd38 <col:18> 'int' 127
|   |   `-IfStmt 0x2640dfdd608 <line:121:9, line:136:19> has_else
|   |     |-BinaryOperator 0x2640dfdceb0 <line:121:13, col:22> 'int' '&'
|   |     | |-ImplicitCastExpr 0x2640dfdce98 <col:13, col:18> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x2640dfdce80 <col:13, col:18> 'unsigned char' <LValueToRValue>
|   |     | |   `-UnaryOperator 0x2640dfdce40 <col:13, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     `-ParenExpr 0x2640dfdce20 <col:14, col:18> 'const unsigned char *'
|   |     | |       `-UnaryOperator 0x2640dfdce08 <col:15, col:16> 'const unsigned char *' postfix '++'
|   |     | |         `-DeclRefExpr 0x2640dfdcde8 <col:15> 'const unsigned char *' lvalue Var 0x2640dfd55b8 'p' 'const unsigned char *'
|   |     | `-IntegerLiteral 0x2640dfdce58 <col:22> 'int' 128
|   |     |-CompoundStmt 0x2640dfdd560 <col:28, line:135:9>
|   |     | |-IfStmt 0x2640dfdd038 <line:122:13, line:123:24>
|   |     | | |-BinaryOperator 0x2640dfdcfe0 <line:122:17, col:33> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x2640dfdcfc8 <col:17> 'long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x2640dfdced0 <col:17> 'long' lvalue ParmVar 0x2640dfd53d0 'max' 'long'
|   |     | | | `-BinaryOperator 0x2640dfdcfa8 <col:23, col:33> 'long' '+'
|   |     | | |   |-CStyleCastExpr 0x2640dfdcf40 <col:23, col:29> 'long' <IntegralCast>
|   |     | | |   | `-ImplicitCastExpr 0x2640dfdcf28 <col:29> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     | | |   |   `-DeclRefExpr 0x2640dfdcef0 <col:29> 'unsigned long' lvalue Var 0x2640dfdc818 'i' 'unsigned long'
|   |     | | |   `-ImplicitCastExpr 0x2640dfdcf90 <col:33> 'long' <IntegralCast>
|   |     | | |     `-IntegerLiteral 0x2640dfdcf68 <col:33> 'int' 1
|   |     | | `-ReturnStmt 0x2640dfdd028 <line:123:17, col:24>
|   |     | |   `-IntegerLiteral 0x2640dfdd000 <col:24> 'int' 0
|   |     | |-WhileStmt 0x2640dfdd200 <line:125:13, line:128:13>
|   |     | | |-BinaryOperator 0x2640dfdd150 <line:125:20, col:31> 'int' '&&'
|   |     | | | |-ImplicitCastExpr 0x2640dfdd138 <col:20> 'unsigned long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x2640dfdd050 <col:20> 'unsigned long' lvalue Var 0x2640dfdc818 'i' 'unsigned long'
|   |     | | | `-BinaryOperator 0x2640dfdd118 <col:25, col:31> 'int' '=='
|   |     | | |   |-ImplicitCastExpr 0x2640dfdd100 <col:25, col:26> 'int' <IntegralCast>
|   |     | | |   | `-ImplicitCastExpr 0x2640dfdd0e8 <col:25, col:26> 'unsigned char' <LValueToRValue>
|   |     | | |   |   `-UnaryOperator 0x2640dfdd0a8 <col:25, col:26> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | | |   |     `-ImplicitCastExpr 0x2640dfdd090 <col:26> 'const unsigned char *' <LValueToRValue>
|   |     | | |   |       `-DeclRefExpr 0x2640dfdd070 <col:26> 'const unsigned char *' lvalue Var 0x2640dfd55b8 'p' 'const unsigned char *'
|   |     | | |   `-IntegerLiteral 0x2640dfdd0c0 <col:31> 'int' 0
|   |     | | `-CompoundStmt 0x2640dfdd1e0 <col:34, line:128:13>
|   |     | |   |-UnaryOperator 0x2640dfdd190 <line:126:17, col:18> 'const unsigned char *' postfix '++'
|   |     | |   | `-DeclRefExpr 0x2640dfdd170 <col:17> 'const unsigned char *' lvalue Var 0x2640dfd55b8 'p' 'const unsigned char *'
|   |     | |   `-UnaryOperator 0x2640dfdd1c8 <line:127:17, col:18> 'unsigned long' postfix '--'
|   |     | |     `-DeclRefExpr 0x2640dfdd1a8 <col:17> 'unsigned long' lvalue Var 0x2640dfdc818 'i' 'unsigned long'
|   |     | |-IfStmt 0x2640dfdd2f8 <line:129:13, line:130:24>
|   |     | | |-BinaryOperator 0x2640dfdd2a0 <line:129:17, col:32> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x2640dfdd288 <col:17> 'unsigned long long' <IntegralCast>
|   |     | | | | `-ImplicitCastExpr 0x2640dfdd270 <col:17> 'unsigned long' <LValueToRValue>
|   |     | | | |   `-DeclRefExpr 0x2640dfdd218 <col:17> 'unsigned long' lvalue Var 0x2640dfdc818 'i' 'unsigned long'
|   |     | | | `-UnaryExprOrTypeTraitExpr 0x2640dfdd250 <col:21, col:32> 'unsigned long long' sizeof 'long'
|   |     | | `-ReturnStmt 0x2640dfdd2e8 <line:130:17, col:24>
|   |     | |   `-IntegerLiteral 0x2640dfdd2c0 <col:24> 'int' 0
|   |     | `-WhileStmt 0x2640dfdd548 <line:131:13, line:134:13>
|   |     |   |-BinaryOperator 0x2640dfdd388 <line:131:20, col:26> 'int' '>'
|   |     |   | |-UnaryOperator 0x2640dfdd330 <col:20, col:21> 'unsigned long' postfix '--'
|   |     |   | | `-DeclRefExpr 0x2640dfdd310 <col:20> 'unsigned long' lvalue Var 0x2640dfdc818 'i' 'unsigned long'
|   |     |   | `-ImplicitCastExpr 0x2640dfdd370 <col:26> 'unsigned long' <IntegralCast>
|   |     |   |   `-IntegerLiteral 0x2640dfdd348 <col:26> 'int' 0
|   |     |   `-CompoundStmt 0x2640dfdd528 <col:29, line:134:13>
|   |     |     |-CompoundAssignOperator 0x2640dfdd408 <line:132:17, col:25> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     |     | |-DeclRefExpr 0x2640dfdd3a8 <col:17> 'unsigned long' lvalue Var 0x2640dfdc740 'ret' 'unsigned long'
|   |     |     | `-IntegerLiteral 0x2640dfdd3c8 <col:25> 'long' 8
|   |     |     `-CompoundAssignOperator 0x2640dfdd4f8 <line:133:17, col:29> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     |       |-DeclRefExpr 0x2640dfdd438 <col:17> 'unsigned long' lvalue Var 0x2640dfdc740 'ret' 'unsigned long'
|   |     |       `-ImplicitCastExpr 0x2640dfdd4e0 <col:24, col:29> 'unsigned long' <IntegralCast>
|   |     |         `-ImplicitCastExpr 0x2640dfdd4c8 <col:24, col:29> 'unsigned char' <LValueToRValue>
|   |     |           `-UnaryOperator 0x2640dfdd4b0 <col:24, col:29> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     |             `-ParenExpr 0x2640dfdd490 <col:25, col:29> 'const unsigned char *'
|   |     |               `-UnaryOperator 0x2640dfdd478 <col:26, col:27> 'const unsigned char *' postfix '++'
|   |     |                 `-DeclRefExpr 0x2640dfdd458 <col:26> 'const unsigned char *' lvalue Var 0x2640dfd55b8 'p' 'const unsigned char *'
|   |     `-BinaryOperator 0x2640dfdd5e8 <line:136:13, col:19> 'unsigned long' '='
|   |       |-DeclRefExpr 0x2640dfdd590 <col:13> 'unsigned long' lvalue Var 0x2640dfdc740 'ret' 'unsigned long'
|   |       `-ImplicitCastExpr 0x2640dfdd5d0 <col:19> 'unsigned long' <LValueToRValue>
|   |         `-DeclRefExpr 0x2640dfdd5b0 <col:19> 'unsigned long' lvalue Var 0x2640dfdc818 'i' 'unsigned long'
|   |-IfStmt 0x2640dfd56f8 <line:138:5, line:139:16>
|   | |-BinaryOperator 0x2640dfd56a0 <line:138:9, <built-in>:31:22> 'int' '>'
|   | | |-ImplicitCastExpr 0x2640dfdd6c8 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:138:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2640dfdd680 <col:9> 'unsigned long' lvalue Var 0x2640dfdc740 'ret' 'unsigned long'
|   | | `-ImplicitCastExpr 0x2640dfdd6e0 <<built-in>:31:22> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2640dfdd6a0 <col:22> 'long' 2147483647
|   | `-ReturnStmt 0x2640dfd56e8 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:139:9, col:16>
|   |   `-IntegerLiteral 0x2640dfd56c0 <col:16> 'int' 0
|   |-BinaryOperator 0x2640dfd5798 <line:140:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2640dfd5748 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2640dfd5730 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2640dfd5710 <col:6> 'const unsigned char **' lvalue ParmVar 0x2640dfd5250 'pp' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2640dfd5780 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2640dfd5760 <col:11> 'const unsigned char *' lvalue Var 0x2640dfd55b8 'p' 'const unsigned char *'
|   |-BinaryOperator 0x2640dfd5880 <line:141:5, col:17> 'long' '='
|   | |-UnaryOperator 0x2640dfd57f0 <col:5, col:6> 'long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2640dfd57d8 <col:6> 'long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2640dfd57b8 <col:6> 'long *' lvalue ParmVar 0x2640dfd5350 'rl' 'long *'
|   | `-CStyleCastExpr 0x2640dfd5858 <col:11, col:17> 'long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x2640dfd5840 <col:17> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x2640dfd5808 <col:17> 'unsigned long' lvalue Var 0x2640dfdc740 'ret' 'unsigned long'
|   `-ReturnStmt 0x2640dfd58c8 <line:142:5, col:12>
|     `-IntegerLiteral 0x2640dfd58a0 <col:12> 'int' 1
|-FunctionDecl 0x2640dfd5cc8 <line:148:1, line:176:1> line:148:6 ASN1_put_object 'void (unsigned char **, int, int, int, int)'
| |-ParmVarDecl 0x2640dfd5950 <col:22, col:38> col:38 used pp 'unsigned char **'
| |-ParmVarDecl 0x2640dfd59d0 <col:42, col:46> col:46 used constructed 'int'
| |-ParmVarDecl 0x2640dfd5a50 <col:59, col:63> col:63 used length 'int'
| |-ParmVarDecl 0x2640dfd5ad0 <col:71, col:75> col:75 used tag 'int'
| |-ParmVarDecl 0x2640dfd5b50 <line:149:22, col:26> col:26 used xclass 'int'
| `-CompoundStmt 0x2640dfe2f18 <line:150:1, line:176:1>
|   |-DeclStmt 0x2640dfd5e90 <line:151:5, col:27>
|   | `-VarDecl 0x2640dfd5dc0 <col:5, col:25> col:20 used p 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2640dfd5e78 <col:24, col:25> 'unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x2640dfd5e60 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x2640dfd5e48 <col:25> 'unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x2640dfd5e28 <col:25> 'unsigned char **' lvalue ParmVar 0x2640dfd5950 'pp' 'unsigned char **'
|   |-DeclStmt 0x2640dfd5fc0 <line:152:5, col:16>
|   | |-VarDecl 0x2640dfd5ec0 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x2640dfd5f40 <col:5, col:12> col:12 used ttag 'int'
|   |-IfStmt 0x2640dfe2bd0 <line:156:5, line:170:5> has_else
|   | |-BinaryOperator 0x2640dfd6118 <line:156:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x2640dfd6100 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2640dfd60b8 <col:9> 'int' lvalue ParmVar 0x2640dfd5ad0 'tag' 'int'
|   | | `-IntegerLiteral 0x2640dfd60d8 <col:15> 'int' 31
|   | |-NullStmt 0x2640dfe2bc8 <line:157:9>
|   | `-CompoundStmt 0x2640dfe2b98 <line:158:10, line:170:5>
|   |   |-ForStmt 0x2640dfd64f0 <line:160:9, line:161:22>
|   |   | |-BinaryOperator 0x2640dfd6388 <line:160:14, col:28> 'int' ','
|   |   | | |-BinaryOperator 0x2640dfd62d8 <col:14, col:18> 'int' '='
|   |   | | | |-DeclRefExpr 0x2640dfd6290 <col:14> 'int' lvalue Var 0x2640dfd5ec0 'i' 'int'
|   |   | | | `-IntegerLiteral 0x2640dfd62b0 <col:18> 'int' 0
|   |   | | `-BinaryOperator 0x2640dfd6368 <col:21, col:28> 'int' '='
|   |   | |   |-DeclRefExpr 0x2640dfd62f8 <col:21> 'int' lvalue Var 0x2640dfd5f40 'ttag' 'int'
|   |   | |   `-ImplicitCastExpr 0x2640dfd6350 <col:28> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x2640dfd6330 <col:28> 'int' lvalue ParmVar 0x2640dfd5ad0 'tag' 'int'
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x2640dfd6408 <col:33, col:40> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x2640dfd63f0 <col:33> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2640dfd63a8 <col:33> 'int' lvalue Var 0x2640dfd5f40 'ttag' 'int'
|   |   | | `-IntegerLiteral 0x2640dfd63c8 <col:40> 'int' 0
|   |   | |-UnaryOperator 0x2640dfd6448 <col:43, col:44> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x2640dfd6428 <col:43> 'int' lvalue Var 0x2640dfd5ec0 'i' 'int'
|   |   | `-CompoundAssignOperator 0x2640dfd64c0 <line:161:13, col:22> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x2640dfd6460 <col:13> 'int' lvalue Var 0x2640dfd5f40 'ttag' 'int'
|   |   |   `-IntegerLiteral 0x2640dfd6480 <col:22> 'int' 7
|   |   |-BinaryOperator 0x2640dfd6580 <line:162:9, col:16> 'int' '='
|   |   | |-DeclRefExpr 0x2640dfd6528 <col:9> 'int' lvalue Var 0x2640dfd5f40 'ttag' 'int'
|   |   | `-ImplicitCastExpr 0x2640dfd6568 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2640dfd6548 <col:16> 'int' lvalue Var 0x2640dfd5ec0 'i' 'int'
|   |   |-WhileStmt 0x2640dfe2af8 <line:163:9, line:168:9>
|   |   | |-BinaryOperator 0x2640dfd6600 <line:163:16, col:22> 'int' '>'
|   |   | | |-UnaryOperator 0x2640dfd65c0 <col:16, col:17> 'int' postfix '--'
|   |   | | | `-DeclRefExpr 0x2640dfd65a0 <col:16> 'int' lvalue Var 0x2640dfd5ec0 'i' 'int'
|   |   | | `-IntegerLiteral 0x2640dfd65d8 <col:22> 'int' 0
|   |   | `-CompoundStmt 0x2640dfe2ad0 <col:25, line:168:9>
|   |   |   |-BinaryOperator 0x2640dfe2828 <line:164:13, col:26> 'unsigned char' '='
|   |   |   | |-ArraySubscriptExpr 0x2640dfe2770 <col:13, col:16> 'unsigned char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x2640dfd6660 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x2640dfd6620 <col:13> 'unsigned char *' lvalue Var 0x2640dfd5dc0 'p' 'unsigned char *'
|   |   |   | | `-ImplicitCastExpr 0x2640dfd6678 <col:15> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x2640dfd6640 <col:15> 'int' lvalue Var 0x2640dfd5ec0 'i' 'int'
|   |   |   | `-ImplicitCastExpr 0x2640dfe2810 <col:20, col:26> 'unsigned char' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x2640dfe27f0 <col:20, col:26> 'int' '&'
|   |   |   |     |-ImplicitCastExpr 0x2640dfe27d8 <col:20> 'int' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x2640dfe2790 <col:20> 'int' lvalue ParmVar 0x2640dfd5ad0 'tag' 'int'
|   |   |   |     `-IntegerLiteral 0x2640dfe27b0 <col:26> 'int' 127
|   |   |   |-IfStmt 0x2640dfe2a28 <line:165:13, line:166:25>
|   |   |   | |-BinaryOperator 0x2640dfe2920 <line:165:17, col:31> 'int' '!='
|   |   |   | | |-ImplicitCastExpr 0x2640dfe2908 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x2640dfe2848 <col:17> 'int' lvalue Var 0x2640dfd5ec0 'i' 'int'
|   |   |   | | `-ParenExpr 0x2640dfe28e8 <col:22, col:31> 'int'
|   |   |   | |   `-BinaryOperator 0x2640dfe28c8 <col:23, col:30> 'int' '-'
|   |   |   | |     |-ImplicitCastExpr 0x2640dfe28b0 <col:23> 'int' <LValueToRValue>
|   |   |   | |     | `-DeclRefExpr 0x2640dfe2868 <col:23> 'int' lvalue Var 0x2640dfd5f40 'ttag' 'int'
|   |   |   | |     `-IntegerLiteral 0x2640dfe2888 <col:30> 'int' 1
|   |   |   | `-CompoundAssignOperator 0x2640dfe29f8 <line:166:17, col:25> 'unsigned char' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   |-ArraySubscriptExpr 0x2640dfe29b0 <col:17, col:20> 'unsigned char' lvalue
|   |   |   |   | |-ImplicitCastExpr 0x2640dfe2980 <col:17> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | `-DeclRefExpr 0x2640dfe2940 <col:17> 'unsigned char *' lvalue Var 0x2640dfd5dc0 'p' 'unsigned char *'
|   |   |   |   | `-ImplicitCastExpr 0x2640dfe2998 <col:19> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x2640dfe2960 <col:19> 'int' lvalue Var 0x2640dfd5ec0 'i' 'int'
|   |   |   |   `-IntegerLiteral 0x2640dfe29d0 <col:25> 'int' 128
|   |   |   `-CompoundAssignOperator 0x2640dfe2aa0 <line:167:13, col:21> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x2640dfe2a40 <col:13> 'int' lvalue ParmVar 0x2640dfd5ad0 'tag' 'int'
|   |   |     `-IntegerLiteral 0x2640dfe2a60 <col:21> 'int' 7
|   |   `-CompoundAssignOperator 0x2640dfe2b68 <line:169:9, col:14> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     |-DeclRefExpr 0x2640dfe2b10 <col:9> 'unsigned char *' lvalue Var 0x2640dfd5dc0 'p' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x2640dfe2b50 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2640dfe2b30 <col:14> 'int' lvalue Var 0x2640dfd5f40 'ttag' 'int'
|   |-IfStmt 0x2640dfe2e48 <line:171:5, line:174:35> has_else
|   | |-BinaryOperator 0x2640dfe2c58 <line:171:9, col:24> 'int' '=='
|   | | |-ImplicitCastExpr 0x2640dfe2c40 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2640dfe2bf8 <col:9> 'int' lvalue ParmVar 0x2640dfd59d0 'constructed' 'int'
|   | | `-IntegerLiteral 0x2640dfe2c18 <col:24> 'int' 2
|   | |-BinaryOperator 0x2640dfe2d28 <line:172:9, col:18> 'unsigned char' '='
|   | | |-UnaryOperator 0x2640dfe2cd0 <col:9, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | | `-ParenExpr 0x2640dfe2cb0 <col:10, col:14> 'unsigned char *'
|   | | |   `-UnaryOperator 0x2640dfe2c98 <col:11, col:12> 'unsigned char *' postfix '++'
|   | | |     `-DeclRefExpr 0x2640dfe2c78 <col:11> 'unsigned char *' lvalue Var 0x2640dfd5dc0 'p' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x2640dfe2d10 <col:18> 'unsigned char' <IntegralCast>
|   | |   `-IntegerLiteral 0x2640dfe2ce8 <col:18> 'int' 128
|   | `-CallExpr 0x2640dfe2e00 <line:174:9, col:35> 'void'
|   |   |-ImplicitCastExpr 0x2640dfe2de8 <col:9> 'void (*)(unsigned char **, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x2640dfe2d48 <col:9> 'void (unsigned char **, int)' Function 0x2640dfdbe48 'asn1_put_length' 'void (unsigned char **, int)'
|   |   |-UnaryOperator 0x2640dfe2d88 <col:25, col:26> 'unsigned char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x2640dfe2d68 <col:26> 'unsigned char *' lvalue Var 0x2640dfd5dc0 'p' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x2640dfe2e30 <col:29> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x2640dfe2da0 <col:29> 'int' lvalue ParmVar 0x2640dfd5a50 'length' 'int'
|   `-BinaryOperator 0x2640dfe2ef8 <line:175:5, col:11> 'unsigned char *' '='
|     |-UnaryOperator 0x2640dfe2ea8 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x2640dfe2e90 <col:6> 'unsigned char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x2640dfe2e70 <col:6> 'unsigned char **' lvalue ParmVar 0x2640dfd5950 'pp' 'unsigned char **'
|     `-ImplicitCastExpr 0x2640dfe2ee0 <col:11> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x2640dfe2ec0 <col:11> 'unsigned char *' lvalue Var 0x2640dfd5dc0 'p' 'unsigned char *'
|-FunctionDecl 0x2640dfe3050 <line:178:1, line:185:1> line:178:5 ASN1_put_eoc 'int (unsigned char **)'
| |-ParmVarDecl 0x2640dfe2f70 <col:18, col:34> col:34 used pp 'unsigned char **'
| `-CompoundStmt 0x2640dfe3468 <line:179:1, line:185:1>
|   |-DeclStmt 0x2640dfe31f8 <line:180:5, col:27>
|   | `-VarDecl 0x2640dfe3128 <col:5, col:25> col:20 used p 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2640dfe31e0 <col:24, col:25> 'unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x2640dfe31c8 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x2640dfe31b0 <col:25> 'unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x2640dfe3190 <col:25> 'unsigned char **' lvalue ParmVar 0x2640dfe2f70 'pp' 'unsigned char **'
|   |-BinaryOperator 0x2640dfe32b8 <line:181:5, col:12> 'unsigned char' '='
|   | |-UnaryOperator 0x2640dfe3260 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x2640dfe3248 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x2640dfe3210 <col:6> 'unsigned char *' lvalue Var 0x2640dfe3128 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x2640dfe32a0 <col:12> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x2640dfe3278 <col:12> 'int' 0
|   |-BinaryOperator 0x2640dfe3368 <line:182:5, col:12> 'unsigned char' '='
|   | |-UnaryOperator 0x2640dfe3310 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x2640dfe32f8 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x2640dfe32d8 <col:6> 'unsigned char *' lvalue Var 0x2640dfe3128 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x2640dfe3350 <col:12> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x2640dfe3328 <col:12> 'int' 0
|   |-BinaryOperator 0x2640dfe3410 <line:183:5, col:11> 'unsigned char *' '='
|   | |-UnaryOperator 0x2640dfe33c0 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2640dfe33a8 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2640dfe3388 <col:6> 'unsigned char **' lvalue ParmVar 0x2640dfe2f70 'pp' 'unsigned char **'
|   | `-ImplicitCastExpr 0x2640dfe33f8 <col:11> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2640dfe33d8 <col:11> 'unsigned char *' lvalue Var 0x2640dfe3128 'p' 'unsigned char *'
|   `-ReturnStmt 0x2640dfe3458 <line:184:5, col:12>
|     `-IntegerLiteral 0x2640dfe3430 <col:12> 'int' 2
|-FunctionDecl 0x2640dfe3608 prev 0x2640dfdbe48 <line:187:1, line:206:1> line:187:13 used asn1_put_length 'void (unsigned char **, int)' static
| |-ParmVarDecl 0x2640dfe34c0 <col:29, col:45> col:45 used pp 'unsigned char **'
| |-ParmVarDecl 0x2640dfe3540 <col:49, col:53> col:53 used length 'int'
| `-CompoundStmt 0x2640dfde290 <line:188:1, line:206:1>
|   |-DeclStmt 0x2640dfdd750 <line:189:5, col:27>
|   | `-VarDecl 0x2640dfe36d0 <col:5, col:25> col:20 used p 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2640dfdd738 <col:24, col:25> 'unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x2640dfdd720 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x2640dfe3758 <col:25> 'unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x2640dfe3738 <col:25> 'unsigned char **' lvalue ParmVar 0x2640dfe34c0 'pp' 'unsigned char **'
|   |-DeclStmt 0x2640dfdd880 <line:190:5, col:13>
|   | |-VarDecl 0x2640dfdd780 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x2640dfdd800 <col:5, col:12> col:12 used l 'int'
|   |-IfStmt 0x2640dfde1c0 <line:191:5, line:204:5> has_else
|   | |-BinaryOperator 0x2640dfdd8f8 <line:191:9, col:19> 'int' '<='
|   | | |-ImplicitCastExpr 0x2640dfdd8e0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2640dfdd898 <col:9> 'int' lvalue ParmVar 0x2640dfe3540 'length' 'int'
|   | | `-IntegerLiteral 0x2640dfdd8b8 <col:19> 'int' 127
|   | |-BinaryOperator 0x2640dfdda18 <line:192:9, col:33> 'unsigned char' '='
|   | | |-UnaryOperator 0x2640dfdd988 <col:9, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | | `-ParenExpr 0x2640dfdd968 <col:10, col:14> 'unsigned char *'
|   | | |   `-UnaryOperator 0x2640dfdd950 <col:11, col:12> 'unsigned char *' postfix '++'
|   | | |     `-DeclRefExpr 0x2640dfdd918 <col:11> 'unsigned char *' lvalue Var 0x2640dfe36d0 'p' 'unsigned char *'
|   | | `-CStyleCastExpr 0x2640dfdd9f0 <col:18, col:33> 'unsigned char' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x2640dfdd9d8 <col:33> 'int' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x2640dfdd9a0 <col:33> 'int' lvalue ParmVar 0x2640dfe3540 'length' 'int'
|   | `-CompoundStmt 0x2640dfde180 <line:193:10, line:204:5>
|   |   |-BinaryOperator 0x2640dfddaa8 <line:194:9, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x2640dfdda38 <col:9> 'int' lvalue Var 0x2640dfdd800 'l' 'int'
|   |   | `-ImplicitCastExpr 0x2640dfdda90 <col:13> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2640dfdda70 <col:13> 'int' lvalue ParmVar 0x2640dfe3540 'length' 'int'
|   |   |-ForStmt 0x2640dfddc90 <line:195:9, line:196:19>
|   |   | |-BinaryOperator 0x2640dfddb28 <line:195:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x2640dfddac8 <col:14> 'int' lvalue Var 0x2640dfdd780 'i' 'int'
|   |   | | `-IntegerLiteral 0x2640dfddb00 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x2640dfddba8 <col:21, col:25> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x2640dfddb90 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2640dfddb48 <col:21> 'int' lvalue Var 0x2640dfdd800 'l' 'int'
|   |   | | `-IntegerLiteral 0x2640dfddb68 <col:25> 'int' 0
|   |   | |-UnaryOperator 0x2640dfddbe8 <col:28, col:29> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x2640dfddbc8 <col:28> 'int' lvalue Var 0x2640dfdd780 'i' 'int'
|   |   | `-CompoundAssignOperator 0x2640dfddc60 <line:196:13, col:19> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x2640dfddc00 <col:13> 'int' lvalue Var 0x2640dfdd800 'l' 'int'
|   |   |   `-IntegerLiteral 0x2640dfddc20 <col:19> 'int' 8
|   |   |-BinaryOperator 0x2640dfdddd0 <line:197:9, col:22> 'unsigned char' '='
|   |   | |-UnaryOperator 0x2640dfddd20 <col:9, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x2640dfddd00 <col:10, col:14> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x2640dfddce8 <col:11, col:12> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x2640dfddcc8 <col:11> 'unsigned char *' lvalue Var 0x2640dfe36d0 'p' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x2640dfdddb8 <col:18, col:22> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x2640dfddd98 <col:18, col:22> 'int' '|'
|   |   |     |-ImplicitCastExpr 0x2640dfddd80 <col:18> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x2640dfddd38 <col:18> 'int' lvalue Var 0x2640dfdd780 'i' 'int'
|   |   |     `-IntegerLiteral 0x2640dfddd58 <col:22> 'int' 128
|   |   |-BinaryOperator 0x2640dfdde48 <line:198:9, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x2640dfdddf0 <col:9> 'int' lvalue Var 0x2640dfdd800 'l' 'int'
|   |   | `-ImplicitCastExpr 0x2640dfdde30 <col:13> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2640dfdde10 <col:13> 'int' lvalue Var 0x2640dfdd780 'i' 'int'
|   |   |-WhileStmt 0x2640dfde0e0 <line:199:9, line:202:9>
|   |   | |-BinaryOperator 0x2640dfddec8 <line:199:16, col:22> 'int' '>'
|   |   | | |-UnaryOperator 0x2640dfdde88 <col:16, col:17> 'int' postfix '--'
|   |   | | | `-DeclRefExpr 0x2640dfdde68 <col:16> 'int' lvalue Var 0x2640dfdd780 'i' 'int'
|   |   | | `-IntegerLiteral 0x2640dfddea0 <col:22> 'int' 0
|   |   | `-CompoundStmt 0x2640dfde0c0 <col:25, line:202:9>
|   |   |   |-BinaryOperator 0x2640dfde010 <line:200:13, col:29> 'unsigned char' '='
|   |   |   | |-ArraySubscriptExpr 0x2640dfddf58 <col:13, col:16> 'unsigned char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x2640dfddf28 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x2640dfddee8 <col:13> 'unsigned char *' lvalue Var 0x2640dfe36d0 'p' 'unsigned char *'
|   |   |   | | `-ImplicitCastExpr 0x2640dfddf40 <col:15> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x2640dfddf08 <col:15> 'int' lvalue Var 0x2640dfdd780 'i' 'int'
|   |   |   | `-ImplicitCastExpr 0x2640dfddff8 <col:20, col:29> 'unsigned char' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x2640dfddfd8 <col:20, col:29> 'int' '&'
|   |   |   |     |-ImplicitCastExpr 0x2640dfddfc0 <col:20> 'int' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x2640dfddf78 <col:20> 'int' lvalue ParmVar 0x2640dfe3540 'length' 'int'
|   |   |   |     `-IntegerLiteral 0x2640dfddf98 <col:29> 'int' 255
|   |   |   `-CompoundAssignOperator 0x2640dfde090 <line:201:13, col:24> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x2640dfde030 <col:13> 'int' lvalue ParmVar 0x2640dfe3540 'length' 'int'
|   |   |     `-IntegerLiteral 0x2640dfde050 <col:24> 'int' 8
|   |   `-CompoundAssignOperator 0x2640dfde150 <line:203:9, col:14> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     |-DeclRefExpr 0x2640dfde0f8 <col:9> 'unsigned char *' lvalue Var 0x2640dfe36d0 'p' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x2640dfde138 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2640dfde118 <col:14> 'int' lvalue Var 0x2640dfdd800 'l' 'int'
|   `-BinaryOperator 0x2640dfde270 <line:205:5, col:11> 'unsigned char *' '='
|     |-UnaryOperator 0x2640dfde220 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x2640dfde208 <col:6> 'unsigned char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x2640dfde1e8 <col:6> 'unsigned char **' lvalue ParmVar 0x2640dfe34c0 'pp' 'unsigned char **'
|     `-ImplicitCastExpr 0x2640dfde258 <col:11> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x2640dfde238 <col:11> 'unsigned char *' lvalue Var 0x2640dfe36d0 'p' 'unsigned char *'
|-FunctionDecl 0x2640dfde510 <line:208:1, line:234:1> line:208:5 ASN1_object_size 'int (int, int, int)'
| |-ParmVarDecl 0x2640dfde2d8 <col:22, col:26> col:26 used constructed 'int'
| |-ParmVarDecl 0x2640dfde358 <col:39, col:43> col:43 used length 'int'
| |-ParmVarDecl 0x2640dfde3d8 <col:51, col:55> col:55 used tag 'int'
| `-CompoundStmt 0x2640dfe50d0 <line:209:1, line:234:1>
|   |-DeclStmt 0x2640dfde688 <line:210:5, col:16>
|   | `-VarDecl 0x2640dfde5f8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2640dfde660 <col:15> 'int' 1
|   |-IfStmt 0x2640dfe47e0 <line:211:5, line:212:17>
|   | |-BinaryOperator 0x2640dfde700 <line:211:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x2640dfde6e8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2640dfde6a0 <col:9> 'int' lvalue ParmVar 0x2640dfde358 'length' 'int'
|   | | `-IntegerLiteral 0x2640dfde6c0 <col:18> 'int' 0
|   | `-ReturnStmt 0x2640dfe47d0 <line:212:9, col:17>
|   |   `-UnaryOperator 0x2640dfe47b8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2640dfe4790 <col:17> 'int' 1
|   |-IfStmt 0x2640dfe4a28 <line:213:5, line:218:5>
|   | |-BinaryOperator 0x2640dfe4858 <line:213:9, col:16> 'int' '>='
|   | | |-ImplicitCastExpr 0x2640dfe4840 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2640dfe47f8 <col:9> 'int' lvalue ParmVar 0x2640dfde3d8 'tag' 'int'
|   | | `-IntegerLiteral 0x2640dfe4818 <col:16> 'int' 31
|   | `-CompoundStmt 0x2640dfe4a10 <col:20, line:218:5>
|   |   `-WhileStmt 0x2640dfe49f8 <line:214:9, line:217:9>
|   |     |-BinaryOperator 0x2640dfe48d8 <line:214:16, col:22> 'int' '>'
|   |     | |-ImplicitCastExpr 0x2640dfe48c0 <col:16> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2640dfe4878 <col:16> 'int' lvalue ParmVar 0x2640dfde3d8 'tag' 'int'
|   |     | `-IntegerLiteral 0x2640dfe4898 <col:22> 'int' 0
|   |     `-CompoundStmt 0x2640dfe49d8 <col:25, line:217:9>
|   |       |-CompoundAssignOperator 0x2640dfe4958 <line:215:13, col:21> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x2640dfe48f8 <col:13> 'int' lvalue ParmVar 0x2640dfde3d8 'tag' 'int'
|   |       | `-IntegerLiteral 0x2640dfe4918 <col:21> 'int' 7
|   |       `-UnaryOperator 0x2640dfe49c0 <line:216:13, col:16> 'int' postfix '++'
|   |         `-DeclRefExpr 0x2640dfe4988 <col:13> 'int' lvalue Var 0x2640dfde5f8 'ret' 'int'
|   |-IfStmt 0x2640dfe4ec8 <line:219:5, line:230:5> has_else
|   | |-BinaryOperator 0x2640dfe4aa0 <line:219:9, col:24> 'int' '=='
|   | | |-ImplicitCastExpr 0x2640dfe4a88 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2640dfe4a40 <col:9> 'int' lvalue ParmVar 0x2640dfde2d8 'constructed' 'int'
|   | | `-IntegerLiteral 0x2640dfe4a60 <col:24> 'int' 2
|   | |-CompoundStmt 0x2640dfe4b38 <col:27, line:221:5>
|   | | `-CompoundAssignOperator 0x2640dfe4b08 <line:220:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |   |-DeclRefExpr 0x2640dfe4ac0 <col:9> 'int' lvalue Var 0x2640dfde5f8 'ret' 'int'
|   | |   `-IntegerLiteral 0x2640dfe4ae0 <col:16> 'int' 3
|   | `-CompoundStmt 0x2640dfe4ea8 <line:221:12, line:230:5>
|   |   |-UnaryOperator 0x2640dfe4b70 <line:222:9, col:12> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x2640dfe4b50 <col:9> 'int' lvalue Var 0x2640dfde5f8 'ret' 'int'
|   |   `-IfStmt 0x2640dfe4e90 <line:223:9, line:229:9>
|   |     |-BinaryOperator 0x2640dfe4be8 <line:223:13, col:22> 'int' '>'
|   |     | |-ImplicitCastExpr 0x2640dfe4bd0 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2640dfe4b88 <col:13> 'int' lvalue ParmVar 0x2640dfde358 'length' 'int'
|   |     | `-IntegerLiteral 0x2640dfe4ba8 <col:22> 'int' 127
|   |     `-CompoundStmt 0x2640dfe4e70 <col:27, line:229:9>
|   |       |-DeclStmt 0x2640dfe4cc0 <line:224:13, col:32>
|   |       | `-VarDecl 0x2640dfe4c20 <col:13, col:26> col:17 used tmplen 'int' cinit
|   |       |   `-ImplicitCastExpr 0x2640dfe4ca8 <col:26> 'int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x2640dfe4c88 <col:26> 'int' lvalue ParmVar 0x2640dfde358 'length' 'int'
|   |       `-WhileStmt 0x2640dfe4e58 <line:225:13, line:228:13>
|   |         |-BinaryOperator 0x2640dfe4d50 <line:225:20, col:29> 'int' '>'
|   |         | |-ImplicitCastExpr 0x2640dfe4d38 <col:20> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x2640dfe4cd8 <col:20> 'int' lvalue Var 0x2640dfe4c20 'tmplen' 'int'
|   |         | `-IntegerLiteral 0x2640dfe4d10 <col:29> 'int' 0
|   |         `-CompoundStmt 0x2640dfe4e38 <col:32, line:228:13>
|   |           |-CompoundAssignOperator 0x2640dfe4dd0 <line:226:17, col:28> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           | |-DeclRefExpr 0x2640dfe4d70 <col:17> 'int' lvalue Var 0x2640dfe4c20 'tmplen' 'int'
|   |           | `-IntegerLiteral 0x2640dfe4d90 <col:28> 'int' 8
|   |           `-UnaryOperator 0x2640dfe4e20 <line:227:17, col:20> 'int' postfix '++'
|   |             `-DeclRefExpr 0x2640dfe4e00 <col:17> 'int' lvalue Var 0x2640dfde5f8 'ret' 'int'
|   |-IfStmt 0x2640dfe5018 <line:231:5, line:232:17>
|   | |-BinaryOperator 0x2640dfe4fa8 <line:231:9, col:26> 'int' '>='
|   | | |-ImplicitCastExpr 0x2640dfe4f90 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2640dfe4ef0 <col:9> 'int' lvalue Var 0x2640dfde5f8 'ret' 'int'
|   | | `-BinaryOperator 0x2640dfe4f70 <<built-in>:30:21, .//openssl//file_jk/after\crypto\asn1\asn1_lib.c:231:26> 'int' '-'
|   | |   |-IntegerLiteral 0x2640dfe4f10 <<built-in>:30:21> 'int' 2147483647
|   | |   `-ImplicitCastExpr 0x2640dfe4f58 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:231:26> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x2640dfe4f38 <col:26> 'int' lvalue ParmVar 0x2640dfde358 'length' 'int'
|   | `-ReturnStmt 0x2640dfe5008 <line:232:9, col:17>
|   |   `-UnaryOperator 0x2640dfe4ff0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x2640dfe4fc8 <col:17> 'int' 1
|   `-ReturnStmt 0x2640dfe50c0 <line:233:5, col:18>
|     `-BinaryOperator 0x2640dfe50a0 <col:12, col:18> 'int' '+'
|       |-ImplicitCastExpr 0x2640dfe5070 <col:12> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x2640dfe5030 <col:12> 'int' lvalue Var 0x2640dfde5f8 'ret' 'int'
|       `-ImplicitCastExpr 0x2640dfe5088 <col:18> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x2640dfe5050 <col:18> 'int' lvalue ParmVar 0x2640dfde358 'length' 'int'
|-FunctionDecl 0x2640dfe5280 <line:236:1, line:247:1> line:236:5 invalid ASN1_STRING_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x2640dfe5128 <col:22, col:35> col:35 invalid dst 'int *'
| |-ParmVarDecl 0x2640dfe51a8 <col:40, col:59> col:59 invalid str 'const int *'
| `-CompoundStmt 0x2640dfe55e8 <line:237:1, line:247:1>
|   |-IfStmt 0x2640dfe5420 <line:238:5, line:239:16>
|   | |-OpaqueValueExpr 0x2640dfe5408 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2640dfe53f8 <col:9, col:16>
|   |   `-IntegerLiteral 0x2640dfe53d0 <col:16> 'int' 0
|   |-IfStmt 0x2640dfe5598 <line:241:5, line:242:16>
|   | |-OpaqueValueExpr 0x2640dfe5580 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2640dfe5570 <col:9, col:16>
|   |   `-IntegerLiteral 0x2640dfe5548 <col:16> 'int' 0
|   `-ReturnStmt 0x2640dfe55d8 <line:246:5, col:12>
|     `-IntegerLiteral 0x2640dfe55b0 <col:12> 'int' 1
|-FunctionDecl 0x2640dfe56f0 <line:249:1, line:262:1> line:249:14 invalid ASN1_STRING_dup 'int *(const int *)'
| |-ParmVarDecl 0x2640dfe5628 <col:30, col:49> col:49 invalid str 'const int *'
| `-CompoundStmt 0x2640dfe0d30 <line:250:1, line:262:1>
|   |-IfStmt 0x2640dfe0838 <line:252:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x2640dfe0820 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2640dfe0810 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:253:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x2640dfe07f8 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x2640dfe07d8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2640dfe07b0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2640dfe0770 <col:26> 'int' 0
|   |-IfStmt 0x2640dfe0b10 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:255:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x2640dfe0af8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2640dfe0ae8 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:256:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x2640dfe0ad0 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x2640dfe0ab0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x2640dfe0a88 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2640dfe0a48 <col:26> 'int' 0
|   `-IfStmt 0x2640dfe0d18 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:257:5, line:260:5>
|     |-OpaqueValueExpr 0x2640dfe0d00 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2640dfe0ce8 <line:257:38, line:260:5>
|       `-ReturnStmt 0x2640dfe0cd8 <line:259:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|         `-ImplicitCastExpr 0x2640dfe0cc0 <col:17, col:27> 'int *' <NullToPointer>
|           `-ParenExpr 0x2640dfe0ca0 <col:17, col:27> 'void *'
|             `-CStyleCastExpr 0x2640dfe0c78 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x2640dfe0c38 <col:26> 'int' 0
|-FunctionDecl 0x2640dfe0f60 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:264:1, line:291:1> line:264:5 invalid ASN1_STRING_set 'int (int *, const void *, int)'
| |-ParmVarDecl 0x2640dfe0d70 <col:21, col:34> col:34 invalid str 'int *'
| |-ParmVarDecl 0x2640dfe0df0 <col:39, col:51> col:51 used _data 'const void *'
| |-ParmVarDecl 0x2640dfe0e70 <col:58, col:62> col:62 used len 'int'
| `-CompoundStmt 0x2640dfe4010 <line:265:1, line:291:1>
|   |-DeclStmt 0x2640dfe10b0 <line:266:5, col:21>
|   | `-VarDecl 0x2640dfe1048 <col:5, col:20> col:20 used c 'unsigned char *'
|   |-DeclStmt 0x2640dfe11b0 <line:267:5, col:29>
|   | `-VarDecl 0x2640dfe10e0 <col:5, col:24> col:17 used data 'const char *' cinit
|   |   `-ImplicitCastExpr 0x2640dfe1198 <col:24> 'const char *' <BitCast>
|   |     `-ImplicitCastExpr 0x2640dfe1180 <col:24> 'const void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x2640dfe1148 <col:24> 'const void *' lvalue ParmVar 0x2640dfe0df0 '_data' 'const void *'
|   |-IfStmt 0x2640dfe1698 <line:269:5, line:274:5>
|   | |-BinaryOperator 0x2640dfe1240 <line:269:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x2640dfe1228 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2640dfe11c8 <col:9> 'int' lvalue ParmVar 0x2640dfe0e70 'len' 'int'
|   | | `-IntegerLiteral 0x2640dfe1200 <col:15> 'int' 0
|   | `-CompoundStmt 0x2640dfe1680 <col:18, line:274:5>
|   |   `-IfStmt 0x2640dfe1658 <line:270:9, line:273:30> has_else
|   |     |-BinaryOperator 0x2640dfe1350 <line:270:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x2640dfe1320 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:270:13> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x2640dfe1260 <col:13> 'const char *' lvalue Var 0x2640dfe10e0 'data' 'const char *'
|   |     | `-ImplicitCastExpr 0x2640dfe1338 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |     |   `-ParenExpr 0x2640dfe1300 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x2640dfe12d8 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x2640dfe1298 <col:26> 'int' 0
|   |     |-ReturnStmt 0x2640dfe13b8 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:271:13, col:22>
|   |     | `-ParenExpr 0x2640dfe1398 <col:20, col:22> 'int'
|   |     |   `-IntegerLiteral 0x2640dfe1370 <col:21> 'int' 0
|   |     `-BinaryOperator 0x2640dfe1638 <line:273:13, col:30> 'int' '='
|   |       |-DeclRefExpr 0x2640dfe13c8 <col:13> 'int' lvalue ParmVar 0x2640dfe0e70 'len' 'int'
|   |       `-ImplicitCastExpr 0x2640dfe1620 <col:19, col:30> 'int' <IntegralCast>
|   |         `-CallExpr 0x2640dfe15e0 <col:19, col:30> 'unsigned long long'
|   |           |-ImplicitCastExpr 0x2640dfe15c8 <col:19> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x2640dfe1530 <col:19> 'unsigned long long (const char *)' Function 0x2640dfe1420 'strlen' 'unsigned long long (const char *)'
|   |           `-ImplicitCastExpr 0x2640dfe1608 <col:26> 'const char *' <LValueToRValue>
|   |             `-DeclRefExpr 0x2640dfe1568 <col:26> 'const char *' lvalue Var 0x2640dfe10e0 'data' 'const char *'
|   |-IfStmt 0x2640dfe3b80 <line:275:5, line:283:5>
|   | |-OpaqueValueExpr 0x2640dfe3b68 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2640dfe3b50 <line:275:54, line:283:5>
|   |   `-IfStmt 0x2640dfe3b38 <line:278:9, line:282:9>
|   |     |-OpaqueValueExpr 0x2640dfe3b20 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x2640dfe3b08 <line:278:32, line:282:9>
|   |       `-ReturnStmt 0x2640dfe3af8 <line:281:13, col:22>
|   |         `-ParenExpr 0x2640dfe3ad8 <col:20, col:22> 'int'
|   |           `-IntegerLiteral 0x2640dfe3ab0 <col:21> 'int' 0
|   |-IfStmt 0x2640dfe3fa0 <line:285:5, line:289:5>
|   | |-BinaryOperator 0x2640dfe3c90 <line:285:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x2640dfe3c60 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:285:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2640dfe3bb8 <col:9> 'const char *' lvalue Var 0x2640dfe10e0 'data' 'const char *'
|   | | `-ImplicitCastExpr 0x2640dfe3c78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x2640dfe3c40 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x2640dfe3c18 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2640dfe3bd8 <col:26> 'int' 0
|   | `-CompoundStmt 0x2640dfe3f90 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:285:23, line:289:5>
|   `-ReturnStmt 0x2640dfe4000 <line:290:5, col:14>
|     `-ParenExpr 0x2640dfe3fe0 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x2640dfe3fb8 <col:13> 'int' 1
|-FunctionDecl 0x2640dfe1420 <line:273:19> col:19 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2640dfe14c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2640dfe3cf0 <line:286:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2640dfe3d90 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2640dfe3df8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2640dfe3e60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2640dfe4248 <line:293:1, line:298:1> line:293:6 invalid ASN1_STRING_set0 'void (int *, void *, int)'
| |-ParmVarDecl 0x2640dfe4068 <col:23, col:36> col:36 invalid str 'int *'
| |-ParmVarDecl 0x2640dfe40e8 <col:41, col:47> col:47 used data 'void *'
| |-ParmVarDecl 0x2640dfe4168 <col:53, col:57> col:57 used len 'int'
| `-CompoundStmt 0x2640dfe4498 <line:294:1, line:298:1>
|-FunctionDecl 0x2640dfe4570 <line:300:1, line:303:1> line:300:14 invalid ASN1_STRING_new 'int *(void)'
| `-CompoundStmt 0x2640dfe4738 <line:301:1, line:303:1>
|-FunctionDecl 0x2640dfe1840 <line:305:1, line:316:1> line:305:14 invalid ASN1_STRING_type_new 'int *(int)'
| |-ParmVarDecl 0x2640dfe1760 <col:35, col:39> col:39 used type 'int'
| `-CompoundStmt 0x2640dfe1bf0 <line:306:1, line:316:1>
|   `-IfStmt 0x2640dfe1bb8 <line:310:5, line:313:5>
|     |-OpaqueValueExpr 0x2640dfe1ba0 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x2640dfe1b88 <line:310:22, line:313:5>
|       `-ReturnStmt 0x2640dfe1b78 <line:312:9, col:21>
|         `-ImplicitCastExpr 0x2640dfe1b60 <col:16, col:21> 'int *' <NullToPointer>
|           `-ParenExpr 0x2640dfe1b40 <col:16, col:21> 'void *'
|             `-ParenExpr 0x2640dfe1b20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|               `-CStyleCastExpr 0x2640dfe1af8 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x2640dfe1ab8 <col:26> 'int' 0
|-FunctionDecl 0x2640dfe1d38 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:318:1, line:326:1> line:318:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x2640dfe1c20 <col:29, col:42> col:42 invalid a 'int *'
| |-ParmVarDecl 0x2640dfe1ca0 <col:45, col:49> col:49 used embed 'int'
| `-CompoundStmt 0x2640dfe1fa0 <line:319:1, line:326:1>
|   `-IfStmt 0x2640dfe1eb0 <line:320:5, line:321:9>
|     |-OpaqueValueExpr 0x2640dfe1e98 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x2640dfe1e88 <col:9>
|-FunctionDecl 0x2640dfe2098 <line:328:1, line:333:1> line:328:6 invalid ASN1_STRING_free 'void (int *)'
| |-ParmVarDecl 0x2640dfe1fd0 <col:23, col:36> col:36 invalid a 'int *'
| `-CompoundStmt 0x2640dfe2220 <line:329:1, line:333:1>
|   `-IfStmt 0x2640dfe2208 <line:330:5, line:331:9>
|     |-OpaqueValueExpr 0x2640dfe21f0 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x2640dfe21e0 <col:9>
|-FunctionDecl 0x2640dfe22e0 <line:335:1, line:342:1> line:335:6 invalid ASN1_STRING_clear_free 'void (int *)'
| |-ParmVarDecl 0x2640dfe2250 <col:29, col:42> col:42 invalid a 'int *'
| `-CompoundStmt 0x2640dfe2578 <line:336:1, line:342:1>
|   `-IfStmt 0x2640dfe2450 <line:337:5, line:338:9>
|     |-OpaqueValueExpr 0x2640dfe2438 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x2640dfe2428 <col:9>
|-FunctionDecl 0x2640dfe57a0 <line:344:1, line:357:1> line:344:5 invalid ASN1_STRING_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x2640dfe25a8 <col:21, col:40> col:40 invalid a 'const int *'
| |-ParmVarDecl 0x2640dfe2628 <col:43, col:62> col:62 invalid b 'const int *'
| `-CompoundStmt 0x2640dfe5e08 <line:345:1, line:357:1>
|   |-DeclStmt 0x2640dfe58e8 <line:346:5, col:10>
|   | `-VarDecl 0x2640dfe5880 <col:5, col:9> col:9 used i 'int'
|   `-IfStmt 0x2640dfe5de0 <line:349:5, line:356:18> has_else
|     |-BinaryOperator 0x2640dfe5998 <line:349:9, col:14> 'int' '=='
|     | |-ImplicitCastExpr 0x2640dfe5980 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x2640dfe5938 <col:9> 'int' lvalue Var 0x2640dfe5880 'i' 'int'
|     | `-IntegerLiteral 0x2640dfe5958 <col:14> 'int' 0
|     |-CompoundStmt 0x2640dfe5d60 <col:17, line:355:5>
|     | `-IfStmt 0x2640dfe5d38 <line:351:9, line:354:22> has_else
|     |   |-BinaryOperator 0x2640dfe5ca8 <line:351:13, col:18> 'int' '=='
|     |   | |-ImplicitCastExpr 0x2640dfe5c90 <col:13> 'int' <LValueToRValue>
|     |   | | `-DeclRefExpr 0x2640dfe5c48 <col:13> 'int' lvalue Var 0x2640dfe5880 'i' 'int'
|     |   | `-IntegerLiteral 0x2640dfe5c68 <col:18> 'int' 0
|     |   |-NullStmt 0x2640dfe5d30 <line:352:13>
|     |   `-ReturnStmt 0x2640dfe5d20 <line:354:13, col:22>
|     |     `-ImplicitCastExpr 0x2640dfe5d08 <col:20, col:22> 'int' <LValueToRValue>
|     |       `-ParenExpr 0x2640dfe5ce8 <col:20, col:22> 'int' lvalue
|     |         `-DeclRefExpr 0x2640dfe5cc8 <col:21> 'int' lvalue Var 0x2640dfe5880 'i' 'int'
|     `-ReturnStmt 0x2640dfe5dd0 <line:356:9, col:18>
|       `-ImplicitCastExpr 0x2640dfe5db8 <col:16, col:18> 'int' <LValueToRValue>
|         `-ParenExpr 0x2640dfe5d98 <col:16, col:18> 'int' lvalue
|           `-DeclRefExpr 0x2640dfe5d78 <col:17> 'int' lvalue Var 0x2640dfe5880 'i' 'int'
|-FunctionDecl 0x2640dfe5a20 <line:350:13> col:13 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2640dfe5ac0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2640dfe5b28 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2640dfe5b90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2640dfe5f10 <line:359:1, line:362:1> line:359:5 invalid ASN1_STRING_length 'int (const int *)'
| |-ParmVarDecl 0x2640dfe5e40 <col:24, col:43> col:43 invalid x 'const int *'
| `-CompoundStmt 0x2640dfe5fd0 <line:360:1, line:362:1>
|-FunctionDecl 0x2640dfe6110 <line:364:1, line:367:1> line:364:6 invalid ASN1_STRING_length_set 'void (int *, int)'
| |-ParmVarDecl 0x2640dfe5ff8 <col:29, col:42> col:42 invalid x 'int *'
| |-ParmVarDecl 0x2640dfe6078 <col:45, col:49> col:49 used len 'int'
| `-CompoundStmt 0x2640dfe6210 <line:365:1, line:367:1>
|-FunctionDecl 0x2640dfe62d0 <line:369:1, line:372:1> line:369:5 invalid ASN1_STRING_type 'int (const int *)'
| |-ParmVarDecl 0x2640dfe6238 <col:22, col:41> col:41 invalid x 'const int *'
| `-CompoundStmt 0x2640dfe6390 <line:370:1, line:372:1>
|-FunctionDecl 0x2640dfe6480 <line:374:1, line:377:1> line:374:22 invalid ASN1_STRING_get0_data 'const unsigned char *(const int *)'
| |-ParmVarDecl 0x2640dfe63b8 <col:44, col:63> col:63 invalid x 'const int *'
| `-CompoundStmt 0x2640dfe6540 <line:375:1, line:377:1>
`-FunctionDecl 0x2640dfe6630 <line:380:1, line:383:1> line:380:16 invalid ASN1_STRING_data 'unsigned char *(int *)'
  |-ParmVarDecl 0x2640dfe6568 <col:33, col:46> col:46 invalid x 'int *'
  `-CompoundStmt 0x2640dfe66f0 <line:381:1, line:383:1>
