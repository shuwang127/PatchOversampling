TranslationUnitDecl 0x1cb98403cb8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1cb98404550 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1cb98404250 '__int128'
|-TypedefDecl 0x1cb984045c0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1cb98404270 'unsigned __int128'
|-TypedefDecl 0x1cb984048f8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1cb984046b0 'struct __NSConstantString_tag'
|   `-Record 0x1cb98404618 '__NSConstantString_tag'
|-TypedefDecl 0x1cb98404968 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1cb98403e90 'unsigned long long'
|-TypedefDecl 0x1cb98404a00 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1cb984049c0 'char *'
|   `-BuiltinType 0x1cb98403d50 'char'
|-TypedefDecl 0x1cb98404a70 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1cb984049c0 'char *'
|   `-BuiltinType 0x1cb98403d50 'char'
|-TypedefDecl 0x1cb98404b30 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1cb98403e90 'unsigned long long'
|-TypedefDecl 0x1cb98404ba0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1cb984049c0 'char *'
|   `-BuiltinType 0x1cb98403d50 'char'
|-FunctionDecl 0x1cb99de1440 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1cb99de14e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1cb99de1550 <col:21> Implicit
|-FunctionDecl 0x1cb99de15a8 prev 0x1cb99de1440 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1cb99de12d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1cb99de1698 <col:21> Inherited Implicit
|-TypedefDecl 0x1cb99de16d8 prev 0x1cb98404968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1cb98403e90 'unsigned long long'
|-TypedefDecl 0x1cb99de1780 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1cb99de1750 'size_t' sugar
|   |-Typedef 0x1cb99de16d8 'size_t'
|   `-BuiltinType 0x1cb98403e90 'unsigned long long'
|-TypedefDecl 0x1cb99de17f0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1cb98403df0 'long long'
|-TypedefDecl 0x1cb99de1860 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1cb98403df0 'long long'
|-TypedefDecl 0x1cb99de18d0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1cb98403e30 'unsigned short'
|-TypedefDecl 0x1cb99de1940 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1cb98403e30 'unsigned short'
|-TypedefDecl 0x1cb99de19b0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1cb98403e30 'unsigned short'
|-TypedefDecl 0x1cb99de1a20 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1cb98403db0 'int'
|-TypedefDecl 0x1cb99de1a90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1cb98403dd0 'long'
|-TypedefDecl 0x1cb99de1b00 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1cb98403df0 'long long'
|-TypedefDecl 0x1cb99de1b90 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1cb99de1b60 '__time64_t' sugar
|   |-Typedef 0x1cb99de1b00 '__time64_t'
|   `-BuiltinType 0x1cb98403df0 'long long'
|-FunctionDecl 0x1cb99de1d08 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1cb99de1f28 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1cb99e1a080 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1cb99de2068 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1cb99de20e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1cb99de2158 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1cb99de21d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1cb99e19e20 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1cb99e1a160 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1cb99e1a220 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1cb99e1a390 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1cb99e1a340 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1cb99e1a2e0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1cb99e1a200 'struct threadlocaleinfostruct'
|       `-Record 0x1cb99e26ef0 'threadlocaleinfostruct'
|-TypedefDecl 0x1cb99e1a4a0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1cb99e1a450 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1cb99e1a3f0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1cb99e1a2c0 'struct threadmbcinfostruct'
|       `-Record 0x1cb99e1a220 'threadmbcinfostruct'
|-RecordDecl 0x1cb99e1a4f8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1cb99e1a5b0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1cb99e1a670 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1cb99e1a700 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1cb99e1a790 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1cb99e1a848 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1cb99e1a7f0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1cb99e1a650 'struct localeinfo_struct'
|     `-Record 0x1cb99e1a5b0 'localeinfo_struct'
|-TypedefDecl 0x1cb99e1a920 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1cb99e1a8d0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1cb99e1a7f0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1cb99e1a650 'struct localeinfo_struct'
|       `-Record 0x1cb99e1a5b0 'localeinfo_struct'
|-RecordDecl 0x1cb99e1a998 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1cb99e1aa50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1cb99e1aac8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1cb99e1ab88 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1cb99e1ac20 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1cb99e1ac90 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1cb99e1ad48 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1cb99e1acf0 'struct localerefcount' sugar
|   `-RecordType 0x1cb99e1aa30 'struct localerefcount'
|     `-Record 0x1cb99e1a998 'localerefcount'
|-RecordDecl 0x1cb99e26ef0 prev 0x1cb99e1a160 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1cb99e26f70 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1cb99e26fe8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1cb99e27058 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1cb99e270c8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1cb99e27138 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1cb99e272f8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1cb99e27368 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1cb99e273d8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1cb99e27448 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1cb99e274b8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1cb99e27528 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1cb99e27580 parent 0x1cb98403cb8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1cb99e27710 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1cb99e27780 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1cb99e277f0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1cb99e27860 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1cb99e27900 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1cb99e27970 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1cb99e27a80 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1cb99e27bb8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1cb99e27c68 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1cb99e27c10 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1cb99e1a200 'struct threadlocaleinfostruct'
|     `-Record 0x1cb99e26ef0 'threadlocaleinfostruct'
|-RecordDecl 0x1cb99e27d00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1cb99e27dc0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1cb99e27e38 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1cb99e1fe80 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1cb99e1fef0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1cb99e1ff60 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1cb99e1ffd0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1cb99e20040 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1cb99e200b0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1cb99e20120 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1cb99e201d0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1cb99e20180 'struct _iobuf' sugar
|   `-RecordType 0x1cb99e27da0 'struct _iobuf'
|     `-Record 0x1cb99e27d00 '_iobuf'
|-FunctionDecl 0x1cb99e20408 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1cb99e204d8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1cb98403df0 'long long'
|-FunctionDecl 0x1cb99e206b8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99e20540 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1cb99e209b0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1cb99e20790 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1cb99e20808 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1cb99e20d60 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1cb99e20a90 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1cb99e20b10 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1cb99e20b90 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1cb99e2d0c0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1cb99e2cf50 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1cb99e2d2f0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1cb99e2d1b0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1cb99e2d4a0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99e2d3c0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1cb99e2d690 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1cb99e2d988 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1cb99e2d760 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1cb99e2d7e0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1cb99e2db40 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99e2da60 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1cb99e2dcf0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99e2dc10 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1cb99e2dea0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99e2ddc0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1cb99e29018 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99e28f38 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1cb99e291a8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1cb99e29510 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1cb99e29270 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1cb99e29368 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1cb99e298c8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1cb99e295f0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1cb99e29670 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1cb99e296e8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1cb99e29a88 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99e299a8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1cb99e29d50 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1cb99e29b60 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1cb99e29be0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1cb99e2bf40 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1cb99e2c338 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1cb99e2c3d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1cb99e2c440 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cb99e2c4b8 prev 0x1cb99e2c338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1cb99e2c110 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1cb99e2c190 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1cb99e2c568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e2c9e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1cb99e2c710 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1cb99e2c790 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1cb99e2c810 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1cb99e2cd00 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1cb99e2cda0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1cb99e2ce08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1cb99e2ce80 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1cb99e29f20 prev 0x1cb99e2cd00 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1cb99e2cac0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e2cb40 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1cb99e2a018 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1cb99e2a1e0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1cb99e2a060 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1cb99e2a0e0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1cb99e2a438 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1cb99e2a2c0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1cb99e2a338 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1cb99e2a668 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1cb99e2a518 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1cb99e2a960 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1cb99e2a740 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1cb99e2a7b8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1cb99e2adf8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1cb99e2ae98 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1cb99e31fa0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1cb99e32008 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1cb99e32070 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1cb99e320f8 prev 0x1cb99e2adf8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1cb99e2aa40 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1cb99e2aab8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e2ab30 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e2aba8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1cb99e32600 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1cb99e321e8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1cb99e32260 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e322d8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e32350 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e323c8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1cb99e32ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1cb99e327f0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1cb99e32870 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1cb99e328e8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1cb99e32b78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e2afd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1cb99e32cc0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1cb99e32d40 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1cb99e32dc0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1cb99e32e38 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1cb99e2b380 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1cb99e2b420 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1cb99e2b488 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1cb99e2b500 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1cb99e2b568 prev 0x1cb99e2b380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1cb99e2b1b8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e2b238 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1cb99e2b748 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1cb99e2b618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e2bb88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e2b888 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e2b908 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e2b9a0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cb99e2bc40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e2ef70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1cb99e2bd80 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1cb99e2be00 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1cb99e2f260 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e2f048 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e2f0c8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e2f140 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e2f5c0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1cb99e2f340 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1cb99e2f418 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1cb99e2f978 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1cb99e2f698 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e2f718 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1cb99e2f798 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1cb99e2fbd8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1cb99e2fa58 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1cb99e2dfa8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1cb99e2fca8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e2fd28 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1cb99e2fda8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1cb99e2e208 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1cb99e2e088 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1cb99e2e6c8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1cb99e2e768 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1cb99e2e7d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1cb99e2e838 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1cb99e2e8a0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1cb99e2e928 prev 0x1cb99e2e6c8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1cb99e2e310 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1cb99e2e388 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e2e400 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e2e478 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1cb99e2eaf0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99e2ea10 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1cb99e2ec80 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1cb99e2ee08 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1cb99e31150 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1cb99e2eed8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1cb99e30fa0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1cb99e31478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1cb99e31330 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1cb99e31520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e31740 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99e31660 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1cb99e31960 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1cb99e31818 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1cb99e31b10 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99e31a30 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1cb99e31d60 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1cb99e31be8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1cb99e31c68 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1cb99e32fb0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1cb99e33050 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1cb99e330c0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1cb99e33128 prev 0x1cb99e32fb0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1cb99e31e40 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1cb99e33218 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1cb99e33348 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1cb99e33268 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1cb99e33598 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1cb99e33420 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1cb99e33498 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1cb99e33758 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1cb99e33678 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1cb99e33978 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1cb99e33830 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1cb99e33bc8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1cb99e33a50 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1cb99e33ac8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1cb99e33d88 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1cb99e33ca8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1cb99e7f100 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1cb99e33e60 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1cb99e33ee0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1cb99e7f2c0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1cb99e7f1e0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1cb99e7f550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1cb99e7f470 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1cb99e7f5f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1cb99e7f7f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1cb99e7f718 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1cb99e7f980 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1cb99e7fc28 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1cb99e7fcc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1cb99e7fd38 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1cb99e7fda0 prev 0x1cb99e7fc28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1cb99e7fb10 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1cb99e7ff78 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1cb99e7fe48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e83380 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e83148 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e831c0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cb99e83430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e83658 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1cb99e83578 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1cb99e838a8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e83730 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e837a8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e83c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1cb99e83a40 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e83ac0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1cb99e83d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e83f40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1cb99e83e60 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1cb99e80188 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1cb99e80040 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1cb99e80370 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1cb99e807c0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1cb99e80438 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e804b8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1cb99e80538 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1cb99e805b0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1cb99e80c40 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1cb99e808b0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e80928 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e809a0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e80a20 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1cb99e85090 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1cb99e80d30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e80da8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e80e28 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1cb99e85258 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1cb99e85178 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1cb99e85630 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1cb99e856d0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1cb99e85738 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1cb99e857b0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1cb99e85818 prev 0x1cb99e85630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1cb99e853f0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1cb99e85470 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1cb99e859f8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1cb99e858c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e85de8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e85b08 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1cb99e85b88 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e85c00 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cb99e85ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e82160 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1cb99e85fe8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1cb99e82060 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1cb99e82458 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e82240 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1cb99e822c0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e82338 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e828e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1cb99e82600 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1cb99e82678 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e826f8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1cb99e829a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e82f70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e82be0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1cb99e82c58 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e82cd8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e82d50 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cb99e81050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e813b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1cb99e81198 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1cb99e81210 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e81290 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1cb99e81748 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e81498 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1cb99e81510 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e81590 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e81608 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e819a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1cb99e81a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e81d00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1cb99e81b90 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1cb99e7e020 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1cb99e81dd8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1cb99e81e50 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1cb99e7e2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1cb99e7e1c0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1cb99e7e348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e7e608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1cb99e7e490 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1cb99e7e508 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1cb99e7ea20 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1cb99e7eac0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1cb99e7eb28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1cb99e7eb90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1cb99e7ec10 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1cb99e7ec78 prev 0x1cb99e7ea20 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1cb99e7e6e0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e7e760 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e7e7d8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1cb99e7ed78 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1cb99e860a0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1cb99e86140 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1cb99e861a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1cb99e86210 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1cb99e86290 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1cb99e862f8 prev 0x1cb99e860a0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1cb99e7edc0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e7ee40 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e7eeb8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1cb99e863f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1cb99e86658 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1cb99e86440 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e864c0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e86538 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e86950 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1cb99e86738 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e867b8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e86830 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e86c98 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1cb99e86d38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1cb99e86da0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1cb99e86e18 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1cb99e86e80 prev 0x1cb99e86c98 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1cb99e86a38 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e86ab0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1cb99e86f78 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1cb99e8b228 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1cb99e8b2c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1cb99e8b330 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1cb99e8b3a8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1cb99e8b410 prev 0x1cb99e8b228 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1cb99e86fc8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8b0f0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1cb99e8b508 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1cb99e8b6d0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1cb99e8b558 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e8b5d0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8b928 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1cb99e8b7b0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e8b828 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8be88 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1cb99e8bf28 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1cb99e8bf90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1cb99e8bff8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1cb99e8c060 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1cb99e84080 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1cb99e840e8 prev 0x1cb99e8be88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1cb99e8bac8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e8bb40 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e8bbc0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8bc38 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1cb99e842d8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1cb99e841a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e84748 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1cb99e84328 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e843a0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e84418 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e84498 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e84510 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e84b88 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1cb99e84840 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e848b8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e84930 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e849b0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e84a28 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e84f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1cb99e84d40 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1cb99e84db8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e84e38 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1cb99e85010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e87520 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1cb99e87270 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1cb99e872e8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e87368 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e873e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1cb99e875e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e879d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1cb99e87728 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e877a0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e87820 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e87898 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e87d98 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1cb99e87ac8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1cb99e87b48 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e87bc0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8e1c0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1cb99e8e260 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1cb99e8e2c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1cb99e8e340 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1cb99e8e3a8 prev 0x1cb99e8e1c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1cb99e87f40 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1cb99e87fc0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1cb99e8e588 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1cb99e8e458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e8e9b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1cb99e8ea50 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1cb99e8eab8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1cb99e8eb20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1cb99e8eba0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1cb99e8ec08 prev 0x1cb99e8e9b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1cb99e8e698 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1cb99e8e718 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8e790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1cb99e8edf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1cb99e8ecc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e8f130 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1cb99e8f1d0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1cb99e8f238 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1cb99e8f2a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1cb99e8f320 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1cb99e8f388 prev 0x1cb99e8f130 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1cb99e8ee40 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1cb99e8eec0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8ef38 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1cb99e8f488 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1cb99e8f650 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1cb99e8f4d8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e8f550 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8f948 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1cb99e8f730 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e8f7a8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e8f828 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1cb99e8fce0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1cb99e8fa30 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e8faa8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e8fb28 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e8fba0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8ff48 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1cb99e8fdc8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1cb99e8fe48 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1cb99e880c0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1cb99e90028 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1cb99e883b0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1cb99e88198 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1cb99e88210 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e88290 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1cb99e886a8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1cb99e88490 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e88510 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e88588 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e88908 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1cb99e88790 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e88808 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e88c98 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1cb99e889e8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1cb99e88a60 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e88ae0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e88b58 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e88e68 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1cb99e88d88 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1cb99e8c100 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1cb99e88f40 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e88fb8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8c2c0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1cb99e8c1e0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1cb99e8c450 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1cb99e8c698 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e8c520 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e8c598 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e8c8f0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e8c778 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e8c7f0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e8cb48 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e8c9d0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e8ca48 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e8cef8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e8cc28 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8cca0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e8cd18 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8a200 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e8cfe0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8d058 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e8a0e0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8a4f8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e8a2e8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8a360 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e8a3d8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8a7f0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e8a5d8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e8a658 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e8a6d0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e8aae8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e8a8d0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e8a950 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e8a9c8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e8ade0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e8abc8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e8ac48 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e8acc0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e8d270 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e8aec0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e8af40 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8afb8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e8b030 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8d608 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e8d358 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e8d3d8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8d450 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e8d4c8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8d9a0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e8d6f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e8d770 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8d7e8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e8d860 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e8de38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e8db50 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e8dbd0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8dc48 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cb99e8def0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e893e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e8e038 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e890d0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e89150 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e891c8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e89780 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e894d0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e89548 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e895c8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e89640 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e89cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e89970 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e899f0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e89a68 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1cb99e89ae0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1cb99e89d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e953c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e89ed8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e89f50 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e89fd0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e8a048 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e95190 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e95808 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e954c0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e95538 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e955b8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e95630 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e956a8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e95a78 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e95900 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e95978 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e95cd0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e95b58 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e95bd0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e95fc0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e95db0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e95e28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e95ea0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e92290 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e960a8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e96120 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e92170 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e926e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e92438 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e924b0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e92530 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e925a8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cb99e927a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e92ba0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e928f0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e92968 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e929e8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e92a60 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e981c0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e92c90 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e92d08 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e92d80 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e92e00 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1cb99e92e78 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e98700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e983b8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e98430 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e984b0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e98528 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1cb99e985a0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1cb99e987c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e98c48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e98918 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e98990 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e98a10 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1cb99e98a88 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e98b00 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e931d0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e98d40 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1cb99e98db8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e98e30 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e98eb0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1cb99e98f28 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99e98fa0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e93590 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1cb99e932c8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1cb99e93340 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e933c0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1cb99e93800 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1cb99e93690 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1cb99e93a18 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1cb99e93cf8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1cb99e93ae0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1cb99e93b58 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1cb99e93f40 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1cb99e93dd0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1cb99e961a0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1cb99e94010 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1cb99e96328 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1cb99e96560 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1cb99e963f0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1cb99e96468 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1cb99e96710 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1cb99e96638 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1cb99e969b8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1cb99e967e0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1cb99e96858 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1cb99e96d60 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1cb99e96a90 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1cb99e96b10 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1cb99e96b88 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1cb99e97060 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1cb99e96e40 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e96eb8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1cb99e97368 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1cb99e97138 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1cb99e971c0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1cb99e97670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1cb99e97500 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1cb99e97718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e979d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1cb99e97858 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1cb99e97ce0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99e97aa8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1cb99e97b20 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99e97f30 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99e97db8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1cb99e97e30 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99e91150 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1cb99e98008 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99e91300 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1cb99e91220 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99e914b0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1cb99e913d0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99e91848 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e91580 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e915f8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e91670 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e91b38 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e91928 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e919a0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e91a18 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e91e28 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e91c18 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e91c90 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e91d08 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e991d0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e91f08 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e91f80 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e91ff8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e994d0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e992b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e99328 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e99720 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e995a8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e99620 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e99970 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e997f8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e99870 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e99bc0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e99a48 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e99ac0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e99f78 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99e99c98 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1cb99e99d10 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e99d88 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99e9a3f0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e9a058 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9a0d0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e9a148 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e9a1e0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e9a7a8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e9a4d8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1cb99e9a550 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e9a5c8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e9aa98 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e9a888 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1cb99e9a900 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e9a978 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e9ad88 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99e9ab78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9abf0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e9ac68 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99e9b110 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e9ae68 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9aee0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e9af58 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e9afd0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e9b5a0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99e9b218 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9b290 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e9b308 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e9b380 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99e9baa8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e9b688 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9b700 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e9b778 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e9b7f0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e9b868 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e9be68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99e9bc58 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9bcd0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e9bd48 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1cb99e9bf20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e9c430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e9c120 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9c200 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e9c278 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99e9c2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1cb99e9c4f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e9c7a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99e9c630 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1cb99e9c6a8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99e9c960 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1cb99e9c880 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99e9cc40 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e9ca30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1cb99e9caa8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e9cb20 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e9ce98 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99e9cd20 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e9cd98 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea1060 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99e9cf70 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9cfe8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99e9d060 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99ea13e8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99ea1140 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99ea11b8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ea1230 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea12a8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea15b0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1cb99ea14d0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99ea17f8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99ea1680 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea16f8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea1b00 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea18d0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea1948 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99ea1d50 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea1bd8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea1c50 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99ea1fa0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea1e28 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea1ea0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99ea3378 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea30a8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea3120 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea3198 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea3668 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea3458 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea34d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea3548 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea3958 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea3748 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea37c0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea3838 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea3d18 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea3a38 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1cb99ea3ab0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea3b28 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99ea50a0 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea3df8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1cb99ea3e70 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea3ee8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99ea5390 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea5180 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1cb99ea51f8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea5270 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99ea57e0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea5470 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1cb99ea54e8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea5560 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea55d8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea5b70 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea58c8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1cb99ea5940 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea59b8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea5a30 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea5f00 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea5c58 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1cb99ea5cd0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea5d48 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea5dc0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea0360 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea5fe8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99ea0050 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ea00c8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea0140 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99ea06f0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea0448 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99ea04c0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ea0538 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea05b0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99ea0a80 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea07d8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99ea0850 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ea08c8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea0940 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99ea0f88 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea0b68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99ea0be0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ea0c58 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea0cd0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea0d48 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea43f8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea40b8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99ea4130 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ea41a8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea4220 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea4298 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea4828 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea44e8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99ea4560 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ea45d8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea4650 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea46c8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea4a90 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea4918 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea4990 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99ea4ce0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea4b68 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea4be0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99ea4fc8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea4db8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea4e30 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea4ea8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99e9e3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e9e120 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9e198 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e9e210 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99e9e288 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cb99e9e488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99e9e9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e9e5d0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9e648 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e9e6c0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e9e738 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99e9e7b0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99e9ef30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e9ebf0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9ec68 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99e9ece0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99e9ed58 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1cb99e9edd0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1cb99ea60b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99ea66c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea61f8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1cb99ea6270 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ea62e8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ea6360 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea63d8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea6450 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea6bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99ea6988 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1cb99ea6a00 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1cb99ea6c70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1cb99ea6d88 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1cb99e9f2a8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99ea7040 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9f050 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99e9f0c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1cb99e9f360 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1cb99e9f478 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1cb99e9fa18 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99e9f738 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9f7b0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99e9f828 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1cb99e9fad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1cb99e9fbf0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1cb99ea72d0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99e9feb0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1cb99e9ff28 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99e9ffa0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1cb99ea70c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1cb99ea7390 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1cb99ea74b0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1cb99ea77b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1cb99ea75d8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1cb99ea7650 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ea76c8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1cb99ead3c0 <line:37:1, line:44:1>
|   |-DeclStmt 0x1cb99ea7900 <line:38:5, col:21>
|   | `-VarDecl 0x1cb99ea7898 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1cb99ea7998 <line:39:5, col:13>
|   | `-VarDecl 0x1cb99ea7930 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1cb99ea7cf0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1cb99ea7cd8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1cb99ea7bf0 <col:34> '<builtin fn type>' Function 0x1cb99ea7a88 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1cb99ea7c28 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1cb99ea7898 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1cb99ea7c60 <col:29> 'const wchar_t *' lvalue ParmVar 0x1cb99ea76c8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1cb99ea7fb0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1cb99ea7d20 <col:5> 'int' lvalue Var 0x1cb99ea7930 '_Ret' 'int'
|   | `-CallExpr 0x1cb99ea7ef0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1cb99ea7ed8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1cb99ea7d58 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1cb99ea0f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1cb99ea7f38 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1cb99ea7d78 <col:27> 'wchar_t *' lvalue ParmVar 0x1cb99ea75d8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1cb99ea7f50 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1cb99ea7d98 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1cb99ea7650 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1cb99ea7f68 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1cb99ea7db8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1cb99ea76c8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1cb99ea7f80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1cb99ea7e40 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1cb99ea7e18 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1cb99ea7dd8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1cb99ea7f98 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1cb99ea7e60 <col:59> 'va_list':'char *' lvalue Var 0x1cb99ea7898 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1cb99ead350 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1cb99ead338 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1cb99ead288 <col:34> '<builtin fn type>' Function 0x1cb99ead120 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1cb99ead2c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1cb99ea7898 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1cb99ead3b0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1cb99ead398 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1cb99ead378 <col:12> 'int' lvalue Var 0x1cb99ea7930 '_Ret' 'int'
|-FunctionDecl 0x1cb99ea7a88 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1cb99ea7b28 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1cb99ea7b98 <col:34> Implicit
|-FunctionDecl 0x1cb99ead120 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1cb99ead1c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1cb99ead230 <col:34> Implicit
|-FunctionDecl 0x1cb99ead6b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1cb99ead410 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1cb99ead488 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ead500 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ead578 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1cb99ead9a0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1cb99ead990 <line:51:5, col:62>
|     `-CallExpr 0x1cb99ead8d0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1cb99ead8b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1cb99ead790 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1cb99ea0f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1cb99ead918 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1cb99ead7b0 <col:27> 'wchar_t *' lvalue ParmVar 0x1cb99ead410 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1cb99ead930 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1cb99ead7d0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1cb99ead488 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1cb99ead948 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1cb99ead7f0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1cb99ead500 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1cb99ead960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1cb99ead878 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1cb99ead850 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1cb99ead810 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1cb99ead978 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1cb99ead898 <col:59> 'va_list':'char *' lvalue ParmVar 0x1cb99ead578 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1cb99eadc40 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1cb99ead9c8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1cb99eada40 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99eadab8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eadb30 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1cb99ea9188 <line:61:1, line:68:1>
|   |-DeclStmt 0x1cb99eadd90 <line:62:5, col:21>
|   | `-VarDecl 0x1cb99eadd28 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1cb99eade28 <line:63:5, col:13>
|   | `-VarDecl 0x1cb99eaddc0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1cb99eaded0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1cb99eadeb8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1cb99eade40 <col:34> '<builtin fn type>' Function 0x1cb99ea7a88 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1cb99eade60 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1cb99eadd28 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1cb99eade98 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1cb99eadb30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1cb99eae0d0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1cb99eadf00 <col:5> 'int' lvalue Var 0x1cb99eaddc0 '_Ret' 'int'
|   | `-CallExpr 0x1cb99eae010 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1cb99eadff8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1cb99eadf38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1cb99ea0f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1cb99eae058 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1cb99eadf58 <col:27> 'wchar_t *' lvalue ParmVar 0x1cb99ead9c8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1cb99eae070 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1cb99eadf78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1cb99eada40 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1cb99eae088 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1cb99eadf98 <col:44> 'const wchar_t *' lvalue ParmVar 0x1cb99eadab8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1cb99eae0a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1cb99eadfb8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1cb99eadb30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1cb99eae0b8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1cb99eadfd8 <col:64> 'va_list':'char *' lvalue Var 0x1cb99eadd28 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1cb99ea9118 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1cb99ea9100 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1cb99eae0f0 <col:34> '<builtin fn type>' Function 0x1cb99ead120 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1cb99ea90e0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1cb99eadd28 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1cb99ea9178 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1cb99ea9160 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1cb99ea9140 <col:12> 'int' lvalue Var 0x1cb99eaddc0 '_Ret' 'int'
|-FunctionDecl 0x1cb99ea9518 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1cb99ea91d8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1cb99ea9250 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99ea92c8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea9340 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1cb99ea93b8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1cb99ea97a0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1cb99ea9790 <line:75:5, col:67>
|     `-CallExpr 0x1cb99ea96d0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1cb99ea96b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1cb99ea95f8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1cb99ea0f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1cb99ea9718 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1cb99ea9618 <col:27> 'wchar_t *' lvalue ParmVar 0x1cb99ea91d8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1cb99ea9730 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1cb99ea9638 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1cb99ea9250 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1cb99ea9748 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1cb99ea9658 <col:44> 'const wchar_t *' lvalue ParmVar 0x1cb99ea92c8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1cb99ea9760 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1cb99ea9678 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1cb99ea9340 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1cb99ea9778 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1cb99ea9698 <col:64> 'va_list':'char *' lvalue ParmVar 0x1cb99ea93b8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1cb99ea99e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cb99ea97c8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea9840 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1cb99ea9c38 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1cb99ea9ac0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea9b38 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea9f20 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1cb99ea9d10 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea9d88 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1cb99ea9e00 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1cb99ea8248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99ea80d0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1cb99ea8148 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1cb99ea82f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99ea8708 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea84f8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1cb99ea8570 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea85e8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cb99ea87c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99ea8a78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99ea8900 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1cb99ea8978 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99ea8d60 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99ea8b50 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1cb99ea8bc8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99ea8c40 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99eb01c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99ea8f00 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1cb99ea8f78 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1cb99eb0270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99eb0748 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99eb0470 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eb04e8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eb0560 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cb99eb0800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99eb0ab8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99eb0940 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1cb99eb09b8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99eb0da0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99eb0b90 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eb0c08 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99eb0c80 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99eaf228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99eb0f40 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eb0fb8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99eb1030 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1cb99eaf2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99eaf860 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99eaf4e0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eaf558 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99eaf5d0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eaf648 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cb99eaf920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99eafc70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99eafa60 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eafad8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99eafb50 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99eafff8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99eafd50 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eafdc8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99eafe40 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99eafeb8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99eac2c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1cb99eac1e0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1cb99eac368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99eac6e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99eac568 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eac5e0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1cb99eac790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99eac9b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1cb99eac8d0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1cb99eacbf8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1cb99eaca80 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1cb99eacaf8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1cb99eacef8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1cb99eaccd8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1cb99eacd50 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1cb99eb1308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cb99ead090 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eb1160 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1cb99eb13b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99eb17c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cb99eb1500 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1cb99eb1578 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1cb99eb15f0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1cb99eb1c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1cb99eb1960 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eb19d8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eb1a50 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1cb99eb1cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99eb51e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1cb99eb1e20 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1cb99eb1e98 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1cb99eb1f10 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1cb99eb1f88 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1cb99eb5440 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1cb99eb52d0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1cb99eb5680 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1cb99eb5510 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1cb99eb5588 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1cb99eb5838 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1cb99eb5758 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1cb99eb5b28 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1cb99eb5908 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1cb99eb5980 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1cb99eb5d98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1cb99eb5cc0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1cb99eb5e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1cb99eb6058 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1cb99eb5f80 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1cb99eb4288 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1cb99eb6128 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1cb99eb4190 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1cb99eb44d0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1cb99eb4360 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1cb99eb43d8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1cb99eb4680 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1cb99eb45a8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1cb99eb4828 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1cb99eb4750 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1cb99eb49d8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99eb48f8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1cb99eb4b88 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1cb99eb4aa8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1cb99eb4f00 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1cb99eb4c60 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1cb99eb4cd8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99eb4d50 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99eb4dc8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1cb99eb2340 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1cb99eb4ff0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1cb99eb5068 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99eb50e0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99eb2170 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99eb21e8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1cb99eb2650 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1cb99eb2430 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1cb99eb24b0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1cb99eb2530 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1cb99eb2810 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1cb99eb2730 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1cb99eb2b00 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1cb99eb28e0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1cb99eb2960 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1cb99eb29e0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1cb99eb2cc0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1cb99eb2be0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1cb99eb3038 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1cb99eb2d98 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1cb99eb2e10 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1cb99eb2e88 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1cb99eb2f00 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1cb99eae2a8 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1cb99eae130 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1cb99eae1a8 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1cb99eae5e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1cb99eae460 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1cb99eae4e0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1cb99eae690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1cb99eae948 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1cb99eae9e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1cb99eaed28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1cb99eaebb0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1cb99eaec30 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1cb99eaedd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1cb99ebb200 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1cb99ebb2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1cb99ebb540 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1cb99ebb460 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1cb99ebb5e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1cb99ebb868 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1cb99ebb908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1cb99ebbbb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1cb99ebbad0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1cb99ebbc58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1cb99ebbf38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1cb99ebbe58 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1cb99ebbfe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1cb99eb6328 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1cb99eb61b0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1cb99eb6228 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1cb99eb63d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1cb99eb6698 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1cb99eb6738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1cb99eb6b60 <.//openssl//file_jk/after\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1cb99eb69c0 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x1cb99eb6a40 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x1cb99eb6f30 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1cb99eb6d90 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x1cb99eb6e10 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x1cb99eb6fe0 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x1cb99eb70b8 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x1cb99eb7128 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x1cb99ec5da0 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x1cb99ec5e10 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x1cb99ec5e80 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x1cb99ec5ef0 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x1cb99ec5f60 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x1cb99ec5fd0 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x1cb99ec6078 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x1cb99ec6248 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x1cb99ec62b8 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x1cb99ec6310 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x1cb99ec6428 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x1cb99ec63d0 'struct mime_param_st' sugar
|   `-RecordType 0x1cb99ec63b0 'struct mime_param_st'
|     `-Record 0x1cb99ec6310 'mime_param_st'
|-FunctionDecl 0x1cb99ec65d0 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x1cb99ec64d0 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x1cb99ec6690 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x1cb99ec67a8 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x1cb99ec6750 'struct mime_header_st' sugar
|   `-RecordType 0x1cb99ec6730 'struct mime_header_st'
|     `-Record 0x1cb99ec6690 'mime_header_st'
|-FunctionDecl 0x1cb99ec6950 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x1cb99ec6850 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x1cb99ec6aa0 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x1cb99ec6c88 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x1cb99ec6b38 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1cb99ec6bb8 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x1cb99ec3ee0 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x1cb99ec3d80 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x1cb99ec3e00 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x1cb99ec41a0 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1cb99ec3fb0 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x1cb99ec4030 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x1cb99ec40b0 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x1cb99ec43d8 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x1cb99ec4278 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x1cb99ec42f8 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x1cb99ec4690 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x1cb99ec44a8 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x1cb99ec4528 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x1cb99ec45a8 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x1cb99ec4910 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1cb99ec4768 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x1cb99ec47e8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x1cb99ec4868 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x1cb99ec4b38 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x1cb99ec49e8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1cb99ec4a68 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1cb99ec2d70 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1cb99ec4c08 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1cb99ec4c88 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1cb99ec3120 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x1cb99ec2e38 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x1cb99ec2f18 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x1cb99ec2fa0 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x1cb99ec3020 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x1cb99ec3480 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x1cb99ec3200 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x1cb99ec3280 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x1cb99ec3300 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x1cb99ec3380 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x1cb99ec3748 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1cb99ec3560 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x1cb99ec35e0 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x1cb99ec3660 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x1cb99ec39c0 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1cb99ec3820 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x1cb99ec38a0 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x1cb99ec3920 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x1cb99ec3bb0 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1cb99ec3a98 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x1cb99ec3b18 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x1cb99ec7f30 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1cb99ec3c80 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x1cb99ec7dc0 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x1cb99ec7e40 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x1cb99ec8160 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1cb99ec8000 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1cb99ec8088 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x1cb99ec83e0 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1cb99ec8230 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x1cb99ec82b8 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x1cb99ec8338 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x1cb99ec85d8 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1cb99ec84b0 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x1cb99ec8538 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x1cb99ec8858 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1cb99ec86a8 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x1cb99ec8730 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x1cb99ec87b0 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x1cb99ec8bb0 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x1cb99ec8928 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x1cb99ec89a8 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x1cb99ec8a30 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x1cb99ec8ab0 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x1cb99ec4e80 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x1cb99ec8c88 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x1cb99ec8d08 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x1cb99ec4d90 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x1cb99ec5260 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:16:1, line:17:36> line:16:12 used asn1_get_length 'int (const unsigned char **, int *, long *, long)' static
| |-ParmVarDecl 0x1cb99ec4f58 <col:28, col:50> col:50 pp 'const unsigned char **'
| |-ParmVarDecl 0x1cb99ec4fd8 <col:54, col:59> col:59 inf 'int *'
| |-ParmVarDecl 0x1cb99ec5080 <col:64, col:70> col:70 rl 'long *'
| `-ParmVarDecl 0x1cb99ec5100 <line:17:28, col:33> col:33 max 'long'
|-FunctionDecl 0x1cb99ec54d8 <line:18:1, col:59> col:13 used asn1_put_length 'void (unsigned char **, int)' static
| |-ParmVarDecl 0x1cb99ec5358 <col:29, col:45> col:45 pp 'unsigned char **'
| `-ParmVarDecl 0x1cb99ec53d8 <col:49, col:53> col:53 length 'int'
|-FunctionDecl 0x1cb99ec5750 <line:20:1, line:32:1> line:20:12 used _asn1_check_infinite_end 'int (const unsigned char **, long)' static
| |-ParmVarDecl 0x1cb99ec55c0 <col:37, col:59> col:59 used p 'const unsigned char **'
| |-ParmVarDecl 0x1cb99ec5640 <col:62, col:67> col:67 used len 'long'
| `-CompoundStmt 0x1cb99ec0e90 <line:21:1, line:32:1>
|   |-IfStmt 0x1cb99ec0e10 <line:25:5, line:30:5> has_else
|   | |-BinaryOperator 0x1cb99ec5890 <line:25:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x1cb99ec5860 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1cb99ec5818 <col:9> 'long' lvalue ParmVar 0x1cb99ec5640 'len' 'long'
|   | | `-ImplicitCastExpr 0x1cb99ec5878 <col:16> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1cb99ec5838 <col:16> 'int' 0
|   | |-ReturnStmt 0x1cb99ec58f8 <line:26:9, col:18>
|   | | `-ParenExpr 0x1cb99ec58d8 <col:16, col:18> 'int'
|   | |   `-IntegerLiteral 0x1cb99ec58b0 <col:17> 'int' 1
|   | `-IfStmt 0x1cb99ec0df8 <line:27:10, line:30:5>
|   |   |-BinaryOperator 0x1cb99ec5cd8 <line:27:14, col:59> 'int' '&&'
|   |   | |-BinaryOperator 0x1cb99ec5b50 <col:14, col:41> 'int' '&&'
|   |   | | |-ParenExpr 0x1cb99ec59a0 <col:14, col:23> 'int'
|   |   | | | `-BinaryOperator 0x1cb99ec5980 <col:15, col:22> 'int' '>='
|   |   | | |   |-ImplicitCastExpr 0x1cb99ec5950 <col:15> 'long' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1cb99ec5908 <col:15> 'long' lvalue ParmVar 0x1cb99ec5640 'len' 'long'
|   |   | | |   `-ImplicitCastExpr 0x1cb99ec5968 <col:22> 'long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x1cb99ec5928 <col:22> 'int' 2
|   |   | | `-ParenExpr 0x1cb99ec5b30 <col:28, col:41> 'int'
|   |   | |   `-BinaryOperator 0x1cb99ec5b10 <col:29, col:40> 'int' '=='
|   |   | |     |-ImplicitCastExpr 0x1cb99ec5af8 <col:29, col:35> 'int' <IntegralCast>
|   |   | |     | `-ImplicitCastExpr 0x1cb99ec5ae0 <col:29, col:35> 'unsigned char' <LValueToRValue>
|   |   | |     |   `-ArraySubscriptExpr 0x1cb99ec5a98 <col:29, col:35> 'const unsigned char' lvalue
|   |   | |     |     |-ImplicitCastExpr 0x1cb99ec5a80 <col:29, col:32> 'const unsigned char *' <LValueToRValue>
|   |   | |     |     | `-ParenExpr 0x1cb99ec5a38 <col:29, col:32> 'const unsigned char *' lvalue
|   |   | |     |     |   `-UnaryOperator 0x1cb99ec5a20 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | |     |     |     `-ImplicitCastExpr 0x1cb99ec5a08 <col:31> 'const unsigned char **' <LValueToRValue>
|   |   | |     |     |       `-DeclRefExpr 0x1cb99ec59e8 <col:31> 'const unsigned char **' lvalue ParmVar 0x1cb99ec55c0 'p' 'const unsigned char **'
|   |   | |     |     `-IntegerLiteral 0x1cb99ec5a58 <col:34> 'int' 0
|   |   | |     `-IntegerLiteral 0x1cb99ec5ab8 <col:40> 'int' 0
|   |   | `-ParenExpr 0x1cb99ec5cb8 <col:46, col:59> 'int'
|   |   |   `-BinaryOperator 0x1cb99ec5c98 <col:47, col:58> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x1cb99ec5c80 <col:47, col:53> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x1cb99ec5c68 <col:47, col:53> 'unsigned char' <LValueToRValue>
|   |   |     |   `-ArraySubscriptExpr 0x1cb99ec5c20 <col:47, col:53> 'const unsigned char' lvalue
|   |   |     |     |-ImplicitCastExpr 0x1cb99ec5c08 <col:47, col:50> 'const unsigned char *' <LValueToRValue>
|   |   |     |     | `-ParenExpr 0x1cb99ec5bc0 <col:47, col:50> 'const unsigned char *' lvalue
|   |   |     |     |   `-UnaryOperator 0x1cb99ec5ba8 <col:48, col:49> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   |     |     |     `-ImplicitCastExpr 0x1cb99ec5b90 <col:49> 'const unsigned char **' <LValueToRValue>
|   |   |     |     |       `-DeclRefExpr 0x1cb99ec5b70 <col:49> 'const unsigned char **' lvalue ParmVar 0x1cb99ec55c0 'p' 'const unsigned char **'
|   |   |     |     `-IntegerLiteral 0x1cb99ec5be0 <col:52> 'int' 1
|   |   |     `-IntegerLiteral 0x1cb99ec5c40 <col:58> 'int' 0
|   |   `-CompoundStmt 0x1cb99ec0dd8 <col:62, line:30:5>
|   |     |-CompoundAssignOperator 0x1cb99ec0d50 <line:28:9, col:17> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |     | |-ParenExpr 0x1cb99ec5d48 <col:9, col:12> 'const unsigned char *' lvalue
|   |     | | `-UnaryOperator 0x1cb99ec5d30 <col:10, col:11> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     | |   `-ImplicitCastExpr 0x1cb99ec5d18 <col:11> 'const unsigned char **' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x1cb99ec5cf8 <col:11> 'const unsigned char **' lvalue ParmVar 0x1cb99ec55c0 'p' 'const unsigned char **'
|   |     | `-IntegerLiteral 0x1cb99ec5d68 <col:17> 'int' 2
|   |     `-ReturnStmt 0x1cb99ec0dc8 <line:29:9, col:18>
|   |       `-ParenExpr 0x1cb99ec0da8 <col:16, col:18> 'int'
|   |         `-IntegerLiteral 0x1cb99ec0d80 <col:17> 'int' 1
|   `-ReturnStmt 0x1cb99ec0e80 <line:31:5, col:14>
|     `-ParenExpr 0x1cb99ec0e60 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1cb99ec0e38 <col:13> 'int' 0
|-FunctionDecl 0x1cb99ec1060 <line:34:1, line:37:1> line:34:5 ASN1_check_infinite_end 'int (unsigned char **, long)'
| |-ParmVarDecl 0x1cb99ec0ed0 <col:29, col:45> col:45 used p 'unsigned char **'
| |-ParmVarDecl 0x1cb99ec0f50 <col:48, col:53> col:53 used len 'long'
| `-CompoundStmt 0x1cb99ec1288 <line:35:1, line:37:1>
|   `-ReturnStmt 0x1cb99ec1278 <line:36:5, col:67>
|     `-CallExpr 0x1cb99ec1230 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1cb99ec1218 <col:12> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1cb99ec1128 <col:12> 'int (const unsigned char **, long)' Function 0x1cb99ec5750 '_asn1_check_infinite_end' 'int (const unsigned char **, long)'
|       |-CStyleCastExpr 0x1cb99ec11a0 <col:37, col:61> 'const unsigned char **' <NoOp>
|       | `-ImplicitCastExpr 0x1cb99ec1188 <col:61> 'unsigned char **' <LValueToRValue> part_of_explicit_cast
|       |   `-DeclRefExpr 0x1cb99ec1148 <col:61> 'unsigned char **' lvalue ParmVar 0x1cb99ec0ed0 'p' 'unsigned char **'
|       `-ImplicitCastExpr 0x1cb99ec1260 <col:64> 'long' <LValueToRValue>
|         `-DeclRefExpr 0x1cb99ec11c8 <col:64> 'long' lvalue ParmVar 0x1cb99ec0f50 'len' 'long'
|-FunctionDecl 0x1cb99ec1410 <line:39:1, line:42:1> line:39:5 ASN1_const_check_infinite_end 'int (const unsigned char **, long)'
| |-ParmVarDecl 0x1cb99ec12c0 <col:35, col:57> col:57 used p 'const unsigned char **'
| |-ParmVarDecl 0x1cb99ec1340 <col:60, col:65> col:65 used len 'long'
| `-CompoundStmt 0x1cb99ec15c0 <line:40:1, line:42:1>
|   `-ReturnStmt 0x1cb99ec15b0 <line:41:5, col:43>
|     `-CallExpr 0x1cb99ec1550 <col:12, col:43> 'int'
|       |-ImplicitCastExpr 0x1cb99ec1538 <col:12> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1cb99ec14d8 <col:12> 'int (const unsigned char **, long)' Function 0x1cb99ec5750 '_asn1_check_infinite_end' 'int (const unsigned char **, long)'
|       |-ImplicitCastExpr 0x1cb99ec1580 <col:37> 'const unsigned char **' <LValueToRValue>
|       | `-DeclRefExpr 0x1cb99ec14f8 <col:37> 'const unsigned char **' lvalue ParmVar 0x1cb99ec12c0 'p' 'const unsigned char **'
|       `-ImplicitCastExpr 0x1cb99ec1598 <col:40> 'long' <LValueToRValue>
|         `-DeclRefExpr 0x1cb99ec1518 <col:40> 'long' lvalue ParmVar 0x1cb99ec1340 'len' 'long'
|-FunctionDecl 0x1cb99ec1980 <line:44:1, line:103:1> line:44:5 ASN1_get_object 'int (const unsigned char **, long *, int *, int *, long)'
| |-ParmVarDecl 0x1cb99ec15f8 <col:21, col:43> col:43 used pp 'const unsigned char **'
| |-ParmVarDecl 0x1cb99ec1678 <col:47, col:53> col:53 used plength 'long *'
| |-ParmVarDecl 0x1cb99ec16f8 <col:62, col:67> col:67 used ptag 'int *'
| |-ParmVarDecl 0x1cb99ec1778 <line:45:21, col:26> col:26 used pclass 'int *'
| |-ParmVarDecl 0x1cb99ec17f8 <col:34, col:39> col:39 used omax 'long'
| `-CompoundStmt 0x1cb99ec2870 <line:46:1, line:103:1>
|   |-DeclStmt 0x1cb99ec1b78 <line:47:5, col:15>
|   | |-VarDecl 0x1cb99ec1a78 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1cb99ec1af8 <col:5, col:12> col:12 used ret 'int'
|   |-DeclStmt 0x1cb99ec1c10 <line:48:5, col:11>
|   | `-VarDecl 0x1cb99ec1ba8 <col:5, col:10> col:10 used l 'long'
|   |-DeclStmt 0x1cb99ec1d10 <line:49:5, col:33>
|   | `-VarDecl 0x1cb99ec1c40 <col:5, col:31> col:26 used p 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1cb99ec1cf8 <col:30, col:31> 'const unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x1cb99ec1ce0 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1cb99ec1cc8 <col:31> 'const unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x1cb99ec1ca8 <col:31> 'const unsigned char **' lvalue ParmVar 0x1cb99ec15f8 'pp' 'const unsigned char **'
|   |-DeclStmt 0x1cb99ec8f58 <line:50:5, col:25>
|   | |-VarDecl 0x1cb99ec8dd0 <col:5, col:9> col:9 used tag 'int'
|   | |-VarDecl 0x1cb99ec8e50 <col:5, col:14> col:14 used xclass 'int'
|   | `-VarDecl 0x1cb99ec8ed0 <col:5, col:22> col:22 used inf 'int'
|   |-DeclStmt 0x1cb99ec9028 <line:51:5, col:20>
|   | `-VarDecl 0x1cb99ec8f88 <col:5, col:16> col:10 used max 'long' cinit
|   |   `-ImplicitCastExpr 0x1cb99ec9010 <col:16> 'long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1cb99ec8ff0 <col:16> 'long' lvalue ParmVar 0x1cb99ec17f8 'omax' 'long'
|   |-IfStmt 0x1cb99ec9110 <line:53:5, line:54:14>
|   | |-UnaryOperator 0x1cb99ec9090 <line:53:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x1cb99ec9078 <col:10> 'long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1cb99ec9040 <col:10> 'long' lvalue Var 0x1cb99ec8f88 'max' 'long'
|   | `-GotoStmt 0x1cb99ec90f8 <line:54:9, col:14> 'err' 0x1cb99ec90a8
|   |-IfStmt 0x1cb99ec1ea0 <line:58:5, line:81:5> has_else
|   | |-OpaqueValueExpr 0x1cb99ec1e88 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1cb99ec9cf0 <line:58:36, line:76:5>
|   | | |-UnaryOperator 0x1cb99ec9318 <line:59:9, col:10> 'const unsigned char *' postfix '++'
|   | | | `-DeclRefExpr 0x1cb99ec92f8 <col:9> 'const unsigned char *' lvalue Var 0x1cb99ec1c40 'p' 'const unsigned char *'
|   | | |-IfStmt 0x1cb99ec93e0 <line:60:9, line:61:18>
|   | | | |-BinaryOperator 0x1cb99ec93a8 <line:60:13, col:22> 'int' '=='
|   | | | | |-UnaryOperator 0x1cb99ec9350 <col:13, col:15> 'long' prefix '--'
|   | | | | | `-DeclRefExpr 0x1cb99ec9330 <col:15> 'long' lvalue Var 0x1cb99ec8f88 'max' 'long'
|   | | | | `-ImplicitCastExpr 0x1cb99ec9390 <col:22> 'long' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x1cb99ec9368 <col:22> 'int' 0
|   | | | `-GotoStmt 0x1cb99ec93c8 <line:61:13, col:18> 'err' 0x1cb99ec90a8
|   | | |-BinaryOperator 0x1cb99ec9470 <line:62:9, col:13> 'long' '='
|   | | | |-DeclRefExpr 0x1cb99ec93f8 <col:9> 'long' lvalue Var 0x1cb99ec1ba8 'l' 'long'
|   | | | `-ImplicitCastExpr 0x1cb99ec9458 <col:13> 'long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1cb99ec9430 <col:13> 'int' 0
|   | | |-WhileStmt 0x1cb99ec9960 <line:63:9, line:70:9>
|   | | | |-BinaryOperator 0x1cb99ec9538 <line:63:16, col:21> 'int' '&'
|   | | | | |-ImplicitCastExpr 0x1cb99ec9520 <col:16, col:17> 'int' <IntegralCast>
|   | | | | | `-ImplicitCastExpr 0x1cb99ec9508 <col:16, col:17> 'unsigned char' <LValueToRValue>
|   | | | | |   `-UnaryOperator 0x1cb99ec94c8 <col:16, col:17> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | | | |     `-ImplicitCastExpr 0x1cb99ec94b0 <col:17> 'const unsigned char *' <LValueToRValue>
|   | | | | |       `-DeclRefExpr 0x1cb99ec9490 <col:17> 'const unsigned char *' lvalue Var 0x1cb99ec1c40 'p' 'const unsigned char *'
|   | | | | `-IntegerLiteral 0x1cb99ec94e0 <col:21> 'int' 128
|   | | | `-CompoundStmt 0x1cb99ec9930 <col:27, line:70:9>
|   | | |   |-CompoundAssignOperator 0x1cb99ec95b8 <line:64:13, col:19> 'long' '<<=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   | |-DeclRefExpr 0x1cb99ec9558 <col:13> 'long' lvalue Var 0x1cb99ec1ba8 'l' 'long'
|   | | |   | `-IntegerLiteral 0x1cb99ec9578 <col:19> 'long' 7
|   | | |   |-CompoundAssignOperator 0x1cb99ec9708 <line:65:13, col:27> 'long' '|=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | |   | |-DeclRefExpr 0x1cb99ec95e8 <col:13> 'long' lvalue Var 0x1cb99ec1ba8 'l' 'long'
|   | | |   | `-ImplicitCastExpr 0x1cb99ec96f0 <col:18, col:27> 'long' <IntegralCast>
|   | | |   |   `-BinaryOperator 0x1cb99ec96d0 <col:18, col:27> 'int' '&'
|   | | |   |     |-ImplicitCastExpr 0x1cb99ec96b8 <col:18, col:23> 'int' <IntegralCast>
|   | | |   |     | `-ImplicitCastExpr 0x1cb99ec96a0 <col:18, col:23> 'unsigned char' <LValueToRValue>
|   | | |   |     |   `-UnaryOperator 0x1cb99ec9660 <col:18, col:23> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |   |     |     `-ParenExpr 0x1cb99ec9640 <col:19, col:23> 'const unsigned char *'
|   | | |   |     |       `-UnaryOperator 0x1cb99ec9628 <col:20, col:21> 'const unsigned char *' postfix '++'
|   | | |   |     |         `-DeclRefExpr 0x1cb99ec9608 <col:20> 'const unsigned char *' lvalue Var 0x1cb99ec1c40 'p' 'const unsigned char *'
|   | | |   |     `-IntegerLiteral 0x1cb99ec9678 <col:27> 'int' 127
|   | | |   |-IfStmt 0x1cb99ec97e8 <line:66:13, line:67:22>
|   | | |   | |-BinaryOperator 0x1cb99ec97b0 <line:66:17, col:26> 'int' '=='
|   | | |   | | |-UnaryOperator 0x1cb99ec9758 <col:17, col:19> 'long' prefix '--'
|   | | |   | | | `-DeclRefExpr 0x1cb99ec9738 <col:19> 'long' lvalue Var 0x1cb99ec8f88 'max' 'long'
|   | | |   | | `-ImplicitCastExpr 0x1cb99ec9798 <col:26> 'long' <IntegralCast>
|   | | |   | |   `-IntegerLiteral 0x1cb99ec9770 <col:26> 'int' 0
|   | | |   | `-GotoStmt 0x1cb99ec97d0 <line:67:17, col:22> 'err' 0x1cb99ec90a8
|   | | |   `-IfStmt 0x1cb99ec9918 <line:68:13, line:69:22>
|   | | |     |-BinaryOperator 0x1cb99ec98e0 <line:68:17, col:35> 'int' '>'
|   | | |     | |-ImplicitCastExpr 0x1cb99ec98b0 <col:17> 'long' <LValueToRValue>
|   | | |     | | `-DeclRefExpr 0x1cb99ec9800 <col:17> 'long' lvalue Var 0x1cb99ec1ba8 'l' 'long'
|   | | |     | `-ImplicitCastExpr 0x1cb99ec98c8 <col:21, col:35> 'long' <IntegralCast>
|   | | |     |   `-ParenExpr 0x1cb99ec9890 <col:21, col:35> 'int'
|   | | |     |     `-BinaryOperator 0x1cb99ec9870 <<built-in>:30:21, .//openssl//file_jk/after\crypto\asn1\asn1_lib.c:68:33> 'int' '>>'
|   | | |     |       |-IntegerLiteral 0x1cb99ec9820 <<built-in>:30:21> 'int' 2147483647
|   | | |     |       `-IntegerLiteral 0x1cb99ec9848 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:68:33> 'long' 7
|   | | |     `-GotoStmt 0x1cb99ec9900 <line:69:17, col:22> 'err' 0x1cb99ec90a8
|   | | |-CompoundAssignOperator 0x1cb99ec99d8 <line:71:9, col:15> 'long' '<<=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |-DeclRefExpr 0x1cb99ec9978 <col:9> 'long' lvalue Var 0x1cb99ec1ba8 'l' 'long'
|   | | | `-IntegerLiteral 0x1cb99ec9998 <col:15> 'long' 7
|   | | |-CompoundAssignOperator 0x1cb99ec9b28 <line:72:9, col:23> 'long' '|=' ComputeLHSTy='long' ComputeResultTy='long'
|   | | | |-DeclRefExpr 0x1cb99ec9a08 <col:9> 'long' lvalue Var 0x1cb99ec1ba8 'l' 'long'
|   | | | `-ImplicitCastExpr 0x1cb99ec9b10 <col:14, col:23> 'long' <IntegralCast>
|   | | |   `-BinaryOperator 0x1cb99ec9af0 <col:14, col:23> 'int' '&'
|   | | |     |-ImplicitCastExpr 0x1cb99ec9ad8 <col:14, col:19> 'int' <IntegralCast>
|   | | |     | `-ImplicitCastExpr 0x1cb99ec9ac0 <col:14, col:19> 'unsigned char' <LValueToRValue>
|   | | |     |   `-UnaryOperator 0x1cb99ec9a80 <col:14, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |     |     `-ParenExpr 0x1cb99ec9a60 <col:15, col:19> 'const unsigned char *'
|   | | |     |       `-UnaryOperator 0x1cb99ec9a48 <col:16, col:17> 'const unsigned char *' postfix '++'
|   | | |     |         `-DeclRefExpr 0x1cb99ec9a28 <col:16> 'const unsigned char *' lvalue Var 0x1cb99ec1c40 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x1cb99ec9a98 <col:23> 'int' 127
|   | | |-BinaryOperator 0x1cb99ec9c08 <line:73:9, col:20> 'int' '='
|   | | | |-DeclRefExpr 0x1cb99ec9b58 <col:9> 'int' lvalue Var 0x1cb99ec8dd0 'tag' 'int'
|   | | | `-CStyleCastExpr 0x1cb99ec9be0 <col:15, col:20> 'int' <IntegralCast>
|   | | |   `-ImplicitCastExpr 0x1cb99ec9bc8 <col:20> 'long' <LValueToRValue> part_of_explicit_cast
|   | | |     `-DeclRefExpr 0x1cb99ec9b90 <col:20> 'long' lvalue Var 0x1cb99ec1ba8 'l' 'long'
|   | | `-IfStmt 0x1cb99ec9cd8 <line:74:9, line:75:18>
|   | |   |-BinaryOperator 0x1cb99ec9ca0 <line:74:13, col:22> 'int' '=='
|   | |   | |-UnaryOperator 0x1cb99ec9c48 <col:13, col:15> 'long' prefix '--'
|   | |   | | `-DeclRefExpr 0x1cb99ec9c28 <col:15> 'long' lvalue Var 0x1cb99ec8f88 'max' 'long'
|   | |   | `-ImplicitCastExpr 0x1cb99ec9c88 <col:22> 'long' <IntegralCast>
|   | |   |   `-IntegerLiteral 0x1cb99ec9c60 <col:22> 'int' 0
|   | |   `-GotoStmt 0x1cb99ec9cc0 <line:75:13, col:18> 'err' 0x1cb99ec90a8
|   | `-CompoundStmt 0x1cb99ec1e60 <line:76:12, line:81:5>
|   |   |-BinaryOperator 0x1cb99ec9d98 <line:77:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1cb99ec9d40 <col:9> 'int' lvalue Var 0x1cb99ec8dd0 'tag' 'int'
|   |   | `-ImplicitCastExpr 0x1cb99ec9d80 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1cb99ec9d60 <col:15> 'int' lvalue Var 0x1cb99ec1a78 'i' 'int'
|   |   |-UnaryOperator 0x1cb99ec1d80 <line:78:9, col:10> 'const unsigned char *' postfix '++'
|   |   | `-DeclRefExpr 0x1cb99ec1d60 <col:9> 'const unsigned char *' lvalue Var 0x1cb99ec1c40 'p' 'const unsigned char *'
|   |   `-IfStmt 0x1cb99ec1e48 <line:79:9, line:80:18>
|   |     |-BinaryOperator 0x1cb99ec1e10 <line:79:13, col:22> 'int' '=='
|   |     | |-UnaryOperator 0x1cb99ec1db8 <col:13, col:15> 'long' prefix '--'
|   |     | | `-DeclRefExpr 0x1cb99ec1d98 <col:15> 'long' lvalue Var 0x1cb99ec8f88 'max' 'long'
|   |     | `-ImplicitCastExpr 0x1cb99ec1df8 <col:22> 'long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1cb99ec1dd0 <col:22> 'int' 0
|   |     `-GotoStmt 0x1cb99ec1e30 <line:80:13, col:18> 'err' 0x1cb99ec90a8
|   |-BinaryOperator 0x1cb99ec1f50 <line:82:5, col:13> 'int' '='
|   | |-UnaryOperator 0x1cb99ec1f00 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1cb99ec1ee8 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1cb99ec1ec8 <col:6> 'int *' lvalue ParmVar 0x1cb99ec16f8 'ptag' 'int *'
|   | `-ImplicitCastExpr 0x1cb99ec1f38 <col:13> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1cb99ec1f18 <col:13> 'int' lvalue Var 0x1cb99ec8dd0 'tag' 'int'
|   |-BinaryOperator 0x1cb99ec1ff8 <line:83:5, col:15> 'int' '='
|   | |-UnaryOperator 0x1cb99ec1fa8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1cb99ec1f90 <col:6> 'int *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1cb99ec1f70 <col:6> 'int *' lvalue ParmVar 0x1cb99ec1778 'pclass' 'int *'
|   | `-ImplicitCastExpr 0x1cb99ec1fe0 <col:15> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1cb99ec1fc0 <col:15> 'int' lvalue Var 0x1cb99ec8e50 'xclass' 'int'
|   |-IfStmt 0x1cb99ec21e0 <line:84:5, line:85:14>
|   | |-UnaryOperator 0x1cb99ec21b0 <line:84:9, col:48> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1cb99ec2140 <col:10, col:48> 'int'
|   | |   |-ImplicitCastExpr 0x1cb99ec2128 <col:10> 'int (*)(const unsigned char **, int *, long *, long)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1cb99ec2018 <col:10> 'int (const unsigned char **, int *, long *, long)' Function 0x1cb99ec5260 'asn1_get_length' 'int (const unsigned char **, int *, long *, long)'
|   | |   |-UnaryOperator 0x1cb99ec2058 <col:26, col:27> 'const unsigned char **' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1cb99ec2038 <col:27> 'const unsigned char *' lvalue Var 0x1cb99ec1c40 'p' 'const unsigned char *'
|   | |   |-UnaryOperator 0x1cb99ec20a8 <col:30, col:31> 'int *' prefix '&' cannot overflow
|   | |   | `-DeclRefExpr 0x1cb99ec2070 <col:31> 'int' lvalue Var 0x1cb99ec8ed0 'inf' 'int'
|   | |   |-ImplicitCastExpr 0x1cb99ec2180 <col:36> 'long *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1cb99ec20c0 <col:36> 'long *' lvalue ParmVar 0x1cb99ec1678 'plength' 'long *'
|   | |   `-ImplicitCastExpr 0x1cb99ec2198 <col:45> 'long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1cb99ec20e0 <col:45> 'long' lvalue Var 0x1cb99ec8f88 'max' 'long'
|   | `-GotoStmt 0x1cb99ec21c8 <line:85:9, col:14> 'err' 0x1cb99ec90a8
|   |-IfStmt 0x1cb99ec2268 <line:87:5, line:88:14>
|   | |-OpaqueValueExpr 0x1cb99ec2250 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1cb99ec2238 <col:9, col:14> 'err' 0x1cb99ec90a8
|   |-IfStmt 0x1cb99ec2658 <line:90:5, line:97:5>
|   | |-BinaryOperator 0x1cb99ec2470 <line:90:9, col:37> 'int' '>'
|   | | |-ImplicitCastExpr 0x1cb99ec2458 <col:9, col:10> 'long long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1cb99ec2440 <col:9, col:10> 'long' <LValueToRValue>
|   | | |   `-UnaryOperator 0x1cb99ec22b8 <col:9, col:10> 'long' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x1cb99ec22a0 <col:10> 'long *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1cb99ec2280 <col:10> 'long *' lvalue ParmVar 0x1cb99ec1678 'plength' 'long *'
|   | | `-ParenExpr 0x1cb99ec2420 <col:20, col:37> 'long long'
|   | |   `-BinaryOperator 0x1cb99ec2400 <col:21, col:36> 'long long' '-'
|   | |     |-ImplicitCastExpr 0x1cb99ec23e8 <col:21> 'long long' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x1cb99ec23d0 <col:21> 'long' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1cb99ec22d0 <col:21> 'long' lvalue ParmVar 0x1cb99ec17f8 'omax' 'long'
|   | |     `-ParenExpr 0x1cb99ec23b0 <col:28, col:36> 'long long'
|   | |       `-BinaryOperator 0x1cb99ec2390 <col:29, col:34> 'long long' '-'
|   | |         |-ImplicitCastExpr 0x1cb99ec2360 <col:29> 'const unsigned char *' <LValueToRValue>
|   | |         | `-DeclRefExpr 0x1cb99ec22f0 <col:29> 'const unsigned char *' lvalue Var 0x1cb99ec1c40 'p' 'const unsigned char *'
|   | |         `-ImplicitCastExpr 0x1cb99ec2378 <col:33, col:34> 'const unsigned char *' <LValueToRValue>
|   | |           `-UnaryOperator 0x1cb99ec2348 <col:33, col:34> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | |             `-ImplicitCastExpr 0x1cb99ec2330 <col:34> 'const unsigned char **' <LValueToRValue>
|   | |               `-DeclRefExpr 0x1cb99ec2310 <col:34> 'const unsigned char **' lvalue ParmVar 0x1cb99ec15f8 'pp' 'const unsigned char **'
|   | `-CompoundStmt 0x1cb99ec2640 <col:40, line:97:5>
|   |   `-CompoundAssignOperator 0x1cb99ec2610 <line:96:9, col:16> 'int' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1cb99ec25c8 <col:9> 'int' lvalue Var 0x1cb99ec1af8 'ret' 'int'
|   |     `-IntegerLiteral 0x1cb99ec25e8 <col:16> 'int' 128
|   |-BinaryOperator 0x1cb99ec26f8 <line:98:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x1cb99ec26a8 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1cb99ec2690 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1cb99ec2670 <col:6> 'const unsigned char **' lvalue ParmVar 0x1cb99ec15f8 'pp' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x1cb99ec26e0 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1cb99ec26c0 <col:11> 'const unsigned char *' lvalue Var 0x1cb99ec1c40 'p' 'const unsigned char *'
|   |-ReturnStmt 0x1cb99ec27c8 <line:99:5, col:22>
|   | `-ParenExpr 0x1cb99ec27a8 <col:12, col:22> 'int'
|   |   `-BinaryOperator 0x1cb99ec2788 <col:13, col:19> 'int' '|'
|   |     |-ImplicitCastExpr 0x1cb99ec2758 <col:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1cb99ec2718 <col:13> 'int' lvalue Var 0x1cb99ec1af8 'ret' 'int'
|   |     `-ImplicitCastExpr 0x1cb99ec2770 <col:19> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1cb99ec2738 <col:19> 'int' lvalue Var 0x1cb99ec8ed0 'inf' 'int'
|   |-LabelStmt 0x1cb99ec2800 <line:100:2, col:5> 'err'
|   | `-NullStmt 0x1cb99ec27f8 <col:5>
|   `-ReturnStmt 0x1cb99ec2860 <line:102:5, col:17>
|     `-ParenExpr 0x1cb99ec2840 <col:12, col:17> 'int'
|       `-IntegerLiteral 0x1cb99ec2818 <col:13> 'int' 128
|-FunctionDecl 0x1cb99ec2bb0 prev 0x1cb99ec5260 <line:105:1, line:143:1> line:105:12 used asn1_get_length 'int (const unsigned char **, int *, long *, long)' static
| |-ParmVarDecl 0x1cb99ec2920 <col:28, col:50> col:50 used pp 'const unsigned char **'
| |-ParmVarDecl 0x1cb99ec29a0 <col:54, col:59> col:59 used inf 'int *'
| |-ParmVarDecl 0x1cb99ec2a20 <col:64, col:70> col:70 used rl 'long *'
| |-ParmVarDecl 0x1cb99ec2aa0 <line:106:28, col:33> col:33 used max 'long'
| `-CompoundStmt 0x1cb99ece058 <line:107:1, line:143:1>
|   |-DeclStmt 0x1cb99ec9de0 <line:108:5, col:33>
|   | `-VarDecl 0x1cb99ec2c88 <col:5, col:31> col:26 used p 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1cb99ec2d40 <col:30, col:31> 'const unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x1cb99ec2d28 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1cb99ec2d10 <col:31> 'const unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x1cb99ec2cf0 <col:31> 'const unsigned char **' lvalue ParmVar 0x1cb99ec2920 'pp' 'const unsigned char **'
|   |-DeclStmt 0x1cb99ec9eb8 <line:109:5, col:26>
|   | `-VarDecl 0x1cb99ec9e10 <col:5, col:25> col:19 used ret 'unsigned long' cinit
|   |   `-ImplicitCastExpr 0x1cb99ec9ea0 <col:25> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x1cb99ec9e78 <col:25> 'int' 0
|   |-DeclStmt 0x1cb99ec9f50 <line:110:5, col:20>
|   | `-VarDecl 0x1cb99ec9ee8 <col:5, col:19> col:19 used i 'unsigned long'
|   |-IfStmt 0x1cb99eca038 <line:112:5, line:113:16>
|   | |-BinaryOperator 0x1cb99ec9fe0 <line:112:9, col:17> 'int' '<'
|   | | |-UnaryOperator 0x1cb99ec9f88 <col:9, col:12> 'long' postfix '--'
|   | | | `-DeclRefExpr 0x1cb99ec9f68 <col:9> 'long' lvalue ParmVar 0x1cb99ec2aa0 'max' 'long'
|   | | `-ImplicitCastExpr 0x1cb99ec9fc8 <col:17> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1cb99ec9fa0 <col:17> 'int' 1
|   | `-ReturnStmt 0x1cb99eca028 <line:113:9, col:16>
|   |   `-IntegerLiteral 0x1cb99eca000 <col:16> 'int' 0
|   |-IfStmt 0x1cb99ecad28 <line:114:5, line:137:5> has_else
|   | |-BinaryOperator 0x1cb99eca110 <line:114:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x1cb99eca0f8 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1cb99eca0e0 <col:9, col:10> 'unsigned char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x1cb99eca0a0 <col:9, col:10> 'const unsigned char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x1cb99eca088 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1cb99eca050 <col:10> 'const unsigned char *' lvalue Var 0x1cb99ec2c88 'p' 'const unsigned char *'
|   | | `-IntegerLiteral 0x1cb99eca0b8 <col:15> 'int' 128
|   | |-CompoundStmt 0x1cb99eca298 <col:21, line:118:5>
|   | | |-BinaryOperator 0x1cb99eca1a8 <line:115:9, col:16> 'int' '='
|   | | | |-UnaryOperator 0x1cb99eca168 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   | | | | `-ImplicitCastExpr 0x1cb99eca150 <col:10> 'int *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x1cb99eca130 <col:10> 'int *' lvalue ParmVar 0x1cb99ec29a0 'inf' 'int *'
|   | | | `-IntegerLiteral 0x1cb99eca180 <col:16> 'int' 1
|   | | |-BinaryOperator 0x1cb99eca240 <line:116:9, col:15> 'unsigned long' '='
|   | | | |-DeclRefExpr 0x1cb99eca1c8 <col:9> 'unsigned long' lvalue Var 0x1cb99ec9e10 'ret' 'unsigned long'
|   | | | `-ImplicitCastExpr 0x1cb99eca228 <col:15> 'unsigned long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x1cb99eca200 <col:15> 'int' 0
|   | | `-UnaryOperator 0x1cb99eca280 <line:117:9, col:10> 'const unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x1cb99eca260 <col:9> 'const unsigned char *' lvalue Var 0x1cb99ec2c88 'p' 'const unsigned char *'
|   | `-CompoundStmt 0x1cb99ecad00 <line:118:12, line:137:5>
|   |   |-BinaryOperator 0x1cb99eca338 <line:119:9, col:16> 'int' '='
|   |   | |-UnaryOperator 0x1cb99eca2f8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1cb99eca2e0 <col:10> 'int *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1cb99eca2c0 <col:10> 'int *' lvalue ParmVar 0x1cb99ec29a0 'inf' 'int *'
|   |   | `-IntegerLiteral 0x1cb99eca310 <col:16> 'int' 0
|   |   |-BinaryOperator 0x1cb99eca498 <line:120:9, col:18> 'unsigned long' '='
|   |   | |-DeclRefExpr 0x1cb99eca358 <col:9> 'unsigned long' lvalue Var 0x1cb99ec9ee8 'i' 'unsigned long'
|   |   | `-ImplicitCastExpr 0x1cb99eca480 <col:13, col:18> 'unsigned long' <IntegralCast>
|   |   |   `-BinaryOperator 0x1cb99eca460 <col:13, col:18> 'int' '&'
|   |   |     |-ImplicitCastExpr 0x1cb99eca448 <col:13, col:14> 'int' <IntegralCast>
|   |   |     | `-ImplicitCastExpr 0x1cb99eca430 <col:13, col:14> 'unsigned char' <LValueToRValue>
|   |   |     |   `-UnaryOperator 0x1cb99eca3f0 <col:13, col:14> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |   |     |     `-ImplicitCastExpr 0x1cb99eca3d8 <col:14> 'const unsigned char *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x1cb99eca3b8 <col:14> 'const unsigned char *' lvalue Var 0x1cb99ec2c88 'p' 'const unsigned char *'
|   |   |     `-IntegerLiteral 0x1cb99eca408 <col:18> 'int' 127
|   |   `-IfStmt 0x1cb99ecacd8 <line:121:9, line:136:19> has_else
|   |     |-BinaryOperator 0x1cb99eca580 <line:121:13, col:22> 'int' '&'
|   |     | |-ImplicitCastExpr 0x1cb99eca568 <col:13, col:18> 'int' <IntegralCast>
|   |     | | `-ImplicitCastExpr 0x1cb99eca550 <col:13, col:18> 'unsigned char' <LValueToRValue>
|   |     | |   `-UnaryOperator 0x1cb99eca510 <col:13, col:18> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | |     `-ParenExpr 0x1cb99eca4f0 <col:14, col:18> 'const unsigned char *'
|   |     | |       `-UnaryOperator 0x1cb99eca4d8 <col:15, col:16> 'const unsigned char *' postfix '++'
|   |     | |         `-DeclRefExpr 0x1cb99eca4b8 <col:15> 'const unsigned char *' lvalue Var 0x1cb99ec2c88 'p' 'const unsigned char *'
|   |     | `-IntegerLiteral 0x1cb99eca528 <col:22> 'int' 128
|   |     |-CompoundStmt 0x1cb99ecac30 <col:28, line:135:9>
|   |     | |-IfStmt 0x1cb99eca708 <line:122:13, line:123:24>
|   |     | | |-BinaryOperator 0x1cb99eca6b0 <line:122:17, col:33> 'int' '<'
|   |     | | | |-ImplicitCastExpr 0x1cb99eca698 <col:17> 'long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1cb99eca5a0 <col:17> 'long' lvalue ParmVar 0x1cb99ec2aa0 'max' 'long'
|   |     | | | `-BinaryOperator 0x1cb99eca678 <col:23, col:33> 'long' '+'
|   |     | | |   |-CStyleCastExpr 0x1cb99eca610 <col:23, col:29> 'long' <IntegralCast>
|   |     | | |   | `-ImplicitCastExpr 0x1cb99eca5f8 <col:29> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     | | |   |   `-DeclRefExpr 0x1cb99eca5c0 <col:29> 'unsigned long' lvalue Var 0x1cb99ec9ee8 'i' 'unsigned long'
|   |     | | |   `-ImplicitCastExpr 0x1cb99eca660 <col:33> 'long' <IntegralCast>
|   |     | | |     `-IntegerLiteral 0x1cb99eca638 <col:33> 'int' 1
|   |     | | `-ReturnStmt 0x1cb99eca6f8 <line:123:17, col:24>
|   |     | |   `-IntegerLiteral 0x1cb99eca6d0 <col:24> 'int' 0
|   |     | |-WhileStmt 0x1cb99eca8d0 <line:125:13, line:128:13>
|   |     | | |-BinaryOperator 0x1cb99eca820 <line:125:20, col:31> 'int' '&&'
|   |     | | | |-ImplicitCastExpr 0x1cb99eca808 <col:20> 'unsigned long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1cb99eca720 <col:20> 'unsigned long' lvalue Var 0x1cb99ec9ee8 'i' 'unsigned long'
|   |     | | | `-BinaryOperator 0x1cb99eca7e8 <col:25, col:31> 'int' '=='
|   |     | | |   |-ImplicitCastExpr 0x1cb99eca7d0 <col:25, col:26> 'int' <IntegralCast>
|   |     | | |   | `-ImplicitCastExpr 0x1cb99eca7b8 <col:25, col:26> 'unsigned char' <LValueToRValue>
|   |     | | |   |   `-UnaryOperator 0x1cb99eca778 <col:25, col:26> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     | | |   |     `-ImplicitCastExpr 0x1cb99eca760 <col:26> 'const unsigned char *' <LValueToRValue>
|   |     | | |   |       `-DeclRefExpr 0x1cb99eca740 <col:26> 'const unsigned char *' lvalue Var 0x1cb99ec2c88 'p' 'const unsigned char *'
|   |     | | |   `-IntegerLiteral 0x1cb99eca790 <col:31> 'int' 0
|   |     | | `-CompoundStmt 0x1cb99eca8b0 <col:34, line:128:13>
|   |     | |   |-UnaryOperator 0x1cb99eca860 <line:126:17, col:18> 'const unsigned char *' postfix '++'
|   |     | |   | `-DeclRefExpr 0x1cb99eca840 <col:17> 'const unsigned char *' lvalue Var 0x1cb99ec2c88 'p' 'const unsigned char *'
|   |     | |   `-UnaryOperator 0x1cb99eca898 <line:127:17, col:18> 'unsigned long' postfix '--'
|   |     | |     `-DeclRefExpr 0x1cb99eca878 <col:17> 'unsigned long' lvalue Var 0x1cb99ec9ee8 'i' 'unsigned long'
|   |     | |-IfStmt 0x1cb99eca9c8 <line:129:13, line:130:24>
|   |     | | |-BinaryOperator 0x1cb99eca970 <line:129:17, col:32> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x1cb99eca958 <col:17> 'unsigned long long' <IntegralCast>
|   |     | | | | `-ImplicitCastExpr 0x1cb99eca940 <col:17> 'unsigned long' <LValueToRValue>
|   |     | | | |   `-DeclRefExpr 0x1cb99eca8e8 <col:17> 'unsigned long' lvalue Var 0x1cb99ec9ee8 'i' 'unsigned long'
|   |     | | | `-UnaryExprOrTypeTraitExpr 0x1cb99eca920 <col:21, col:32> 'unsigned long long' sizeof 'long'
|   |     | | `-ReturnStmt 0x1cb99eca9b8 <line:130:17, col:24>
|   |     | |   `-IntegerLiteral 0x1cb99eca990 <col:24> 'int' 0
|   |     | `-WhileStmt 0x1cb99ecac18 <line:131:13, line:134:13>
|   |     |   |-BinaryOperator 0x1cb99ecaa58 <line:131:20, col:26> 'int' '>'
|   |     |   | |-UnaryOperator 0x1cb99ecaa00 <col:20, col:21> 'unsigned long' postfix '--'
|   |     |   | | `-DeclRefExpr 0x1cb99eca9e0 <col:20> 'unsigned long' lvalue Var 0x1cb99ec9ee8 'i' 'unsigned long'
|   |     |   | `-ImplicitCastExpr 0x1cb99ecaa40 <col:26> 'unsigned long' <IntegralCast>
|   |     |   |   `-IntegerLiteral 0x1cb99ecaa18 <col:26> 'int' 0
|   |     |   `-CompoundStmt 0x1cb99ecabf8 <col:29, line:134:13>
|   |     |     |-CompoundAssignOperator 0x1cb99ecaad8 <line:132:17, col:25> 'unsigned long' '<<=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     |     | |-DeclRefExpr 0x1cb99ecaa78 <col:17> 'unsigned long' lvalue Var 0x1cb99ec9e10 'ret' 'unsigned long'
|   |     |     | `-IntegerLiteral 0x1cb99ecaa98 <col:25> 'long' 8
|   |     |     `-CompoundAssignOperator 0x1cb99ecabc8 <line:133:17, col:29> 'unsigned long' '|=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'
|   |     |       |-DeclRefExpr 0x1cb99ecab08 <col:17> 'unsigned long' lvalue Var 0x1cb99ec9e10 'ret' 'unsigned long'
|   |     |       `-ImplicitCastExpr 0x1cb99ecabb0 <col:24, col:29> 'unsigned long' <IntegralCast>
|   |     |         `-ImplicitCastExpr 0x1cb99ecab98 <col:24, col:29> 'unsigned char' <LValueToRValue>
|   |     |           `-UnaryOperator 0x1cb99ecab80 <col:24, col:29> 'const unsigned char' lvalue prefix '*' cannot overflow
|   |     |             `-ParenExpr 0x1cb99ecab60 <col:25, col:29> 'const unsigned char *'
|   |     |               `-UnaryOperator 0x1cb99ecab48 <col:26, col:27> 'const unsigned char *' postfix '++'
|   |     |                 `-DeclRefExpr 0x1cb99ecab28 <col:26> 'const unsigned char *' lvalue Var 0x1cb99ec2c88 'p' 'const unsigned char *'
|   |     `-BinaryOperator 0x1cb99ecacb8 <line:136:13, col:19> 'unsigned long' '='
|   |       |-DeclRefExpr 0x1cb99ecac60 <col:13> 'unsigned long' lvalue Var 0x1cb99ec9e10 'ret' 'unsigned long'
|   |       `-ImplicitCastExpr 0x1cb99ecaca0 <col:19> 'unsigned long' <LValueToRValue>
|   |         `-DeclRefExpr 0x1cb99ecac80 <col:19> 'unsigned long' lvalue Var 0x1cb99ec9ee8 'i' 'unsigned long'
|   |-IfStmt 0x1cb99ecde78 <line:138:5, line:139:16>
|   | |-BinaryOperator 0x1cb99ecde20 <line:138:9, <built-in>:31:22> 'int' '>'
|   | | |-ImplicitCastExpr 0x1cb99ecad98 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:138:9> 'unsigned long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1cb99ecad50 <col:9> 'unsigned long' lvalue Var 0x1cb99ec9e10 'ret' 'unsigned long'
|   | | `-ImplicitCastExpr 0x1cb99ecadb0 <<built-in>:31:22> 'unsigned long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1cb99ecad70 <col:22> 'long' 2147483647
|   | `-ReturnStmt 0x1cb99ecde68 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:139:9, col:16>
|   |   `-IntegerLiteral 0x1cb99ecde40 <col:16> 'int' 0
|   |-BinaryOperator 0x1cb99ecdf18 <line:140:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x1cb99ecdec8 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1cb99ecdeb0 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1cb99ecde90 <col:6> 'const unsigned char **' lvalue ParmVar 0x1cb99ec2920 'pp' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x1cb99ecdf00 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1cb99ecdee0 <col:11> 'const unsigned char *' lvalue Var 0x1cb99ec2c88 'p' 'const unsigned char *'
|   |-BinaryOperator 0x1cb99ece000 <line:141:5, col:17> 'long' '='
|   | |-UnaryOperator 0x1cb99ecdf70 <col:5, col:6> 'long' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1cb99ecdf58 <col:6> 'long *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1cb99ecdf38 <col:6> 'long *' lvalue ParmVar 0x1cb99ec2a20 'rl' 'long *'
|   | `-CStyleCastExpr 0x1cb99ecdfd8 <col:11, col:17> 'long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x1cb99ecdfc0 <col:17> 'unsigned long' <LValueToRValue> part_of_explicit_cast
|   |     `-DeclRefExpr 0x1cb99ecdf88 <col:17> 'unsigned long' lvalue Var 0x1cb99ec9e10 'ret' 'unsigned long'
|   `-ReturnStmt 0x1cb99ece048 <line:142:5, col:12>
|     `-IntegerLiteral 0x1cb99ece020 <col:12> 'int' 1
|-FunctionDecl 0x1cb99ece448 <line:148:1, line:176:1> line:148:6 ASN1_put_object 'void (unsigned char **, int, int, int, int)'
| |-ParmVarDecl 0x1cb99ece0d0 <col:22, col:38> col:38 used pp 'unsigned char **'
| |-ParmVarDecl 0x1cb99ece150 <col:42, col:46> col:46 used constructed 'int'
| |-ParmVarDecl 0x1cb99ece1d0 <col:59, col:63> col:63 used length 'int'
| |-ParmVarDecl 0x1cb99ece250 <col:71, col:75> col:75 used tag 'int'
| |-ParmVarDecl 0x1cb99ece2d0 <line:149:22, col:26> col:26 used xclass 'int'
| `-CompoundStmt 0x1cb99ed05e8 <line:150:1, line:176:1>
|   |-DeclStmt 0x1cb99ece610 <line:151:5, col:27>
|   | `-VarDecl 0x1cb99ece540 <col:5, col:25> col:20 used p 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1cb99ece5f8 <col:24, col:25> 'unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x1cb99ece5e0 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1cb99ece5c8 <col:25> 'unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x1cb99ece5a8 <col:25> 'unsigned char **' lvalue ParmVar 0x1cb99ece0d0 'pp' 'unsigned char **'
|   |-DeclStmt 0x1cb99ece740 <line:152:5, col:16>
|   | |-VarDecl 0x1cb99ece640 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1cb99ece6c0 <col:5, col:12> col:12 used ttag 'int'
|   |-IfStmt 0x1cb99ed02a0 <line:156:5, line:170:5> has_else
|   | |-BinaryOperator 0x1cb99ece898 <line:156:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1cb99ece880 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1cb99ece838 <col:9> 'int' lvalue ParmVar 0x1cb99ece250 'tag' 'int'
|   | | `-IntegerLiteral 0x1cb99ece858 <col:15> 'int' 31
|   | |-NullStmt 0x1cb99ed0298 <line:157:9>
|   | `-CompoundStmt 0x1cb99ed0268 <line:158:10, line:170:5>
|   |   |-ForStmt 0x1cb99ecec70 <line:160:9, line:161:22>
|   |   | |-BinaryOperator 0x1cb99eceb08 <line:160:14, col:28> 'int' ','
|   |   | | |-BinaryOperator 0x1cb99ecea58 <col:14, col:18> 'int' '='
|   |   | | | |-DeclRefExpr 0x1cb99ecea10 <col:14> 'int' lvalue Var 0x1cb99ece640 'i' 'int'
|   |   | | | `-IntegerLiteral 0x1cb99ecea30 <col:18> 'int' 0
|   |   | | `-BinaryOperator 0x1cb99eceae8 <col:21, col:28> 'int' '='
|   |   | |   |-DeclRefExpr 0x1cb99ecea78 <col:21> 'int' lvalue Var 0x1cb99ece6c0 'ttag' 'int'
|   |   | |   `-ImplicitCastExpr 0x1cb99ecead0 <col:28> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1cb99eceab0 <col:28> 'int' lvalue ParmVar 0x1cb99ece250 'tag' 'int'
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1cb99eceb88 <col:33, col:40> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1cb99eceb70 <col:33> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1cb99eceb28 <col:33> 'int' lvalue Var 0x1cb99ece6c0 'ttag' 'int'
|   |   | | `-IntegerLiteral 0x1cb99eceb48 <col:40> 'int' 0
|   |   | |-UnaryOperator 0x1cb99ecebc8 <col:43, col:44> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x1cb99eceba8 <col:43> 'int' lvalue Var 0x1cb99ece640 'i' 'int'
|   |   | `-CompoundAssignOperator 0x1cb99ecec40 <line:161:13, col:22> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x1cb99ecebe0 <col:13> 'int' lvalue Var 0x1cb99ece6c0 'ttag' 'int'
|   |   |   `-IntegerLiteral 0x1cb99ecec00 <col:22> 'int' 7
|   |   |-BinaryOperator 0x1cb99eced00 <line:162:9, col:16> 'int' '='
|   |   | |-DeclRefExpr 0x1cb99ececa8 <col:9> 'int' lvalue Var 0x1cb99ece6c0 'ttag' 'int'
|   |   | `-ImplicitCastExpr 0x1cb99ecece8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1cb99ececc8 <col:16> 'int' lvalue Var 0x1cb99ece640 'i' 'int'
|   |   |-WhileStmt 0x1cb99ed01c8 <line:163:9, line:168:9>
|   |   | |-BinaryOperator 0x1cb99eced80 <line:163:16, col:22> 'int' '>'
|   |   | | |-UnaryOperator 0x1cb99eced40 <col:16, col:17> 'int' postfix '--'
|   |   | | | `-DeclRefExpr 0x1cb99eced20 <col:16> 'int' lvalue Var 0x1cb99ece640 'i' 'int'
|   |   | | `-IntegerLiteral 0x1cb99eced58 <col:22> 'int' 0
|   |   | `-CompoundStmt 0x1cb99ed01a0 <col:25, line:168:9>
|   |   |   |-BinaryOperator 0x1cb99ecfef8 <line:164:13, col:26> 'unsigned char' '='
|   |   |   | |-ArraySubscriptExpr 0x1cb99ecfe40 <col:13, col:16> 'unsigned char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x1cb99ecede0 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1cb99eceda0 <col:13> 'unsigned char *' lvalue Var 0x1cb99ece540 'p' 'unsigned char *'
|   |   |   | | `-ImplicitCastExpr 0x1cb99ecedf8 <col:15> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1cb99ecedc0 <col:15> 'int' lvalue Var 0x1cb99ece640 'i' 'int'
|   |   |   | `-ImplicitCastExpr 0x1cb99ecfee0 <col:20, col:26> 'unsigned char' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1cb99ecfec0 <col:20, col:26> 'int' '&'
|   |   |   |     |-ImplicitCastExpr 0x1cb99ecfea8 <col:20> 'int' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x1cb99ecfe60 <col:20> 'int' lvalue ParmVar 0x1cb99ece250 'tag' 'int'
|   |   |   |     `-IntegerLiteral 0x1cb99ecfe80 <col:26> 'int' 127
|   |   |   |-IfStmt 0x1cb99ed00f8 <line:165:13, line:166:25>
|   |   |   | |-BinaryOperator 0x1cb99ecfff0 <line:165:17, col:31> 'int' '!='
|   |   |   | | |-ImplicitCastExpr 0x1cb99ecffd8 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1cb99ecff18 <col:17> 'int' lvalue Var 0x1cb99ece640 'i' 'int'
|   |   |   | | `-ParenExpr 0x1cb99ecffb8 <col:22, col:31> 'int'
|   |   |   | |   `-BinaryOperator 0x1cb99ecff98 <col:23, col:30> 'int' '-'
|   |   |   | |     |-ImplicitCastExpr 0x1cb99ecff80 <col:23> 'int' <LValueToRValue>
|   |   |   | |     | `-DeclRefExpr 0x1cb99ecff38 <col:23> 'int' lvalue Var 0x1cb99ece6c0 'ttag' 'int'
|   |   |   | |     `-IntegerLiteral 0x1cb99ecff58 <col:30> 'int' 1
|   |   |   | `-CompoundAssignOperator 0x1cb99ed00c8 <line:166:17, col:25> 'unsigned char' '|=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |   |-ArraySubscriptExpr 0x1cb99ed0080 <col:17, col:20> 'unsigned char' lvalue
|   |   |   |   | |-ImplicitCastExpr 0x1cb99ed0050 <col:17> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | `-DeclRefExpr 0x1cb99ed0010 <col:17> 'unsigned char *' lvalue Var 0x1cb99ece540 'p' 'unsigned char *'
|   |   |   |   | `-ImplicitCastExpr 0x1cb99ed0068 <col:19> 'int' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x1cb99ed0030 <col:19> 'int' lvalue Var 0x1cb99ece640 'i' 'int'
|   |   |   |   `-IntegerLiteral 0x1cb99ed00a0 <col:25> 'int' 128
|   |   |   `-CompoundAssignOperator 0x1cb99ed0170 <line:167:13, col:21> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x1cb99ed0110 <col:13> 'int' lvalue ParmVar 0x1cb99ece250 'tag' 'int'
|   |   |     `-IntegerLiteral 0x1cb99ed0130 <col:21> 'int' 7
|   |   `-CompoundAssignOperator 0x1cb99ed0238 <line:169:9, col:14> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     |-DeclRefExpr 0x1cb99ed01e0 <col:9> 'unsigned char *' lvalue Var 0x1cb99ece540 'p' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x1cb99ed0220 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1cb99ed0200 <col:14> 'int' lvalue Var 0x1cb99ece6c0 'ttag' 'int'
|   |-IfStmt 0x1cb99ed0518 <line:171:5, line:174:35> has_else
|   | |-BinaryOperator 0x1cb99ed0328 <line:171:9, col:24> 'int' '=='
|   | | |-ImplicitCastExpr 0x1cb99ed0310 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1cb99ed02c8 <col:9> 'int' lvalue ParmVar 0x1cb99ece150 'constructed' 'int'
|   | | `-IntegerLiteral 0x1cb99ed02e8 <col:24> 'int' 2
|   | |-BinaryOperator 0x1cb99ed03f8 <line:172:9, col:18> 'unsigned char' '='
|   | | |-UnaryOperator 0x1cb99ed03a0 <col:9, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | | `-ParenExpr 0x1cb99ed0380 <col:10, col:14> 'unsigned char *'
|   | | |   `-UnaryOperator 0x1cb99ed0368 <col:11, col:12> 'unsigned char *' postfix '++'
|   | | |     `-DeclRefExpr 0x1cb99ed0348 <col:11> 'unsigned char *' lvalue Var 0x1cb99ece540 'p' 'unsigned char *'
|   | | `-ImplicitCastExpr 0x1cb99ed03e0 <col:18> 'unsigned char' <IntegralCast>
|   | |   `-IntegerLiteral 0x1cb99ed03b8 <col:18> 'int' 128
|   | `-CallExpr 0x1cb99ed04d0 <line:174:9, col:35> 'void'
|   |   |-ImplicitCastExpr 0x1cb99ed04b8 <col:9> 'void (*)(unsigned char **, int)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1cb99ed0418 <col:9> 'void (unsigned char **, int)' Function 0x1cb99ec54d8 'asn1_put_length' 'void (unsigned char **, int)'
|   |   |-UnaryOperator 0x1cb99ed0458 <col:25, col:26> 'unsigned char **' prefix '&' cannot overflow
|   |   | `-DeclRefExpr 0x1cb99ed0438 <col:26> 'unsigned char *' lvalue Var 0x1cb99ece540 'p' 'unsigned char *'
|   |   `-ImplicitCastExpr 0x1cb99ed0500 <col:29> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1cb99ed0470 <col:29> 'int' lvalue ParmVar 0x1cb99ece1d0 'length' 'int'
|   `-BinaryOperator 0x1cb99ed05c8 <line:175:5, col:11> 'unsigned char *' '='
|     |-UnaryOperator 0x1cb99ed0578 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1cb99ed0560 <col:6> 'unsigned char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x1cb99ed0540 <col:6> 'unsigned char **' lvalue ParmVar 0x1cb99ece0d0 'pp' 'unsigned char **'
|     `-ImplicitCastExpr 0x1cb99ed05b0 <col:11> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x1cb99ed0590 <col:11> 'unsigned char *' lvalue Var 0x1cb99ece540 'p' 'unsigned char *'
|-FunctionDecl 0x1cb99ed0720 <line:178:1, line:185:1> line:178:5 ASN1_put_eoc 'int (unsigned char **)'
| |-ParmVarDecl 0x1cb99ed0640 <col:18, col:34> col:34 used pp 'unsigned char **'
| `-CompoundStmt 0x1cb99ed0b38 <line:179:1, line:185:1>
|   |-DeclStmt 0x1cb99ed08c8 <line:180:5, col:27>
|   | `-VarDecl 0x1cb99ed07f8 <col:5, col:25> col:20 used p 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1cb99ed08b0 <col:24, col:25> 'unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x1cb99ed0898 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1cb99ed0880 <col:25> 'unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x1cb99ed0860 <col:25> 'unsigned char **' lvalue ParmVar 0x1cb99ed0640 'pp' 'unsigned char **'
|   |-BinaryOperator 0x1cb99ed0988 <line:181:5, col:12> 'unsigned char' '='
|   | |-UnaryOperator 0x1cb99ed0930 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x1cb99ed0918 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x1cb99ed08e0 <col:6> 'unsigned char *' lvalue Var 0x1cb99ed07f8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1cb99ed0970 <col:12> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1cb99ed0948 <col:12> 'int' 0
|   |-BinaryOperator 0x1cb99ed0a38 <line:182:5, col:12> 'unsigned char' '='
|   | |-UnaryOperator 0x1cb99ed09e0 <col:5, col:7> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | `-UnaryOperator 0x1cb99ed09c8 <col:6, col:7> 'unsigned char *' postfix '++'
|   | |   `-DeclRefExpr 0x1cb99ed09a8 <col:6> 'unsigned char *' lvalue Var 0x1cb99ed07f8 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1cb99ed0a20 <col:12> 'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x1cb99ed09f8 <col:12> 'int' 0
|   |-BinaryOperator 0x1cb99ed0ae0 <line:183:5, col:11> 'unsigned char *' '='
|   | |-UnaryOperator 0x1cb99ed0a90 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1cb99ed0a78 <col:6> 'unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1cb99ed0a58 <col:6> 'unsigned char **' lvalue ParmVar 0x1cb99ed0640 'pp' 'unsigned char **'
|   | `-ImplicitCastExpr 0x1cb99ed0ac8 <col:11> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1cb99ed0aa8 <col:11> 'unsigned char *' lvalue Var 0x1cb99ed07f8 'p' 'unsigned char *'
|   `-ReturnStmt 0x1cb99ed0b28 <line:184:5, col:12>
|     `-IntegerLiteral 0x1cb99ed0b00 <col:12> 'int' 2
|-FunctionDecl 0x1cb99ed0cd8 prev 0x1cb99ec54d8 <line:187:1, line:206:1> line:187:13 used asn1_put_length 'void (unsigned char **, int)' static
| |-ParmVarDecl 0x1cb99ed0b90 <col:29, col:45> col:45 used pp 'unsigned char **'
| |-ParmVarDecl 0x1cb99ed0c10 <col:49, col:53> col:53 used length 'int'
| `-CompoundStmt 0x1cb99ecf9a0 <line:188:1, line:206:1>
|   |-DeclStmt 0x1cb99ecee60 <line:189:5, col:27>
|   | `-VarDecl 0x1cb99ed0da0 <col:5, col:25> col:20 used p 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1cb99ecee48 <col:24, col:25> 'unsigned char *' <LValueToRValue>
|   |     `-UnaryOperator 0x1cb99ecee30 <col:24, col:25> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |       `-ImplicitCastExpr 0x1cb99ed0e28 <col:25> 'unsigned char **' <LValueToRValue>
|   |         `-DeclRefExpr 0x1cb99ed0e08 <col:25> 'unsigned char **' lvalue ParmVar 0x1cb99ed0b90 'pp' 'unsigned char **'
|   |-DeclStmt 0x1cb99ecef90 <line:190:5, col:13>
|   | |-VarDecl 0x1cb99ecee90 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1cb99ecef10 <col:5, col:12> col:12 used l 'int'
|   |-IfStmt 0x1cb99ecf8d0 <line:191:5, line:204:5> has_else
|   | |-BinaryOperator 0x1cb99ecf008 <line:191:9, col:19> 'int' '<='
|   | | |-ImplicitCastExpr 0x1cb99eceff0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1cb99ecefa8 <col:9> 'int' lvalue ParmVar 0x1cb99ed0c10 'length' 'int'
|   | | `-IntegerLiteral 0x1cb99ecefc8 <col:19> 'int' 127
|   | |-BinaryOperator 0x1cb99ecf128 <line:192:9, col:33> 'unsigned char' '='
|   | | |-UnaryOperator 0x1cb99ecf098 <col:9, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   | | | `-ParenExpr 0x1cb99ecf078 <col:10, col:14> 'unsigned char *'
|   | | |   `-UnaryOperator 0x1cb99ecf060 <col:11, col:12> 'unsigned char *' postfix '++'
|   | | |     `-DeclRefExpr 0x1cb99ecf028 <col:11> 'unsigned char *' lvalue Var 0x1cb99ed0da0 'p' 'unsigned char *'
|   | | `-CStyleCastExpr 0x1cb99ecf100 <col:18, col:33> 'unsigned char' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1cb99ecf0e8 <col:33> 'int' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x1cb99ecf0b0 <col:33> 'int' lvalue ParmVar 0x1cb99ed0c10 'length' 'int'
|   | `-CompoundStmt 0x1cb99ecf890 <line:193:10, line:204:5>
|   |   |-BinaryOperator 0x1cb99ecf1b8 <line:194:9, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x1cb99ecf148 <col:9> 'int' lvalue Var 0x1cb99ecef10 'l' 'int'
|   |   | `-ImplicitCastExpr 0x1cb99ecf1a0 <col:13> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1cb99ecf180 <col:13> 'int' lvalue ParmVar 0x1cb99ed0c10 'length' 'int'
|   |   |-ForStmt 0x1cb99ecf3a0 <line:195:9, line:196:19>
|   |   | |-BinaryOperator 0x1cb99ecf238 <line:195:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x1cb99ecf1d8 <col:14> 'int' lvalue Var 0x1cb99ecee90 'i' 'int'
|   |   | | `-IntegerLiteral 0x1cb99ecf210 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1cb99ecf2b8 <col:21, col:25> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1cb99ecf2a0 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1cb99ecf258 <col:21> 'int' lvalue Var 0x1cb99ecef10 'l' 'int'
|   |   | | `-IntegerLiteral 0x1cb99ecf278 <col:25> 'int' 0
|   |   | |-UnaryOperator 0x1cb99ecf2f8 <col:28, col:29> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x1cb99ecf2d8 <col:28> 'int' lvalue Var 0x1cb99ecee90 'i' 'int'
|   |   | `-CompoundAssignOperator 0x1cb99ecf370 <line:196:13, col:19> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   |-DeclRefExpr 0x1cb99ecf310 <col:13> 'int' lvalue Var 0x1cb99ecef10 'l' 'int'
|   |   |   `-IntegerLiteral 0x1cb99ecf330 <col:19> 'int' 8
|   |   |-BinaryOperator 0x1cb99ecf4e0 <line:197:9, col:22> 'unsigned char' '='
|   |   | |-UnaryOperator 0x1cb99ecf430 <col:9, col:14> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   | | `-ParenExpr 0x1cb99ecf410 <col:10, col:14> 'unsigned char *'
|   |   | |   `-UnaryOperator 0x1cb99ecf3f8 <col:11, col:12> 'unsigned char *' postfix '++'
|   |   | |     `-DeclRefExpr 0x1cb99ecf3d8 <col:11> 'unsigned char *' lvalue Var 0x1cb99ed0da0 'p' 'unsigned char *'
|   |   | `-ImplicitCastExpr 0x1cb99ecf4c8 <col:18, col:22> 'unsigned char' <IntegralCast>
|   |   |   `-BinaryOperator 0x1cb99ecf4a8 <col:18, col:22> 'int' '|'
|   |   |     |-ImplicitCastExpr 0x1cb99ecf490 <col:18> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x1cb99ecf448 <col:18> 'int' lvalue Var 0x1cb99ecee90 'i' 'int'
|   |   |     `-IntegerLiteral 0x1cb99ecf468 <col:22> 'int' 128
|   |   |-BinaryOperator 0x1cb99ecf558 <line:198:9, col:13> 'int' '='
|   |   | |-DeclRefExpr 0x1cb99ecf500 <col:9> 'int' lvalue Var 0x1cb99ecef10 'l' 'int'
|   |   | `-ImplicitCastExpr 0x1cb99ecf540 <col:13> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1cb99ecf520 <col:13> 'int' lvalue Var 0x1cb99ecee90 'i' 'int'
|   |   |-WhileStmt 0x1cb99ecf7f0 <line:199:9, line:202:9>
|   |   | |-BinaryOperator 0x1cb99ecf5d8 <line:199:16, col:22> 'int' '>'
|   |   | | |-UnaryOperator 0x1cb99ecf598 <col:16, col:17> 'int' postfix '--'
|   |   | | | `-DeclRefExpr 0x1cb99ecf578 <col:16> 'int' lvalue Var 0x1cb99ecee90 'i' 'int'
|   |   | | `-IntegerLiteral 0x1cb99ecf5b0 <col:22> 'int' 0
|   |   | `-CompoundStmt 0x1cb99ecf7d0 <col:25, line:202:9>
|   |   |   |-BinaryOperator 0x1cb99ecf720 <line:200:13, col:29> 'unsigned char' '='
|   |   |   | |-ArraySubscriptExpr 0x1cb99ecf668 <col:13, col:16> 'unsigned char' lvalue
|   |   |   | | |-ImplicitCastExpr 0x1cb99ecf638 <col:13> 'unsigned char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1cb99ecf5f8 <col:13> 'unsigned char *' lvalue Var 0x1cb99ed0da0 'p' 'unsigned char *'
|   |   |   | | `-ImplicitCastExpr 0x1cb99ecf650 <col:15> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1cb99ecf618 <col:15> 'int' lvalue Var 0x1cb99ecee90 'i' 'int'
|   |   |   | `-ImplicitCastExpr 0x1cb99ecf708 <col:20, col:29> 'unsigned char' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x1cb99ecf6e8 <col:20, col:29> 'int' '&'
|   |   |   |     |-ImplicitCastExpr 0x1cb99ecf6d0 <col:20> 'int' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x1cb99ecf688 <col:20> 'int' lvalue ParmVar 0x1cb99ed0c10 'length' 'int'
|   |   |   |     `-IntegerLiteral 0x1cb99ecf6a8 <col:29> 'int' 255
|   |   |   `-CompoundAssignOperator 0x1cb99ecf7a0 <line:201:13, col:24> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x1cb99ecf740 <col:13> 'int' lvalue ParmVar 0x1cb99ed0c10 'length' 'int'
|   |   |     `-IntegerLiteral 0x1cb99ecf760 <col:24> 'int' 8
|   |   `-CompoundAssignOperator 0x1cb99ecf860 <line:203:9, col:14> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |     |-DeclRefExpr 0x1cb99ecf808 <col:9> 'unsigned char *' lvalue Var 0x1cb99ed0da0 'p' 'unsigned char *'
|   |     `-ImplicitCastExpr 0x1cb99ecf848 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1cb99ecf828 <col:14> 'int' lvalue Var 0x1cb99ecef10 'l' 'int'
|   `-BinaryOperator 0x1cb99ecf980 <line:205:5, col:11> 'unsigned char *' '='
|     |-UnaryOperator 0x1cb99ecf930 <col:5, col:6> 'unsigned char *' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x1cb99ecf918 <col:6> 'unsigned char **' <LValueToRValue>
|     |   `-DeclRefExpr 0x1cb99ecf8f8 <col:6> 'unsigned char **' lvalue ParmVar 0x1cb99ed0b90 'pp' 'unsigned char **'
|     `-ImplicitCastExpr 0x1cb99ecf968 <col:11> 'unsigned char *' <LValueToRValue>
|       `-DeclRefExpr 0x1cb99ecf948 <col:11> 'unsigned char *' lvalue Var 0x1cb99ed0da0 'p' 'unsigned char *'
|-FunctionDecl 0x1cb99ecfc20 <line:208:1, line:234:1> line:208:5 ASN1_object_size 'int (int, int, int)'
| |-ParmVarDecl 0x1cb99ecf9e8 <col:22, col:26> col:26 used constructed 'int'
| |-ParmVarDecl 0x1cb99ecfa68 <col:39, col:43> col:43 used length 'int'
| |-ParmVarDecl 0x1cb99ecfae8 <col:51, col:55> col:55 used tag 'int'
| `-CompoundStmt 0x1cb99ed1790 <line:209:1, line:234:1>
|   |-DeclStmt 0x1cb99ecfd98 <line:210:5, col:16>
|   | `-VarDecl 0x1cb99ecfd08 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1cb99ecfd70 <col:15> 'int' 1
|   |-IfStmt 0x1cb99ed0ea0 <line:211:5, line:212:17>
|   | |-BinaryOperator 0x1cb99ecfe10 <line:211:9, col:18> 'int' '<'
|   | | |-ImplicitCastExpr 0x1cb99ecfdf8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1cb99ecfdb0 <col:9> 'int' lvalue ParmVar 0x1cb99ecfa68 'length' 'int'
|   | | `-IntegerLiteral 0x1cb99ecfdd0 <col:18> 'int' 0
|   | `-ReturnStmt 0x1cb99ed0e90 <line:212:9, col:17>
|   |   `-UnaryOperator 0x1cb99ed0e78 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1cb99ed0e50 <col:17> 'int' 1
|   |-IfStmt 0x1cb99ed10e8 <line:213:5, line:218:5>
|   | |-BinaryOperator 0x1cb99ed0f18 <line:213:9, col:16> 'int' '>='
|   | | |-ImplicitCastExpr 0x1cb99ed0f00 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1cb99ed0eb8 <col:9> 'int' lvalue ParmVar 0x1cb99ecfae8 'tag' 'int'
|   | | `-IntegerLiteral 0x1cb99ed0ed8 <col:16> 'int' 31
|   | `-CompoundStmt 0x1cb99ed10d0 <col:20, line:218:5>
|   |   `-WhileStmt 0x1cb99ed10b8 <line:214:9, line:217:9>
|   |     |-BinaryOperator 0x1cb99ed0f98 <line:214:16, col:22> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1cb99ed0f80 <col:16> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1cb99ed0f38 <col:16> 'int' lvalue ParmVar 0x1cb99ecfae8 'tag' 'int'
|   |     | `-IntegerLiteral 0x1cb99ed0f58 <col:22> 'int' 0
|   |     `-CompoundStmt 0x1cb99ed1098 <col:25, line:217:9>
|   |       |-CompoundAssignOperator 0x1cb99ed1018 <line:215:13, col:21> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x1cb99ed0fb8 <col:13> 'int' lvalue ParmVar 0x1cb99ecfae8 'tag' 'int'
|   |       | `-IntegerLiteral 0x1cb99ed0fd8 <col:21> 'int' 7
|   |       `-UnaryOperator 0x1cb99ed1080 <line:216:13, col:16> 'int' postfix '++'
|   |         `-DeclRefExpr 0x1cb99ed1048 <col:13> 'int' lvalue Var 0x1cb99ecfd08 'ret' 'int'
|   |-IfStmt 0x1cb99ed1588 <line:219:5, line:230:5> has_else
|   | |-BinaryOperator 0x1cb99ed1160 <line:219:9, col:24> 'int' '=='
|   | | |-ImplicitCastExpr 0x1cb99ed1148 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1cb99ed1100 <col:9> 'int' lvalue ParmVar 0x1cb99ecf9e8 'constructed' 'int'
|   | | `-IntegerLiteral 0x1cb99ed1120 <col:24> 'int' 2
|   | |-CompoundStmt 0x1cb99ed11f8 <col:27, line:221:5>
|   | | `-CompoundAssignOperator 0x1cb99ed11c8 <line:220:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |   |-DeclRefExpr 0x1cb99ed1180 <col:9> 'int' lvalue Var 0x1cb99ecfd08 'ret' 'int'
|   | |   `-IntegerLiteral 0x1cb99ed11a0 <col:16> 'int' 3
|   | `-CompoundStmt 0x1cb99ed1568 <line:221:12, line:230:5>
|   |   |-UnaryOperator 0x1cb99ed1230 <line:222:9, col:12> 'int' postfix '++'
|   |   | `-DeclRefExpr 0x1cb99ed1210 <col:9> 'int' lvalue Var 0x1cb99ecfd08 'ret' 'int'
|   |   `-IfStmt 0x1cb99ed1550 <line:223:9, line:229:9>
|   |     |-BinaryOperator 0x1cb99ed12a8 <line:223:13, col:22> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1cb99ed1290 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1cb99ed1248 <col:13> 'int' lvalue ParmVar 0x1cb99ecfa68 'length' 'int'
|   |     | `-IntegerLiteral 0x1cb99ed1268 <col:22> 'int' 127
|   |     `-CompoundStmt 0x1cb99ed1530 <col:27, line:229:9>
|   |       |-DeclStmt 0x1cb99ed1380 <line:224:13, col:32>
|   |       | `-VarDecl 0x1cb99ed12e0 <col:13, col:26> col:17 used tmplen 'int' cinit
|   |       |   `-ImplicitCastExpr 0x1cb99ed1368 <col:26> 'int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x1cb99ed1348 <col:26> 'int' lvalue ParmVar 0x1cb99ecfa68 'length' 'int'
|   |       `-WhileStmt 0x1cb99ed1518 <line:225:13, line:228:13>
|   |         |-BinaryOperator 0x1cb99ed1410 <line:225:20, col:29> 'int' '>'
|   |         | |-ImplicitCastExpr 0x1cb99ed13f8 <col:20> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1cb99ed1398 <col:20> 'int' lvalue Var 0x1cb99ed12e0 'tmplen' 'int'
|   |         | `-IntegerLiteral 0x1cb99ed13d0 <col:29> 'int' 0
|   |         `-CompoundStmt 0x1cb99ed14f8 <col:32, line:228:13>
|   |           |-CompoundAssignOperator 0x1cb99ed1490 <line:226:17, col:28> 'int' '>>=' ComputeLHSTy='int' ComputeResultTy='int'
|   |           | |-DeclRefExpr 0x1cb99ed1430 <col:17> 'int' lvalue Var 0x1cb99ed12e0 'tmplen' 'int'
|   |           | `-IntegerLiteral 0x1cb99ed1450 <col:28> 'int' 8
|   |           `-UnaryOperator 0x1cb99ed14e0 <line:227:17, col:20> 'int' postfix '++'
|   |             `-DeclRefExpr 0x1cb99ed14c0 <col:17> 'int' lvalue Var 0x1cb99ecfd08 'ret' 'int'
|   |-IfStmt 0x1cb99ed16d8 <line:231:5, line:232:17>
|   | |-BinaryOperator 0x1cb99ed1668 <line:231:9, col:26> 'int' '>='
|   | | |-ImplicitCastExpr 0x1cb99ed1650 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1cb99ed15b0 <col:9> 'int' lvalue Var 0x1cb99ecfd08 'ret' 'int'
|   | | `-BinaryOperator 0x1cb99ed1630 <<built-in>:30:21, .//openssl//file_jk/after\crypto\asn1\asn1_lib.c:231:26> 'int' '-'
|   | |   |-IntegerLiteral 0x1cb99ed15d0 <<built-in>:30:21> 'int' 2147483647
|   | |   `-ImplicitCastExpr 0x1cb99ed1618 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:231:26> 'int' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1cb99ed15f8 <col:26> 'int' lvalue ParmVar 0x1cb99ecfa68 'length' 'int'
|   | `-ReturnStmt 0x1cb99ed16c8 <line:232:9, col:17>
|   |   `-UnaryOperator 0x1cb99ed16b0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x1cb99ed1688 <col:17> 'int' 1
|   `-ReturnStmt 0x1cb99ed1780 <line:233:5, col:18>
|     `-BinaryOperator 0x1cb99ed1760 <col:12, col:18> 'int' '+'
|       |-ImplicitCastExpr 0x1cb99ed1730 <col:12> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x1cb99ed16f0 <col:12> 'int' lvalue Var 0x1cb99ecfd08 'ret' 'int'
|       `-ImplicitCastExpr 0x1cb99ed1748 <col:18> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x1cb99ed1710 <col:18> 'int' lvalue ParmVar 0x1cb99ecfa68 'length' 'int'
|-FunctionDecl 0x1cb99ed1940 <line:236:1, line:247:1> line:236:5 invalid ASN1_STRING_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1cb99ed17e8 <col:22, col:35> col:35 invalid dst 'int *'
| |-ParmVarDecl 0x1cb99ed1868 <col:40, col:59> col:59 invalid str 'const int *'
| `-CompoundStmt 0x1cb99ed1ca8 <line:237:1, line:247:1>
|   |-IfStmt 0x1cb99ed1ae0 <line:238:5, line:239:16>
|   | |-OpaqueValueExpr 0x1cb99ed1ac8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1cb99ed1ab8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1cb99ed1a90 <col:16> 'int' 0
|   |-IfStmt 0x1cb99ed1c58 <line:241:5, line:242:16>
|   | |-OpaqueValueExpr 0x1cb99ed1c40 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1cb99ed1c30 <col:9, col:16>
|   |   `-IntegerLiteral 0x1cb99ed1c08 <col:16> 'int' 0
|   `-ReturnStmt 0x1cb99ed1c98 <line:246:5, col:12>
|     `-IntegerLiteral 0x1cb99ed1c70 <col:12> 'int' 1
|-FunctionDecl 0x1cb99ed1db0 <line:249:1, line:262:1> line:249:14 invalid ASN1_STRING_dup 'int *(const int *)'
| |-ParmVarDecl 0x1cb99ed1ce8 <col:30, col:49> col:49 invalid str 'const int *'
| `-CompoundStmt 0x1cb99ed2440 <line:250:1, line:262:1>
|   |-IfStmt 0x1cb99ed1f48 <line:252:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x1cb99ed1f30 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1cb99ed1f20 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:253:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1cb99ed1f08 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x1cb99ed1ee8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1cb99ed1ec0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1cb99ed1e80 <col:26> 'int' 0
|   |-IfStmt 0x1cb99ed2220 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:255:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   | |-OpaqueValueExpr 0x1cb99ed2208 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1cb99ed21f8 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:256:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|   |   `-ImplicitCastExpr 0x1cb99ed21e0 <col:17, col:27> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x1cb99ed21c0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1cb99ed2198 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1cb99ed2158 <col:26> 'int' 0
|   `-IfStmt 0x1cb99ed2428 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:257:5, line:260:5>
|     |-OpaqueValueExpr 0x1cb99ed2410 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1cb99ed23f8 <line:257:38, line:260:5>
|       `-ReturnStmt 0x1cb99ed23e8 <line:259:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|         `-ImplicitCastExpr 0x1cb99ed23d0 <col:17, col:27> 'int *' <NullToPointer>
|           `-ParenExpr 0x1cb99ed23b0 <col:17, col:27> 'void *'
|             `-CStyleCastExpr 0x1cb99ed2388 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x1cb99ed2348 <col:26> 'int' 0
|-FunctionDecl 0x1cb99ed2670 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:264:1, line:291:1> line:264:5 invalid ASN1_STRING_set 'int (int *, const void *, int)'
| |-ParmVarDecl 0x1cb99ed2480 <col:21, col:34> col:34 invalid str 'int *'
| |-ParmVarDecl 0x1cb99ed2500 <col:39, col:51> col:51 used _data 'const void *'
| |-ParmVarDecl 0x1cb99ed2580 <col:58, col:62> col:62 used len 'int'
| `-CompoundStmt 0x1cb99ecc690 <line:265:1, line:291:1>
|   |-DeclStmt 0x1cb99ed27c0 <line:266:5, col:21>
|   | `-VarDecl 0x1cb99ed2758 <col:5, col:20> col:20 used c 'unsigned char *'
|   |-DeclStmt 0x1cb99ed28c0 <line:267:5, col:29>
|   | `-VarDecl 0x1cb99ed27f0 <col:5, col:24> col:17 used data 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1cb99ed28a8 <col:24> 'const char *' <BitCast>
|   |     `-ImplicitCastExpr 0x1cb99ed2890 <col:24> 'const void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1cb99ed2858 <col:24> 'const void *' lvalue ParmVar 0x1cb99ed2500 '_data' 'const void *'
|   |-IfStmt 0x1cb99ed2da8 <line:269:5, line:274:5>
|   | |-BinaryOperator 0x1cb99ed2950 <line:269:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x1cb99ed2938 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1cb99ed28d8 <col:9> 'int' lvalue ParmVar 0x1cb99ed2580 'len' 'int'
|   | | `-IntegerLiteral 0x1cb99ed2910 <col:15> 'int' 0
|   | `-CompoundStmt 0x1cb99ed2d90 <col:18, line:274:5>
|   |   `-IfStmt 0x1cb99ed2d68 <line:270:9, line:273:30> has_else
|   |     |-BinaryOperator 0x1cb99ed2a60 <line:270:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1cb99ed2a30 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:270:13> 'const char *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1cb99ed2970 <col:13> 'const char *' lvalue Var 0x1cb99ed27f0 'data' 'const char *'
|   |     | `-ImplicitCastExpr 0x1cb99ed2a48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   |     |   `-ParenExpr 0x1cb99ed2a10 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x1cb99ed29e8 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x1cb99ed29a8 <col:26> 'int' 0
|   |     |-ReturnStmt 0x1cb99ed2ac8 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:271:13, col:22>
|   |     | `-ParenExpr 0x1cb99ed2aa8 <col:20, col:22> 'int'
|   |     |   `-IntegerLiteral 0x1cb99ed2a80 <col:21> 'int' 0
|   |     `-BinaryOperator 0x1cb99ed2d48 <line:273:13, col:30> 'int' '='
|   |       |-DeclRefExpr 0x1cb99ed2ad8 <col:13> 'int' lvalue ParmVar 0x1cb99ed2580 'len' 'int'
|   |       `-ImplicitCastExpr 0x1cb99ed2d30 <col:19, col:30> 'int' <IntegralCast>
|   |         `-CallExpr 0x1cb99ed2cf0 <col:19, col:30> 'unsigned long long'
|   |           |-ImplicitCastExpr 0x1cb99ed2cd8 <col:19> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |           | `-DeclRefExpr 0x1cb99ed2c40 <col:19> 'unsigned long long (const char *)' Function 0x1cb99ed2b30 'strlen' 'unsigned long long (const char *)'
|   |           `-ImplicitCastExpr 0x1cb99ed2d18 <col:26> 'const char *' <LValueToRValue>
|   |             `-DeclRefExpr 0x1cb99ed2c78 <col:26> 'const char *' lvalue Var 0x1cb99ed27f0 'data' 'const char *'
|   |-IfStmt 0x1cb99ecc200 <line:275:5, line:283:5>
|   | |-OpaqueValueExpr 0x1cb99ecc1e8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1cb99ecc1d0 <line:275:54, line:283:5>
|   |   `-IfStmt 0x1cb99ecc1b8 <line:278:9, line:282:9>
|   |     |-OpaqueValueExpr 0x1cb99ecc1a0 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1cb99ecc188 <line:278:32, line:282:9>
|   |       `-ReturnStmt 0x1cb99ecc178 <line:281:13, col:22>
|   |         `-ParenExpr 0x1cb99ecc158 <col:20, col:22> 'int'
|   |           `-IntegerLiteral 0x1cb99ecc130 <col:21> 'int' 0
|   |-IfStmt 0x1cb99ecc620 <line:285:5, line:289:5>
|   | |-BinaryOperator 0x1cb99ecc310 <line:285:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1cb99ecc2e0 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:285:9> 'const char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1cb99ecc238 <col:9> 'const char *' lvalue Var 0x1cb99ed27f0 'data' 'const char *'
|   | | `-ImplicitCastExpr 0x1cb99ecc2f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | |   `-ParenExpr 0x1cb99ecc2c0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1cb99ecc298 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1cb99ecc258 <col:26> 'int' 0
|   | `-CompoundStmt 0x1cb99ecc610 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:285:23, line:289:5>
|   `-ReturnStmt 0x1cb99ecc680 <line:290:5, col:14>
|     `-ParenExpr 0x1cb99ecc660 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1cb99ecc638 <col:13> 'int' 1
|-FunctionDecl 0x1cb99ed2b30 <line:273:19> col:19 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1cb99ed2bd0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1cb99ecc370 <line:286:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1cb99ecc410 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1cb99ecc478 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1cb99ecc4e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cb99ecc8c8 <line:293:1, line:298:1> line:293:6 invalid ASN1_STRING_set0 'void (int *, void *, int)'
| |-ParmVarDecl 0x1cb99ecc6e8 <col:23, col:36> col:36 invalid str 'int *'
| |-ParmVarDecl 0x1cb99ecc768 <col:41, col:47> col:47 used data 'void *'
| |-ParmVarDecl 0x1cb99ecc7e8 <col:53, col:57> col:57 used len 'int'
| `-CompoundStmt 0x1cb99eccb18 <line:294:1, line:298:1>
|-FunctionDecl 0x1cb99eccbf0 <line:300:1, line:303:1> line:300:14 invalid ASN1_STRING_new 'int *(void)'
| `-CompoundStmt 0x1cb99eccdb8 <line:301:1, line:303:1>
|-FunctionDecl 0x1cb99eccef0 <line:305:1, line:316:1> line:305:14 invalid ASN1_STRING_type_new 'int *(int)'
| |-ParmVarDecl 0x1cb99ecce10 <col:35, col:39> col:39 used type 'int'
| `-CompoundStmt 0x1cb99ecd2a0 <line:306:1, line:316:1>
|   `-IfStmt 0x1cb99ecd268 <line:310:5, line:313:5>
|     |-OpaqueValueExpr 0x1cb99ecd250 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1cb99ecd238 <line:310:22, line:313:5>
|       `-ReturnStmt 0x1cb99ecd228 <line:312:9, col:21>
|         `-ImplicitCastExpr 0x1cb99ecd210 <col:16, col:21> 'int *' <NullToPointer>
|           `-ParenExpr 0x1cb99ecd1f0 <col:16, col:21> 'void *'
|             `-ParenExpr 0x1cb99ecd1d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|               `-CStyleCastExpr 0x1cb99ecd1a8 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x1cb99ecd168 <col:26> 'int' 0
|-FunctionDecl 0x1cb99ecd3e8 <.//openssl//file_jk/after\crypto\asn1\asn1_lib.c:318:1, line:326:1> line:318:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x1cb99ecd2d0 <col:29, col:42> col:42 invalid a 'int *'
| |-ParmVarDecl 0x1cb99ecd350 <col:45, col:49> col:49 used embed 'int'
| `-CompoundStmt 0x1cb99ecd650 <line:319:1, line:326:1>
|   `-IfStmt 0x1cb99ecd560 <line:320:5, line:321:9>
|     |-OpaqueValueExpr 0x1cb99ecd548 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x1cb99ecd538 <col:9>
|-FunctionDecl 0x1cb99ecd748 <line:328:1, line:333:1> line:328:6 invalid ASN1_STRING_free 'void (int *)'
| |-ParmVarDecl 0x1cb99ecd680 <col:23, col:36> col:36 invalid a 'int *'
| `-CompoundStmt 0x1cb99ecd8d0 <line:329:1, line:333:1>
|   `-IfStmt 0x1cb99ecd8b8 <line:330:5, line:331:9>
|     |-OpaqueValueExpr 0x1cb99ecd8a0 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x1cb99ecd890 <col:9>
|-FunctionDecl 0x1cb99ecd990 <line:335:1, line:342:1> line:335:6 invalid ASN1_STRING_clear_free 'void (int *)'
| |-ParmVarDecl 0x1cb99ecd900 <col:29, col:42> col:42 invalid a 'int *'
| `-CompoundStmt 0x1cb99ecdc28 <line:336:1, line:342:1>
|   `-IfStmt 0x1cb99ecdb00 <line:337:5, line:338:9>
|     |-OpaqueValueExpr 0x1cb99ecdae8 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x1cb99ecdad8 <col:9>
|-FunctionDecl 0x1cb99ecadf0 <line:344:1, line:357:1> line:344:5 invalid ASN1_STRING_cmp 'int (const int *, const int *)'
| |-ParmVarDecl 0x1cb99ecdc58 <col:21, col:40> col:40 invalid a 'const int *'
| |-ParmVarDecl 0x1cb99ecdcd8 <col:43, col:62> col:62 invalid b 'const int *'
| `-CompoundStmt 0x1cb99ecb458 <line:345:1, line:357:1>
|   |-DeclStmt 0x1cb99ecaf38 <line:346:5, col:10>
|   | `-VarDecl 0x1cb99ecaed0 <col:5, col:9> col:9 used i 'int'
|   `-IfStmt 0x1cb99ecb430 <line:349:5, line:356:18> has_else
|     |-BinaryOperator 0x1cb99ecafe8 <line:349:9, col:14> 'int' '=='
|     | |-ImplicitCastExpr 0x1cb99ecafd0 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1cb99ecaf88 <col:9> 'int' lvalue Var 0x1cb99ecaed0 'i' 'int'
|     | `-IntegerLiteral 0x1cb99ecafa8 <col:14> 'int' 0
|     |-CompoundStmt 0x1cb99ecb3b0 <col:17, line:355:5>
|     | `-IfStmt 0x1cb99ecb388 <line:351:9, line:354:22> has_else
|     |   |-BinaryOperator 0x1cb99ecb2f8 <line:351:13, col:18> 'int' '=='
|     |   | |-ImplicitCastExpr 0x1cb99ecb2e0 <col:13> 'int' <LValueToRValue>
|     |   | | `-DeclRefExpr 0x1cb99ecb298 <col:13> 'int' lvalue Var 0x1cb99ecaed0 'i' 'int'
|     |   | `-IntegerLiteral 0x1cb99ecb2b8 <col:18> 'int' 0
|     |   |-NullStmt 0x1cb99ecb380 <line:352:13>
|     |   `-ReturnStmt 0x1cb99ecb370 <line:354:13, col:22>
|     |     `-ImplicitCastExpr 0x1cb99ecb358 <col:20, col:22> 'int' <LValueToRValue>
|     |       `-ParenExpr 0x1cb99ecb338 <col:20, col:22> 'int' lvalue
|     |         `-DeclRefExpr 0x1cb99ecb318 <col:21> 'int' lvalue Var 0x1cb99ecaed0 'i' 'int'
|     `-ReturnStmt 0x1cb99ecb420 <line:356:9, col:18>
|       `-ImplicitCastExpr 0x1cb99ecb408 <col:16, col:18> 'int' <LValueToRValue>
|         `-ParenExpr 0x1cb99ecb3e8 <col:16, col:18> 'int' lvalue
|           `-DeclRefExpr 0x1cb99ecb3c8 <col:17> 'int' lvalue Var 0x1cb99ecaed0 'i' 'int'
|-FunctionDecl 0x1cb99ecb070 <line:350:13> col:13 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1cb99ecb110 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1cb99ecb178 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1cb99ecb1e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1cb99ecb560 <line:359:1, line:362:1> line:359:5 invalid ASN1_STRING_length 'int (const int *)'
| |-ParmVarDecl 0x1cb99ecb490 <col:24, col:43> col:43 invalid x 'const int *'
| `-CompoundStmt 0x1cb99ecb620 <line:360:1, line:362:1>
|-FunctionDecl 0x1cb99ecb760 <line:364:1, line:367:1> line:364:6 invalid ASN1_STRING_length_set 'void (int *, int)'
| |-ParmVarDecl 0x1cb99ecb648 <col:29, col:42> col:42 invalid x 'int *'
| |-ParmVarDecl 0x1cb99ecb6c8 <col:45, col:49> col:49 used len 'int'
| `-CompoundStmt 0x1cb99ecb860 <line:365:1, line:367:1>
|-FunctionDecl 0x1cb99ecb920 <line:369:1, line:372:1> line:369:5 invalid ASN1_STRING_type 'int (const int *)'
| |-ParmVarDecl 0x1cb99ecb888 <col:22, col:41> col:41 invalid x 'const int *'
| `-CompoundStmt 0x1cb99ecb9e0 <line:370:1, line:372:1>
|-FunctionDecl 0x1cb99ecbad0 <line:374:1, line:377:1> line:374:22 invalid ASN1_STRING_get0_data 'const unsigned char *(const int *)'
| |-ParmVarDecl 0x1cb99ecba08 <col:44, col:63> col:63 invalid x 'const int *'
| `-CompoundStmt 0x1cb99ecbb90 <line:375:1, line:377:1>
`-FunctionDecl 0x1cb99ecbc80 <line:380:1, line:383:1> line:380:16 invalid ASN1_STRING_data 'unsigned char *(int *)'
  |-ParmVarDecl 0x1cb99ecbbb8 <col:33, col:46> col:46 invalid x 'int *'
  `-CompoundStmt 0x1cb99ecbd40 <line:381:1, line:383:1>
