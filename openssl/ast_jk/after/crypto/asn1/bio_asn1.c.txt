TranslationUnitDecl 0x2329f9caae8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2329f9cb380 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2329f9cb080 '__int128'
|-TypedefDecl 0x2329f9cb3f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2329f9cb0a0 'unsigned __int128'
|-TypedefDecl 0x2329f9cb728 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2329f9cb4e0 'struct __NSConstantString_tag'
|   `-Record 0x2329f9cb448 '__NSConstantString_tag'
|-TypedefDecl 0x2329f9cb798 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2329f9cacc0 'unsigned long long'
|-TypedefDecl 0x2329f9cb830 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2329f9cb7f0 'char *'
|   `-BuiltinType 0x2329f9cab80 'char'
|-TypedefDecl 0x2329f9cb8a0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2329f9cb7f0 'char *'
|   `-BuiltinType 0x2329f9cab80 'char'
|-TypedefDecl 0x2329f9cb960 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2329f9cacc0 'unsigned long long'
|-TypedefDecl 0x2329f9cb9d0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2329f9cb7f0 'char *'
|   `-BuiltinType 0x2329f9cab80 'char'
|-FunctionDecl 0x232a1487430 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x232a14874d0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x232a1487540 <col:21> Implicit
|-FunctionDecl 0x232a1487598 prev 0x232a1487430 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x232a14872c0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x232a1487688 <col:21> Inherited Implicit
|-TypedefDecl 0x232a14876c8 prev 0x2329f9cb798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2329f9cacc0 'unsigned long long'
|-TypedefDecl 0x232a1487770 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x232a1487740 'size_t' sugar
|   |-Typedef 0x232a14876c8 'size_t'
|   `-BuiltinType 0x2329f9cacc0 'unsigned long long'
|-TypedefDecl 0x232a14877e0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2329f9cac20 'long long'
|-TypedefDecl 0x232a1487850 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2329f9cac20 'long long'
|-TypedefDecl 0x232a14878c0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2329f9cac60 'unsigned short'
|-TypedefDecl 0x232a1487930 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x2329f9cac60 'unsigned short'
|-TypedefDecl 0x232a14879a0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2329f9cac60 'unsigned short'
|-TypedefDecl 0x232a1487a10 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2329f9cabe0 'int'
|-TypedefDecl 0x232a1487a80 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2329f9cac00 'long'
|-TypedefDecl 0x232a1487af0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2329f9cac20 'long long'
|-TypedefDecl 0x232a1487b80 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x232a1487b50 '__time64_t' sugar
|   |-Typedef 0x232a1487af0 '__time64_t'
|   `-BuiltinType 0x2329f9cac20 'long long'
|-FunctionDecl 0x232a1487cf8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x232a1487f18 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x232a14c4090 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x232a1488058 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x232a14880d0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x232a1488148 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x232a14881c8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x232a14c3e30 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x232a14c4170 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x232a14c4230 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x232a14c43a0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x232a14c4350 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x232a14c42f0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x232a14c4210 'struct threadlocaleinfostruct'
|       `-Record 0x232a14cbeb0 'threadlocaleinfostruct'
|-TypedefDecl 0x232a14c44b0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x232a14c4460 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x232a14c4400 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x232a14c42d0 'struct threadmbcinfostruct'
|       `-Record 0x232a14c4230 'threadmbcinfostruct'
|-RecordDecl 0x232a14c4508 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x232a14c45c0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x232a14c4680 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x232a14c4710 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x232a14c47a0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x232a14c4858 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x232a14c4800 'struct localeinfo_struct' sugar
|   `-RecordType 0x232a14c4660 'struct localeinfo_struct'
|     `-Record 0x232a14c45c0 'localeinfo_struct'
|-TypedefDecl 0x232a14c4930 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x232a14c48e0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x232a14c4800 'struct localeinfo_struct' sugar
|     `-RecordType 0x232a14c4660 'struct localeinfo_struct'
|       `-Record 0x232a14c45c0 'localeinfo_struct'
|-RecordDecl 0x232a14c49a8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x232a14c4a60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x232a14c4ad8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x232a14c4b98 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x232a14c4c30 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x232a14c4ca0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x232a14c4d58 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x232a14c4d00 'struct localerefcount' sugar
|   `-RecordType 0x232a14c4a40 'struct localerefcount'
|     `-Record 0x232a14c49a8 'localerefcount'
|-RecordDecl 0x232a14cbeb0 prev 0x232a14c4170 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x232a14cbf30 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x232a14cbfa8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x232a14cc018 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x232a14cc088 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x232a14cc0f8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x232a14cc2b8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x232a14cc328 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x232a14cc398 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x232a14cc408 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x232a14cc478 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x232a14cc4e8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x232a14cc540 parent 0x2329f9caae8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x232a14cc6d0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x232a14cc740 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x232a14cc7b0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x232a14cc820 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x232a14cc8c0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x232a14cc930 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x232a14cca40 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x232a14ccb78 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x232a14ccc28 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x232a14ccbd0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x232a14c4210 'struct threadlocaleinfostruct'
|     `-Record 0x232a14cbeb0 'threadlocaleinfostruct'
|-FunctionDecl 0x232a14cd0d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x232a14cccb0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x232a14ccd60 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x232a14ccde0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x232a14ccec0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14cd498 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x232a14cd538 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x232a14cd5a0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x232a14cd608 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x232a14cd688 prev 0x232a14cd498 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x232a14cd1c0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x232a14cd240 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x232a14cd2b8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14cda48 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x232a14cd770 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x232a14cd7f0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x232a14cd868 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14cdf20 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a14cdb30 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x232a14cdbb0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x232a14cdc28 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a14cdcc0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a14ce228 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x232a14ce2c8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x232a14ce330 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x232a14ce398 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x232a14ce418 prev 0x232a14ce228 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x232a14ce010 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x232a14ce090 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x232a14ce108 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14ce7d8 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x232a14ce878 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x232a14ce8e0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x232a14ce948 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x232a14ce9c8 prev 0x232a14ce7d8 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x232a14ce500 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x232a14ce580 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x232a14ce5f8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14ceee0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x232a14cead8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x232a14ceb70 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x232a14cebf0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x232a14cec68 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x232a14cf2a8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x232a14cf348 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x232a14cf3b0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x232a14cf418 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x232a14cf498 prev 0x232a14cf2a8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x232a14cefd0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x232a14cf050 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x232a14cf0c8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14cf918 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x232a14cf9b8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x232a14cfa20 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x232a14cfa88 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x232a14cfaf0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x232a14cfb78 prev 0x232a14cf918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x232a14cf660 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x232a14cf6e0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x232a14cf760 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x232a14cf7d8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a14cfc38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x232a14c8008 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x232a14cfe00 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x232a14c7e70 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x232a14c7ee8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a14c80c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x232a14c84b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x232a14c81e8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x232a14c8260 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a14c82e0 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x232a14c8880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x232a14c8690 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x232a14c8710 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x232a14c8930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a14c8d40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x232a14c8a78 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x232a14c8af0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x232a14c8b70 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x232a14d41f0 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x232a14d4290 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x232a14d42f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x232a14d4370 prev 0x232a14d41f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x232a14d4008 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x232a14d4088 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x232a14d4420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a14d4778 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x232a14d4568 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x232a14d45e0 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x232a14d4660 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x232a14d4aa0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x232a14d4b40 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x232a14d4ba8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x232a14d4c20 prev 0x232a14d4aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x232a14d4920 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x232a14d49a0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x232a14d4cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a14d7030 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x232a14d70d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x232a14d7138 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x232a14d71b0 prev 0x232a14d7030 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x232a14d4e18 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x232a14d4e98 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x232a14d7400 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x232a14d74a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x232a14d7510 prev 0x232a14d7400 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x232a14d7290 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x232a14d7808 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x232a14d75e8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x232a14d7660 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14d7a58 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x232a14d78e8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x232a14d7960 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x232a14d7d88 <line:131:1, line:133:1>
|   `-ReturnStmt 0x232a14d7d78 <line:132:5, col:51>
|     `-ConditionalOperator 0x232a14d7d48 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x232a14d7bb8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x232a14d7b98 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x232a14d7b68 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x232a14d7b20 <col:13> 'const char *' lvalue ParmVar 0x232a14d78e8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x232a14d7b80 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x232a14d7b40 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x232a14d7d30 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x232a14d7bd8 <col:24> 'int' 0
|       `-CallExpr 0x232a14d7cd0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x232a14d7cb8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x232a14d7c00 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x232a14d7808 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x232a14d7d00 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x232a14d7c20 <col:36> 'const char *' lvalue ParmVar 0x232a14d78e8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x232a14d7d18 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x232a14d7c40 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x232a14d7960 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14d3058 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x232a14d7db8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x232a14d7e30 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x232a14d7eb0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x232a14d2f20 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x232a14d3360 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x232a14d3400 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x232a14d3468 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x232a14d34d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x232a14d3550 prev 0x232a14d3360 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x232a14d3148 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x232a14d31c8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x232a14d3240 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14d3788 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x232a14d3638 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x232a14d3a50 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x232a14d3af0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x232a14d3b58 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x232a14d3bd0 prev 0x232a14d3a50 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x232a14d3860 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x232a14d38e0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x232a14d3e30 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x232a14d3cb0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x232a14d3d30 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x232a14d60d0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x232a14d5f50 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x232a14d5fd0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x232a14d6488 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x232a14d61b0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x232a14d6230 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x232a14d62a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a14d66f0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x232a14d6570 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x232a14d65f0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x232a14d69e8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x232a14d67d0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x232a14d6850 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x232a14d68c8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a14d6c50 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x232a14d6ad0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x232a14d6b50 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x232a14cfef0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x232a14d6d30 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x232a14d6db0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x232a14d6e28 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a14d02a8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x232a14cffd8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x232a14d0058 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x232a14d00d0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14d0710 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a14d0390 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x232a14d0410 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x232a14d0488 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a14d0500 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a14d0a18 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x232a14d0800 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x232a14d0880 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x232a14d08f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14d0db0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a14d0b00 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x232a14d0b80 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x232a14d0bf8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a14d0c70 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a14d8198 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x232a14d8238 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x232a14d82a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x232a14d8318 prev 0x232a14d8198 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x232a14d7f70 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x232a14d7ff0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x232a14d85d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x232a14d84f0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x232a14d8678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a14d8a50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x232a14d87c0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x232a14d8838 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a14d88b8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x232a14d8d68 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x232a14d8e08 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x232a14d8e78 prev 0x232a14d8d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x232a14d8c30 <col:90> col:93 'int'
| `-DeprecatedAttr 0x232a14d8f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a14d1210 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x232a14d1000 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x232a14d1078 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a14d10f8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x232a14d1518 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x232a14d12f8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x232a14d1370 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14d1808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x232a14d16b8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x232a14d18b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a14d1cc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a14d19f8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x232a14d1a70 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a14d1ae8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a14d9130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x232a14d1e68 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x232a14d8f80 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x232a14d91e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a14d9698 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x232a14d9328 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x232a14d93a0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x232a14d9420 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x232a14d9498 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x232a14d9b18 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x232a14d9bb8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x232a14d9c20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x232a14d9c88 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x232a14d9d08 prev 0x232a14d9b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x232a14d9848 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x232a14d98c8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x232a14d9940 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a14d9dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a14d20c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x232a14d2160 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x232a14d21c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x232a14d2230 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x232a14d22b0 prev 0x232a14d20c0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x232a14d9f08 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x232a14d1f28 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x232a14d1fa0 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14d25b0 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x232a14d2398 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x232a14d2418 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x232a14d2490 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14d2948 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a14d2698 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x232a14d2718 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x232a14d2790 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a14d2808 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a14d2ce0 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x232a14d2a38 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x232a14d2ab0 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x232a14d2b30 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x232a14d2ba8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x232a14da128 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x232a14da1c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x232a14da230 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x232a14da298 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x232a14da318 prev 0x232a14da128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x232a14d2e90 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x232a14d9f90 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x232a14da008 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a14da3d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a14da888 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x232a14da518 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x232a14da590 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x232a14da610 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x232a14da688 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a14dad08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x232a14daa38 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x232a14daab8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x232a14dab30 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a14dadc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a14db110 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x232a14db1b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x232a14db218 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x232a14db290 prev 0x232a14db110 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x232a14daf08 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x232a14dafa0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x232a14db4f0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x232a14db590 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x232a14db5f8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x232a14db670 prev 0x232a14db4f0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x232a14db370 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x232a14db3f0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x232a14db830 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x232a14db750 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x232a14dba80 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x232a14dbb20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x232a14dbb88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x232a14dbc00 prev 0x232a14dba80 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x232a14db908 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x232a14db988 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x232a14dbe60 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x232a14dbf00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x232a154efc0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x232a154f038 prev 0x232a14dbe60 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x232a14dbce0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x232a14dbd60 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x232a154f358 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x232a154f3f8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x232a154f460 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x232a154f4d8 prev 0x232a154f358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x232a154f1d8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x232a154f258 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x232a154f588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a154f968 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x232a154f6d0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x232a154f750 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x232a154f7d0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x232a154fbc0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x232a154fa50 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x232a154fac8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x232a154fe40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x232a154fd60 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x232a154fee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a15522f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a15520f0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x232a1552168 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a15521e0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a1552618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x232a15524a0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x232a1552518 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x232a15526c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a1552ae0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x232a1552b80 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x232a1552be8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x232a1552c50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x232a1552cd0 prev 0x232a1552ae0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x232a1552810 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x232a1552890 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x232a1552908 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a1553138 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a1552db8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x232a1552e38 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x232a1552eb0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a1552f28 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a15533e0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x232a1553480 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x232a15534f0 prev 0x232a15533e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x232a1553300 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x232a1553598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x232a15538e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x232a1553760 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x232a15537e0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x232a1553990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x232a1553cd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x232a1553b58 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x232a1553bd8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x232a1553d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x232a1551018 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x232a1553f50 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x232a15510c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x232a15514d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x232a15512c0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x232a1551340 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x232a15513b8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a1551590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x232a1551970 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x232a1551758 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x232a15517d8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x232a1551850 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a1551a28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x232a1551cd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x232a1551bf0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x232a1551d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x232a1555120 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x232a1551f40 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x232a1555020 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x232a15551d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x232a1555478 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x232a1555398 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x232a1555520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x232a15557b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x232a1555640 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x232a1555b40 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x232a1555880 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x232a15558f8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x232a1555970 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x232a1555ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a1555ce0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x232a1555d58 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x232a1555fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a15502e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x232a1550388 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x232a15503f0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x232a1550468 prev 0x232a15502e8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x232a15500c8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x232a1550140 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x232a1550760 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x232a1550800 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x232a1550868 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x232a15508e0 prev 0x232a1550760 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x232a1550540 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x232a15505b8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x232a1550bc0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x232a15509b8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x232a1550a30 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x232a1550aa8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x232a1550ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a1550d60 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x232a1550dd8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x232a1550f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a155a388 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a155a168 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x232a155a1e0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x232a155a5d0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x232a155a670 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x232a155a6e0 prev 0x232a155a5d0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x232a155a460 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x232a155a9c8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x232a155a7b0 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x232a155a828 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a155ac10 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x232a155aaa0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x232a155ab18 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x232a155afa8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x232a155af98 <line:307:5, col:56>
|     `-ConditionalOperator 0x232a155af68 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x232a155add0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x232a155adb0 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x232a155ad80 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x232a155acd8 <col:13> 'const wchar_t *' lvalue ParmVar 0x232a155aaa0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x232a155ad98 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x232a155ad60 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x232a155ad38 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x232a155acf8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x232a155af50 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x232a155adf0 <col:29> 'int' 0
|       `-CallExpr 0x232a155aef0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x232a155aed8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x232a155ae18 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x232a155a9c8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x232a155af20 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x232a155ae38 <col:41> 'const wchar_t *' lvalue ParmVar 0x232a155aaa0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x232a155af38 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x232a155ae58 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x232a155ab18 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x232a1557338 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x232a155afd0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x232a1557040 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x232a15570b8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x232a1557130 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x232a15577a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x232a15574e0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x232a1557558 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x232a15575d0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a1557858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a1557c68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x232a1557d08 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x232a1557d70 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x232a1557dd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x232a1557e58 prev 0x232a1557c68 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x232a1557998 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a1557a10 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x232a1557a88 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a15541c0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x232a1557f38 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x232a1557fb0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x232a1554010 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x232a1554088 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x232a1554570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x232a1554368 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x232a15543e0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x232a1554458 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a1554628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a1554988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a1554768 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x232a15547e0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x232a1554bd0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x232a1554a60 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x232a1554ad8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x232a1554e18 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a1554ca8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x232a1554d20 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x232a15580b0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a1554ef0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x232a1554f68 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x232a15583b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a1558248 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x232a15582c0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x232a1558468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a15588d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x232a15585a8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x232a1558620 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x232a1558700 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x232a1558bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x232a1558a78 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x232a1558c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a15590d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x232a1558dd8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x232a1558e50 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a1558ed0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x232a1559380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x232a15592a8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x232a1559428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a15597f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x232a1559568 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x232a15595e0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a1559658 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x232a1559a48 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a15598d0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x232a1559948 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x232a1559de8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x232a1559b20 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a1559b98 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x232a1559c10 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a15560b8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x232a1559ec8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a1559f40 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x232a1559fb8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a1556510 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a1556198 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a1556210 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x232a1556288 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a1556300 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a1556968 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x232a15565f8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x232a1556670 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x232a15566e8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x232a1556760 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a1556dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x232a1556b10 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x232a1556b88 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x232a1556c00 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a1556e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a1564220 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x232a1556fc8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x232a15645b0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x232a15642f0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x232a1564368 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a15643e0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x232a1564968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x232a1564750 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x232a15647c8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x232a1564a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a1564d78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x232a1564b58 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x232a1564bd0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x232a1564fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x232a1564f10 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x232a1565090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a155f480 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a155f1b8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x232a155f230 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a155f2a8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a155f838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x232a155f620 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x232a155f698 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x232a155f8e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a155fb98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x232a155fa28 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x232a155faa0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x232a155fe08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x232a155fd30 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x232a155feb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a155d230 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a155fff0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x232a155d0a0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a155d118 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a155d540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x232a155d3d0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x232a155d448 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x232a155d5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x232a155d9f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x232a155d730 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x232a155d7a8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x232a155d820 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a155de38 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a155dad0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x232a155db48 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x232a155dbc0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a155dc38 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a155e0b0 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a155df20 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x232a155df98 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x232a155e398 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x232a155e188 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a155e200 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x232a155e278 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a155e5f0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a155e478 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x232a155e4f0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x232a155e8d8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x232a155e6c8 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a155e740 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x232a155e7b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a155ebc8 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x232a155e9b8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a155ea30 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x232a155eaa8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a155ef50 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a155eca8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a155ed20 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x232a155ed98 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a155ee10 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a1563298 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x232a155f038 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a1563100 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x232a1563178 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x232a1563620 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x232a1563378 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a15633f0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x232a1563468 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x232a15634e0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x232a1563880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x232a15637a8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x232a1563928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x232a1563c60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a1563ae8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a1563b60 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x232a1563d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x232a1565120 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x232a1563ed0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a1563f48 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x232a1563fc0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a15651d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x232a15655a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x232a1565398 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x232a1565410 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x232a1565488 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x232a1565658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x232a15658f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x232a1565818 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x232a1565998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x232a1565cc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x232a1565b58 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x232a1565bd0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x232a1565d78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x232a1566010 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x232a1565f38 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x232a15660b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x232a1567390 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x232a15672b8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x232a1567438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x232a1567770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x232a15675f8 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x232a1567670 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x232a1567820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x232a1567930 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:23:9, line:31:1> line:23:9
| |-EnumConstantDecl 0x232a1567a10 <line:24:5> col:5 referenced ASN1_STATE_START 'int'
| |-EnumConstantDecl 0x232a1567a68 <line:25:5> col:5 referenced ASN1_STATE_PRE_COPY 'int'
| |-EnumConstantDecl 0x232a1567ac0 <line:26:5> col:5 referenced ASN1_STATE_HEADER 'int'
| |-EnumConstantDecl 0x232a1567b18 <line:27:5> col:5 referenced ASN1_STATE_HEADER_COPY 'int'
| |-EnumConstantDecl 0x232a1567b70 <line:28:5> col:5 referenced ASN1_STATE_DATA_COPY 'int'
| |-EnumConstantDecl 0x232a1567bc8 <line:29:5> col:5 referenced ASN1_STATE_POST_COPY 'int'
| `-EnumConstantDecl 0x232a1567c20 <line:30:5> col:5 referenced ASN1_STATE_DONE 'int'
|-TypedefDecl 0x232a1567cd8 <line:23:1, line:31:3> col:3 referenced asn1_bio_state_t 'enum asn1_bio_state_t':'asn1_bio_state_t'
| `-ElaboratedType 0x232a1567c80 'enum asn1_bio_state_t' sugar
|   `-EnumType 0x232a15679f0 'asn1_bio_state_t'
|     `-Enum 0x232a1567930 ''
|-RecordDecl 0x232a1567d48 <line:33:9, line:36:1> line:33:16 invalid struct BIO_ASN1_EX_FUNCS_st definition
| |-FieldDecl 0x232a1567e18 <line:34:5, col:19> col:19 invalid ex_func 'int *'
| `-FieldDecl 0x232a1567e88 <line:35:5, col:19> col:19 invalid ex_free_func 'int *'
|-TypedefDecl 0x232a1567f38 <line:33:1, line:36:3> col:3 referenced BIO_ASN1_EX_FUNCS 'struct BIO_ASN1_EX_FUNCS_st':'struct BIO_ASN1_EX_FUNCS_st'
| `-ElaboratedType 0x232a1567ee0 'struct BIO_ASN1_EX_FUNCS_st' sugar
|   `-RecordType 0x232a1567de0 'struct BIO_ASN1_EX_FUNCS_st'
|     `-Record 0x232a1567d48 'BIO_ASN1_EX_FUNCS_st'
|-RecordDecl 0x232a1567fa8 <line:38:9, line:59:1> line:38:16 invalid struct BIO_ASN1_BUF_CTX_t definition
| |-FieldDecl 0x232a1568090 <line:40:5, col:22> col:22 referenced state 'asn1_bio_state_t':'asn1_bio_state_t'
| |-FieldDecl 0x232a15600d0 <line:42:5, col:20> col:20 referenced buf 'unsigned char *'
| |-FieldDecl 0x232a1560140 <line:44:5, col:9> col:9 referenced bufsize 'int'
| |-FieldDecl 0x232a15601b0 <line:46:5, col:9> col:9 referenced bufpos 'int'
| |-FieldDecl 0x232a1560220 <line:48:5, col:9> col:9 referenced buflen 'int'
| |-FieldDecl 0x232a1560290 <line:50:5, col:9> col:9 referenced copylen 'int'
| |-FieldDecl 0x232a1560300 <line:52:5, col:9> col:9 referenced asn1_class 'int'
| |-FieldDecl 0x232a1560370 <col:5, col:21> col:21 referenced asn1_tag 'int'
| |-FieldDecl 0x232a15603e0 <line:53:5, col:19> col:19 invalid prefix 'int *'
| |-FieldDecl 0x232a1560450 <col:5, col:28> col:28 invalid prefix_free 'int *'
| |-FieldDecl 0x232a15604c0 <col:5, col:42> col:42 invalid suffix 'int *'
| |-FieldDecl 0x232a1560530 <col:5, col:51> col:51 invalid suffix_free 'int *'
| |-FieldDecl 0x232a15605a0 <line:55:5, col:20> col:20 referenced ex_buf 'unsigned char *'
| |-FieldDecl 0x232a1560610 <line:56:5, col:9> col:9 referenced ex_len 'int'
| |-FieldDecl 0x232a1560680 <line:57:5, col:9> col:9 referenced ex_pos 'int'
| `-FieldDecl 0x232a15606f0 <line:58:5, col:11> col:11 referenced ex_arg 'void *'
|-TypedefDecl 0x232a15607a8 <line:38:1, line:59:3> col:3 referenced BIO_ASN1_BUF_CTX 'struct BIO_ASN1_BUF_CTX_t':'struct BIO_ASN1_BUF_CTX_t'
| `-ElaboratedType 0x232a1560750 'struct BIO_ASN1_BUF_CTX_t' sugar
|   `-RecordType 0x232a1568040 'struct BIO_ASN1_BUF_CTX_t'
|     `-Record 0x232a1567fa8 'BIO_ASN1_BUF_CTX_t'
|-FunctionDecl 0x232a1560a20 <line:61:1, col:59> col:12 invalid asn1_bio_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x232a1560830 <col:27, col:32> col:32 invalid h 'int *'
| |-ParmVarDecl 0x232a15608b0 <col:35, col:47> col:47 buf 'const char *'
| `-ParmVarDecl 0x232a1560930 <col:52, col:56> col:56 num 'int'
|-FunctionDecl 0x232a1560ce0 <line:62:1, col:53> col:12 invalid asn1_bio_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x232a1560af0 <col:26, col:31> col:31 invalid h 'int *'
| |-ParmVarDecl 0x232a1560b70 <col:34, col:40> col:40 buf 'char *'
| `-ParmVarDecl 0x232a1560bf0 <col:45, col:49> col:49 size 'int'
|-FunctionDecl 0x232a1560f10 <line:63:1, col:49> col:12 invalid asn1_bio_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x232a1560db0 <col:26, col:31> col:31 invalid h 'int *'
| `-ParmVarDecl 0x232a1560e30 <col:34, col:46> col:46 str 'const char *'
|-FunctionDecl 0x232a1568210 <line:64:1, col:53> col:12 invalid asn1_bio_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x232a1560fd8 <col:26, col:31> col:31 invalid h 'int *'
| |-ParmVarDecl 0x232a1561058 <col:34, col:40> col:40 str 'char *'
| `-ParmVarDecl 0x232a1568168 <col:45, col:49> col:49 size 'int'
|-FunctionDecl 0x232a1568560 <line:65:1, col:65> col:13 invalid asn1_bio_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x232a15682e0 <col:27, col:32> col:32 invalid h 'int *'
| |-ParmVarDecl 0x232a1568360 <col:35, col:39> col:39 cmd 'int'
| |-ParmVarDecl 0x232a15683e0 <col:44, col:49> col:49 arg1 'long'
| `-ParmVarDecl 0x232a1568460 <col:55, col:61> col:61 arg2 'void *'
|-FunctionDecl 0x232a1568700 <line:66:1, col:31> col:12 invalid asn1_bio_new 'int (int *)' static
| `-ParmVarDecl 0x232a1568638 <col:25, col:30> col:30 invalid h 'int *'
|-FunctionDecl 0x232a1568858 <line:67:1, col:35> col:12 invalid asn1_bio_free 'int (int *)' static
| `-ParmVarDecl 0x232a15687c0 <col:26, col:31> col:31 invalid data 'int *'
|-FunctionDecl 0x232a1568b00 <line:68:1, col:68> col:13 invalid asn1_bio_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x232a1568918 <col:36, col:41> col:41 invalid h 'int *'
| |-ParmVarDecl 0x232a1568998 <col:44, col:48> col:48 cmd 'int'
| `-ParmVarDecl 0x232a1568a18 <col:53, col:66> col:66 invalid fp 'int *'
|-FunctionDecl 0x232a1568e10 <line:70:1, col:57> col:12 used asn1_bio_init 'int (BIO_ASN1_BUF_CTX *, int)' static
| |-ParmVarDecl 0x232a1568c48 <col:26, col:44> col:44 ctx 'BIO_ASN1_BUF_CTX *'
| `-ParmVarDecl 0x232a1568cc8 <col:49, col:53> col:53 size 'int'
|-FunctionDecl 0x232a1561170 <line:71:1, line:72:74> line:71:12 invalid asn1_bio_flush_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t)' static
| |-ParmVarDecl 0x232a1568ef0 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x232a1568f68 <col:38, col:56> col:56 ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x232a1568fe8 <line:72:30, col:44> col:44 invalid cleanup 'int *'
| `-ParmVarDecl 0x232a1569060 <col:53, col:70> col:70 next 'asn1_bio_state_t':'asn1_bio_state_t'
|-FunctionDecl 0x232a1561590 <line:73:1, line:76:58> line:73:12 invalid asn1_bio_setup_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t, asn1_bio_state_t)' static
| |-ParmVarDecl 0x232a1561248 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x232a15612c0 <col:38, col:56> col:56 ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x232a1561340 <line:74:30, col:44> col:44 invalid setup 'int *'
| |-ParmVarDecl 0x232a15613b8 <line:75:30, col:47> col:47 ex_state 'asn1_bio_state_t':'asn1_bio_state_t'
| `-ParmVarDecl 0x232a1561430 <line:76:30, col:47> col:47 other_state 'asn1_bio_state_t':'asn1_bio_state_t'
|-VarDecl 0x232a1561670 <line:78:1, col:25> col:25 invalid methods_asn1 'const int' static
|-FunctionDecl 0x232a1561800 <line:91:1, line:94:1> line:91:19 invalid BIO_f_asn1 'const int *(void)'
| `-CompoundStmt 0x232a15618b8 <line:92:1, line:94:1>
|-FunctionDecl 0x232a1561978 <line:96:1, line:110:1> line:96:12 invalid asn1_bio_new 'int (int *)' static
| |-ParmVarDecl 0x232a15618e0 <col:25, col:30> col:30 invalid b 'int *'
| `-CompoundStmt 0x232a15694c8 <line:97:1, line:110:1>
|   |-DeclStmt 0x232a1561d00 <line:98:5, col:57>
|   | `-VarDecl 0x232a1561a48 <col:5, col:56> col:23 used ctx 'BIO_ASN1_BUF_CTX *' cinit
|   |   `-ImplicitCastExpr 0x232a1561ce8 <col:29, col:56> 'BIO_ASN1_BUF_CTX *' <IntegralToPointer>
|   |     `-CallExpr 0x232a1561cc0 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x232a1561ca8 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x232a1561bc8 <col:29> 'int ()' Function 0x232a1561b00 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x232a1561c58 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x232a1561c38 <col:50, col:55> 'BIO_ASN1_BUF_CTX':'struct BIO_ASN1_BUF_CTX_t' lvalue
|   |           `-UnaryOperator 0x232a1561c20 <col:51, col:52> 'BIO_ASN1_BUF_CTX':'struct BIO_ASN1_BUF_CTX_t' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x232a1561c08 <col:52> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x232a1561be8 <col:52> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a1561a48 'ctx' 'BIO_ASN1_BUF_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x232a1561e60 <line:100:5, line:101:16>
|   | |-BinaryOperator 0x232a1561e08 <line:100:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x232a1561dd8 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:100:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x232a1561d18 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a1561a48 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x232a1561df0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x232a1561db8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x232a1561d90 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x232a1561d50 <col:26> 'int' 0
|   | `-ReturnStmt 0x232a1561e50 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:101:9, col:16>
|   |   `-IntegerLiteral 0x232a1561e28 <col:16> 'int' 0
|   |-IfStmt 0x232a1569210 <line:102:5, line:105:5>
|   | |-UnaryOperator 0x232a1561f98 <line:102:9, col:50> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x232a1561f50 <col:10, col:50> 'int'
|   | |   |-ImplicitCastExpr 0x232a1561f38 <col:10> 'int (*)(BIO_ASN1_BUF_CTX *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x232a1561e78 <col:10> 'int (BIO_ASN1_BUF_CTX *, int)' Function 0x232a1568e10 'asn1_bio_init' 'int (BIO_ASN1_BUF_CTX *, int)'
|   | |   |-ImplicitCastExpr 0x232a1561f80 <col:24> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x232a1561e98 <col:24> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a1561a48 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | |   `-IntegerLiteral 0x232a1561eb8 <line:21:31> 'int' 20
|   | `-CompoundStmt 0x232a15691f0 <line:102:53, line:105:5>
|   |   |-CallExpr 0x232a1569178 <line:103:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x232a1569160 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x232a15620a0 <col:9> 'int ()' Function 0x232a1561fd8 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x232a15691a0 <col:22> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x232a15620c0 <col:22> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a1561a48 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   `-ReturnStmt 0x232a15691e0 <line:104:9, col:16>
|   |     `-IntegerLiteral 0x232a15691b8 <col:16> 'int' 0
|   `-ReturnStmt 0x232a15694b8 <line:109:5, col:12>
|     `-IntegerLiteral 0x232a1569490 <col:12> 'int' 1
|-FunctionDecl 0x232a1569658 prev 0x232a1568e10 <line:112:1, line:122:1> line:112:12 used asn1_bio_init 'int (BIO_ASN1_BUF_CTX *, int)' static
| |-ParmVarDecl 0x232a1569508 <col:26, col:44> col:44 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x232a1569588 <col:49, col:53> col:53 used size 'int'
| `-CompoundStmt 0x232a1569d48 <line:113:1, line:122:1>
|   |-BinaryOperator 0x232a1569910 <line:114:5, col:35> 'unsigned char *' '='
|   | |-MemberExpr 0x232a1569740 <col:5, col:10> 'unsigned char *' lvalue ->buf 0x232a15600d0
|   | | `-ImplicitCastExpr 0x232a1569728 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x232a1569708 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a1569508 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x232a15698f8 <col:16, col:35> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x232a15698b8 <col:16, col:35> 'int'
|   |     |-ImplicitCastExpr 0x232a15698a0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x232a1569860 <col:16> 'int ()' Function 0x232a1569798 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x232a15698e0 <col:31> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x232a1569880 <col:31> 'int' lvalue ParmVar 0x232a1569588 'size' 'int'
|   |-IfStmt 0x232a1569aa8 <line:115:5, line:116:16>
|   | |-BinaryOperator 0x232a1569a50 <line:115:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x232a1569a20 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:115:9, col:14> 'unsigned char *' <LValueToRValue>
|   | | | `-MemberExpr 0x232a1569968 <col:9, col:14> 'unsigned char *' lvalue ->buf 0x232a15600d0
|   | | |   `-ImplicitCastExpr 0x232a1569950 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x232a1569930 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a1569508 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x232a1569a38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x232a1569a00 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x232a15699d8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x232a1569998 <col:26> 'int' 0
|   | `-ReturnStmt 0x232a1569a98 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:116:9, col:16>
|   |   `-IntegerLiteral 0x232a1569a70 <col:16> 'int' 0
|   |-BinaryOperator 0x232a1569b60 <line:117:5, col:20> 'int' '='
|   | |-MemberExpr 0x232a1569af8 <col:5, col:10> 'int' lvalue ->bufsize 0x232a1560140
|   | | `-ImplicitCastExpr 0x232a1569ae0 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x232a1569ac0 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a1569508 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x232a1569b48 <col:20> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x232a1569b28 <col:20> 'int' lvalue ParmVar 0x232a1569588 'size' 'int'
|   |-BinaryOperator 0x232a1569cf0 <line:120:5, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   | |-MemberExpr 0x232a1569c88 <col:5, col:10> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x232a1568090
|   | | `-ImplicitCastExpr 0x232a1569c70 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x232a1569c50 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a1569508 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x232a1569cd8 <col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |   `-DeclRefExpr 0x232a1569cb8 <col:18> 'int' EnumConstant 0x232a1567a10 'ASN1_STATE_START' 'int'
|   `-ReturnStmt 0x232a1569d38 <line:121:5, col:12>
|     `-IntegerLiteral 0x232a1569d10 <col:12> 'int' 1
|-FunctionDecl 0x232a1569e30 <line:124:1, line:141:1> line:124:12 invalid asn1_bio_free 'int (int *)' static
| |-ParmVarDecl 0x232a1569d98 <col:26, col:31> col:31 invalid b 'int *'
| `-CompoundStmt 0x232a156b650 <line:125:1, line:141:1>
|   |-DeclStmt 0x232a1569f68 <line:126:5, col:26>
|   | `-VarDecl 0x232a1569f00 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-IfStmt 0x232a156a058 <line:128:5, line:129:16>
|   | |-OpaqueValueExpr 0x232a156a040 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x232a156a030 <col:9, col:16>
|   |   `-IntegerLiteral 0x232a156a008 <col:16> 'int' 0
|   |-IfStmt 0x232a156b398 <line:132:5, line:133:16>
|   | |-BinaryOperator 0x232a156b340 <line:132:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x232a156b310 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:132:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x232a156b268 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a1569f00 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x232a156b328 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x232a156b2f0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x232a156b2c8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x232a156b288 <col:26> 'int' 0
|   | `-ReturnStmt 0x232a156b388 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:133:9, col:16>
|   |   `-IntegerLiteral 0x232a156b360 <col:16> 'int' 0
|   |-CallExpr 0x232a156b450 <line:135:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x232a156b438 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x232a156b3b0 <col:5> 'int ()' Function 0x232a1561fd8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x232a156b478 <col:18, col:23> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x232a156b408 <col:18, col:23> 'unsigned char *' lvalue ->buf 0x232a15600d0
|   |     `-ImplicitCastExpr 0x232a156b3f0 <col:18> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x232a156b3d0 <col:18> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a1569f00 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |-CallExpr 0x232a156b4e8 <line:136:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x232a156b4d0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x232a156b490 <col:5> 'int ()' Function 0x232a1561fd8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x232a156b510 <col:18> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x232a156b4b0 <col:18> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a1569f00 'ctx' 'BIO_ASN1_BUF_CTX *'
|   `-ReturnStmt 0x232a156b640 <line:140:5, col:12>
|     `-IntegerLiteral 0x232a156b618 <col:12> 'int' 1
|-FunctionDecl 0x232a156b850 <line:143:1, line:240:1> line:143:12 invalid asn1_bio_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x232a156b6a8 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x232a156b728 <col:35, col:47> col:47 used in 'const char *'
| |-ParmVarDecl 0x232a156b7a8 <col:51, col:55> col:55 used inl 'int'
| `-CompoundStmt 0x232a15116b0 <line:144:1, line:240:1>
|   |-DeclStmt 0x232a156b998 <line:145:5, col:26>
|   | `-VarDecl 0x232a156b930 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-DeclStmt 0x232a156bb50 <line:146:5, col:26>
|   | |-VarDecl 0x232a156b9c8 <col:5, col:9> col:9 used wrmax 'int'
|   | |-VarDecl 0x232a156ba48 <col:5, col:16> col:16 used wrlen 'int'
|   | `-VarDecl 0x232a156bac8 <col:5, col:23> col:23 used ret 'int'
|   |-DeclStmt 0x232a156bbe8 <line:147:5, col:21>
|   | `-VarDecl 0x232a156bb80 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-IfStmt 0x232a156c120 <line:152:5, line:153:16>
|   | |-OpaqueValueExpr 0x232a156c108 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x232a156c0f8 <col:9, col:16>
|   |   `-IntegerLiteral 0x232a156c0d0 <col:16> 'int' 0
|   |-BinaryOperator 0x232a156c1b8 <line:155:5, col:13> 'int' '='
|   | |-DeclRefExpr 0x232a156c138 <col:5> 'int' lvalue Var 0x232a156ba48 'wrlen' 'int'
|   | `-IntegerLiteral 0x232a156c190 <col:13> 'int' 0
|   |-BinaryOperator 0x232a156c250 <line:156:5, col:12> 'int' '='
|   | |-DeclRefExpr 0x232a156c1d8 <col:5> 'int' lvalue Var 0x232a156bac8 'ret' 'int'
|   | `-UnaryOperator 0x232a156c238 <col:11, col:12> 'int' prefix '-'
|   |   `-IntegerLiteral 0x232a156c210 <col:12> 'int' 1
|   |-ForStmt 0x232a15113d8 <line:158:5, line:232:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x232a15113c0 <line:158:14, line:232:5>
|   |   `-SwitchStmt 0x232a156c308 <line:159:9, line:230:9>
|   |     |-ImplicitCastExpr 0x232a156c2f0 <line:159:17, col:22> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x232a156c2d8 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |     |   `-MemberExpr 0x232a156c2a8 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x232a1568090
|   |     |     `-ImplicitCastExpr 0x232a156c290 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x232a156c270 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     `-CompoundStmt 0x232a15112d0 <col:29, line:230:9>
|   |       |-CaseStmt 0x232a156c360 <line:162:9, line:165:24>
|   |       | |-ConstantExpr 0x232a156c348 <line:162:14> 'int'
|   |       | | `-DeclRefExpr 0x232a156c328 <col:14> 'int' EnumConstant 0x232a1567a10 'ASN1_STATE_START' 'int'
|   |       | `-IfStmt 0x232a156c470 <line:163:13, line:165:24>
|   |       |   |-OpaqueValueExpr 0x232a156c458 <<invalid sloc>> '_Bool'
|   |       |   `-ReturnStmt 0x232a156c448 <col:17, col:24>
|   |       |     `-IntegerLiteral 0x232a156c420 <col:24> 'int' 0
|   |       |-BreakStmt 0x232a156c488 <line:166:13>
|   |       |-CaseStmt 0x232a156c4c8 <line:169:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x232a156c4b0 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x232a156c490 <col:14> 'int' EnumConstant 0x232a1567a68 'ASN1_STATE_PRE_COPY' 'int'
|   |       | `-NullStmt 0x232a156c588 <<invalid sloc>>
|   |       |-IfStmt 0x232a156c678 <line:174:13, line:175:22>
|   |       | |-BinaryOperator 0x232a156c5f0 <line:174:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x232a156c5d8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x232a156c590 <col:17> 'int' lvalue Var 0x232a156bac8 'ret' 'int'
|   |       | | `-IntegerLiteral 0x232a156c5b0 <col:24> 'int' 0
|   |       | `-GotoStmt 0x232a156c660 <line:175:17, col:22> 'done' 0x232a156c610
|   |       |-BreakStmt 0x232a156c690 <line:177:13>
|   |       |-CaseStmt 0x232a156c6d0 <line:179:9, line:180:69>
|   |       | |-ConstantExpr 0x232a156c6b8 <line:179:14> 'int'
|   |       | | `-DeclRefExpr 0x232a156c698 <col:14> 'int' EnumConstant 0x232a1567ac0 'ASN1_STATE_HEADER' 'int'
|   |       | `-BinaryOperator 0x232a156c9f8 <line:180:13, col:69> 'int' '='
|   |       |   |-MemberExpr 0x232a156c730 <col:13, col:18> 'int' lvalue ->buflen 0x232a1560220
|   |       |   | `-ImplicitCastExpr 0x232a156c718 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x232a156c6f8 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-BinaryOperator 0x232a156c9d8 <col:27, col:69> 'int' '-'
|   |       |     |-CallExpr 0x232a156c938 <col:27, col:65> 'int'
|   |       |     | |-ImplicitCastExpr 0x232a156c920 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | `-DeclRefExpr 0x232a156c850 <col:27> 'int ()' Function 0x232a156c788 'ASN1_object_size' 'int ()'
|   |       |     | |-IntegerLiteral 0x232a156c870 <col:44> 'int' 0
|   |       |     | |-ImplicitCastExpr 0x232a156c970 <col:47> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x232a156c898 <col:47> 'int' lvalue ParmVar 0x232a156b7a8 'inl' 'int'
|   |       |     | `-ImplicitCastExpr 0x232a156c988 <col:52, col:57> 'int' <LValueToRValue>
|   |       |     |   `-MemberExpr 0x232a156c8f0 <col:52, col:57> 'int' lvalue ->asn1_tag 0x232a1560370
|   |       |     |     `-ImplicitCastExpr 0x232a156c8d8 <col:52> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x232a156c8b8 <col:52> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |     `-ImplicitCastExpr 0x232a156c9c0 <col:69> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x232a156c9a0 <col:69> 'int' lvalue ParmVar 0x232a156b7a8 'inl' 'int'
|   |       |-CallExpr 0x232a156cc60 <line:181:13, col:55> 'int'
|   |       | |-ImplicitCastExpr 0x232a156cc48 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x232a156cb08 <col:13> 'int ()' Function 0x232a156ca40 'OPENSSL_assert' 'int ()'
|   |       | `-BinaryOperator 0x232a156cc28 <col:28, col:48> 'int' '<='
|   |       |   |-ImplicitCastExpr 0x232a156cbf8 <col:28, col:33> 'int' <LValueToRValue>
|   |       |   | `-MemberExpr 0x232a156cb60 <col:28, col:33> 'int' lvalue ->buflen 0x232a1560220
|   |       |   |   `-ImplicitCastExpr 0x232a156cb48 <col:28> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x232a156cb28 <col:28> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-ImplicitCastExpr 0x232a156cc10 <col:43, col:48> 'int' <LValueToRValue>
|   |       |     `-MemberExpr 0x232a156cbc8 <col:43, col:48> 'int' lvalue ->bufsize 0x232a1560140
|   |       |       `-ImplicitCastExpr 0x232a156cbb0 <col:43> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x232a156cb90 <col:43> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-BinaryOperator 0x232a156cd40 <line:182:13, col:22> 'unsigned char *' '='
|   |       | |-DeclRefExpr 0x232a156cc88 <col:13> 'unsigned char *' lvalue Var 0x232a156bb80 'p' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x232a156cd28 <col:17, col:22> 'unsigned char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x232a156ccf8 <col:17, col:22> 'unsigned char *' lvalue ->buf 0x232a15600d0
|   |       |     `-ImplicitCastExpr 0x232a156cce0 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x232a156ccc0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-CallExpr 0x232a156d000 <line:183:13, col:71> 'int'
|   |       | |-ImplicitCastExpr 0x232a156cfe8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x232a156ce50 <col:13> 'int ()' Function 0x232a156cd88 'ASN1_put_object' 'int ()'
|   |       | |-UnaryOperator 0x232a156ceb8 <col:29, col:30> 'unsigned char **' prefix '&' cannot overflow
|   |       | | `-DeclRefExpr 0x232a156ce70 <col:30> 'unsigned char *' lvalue Var 0x232a156bb80 'p' 'unsigned char *'
|   |       | |-IntegerLiteral 0x232a156ced0 <col:33> 'int' 0
|   |       | |-ImplicitCastExpr 0x232a156d048 <col:36> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x232a156cef8 <col:36> 'int' lvalue ParmVar 0x232a156b7a8 'inl' 'int'
|   |       | |-ImplicitCastExpr 0x232a156d060 <col:41, col:46> 'int' <LValueToRValue>
|   |       | | `-MemberExpr 0x232a156cf50 <col:41, col:46> 'int' lvalue ->asn1_tag 0x232a1560370
|   |       | |   `-ImplicitCastExpr 0x232a156cf38 <col:41> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x232a156cf18 <col:41> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x232a156d078 <col:56, col:61> 'int' <LValueToRValue>
|   |       |   `-MemberExpr 0x232a156cfb8 <col:56, col:61> 'int' lvalue ->asn1_class 0x232a1560300
|   |       |     `-ImplicitCastExpr 0x232a156cfa0 <col:56> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x232a156cf80 <col:56> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-BinaryOperator 0x232a156d130 <line:184:13, col:28> 'int' '='
|   |       | |-MemberExpr 0x232a156d0c8 <col:13, col:18> 'int' lvalue ->copylen 0x232a1560290
|   |       | | `-ImplicitCastExpr 0x232a156d0b0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x232a156d090 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x232a156d118 <col:28> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x232a156d0f8 <col:28> 'int' lvalue ParmVar 0x232a156b7a8 'inl' 'int'
|   |       |-BinaryOperator 0x232a156a1d8 <line:185:13, col:26> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       | |-MemberExpr 0x232a156a170 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x232a1568090
|   |       | | `-ImplicitCastExpr 0x232a156d170 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x232a156d150 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x232a156a1c0 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |   `-DeclRefExpr 0x232a156a1a0 <col:26> 'int' EnumConstant 0x232a1567b18 'ASN1_STATE_HEADER_COPY' 'int'
|   |       |-BreakStmt 0x232a156a1f8 <line:187:13>
|   |       |-CaseStmt 0x232a156a238 <line:189:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x232a156a220 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x232a156a200 <col:14> 'int' EnumConstant 0x232a1567b18 'ASN1_STATE_HEADER_COPY' 'int'
|   |       | `-NullStmt 0x232a156a518 <<invalid sloc>>
|   |       |-IfStmt 0x232a156a5b8 <line:191:13, line:192:22>
|   |       | |-BinaryOperator 0x232a156a580 <line:191:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x232a156a568 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x232a156a520 <col:17> 'int' lvalue Var 0x232a156bac8 'ret' 'int'
|   |       | | `-IntegerLiteral 0x232a156a540 <col:24> 'int' 0
|   |       | `-GotoStmt 0x232a156a5a0 <line:192:17, col:22> 'done' 0x232a156c610
|   |       |-CompoundAssignOperator 0x232a156a670 <line:194:13, col:28> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x232a156a608 <col:13, col:18> 'int' lvalue ->buflen 0x232a1560220
|   |       | | `-ImplicitCastExpr 0x232a156a5f0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x232a156a5d0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x232a156a658 <col:28> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x232a156a638 <col:28> 'int' lvalue Var 0x232a156bac8 'ret' 'int'
|   |       |-IfStmt 0x232a156a980 <line:195:13, line:200:13> has_else
|   |       | |-ImplicitCastExpr 0x232a156a708 <line:195:17, col:22> 'int' <LValueToRValue>
|   |       | | `-MemberExpr 0x232a156a6d8 <col:17, col:22> 'int' lvalue ->buflen 0x232a1560220
|   |       | |   `-ImplicitCastExpr 0x232a156a6c0 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x232a156a6a0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | |-CompoundAssignOperator 0x232a156a7c0 <line:196:17, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | | |-MemberExpr 0x232a156a758 <col:17, col:22> 'int' lvalue ->bufpos 0x232a15601b0
|   |       | | | `-ImplicitCastExpr 0x232a156a740 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x232a156a720 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | | `-ImplicitCastExpr 0x232a156a7a8 <col:32> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x232a156a788 <col:32> 'int' lvalue Var 0x232a156bac8 'ret' 'int'
|   |       | `-CompoundStmt 0x232a156a960 <line:197:18, line:200:13>
|   |       |   |-BinaryOperator 0x232a156a880 <line:198:17, col:31> 'int' '='
|   |       |   | |-MemberExpr 0x232a156a828 <col:17, col:22> 'int' lvalue ->bufpos 0x232a15601b0
|   |       |   | | `-ImplicitCastExpr 0x232a156a810 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x232a156a7f0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   | `-IntegerLiteral 0x232a156a858 <col:31> 'int' 0
|   |       |   `-BinaryOperator 0x232a156a940 <line:199:17, col:30> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       |     |-MemberExpr 0x232a156a8d8 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x232a1568090
|   |       |     | `-ImplicitCastExpr 0x232a156a8c0 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x232a156a8a0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |     `-ImplicitCastExpr 0x232a156a928 <col:30> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |       `-DeclRefExpr 0x232a156a908 <col:30> 'int' EnumConstant 0x232a1567b70 'ASN1_STATE_DATA_COPY' 'int'
|   |       |-BreakStmt 0x232a156a9a8 <line:202:13>
|   |       |-CaseStmt 0x232a156a9e8 <line:204:9, line:209:25>
|   |       | |-ConstantExpr 0x232a156a9d0 <line:204:14> 'int'
|   |       | | `-DeclRefExpr 0x232a156a9b0 <col:14> 'int' EnumConstant 0x232a1567b70 'ASN1_STATE_DATA_COPY' 'int'
|   |       | `-IfStmt 0x232a156ac38 <line:206:13, line:209:25> has_else
|   |       |   |-BinaryOperator 0x232a156aac8 <line:206:17, col:28> 'int' '>'
|   |       |   | |-ImplicitCastExpr 0x232a156aa98 <col:17> 'int' <LValueToRValue>
|   |       |   | | `-DeclRefExpr 0x232a156aa10 <col:17> 'int' lvalue ParmVar 0x232a156b7a8 'inl' 'int'
|   |       |   | `-ImplicitCastExpr 0x232a156aab0 <col:23, col:28> 'int' <LValueToRValue>
|   |       |   |   `-MemberExpr 0x232a156aa68 <col:23, col:28> 'int' lvalue ->copylen 0x232a1560290
|   |       |   |     `-ImplicitCastExpr 0x232a156aa50 <col:23> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x232a156aa30 <col:23> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   |-BinaryOperator 0x232a156aba0 <line:207:17, col:30> 'int' '='
|   |       |   | |-DeclRefExpr 0x232a156aae8 <col:17> 'int' lvalue Var 0x232a156b9c8 'wrmax' 'int'
|   |       |   | `-ImplicitCastExpr 0x232a156ab88 <col:25, col:30> 'int' <LValueToRValue>
|   |       |   |   `-MemberExpr 0x232a156ab58 <col:25, col:30> 'int' lvalue ->copylen 0x232a1560290
|   |       |   |     `-ImplicitCastExpr 0x232a156ab40 <col:25> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x232a156ab20 <col:25> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-BinaryOperator 0x232a156ac18 <line:209:17, col:25> 'int' '='
|   |       |     |-DeclRefExpr 0x232a156abc0 <col:17> 'int' lvalue Var 0x232a156b9c8 'wrmax' 'int'
|   |       |     `-ImplicitCastExpr 0x232a156ac00 <col:25> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x232a156abe0 <col:25> 'int' lvalue ParmVar 0x232a156b7a8 'inl' 'int'
|   |       |-IfStmt 0x232a156ad78 <line:211:13, line:212:22>
|   |       | |-BinaryOperator 0x232a156ad40 <line:211:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x232a156ad28 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x232a156ace0 <col:17> 'int' lvalue Var 0x232a156bac8 'ret' 'int'
|   |       | | `-IntegerLiteral 0x232a156ad00 <col:24> 'int' 0
|   |       | `-GotoStmt 0x232a156ad60 <line:212:17, col:22> 'done' 0x232a156c610
|   |       |-CompoundAssignOperator 0x232a156ade8 <line:213:13, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x232a156ad90 <col:13> 'int' lvalue Var 0x232a156ba48 'wrlen' 'int'
|   |       | `-ImplicitCastExpr 0x232a156add0 <col:22> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x232a156adb0 <col:22> 'int' lvalue Var 0x232a156bac8 'ret' 'int'
|   |       |-CompoundAssignOperator 0x232a156aeb8 <line:214:13, col:29> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x232a156ae50 <col:13, col:18> 'int' lvalue ->copylen 0x232a1560290
|   |       | | `-ImplicitCastExpr 0x232a156ae38 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x232a156ae18 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x232a156aea0 <col:29> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x232a156ae80 <col:29> 'int' lvalue Var 0x232a156bac8 'ret' 'int'
|   |       |-CompoundAssignOperator 0x232a156af40 <line:215:13, col:19> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |       | |-DeclRefExpr 0x232a156aee8 <col:13> 'const char *' lvalue ParmVar 0x232a156b728 'in' 'const char *'
|   |       | `-ImplicitCastExpr 0x232a156af28 <col:19> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x232a156af08 <col:19> 'int' lvalue Var 0x232a156bac8 'ret' 'int'
|   |       |-CompoundAssignOperator 0x232a156afc8 <line:216:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x232a156af70 <col:13> 'int' lvalue ParmVar 0x232a156b7a8 'inl' 'int'
|   |       | `-ImplicitCastExpr 0x232a156afb0 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x232a156af90 <col:20> 'int' lvalue Var 0x232a156bac8 'ret' 'int'
|   |       |-IfStmt 0x232a1511090 <line:218:13, line:219:30>
|   |       | |-BinaryOperator 0x232a156b0a0 <line:218:17, col:33> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x232a156b088 <col:17, col:22> 'int' <LValueToRValue>
|   |       | | | `-MemberExpr 0x232a156b030 <col:17, col:22> 'int' lvalue ->copylen 0x232a1560290
|   |       | | |   `-ImplicitCastExpr 0x232a156b018 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | | |     `-DeclRefExpr 0x232a156aff8 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | | `-IntegerLiteral 0x232a156b060 <col:33> 'int' 0
|   |       | `-BinaryOperator 0x232a1511070 <line:219:17, col:30> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       |   |-MemberExpr 0x232a156b0f8 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x232a1568090
|   |       |   | `-ImplicitCastExpr 0x232a156b0e0 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x232a156b0c0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a156b930 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-ImplicitCastExpr 0x232a156b148 <col:30> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x232a156b128 <col:30> 'int' EnumConstant 0x232a1567ac0 'ASN1_STATE_HEADER' 'int'
|   |       |-IfStmt 0x232a1511140 <line:221:13, line:222:22>
|   |       | |-BinaryOperator 0x232a1511108 <line:221:17, col:24> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x232a15110f0 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x232a15110a8 <col:17> 'int' lvalue ParmVar 0x232a156b7a8 'inl' 'int'
|   |       | | `-IntegerLiteral 0x232a15110c8 <col:24> 'int' 0
|   |       | `-GotoStmt 0x232a1511128 <line:222:17, col:22> 'done' 0x232a156c610
|   |       |-BreakStmt 0x232a1511158 <line:224:13>
|   |       |-DefaultStmt 0x232a1511278 <line:226:9, col:16>
|   |       | `-NullStmt 0x232a1511270 <col:16>
|   |       `-ReturnStmt 0x232a15112c0 <line:228:13, col:20>
|   |         `-IntegerLiteral 0x232a1511298 <col:20> 'int' 0
|   |-LabelStmt 0x232a1511438 <line:234:2, col:6> 'done'
|   | `-NullStmt 0x232a1511430 <col:6>
|   `-ReturnStmt 0x232a15116a0 <line:238:5, col:34>
|     `-ConditionalOperator 0x232a1511670 <col:12, col:34> 'int'
|       |-ParenExpr 0x232a15115e0 <col:12, col:22> 'int'
|       | `-BinaryOperator 0x232a15115c0 <col:13, col:21> 'int' '>'
|       |   |-ImplicitCastExpr 0x232a15115a8 <col:13> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x232a1511560 <col:13> 'int' lvalue Var 0x232a156ba48 'wrlen' 'int'
|       |   `-IntegerLiteral 0x232a1511580 <col:21> 'int' 0
|       |-ImplicitCastExpr 0x232a1511640 <col:26> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x232a1511600 <col:26> 'int' lvalue Var 0x232a156ba48 'wrlen' 'int'
|       `-ImplicitCastExpr 0x232a1511658 <col:34> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x232a1511620 <col:34> 'int' lvalue Var 0x232a156bac8 'ret' 'int'
|-FunctionDecl 0x232a1511940 <line:242:1, line:265:1> line:242:12 invalid asn1_bio_flush_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t)' static
| |-ParmVarDecl 0x232a1511720 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x232a1511798 <col:38, col:56> col:56 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x232a1511818 <line:243:30, col:44> col:44 invalid cleanup 'int *'
| |-ParmVarDecl 0x232a1511890 <col:53, col:70> col:70 used next 'asn1_bio_state_t':'asn1_bio_state_t'
| `-CompoundStmt 0x232a1510528 <line:244:1, line:265:1>
|   |-DeclStmt 0x232a1511a98 <line:245:5, col:12>
|   | `-VarDecl 0x232a1511a30 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x232a1511bc8 <line:247:5, line:248:16>
|   | |-BinaryOperator 0x232a1511b70 <line:247:9, col:24> 'int' '<='
|   | | |-ImplicitCastExpr 0x232a1511b58 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x232a1511b00 <col:9, col:14> 'int' lvalue ->ex_len 0x232a1560610
|   | | |   `-ImplicitCastExpr 0x232a1511ae8 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x232a1511ab0 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a1511798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-IntegerLiteral 0x232a1511b30 <col:24> 'int' 0
|   | `-ReturnStmt 0x232a1511bb8 <line:248:9, col:16>
|   |   `-IntegerLiteral 0x232a1511b90 <col:16> 'int' 1
|   |-ForStmt 0x232a15104a8 <line:249:5, line:263:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x232a1510480 <line:249:14, line:263:5>
|   |   |-IfStmt 0x232a1511e68 <line:251:9, line:252:13>
|   |   | |-BinaryOperator 0x232a1511e40 <line:251:13, col:20> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x232a1511e28 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x232a1511de0 <col:13> 'int' lvalue Var 0x232a1511a30 'ret' 'int'
|   |   | | `-IntegerLiteral 0x232a1511e00 <col:20> 'int' 0
|   |   | `-BreakStmt 0x232a1511e60 <line:252:13>
|   |   |-CompoundAssignOperator 0x232a1511f20 <line:253:9, col:24> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x232a1511eb8 <col:9, col:14> 'int' lvalue ->ex_len 0x232a1560610
|   |   | | `-ImplicitCastExpr 0x232a1511ea0 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x232a1511e80 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a1511798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | `-ImplicitCastExpr 0x232a1511f08 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x232a1511ee8 <col:24> 'int' lvalue Var 0x232a1511a30 'ret' 'int'
|   |   `-IfStmt 0x232a1510458 <line:254:9, line:262:9> has_else
|   |     |-BinaryOperator 0x232a1511ff8 <line:254:13, col:27> 'int' '>'
|   |     | |-ImplicitCastExpr 0x232a1511fe0 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x232a1511f88 <col:13, col:18> 'int' lvalue ->ex_len 0x232a1560610
|   |     | |   `-ImplicitCastExpr 0x232a1511f70 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x232a1511f50 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a1511798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     | `-IntegerLiteral 0x232a1511fb8 <col:27> 'int' 0
|   |     |-CompoundAssignOperator 0x232a15100c8 <line:255:13, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-MemberExpr 0x232a1510060 <col:13, col:18> 'int' lvalue ->ex_pos 0x232a1560680
|   |     | | `-ImplicitCastExpr 0x232a1512038 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x232a1512018 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a1511798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     | `-ImplicitCastExpr 0x232a15100b0 <col:28> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x232a1510090 <col:28> 'int' lvalue Var 0x232a1511a30 'ret' 'int'
|   |     `-CompoundStmt 0x232a1510430 <line:256:14, line:262:9>
|   |       |-BinaryOperator 0x232a1510358 <line:259:13, col:26> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       | |-MemberExpr 0x232a15102d8 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x232a1568090
|   |       | | `-ImplicitCastExpr 0x232a15102c0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x232a15102a0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a1511798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x232a1510340 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x232a1510308 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x232a1511890 'next' 'asn1_bio_state_t':'asn1_bio_state_t'
|   |       |-BinaryOperator 0x232a1510408 <line:260:13, col:27> 'int' '='
|   |       | |-MemberExpr 0x232a15103b0 <col:13, col:18> 'int' lvalue ->ex_pos 0x232a1560680
|   |       | | `-ImplicitCastExpr 0x232a1510398 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x232a1510378 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a1511798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-IntegerLiteral 0x232a15103e0 <col:27> 'int' 0
|   |       `-BreakStmt 0x232a1510428 <line:261:13>
|   `-ReturnStmt 0x232a1510518 <line:264:5, col:12>
|     `-ImplicitCastExpr 0x232a1510500 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x232a15104e0 <col:12> 'int' lvalue Var 0x232a1511a30 'ret' 'int'
|-FunctionDecl 0x232a1510810 <line:267:1, line:281:1> line:267:12 invalid asn1_bio_setup_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t, asn1_bio_state_t)' static
| |-ParmVarDecl 0x232a1510570 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x232a15105e8 <col:38, col:56> col:56 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x232a1510668 <line:268:30, col:44> col:44 invalid setup 'int *'
| |-ParmVarDecl 0x232a15106e0 <line:269:30, col:47> col:47 used ex_state 'asn1_bio_state_t':'asn1_bio_state_t'
| |-ParmVarDecl 0x232a1510758 <line:270:30, col:47> col:47 used other_state 'asn1_bio_state_t':'asn1_bio_state_t'
| `-CompoundStmt 0x232a1510e00 <line:271:1, line:281:1>
|   |-IfStmt 0x232a1510b10 <line:272:5, line:275:5>
|   | |-OpaqueValueExpr 0x232a1510af8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x232a1510ae0 <line:272:71, line:275:5>
|   |   `-ReturnStmt 0x232a1510ad0 <line:274:9, col:16>
|   |     `-IntegerLiteral 0x232a1510aa8 <col:16> 'int' 0
|   |-IfStmt 0x232a1510da0 <line:276:5, line:279:22> has_else
|   | |-BinaryOperator 0x232a1510bd0 <line:276:9, col:23> 'int' '>'
|   | | |-ImplicitCastExpr 0x232a1510bb8 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x232a1510b60 <col:9, col:14> 'int' lvalue ->ex_len 0x232a1560610
|   | | |   `-ImplicitCastExpr 0x232a1510b48 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x232a1510b28 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a15105e8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-IntegerLiteral 0x232a1510b90 <col:23> 'int' 0
|   | |-BinaryOperator 0x232a1510ca8 <line:277:9, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   | | |-MemberExpr 0x232a1510c28 <col:9, col:14> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x232a1568090
|   | | | `-ImplicitCastExpr 0x232a1510c10 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x232a1510bf0 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a15105e8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x232a1510c90 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   | |   `-DeclRefExpr 0x232a1510c58 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x232a15106e0 'ex_state' 'asn1_bio_state_t':'asn1_bio_state_t'
|   | `-BinaryOperator 0x232a1510d80 <line:279:9, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |   |-MemberExpr 0x232a1510d00 <col:9, col:14> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x232a1568090
|   |   | `-ImplicitCastExpr 0x232a1510ce8 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x232a1510cc8 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x232a15105e8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   `-ImplicitCastExpr 0x232a1510d68 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |     `-DeclRefExpr 0x232a1510d30 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x232a1510758 'other_state' 'asn1_bio_state_t':'asn1_bio_state_t'
|   `-ReturnStmt 0x232a1510df0 <line:280:5, col:12>
|     `-IntegerLiteral 0x232a1510dc8 <col:12> 'int' 1
|-FunctionDecl 0x232a1512080 <line:283:1, line:289:1> line:283:12 invalid asn1_bio_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x232a1510e40 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x232a1510ec0 <col:34, col:40> col:40 used in 'char *'
| |-ParmVarDecl 0x232a1510f40 <col:44, col:48> col:48 used inl 'int'
| `-CompoundStmt 0x232a15123e0 <line:284:1, line:289:1>
|   `-IfStmt 0x232a1512248 <line:286:5, line:287:16>
|     |-OpaqueValueExpr 0x232a1512230 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x232a1512220 <col:9, col:16>
|       `-IntegerLiteral 0x232a15121f8 <col:16> 'int' 0
|-FunctionDecl 0x232a1512530 <line:291:1, line:294:1> line:291:12 invalid asn1_bio_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x232a1512410 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x232a1512490 <col:34, col:46> col:46 used str 'const char *'
| `-CompoundStmt 0x232a1512710 <line:292:1, line:294:1>
|-FunctionDecl 0x232a15128e0 <line:296:1, line:302:1> line:296:12 invalid asn1_bio_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x232a1512738 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x232a15127b8 <col:34, col:40> col:40 used str 'char *'
| |-ParmVarDecl 0x232a1512838 <col:45, col:49> col:49 used size 'int'
| `-CompoundStmt 0x232a1512c40 <line:297:1, line:302:1>
|   `-IfStmt 0x232a1512aa8 <line:299:5, line:300:16>
|     |-OpaqueValueExpr 0x232a1512a90 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x232a1512a80 <col:9, col:16>
|       `-IntegerLiteral 0x232a1512a58 <col:16> 'int' 0
|-FunctionDecl 0x232a1512e18 <line:304:1, line:310:1> line:304:13 invalid asn1_bio_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x232a1512c70 <col:36, col:41> col:41 invalid b 'int *'
| |-ParmVarDecl 0x232a1512cf0 <col:44, col:48> col:48 used cmd 'int'
| |-ParmVarDecl 0x232a1512d70 <col:53, col:66> col:66 invalid fp 'int *'
| `-CompoundStmt 0x232a15131b0 <line:305:1, line:310:1>
|   `-IfStmt 0x232a1512ff8 <line:307:5, line:308:16>
|     |-OpaqueValueExpr 0x232a1512fe0 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x232a1512fd0 <col:9, col:16>
|       `-ImplicitCastExpr 0x232a1512fb8 <col:16> 'long' <IntegralCast>
|         `-IntegerLiteral 0x232a1512f90 <col:16> 'int' 0
|-FunctionDecl 0x232a1513410 <line:312:1, line:390:1> line:312:13 invalid asn1_bio_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x232a15131e0 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x232a1513260 <col:35, col:39> col:39 used cmd 'int'
| |-ParmVarDecl 0x232a15132e0 <col:44, col:49> col:49 used arg1 'long'
| |-ParmVarDecl 0x232a1513360 <col:55, col:61> col:61 used arg2 'void *'
| `-CompoundStmt 0x232a150fd00 <line:313:1, line:390:1>
|   |-DeclStmt 0x232a1513560 <line:314:5, col:26>
|   | `-VarDecl 0x232a15134f8 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-DeclStmt 0x232a1513670 <line:315:5, col:31>
|   | `-VarDecl 0x232a1513608 <col:5, col:24> col:24 used ex_func 'BIO_ASN1_EX_FUNCS *'
|   |-DeclStmt 0x232a1513748 <line:316:5, col:17>
|   | `-VarDecl 0x232a15136a0 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x232a1513730 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x232a1513708 <col:16> 'int' 1
|   |-IfStmt 0x232a1513900 <line:320:5, line:321:16>
|   | |-BinaryOperator 0x232a1513890 <line:320:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x232a1513860 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:320:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x232a15137b8 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a15134f8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x232a1513878 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x232a1513840 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x232a1513818 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x232a15137d8 <col:26> 'int' 0
|   | `-ReturnStmt 0x232a15138f0 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:321:9, col:16>
|   |   `-ImplicitCastExpr 0x232a15138d8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x232a15138b0 <col:16> 'int' 0
|   |-SwitchStmt 0x232a1513988 <line:323:5, line:387:5>
|   | |-ImplicitCastExpr 0x232a1513970 <line:323:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x232a1513938 <col:13> 'int' lvalue ParmVar 0x232a1513260 'cmd' 'int'
|   | `-CompoundStmt 0x232a150fc20 <col:18, line:387:5>
|   |   |-BinaryOperator 0x232a1513a48 <line:326:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x232a15139a8 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x232a1513608 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x232a1513a30 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x232a1513a18 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x232a15139e0 <col:19> 'void *' lvalue ParmVar 0x232a1513360 'arg2' 'void *'
|   |   |-BreakStmt 0x232a1513b48 <line:329:9>
|   |   |-BinaryOperator 0x232a1513bc0 <line:332:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x232a1513b50 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x232a1513608 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x232a1513ba8 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x232a1513b90 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x232a1513b70 <col:19> 'void *' lvalue ParmVar 0x232a1513360 'arg2' 'void *'
|   |   |-BreakStmt 0x232a1513cc0 <line:335:9>
|   |   |-BinaryOperator 0x232a1513d38 <line:338:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x232a1513cc8 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x232a1513608 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x232a1513d20 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x232a1513d08 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x232a1513ce8 <col:19> 'void *' lvalue ParmVar 0x232a1513360 'arg2' 'void *'
|   |   |-BreakStmt 0x232a1513e38 <line:341:9>
|   |   |-BinaryOperator 0x232a1513eb0 <line:344:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x232a1513e40 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x232a1513608 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x232a1513e98 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x232a1513e80 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x232a1513e60 <col:19> 'void *' lvalue ParmVar 0x232a1513360 'arg2' 'void *'
|   |   |-BreakStmt 0x232a1513fb0 <line:347:9>
|   |   |-BinaryOperator 0x232a1514058 <line:350:9, col:23> 'void *' '='
|   |   | |-MemberExpr 0x232a1513ff0 <col:9, col:14> 'void *' lvalue ->ex_arg 0x232a15606f0
|   |   | | `-ImplicitCastExpr 0x232a1513fd8 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x232a1513fb8 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a15134f8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | `-ImplicitCastExpr 0x232a1514040 <col:23> 'void *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x232a1514020 <col:23> 'void *' lvalue ParmVar 0x232a1513360 'arg2' 'void *'
|   |   |-BreakStmt 0x232a1514078 <line:351:9>
|   |   |-BinaryOperator 0x232a150f160 <line:354:9, col:31> 'void *' '='
|   |   | |-UnaryOperator 0x232a150f0c8 <col:9, col:19> 'void *' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x232a150f0a0 <col:10, col:19> 'void **' <BitCast>
|   |   | |   `-ImplicitCastExpr 0x232a150f088 <col:19> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |     `-DeclRefExpr 0x232a150f050 <col:19> 'void *' lvalue ParmVar 0x232a1513360 'arg2' 'void *'
|   |   | `-ImplicitCastExpr 0x232a150f148 <col:26, col:31> 'void *' <LValueToRValue>
|   |   |   `-MemberExpr 0x232a150f118 <col:26, col:31> 'void *' lvalue ->ex_arg 0x232a15606f0
|   |   |     `-ImplicitCastExpr 0x232a150f100 <col:26> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x232a150f0e0 <col:26> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a15134f8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   |-BreakStmt 0x232a150f180 <line:355:9>
|   |   |-IfStmt 0x232a150f278 <line:358:9, line:359:20>
|   |   | |-OpaqueValueExpr 0x232a150f260 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x232a150f250 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x232a150f238 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x232a150f210 <col:20> 'int' 0
|   |   |-IfStmt 0x232a150f498 <line:362:9, line:366:9>
|   |   | |-BinaryOperator 0x232a150f348 <line:362:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x232a150f330 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x232a150f318 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x232a150f2c8 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x232a1568090
|   |   | | |     `-ImplicitCastExpr 0x232a150f2b0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x232a150f290 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a15134f8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x232a150f2f8 <col:27> 'int' EnumConstant 0x232a1567ac0 'ASN1_STATE_HEADER' 'int'
|   |   | `-CompoundStmt 0x232a150f480 <col:46, line:366:9>
|   |   |   `-IfStmt 0x232a150f468 <line:363:13, line:365:24>
|   |   |     |-OpaqueValueExpr 0x232a150f450 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x232a150f440 <col:17, col:24>
|   |   |       `-ImplicitCastExpr 0x232a150f428 <col:24> 'long' <IntegralCast>
|   |   |         `-IntegerLiteral 0x232a150f400 <col:24> 'int' 0
|   |   |-IfStmt 0x232a150f748 <line:368:9, line:373:9>
|   |   | |-BinaryOperator 0x232a150f568 <line:368:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x232a150f550 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x232a150f538 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x232a150f4e8 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x232a1568090
|   |   | | |     `-ImplicitCastExpr 0x232a150f4d0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x232a150f4b0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a15134f8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x232a150f518 <col:27> 'int' EnumConstant 0x232a1567bc8 'ASN1_STATE_POST_COPY' 'int'
|   |   | `-CompoundStmt 0x232a150f730 <col:49, line:373:9>
|   |   |   `-IfStmt 0x232a150f718 <line:371:13, line:372:24>
|   |   |     |-BinaryOperator 0x232a150f6b0 <line:371:17, col:24> 'int' '<='
|   |   |     | |-ImplicitCastExpr 0x232a150f680 <col:17> 'long' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x232a150f638 <col:17> 'long' lvalue Var 0x232a15136a0 'ret' 'long'
|   |   |     | `-ImplicitCastExpr 0x232a150f698 <col:24> 'long' <IntegralCast>
|   |   |     |   `-IntegerLiteral 0x232a150f658 <col:24> 'int' 0
|   |   |     `-ReturnStmt 0x232a150f708 <line:372:17, col:24>
|   |   |       `-ImplicitCastExpr 0x232a150f6f0 <col:24> 'long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x232a150f6d0 <col:24> 'long' lvalue Var 0x232a15136a0 'ret' 'long'
|   |   |-IfStmt 0x232a150fa50 <line:375:9, line:380:9> has_else
|   |   | |-BinaryOperator 0x232a150f818 <line:375:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x232a150f800 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x232a150f7e8 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x232a150f798 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x232a1568090
|   |   | | |     `-ImplicitCastExpr 0x232a150f780 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x232a150f760 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x232a15134f8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x232a150f7c8 <col:27> 'int' EnumConstant 0x232a1567c20 'ASN1_STATE_DONE' 'int'
|   |   | |-NullStmt 0x232a150fa48 <line:376:13>
|   |   | `-CompoundStmt 0x232a150fa30 <line:377:14, line:380:9>
|   |   |   `-ReturnStmt 0x232a150fa20 <line:379:13, col:20>
|   |   |     `-ImplicitCastExpr 0x232a150fa08 <col:20> 'long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x232a150f9e0 <col:20> 'int' 0
|   |   `-DefaultStmt 0x232a150fb80 <line:382:5, line:384:20>
|   |     `-IfStmt 0x232a150fb68 <line:383:9, line:384:20>
|   |       |-OpaqueValueExpr 0x232a150fb50 <<invalid sloc>> '_Bool'
|   |       `-ReturnStmt 0x232a150fb40 <col:13, col:20>
|   |         `-ImplicitCastExpr 0x232a150fb28 <col:20> 'long' <IntegralCast>
|   |           `-IntegerLiteral 0x232a150fb00 <col:20> 'int' 0
|   `-ReturnStmt 0x232a150fcf0 <line:389:5, col:12>
|     `-ImplicitCastExpr 0x232a150fcd8 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x232a150fcb8 <col:12> 'long' lvalue Var 0x232a15136a0 'ret' 'long'
|-FunctionDecl 0x232a15140a0 <line:392:1, line:399:1> line:392:12 invalid asn1_bio_set_ex 'int (int *, int, int *, int *)' static
| |-ParmVarDecl 0x232a150fd58 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x232a150fdd8 <col:36, col:40> col:40 used cmd 'int'
| |-ParmVarDecl 0x232a150fe58 <line:393:28, col:42> col:42 invalid ex_func 'int *'
| |-ParmVarDecl 0x232a150fed8 <col:51, col:65> col:65 invalid ex_free_func 'int *'
| `-CompoundStmt 0x232a1514318 <line:394:1, line:399:1>
|   `-DeclStmt 0x232a15141f0 <line:395:5, col:28>
|     `-VarDecl 0x232a1514188 <col:5, col:23> col:23 used extmp 'BIO_ASN1_EX_FUNCS':'struct BIO_ASN1_EX_FUNCS_st'
|-FunctionDecl 0x232a1514600 <line:401:1, line:413:1> line:401:12 invalid asn1_bio_get_ex 'int (int *, int, int **, int **)' static
| |-ParmVarDecl 0x232a1514348 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x232a15143c8 <col:36, col:40> col:40 used cmd 'int'
| |-ParmVarDecl 0x232a1514478 <line:402:28, col:43> col:43 invalid ex_func 'int **'
| |-ParmVarDecl 0x232a1514500 <line:403:28, col:43> col:43 invalid ex_free_func 'int **'
| `-CompoundStmt 0x232a1514a38 <line:404:1, line:413:1>
|   |-DeclStmt 0x232a1514750 <line:405:5, col:28>
|   | `-VarDecl 0x232a15146e8 <col:5, col:23> col:23 used extmp 'BIO_ASN1_EX_FUNCS':'struct BIO_ASN1_EX_FUNCS_st'
|   |-DeclStmt 0x232a15147e8 <line:406:5, col:12>
|   | `-VarDecl 0x232a1514780 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x232a15149d8 <line:408:5, line:411:5>
|   | |-BinaryOperator 0x232a1514968 <line:408:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x232a1514950 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x232a1514908 <col:9> 'int' lvalue Var 0x232a1514780 'ret' 'int'
|   | | `-IntegerLiteral 0x232a1514928 <col:15> 'int' 0
|   | `-CompoundStmt 0x232a15149c8 <col:18, line:411:5>
|   `-ReturnStmt 0x232a1514a28 <line:412:5, col:12>
|     `-ImplicitCastExpr 0x232a1514a10 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x232a15149f0 <col:12> 'int' lvalue Var 0x232a1514780 'ret' 'int'
|-FunctionDecl 0x232a1514c70 <line:415:1, line:419:1> line:415:5 invalid BIO_asn1_set_prefix 'int (int *, int *, int *)'
| |-ParmVarDecl 0x232a1514a80 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x232a1514b00 <col:33, col:47> col:47 invalid prefix 'int *'
| |-ParmVarDecl 0x232a1514b80 <line:416:25, col:39> col:39 invalid prefix_free 'int *'
| `-CompoundStmt 0x232a1514d40 <line:417:1, line:419:1>
|-FunctionDecl 0x232a1514f60 <line:421:1, line:425:1> line:421:5 invalid BIO_asn1_get_prefix 'int (int *, int **, int **)'
| |-ParmVarDecl 0x232a1514d68 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x232a1514df0 <col:33, col:48> col:48 invalid pprefix 'int **'
| |-ParmVarDecl 0x232a1514e78 <line:422:25, col:40> col:40 invalid pprefix_free 'int **'
| `-CompoundStmt 0x232a1515030 <line:423:1, line:425:1>
|-FunctionDecl 0x232a150e1e8 <line:427:1, line:431:1> line:427:5 invalid BIO_asn1_set_suffix 'int (int *, int *, int *)'
| |-ParmVarDecl 0x232a150e040 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x232a150e0c0 <col:33, col:47> col:47 invalid suffix 'int *'
| |-ParmVarDecl 0x232a150e140 <line:428:25, col:39> col:39 invalid suffix_free 'int *'
| `-CompoundStmt 0x232a150e2b8 <line:429:1, line:431:1>
`-FunctionDecl 0x232a150e498 <line:433:1, line:437:1> line:433:5 invalid BIO_asn1_get_suffix 'int (int *, int **, int **)'
  |-ParmVarDecl 0x232a150e2e0 <col:25, col:30> col:30 invalid b 'int *'
  |-ParmVarDecl 0x232a150e368 <col:33, col:48> col:48 invalid psuffix 'int **'
  |-ParmVarDecl 0x232a150e3f0 <line:434:25, col:40> col:40 invalid psuffix_free 'int **'
  `-CompoundStmt 0x232a150e568 <line:435:1, line:437:1>
