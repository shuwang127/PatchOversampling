TranslationUnitDecl 0x2414f374ca8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x2414f375540 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2414f375240 '__int128'
|-TypedefDecl 0x2414f3755b0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2414f375260 'unsigned __int128'
|-TypedefDecl 0x2414f3758e8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2414f3756a0 'struct __NSConstantString_tag'
|   `-Record 0x2414f375608 '__NSConstantString_tag'
|-TypedefDecl 0x2414f375958 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2414f374e80 'unsigned long long'
|-TypedefDecl 0x2414f3759f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2414f3759b0 'char *'
|   `-BuiltinType 0x2414f374d40 'char'
|-TypedefDecl 0x2414f375a60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2414f3759b0 'char *'
|   `-BuiltinType 0x2414f374d40 'char'
|-TypedefDecl 0x2414f375b20 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2414f374e80 'unsigned long long'
|-TypedefDecl 0x2414f375b90 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2414f3759b0 'char *'
|   `-BuiltinType 0x2414f374d40 'char'
|-FunctionDecl 0x24150eb0400 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x24150eb04a0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x24150eb0510 <col:21> Implicit
|-FunctionDecl 0x24150eb0568 prev 0x24150eb0400 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x24150eb0290 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x24150eb0658 <col:21> Inherited Implicit
|-TypedefDecl 0x24150eb0698 prev 0x2414f375958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2414f374e80 'unsigned long long'
|-TypedefDecl 0x24150eb0740 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x24150eb0710 'size_t' sugar
|   |-Typedef 0x24150eb0698 'size_t'
|   `-BuiltinType 0x2414f374e80 'unsigned long long'
|-TypedefDecl 0x24150eb07b0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2414f374de0 'long long'
|-TypedefDecl 0x24150eb0820 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2414f374de0 'long long'
|-TypedefDecl 0x24150eb0890 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2414f374e20 'unsigned short'
|-TypedefDecl 0x24150eb0900 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x2414f374e20 'unsigned short'
|-TypedefDecl 0x24150eb0970 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2414f374e20 'unsigned short'
|-TypedefDecl 0x24150eb09e0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2414f374da0 'int'
|-TypedefDecl 0x24150eb0a50 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2414f374dc0 'long'
|-TypedefDecl 0x24150eb0ac0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2414f374de0 'long long'
|-TypedefDecl 0x24150eb0b50 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x24150eb0b20 '__time64_t' sugar
|   |-Typedef 0x24150eb0ac0 '__time64_t'
|   `-BuiltinType 0x2414f374de0 'long long'
|-FunctionDecl 0x24150eb0cc8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x24150eb0ee8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x24150eedff0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x24150eb1028 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x24150eb10a0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x24150eb1118 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x24150eb1198 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x24150eedd90 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x24150eee0d0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x24150eee190 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x24150eee300 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x24150eee2b0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x24150eee250 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x24150eee170 'struct threadlocaleinfostruct'
|       `-Record 0x24150ef5e10 'threadlocaleinfostruct'
|-TypedefDecl 0x24150eee410 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x24150eee3c0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x24150eee360 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x24150eee230 'struct threadmbcinfostruct'
|       `-Record 0x24150eee190 'threadmbcinfostruct'
|-RecordDecl 0x24150eee468 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x24150eee520 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x24150eee5e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24150eee670 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x24150eee700 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x24150eee7b8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x24150eee760 'struct localeinfo_struct' sugar
|   `-RecordType 0x24150eee5c0 'struct localeinfo_struct'
|     `-Record 0x24150eee520 'localeinfo_struct'
|-TypedefDecl 0x24150eee890 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x24150eee840 'struct localeinfo_struct *'
|   `-ElaboratedType 0x24150eee760 'struct localeinfo_struct' sugar
|     `-RecordType 0x24150eee5c0 'struct localeinfo_struct'
|       `-Record 0x24150eee520 'localeinfo_struct'
|-RecordDecl 0x24150eee908 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x24150eee9c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24150eeea38 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x24150eeeaf8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x24150eeeb90 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x24150eeec00 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x24150eeecb8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x24150eeec60 'struct localerefcount' sugar
|   `-RecordType 0x24150eee9a0 'struct localerefcount'
|     `-Record 0x24150eee908 'localerefcount'
|-RecordDecl 0x24150ef5e10 prev 0x24150eee0d0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x24150ef5e90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x24150ef5f08 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x24150ef5f78 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x24150ef5fe8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x24150ef6058 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x24150ef6218 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x24150ef6288 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x24150ef62f8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x24150ef6368 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x24150ef63d8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x24150ef6448 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x24150ef64a0 parent 0x2414f374ca8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x24150ef6630 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x24150ef66a0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x24150ef6710 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x24150ef6780 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x24150ef6820 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x24150ef6890 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x24150ef69a0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x24150ef6ad8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x24150ef6b88 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x24150ef6b30 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x24150eee170 'struct threadlocaleinfostruct'
|     `-Record 0x24150ef5e10 'threadlocaleinfostruct'
|-FunctionDecl 0x24150ef2ff0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x24150ef6c10 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x24150ef6cc0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x24150ef6d40 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x24150ef2de0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150ef33b8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x24150ef3458 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x24150ef34c0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x24150ef3528 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24150ef35a8 prev 0x24150ef33b8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x24150ef30e0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x24150ef3160 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x24150ef31d8 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150ef3968 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x24150ef3690 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x24150ef3710 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x24150ef3788 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24150ef3e40 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150ef3a50 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x24150ef3ad0 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x24150ef3b48 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150ef3be0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150ef4148 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x24150ef41e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x24150ef4250 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x24150ef42b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24150ef4338 prev 0x24150ef4148 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x24150ef3f30 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x24150ef3fb0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x24150ef4028 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24150ef46f8 <line:55:17> col:17 implicit memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x24150ef4798 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24150ef4800 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x24150ef4868 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24150ef48e8 prev 0x24150ef46f8 <col:1, col:127> col:17 memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x24150ef4420 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x24150ef44a0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x24150ef4518 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24150ef8e40 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x24150ef49f8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x24150ef4a90 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24150ef4b10 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x24150ef4b88 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24150ef9208 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x24150ef92a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24150ef9310 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x24150ef9378 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24150ef93f8 prev 0x24150ef9208 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x24150ef8f30 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x24150ef8fb0 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x24150ef9028 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24150ef9878 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x24150ef9918 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24150ef9980 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x24150ef99e8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x24150ef9a50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24150ef9ad8 prev 0x24150ef9878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x24150ef95c0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x24150ef9640 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x24150ef96c0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x24150ef9738 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150ef9b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x24150ef1f68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x24150ef9d60 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x24150ef1dd0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x24150ef1e48 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150ef2020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x24150ef2410 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x24150ef2148 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x24150ef21c0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150ef2240 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x24150ef27e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x24150ef25f0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x24150ef2670 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x24150ef2890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150ef2ca0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x24150ef29d8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x24150ef2a50 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24150ef2ad0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x24150efc130 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x24150efc1d0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x24150efc238 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24150efc2b0 prev 0x24150efc130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x24150efbf48 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x24150efbfc8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x24150efc360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150efc6b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x24150efc4a8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x24150efc520 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24150efc5a0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x24150efc9e0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x24150efca80 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x24150efcae8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24150efcb60 prev 0x24150efc9e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x24150efc860 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x24150efc8e0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x24150efcc10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150efaf30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x24150efafd0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24150efb038 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24150efb0b0 prev 0x24150efaf30 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x24150efcd58 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x24150efcdd8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x24150efb300 <line:121:32> col:32 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x24150efb3a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24150efb410 prev 0x24150efb300 <col:16, col:63> col:32 used strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x24150efb190 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x24150efb708 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x24150efb4e8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x24150efb560 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150efb958 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x24150efb7e8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x24150efb860 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x24150efbc88 <line:131:1, line:133:1>
|   `-ReturnStmt 0x24150efbc78 <line:132:5, col:51>
|     `-ConditionalOperator 0x24150efbc48 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x24150efbab8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x24150efba98 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x24150efba68 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x24150efba20 <col:13> 'const char *' lvalue ParmVar 0x24150efb7e8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x24150efba80 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x24150efba40 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x24150efbc30 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x24150efbad8 <col:24> 'int' 0
|       `-CallExpr 0x24150efbbd0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x24150efbbb8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x24150efbb00 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x24150efb708 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x24150efbc00 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x24150efbb20 <col:36> 'const char *' lvalue ParmVar 0x24150efb7e8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x24150efbc18 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x24150efbb40 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x24150efb860 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x24150ef4f38 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x24150efbcb8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x24150efbd30 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24150efbdb0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x24150ef4e00 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24150ef5240 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x24150ef52e0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x24150ef5348 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x24150ef53b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24150ef5430 prev 0x24150ef5240 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x24150ef5028 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x24150ef50a8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x24150ef5120 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24150ef5668 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x24150ef5518 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x24150ef5930 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x24150ef59d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24150ef5a38 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x24150ef5ab0 prev 0x24150ef5930 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x24150ef5740 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x24150ef57c0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x24150ef5d10 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24150ef5b90 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x24150ef5c10 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x24150f04070 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24150f03ef0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x24150f03f70 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x24150f04428 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x24150f04150 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x24150f041d0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x24150f04248 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f04690 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24150f04510 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x24150f04590 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x24150f04988 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x24150f04770 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x24150f047f0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x24150f04868 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f04bf0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24150f04a70 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x24150f04af0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x24150efeea0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x24150f04cd0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x24150f04d50 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x24150f04dc8 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150eff258 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24150efef88 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24150eff008 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x24150eff080 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150eff6c0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150eff340 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24150eff3c0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x24150eff438 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150eff4b0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150eff9c8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24150eff7b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24150eff830 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x24150eff8a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150effd60 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150effab0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x24150effb30 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x24150effba8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150effc20 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f000d8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x24150f00178 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24150f001e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24150f00258 prev 0x24150f000d8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x24150effeb0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x24150efff30 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x24150f00510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x24150f00430 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x24150f005b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f00990 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x24150f00700 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x24150f00778 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f007f8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x24150f00ca8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x24150f00d48 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x24150f00db8 prev 0x24150f00ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x24150f00b70 <col:90> col:93 'int'
| `-DeprecatedAttr 0x24150f00e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150efd190 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x24150efcf80 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x24150efcff8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150efd078 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x24150efd498 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x24150efd278 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x24150efd2f0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24150efd788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24150efd638 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x24150efd830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150efdc40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150efd978 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x24150efd9f0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150efda68 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f01070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x24150efdde8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x24150f00ec0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24150f01120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f015d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x24150f01268 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x24150f012e0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24150f01360 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x24150f013d8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24150f01a58 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24150f01af8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24150f01b60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24150f01bc8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24150f01c48 prev 0x24150f01a58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24150f01788 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x24150f01808 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x24150f01880 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150f01d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f02080 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24150f02120 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x24150f02188 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24150f021f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24150f02270 prev 0x24150f02080 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24150f01e48 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x24150f01ee8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x24150f01f60 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f02570 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24150f02358 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x24150f023d8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x24150f02450 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f02908 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150f02658 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x24150f026d8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x24150f02750 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f027c8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f02ca0 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x24150f029f8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x24150f02a70 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24150f02af0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x24150f02b68 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24150efe028 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24150efe0c8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24150efe130 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24150efe198 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24150efe218 prev 0x24150efe028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24150f02e50 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x24150efde90 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x24150efdf08 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150efe2d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150efe788 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x24150efe418 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x24150efe490 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24150efe510 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x24150efe588 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150efec08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x24150efe938 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x24150efe9b8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x24150efea30 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150efecc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f03050 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x24150f030f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24150f03158 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24150f031d0 prev 0x24150f03050 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x24150efee08 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x24150f02ee0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x24150f03430 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x24150f034d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24150f03538 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x24150f035b0 prev 0x24150f03430 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x24150f032b0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x24150f03330 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x24150f03770 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x24150f03690 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x24150f039c0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x24150f03a60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24150f03ac8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24150f03b40 prev 0x24150f039c0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x24150f03848 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x24150f038c8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x24150f03da0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x24150f03e40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24150f78ff0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24150f79068 prev 0x24150f03da0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x24150f03c20 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x24150f03ca0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x24150f79388 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x24150f79428 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x24150f79490 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24150f79508 prev 0x24150f79388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x24150f79208 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x24150f79288 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x24150f795b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f79998 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x24150f79700 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x24150f79780 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x24150f79800 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x24150f79bf0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x24150f79a80 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x24150f79af8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f79e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24150f79d90 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x24150f79f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f7f358 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150f7f150 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x24150f7f1c8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f7f240 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f7f678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x24150f7f500 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x24150f7f578 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24150f7f728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f7fb40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x24150f7fbe0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x24150f7fc48 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x24150f7fcb0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24150f7fd30 prev 0x24150f7fb40 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x24150f7f870 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x24150f7f8f0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x24150f7f968 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f7a138 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150f7fe18 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x24150f7fe98 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x24150f7ff10 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f7ff88 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f7a3e0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x24150f7a480 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x24150f7a4f0 prev 0x24150f7a3e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x24150f7a300 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x24150f7a598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x24150f7a8e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24150f7a760 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x24150f7a7e0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x24150f7a990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x24150f7acd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x24150f7ab58 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x24150f7abd8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x24150f7ad88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x24150f7b048 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24150f7af50 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x24150f7b0f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x24150f7b508 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x24150f7b2f0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x24150f7b370 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x24150f7b3e8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150f7b5c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x24150f7b9a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x24150f7b788 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x24150f7b808 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x24150f7b880 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150f7ba58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x24150f7bd00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24150f7bc20 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x24150f7bda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x24150f780e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x24150f7bf70 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x24150f77fe0 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x24150f78190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x24150f78438 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x24150f78358 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x24150f784e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x24150f78770 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x24150f78600 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x24150f78b00 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x24150f78840 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24150f788b8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24150f78930 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x24150f78eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f78ca0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24150f78d18 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x24150f78f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f7d348 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x24150f7d3e8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x24150f7d450 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x24150f7d4c8 prev 0x24150f7d348 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x24150f7d128 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24150f7d1a0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x24150f7d7c0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x24150f7d860 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x24150f7d8c8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x24150f7d940 prev 0x24150f7d7c0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x24150f7d5a0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24150f7d618 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x24150f7dc20 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x24150f7da18 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24150f7da90 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x24150f7db08 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x24150f7df30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f7ddc0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24150f7de38 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x24150f7dfe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f7e358 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f7e138 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24150f7e1b0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x24150f7e5a0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x24150f7e640 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x24150f7e6b0 prev 0x24150f7e5a0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x24150f7e430 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x24150f7e998 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x24150f7e780 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24150f7e7f8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f7ebe0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x24150f7ea70 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x24150f7eae8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x24150f7ef78 <line:306:1, line:308:1>
|   `-ReturnStmt 0x24150f7ef68 <line:307:5, col:56>
|     `-ConditionalOperator 0x24150f7ef38 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x24150f7eda0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x24150f7ed80 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x24150f7ed50 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x24150f7eca8 <col:13> 'const wchar_t *' lvalue ParmVar 0x24150f7ea70 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x24150f7ed68 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x24150f7ed30 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x24150f7ed08 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x24150f7ecc8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x24150f7ef20 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x24150f7edc0 <col:29> 'int' 0
|       `-CallExpr 0x24150f7eec0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x24150f7eea8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x24150f7ede8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x24150f7e998 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x24150f7eef0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x24150f7ee08 <col:41> 'const wchar_t *' lvalue ParmVar 0x24150f7ea70 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x24150f7ef08 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x24150f7ee28 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x24150f7eae8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f7c318 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x24150f7efa0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24150f7c020 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24150f7c098 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24150f7c110 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24150f7c780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24150f7c4c0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24150f7c538 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x24150f7c5b0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150f7c838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f7cc48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x24150f7cce8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x24150f7cd50 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x24150f7cdb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x24150f7ce38 prev 0x24150f7cc48 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x24150f7c978 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f7c9f0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24150f7ca68 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f82230 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x24150f7cf18 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24150f7cf90 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x24150f82080 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24150f820f8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x24150f825e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24150f823d8 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x24150f82450 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x24150f824c8 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150f82698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f829f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f827d8 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24150f82850 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x24150f82c40 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x24150f82ad0 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24150f82b48 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x24150f82e88 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f82d18 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24150f82d90 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x24150f85110 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f82f60 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x24150f82fd8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x24150f85418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f852a8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x24150f85320 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x24150f854c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f85930 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x24150f85608 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x24150f85680 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x24150f85760 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x24150f85c50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x24150f85ad8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x24150f85cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f83100 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x24150f85e38 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x24150f85eb0 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f85f30 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x24150f833b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x24150f832d8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x24150f83458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f83820 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x24150f83598 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x24150f83610 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f83688 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x24150f83a78 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f83900 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24150f83978 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x24150f83e18 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24150f83b50 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f83bc8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24150f83c40 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f86148 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24150f83ef8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f83f70 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24150f83fe8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f865a0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150f86228 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f862a0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24150f86318 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f86390 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f869f8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x24150f86688 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24150f86700 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x24150f86778 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x24150f867f0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f86e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x24150f86ba0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x24150f86c18 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x24150f86c90 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150f86f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f871e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x24150f87058 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x24150f87570 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x24150f872b0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24150f87328 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f873a0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x24150f87928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x24150f87710 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x24150f87788 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x24150f879d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f87d38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x24150f87b18 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x24150f87b90 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f87fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24150f87ed0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x24150f88050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f81430 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150f81168 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x24150f811e0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f81258 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f817e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24150f815d0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x24150f81648 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24150f81898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f81b48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x24150f819d8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x24150f81a50 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f81db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24150f81ce0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x24150f81e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f8f2e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150f81fa0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x24150f8f150 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f8f1c8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f8f5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24150f8f480 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x24150f8f4f8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x24150f8f6a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x24150f8faa0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24150f8f7e0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24150f8f858 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x24150f8f8d0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f8fee8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150f8fb80 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x24150f8fbf8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x24150f8fc70 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f8fce8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f8a100 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f8ffd0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24150f90048 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x24150f8a3e8 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24150f8a1d8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f8a250 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24150f8a2c8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f8a640 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f8a4c8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x24150f8a540 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x24150f8a928 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x24150f8a718 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f8a790 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24150f8a808 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f8ac18 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24150f8aa08 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f8aa80 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24150f8aaf8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f8afa0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150f8acf8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f8ad70 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24150f8ade8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f8ae60 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f88278 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24150f8b088 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f880e0 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x24150f88158 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x24150f88600 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x24150f88358 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f883d0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24150f88448 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x24150f884c0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x24150f88860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x24150f88788 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x24150f88908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x24150f88c40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f88ac8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f88b40 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x24150f88cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x24150f8d130 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x24150f88eb0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f88f28 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x24150f88fa0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150f8d1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x24150f8d5b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x24150f8d3a8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x24150f8d420 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x24150f8d498 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x24150f8d668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x24150f8d900 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24150f8d828 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x24150f8d9a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x24150f8dcd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x24150f8db68 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x24150f8dbe0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x24150f8dd88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x24150f8e020 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24150f8df48 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x24150f8e0c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x24150f8c370 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x24150f8c298 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x24150f8c418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x24150f8c750 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x24150f8c5d8 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x24150f8c650 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x24150f8c800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-EnumDecl 0x24150f8c910 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:23:9, line:31:1> line:23:9
| |-EnumConstantDecl 0x24150f8c9f0 <line:24:5> col:5 referenced ASN1_STATE_START 'int'
| |-EnumConstantDecl 0x24150f8ca48 <line:25:5> col:5 referenced ASN1_STATE_PRE_COPY 'int'
| |-EnumConstantDecl 0x24150f8caa0 <line:26:5> col:5 referenced ASN1_STATE_HEADER 'int'
| |-EnumConstantDecl 0x24150f8caf8 <line:27:5> col:5 referenced ASN1_STATE_HEADER_COPY 'int'
| |-EnumConstantDecl 0x24150f8cb50 <line:28:5> col:5 referenced ASN1_STATE_DATA_COPY 'int'
| |-EnumConstantDecl 0x24150f8cba8 <line:29:5> col:5 referenced ASN1_STATE_POST_COPY 'int'
| `-EnumConstantDecl 0x24150f8cc00 <line:30:5> col:5 referenced ASN1_STATE_DONE 'int'
|-TypedefDecl 0x24150f8ccb8 <line:23:1, line:31:3> col:3 referenced asn1_bio_state_t 'enum asn1_bio_state_t':'asn1_bio_state_t'
| `-ElaboratedType 0x24150f8cc60 'enum asn1_bio_state_t' sugar
|   `-EnumType 0x24150f8c9d0 'asn1_bio_state_t'
|     `-Enum 0x24150f8c910 ''
|-RecordDecl 0x24150f8cd28 <line:33:9, line:36:1> line:33:16 invalid struct BIO_ASN1_EX_FUNCS_st definition
| |-FieldDecl 0x24150f8cdf8 <line:34:5, col:19> col:19 invalid ex_func 'int *'
| `-FieldDecl 0x24150f8ce68 <line:35:5, col:19> col:19 invalid ex_free_func 'int *'
|-TypedefDecl 0x24150f8cf18 <line:33:1, line:36:3> col:3 referenced BIO_ASN1_EX_FUNCS 'struct BIO_ASN1_EX_FUNCS_st':'struct BIO_ASN1_EX_FUNCS_st'
| `-ElaboratedType 0x24150f8cec0 'struct BIO_ASN1_EX_FUNCS_st' sugar
|   `-RecordType 0x24150f8cdc0 'struct BIO_ASN1_EX_FUNCS_st'
|     `-Record 0x24150f8cd28 'BIO_ASN1_EX_FUNCS_st'
|-RecordDecl 0x24150f8cf88 <line:38:9, line:59:1> line:38:16 invalid struct BIO_ASN1_BUF_CTX_t definition
| |-FieldDecl 0x24150f8d070 <line:40:5, col:22> col:22 referenced state 'asn1_bio_state_t':'asn1_bio_state_t'
| |-FieldDecl 0x24150f8b110 <line:42:5, col:20> col:20 referenced buf 'unsigned char *'
| |-FieldDecl 0x24150f8b180 <line:44:5, col:9> col:9 referenced bufsize 'int'
| |-FieldDecl 0x24150f8b1f0 <line:46:5, col:9> col:9 referenced bufpos 'int'
| |-FieldDecl 0x24150f8b260 <line:48:5, col:9> col:9 referenced buflen 'int'
| |-FieldDecl 0x24150f8b2d0 <line:50:5, col:9> col:9 referenced copylen 'int'
| |-FieldDecl 0x24150f8b340 <line:52:5, col:9> col:9 referenced asn1_class 'int'
| |-FieldDecl 0x24150f8b3b0 <col:5, col:21> col:21 referenced asn1_tag 'int'
| |-FieldDecl 0x24150f8b420 <line:53:5, col:19> col:19 invalid prefix 'int *'
| |-FieldDecl 0x24150f8b490 <col:5, col:28> col:28 invalid prefix_free 'int *'
| |-FieldDecl 0x24150f8b500 <col:5, col:42> col:42 invalid suffix 'int *'
| |-FieldDecl 0x24150f8b570 <col:5, col:51> col:51 invalid suffix_free 'int *'
| |-FieldDecl 0x24150f8b5e0 <line:55:5, col:20> col:20 referenced ex_buf 'unsigned char *'
| |-FieldDecl 0x24150f8b650 <line:56:5, col:9> col:9 referenced ex_len 'int'
| |-FieldDecl 0x24150f8b6c0 <line:57:5, col:9> col:9 referenced ex_pos 'int'
| `-FieldDecl 0x24150f8b730 <line:58:5, col:11> col:11 referenced ex_arg 'void *'
|-TypedefDecl 0x24150f8b7e8 <line:38:1, line:59:3> col:3 referenced BIO_ASN1_BUF_CTX 'struct BIO_ASN1_BUF_CTX_t':'struct BIO_ASN1_BUF_CTX_t'
| `-ElaboratedType 0x24150f8b790 'struct BIO_ASN1_BUF_CTX_t' sugar
|   `-RecordType 0x24150f8d020 'struct BIO_ASN1_BUF_CTX_t'
|     `-Record 0x24150f8cf88 'BIO_ASN1_BUF_CTX_t'
|-FunctionDecl 0x24150f8ba60 <line:61:1, col:59> col:12 invalid asn1_bio_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x24150f8b870 <col:27, col:32> col:32 invalid h 'int *'
| |-ParmVarDecl 0x24150f8b8f0 <col:35, col:47> col:47 buf 'const char *'
| `-ParmVarDecl 0x24150f8b970 <col:52, col:56> col:56 num 'int'
|-FunctionDecl 0x24150f8bd20 <line:62:1, col:53> col:12 invalid asn1_bio_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x24150f8bb30 <col:26, col:31> col:31 invalid h 'int *'
| |-ParmVarDecl 0x24150f8bbb0 <col:34, col:40> col:40 buf 'char *'
| `-ParmVarDecl 0x24150f8bc30 <col:45, col:49> col:49 size 'int'
|-FunctionDecl 0x24150f8bf50 <line:63:1, col:49> col:12 invalid asn1_bio_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x24150f8bdf0 <col:26, col:31> col:31 invalid h 'int *'
| `-ParmVarDecl 0x24150f8be70 <col:34, col:46> col:46 str 'const char *'
|-FunctionDecl 0x24150f891b0 <line:64:1, col:53> col:12 invalid asn1_bio_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x24150f8c018 <col:26, col:31> col:31 invalid h 'int *'
| |-ParmVarDecl 0x24150f8c098 <col:34, col:40> col:40 str 'char *'
| `-ParmVarDecl 0x24150f89108 <col:45, col:49> col:49 size 'int'
|-FunctionDecl 0x24150f89500 <line:65:1, col:65> col:13 invalid asn1_bio_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x24150f89280 <col:27, col:32> col:32 invalid h 'int *'
| |-ParmVarDecl 0x24150f89300 <col:35, col:39> col:39 cmd 'int'
| |-ParmVarDecl 0x24150f89380 <col:44, col:49> col:49 arg1 'long'
| `-ParmVarDecl 0x24150f89400 <col:55, col:61> col:61 arg2 'void *'
|-FunctionDecl 0x24150f896a0 <line:66:1, col:31> col:12 invalid asn1_bio_new 'int (int *)' static
| `-ParmVarDecl 0x24150f895d8 <col:25, col:30> col:30 invalid h 'int *'
|-FunctionDecl 0x24150f897f8 <line:67:1, col:35> col:12 invalid asn1_bio_free 'int (int *)' static
| `-ParmVarDecl 0x24150f89760 <col:26, col:31> col:31 invalid data 'int *'
|-FunctionDecl 0x24150f89aa0 <line:68:1, col:68> col:13 invalid asn1_bio_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x24150f898b8 <col:36, col:41> col:41 invalid h 'int *'
| |-ParmVarDecl 0x24150f89938 <col:44, col:48> col:48 cmd 'int'
| `-ParmVarDecl 0x24150f899b8 <col:53, col:66> col:66 invalid fp 'int *'
|-FunctionDecl 0x24150f89db0 <line:70:1, col:57> col:12 used asn1_bio_init 'int (BIO_ASN1_BUF_CTX *, int)' static
| |-ParmVarDecl 0x24150f89be8 <col:26, col:44> col:44 ctx 'BIO_ASN1_BUF_CTX *'
| `-ParmVarDecl 0x24150f89c68 <col:49, col:53> col:53 size 'int'
|-FunctionDecl 0x24150f92210 <line:71:1, line:72:74> line:71:12 invalid asn1_bio_flush_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t)' static
| |-ParmVarDecl 0x24150f89e90 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x24150f89f08 <col:38, col:56> col:56 ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x24150f89f88 <line:72:30, col:44> col:44 invalid cleanup 'int *'
| `-ParmVarDecl 0x24150f8a000 <col:53, col:70> col:70 next 'asn1_bio_state_t':'asn1_bio_state_t'
|-FunctionDecl 0x24150f92630 <line:73:1, line:76:58> line:73:12 invalid asn1_bio_setup_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t, asn1_bio_state_t)' static
| |-ParmVarDecl 0x24150f922e8 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x24150f92360 <col:38, col:56> col:56 ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x24150f923e0 <line:74:30, col:44> col:44 invalid setup 'int *'
| |-ParmVarDecl 0x24150f92458 <line:75:30, col:47> col:47 ex_state 'asn1_bio_state_t':'asn1_bio_state_t'
| `-ParmVarDecl 0x24150f924d0 <line:76:30, col:47> col:47 other_state 'asn1_bio_state_t':'asn1_bio_state_t'
|-VarDecl 0x24150f92710 <line:78:1, col:25> col:25 invalid methods_asn1 'const int' static
|-FunctionDecl 0x24150f928a0 <line:91:1, line:94:1> line:91:19 invalid BIO_f_asn1 'const int *(void)'
| `-CompoundStmt 0x24150f92958 <line:92:1, line:94:1>
|-FunctionDecl 0x24150f92a18 <line:96:1, line:110:1> line:96:12 invalid asn1_bio_new 'int (int *)' static
| |-ParmVarDecl 0x24150f92980 <col:25, col:30> col:30 invalid b 'int *'
| `-CompoundStmt 0x24150f914d8 <line:97:1, line:110:1>
|   |-DeclStmt 0x24150f92da0 <line:98:5, col:57>
|   | `-VarDecl 0x24150f92ae8 <col:5, col:56> col:23 used ctx 'BIO_ASN1_BUF_CTX *' cinit
|   |   `-ImplicitCastExpr 0x24150f92d88 <col:29, col:56> 'BIO_ASN1_BUF_CTX *' <IntegralToPointer>
|   |     `-CallExpr 0x24150f92d60 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x24150f92d48 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x24150f92c68 <col:29> 'int ()' Function 0x24150f92ba0 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x24150f92cf8 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x24150f92cd8 <col:50, col:55> 'BIO_ASN1_BUF_CTX':'struct BIO_ASN1_BUF_CTX_t' lvalue
|   |           `-UnaryOperator 0x24150f92cc0 <col:51, col:52> 'BIO_ASN1_BUF_CTX':'struct BIO_ASN1_BUF_CTX_t' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x24150f92ca8 <col:52> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x24150f92c88 <col:52> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f92ae8 'ctx' 'BIO_ASN1_BUF_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x24150f92f00 <line:100:5, line:101:16>
|   | |-BinaryOperator 0x24150f92ea8 <line:100:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x24150f92e78 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:100:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24150f92db8 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f92ae8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x24150f92e90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x24150f92e58 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x24150f92e30 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x24150f92df0 <col:26> 'int' 0
|   | `-ReturnStmt 0x24150f92ef0 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:101:9, col:16>
|   |   `-IntegerLiteral 0x24150f92ec8 <col:16> 'int' 0
|   |-IfStmt 0x24150f91220 <line:102:5, line:105:5>
|   | |-UnaryOperator 0x24150f93038 <line:102:9, col:50> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x24150f92ff0 <col:10, col:50> 'int'
|   | |   |-ImplicitCastExpr 0x24150f92fd8 <col:10> 'int (*)(BIO_ASN1_BUF_CTX *, int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x24150f92f18 <col:10> 'int (BIO_ASN1_BUF_CTX *, int)' Function 0x24150f89db0 'asn1_bio_init' 'int (BIO_ASN1_BUF_CTX *, int)'
|   | |   |-ImplicitCastExpr 0x24150f93020 <col:24> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x24150f92f38 <col:24> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f92ae8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | |   `-IntegerLiteral 0x24150f92f58 <line:21:31> 'int' 20
|   | `-CompoundStmt 0x24150f91200 <line:102:53, line:105:5>
|   |   |-CallExpr 0x24150f91188 <line:103:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x24150f91170 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x24150f93140 <col:9> 'int ()' Function 0x24150f93078 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x24150f911b0 <col:22> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24150f93160 <col:22> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f92ae8 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   `-ReturnStmt 0x24150f911f0 <line:104:9, col:16>
|   |     `-IntegerLiteral 0x24150f911c8 <col:16> 'int' 0
|   `-ReturnStmt 0x24150f914c8 <line:109:5, col:12>
|     `-IntegerLiteral 0x24150f914a0 <col:12> 'int' 1
|-FunctionDecl 0x24150f91668 prev 0x24150f89db0 <line:112:1, line:122:1> line:112:12 used asn1_bio_init 'int (BIO_ASN1_BUF_CTX *, int)' static
| |-ParmVarDecl 0x24150f91518 <col:26, col:44> col:44 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x24150f91598 <col:49, col:53> col:53 used size 'int'
| `-CompoundStmt 0x24150f91d58 <line:113:1, line:122:1>
|   |-BinaryOperator 0x24150f91920 <line:114:5, col:35> 'unsigned char *' '='
|   | |-MemberExpr 0x24150f91750 <col:5, col:10> 'unsigned char *' lvalue ->buf 0x24150f8b110
|   | | `-ImplicitCastExpr 0x24150f91738 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24150f91718 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f91518 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x24150f91908 <col:16, col:35> 'unsigned char *' <IntegralToPointer>
|   |   `-CallExpr 0x24150f918c8 <col:16, col:35> 'int'
|   |     |-ImplicitCastExpr 0x24150f918b0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x24150f91870 <col:16> 'int ()' Function 0x24150f917a8 'OPENSSL_malloc' 'int ()'
|   |     `-ImplicitCastExpr 0x24150f918f0 <col:31> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x24150f91890 <col:31> 'int' lvalue ParmVar 0x24150f91598 'size' 'int'
|   |-IfStmt 0x24150f91ab8 <line:115:5, line:116:16>
|   | |-BinaryOperator 0x24150f91a60 <line:115:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x24150f91a30 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:115:9, col:14> 'unsigned char *' <LValueToRValue>
|   | | | `-MemberExpr 0x24150f91978 <col:9, col:14> 'unsigned char *' lvalue ->buf 0x24150f8b110
|   | | |   `-ImplicitCastExpr 0x24150f91960 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x24150f91940 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f91518 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x24150f91a48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'unsigned char *' <BitCast>
|   | |   `-ParenExpr 0x24150f91a10 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x24150f919e8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x24150f919a8 <col:26> 'int' 0
|   | `-ReturnStmt 0x24150f91aa8 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:116:9, col:16>
|   |   `-IntegerLiteral 0x24150f91a80 <col:16> 'int' 0
|   |-BinaryOperator 0x24150f91b70 <line:117:5, col:20> 'int' '='
|   | |-MemberExpr 0x24150f91b08 <col:5, col:10> 'int' lvalue ->bufsize 0x24150f8b180
|   | | `-ImplicitCastExpr 0x24150f91af0 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24150f91ad0 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f91518 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x24150f91b58 <col:20> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x24150f91b38 <col:20> 'int' lvalue ParmVar 0x24150f91598 'size' 'int'
|   |-BinaryOperator 0x24150f91d00 <line:120:5, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   | |-MemberExpr 0x24150f91c98 <col:5, col:10> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x24150f8d070
|   | | `-ImplicitCastExpr 0x24150f91c80 <col:5> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24150f91c60 <col:5> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f91518 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | `-ImplicitCastExpr 0x24150f91ce8 <col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |   `-DeclRefExpr 0x24150f91cc8 <col:18> 'int' EnumConstant 0x24150f8c9f0 'ASN1_STATE_START' 'int'
|   `-ReturnStmt 0x24150f91d48 <line:121:5, col:12>
|     `-IntegerLiteral 0x24150f91d20 <col:12> 'int' 1
|-FunctionDecl 0x24150f91e40 <line:124:1, line:141:1> line:124:12 invalid asn1_bio_free 'int (int *)' static
| |-ParmVarDecl 0x24150f91da8 <col:26, col:31> col:31 invalid b 'int *'
| `-CompoundStmt 0x24150f93660 <line:125:1, line:141:1>
|   |-DeclStmt 0x24150f91f78 <line:126:5, col:26>
|   | `-VarDecl 0x24150f91f10 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-IfStmt 0x24150f92068 <line:128:5, line:129:16>
|   | |-OpaqueValueExpr 0x24150f92050 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x24150f92040 <col:9, col:16>
|   |   `-IntegerLiteral 0x24150f92018 <col:16> 'int' 0
|   |-IfStmt 0x24150f933a8 <line:132:5, line:133:16>
|   | |-BinaryOperator 0x24150f93350 <line:132:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x24150f93320 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:132:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24150f93278 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f91f10 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x24150f93338 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x24150f93300 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x24150f932d8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x24150f93298 <col:26> 'int' 0
|   | `-ReturnStmt 0x24150f93398 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:133:9, col:16>
|   |   `-IntegerLiteral 0x24150f93370 <col:16> 'int' 0
|   |-CallExpr 0x24150f93460 <line:135:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x24150f93448 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x24150f933c0 <col:5> 'int ()' Function 0x24150f93078 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x24150f93488 <col:18, col:23> 'unsigned char *' <LValueToRValue>
|   |   `-MemberExpr 0x24150f93418 <col:18, col:23> 'unsigned char *' lvalue ->buf 0x24150f8b110
|   |     `-ImplicitCastExpr 0x24150f93400 <col:18> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x24150f933e0 <col:18> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f91f10 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |-CallExpr 0x24150f934f8 <line:136:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x24150f934e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x24150f934a0 <col:5> 'int ()' Function 0x24150f93078 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x24150f93520 <col:18> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x24150f934c0 <col:18> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f91f10 'ctx' 'BIO_ASN1_BUF_CTX *'
|   `-ReturnStmt 0x24150f93650 <line:140:5, col:12>
|     `-IntegerLiteral 0x24150f93628 <col:12> 'int' 1
|-FunctionDecl 0x24150f93860 <line:143:1, line:240:1> line:143:12 invalid asn1_bio_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x24150f936b8 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x24150f93738 <col:35, col:47> col:47 used in 'const char *'
| |-ParmVarDecl 0x24150f937b8 <col:51, col:55> col:55 used inl 'int'
| `-CompoundStmt 0x24150f416b0 <line:144:1, line:240:1>
|   |-DeclStmt 0x24150f939a8 <line:145:5, col:26>
|   | `-VarDecl 0x24150f93940 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-DeclStmt 0x24150f93b60 <line:146:5, col:26>
|   | |-VarDecl 0x24150f939d8 <col:5, col:9> col:9 used wrmax 'int'
|   | |-VarDecl 0x24150f93a58 <col:5, col:16> col:16 used wrlen 'int'
|   | `-VarDecl 0x24150f93ad8 <col:5, col:23> col:23 used ret 'int'
|   |-DeclStmt 0x24150f93bf8 <line:147:5, col:21>
|   | `-VarDecl 0x24150f93b90 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-IfStmt 0x24150f94130 <line:152:5, line:153:16>
|   | |-OpaqueValueExpr 0x24150f94118 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x24150f94108 <col:9, col:16>
|   |   `-IntegerLiteral 0x24150f940e0 <col:16> 'int' 0
|   |-BinaryOperator 0x24150f951d8 <line:155:5, col:13> 'int' '='
|   | |-DeclRefExpr 0x24150f94148 <col:5> 'int' lvalue Var 0x24150f93a58 'wrlen' 'int'
|   | `-IntegerLiteral 0x24150f951b0 <col:13> 'int' 0
|   |-BinaryOperator 0x24150f95270 <line:156:5, col:12> 'int' '='
|   | |-DeclRefExpr 0x24150f951f8 <col:5> 'int' lvalue Var 0x24150f93ad8 'ret' 'int'
|   | `-UnaryOperator 0x24150f95258 <col:11, col:12> 'int' prefix '-'
|   |   `-IntegerLiteral 0x24150f95230 <col:12> 'int' 1
|   |-ForStmt 0x24150f413d8 <line:158:5, line:232:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x24150f413c0 <line:158:14, line:232:5>
|   |   `-SwitchStmt 0x24150f95328 <line:159:9, line:230:9>
|   |     |-ImplicitCastExpr 0x24150f95310 <line:159:17, col:22> 'int' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x24150f952f8 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |     |   `-MemberExpr 0x24150f952c8 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x24150f8d070
|   |     |     `-ImplicitCastExpr 0x24150f952b0 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x24150f95290 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     `-CompoundStmt 0x24150f412d0 <col:29, line:230:9>
|   |       |-CaseStmt 0x24150f95380 <line:162:9, line:165:24>
|   |       | |-ConstantExpr 0x24150f95368 <line:162:14> 'int'
|   |       | | `-DeclRefExpr 0x24150f95348 <col:14> 'int' EnumConstant 0x24150f8c9f0 'ASN1_STATE_START' 'int'
|   |       | `-IfStmt 0x24150f95490 <line:163:13, line:165:24>
|   |       |   |-OpaqueValueExpr 0x24150f95478 <<invalid sloc>> '_Bool'
|   |       |   `-ReturnStmt 0x24150f95468 <col:17, col:24>
|   |       |     `-IntegerLiteral 0x24150f95440 <col:24> 'int' 0
|   |       |-BreakStmt 0x24150f954a8 <line:166:13>
|   |       |-CaseStmt 0x24150f954e8 <line:169:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x24150f954d0 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x24150f954b0 <col:14> 'int' EnumConstant 0x24150f8ca48 'ASN1_STATE_PRE_COPY' 'int'
|   |       | `-NullStmt 0x24150f955a8 <<invalid sloc>>
|   |       |-IfStmt 0x24150f95698 <line:174:13, line:175:22>
|   |       | |-BinaryOperator 0x24150f95610 <line:174:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x24150f955f8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x24150f955b0 <col:17> 'int' lvalue Var 0x24150f93ad8 'ret' 'int'
|   |       | | `-IntegerLiteral 0x24150f955d0 <col:24> 'int' 0
|   |       | `-GotoStmt 0x24150f95680 <line:175:17, col:22> 'done' 0x24150f95630
|   |       |-BreakStmt 0x24150f956b0 <line:177:13>
|   |       |-CaseStmt 0x24150f956f0 <line:179:9, line:180:69>
|   |       | |-ConstantExpr 0x24150f956d8 <line:179:14> 'int'
|   |       | | `-DeclRefExpr 0x24150f956b8 <col:14> 'int' EnumConstant 0x24150f8caa0 'ASN1_STATE_HEADER' 'int'
|   |       | `-BinaryOperator 0x24150f95a18 <line:180:13, col:69> 'int' '='
|   |       |   |-MemberExpr 0x24150f95750 <col:13, col:18> 'int' lvalue ->buflen 0x24150f8b260
|   |       |   | `-ImplicitCastExpr 0x24150f95738 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x24150f95718 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-BinaryOperator 0x24150f959f8 <col:27, col:69> 'int' '-'
|   |       |     |-CallExpr 0x24150f95958 <col:27, col:65> 'int'
|   |       |     | |-ImplicitCastExpr 0x24150f95940 <col:27> 'int (*)()' <FunctionToPointerDecay>
|   |       |     | | `-DeclRefExpr 0x24150f95870 <col:27> 'int ()' Function 0x24150f957a8 'ASN1_object_size' 'int ()'
|   |       |     | |-IntegerLiteral 0x24150f95890 <col:44> 'int' 0
|   |       |     | |-ImplicitCastExpr 0x24150f95990 <col:47> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x24150f958b8 <col:47> 'int' lvalue ParmVar 0x24150f937b8 'inl' 'int'
|   |       |     | `-ImplicitCastExpr 0x24150f959a8 <col:52, col:57> 'int' <LValueToRValue>
|   |       |     |   `-MemberExpr 0x24150f95910 <col:52, col:57> 'int' lvalue ->asn1_tag 0x24150f8b3b0
|   |       |     |     `-ImplicitCastExpr 0x24150f958f8 <col:52> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |     |       `-DeclRefExpr 0x24150f958d8 <col:52> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |     `-ImplicitCastExpr 0x24150f959e0 <col:69> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x24150f959c0 <col:69> 'int' lvalue ParmVar 0x24150f937b8 'inl' 'int'
|   |       |-CallExpr 0x24150f95c80 <line:181:13, col:55> 'int'
|   |       | |-ImplicitCastExpr 0x24150f95c68 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x24150f95b28 <col:13> 'int ()' Function 0x24150f95a60 'OPENSSL_assert' 'int ()'
|   |       | `-BinaryOperator 0x24150f95c48 <col:28, col:48> 'int' '<='
|   |       |   |-ImplicitCastExpr 0x24150f95c18 <col:28, col:33> 'int' <LValueToRValue>
|   |       |   | `-MemberExpr 0x24150f95b80 <col:28, col:33> 'int' lvalue ->buflen 0x24150f8b260
|   |       |   |   `-ImplicitCastExpr 0x24150f95b68 <col:28> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |     `-DeclRefExpr 0x24150f95b48 <col:28> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-ImplicitCastExpr 0x24150f95c30 <col:43, col:48> 'int' <LValueToRValue>
|   |       |     `-MemberExpr 0x24150f95be8 <col:43, col:48> 'int' lvalue ->bufsize 0x24150f8b180
|   |       |       `-ImplicitCastExpr 0x24150f95bd0 <col:43> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |         `-DeclRefExpr 0x24150f95bb0 <col:43> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-BinaryOperator 0x24150f95d60 <line:182:13, col:22> 'unsigned char *' '='
|   |       | |-DeclRefExpr 0x24150f95ca8 <col:13> 'unsigned char *' lvalue Var 0x24150f93b90 'p' 'unsigned char *'
|   |       | `-ImplicitCastExpr 0x24150f95d48 <col:17, col:22> 'unsigned char *' <LValueToRValue>
|   |       |   `-MemberExpr 0x24150f95d18 <col:17, col:22> 'unsigned char *' lvalue ->buf 0x24150f8b110
|   |       |     `-ImplicitCastExpr 0x24150f95d00 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x24150f95ce0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-CallExpr 0x24150f96020 <line:183:13, col:71> 'int'
|   |       | |-ImplicitCastExpr 0x24150f96008 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x24150f95e70 <col:13> 'int ()' Function 0x24150f95da8 'ASN1_put_object' 'int ()'
|   |       | |-UnaryOperator 0x24150f95ed8 <col:29, col:30> 'unsigned char **' prefix '&' cannot overflow
|   |       | | `-DeclRefExpr 0x24150f95e90 <col:30> 'unsigned char *' lvalue Var 0x24150f93b90 'p' 'unsigned char *'
|   |       | |-IntegerLiteral 0x24150f95ef0 <col:33> 'int' 0
|   |       | |-ImplicitCastExpr 0x24150f96068 <col:36> 'int' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x24150f95f18 <col:36> 'int' lvalue ParmVar 0x24150f937b8 'inl' 'int'
|   |       | |-ImplicitCastExpr 0x24150f96080 <col:41, col:46> 'int' <LValueToRValue>
|   |       | | `-MemberExpr 0x24150f95f70 <col:41, col:46> 'int' lvalue ->asn1_tag 0x24150f8b3b0
|   |       | |   `-ImplicitCastExpr 0x24150f95f58 <col:41> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x24150f95f38 <col:41> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x24150f96098 <col:56, col:61> 'int' <LValueToRValue>
|   |       |   `-MemberExpr 0x24150f95fd8 <col:56, col:61> 'int' lvalue ->asn1_class 0x24150f8b340
|   |       |     `-ImplicitCastExpr 0x24150f95fc0 <col:56> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x24150f95fa0 <col:56> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |-BinaryOperator 0x24150f96150 <line:184:13, col:28> 'int' '='
|   |       | |-MemberExpr 0x24150f960e8 <col:13, col:18> 'int' lvalue ->copylen 0x24150f8b2d0
|   |       | | `-ImplicitCastExpr 0x24150f960d0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x24150f960b0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x24150f96138 <col:28> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x24150f96118 <col:28> 'int' lvalue ParmVar 0x24150f937b8 'inl' 'int'
|   |       |-BinaryOperator 0x24150f96228 <line:185:13, col:26> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       | |-MemberExpr 0x24150f961c0 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x24150f8d070
|   |       | | `-ImplicitCastExpr 0x24150f96190 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x24150f96170 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x24150f96210 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |   `-DeclRefExpr 0x24150f961f0 <col:26> 'int' EnumConstant 0x24150f8caf8 'ASN1_STATE_HEADER_COPY' 'int'
|   |       |-BreakStmt 0x24150f96248 <line:187:13>
|   |       |-CaseStmt 0x24150f96288 <line:189:9, <invalid sloc>>
|   |       | |-ConstantExpr 0x24150f96270 <col:14> 'int'
|   |       | | `-DeclRefExpr 0x24150f96250 <col:14> 'int' EnumConstant 0x24150f8caf8 'ASN1_STATE_HEADER_COPY' 'int'
|   |       | `-NullStmt 0x24150f96568 <<invalid sloc>>
|   |       |-IfStmt 0x24150f96608 <line:191:13, line:192:22>
|   |       | |-BinaryOperator 0x24150f965d0 <line:191:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x24150f965b8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x24150f96570 <col:17> 'int' lvalue Var 0x24150f93ad8 'ret' 'int'
|   |       | | `-IntegerLiteral 0x24150f96590 <col:24> 'int' 0
|   |       | `-GotoStmt 0x24150f965f0 <line:192:17, col:22> 'done' 0x24150f95630
|   |       |-CompoundAssignOperator 0x24150f966c0 <line:194:13, col:28> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x24150f96658 <col:13, col:18> 'int' lvalue ->buflen 0x24150f8b260
|   |       | | `-ImplicitCastExpr 0x24150f96640 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x24150f96620 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x24150f966a8 <col:28> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x24150f96688 <col:28> 'int' lvalue Var 0x24150f93ad8 'ret' 'int'
|   |       |-IfStmt 0x24150f969d0 <line:195:13, line:200:13> has_else
|   |       | |-ImplicitCastExpr 0x24150f96758 <line:195:17, col:22> 'int' <LValueToRValue>
|   |       | | `-MemberExpr 0x24150f96728 <col:17, col:22> 'int' lvalue ->buflen 0x24150f8b260
|   |       | |   `-ImplicitCastExpr 0x24150f96710 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x24150f966f0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | |-CompoundAssignOperator 0x24150f96810 <line:196:17, col:32> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | | |-MemberExpr 0x24150f967a8 <col:17, col:22> 'int' lvalue ->bufpos 0x24150f8b1f0
|   |       | | | `-ImplicitCastExpr 0x24150f96790 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x24150f96770 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | | `-ImplicitCastExpr 0x24150f967f8 <col:32> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x24150f967d8 <col:32> 'int' lvalue Var 0x24150f93ad8 'ret' 'int'
|   |       | `-CompoundStmt 0x24150f969b0 <line:197:18, line:200:13>
|   |       |   |-BinaryOperator 0x24150f968d0 <line:198:17, col:31> 'int' '='
|   |       |   | |-MemberExpr 0x24150f96878 <col:17, col:22> 'int' lvalue ->bufpos 0x24150f8b1f0
|   |       |   | | `-ImplicitCastExpr 0x24150f96860 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   | |   `-DeclRefExpr 0x24150f96840 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   | `-IntegerLiteral 0x24150f968a8 <col:31> 'int' 0
|   |       |   `-BinaryOperator 0x24150f96990 <line:199:17, col:30> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       |     |-MemberExpr 0x24150f96928 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x24150f8d070
|   |       |     | `-ImplicitCastExpr 0x24150f96910 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |     |   `-DeclRefExpr 0x24150f968f0 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |     `-ImplicitCastExpr 0x24150f96978 <col:30> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |       `-DeclRefExpr 0x24150f96958 <col:30> 'int' EnumConstant 0x24150f8cb50 'ASN1_STATE_DATA_COPY' 'int'
|   |       |-BreakStmt 0x24150f969f8 <line:202:13>
|   |       |-CaseStmt 0x24150f96a38 <line:204:9, line:209:25>
|   |       | |-ConstantExpr 0x24150f96a20 <line:204:14> 'int'
|   |       | | `-DeclRefExpr 0x24150f96a00 <col:14> 'int' EnumConstant 0x24150f8cb50 'ASN1_STATE_DATA_COPY' 'int'
|   |       | `-IfStmt 0x24150f96c88 <line:206:13, line:209:25> has_else
|   |       |   |-BinaryOperator 0x24150f96b18 <line:206:17, col:28> 'int' '>'
|   |       |   | |-ImplicitCastExpr 0x24150f96ae8 <col:17> 'int' <LValueToRValue>
|   |       |   | | `-DeclRefExpr 0x24150f96a60 <col:17> 'int' lvalue ParmVar 0x24150f937b8 'inl' 'int'
|   |       |   | `-ImplicitCastExpr 0x24150f96b00 <col:23, col:28> 'int' <LValueToRValue>
|   |       |   |   `-MemberExpr 0x24150f96ab8 <col:23, col:28> 'int' lvalue ->copylen 0x24150f8b2d0
|   |       |   |     `-ImplicitCastExpr 0x24150f96aa0 <col:23> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x24150f96a80 <col:23> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   |-BinaryOperator 0x24150f96bf0 <line:207:17, col:30> 'int' '='
|   |       |   | |-DeclRefExpr 0x24150f96b38 <col:17> 'int' lvalue Var 0x24150f939d8 'wrmax' 'int'
|   |       |   | `-ImplicitCastExpr 0x24150f96bd8 <col:25, col:30> 'int' <LValueToRValue>
|   |       |   |   `-MemberExpr 0x24150f96ba8 <col:25, col:30> 'int' lvalue ->copylen 0x24150f8b2d0
|   |       |   |     `-ImplicitCastExpr 0x24150f96b90 <col:25> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |       `-DeclRefExpr 0x24150f96b70 <col:25> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-BinaryOperator 0x24150f96c68 <line:209:17, col:25> 'int' '='
|   |       |     |-DeclRefExpr 0x24150f96c10 <col:17> 'int' lvalue Var 0x24150f939d8 'wrmax' 'int'
|   |       |     `-ImplicitCastExpr 0x24150f96c50 <col:25> 'int' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x24150f96c30 <col:25> 'int' lvalue ParmVar 0x24150f937b8 'inl' 'int'
|   |       |-IfStmt 0x24150f96dc8 <line:211:13, line:212:22>
|   |       | |-BinaryOperator 0x24150f96d90 <line:211:17, col:24> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x24150f96d78 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x24150f96d30 <col:17> 'int' lvalue Var 0x24150f93ad8 'ret' 'int'
|   |       | | `-IntegerLiteral 0x24150f96d50 <col:24> 'int' 0
|   |       | `-GotoStmt 0x24150f96db0 <line:212:17, col:22> 'done' 0x24150f95630
|   |       |-CompoundAssignOperator 0x24150f96e38 <line:213:13, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x24150f96de0 <col:13> 'int' lvalue Var 0x24150f93a58 'wrlen' 'int'
|   |       | `-ImplicitCastExpr 0x24150f96e20 <col:22> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x24150f96e00 <col:22> 'int' lvalue Var 0x24150f93ad8 'ret' 'int'
|   |       |-CompoundAssignOperator 0x24150f96f08 <line:214:13, col:29> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x24150f96ea0 <col:13, col:18> 'int' lvalue ->copylen 0x24150f8b2d0
|   |       | | `-ImplicitCastExpr 0x24150f96e88 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x24150f96e68 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x24150f96ef0 <col:29> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x24150f96ed0 <col:29> 'int' lvalue Var 0x24150f93ad8 'ret' 'int'
|   |       |-CompoundAssignOperator 0x24150f96f90 <line:215:13, col:19> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |       | |-DeclRefExpr 0x24150f96f38 <col:13> 'const char *' lvalue ParmVar 0x24150f93738 'in' 'const char *'
|   |       | `-ImplicitCastExpr 0x24150f96f78 <col:19> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x24150f96f58 <col:19> 'int' lvalue Var 0x24150f93ad8 'ret' 'int'
|   |       |-CompoundAssignOperator 0x24150f97018 <line:216:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x24150f96fc0 <col:13> 'int' lvalue ParmVar 0x24150f937b8 'inl' 'int'
|   |       | `-ImplicitCastExpr 0x24150f97000 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x24150f96fe0 <col:20> 'int' lvalue Var 0x24150f93ad8 'ret' 'int'
|   |       |-IfStmt 0x24150f41090 <line:218:13, line:219:30>
|   |       | |-BinaryOperator 0x24150f970f0 <line:218:17, col:33> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x24150f970d8 <col:17, col:22> 'int' <LValueToRValue>
|   |       | | | `-MemberExpr 0x24150f97080 <col:17, col:22> 'int' lvalue ->copylen 0x24150f8b2d0
|   |       | | |   `-ImplicitCastExpr 0x24150f97068 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | | |     `-DeclRefExpr 0x24150f97048 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | | `-IntegerLiteral 0x24150f970b0 <col:33> 'int' 0
|   |       | `-BinaryOperator 0x24150f41070 <line:219:17, col:30> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       |   |-MemberExpr 0x24150f97148 <col:17, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x24150f8d070
|   |       |   | `-ImplicitCastExpr 0x24150f97130 <col:17> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       |   |   `-DeclRefExpr 0x24150f97110 <col:17> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f93940 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       |   `-ImplicitCastExpr 0x24150f97198 <col:30> 'asn1_bio_state_t':'asn1_bio_state_t' <IntegralCast>
|   |       |     `-DeclRefExpr 0x24150f97178 <col:30> 'int' EnumConstant 0x24150f8caa0 'ASN1_STATE_HEADER' 'int'
|   |       |-IfStmt 0x24150f41140 <line:221:13, line:222:22>
|   |       | |-BinaryOperator 0x24150f41108 <line:221:17, col:24> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x24150f410f0 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x24150f410a8 <col:17> 'int' lvalue ParmVar 0x24150f937b8 'inl' 'int'
|   |       | | `-IntegerLiteral 0x24150f410c8 <col:24> 'int' 0
|   |       | `-GotoStmt 0x24150f41128 <line:222:17, col:22> 'done' 0x24150f95630
|   |       |-BreakStmt 0x24150f41158 <line:224:13>
|   |       |-DefaultStmt 0x24150f41278 <line:226:9, col:16>
|   |       | `-NullStmt 0x24150f41270 <col:16>
|   |       `-ReturnStmt 0x24150f412c0 <line:228:13, col:20>
|   |         `-IntegerLiteral 0x24150f41298 <col:20> 'int' 0
|   |-LabelStmt 0x24150f41438 <line:234:2, col:6> 'done'
|   | `-NullStmt 0x24150f41430 <col:6>
|   `-ReturnStmt 0x24150f416a0 <line:238:5, col:34>
|     `-ConditionalOperator 0x24150f41670 <col:12, col:34> 'int'
|       |-ParenExpr 0x24150f415e0 <col:12, col:22> 'int'
|       | `-BinaryOperator 0x24150f415c0 <col:13, col:21> 'int' '>'
|       |   |-ImplicitCastExpr 0x24150f415a8 <col:13> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x24150f41560 <col:13> 'int' lvalue Var 0x24150f93a58 'wrlen' 'int'
|       |   `-IntegerLiteral 0x24150f41580 <col:21> 'int' 0
|       |-ImplicitCastExpr 0x24150f41640 <col:26> 'int' <LValueToRValue>
|       | `-DeclRefExpr 0x24150f41600 <col:26> 'int' lvalue Var 0x24150f93a58 'wrlen' 'int'
|       `-ImplicitCastExpr 0x24150f41658 <col:34> 'int' <LValueToRValue>
|         `-DeclRefExpr 0x24150f41620 <col:34> 'int' lvalue Var 0x24150f93ad8 'ret' 'int'
|-FunctionDecl 0x24150f41940 <line:242:1, line:265:1> line:242:12 invalid asn1_bio_flush_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t)' static
| |-ParmVarDecl 0x24150f41720 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x24150f41798 <col:38, col:56> col:56 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x24150f41818 <line:243:30, col:44> col:44 invalid cleanup 'int *'
| |-ParmVarDecl 0x24150f41890 <col:53, col:70> col:70 used next 'asn1_bio_state_t':'asn1_bio_state_t'
| `-CompoundStmt 0x24150f43558 <line:244:1, line:265:1>
|   |-DeclStmt 0x24150f41a98 <line:245:5, col:12>
|   | `-VarDecl 0x24150f41a30 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x24150f41bc8 <line:247:5, line:248:16>
|   | |-BinaryOperator 0x24150f41b70 <line:247:9, col:24> 'int' '<='
|   | | |-ImplicitCastExpr 0x24150f41b58 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x24150f41b00 <col:9, col:14> 'int' lvalue ->ex_len 0x24150f8b650
|   | | |   `-ImplicitCastExpr 0x24150f41ae8 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x24150f41ab0 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f41798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-IntegerLiteral 0x24150f41b30 <col:24> 'int' 0
|   | `-ReturnStmt 0x24150f41bb8 <line:248:9, col:16>
|   |   `-IntegerLiteral 0x24150f41b90 <col:16> 'int' 1
|   |-ForStmt 0x24150f434d8 <line:249:5, line:263:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x24150f434b0 <line:249:14, line:263:5>
|   |   |-IfStmt 0x24150f41e68 <line:251:9, line:252:13>
|   |   | |-BinaryOperator 0x24150f41e40 <line:251:13, col:20> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x24150f41e28 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x24150f41de0 <col:13> 'int' lvalue Var 0x24150f41a30 'ret' 'int'
|   |   | | `-IntegerLiteral 0x24150f41e00 <col:20> 'int' 0
|   |   | `-BreakStmt 0x24150f41e60 <line:252:13>
|   |   |-CompoundAssignOperator 0x24150f41f20 <line:253:9, col:24> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x24150f41eb8 <col:9, col:14> 'int' lvalue ->ex_len 0x24150f8b650
|   |   | | `-ImplicitCastExpr 0x24150f41ea0 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24150f41e80 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f41798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | `-ImplicitCastExpr 0x24150f41f08 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24150f41ee8 <col:24> 'int' lvalue Var 0x24150f41a30 'ret' 'int'
|   |   `-IfStmt 0x24150f43488 <line:254:9, line:262:9> has_else
|   |     |-BinaryOperator 0x24150f41ff8 <line:254:13, col:27> 'int' '>'
|   |     | |-ImplicitCastExpr 0x24150f41fe0 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x24150f41f88 <col:13, col:18> 'int' lvalue ->ex_len 0x24150f8b650
|   |     | |   `-ImplicitCastExpr 0x24150f41f70 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x24150f41f50 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f41798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     | `-IntegerLiteral 0x24150f41fb8 <col:27> 'int' 0
|   |     |-CompoundAssignOperator 0x24150f430f8 <line:255:13, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-MemberExpr 0x24150f43090 <col:13, col:18> 'int' lvalue ->ex_pos 0x24150f8b6c0
|   |     | | `-ImplicitCastExpr 0x24150f42038 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |     | |   `-DeclRefExpr 0x24150f42018 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f41798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |     | `-ImplicitCastExpr 0x24150f430e0 <col:28> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x24150f430c0 <col:28> 'int' lvalue Var 0x24150f41a30 'ret' 'int'
|   |     `-CompoundStmt 0x24150f43460 <line:256:14, line:262:9>
|   |       |-BinaryOperator 0x24150f43388 <line:259:13, col:26> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |       | |-MemberExpr 0x24150f43308 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x24150f8d070
|   |       | | `-ImplicitCastExpr 0x24150f432f0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x24150f432d0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f41798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-ImplicitCastExpr 0x24150f43370 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x24150f43338 <col:26> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x24150f41890 'next' 'asn1_bio_state_t':'asn1_bio_state_t'
|   |       |-BinaryOperator 0x24150f43438 <line:260:13, col:27> 'int' '='
|   |       | |-MemberExpr 0x24150f433e0 <col:13, col:18> 'int' lvalue ->ex_pos 0x24150f8b6c0
|   |       | | `-ImplicitCastExpr 0x24150f433c8 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x24150f433a8 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f41798 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |       | `-IntegerLiteral 0x24150f43410 <col:27> 'int' 0
|   |       `-BreakStmt 0x24150f43458 <line:261:13>
|   `-ReturnStmt 0x24150f43548 <line:264:5, col:12>
|     `-ImplicitCastExpr 0x24150f43530 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x24150f43510 <col:12> 'int' lvalue Var 0x24150f41a30 'ret' 'int'
|-FunctionDecl 0x24150f43840 <line:267:1, line:281:1> line:267:12 invalid asn1_bio_setup_ex 'int (int *, BIO_ASN1_BUF_CTX *, int *, asn1_bio_state_t, asn1_bio_state_t)' static
| |-ParmVarDecl 0x24150f435a0 <col:30, col:35> col:35 invalid b 'int *'
| |-ParmVarDecl 0x24150f43618 <col:38, col:56> col:56 used ctx 'BIO_ASN1_BUF_CTX *'
| |-ParmVarDecl 0x24150f43698 <line:268:30, col:44> col:44 invalid setup 'int *'
| |-ParmVarDecl 0x24150f43710 <line:269:30, col:47> col:47 used ex_state 'asn1_bio_state_t':'asn1_bio_state_t'
| |-ParmVarDecl 0x24150f43788 <line:270:30, col:47> col:47 used other_state 'asn1_bio_state_t':'asn1_bio_state_t'
| `-CompoundStmt 0x24150f43e30 <line:271:1, line:281:1>
|   |-IfStmt 0x24150f43b40 <line:272:5, line:275:5>
|   | |-OpaqueValueExpr 0x24150f43b28 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x24150f43b10 <line:272:71, line:275:5>
|   |   `-ReturnStmt 0x24150f43b00 <line:274:9, col:16>
|   |     `-IntegerLiteral 0x24150f43ad8 <col:16> 'int' 0
|   |-IfStmt 0x24150f43dd0 <line:276:5, line:279:22> has_else
|   | |-BinaryOperator 0x24150f43c00 <line:276:9, col:23> 'int' '>'
|   | | |-ImplicitCastExpr 0x24150f43be8 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x24150f43b90 <col:9, col:14> 'int' lvalue ->ex_len 0x24150f8b650
|   | | |   `-ImplicitCastExpr 0x24150f43b78 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x24150f43b58 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f43618 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-IntegerLiteral 0x24150f43bc0 <col:23> 'int' 0
|   | |-BinaryOperator 0x24150f43cd8 <line:277:9, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   | | |-MemberExpr 0x24150f43c58 <col:9, col:14> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x24150f8d070
|   | | | `-ImplicitCastExpr 0x24150f43c40 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x24150f43c20 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f43618 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x24150f43cc0 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   | |   `-DeclRefExpr 0x24150f43c88 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x24150f43710 'ex_state' 'asn1_bio_state_t':'asn1_bio_state_t'
|   | `-BinaryOperator 0x24150f43db0 <line:279:9, col:22> 'asn1_bio_state_t':'asn1_bio_state_t' '='
|   |   |-MemberExpr 0x24150f43d30 <col:9, col:14> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x24150f8d070
|   |   | `-ImplicitCastExpr 0x24150f43d18 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24150f43cf8 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue ParmVar 0x24150f43618 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   `-ImplicitCastExpr 0x24150f43d98 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |     `-DeclRefExpr 0x24150f43d60 <col:22> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ParmVar 0x24150f43788 'other_state' 'asn1_bio_state_t':'asn1_bio_state_t'
|   `-ReturnStmt 0x24150f43e20 <line:280:5, col:12>
|     `-IntegerLiteral 0x24150f43df8 <col:12> 'int' 1
|-FunctionDecl 0x24150f42080 <line:283:1, line:289:1> line:283:12 invalid asn1_bio_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x24150f43e70 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x24150f43ef0 <col:34, col:40> col:40 used in 'char *'
| |-ParmVarDecl 0x24150f43f70 <col:44, col:48> col:48 used inl 'int'
| `-CompoundStmt 0x24150f423e0 <line:284:1, line:289:1>
|   `-IfStmt 0x24150f42248 <line:286:5, line:287:16>
|     |-OpaqueValueExpr 0x24150f42230 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x24150f42220 <col:9, col:16>
|       `-IntegerLiteral 0x24150f421f8 <col:16> 'int' 0
|-FunctionDecl 0x24150f42530 <line:291:1, line:294:1> line:291:12 invalid asn1_bio_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x24150f42410 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x24150f42490 <col:34, col:46> col:46 used str 'const char *'
| `-CompoundStmt 0x24150f42710 <line:292:1, line:294:1>
|-FunctionDecl 0x24150f428e0 <line:296:1, line:302:1> line:296:12 invalid asn1_bio_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x24150f42738 <col:26, col:31> col:31 invalid b 'int *'
| |-ParmVarDecl 0x24150f427b8 <col:34, col:40> col:40 used str 'char *'
| |-ParmVarDecl 0x24150f42838 <col:45, col:49> col:49 used size 'int'
| `-CompoundStmt 0x24150f42c40 <line:297:1, line:302:1>
|   `-IfStmt 0x24150f42aa8 <line:299:5, line:300:16>
|     |-OpaqueValueExpr 0x24150f42a90 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x24150f42a80 <col:9, col:16>
|       `-IntegerLiteral 0x24150f42a58 <col:16> 'int' 0
|-FunctionDecl 0x24150f42e18 <line:304:1, line:310:1> line:304:13 invalid asn1_bio_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x24150f42c70 <col:36, col:41> col:41 invalid b 'int *'
| |-ParmVarDecl 0x24150f42cf0 <col:44, col:48> col:48 used cmd 'int'
| |-ParmVarDecl 0x24150f42d70 <col:53, col:66> col:66 invalid fp 'int *'
| `-CompoundStmt 0x24150f3c140 <line:305:1, line:310:1>
|   `-IfStmt 0x24150f42ff8 <line:307:5, line:308:16>
|     |-OpaqueValueExpr 0x24150f42fe0 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x24150f42fd0 <col:9, col:16>
|       `-ImplicitCastExpr 0x24150f42fb8 <col:16> 'long' <IntegralCast>
|         `-IntegerLiteral 0x24150f42f90 <col:16> 'int' 0
|-FunctionDecl 0x24150f3c3a0 <line:312:1, line:390:1> line:312:13 invalid asn1_bio_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x24150f3c170 <col:27, col:32> col:32 invalid b 'int *'
| |-ParmVarDecl 0x24150f3c1f0 <col:35, col:39> col:39 used cmd 'int'
| |-ParmVarDecl 0x24150f3c270 <col:44, col:49> col:49 used arg1 'long'
| |-ParmVarDecl 0x24150f3c2f0 <col:55, col:61> col:61 used arg2 'void *'
| `-CompoundStmt 0x24150f44d50 <line:313:1, line:390:1>
|   |-DeclStmt 0x24150f3c4f0 <line:314:5, col:26>
|   | `-VarDecl 0x24150f3c488 <col:5, col:23> col:23 used ctx 'BIO_ASN1_BUF_CTX *'
|   |-DeclStmt 0x24150f3c600 <line:315:5, col:31>
|   | `-VarDecl 0x24150f3c598 <col:5, col:24> col:24 used ex_func 'BIO_ASN1_EX_FUNCS *'
|   |-DeclStmt 0x24150f3c6d8 <line:316:5, col:17>
|   | `-VarDecl 0x24150f3c630 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x24150f3c6c0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x24150f3c698 <col:16> 'int' 1
|   |-IfStmt 0x24150f3c890 <line:320:5, line:321:16>
|   | |-BinaryOperator 0x24150f3c820 <line:320:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x24150f3c7f0 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:320:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24150f3c748 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f3c488 'ctx' 'BIO_ASN1_BUF_CTX *'
|   | | `-ImplicitCastExpr 0x24150f3c808 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'BIO_ASN1_BUF_CTX *' <BitCast>
|   | |   `-ParenExpr 0x24150f3c7d0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x24150f3c7a8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x24150f3c768 <col:26> 'int' 0
|   | `-ReturnStmt 0x24150f3c880 <.//openssl//file_jk/after\crypto\asn1\bio_asn1.c:321:9, col:16>
|   |   `-ImplicitCastExpr 0x24150f3c868 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x24150f3c840 <col:16> 'int' 0
|   |-SwitchStmt 0x24150f3c918 <line:323:5, line:387:5>
|   | |-ImplicitCastExpr 0x24150f3c900 <line:323:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x24150f3c8c8 <col:13> 'int' lvalue ParmVar 0x24150f3c1f0 'cmd' 'int'
|   | `-CompoundStmt 0x24150f44c70 <col:18, line:387:5>
|   |   |-BinaryOperator 0x24150f3c9d8 <line:326:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x24150f3c938 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x24150f3c598 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x24150f3c9c0 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x24150f3c9a8 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x24150f3c970 <col:19> 'void *' lvalue ParmVar 0x24150f3c2f0 'arg2' 'void *'
|   |   |-BreakStmt 0x24150f3cad8 <line:329:9>
|   |   |-BinaryOperator 0x24150f3cb50 <line:332:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x24150f3cae0 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x24150f3c598 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x24150f3cb38 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x24150f3cb20 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x24150f3cb00 <col:19> 'void *' lvalue ParmVar 0x24150f3c2f0 'arg2' 'void *'
|   |   |-BreakStmt 0x24150f3cc50 <line:335:9>
|   |   |-BinaryOperator 0x24150f3ccc8 <line:338:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x24150f3cc58 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x24150f3c598 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x24150f3ccb0 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x24150f3cc98 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x24150f3cc78 <col:19> 'void *' lvalue ParmVar 0x24150f3c2f0 'arg2' 'void *'
|   |   |-BreakStmt 0x24150f3cdc8 <line:341:9>
|   |   |-BinaryOperator 0x24150f3ce40 <line:344:9, col:19> 'BIO_ASN1_EX_FUNCS *' '='
|   |   | |-DeclRefExpr 0x24150f3cdd0 <col:9> 'BIO_ASN1_EX_FUNCS *' lvalue Var 0x24150f3c598 'ex_func' 'BIO_ASN1_EX_FUNCS *'
|   |   | `-ImplicitCastExpr 0x24150f3ce28 <col:19> 'BIO_ASN1_EX_FUNCS *' <BitCast>
|   |   |   `-ImplicitCastExpr 0x24150f3ce10 <col:19> 'void *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x24150f3cdf0 <col:19> 'void *' lvalue ParmVar 0x24150f3c2f0 'arg2' 'void *'
|   |   |-BreakStmt 0x24150f3cf40 <line:347:9>
|   |   |-BinaryOperator 0x24150f3cfe8 <line:350:9, col:23> 'void *' '='
|   |   | |-MemberExpr 0x24150f3cf80 <col:9, col:14> 'void *' lvalue ->ex_arg 0x24150f8b730
|   |   | | `-ImplicitCastExpr 0x24150f3cf68 <col:9> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x24150f3cf48 <col:9> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f3c488 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | `-ImplicitCastExpr 0x24150f3cfd0 <col:23> 'void *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x24150f3cfb0 <col:23> 'void *' lvalue ParmVar 0x24150f3c2f0 'arg2' 'void *'
|   |   |-BreakStmt 0x24150f3d008 <line:351:9>
|   |   |-BinaryOperator 0x24150f441b0 <line:354:9, col:31> 'void *' '='
|   |   | |-UnaryOperator 0x24150f44118 <col:9, col:19> 'void *' lvalue prefix '*' cannot overflow
|   |   | | `-CStyleCastExpr 0x24150f440f0 <col:10, col:19> 'void **' <BitCast>
|   |   | |   `-ImplicitCastExpr 0x24150f440d8 <col:19> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |     `-DeclRefExpr 0x24150f440a0 <col:19> 'void *' lvalue ParmVar 0x24150f3c2f0 'arg2' 'void *'
|   |   | `-ImplicitCastExpr 0x24150f44198 <col:26, col:31> 'void *' <LValueToRValue>
|   |   |   `-MemberExpr 0x24150f44168 <col:26, col:31> 'void *' lvalue ->ex_arg 0x24150f8b730
|   |   |     `-ImplicitCastExpr 0x24150f44150 <col:26> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x24150f44130 <col:26> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f3c488 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   |-BreakStmt 0x24150f441d0 <line:355:9>
|   |   |-IfStmt 0x24150f442c8 <line:358:9, line:359:20>
|   |   | |-OpaqueValueExpr 0x24150f442b0 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x24150f442a0 <col:13, col:20>
|   |   |   `-ImplicitCastExpr 0x24150f44288 <col:20> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x24150f44260 <col:20> 'int' 0
|   |   |-IfStmt 0x24150f444e8 <line:362:9, line:366:9>
|   |   | |-BinaryOperator 0x24150f44398 <line:362:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x24150f44380 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x24150f44368 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x24150f44318 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x24150f8d070
|   |   | | |     `-ImplicitCastExpr 0x24150f44300 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x24150f442e0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f3c488 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x24150f44348 <col:27> 'int' EnumConstant 0x24150f8caa0 'ASN1_STATE_HEADER' 'int'
|   |   | `-CompoundStmt 0x24150f444d0 <col:46, line:366:9>
|   |   |   `-IfStmt 0x24150f444b8 <line:363:13, line:365:24>
|   |   |     |-OpaqueValueExpr 0x24150f444a0 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x24150f44490 <col:17, col:24>
|   |   |       `-ImplicitCastExpr 0x24150f44478 <col:24> 'long' <IntegralCast>
|   |   |         `-IntegerLiteral 0x24150f44450 <col:24> 'int' 0
|   |   |-IfStmt 0x24150f44798 <line:368:9, line:373:9>
|   |   | |-BinaryOperator 0x24150f445b8 <line:368:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x24150f445a0 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x24150f44588 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x24150f44538 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x24150f8d070
|   |   | | |     `-ImplicitCastExpr 0x24150f44520 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x24150f44500 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f3c488 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x24150f44568 <col:27> 'int' EnumConstant 0x24150f8cba8 'ASN1_STATE_POST_COPY' 'int'
|   |   | `-CompoundStmt 0x24150f44780 <col:49, line:373:9>
|   |   |   `-IfStmt 0x24150f44768 <line:371:13, line:372:24>
|   |   |     |-BinaryOperator 0x24150f44700 <line:371:17, col:24> 'int' '<='
|   |   |     | |-ImplicitCastExpr 0x24150f446d0 <col:17> 'long' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x24150f44688 <col:17> 'long' lvalue Var 0x24150f3c630 'ret' 'long'
|   |   |     | `-ImplicitCastExpr 0x24150f446e8 <col:24> 'long' <IntegralCast>
|   |   |     |   `-IntegerLiteral 0x24150f446a8 <col:24> 'int' 0
|   |   |     `-ReturnStmt 0x24150f44758 <line:372:17, col:24>
|   |   |       `-ImplicitCastExpr 0x24150f44740 <col:24> 'long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x24150f44720 <col:24> 'long' lvalue Var 0x24150f3c630 'ret' 'long'
|   |   |-IfStmt 0x24150f44aa0 <line:375:9, line:380:9> has_else
|   |   | |-BinaryOperator 0x24150f44868 <line:375:13, col:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x24150f44850 <col:13, col:18> 'int' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x24150f44838 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' <LValueToRValue>
|   |   | | |   `-MemberExpr 0x24150f447e8 <col:13, col:18> 'asn1_bio_state_t':'asn1_bio_state_t' lvalue ->state 0x24150f8d070
|   |   | | |     `-ImplicitCastExpr 0x24150f447d0 <col:13> 'BIO_ASN1_BUF_CTX *' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x24150f447b0 <col:13> 'BIO_ASN1_BUF_CTX *' lvalue Var 0x24150f3c488 'ctx' 'BIO_ASN1_BUF_CTX *'
|   |   | | `-DeclRefExpr 0x24150f44818 <col:27> 'int' EnumConstant 0x24150f8cc00 'ASN1_STATE_DONE' 'int'
|   |   | |-NullStmt 0x24150f44a98 <line:376:13>
|   |   | `-CompoundStmt 0x24150f44a80 <line:377:14, line:380:9>
|   |   |   `-ReturnStmt 0x24150f44a70 <line:379:13, col:20>
|   |   |     `-ImplicitCastExpr 0x24150f44a58 <col:20> 'long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x24150f44a30 <col:20> 'int' 0
|   |   `-DefaultStmt 0x24150f44bd0 <line:382:5, line:384:20>
|   |     `-IfStmt 0x24150f44bb8 <line:383:9, line:384:20>
|   |       |-OpaqueValueExpr 0x24150f44ba0 <<invalid sloc>> '_Bool'
|   |       `-ReturnStmt 0x24150f44b90 <col:13, col:20>
|   |         `-ImplicitCastExpr 0x24150f44b78 <col:20> 'long' <IntegralCast>
|   |           `-IntegerLiteral 0x24150f44b50 <col:20> 'int' 0
|   `-ReturnStmt 0x24150f44d40 <line:389:5, col:12>
|     `-ImplicitCastExpr 0x24150f44d28 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x24150f44d08 <col:12> 'long' lvalue Var 0x24150f3c630 'ret' 'long'
|-FunctionDecl 0x24150f3e040 <line:392:1, line:399:1> line:392:12 invalid asn1_bio_set_ex 'int (int *, int, int *, int *)' static
| |-ParmVarDecl 0x24150f44da8 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x24150f44e28 <col:36, col:40> col:40 used cmd 'int'
| |-ParmVarDecl 0x24150f44ea8 <line:393:28, col:42> col:42 invalid ex_func 'int *'
| |-ParmVarDecl 0x24150f44f28 <col:51, col:65> col:65 invalid ex_free_func 'int *'
| `-CompoundStmt 0x24150f3e2b8 <line:394:1, line:399:1>
|   `-DeclStmt 0x24150f3e190 <line:395:5, col:28>
|     `-VarDecl 0x24150f3e128 <col:5, col:23> col:23 used extmp 'BIO_ASN1_EX_FUNCS':'struct BIO_ASN1_EX_FUNCS_st'
|-FunctionDecl 0x24150f3e5a0 <line:401:1, line:413:1> line:401:12 invalid asn1_bio_get_ex 'int (int *, int, int **, int **)' static
| |-ParmVarDecl 0x24150f3e2e8 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x24150f3e368 <col:36, col:40> col:40 used cmd 'int'
| |-ParmVarDecl 0x24150f3e418 <line:402:28, col:43> col:43 invalid ex_func 'int **'
| |-ParmVarDecl 0x24150f3e4a0 <line:403:28, col:43> col:43 invalid ex_free_func 'int **'
| `-CompoundStmt 0x24150f3e9d8 <line:404:1, line:413:1>
|   |-DeclStmt 0x24150f3e6f0 <line:405:5, col:28>
|   | `-VarDecl 0x24150f3e688 <col:5, col:23> col:23 used extmp 'BIO_ASN1_EX_FUNCS':'struct BIO_ASN1_EX_FUNCS_st'
|   |-DeclStmt 0x24150f3e788 <line:406:5, col:12>
|   | `-VarDecl 0x24150f3e720 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x24150f3e978 <line:408:5, line:411:5>
|   | |-BinaryOperator 0x24150f3e908 <line:408:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x24150f3e8f0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x24150f3e8a8 <col:9> 'int' lvalue Var 0x24150f3e720 'ret' 'int'
|   | | `-IntegerLiteral 0x24150f3e8c8 <col:15> 'int' 0
|   | `-CompoundStmt 0x24150f3e968 <col:18, line:411:5>
|   `-ReturnStmt 0x24150f3e9c8 <line:412:5, col:12>
|     `-ImplicitCastExpr 0x24150f3e9b0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x24150f3e990 <col:12> 'int' lvalue Var 0x24150f3e720 'ret' 'int'
|-FunctionDecl 0x24150f3ec10 <line:415:1, line:419:1> line:415:5 invalid BIO_asn1_set_prefix 'int (int *, int *, int *)'
| |-ParmVarDecl 0x24150f3ea20 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x24150f3eaa0 <col:33, col:47> col:47 invalid prefix 'int *'
| |-ParmVarDecl 0x24150f3eb20 <line:416:25, col:39> col:39 invalid prefix_free 'int *'
| `-CompoundStmt 0x24150f3ece0 <line:417:1, line:419:1>
|-FunctionDecl 0x24150f3ef00 <line:421:1, line:425:1> line:421:5 invalid BIO_asn1_get_prefix 'int (int *, int **, int **)'
| |-ParmVarDecl 0x24150f3ed08 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x24150f3ed90 <col:33, col:48> col:48 invalid pprefix 'int **'
| |-ParmVarDecl 0x24150f3ee18 <line:422:25, col:40> col:40 invalid pprefix_free 'int **'
| `-CompoundStmt 0x24150f3efd0 <line:423:1, line:425:1>
|-FunctionDecl 0x24150f3d1d8 <line:427:1, line:431:1> line:427:5 invalid BIO_asn1_set_suffix 'int (int *, int *, int *)'
| |-ParmVarDecl 0x24150f3d030 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x24150f3d0b0 <col:33, col:47> col:47 invalid suffix 'int *'
| |-ParmVarDecl 0x24150f3d130 <line:428:25, col:39> col:39 invalid suffix_free 'int *'
| `-CompoundStmt 0x24150f3d2a8 <line:429:1, line:431:1>
`-FunctionDecl 0x24150f3d488 <line:433:1, line:437:1> line:433:5 invalid BIO_asn1_get_suffix 'int (int *, int **, int **)'
  |-ParmVarDecl 0x24150f3d2d0 <col:25, col:30> col:30 invalid b 'int *'
  |-ParmVarDecl 0x24150f3d358 <col:33, col:48> col:48 invalid psuffix 'int **'
  |-ParmVarDecl 0x24150f3d3e0 <line:434:25, col:40> col:40 invalid psuffix_free 'int **'
  `-CompoundStmt 0x24150f3d558 <line:435:1, line:437:1>
