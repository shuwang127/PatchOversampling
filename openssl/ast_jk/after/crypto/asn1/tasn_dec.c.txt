TranslationUnitDecl 0x2c519306d38 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x2c5193075d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x2c5193072d0 '__int128'
|-TypedefDecl 0x2c519307640 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x2c5193072f0 'unsigned __int128'
|-TypedefDecl 0x2c519307978 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x2c519307730 'struct __NSConstantString_tag'
|   `-Record 0x2c519307698 '__NSConstantString_tag'
|-TypedefDecl 0x2c5193079e8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x2c519306f10 'unsigned long long'
|-TypedefDecl 0x2c519307a80 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x2c519307a40 'char *'
|   `-BuiltinType 0x2c519306dd0 'char'
|-TypedefDecl 0x2c519307af0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x2c519307a40 'char *'
|   `-BuiltinType 0x2c519306dd0 'char'
|-TypedefDecl 0x2c519307b60 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x2c519306e70 'long long'
|-TypedefDecl 0x2c519307bd0 prev 0x2c5193079e8 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x2c519306f10 'unsigned long long'
|-TypedefDecl 0x2c519307c58 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x2c519306f10 'unsigned long long'
|-TypedefDecl 0x2c519307cc8 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x2c519306eb0 'unsigned short'
|-ImportDecl 0x2c51ad1ba70 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-TypedefDecl 0x2c51ad1bb18 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x2c519306f10 'unsigned long long'
|-TypedefDecl 0x2c51ad1bb88 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x2c519307a40 'char *'
|   `-BuiltinType 0x2c519306dd0 'char'
|-FunctionDecl 0x2c51ad1bdd0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2c51ad1be70 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x2c51ad1bee0 <col:21> Implicit
|-FunctionDecl 0x2c51ad1bf38 prev 0x2c51ad1bdd0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x2c51ad1bc68 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x2c51ad1c028 <col:21> Inherited Implicit
|-TypedefDecl 0x2c51ad1c0e0 prev 0x2c51ad1c058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x2c519306f10 'unsigned long long'
|-TypedefDecl 0x2c51ad1c170 prev 0x2c519307c58 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x2c51ad1c140 'size_t' sugar
|   |-Typedef 0x2c51ad1c0e0 'size_t'
|   `-BuiltinType 0x2c519306f10 'unsigned long long'
|-TypedefDecl 0x2c51ad1c1f8 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x2c519306e70 'long long'
|-TypedefDecl 0x2c51ad1c268 prev 0x2c519307b60 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x2c519306e70 'long long'
|-TypedefDecl 0x2c51ad1c2f0 prev 0x2c519307cc8 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x2c519306eb0 'unsigned short'
|-TypedefDecl 0x2c51ad1c378 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x2c519306eb0 'unsigned short'
|-TypedefDecl 0x2c51ad1c3e8 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x2c519306eb0 'unsigned short'
|-TypedefDecl 0x2c51ad1c458 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x2c519306e30 'int'
|-TypedefDecl 0x2c51ad1c4c8 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x2c519306e50 'long'
|-TypedefDecl 0x2c51ad1c538 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x2c519306e70 'long long'
|-TypedefDecl 0x2c51ad1c5c0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x2c51ad1c590 '__time64_t' sugar
|   |-Typedef 0x2c51ad1c538 '__time64_t'
|   `-BuiltinType 0x2c519306e70 'long long'
|-FunctionDecl 0x2c51ad1c738 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x2c51ad1c958 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x2c51ae3a2d0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x2c51ae39e68 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae39ee0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae39f58 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae39fd8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x2c51ae3a070 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x2c51ae3a3b0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x2c51ae3a470 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x2c51ae3a5e0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x2c51ae3a590 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x2c51ae3a530 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x2c51ae3a450 'struct threadlocaleinfostruct'
|       `-Record 0x2c51ae4b118 'threadlocaleinfostruct'
|-TypedefDecl 0x2c51ae3a6f0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x2c51ae3a6a0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x2c51ae3a640 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x2c51ae3a510 'struct threadmbcinfostruct'
|       `-Record 0x2c51ae3a470 'threadmbcinfostruct'
|-RecordDecl 0x2c51ae3a748 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x2c51ae3a800 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x2c51ae3a8c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2c51ae3a950 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x2c51ae3a9e0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x2c51ae3aa98 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x2c51ae3aa40 'struct localeinfo_struct' sugar
|   `-RecordType 0x2c51ae3a8a0 'struct localeinfo_struct'
|     `-Record 0x2c51ae3a800 'localeinfo_struct'
|-TypedefDecl 0x2c51ae3ab70 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x2c51ae3ab20 'struct localeinfo_struct *'
|   `-ElaboratedType 0x2c51ae3aa40 'struct localeinfo_struct' sugar
|     `-RecordType 0x2c51ae3a8a0 'struct localeinfo_struct'
|       `-Record 0x2c51ae3a800 'localeinfo_struct'
|-RecordDecl 0x2c51ae3abe8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x2c51ae3aca0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2c51ae3ad18 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x2c51ae3add8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x2c51ae4af80 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x2c51ae4aff0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x2c51ae4b0a8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x2c51ae4b050 'struct localerefcount' sugar
|   `-RecordType 0x2c51ae3ac80 'struct localerefcount'
|     `-Record 0x2c51ae3abe8 'localerefcount'
|-RecordDecl 0x2c51ae4b118 prev 0x2c51ae3a3b0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x2c51ae4b198 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x2c51ae4b210 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x2c51ae4b280 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x2c51ae4b2f0 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x2c51ae4b360 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x2c51ae4b528 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x2c51ae4b598 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x2c51ae4b608 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x2c51ae4b678 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x2c51ae4b6e8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x2c51ae4b758 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x2c51ae4b7b0 parent 0x2c519306d38 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x2c51ae4b940 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x2c51ae4b9b0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x2c51ae4ba20 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x2c51ae4ba90 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x2c51ae4bb30 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x2c51ae4bba0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x2c51ae4bcb0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x2c51ae4bde8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x2c51ae4be98 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x2c51ae4be40 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x2c51ae3a450 'struct threadlocaleinfostruct'
|     `-Record 0x2c51ae4b118 'threadlocaleinfostruct'
|-FunctionDecl 0x2c51ae4f330 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x2c51ae4ef80 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x2c51ae4f030 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x2c51ae4f0b0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x2c51ae4f128 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae4f6f8 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2c51ae4f798 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2c51ae4f800 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2c51ae4f868 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2c51ae4f8e8 prev 0x2c51ae4f6f8 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2c51ae4f420 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x2c51ae4f4a0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x2c51ae4f518 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae4fca8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2c51ae4f9d0 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x2c51ae4fa50 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x2c51ae4fac8 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae521c0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae4fd90 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x2c51ae4fe10 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x2c51ae4fe88 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae51fb0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae524c8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2c51ae52568 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2c51ae525d0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2c51ae52638 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2c51ae526b8 prev 0x2c51ae524c8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2c51ae522b0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x2c51ae52330 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x2c51ae523a8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae52a78 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2c51ae52b18 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2c51ae52b80 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2c51ae52be8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2c51ae52c68 prev 0x2c51ae52a78 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2c51ae527a0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x2c51ae52820 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x2c51ae52898 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae51108 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2c51ae52d78 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x2c51ae52e10 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2c51ae52e90 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2c51ae52f08 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2c51ae514c8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2c51ae51568 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2c51ae515d0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2c51ae51638 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2c51ae516b8 prev 0x2c51ae514c8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x2c51ae511f8 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x2c51ae51278 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x2c51ae512f0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae51b38 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x2c51ae51bd8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2c51ae51c40 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x2c51ae51ca8 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x2c51ae51d10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2c51ae51d98 prev 0x2c51ae51b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x2c51ae51880 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x2c51ae51900 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x2c51ae51980 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x2c51ae519f8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae51e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x2c51ae53290 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x2c51ae53078 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x2c51ae530f8 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x2c51ae53170 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae53348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x2c51ae53740 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2c51ae53470 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2c51ae534e8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae53568 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x2c51ae53b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2c51ae53920 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x2c51ae539a0 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x2c51ae53bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae4bf90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2c51ae53d08 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x2c51ae53d80 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae53e00 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x2c51ae4c360 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2c51ae4c400 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2c51ae4c468 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2c51ae4c4e0 prev 0x2c51ae4c360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x2c51ae4c170 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x2c51ae4c1f0 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x2c51ae4c590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae4c8e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x2c51ae4c6d8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2c51ae4c750 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae4c7d0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x2c51ae4cc10 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2c51ae4ccb0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2c51ae4cd18 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2c51ae4cd90 prev 0x2c51ae4cc10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x2c51ae4ca90 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x2c51ae4cb10 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x2c51ae4ce40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae54220 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x2c51ae542c0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2c51ae54328 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2c51ae543a0 prev 0x2c51ae54220 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x2c51ae54030 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x2c51ae540b0 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x2c51ae545f0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x2c51ae54690 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2c51ae54700 prev 0x2c51ae545f0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x2c51ae54480 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x2c51ae549f8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x2c51ae547d8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x2c51ae54850 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae54c48 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x2c51ae54ad8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x2c51ae54b50 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2c51ae54f78 <line:131:1, line:133:1>
|   `-ReturnStmt 0x2c51ae54f68 <line:132:5, col:51>
|     `-ConditionalOperator 0x2c51ae54f38 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x2c51ae54da8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x2c51ae54d88 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x2c51ae54d58 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2c51ae54d10 <col:13> 'const char *' lvalue ParmVar 0x2c51ae54ad8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x2c51ae54d70 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x2c51ae54d30 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x2c51ae54f20 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2c51ae54dc8 <col:24> 'int' 0
|       `-CallExpr 0x2c51ae54ec0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2c51ae54ea8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2c51ae54df0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x2c51ae549f8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x2c51ae54ef0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x2c51ae54e10 <col:36> 'const char *' lvalue ParmVar 0x2c51ae54ad8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x2c51ae54f08 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2c51ae54e30 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x2c51ae54b50 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae55288 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x2c51ae54fe0 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x2c51ae55058 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2c51ae550d8 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x2c51ae55150 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2c51ae55590 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x2c51ae55630 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x2c51ae55698 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x2c51ae55700 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2c51ae55780 prev 0x2c51ae55590 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x2c51ae55378 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x2c51ae553f8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x2c51ae55470 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae559b8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x2c51ae55868 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x2c51ae55c80 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2c51ae55d20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2c51ae55d88 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2c51ae55e00 prev 0x2c51ae55c80 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2c51ae55a90 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x2c51ae55b10 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x2c51ae4dff0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2c51ae55ee0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2c51ae55f60 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2c51ae4e250 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2c51ae4e0d0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x2c51ae4e150 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2c51ae4e608 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2c51ae4e330 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae4e3b0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2c51ae4e428 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae4e870 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2c51ae4e6f0 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x2c51ae4e770 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x2c51ae4eb68 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2c51ae4e950 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae4e9d0 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x2c51ae4ea48 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae4edd0 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2c51ae4ec50 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x2c51ae4ecd0 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x2c51ae56188 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x2c51ae4eeb0 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae55ff0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x2c51ae56068 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae56548 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2c51ae56270 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae562f0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2c51ae56368 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae569b0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae56630 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae566b0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2c51ae56728 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae567a0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae56cb8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2c51ae56aa0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae56b20 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x2c51ae56b98 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae57078 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae56da0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae56e20 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x2c51ae56e98 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae56f10 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae57388 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2c51ae57428 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2c51ae57490 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2c51ae57508 prev 0x2c51ae57388 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2c51ae57168 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x2c51ae571e8 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x2c51ae577c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x2c51ae576e0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x2c51ae57868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae57c40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x2c51ae579b0 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x2c51ae57a28 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae57aa8 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x2c51ae57f58 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x2c51ae4ff90 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2c51ae50000 prev 0x2c51ae57f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x2c51ae57e20 <col:90> col:93 'int'
| `-DeprecatedAttr 0x2c51ae500a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae50400 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x2c51ae501f0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x2c51ae50268 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae502e8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x2c51ae50708 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2c51ae504e8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2c51ae50560 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae509f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2c51ae508a8 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2c51ae50aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae50eb0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae50be8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2c51ae50c60 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae50cd8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae7cc20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2c51ae7c9f8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2c51ae7ca70 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2c51ae7ccd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae7d188 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2c51ae7ce18 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x2c51ae7ce90 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2c51ae7cf10 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x2c51ae7cf88 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2c51ae7d608 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2c51ae7d6a8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2c51ae7d710 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2c51ae7d778 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2c51ae7d7f8 prev 0x2c51ae7d608 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2c51ae7d338 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x2c51ae7d3b8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x2c51ae7d430 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae7d8b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae7dc48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2c51ae7dce8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x2c51ae7dd50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2c51ae7ddb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2c51ae7de38 prev 0x2c51ae7dc48 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2c51ae7da30 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae7dab0 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x2c51ae7db28 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae7e138 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2c51ae7df20 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae7dfa0 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x2c51ae7e018 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae7e4d0 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae7e220 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae7e2a0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x2c51ae7e318 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae7e390 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae7e868 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x2c51ae7e5c0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2c51ae7e638 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2c51ae7e6b8 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x2c51ae7e730 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2c51ae7fc58 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2c51ae7fcf8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2c51ae7fd60 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2c51ae7fdc8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2c51ae7fe48 prev 0x2c51ae7fc58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2c51ae7fa40 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x2c51ae7fac0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x2c51ae7fb38 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae7ff00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae803b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x2c51ae80048 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x2c51ae800c0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2c51ae80140 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x2c51ae801b8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae80838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2c51ae80568 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x2c51ae805e8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x2c51ae80660 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae808f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae82c70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2c51ae82d10 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2c51ae82d78 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2c51ae82df0 prev 0x2c51ae82c70 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2c51ae82a80 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2c51ae82b00 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x2c51ae83050 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x2c51ae830f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2c51ae83158 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x2c51ae831d0 prev 0x2c51ae83050 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x2c51ae82ed0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x2c51ae82f50 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x2c51ae83390 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x2c51ae832b0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x2c51ae835e0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x2c51ae83680 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2c51ae836e8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2c51ae83760 prev 0x2c51ae835e0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x2c51ae83468 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x2c51ae834e8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x2c51ae809a0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x2c51ae80a40 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2c51ae80aa8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2c51ae80b20 prev 0x2c51ae809a0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x2c51ae83840 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x2c51ae838c0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x2c51ae80e40 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x2c51ae80ee0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x2c51ae80f48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2c51ae80fc0 prev 0x2c51ae80e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x2c51ae80cc0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x2c51ae80d40 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x2c51ae81070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae81458 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x2c51ae811b8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x2c51ae81238 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x2c51ae812b8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x2c51ae816b0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x2c51ae81540 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x2c51ae815b8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae7b910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2c51ae81850 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x2c51ae7b9b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae7bd08 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae7bb00 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x2c51ae7bb78 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae7bbf0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae7c028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x2c51ae7beb0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x2c51ae7bf28 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2c51ae7c0d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae7c4f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x2c51ae7c590 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x2c51ae7c5f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x2c51ae7c660 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2c51ae7c6e0 prev 0x2c51ae7c4f0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x2c51ae7c220 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x2c51ae7c2a0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x2c51ae7c318 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae83c08 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae7c7c8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x2c51ae7c848 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x2c51ae83990 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae83a08 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae83eb0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x2c51ae83f50 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x2c51ae83fc0 prev 0x2c51ae83eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x2c51ae83dd0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x2c51ae84068 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x2c51ae843b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2c51ae84230 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae842b0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2c51ae84460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x2c51ae847a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x2c51ae84628 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae846a8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x2c51ae84858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x2c51ae84b38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2c51ae84a58 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2c51ae84be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x2c51ae84ff8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x2c51ae84de0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x2c51ae84e60 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x2c51ae84ed8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae850b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x2c51ae85490 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x2c51ae85278 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x2c51ae852f8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x2c51ae85370 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae85548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x2c51ae857f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2c51ae85710 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2c51ae85898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x2c51ae85c00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x2c51ae85a80 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x2c51ae85b00 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x2c51ae85cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x2c51ae85f58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x2c51ae85e78 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x2c51ae86000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x2c51ae86290 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x2c51ae86120 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x2c51ae86620 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae86360 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2c51ae863d8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae86450 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x2c51ae7e978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae867c0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2c51ae86838 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2c51ae7ea28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae7ed88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x2c51ae7ee28 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2c51ae7ee90 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x2c51ae7ef08 prev 0x2c51ae7ed88 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x2c51ae7eb68 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae7ebe0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2c51ae7f200 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x2c51ae7f2a0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2c51ae7f308 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2c51ae7f380 prev 0x2c51ae7f200 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x2c51ae7efe0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae7f058 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x2c51ae7f660 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae7f458 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2c51ae7f4d0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae7f548 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x2c51ae88a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae7f800 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2c51ae7f878 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x2c51ae88ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae88e28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae88c08 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae88c80 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x2c51ae89070 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x2c51ae89110 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x2c51ae89180 prev 0x2c51ae89070 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x2c51ae88f00 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x2c51ae89468 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x2c51ae89250 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae892c8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae896b0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x2c51ae89540 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae895b8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x2c51ae8ba80 <line:306:1, line:308:1>
|   `-ReturnStmt 0x2c51ae8ba70 <line:307:5, col:56>
|     `-ConditionalOperator 0x2c51ae8ba40 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x2c51ae89870 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x2c51ae89850 <col:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|       |   |-ImplicitCastExpr 0x2c51ae89820 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x2c51ae89778 <col:13> 'const wchar_t *' lvalue ParmVar 0x2c51ae89540 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x2c51ae89838 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x2c51ae89800 <col:16, col:25> 'void *'
|       |       `-CStyleCastExpr 0x2c51ae897d8 <col:17, col:24> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x2c51ae89798 <col:24> 'int' 0
|       |-ImplicitCastExpr 0x2c51ae8ba28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x2c51ae89890 <col:29> 'int' 0
|       `-CallExpr 0x2c51ae89990 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x2c51ae89978 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x2c51ae898b8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x2c51ae89468 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x2c51ae899c0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x2c51ae898d8 <col:41> 'const wchar_t *' lvalue ParmVar 0x2c51ae89540 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x2c51ae8ba10 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x2c51ae898f8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x2c51ae895b8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae8be18 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2c51ae8baa8 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8bb20 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2c51ae8bb98 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae8bc10 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2c51ae8c280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2c51ae8bfc0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8c038 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae8c0b0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae8c338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae8c748 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x2c51ae8c7e8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x2c51ae8c850 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x2c51ae8c8b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x2c51ae8c938 prev 0x2c51ae8c748 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x2c51ae8c478 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae8c4f0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae8c568 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae8ccd0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x2c51ae8ca30 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8caa8 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x2c51ae8cb20 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae8cb98 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x2c51ae8d080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2c51ae8ce78 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8cef0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae8cf68 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae8d138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae8d498 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae8d278 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae8d2f0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x2c51ae8d6e0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2c51ae8d570 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae8d5e8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x2c51ae8d928 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae8d7b8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae8d830 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x2c51ae89b60 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae899f0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae89a68 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x2c51ae89e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae89cf8 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2c51ae89d70 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x2c51ae89f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae8a380 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x2c51ae8a058 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8a0d0 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae8a1b0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x2c51ae8a6a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x2c51ae8a528 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x2c51ae8a748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae86b30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x2c51ae8a888 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8a900 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae8a980 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x2c51ae86de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2c51ae86d08 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2c51ae86e88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae87250 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae86fc8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x2c51ae87040 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae870b8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x2c51ae874a8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae87330 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae873a8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x2c51ae87848 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2c51ae87580 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae875f8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae87670 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae8ebd8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2c51ae87928 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae8ea40 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae8eab8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae8f030 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae8ecb8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae8ed30 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae8eda8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae8ee20 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae8f488 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x2c51ae8f118 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8f190 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x2c51ae8f208 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x2c51ae8f280 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae8f8f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2c51ae8f630 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8f6a8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2c51ae8f720 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae8f9a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae91ce0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x2c51ae91b68 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x2c51ae92070 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x2c51ae91db0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2c51ae91e28 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae91ea0 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x2c51ae92428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2c51ae92210 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x2c51ae92288 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2c51ae924d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae92838 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2c51ae92618 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x2c51ae92690 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae8faa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2c51ae929d0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2c51ae8fb50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae8ff50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae8fc90 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8fd08 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae8fd80 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae90308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2c51ae900f0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2c51ae90168 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2c51ae903b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae90668 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x2c51ae904f8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x2c51ae90570 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae908d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2c51ae90800 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x2c51ae90980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae8ad00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae8aaf8 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8ab70 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae8abe8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae8b010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2c51ae8aea0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8af18 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x2c51ae8b0c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x2c51ae8b4c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2c51ae8b200 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8b278 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae8b2f0 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae8b908 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae8b5a0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x2c51ae8b618 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae8b690 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae8b708 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae96c38 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae96ac0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae96b38 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x2c51ae96f20 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2c51ae96d10 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae96d88 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae96e00 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae97178 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae97000 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae97078 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x2c51ae97460 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x2c51ae97250 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae972c8 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae97340 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae97750 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2c51ae97540 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae975b8 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae97630 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae92ad0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae97830 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae978a8 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae97920 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae97998 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae92dc8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2c51ae92bb8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae92c30 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x2c51ae92ca8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x2c51ae93150 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x2c51ae92ea8 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae92f20 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae92f98 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x2c51ae93010 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x2c51ae933b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x2c51ae932d8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x2c51ae93458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x2c51ae93790 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae93618 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae93690 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2c51ae93840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x2c51ae97c68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x2c51ae93a00 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae97ad0 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae97b48 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae97d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x2c51ae980e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x2c51ae97ee0 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x2c51ae97f58 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x2c51ae97fd0 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x2c51ae981a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x2c51ae98438 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2c51ae98360 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2c51ae984e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x2c51ae98810 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x2c51ae986a0 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x2c51ae98718 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x2c51ae988c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x2c51ae90b38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2c51ae90a60 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2c51ae90be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x2c51ae90e78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x2c51ae90da0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x2c51ae90f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x2c51ae91258 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x2c51ae910e0 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x2c51ae91158 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x2c51ae91308 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x2c51ae91730 <.//openssl//file_jk/after\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2c51ae91590 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x2c51ae91610 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x2c51ae99ba0 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x2c51ae91960 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x2c51ae919e0 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x2c51ae99c50 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x2c51ae99d28 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x2c51ae99d98 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x2c51ae99e08 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x2c51ae99e78 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x2c51ae99ee8 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x2c51ae99f58 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x2c51ae99fc8 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x2c51ae9a038 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x2c51ae9a0d8 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x2c51ae9a2a8 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x2c51ae9a318 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x2c51ae9a370 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x2c51ae9a488 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x2c51ae9a430 'struct mime_param_st' sugar
|   `-RecordType 0x2c51ae9a410 'struct mime_param_st'
|     `-Record 0x2c51ae9a370 'mime_param_st'
|-FunctionDecl 0x2c51ae9a630 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x2c51ae9a530 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x2c51ae9a6f0 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x2c51ae9a808 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x2c51ae9a7b0 'struct mime_header_st' sugar
|   `-RecordType 0x2c51ae9a790 'struct mime_header_st'
|     `-Record 0x2c51ae9a6f0 'mime_header_st'
|-FunctionDecl 0x2c51ae9a9b0 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x2c51ae9a8b0 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x2c51ae94ac8 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x2c51ae94cb8 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x2c51ae94b60 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x2c51ae94be0 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x2c51ae94ee0 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x2c51ae94d88 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x2c51ae94e08 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x2c51ae951a0 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x2c51ae94fb0 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x2c51ae95030 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x2c51ae950b0 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x2c51ae953d8 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x2c51ae95278 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x2c51ae952f8 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x2c51ae95690 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x2c51ae954a8 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x2c51ae95528 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x2c51ae955a8 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x2c51ae95910 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x2c51ae95768 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x2c51ae957e8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x2c51ae95868 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x2c51ae95b88 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x2c51ae959e8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x2c51ae95ab0 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x2c51ae95d70 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x2c51ae95c58 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x2c51ae95cd8 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x2c51ae96120 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x2c51ae95e38 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x2c51ae95f18 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x2c51ae95fa0 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x2c51ae96020 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x2c51ae96480 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x2c51ae96200 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x2c51ae96280 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x2c51ae96300 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x2c51ae96380 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x2c51ae96748 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x2c51ae96560 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x2c51ae965e0 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x2c51ae96660 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x2c51ae969c0 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x2c51ae96820 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x2c51ae968a0 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x2c51ae96920 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x2c51aea5728 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x2c51aea5610 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x2c51aea5690 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x2c51aea5a10 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2c51aea57f8 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x2c51aea58a8 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x2c51aea5928 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x2c51aea5c40 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x2c51aea5ae0 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x2c51aea5b68 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x2c51aea5ec0 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2c51aea5d10 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x2c51aea5d98 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x2c51aea5e18 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x2c51aea60b8 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x2c51aea5f90 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x2c51aea6018 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x2c51aea6338 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x2c51aea6188 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x2c51aea6210 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x2c51aea6290 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x2c51aea66b0 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x2c51aea6408 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x2c51aea6488 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x2c51aea6510 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x2c51aea6590 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x2c51aea6970 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x2c51aea6788 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x2c51aea6808 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x2c51aea6888 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x2c51aea6f90 <.//openssl//file_jk/after\crypto\asn1\tasn_dec.c:28:1, line:31:41> line:28:12 invalid asn1_item_embed_d2i 'int (int **, const unsigned char **, long, const int *, int, int, char, int *, int)' static
| |-ParmVarDecl 0x2c51aea6a48 <col:32, col:45> col:45 invalid pval 'int **'
| |-ParmVarDecl 0x2c51aea6ad0 <col:51, col:73> col:73 in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aea6b50 <line:29:32, col:37> col:37 len 'long'
| |-ParmVarDecl 0x2c51aea6bd0 <col:42, col:59> col:59 invalid it 'const int *'
| |-ParmVarDecl 0x2c51aea6c50 <line:30:32, col:36> col:36 tag 'int'
| |-ParmVarDecl 0x2c51aea6cd0 <col:41, col:45> col:45 aclass 'int'
| |-ParmVarDecl 0x2c51aea6d48 <col:53, col:58> col:58 opt 'char'
| |-ParmVarDecl 0x2c51aea6dc8 <col:63, col:73> col:73 invalid ctx 'int *'
| `-ParmVarDecl 0x2c51aea6e48 <line:31:32, col:36> col:36 depth 'int'
|-FunctionDecl 0x2c51aea7220 <line:33:1, col:61> col:12 used asn1_check_eoc 'int (const unsigned char **, long)' static
| |-ParmVarDecl 0x2c51aea7098 <col:27, col:49> col:49 in 'const unsigned char **'
| `-ParmVarDecl 0x2c51aea7118 <col:53, col:58> col:58 len 'long'
|-FunctionDecl 0x2c51aea7530 <line:34:1, col:70> col:12 used asn1_find_end 'int (const unsigned char **, long, char)' static
| |-ParmVarDecl 0x2c51aea7308 <col:26, col:48> col:48 in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aea7388 <col:52, col:57> col:57 len 'long'
| `-ParmVarDecl 0x2c51aea7400 <col:62, col:67> col:67 inf 'char'
|-FunctionDecl 0x2c51aeaaa90 <line:36:1, line:37:65> line:36:12 invalid asn1_collect 'int (int *, const unsigned char **, long, char, int, int, int)' static
| |-ParmVarDecl 0x2c51aeaa660 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x2c51aeaa6e8 <col:39, col:61> col:61 in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aeaa768 <col:65, col:70> col:70 len 'long'
| |-ParmVarDecl 0x2c51aeaa7e0 <line:37:25, col:30> col:30 inf 'char'
| |-ParmVarDecl 0x2c51aeaa860 <col:35, col:39> col:39 tag 'int'
| |-ParmVarDecl 0x2c51aeaa8e0 <col:44, col:48> col:48 aclass 'int'
| `-ParmVarDecl 0x2c51aeaa960 <col:56, col:60> col:60 depth 'int'
|-FunctionDecl 0x2c51aeaad70 <line:39:1, col:73> col:12 invalid collect_data 'int (int *, const unsigned char **, long)' static
| |-ParmVarDecl 0x2c51aeaab80 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x2c51aeaac08 <col:39, col:61> col:61 p 'const unsigned char **'
| `-ParmVarDecl 0x2c51aeaac88 <col:64, col:69> col:69 plen 'long'
|-FunctionDecl 0x2c51aeab4e0 <line:41:1, line:44:77> line:41:12 invalid asn1_check_tlen 'int (long *, int *, unsigned char *, char *, char *, const unsigned char **, long, int, int, char, int *)' static
| |-ParmVarDecl 0x2c51aeaae70 <col:28, col:34> col:34 olen 'long *'
| |-ParmVarDecl 0x2c51aeaaef0 <col:40, col:45> col:45 otag 'int *'
| |-ParmVarDecl 0x2c51aeaaf70 <col:51, col:66> col:66 oclass 'unsigned char *'
| |-ParmVarDecl 0x2c51aeaaff0 <line:42:28, col:34> col:34 inf 'char *'
| |-ParmVarDecl 0x2c51aeab070 <col:39, col:45> col:45 cst 'char *'
| |-ParmVarDecl 0x2c51aeab0f8 <line:43:28, col:50> col:50 in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aeab178 <col:54, col:59> col:59 len 'long'
| |-ParmVarDecl 0x2c51aeab1f8 <line:44:28, col:32> col:32 exptag 'int'
| |-ParmVarDecl 0x2c51aeab278 <col:40, col:44> col:44 expclass 'int'
| |-ParmVarDecl 0x2c51aeab2f0 <col:54, col:59> col:59 opt 'char'
| `-ParmVarDecl 0x2c51aeab370 <col:64, col:74> col:74 invalid ctx 'int *'
|-FunctionDecl 0x2c51aea9a10 <line:46:1, line:49:57> line:46:12 invalid asn1_template_ex_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x2c51aeab5f8 <col:33, col:46> col:46 invalid pval 'int **'
| |-ParmVarDecl 0x2c51aea9670 <line:47:33, col:55> col:55 in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aea96f0 <col:59, col:64> col:64 len 'long'
| |-ParmVarDecl 0x2c51aea9770 <line:48:33, col:54> col:54 invalid tt 'const int *'
| |-ParmVarDecl 0x2c51aea97e8 <col:58, col:63> col:63 opt 'char'
| |-ParmVarDecl 0x2c51aea9868 <line:49:33, col:43> col:43 invalid ctx 'int *'
| `-ParmVarDecl 0x2c51aea98e8 <col:48, col:52> col:52 depth 'int'
|-FunctionDecl 0x2c51aea9ed0 <line:50:1, line:53:60> line:50:12 invalid asn1_template_noexp_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x2c51aea9b08 <col:36, col:49> col:49 invalid val 'int **'
| |-ParmVarDecl 0x2c51aea9b90 <line:51:36, col:58> col:58 in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aea9c10 <col:62, col:67> col:67 len 'long'
| |-ParmVarDecl 0x2c51aea9c90 <line:52:36, col:57> col:57 invalid tt 'const int *'
| |-ParmVarDecl 0x2c51aea9d08 <col:61, col:66> col:66 opt 'char'
| |-ParmVarDecl 0x2c51aea9d88 <line:53:36, col:46> col:46 invalid ctx 'int *'
| `-ParmVarDecl 0x2c51aea9e08 <col:51, col:55> col:55 depth 'int'
|-FunctionDecl 0x2c51aeaa480 <line:54:1, line:58:47> line:54:12 invalid asn1_d2i_ex_primitive 'int (int **, const unsigned char **, long, const int *, int, int, char, int *)' static
| |-ParmVarDecl 0x2c51aea9fc8 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x2c51aeaa050 <line:55:34, col:56> col:56 in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aeaa0d0 <col:60, col:65> col:65 len 'long'
| |-ParmVarDecl 0x2c51aeaa150 <line:56:34, col:51> col:51 invalid it 'const int *'
| |-ParmVarDecl 0x2c51aeaa1d0 <line:57:34, col:38> col:38 tag 'int'
| |-ParmVarDecl 0x2c51aeaa250 <col:43, col:47> col:47 aclass 'int'
| |-ParmVarDecl 0x2c51aeaa2c8 <col:55, col:60> col:60 opt 'char'
| `-ParmVarDecl 0x2c51aeaa348 <line:58:34, col:44> col:44 invalid ctx 'int *'
|-FunctionDecl 0x2c51aeac9a0 <line:59:1, line:60:71> line:59:12 invalid asn1_ex_c2i 'int (int **, const unsigned char *, int, int, char *, const int *)' static
| |-ParmVarDecl 0x2c51aeaa580 <col:24, col:37> col:37 invalid pval 'int **'
| |-ParmVarDecl 0x2c51aeac680 <col:43, col:64> col:64 cont 'const unsigned char *'
| |-ParmVarDecl 0x2c51aeac700 <col:70, col:74> col:74 len 'int'
| |-ParmVarDecl 0x2c51aeac780 <line:60:24, col:28> col:28 utype 'int'
| |-ParmVarDecl 0x2c51aeac800 <col:35, col:41> col:41 free_cont 'char *'
| `-ParmVarDecl 0x2c51aeac880 <col:52, col:69> col:69 invalid it 'const int *'
|-VarDecl 0x2c51aeacb50 <line:63:1, col:38> col:28 used tag2bit 'const unsigned long [32]' static
|-FunctionDecl 0x2c51aeacdc0 <line:84:1, line:89:1> line:84:15 used ASN1_tag2bit 'unsigned long (int)'
| |-ParmVarDecl 0x2c51aeaccd8 <col:28, col:32> col:32 used tag 'int'
| `-CompoundStmt 0x2c51aead130 <line:85:1, line:89:1>
|   |-IfStmt 0x2c51aead030 <line:86:5, line:87:16>
|   | |-BinaryOperator 0x2c51aeacfc0 <line:86:9, col:31> 'int' '||'
|   | | |-ParenExpr 0x2c51aeacf00 <col:9, col:17> 'int'
|   | | | `-BinaryOperator 0x2c51aeacee0 <col:10, col:16> 'int' '<'
|   | | |   |-ImplicitCastExpr 0x2c51aeacec8 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x2c51aeace80 <col:10> 'int' lvalue ParmVar 0x2c51aeaccd8 'tag' 'int'
|   | | |   `-IntegerLiteral 0x2c51aeacea0 <col:16> 'int' 0
|   | | `-ParenExpr 0x2c51aeacfa0 <col:22, col:31> 'int'
|   | |   `-BinaryOperator 0x2c51aeacf80 <col:23, col:29> 'int' '>'
|   | |     |-ImplicitCastExpr 0x2c51aeacf68 <col:23> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x2c51aeacf20 <col:23> 'int' lvalue ParmVar 0x2c51aeaccd8 'tag' 'int'
|   | |     `-IntegerLiteral 0x2c51aeacf40 <col:29> 'int' 30
|   | `-ReturnStmt 0x2c51aead020 <line:87:9, col:16>
|   |   `-ImplicitCastExpr 0x2c51aead008 <col:16> 'unsigned long' <IntegralCast>
|   |     `-IntegerLiteral 0x2c51aeacfe0 <col:16> 'int' 0
|   `-ReturnStmt 0x2c51aead120 <line:88:5, col:23>
|     `-ImplicitCastExpr 0x2c51aead108 <col:12, col:23> 'unsigned long' <LValueToRValue>
|       `-ArraySubscriptExpr 0x2c51aead0e8 <col:12, col:23> 'const unsigned long' lvalue
|         |-ImplicitCastExpr 0x2c51aead0b8 <col:12> 'const unsigned long *' <ArrayToPointerDecay>
|         | `-DeclRefExpr 0x2c51aead048 <col:12> 'const unsigned long [32]' lvalue Var 0x2c51aeacb50 'tag2bit' 'const unsigned long [32]'
|         `-ImplicitCastExpr 0x2c51aead0d0 <col:20> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x2c51aead068 <col:20> 'int' lvalue ParmVar 0x2c51aeaccd8 'tag' 'int'
|-FunctionDecl 0x2c51aead3f0 <line:104:1, line:116:1> line:104:13 invalid ASN1_item_d2i 'int *(int **, const unsigned char **, long, const int *)'
| |-ParmVarDecl 0x2c51aead170 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x2c51aead1f8 <line:105:27, col:49> col:49 used in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aead278 <col:53, col:58> col:58 used len 'long'
| |-ParmVarDecl 0x2c51aead2f8 <line:106:27, col:44> col:44 invalid it 'const int *'
| `-CompoundStmt 0x2c51aead8a0 <line:107:1, line:116:1>
|   `-ReturnStmt 0x2c51aead890 <line:115:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25>
|     `-ImplicitCastExpr 0x2c51aead878 <col:16, col:25> 'int *' <NullToPointer>
|       `-ParenExpr 0x2c51aead858 <col:16, col:25> 'void *'
|         `-CStyleCastExpr 0x2c51aead830 <col:17, col:24> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x2c51aead7f0 <col:24> 'int' 0
|-FunctionDecl 0x2c51aeadd28 <.//openssl//file_jk/after\crypto\asn1\tasn_dec.c:118:1, line:127:1> line:118:5 invalid ASN1_item_ex_d2i 'int (int **, const unsigned char **, long, const int *, int, int, char, int *)'
| |-ParmVarDecl 0x2c51aead8d8 <col:22, col:35> col:35 invalid pval 'int **'
| |-ParmVarDecl 0x2c51aead960 <col:41, col:63> col:63 used in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aead9e0 <col:67, col:72> col:72 used len 'long'
| |-ParmVarDecl 0x2c51aeada60 <line:119:22, col:39> col:39 invalid it 'const int *'
| |-ParmVarDecl 0x2c51aeadae0 <line:120:22, col:26> col:26 used tag 'int'
| |-ParmVarDecl 0x2c51aeadb60 <col:31, col:35> col:35 used aclass 'int'
| |-ParmVarDecl 0x2c51aeadbd8 <col:43, col:48> col:48 used opt 'char'
| |-ParmVarDecl 0x2c51aeadc58 <col:53, col:63> col:63 invalid ctx 'int *'
| `-CompoundStmt 0x2c51aeae208 <line:121:1, line:127:1>
|   |-DeclStmt 0x2c51aeadea0 <line:122:5, col:11>
|   | `-VarDecl 0x2c51aeade38 <col:5, col:9> col:9 used rv 'int'
|   `-ReturnStmt 0x2c51aeae1f8 <line:126:5, col:12>
|     `-ImplicitCastExpr 0x2c51aeae1e0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2c51aeae1c0 <col:12> 'int' lvalue Var 0x2c51aeade38 'rv' 'int'
|-FunctionDecl 0x2c51aea7708 <line:134:1, line:429:1> line:134:12 invalid asn1_item_embed_d2i 'int (int **, const unsigned char **, long, const int *, int, int, char, int *, int)' static
| |-ParmVarDecl 0x2c51aeae248 <col:32, col:45> col:45 invalid pval 'int **'
| |-ParmVarDecl 0x2c51aeae2d0 <col:51, col:73> col:73 used in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aeae350 <line:135:32, col:37> col:37 used len 'long'
| |-ParmVarDecl 0x2c51aeae3d0 <col:42, col:59> col:59 invalid it 'const int *'
| |-ParmVarDecl 0x2c51aeae450 <line:136:32, col:36> col:36 used tag 'int'
| |-ParmVarDecl 0x2c51aeae4d0 <col:41, col:45> col:45 used aclass 'int'
| |-ParmVarDecl 0x2c51aeae548 <col:53, col:58> col:58 used opt 'char'
| |-ParmVarDecl 0x2c51aeae5c8 <col:63, col:73> col:73 invalid ctx 'int *'
| |-ParmVarDecl 0x2c51aea7630 <line:137:32, col:36> col:36 used depth 'int'
| `-CompoundStmt 0x2c51aeb6720 <line:138:1, line:429:1>
|   |-DeclStmt 0x2c51aea7888 <line:139:5, col:37>
|   | `-VarDecl 0x2c51aea7820 <col:5, col:26> col:26 invalid tt 'const int *'
|   |-DeclStmt 0x2c51aea7920 <line:140:5, col:32>
|   | `-VarDecl 0x2c51aea78b8 <col:5, col:30> col:30 invalid ef 'const int *'
|   |-DeclStmt 0x2c51aea79b8 <line:141:5, col:36>
|   | `-VarDecl 0x2c51aea7950 <col:5, col:21> col:21 invalid aux 'const int *'
|   |-DeclStmt 0x2c51aea7b88 <line:143:5, col:38>
|   | |-VarDecl 0x2c51aea79e8 <col:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/after\crypto\asn1\tasn_dec.c:143:26 used p 'const unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x2c51aea7ad8 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const unsigned char *' <NullToPointer>
|   | |   `-ParenExpr 0x2c51aea7ab8 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x2c51aea7a90 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x2c51aea7a50 <col:24> 'int' 0
|   | `-VarDecl 0x2c51aea7b08 <.//openssl//file_jk/after\crypto\asn1\tasn_dec.c:143:5, col:37> col:37 used q 'const unsigned char *'
|   |-DeclStmt 0x2c51aea7c20 <line:144:5, col:25>
|   | `-VarDecl 0x2c51aea7bb8 <col:5, col:19> col:19 used oclass 'unsigned char'
|   |-DeclStmt 0x2c51aea7e40 <line:145:5, col:40>
|   | |-VarDecl 0x2c51aea7c48 <col:5, col:10> col:10 used seq_eoc 'char'
|   | |-VarDecl 0x2c51aea7cc0 <col:5, col:19> col:19 used seq_nolen 'char'
|   | |-VarDecl 0x2c51aea7d38 <col:5, col:30> col:30 used cst 'char'
|   | `-VarDecl 0x2c51aea7db0 <col:5, col:35> col:35 used isopt 'char'
|   |-DeclStmt 0x2c51aea7ed8 <line:146:5, col:16>
|   | `-VarDecl 0x2c51aea7e70 <col:5, col:10> col:10 used tmplen 'long'
|   |-DeclStmt 0x2c51aea7f70 <line:147:5, col:10>
|   | `-VarDecl 0x2c51aea7f08 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x2c51aea8008 <line:148:5, col:13>
|   | `-VarDecl 0x2c51aea7fa0 <col:5, col:9> col:9 used otag 'int'
|   |-DeclStmt 0x2c51aea80c8 <line:149:5, col:16>
|   | `-VarDecl 0x2c51aea8038 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2c51aea80a0 <col:15> 'int' 0
|   |-IfStmt 0x2c51aea8130 <line:151:5, line:152:16>
|   | |-OpaqueValueExpr 0x2c51aea8118 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2c51aea8108 <col:9, col:16>
|   |   `-IntegerLiteral 0x2c51aea80e0 <col:16> 'int' 0
|   |-IfStmt 0x2c51aea8398 <line:158:5, line:161:5>
|   | |-BinaryOperator 0x2c51aea81e8 <line:158:9, line:26:35> 'int' '>'
|   | | |-UnaryOperator 0x2c51aea81a8 <line:158:9, col:11> 'int' prefix '++'
|   | | | `-DeclRefExpr 0x2c51aea8170 <col:11> 'int' lvalue ParmVar 0x2c51aea7630 'depth' 'int'
|   | | `-IntegerLiteral 0x2c51aea81c0 <line:26:35> 'int' 30
|   | `-CompoundStmt 0x2c51aea8380 <line:158:46, line:161:5>
|   |   `-GotoStmt 0x2c51aea8368 <line:160:9, col:14> 'err' 0x2c51aea8318
|   |-LabelStmt 0x2c51aeb63f0 <line:420:2, col:8> 'auxerr'
|   | `-NullStmt 0x2c51aeb63e8 <col:8>
|   |-LabelStmt 0x2c51aeb66a0 <line:422:2, col:5> 'err'
|   | `-NullStmt 0x2c51aeb6698 <col:5>
|   `-ReturnStmt 0x2c51aeb66e0 <line:428:5, col:12>
|     `-IntegerLiteral 0x2c51aeb66b8 <col:12> 'int' 0
|-FunctionDecl 0x2c51aeb6b90 <line:436:1, line:505:1> line:436:12 invalid asn1_template_ex_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x2c51aeb67c8 <col:33, col:46> col:46 invalid val 'int **'
| |-ParmVarDecl 0x2c51aeb6850 <line:437:33, col:55> col:55 used in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aeb68d0 <col:59, col:64> col:64 used inlen 'long'
| |-ParmVarDecl 0x2c51aeb6950 <line:438:33, col:54> col:54 invalid tt 'const int *'
| |-ParmVarDecl 0x2c51aeb69c8 <col:58, col:63> col:63 used opt 'char'
| |-ParmVarDecl 0x2c51aeb6a48 <line:439:33, col:43> col:43 invalid ctx 'int *'
| |-ParmVarDecl 0x2c51aeb6ac8 <col:48, col:52> col:52 used depth 'int'
| `-CompoundStmt 0x2c51aeb50f8 <line:440:1, line:505:1>
|   |-DeclStmt 0x2c51aeb6d98 <line:441:5, col:22>
|   | |-VarDecl 0x2c51aeb6c98 <col:5, col:9> col:9 used flags 'int'
|   | `-VarDecl 0x2c51aeb6d18 <col:5, col:16> col:16 used aclass 'int'
|   |-DeclStmt 0x2c51aeb6e30 <line:442:5, col:12>
|   | `-VarDecl 0x2c51aeb6dc8 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x2c51aeb6ec8 <line:443:5, col:13>
|   | `-VarDecl 0x2c51aeb6e60 <col:5, col:10> col:10 used len 'long'
|   |-DeclStmt 0x2c51aeb6ff8 <line:444:5, col:31>
|   | |-VarDecl 0x2c51aeb6ef8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   | `-VarDecl 0x2c51aeb6f78 <col:5, col:30> col:30 used q 'const unsigned char *'
|   |-DeclStmt 0x2c51aeb7088 <line:445:5, col:17>
|   | `-VarDecl 0x2c51aeb7020 <col:5, col:10> col:10 used exp_eoc 'char'
|   |-IfStmt 0x2c51aeb70f0 <line:446:5, line:447:16>
|   | |-OpaqueValueExpr 0x2c51aeb70d8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2c51aeb70c8 <col:9, col:16>
|   |   `-IntegerLiteral 0x2c51aeb70a0 <col:16> 'int' 0
|   |-BinaryOperator 0x2c51aeb7250 <line:451:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2c51aeb7198 <col:5> 'const unsigned char *' lvalue Var 0x2c51aeb6ef8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2c51aeb7238 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2c51aeb7220 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2c51aeb7208 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2c51aeb71d0 <col:10> 'const unsigned char **' lvalue ParmVar 0x2c51aeb6850 'in' 'const unsigned char **'
|   |-IfStmt 0x2c51aeb4fa0 <line:454:5, line:498:9> has_else
|   | |-OpaqueValueExpr 0x2c51aeb4f88 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2c51aeb4eb8 <line:454:35, line:497:5>
|   | | |-DeclStmt 0x2c51aeb7308 <line:455:9, col:17>
|   | | | `-VarDecl 0x2c51aeb72a0 <col:9, col:14> col:14 used cst 'char'
|   | | |-BinaryOperator 0x2c51aeb7690 <line:462:9, col:13> 'const unsigned char *' '='
|   | | | |-DeclRefExpr 0x2c51aeb7620 <col:9> 'const unsigned char *' lvalue Var 0x2c51aeb6f78 'q' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x2c51aeb7678 <col:13> 'const unsigned char *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2c51aeb7658 <col:13> 'const unsigned char *' lvalue Var 0x2c51aeb6ef8 'p' 'const unsigned char *'
|   | | |-IfStmt 0x2c51aeb4850 <line:463:9, line:467:21> has_else
|   | | | |-UnaryOperator 0x2c51aeb76e8 <line:463:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x2c51aeb76d0 <col:14> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2c51aeb76b0 <col:14> 'int' lvalue Var 0x2c51aeb6dc8 'ret' 'int'
|   | | | |-CompoundStmt 0x2c51aeb4738 <col:19, line:466:9>
|   | | | | `-ReturnStmt 0x2c51aeb4728 <line:465:13, col:20>
|   | | | |   `-IntegerLiteral 0x2c51aeb4700 <col:20> 'int' 0
|   | | | `-IfStmt 0x2c51aeb4838 <line:466:16, line:467:21>
|   | | |   |-BinaryOperator 0x2c51aeb47c8 <line:466:20, col:28> 'int' '=='
|   | | |   | |-ImplicitCastExpr 0x2c51aeb47b0 <col:20> 'int' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x2c51aeb4750 <col:20> 'int' lvalue Var 0x2c51aeb6dc8 'ret' 'int'
|   | | |   | `-UnaryOperator 0x2c51aeb4798 <col:27, col:28> 'int' prefix '-'
|   | | |   |   `-IntegerLiteral 0x2c51aeb4770 <col:28> 'int' 1
|   | | |   `-ReturnStmt 0x2c51aeb4828 <line:467:13, col:21>
|   | | |     `-UnaryOperator 0x2c51aeb4810 <col:20, col:21> 'int' prefix '-'
|   | | |       `-IntegerLiteral 0x2c51aeb47e8 <col:21> 'int' 1
|   | | |-IfStmt 0x2c51aeb4938 <line:468:9, line:472:9>
|   | | | |-UnaryOperator 0x2c51aeb48b0 <line:468:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x2c51aeb4898 <col:14> 'char' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2c51aeb4878 <col:14> 'char' lvalue Var 0x2c51aeb72a0 'cst' 'char'
|   | | | `-CompoundStmt 0x2c51aeb4920 <col:19, line:472:9>
|   | | |   `-ReturnStmt 0x2c51aeb4910 <line:471:13, col:20>
|   | | |     `-IntegerLiteral 0x2c51aeb48e8 <col:20> 'int' 0
|   | | |-IfStmt 0x2c51aeb4ae8 <line:475:9, line:478:9>
|   | | | |-UnaryOperator 0x2c51aeb4a60 <line:475:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x2c51aeb4a48 <col:14> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2c51aeb4a28 <col:14> 'int' lvalue Var 0x2c51aeb6dc8 'ret' 'int'
|   | | | `-CompoundStmt 0x2c51aeb4ad0 <col:19, line:478:9>
|   | | |   `-ReturnStmt 0x2c51aeb4ac0 <line:477:13, col:20>
|   | | |     `-IntegerLiteral 0x2c51aeb4a98 <col:20> 'int' 0
|   | | |-CompoundAssignOperator 0x2c51aeb4bb0 <line:480:9, col:20> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | | |-DeclRefExpr 0x2c51aeb4b00 <col:9> 'long' lvalue Var 0x2c51aeb6e60 'len' 'long'
|   | | | `-BinaryOperator 0x2c51aeb4b90 <col:16, col:20> 'long long' '-'
|   | | |   |-ImplicitCastExpr 0x2c51aeb4b60 <col:16> 'const unsigned char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x2c51aeb4b20 <col:16> 'const unsigned char *' lvalue Var 0x2c51aeb6ef8 'p' 'const unsigned char *'
|   | | |   `-ImplicitCastExpr 0x2c51aeb4b78 <col:20> 'const unsigned char *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x2c51aeb4b40 <col:20> 'const unsigned char *' lvalue Var 0x2c51aeb6f78 'q' 'const unsigned char *'
|   | | `-IfStmt 0x2c51aeb4e90 <line:481:9, line:496:9> has_else
|   | |   |-ImplicitCastExpr 0x2c51aeb4c00 <line:481:13> 'char' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2c51aeb4be0 <col:13> 'char' lvalue Var 0x2c51aeb7020 'exp_eoc' 'char'
|   | |   |-CompoundStmt 0x2c51aeb4dc0 <col:22, line:487:9>
|   | |   | `-IfStmt 0x2c51aeb4da8 <line:483:13, line:486:13>
|   | |   |   |-UnaryOperator 0x2c51aeb4cf0 <line:483:17, col:40> 'int' prefix '!' cannot overflow
|   | |   |   | `-CallExpr 0x2c51aeb4ca8 <col:18, col:40> 'int'
|   | |   |   |   |-ImplicitCastExpr 0x2c51aeb4c90 <col:18> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   | |   |   |   | `-DeclRefExpr 0x2c51aeb4c18 <col:18> 'int (const unsigned char **, long)' Function 0x2c51aea7220 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   | |   |   |   |-UnaryOperator 0x2c51aeb4c58 <col:33, col:34> 'const unsigned char **' prefix '&' cannot overflow
|   | |   |   |   | `-DeclRefExpr 0x2c51aeb4c38 <col:34> 'const unsigned char *' lvalue Var 0x2c51aeb6ef8 'p' 'const unsigned char *'
|   | |   |   |   `-ImplicitCastExpr 0x2c51aeb4cd8 <col:37> 'long' <LValueToRValue>
|   | |   |   |     `-DeclRefExpr 0x2c51aeb4c70 <col:37> 'long' lvalue Var 0x2c51aeb6e60 'len' 'long'
|   | |   |   `-CompoundStmt 0x2c51aeb4d90 <col:43, line:486:13>
|   | |   |     `-GotoStmt 0x2c51aeb4d78 <line:485:17, col:22> 'err' 0x2c51aeb4d28
|   | |   `-CompoundStmt 0x2c51aeb4e78 <line:487:16, line:496:9>
|   | |     `-IfStmt 0x2c51aeb4e60 <line:491:13, line:495:13>
|   | |       |-ImplicitCastExpr 0x2c51aeb4df8 <line:491:17> 'long' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x2c51aeb4dd8 <col:17> 'long' lvalue Var 0x2c51aeb6e60 'len' 'long'
|   | |       `-CompoundStmt 0x2c51aeb4e48 <col:22, line:495:13>
|   | |         `-GotoStmt 0x2c51aeb4e30 <line:494:17, col:22> 'err' 0x2c51aeb4d28
|   | `-NullStmt 0x2c51aeb4f80 <line:498:9>
|   |-BinaryOperator 0x2c51aeb5050 <line:500:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2c51aeb5000 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2c51aeb4fe8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2c51aeb4fc8 <col:6> 'const unsigned char **' lvalue ParmVar 0x2c51aeb6850 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2c51aeb5038 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2c51aeb5018 <col:11> 'const unsigned char *' lvalue Var 0x2c51aeb6ef8 'p' 'const unsigned char *'
|   |-ReturnStmt 0x2c51aeb5098 <line:501:5, col:12>
|   | `-IntegerLiteral 0x2c51aeb5070 <col:12> 'int' 1
|   `-LabelStmt 0x2c51aeb50e0 <line:503:2, line:504:12> 'err'
|     `-ReturnStmt 0x2c51aeb50d0 <col:5, col:12>
|       `-IntegerLiteral 0x2c51aeb50a8 <col:12> 'int' 0
|-FunctionDecl 0x2c51aeb5548 <line:507:1, line:637:1> line:507:12 invalid asn1_template_noexp_d2i 'int (int **, const unsigned char **, long, const int *, char, int *, int)' static
| |-ParmVarDecl 0x2c51aeb5180 <col:36, col:49> col:49 invalid val 'int **'
| |-ParmVarDecl 0x2c51aeb5208 <line:508:36, col:58> col:58 used in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aeb5288 <col:62, col:67> col:67 used len 'long'
| |-ParmVarDecl 0x2c51aeb5308 <line:509:36, col:57> col:57 invalid tt 'const int *'
| |-ParmVarDecl 0x2c51aeb5380 <col:61, col:66> col:66 used opt 'char'
| |-ParmVarDecl 0x2c51aeb5400 <line:510:36, col:46> col:46 invalid ctx 'int *'
| |-ParmVarDecl 0x2c51aeb5480 <col:51, col:55> col:55 used depth 'int'
| `-CompoundStmt 0x2c51aeb1e38 <line:511:1, line:637:1>
|   |-DeclStmt 0x2c51aeb0740 <line:512:5, col:22>
|   | |-VarDecl 0x2c51aeb5650 <col:5, col:9> col:9 used flags 'int'
|   | `-VarDecl 0x2c51aeb06c0 <col:5, col:16> col:16 used aclass 'int'
|   |-DeclStmt 0x2c51aeb07d8 <line:513:5, col:12>
|   | `-VarDecl 0x2c51aeb0770 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x2c51aeb0908 <line:515:5, col:31>
|   | |-VarDecl 0x2c51aeb0808 <col:5, col:26> col:26 used p 'const unsigned char *'
|   | `-VarDecl 0x2c51aeb0888 <col:5, col:30> col:30 used q 'const unsigned char *'
|   |-IfStmt 0x2c51aeb0970 <line:516:5, line:517:16>
|   | |-OpaqueValueExpr 0x2c51aeb0958 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x2c51aeb0948 <col:9, col:16>
|   |   `-IntegerLiteral 0x2c51aeb0920 <col:16> 'int' 0
|   |-BinaryOperator 0x2c51aeb0ad0 <line:521:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2c51aeb0a18 <col:5> 'const unsigned char *' lvalue Var 0x2c51aeb0808 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2c51aeb0ab8 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2c51aeb0aa0 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2c51aeb0a88 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2c51aeb0a50 <col:10> 'const unsigned char **' lvalue ParmVar 0x2c51aeb5208 'in' 'const unsigned char **'
|   |-BinaryOperator 0x2c51aeb0b60 <line:522:5, col:9> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2c51aeb0af0 <col:5> 'const unsigned char *' lvalue Var 0x2c51aeb0888 'q' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2c51aeb0b48 <col:9> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2c51aeb0b28 <col:9> 'const unsigned char *' lvalue Var 0x2c51aeb0808 'p' 'const unsigned char *'
|   |-IfStmt 0x2c51aeb0ba8 <line:528:5, line:531:5>
|   | |-OpaqueValueExpr 0x2c51aeb0b90 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2c51aeb0b80 <line:528:38, line:531:5>
|   |-IfStmt 0x2c51aeb1ce0 <line:533:5, line:630:5> has_else
|   | |-OpaqueValueExpr 0x2c51aeb1cc8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2c51aeb9688 <line:533:36, line:611:5>
|   | | |-DeclStmt 0x2c51aeb0cf8 <line:535:9, col:28>
|   | | | |-VarDecl 0x2c51aeb0bf8 <col:9, col:13> col:13 used sktag 'int'
|   | | | `-VarDecl 0x2c51aeb0c78 <col:9, col:20> col:20 used skaclass 'int'
|   | | |-DeclStmt 0x2c51aeb0d88 <line:536:9, col:20>
|   | | | `-VarDecl 0x2c51aeb0d20 <col:9, col:14> col:14 used sk_eoc 'char'
|   | | |-IfStmt 0x2c51aeb0f48 <line:538:9, line:547:9> has_else
|   | | | |-OpaqueValueExpr 0x2c51aeb0f30 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x2c51aeb0e88 <line:538:39, line:541:9>
|   | | | | `-BinaryOperator 0x2c51aeb0e68 <line:540:13, col:24> 'int' '='
|   | | | |   |-DeclRefExpr 0x2c51aeb0df8 <col:13> 'int' lvalue Var 0x2c51aeb0c78 'skaclass' 'int'
|   | | | |   `-ImplicitCastExpr 0x2c51aeb0e50 <col:24> 'int' <LValueToRValue>
|   | | | |     `-DeclRefExpr 0x2c51aeb0e30 <col:24> 'int' lvalue Var 0x2c51aeb06c0 'aclass' 'int'
|   | | | `-CompoundStmt 0x2c51aeb0f20 <line:541:16, line:547:9>
|   | | |-IfStmt 0x2c51aeb1470 <line:551:9, line:555:21> has_else
|   | | | |-UnaryOperator 0x2c51aeb12e8 <line:551:13, col:14> 'int' prefix '!' cannot overflow
|   | | | | `-ImplicitCastExpr 0x2c51aeb12d0 <col:14> 'int' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x2c51aeb12b0 <col:14> 'int' lvalue Var 0x2c51aeb0770 'ret' 'int'
|   | | | |-CompoundStmt 0x2c51aeb1358 <col:19, line:554:9>
|   | | | | `-ReturnStmt 0x2c51aeb1348 <line:553:13, col:20>
|   | | | |   `-IntegerLiteral 0x2c51aeb1320 <col:20> 'int' 0
|   | | | `-IfStmt 0x2c51aeb1458 <line:554:16, line:555:21>
|   | | |   |-BinaryOperator 0x2c51aeb13e8 <line:554:20, col:28> 'int' '=='
|   | | |   | |-ImplicitCastExpr 0x2c51aeb13d0 <col:20> 'int' <LValueToRValue>
|   | | |   | | `-DeclRefExpr 0x2c51aeb1370 <col:20> 'int' lvalue Var 0x2c51aeb0770 'ret' 'int'
|   | | |   | `-UnaryOperator 0x2c51aeb13b8 <col:27, col:28> 'int' prefix '-'
|   | | |   |   `-IntegerLiteral 0x2c51aeb1390 <col:28> 'int' 1
|   | | |   `-ReturnStmt 0x2c51aeb1448 <line:555:13, col:21>
|   | | |     `-UnaryOperator 0x2c51aeb1430 <col:20, col:21> 'int' prefix '-'
|   | | |       `-IntegerLiteral 0x2c51aeb1408 <col:21> 'int' 1
|   | | |-IfStmt 0x2c51aeb8a08 <line:556:9, line:568:9> has_else
|   | | | |-OpaqueValueExpr 0x2c51aeb89f0 <<invalid sloc>> '_Bool'
|   | | | |-NullStmt 0x2c51aeb89e8 <line:557:13>
|   | | | `-CompoundStmt 0x2c51aeb89d8 <line:558:14, line:568:9>
|   | | |-IfStmt 0x2c51aeb8ae8 <line:570:9, line:573:9>
|   | | | |-OpaqueValueExpr 0x2c51aeb8ad0 <<invalid sloc>> '_Bool'
|   | | | `-CompoundStmt 0x2c51aeb8ab8 <line:570:20, line:573:9>
|   | | |   `-GotoStmt 0x2c51aeb8aa0 <line:572:13, col:18> 'err' 0x2c51aeb8a50
|   | | |-WhileStmt 0x2c51aeb95d0 <line:576:9, line:606:9>
|   | | | |-BinaryOperator 0x2c51aeb8b78 <line:576:16, col:22> 'int' '>'
|   | | | | |-ImplicitCastExpr 0x2c51aeb8b48 <col:16> 'long' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x2c51aeb8b00 <col:16> 'long' lvalue ParmVar 0x2c51aeb5288 'len' 'long'
|   | | | | `-ImplicitCastExpr 0x2c51aeb8b60 <col:22> 'long' <IntegralCast>
|   | | | |   `-IntegerLiteral 0x2c51aeb8b20 <col:22> 'int' 0
|   | | | `-CompoundStmt 0x2c51aeb9598 <col:25, line:606:9>
|   | | |   |-BinaryOperator 0x2c51aeb8bf0 <line:578:13, col:17> 'const unsigned char *' '='
|   | | |   | |-DeclRefExpr 0x2c51aeb8b98 <col:13> 'const unsigned char *' lvalue Var 0x2c51aeb0888 'q' 'const unsigned char *'
|   | | |   | `-ImplicitCastExpr 0x2c51aeb8bd8 <col:17> 'const unsigned char *' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x2c51aeb8bb8 <col:17> 'const unsigned char *' lvalue Var 0x2c51aeb0808 'p' 'const unsigned char *'
|   | | |   |-IfStmt 0x2c51aeb8f38 <line:580:13, line:589:13>
|   | | |   | |-CallExpr 0x2c51aeb8ca0 <line:580:17, col:39> 'int'
|   | | |   | | |-ImplicitCastExpr 0x2c51aeb8c88 <col:17> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   | | |   | | | `-DeclRefExpr 0x2c51aeb8c10 <col:17> 'int (const unsigned char **, long)' Function 0x2c51aea7220 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   | | |   | | |-UnaryOperator 0x2c51aeb8c50 <col:32, col:33> 'const unsigned char **' prefix '&' cannot overflow
|   | | |   | | | `-DeclRefExpr 0x2c51aeb8c30 <col:33> 'const unsigned char *' lvalue Var 0x2c51aeb0808 'p' 'const unsigned char *'
|   | | |   | | `-ImplicitCastExpr 0x2c51aeb8cd0 <col:36> 'long' <LValueToRValue>
|   | | |   | |   `-DeclRefExpr 0x2c51aeb8c68 <col:36> 'long' lvalue ParmVar 0x2c51aeb5288 'len' 'long'
|   | | |   | `-CompoundStmt 0x2c51aeb8f08 <col:42, line:589:13>
|   | | |   |   |-IfStmt 0x2c51aeb8d88 <line:581:17, line:585:17>
|   | | |   |   | |-UnaryOperator 0x2c51aeb8d20 <line:581:21, col:22> 'int' prefix '!' cannot overflow
|   | | |   |   | | `-ImplicitCastExpr 0x2c51aeb8d08 <col:22> 'char' <LValueToRValue>
|   | | |   |   | |   `-DeclRefExpr 0x2c51aeb8ce8 <col:22> 'char' lvalue Var 0x2c51aeb0d20 'sk_eoc' 'char'
|   | | |   |   | `-CompoundStmt 0x2c51aeb8d70 <col:30, line:585:17>
|   | | |   |   |   `-GotoStmt 0x2c51aeb8d58 <line:584:21, col:26> 'err' 0x2c51aeb8a50
|   | | |   |   |-CompoundAssignOperator 0x2c51aeb8e50 <line:586:17, col:28> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   |   | |-DeclRefExpr 0x2c51aeb8da0 <col:17> 'long' lvalue ParmVar 0x2c51aeb5288 'len' 'long'
|   | | |   |   | `-BinaryOperator 0x2c51aeb8e30 <col:24, col:28> 'long long' '-'
|   | | |   |   |   |-ImplicitCastExpr 0x2c51aeb8e00 <col:24> 'const unsigned char *' <LValueToRValue>
|   | | |   |   |   | `-DeclRefExpr 0x2c51aeb8dc0 <col:24> 'const unsigned char *' lvalue Var 0x2c51aeb0808 'p' 'const unsigned char *'
|   | | |   |   |   `-ImplicitCastExpr 0x2c51aeb8e18 <col:28> 'const unsigned char *' <LValueToRValue>
|   | | |   |   |     `-DeclRefExpr 0x2c51aeb8de0 <col:28> 'const unsigned char *' lvalue Var 0x2c51aeb0888 'q' 'const unsigned char *'
|   | | |   |   |-BinaryOperator 0x2c51aeb8ee0 <line:587:17, col:26> 'char' '='
|   | | |   |   | |-DeclRefExpr 0x2c51aeb8e80 <col:17> 'char' lvalue Var 0x2c51aeb0d20 'sk_eoc' 'char'
|   | | |   |   | `-ImplicitCastExpr 0x2c51aeb8ec8 <col:26> 'char' <IntegralCast>
|   | | |   |   |   `-IntegerLiteral 0x2c51aeb8ea0 <col:26> 'int' 0
|   | | |   |   `-BreakStmt 0x2c51aeb8f00 <line:588:17>
|   | | |   |-IfStmt 0x2c51aeb92b0 <line:591:13, line:599:13>
|   | | |   | |-OpaqueValueExpr 0x2c51aeb9298 <<invalid sloc>> '_Bool'
|   | | |   | `-CompoundStmt 0x2c51aeb9280 <line:593:46, line:599:13>
|   | | |   |   `-GotoStmt 0x2c51aeb9268 <line:598:17, col:22> 'err' 0x2c51aeb8a50
|   | | |   |-CompoundAssignOperator 0x2c51aeb9378 <line:600:13, col:24> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   | |-DeclRefExpr 0x2c51aeb92c8 <col:13> 'long' lvalue ParmVar 0x2c51aeb5288 'len' 'long'
|   | | |   | `-BinaryOperator 0x2c51aeb9358 <col:20, col:24> 'long long' '-'
|   | | |   |   |-ImplicitCastExpr 0x2c51aeb9328 <col:20> 'const unsigned char *' <LValueToRValue>
|   | | |   |   | `-DeclRefExpr 0x2c51aeb92e8 <col:20> 'const unsigned char *' lvalue Var 0x2c51aeb0808 'p' 'const unsigned char *'
|   | | |   |   `-ImplicitCastExpr 0x2c51aeb9340 <col:24> 'const unsigned char *' <LValueToRValue>
|   | | |   |     `-DeclRefExpr 0x2c51aeb9308 <col:24> 'const unsigned char *' lvalue Var 0x2c51aeb0888 'q' 'const unsigned char *'
|   | | |   `-IfStmt 0x2c51aeb9580 <line:601:13, line:605:13>
|   | | |     |-OpaqueValueExpr 0x2c51aeb9568 <<invalid sloc>> '_Bool'
|   | | |     `-CompoundStmt 0x2c51aeb9550 <line:601:77, line:605:13>
|   | | |       `-GotoStmt 0x2c51aeb9538 <line:604:17, col:22> 'err' 0x2c51aeb8a50
|   | | `-IfStmt 0x2c51aeb9670 <line:607:9, line:610:9>
|   | |   |-ImplicitCastExpr 0x2c51aeb9608 <line:607:13> 'char' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2c51aeb95e8 <col:13> 'char' lvalue Var 0x2c51aeb0d20 'sk_eoc' 'char'
|   | |   `-CompoundStmt 0x2c51aeb9658 <col:21, line:610:9>
|   | |     `-GotoStmt 0x2c51aeb9640 <line:609:13, col:18> 'err' 0x2c51aeb8a50
|   | `-IfStmt 0x2c51aeb1ca0 <line:611:12, line:630:5> has_else
|   |   |-OpaqueValueExpr 0x2c51aeb1c88 <<invalid sloc>> '_Bool'
|   |   |-CompoundStmt 0x2c51aeb1950 <line:611:42, line:621:5>
|   |   | `-IfStmt 0x2c51aeb1928 <line:616:9, line:620:21> has_else
|   |   |   |-UnaryOperator 0x2c51aeb17c0 <line:616:13, col:14> 'int' prefix '!' cannot overflow
|   |   |   | `-ImplicitCastExpr 0x2c51aeb17a8 <col:14> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x2c51aeb1788 <col:14> 'int' lvalue Var 0x2c51aeb0770 'ret' 'int'
|   |   |   |-CompoundStmt 0x2c51aeb1810 <col:19, line:619:9>
|   |   |   | `-GotoStmt 0x2c51aeb17f8 <line:618:13, col:18> 'err' 0x2c51aeb8a50
|   |   |   `-IfStmt 0x2c51aeb1910 <line:619:16, line:620:21>
|   |   |     |-BinaryOperator 0x2c51aeb18a0 <line:619:20, col:28> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x2c51aeb1888 <col:20> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x2c51aeb1828 <col:20> 'int' lvalue Var 0x2c51aeb0770 'ret' 'int'
|   |   |     | `-UnaryOperator 0x2c51aeb1870 <col:27, col:28> 'int' prefix '-'
|   |   |     |   `-IntegerLiteral 0x2c51aeb1848 <col:28> 'int' 1
|   |   |     `-ReturnStmt 0x2c51aeb1900 <line:620:13, col:21>
|   |   |       `-UnaryOperator 0x2c51aeb18e8 <col:20, col:21> 'int' prefix '-'
|   |   |         `-IntegerLiteral 0x2c51aeb18c0 <col:21> 'int' 1
|   |   `-CompoundStmt 0x2c51aeb1c70 <line:621:12, line:630:5>
|   |     `-IfStmt 0x2c51aeb1c48 <line:625:9, line:629:21> has_else
|   |       |-UnaryOperator 0x2c51aeb1ae0 <line:625:13, col:14> 'int' prefix '!' cannot overflow
|   |       | `-ImplicitCastExpr 0x2c51aeb1ac8 <col:14> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x2c51aeb1aa8 <col:14> 'int' lvalue Var 0x2c51aeb0770 'ret' 'int'
|   |       |-CompoundStmt 0x2c51aeb1b30 <col:19, line:628:9>
|   |       | `-GotoStmt 0x2c51aeb1b18 <line:627:13, col:18> 'err' 0x2c51aeb8a50
|   |       `-IfStmt 0x2c51aeb1c30 <line:628:16, line:629:21>
|   |         |-BinaryOperator 0x2c51aeb1bc0 <line:628:20, col:28> 'int' '=='
|   |         | |-ImplicitCastExpr 0x2c51aeb1ba8 <col:20> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x2c51aeb1b48 <col:20> 'int' lvalue Var 0x2c51aeb0770 'ret' 'int'
|   |         | `-UnaryOperator 0x2c51aeb1b90 <col:27, col:28> 'int' prefix '-'
|   |         |   `-IntegerLiteral 0x2c51aeb1b68 <col:28> 'int' 1
|   |         `-ReturnStmt 0x2c51aeb1c20 <line:629:13, col:21>
|   |           `-UnaryOperator 0x2c51aeb1c08 <col:20, col:21> 'int' prefix '-'
|   |             `-IntegerLiteral 0x2c51aeb1be0 <col:21> 'int' 1
|   |-BinaryOperator 0x2c51aeb1d90 <line:632:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2c51aeb1d40 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2c51aeb1d28 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2c51aeb1d08 <col:6> 'const unsigned char **' lvalue ParmVar 0x2c51aeb5208 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2c51aeb1d78 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2c51aeb1d58 <col:11> 'const unsigned char *' lvalue Var 0x2c51aeb0808 'p' 'const unsigned char *'
|   |-ReturnStmt 0x2c51aeb1dd8 <line:633:5, col:12>
|   | `-IntegerLiteral 0x2c51aeb1db0 <col:12> 'int' 1
|   `-LabelStmt 0x2c51aeb1e20 <line:635:2, line:636:12> 'err'
|     `-ReturnStmt 0x2c51aeb1e10 <col:5, col:12>
|       `-IntegerLiteral 0x2c51aeb1de8 <col:12> 'int' 0
|-FunctionDecl 0x2c51aeb2310 <line:639:1, line:769:1> line:639:12 invalid asn1_d2i_ex_primitive 'int (int **, const unsigned char **, long, const int *, int, int, char, int *)' static
| |-ParmVarDecl 0x2c51aeb1ec0 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x2c51aeb1f48 <line:640:34, col:56> col:56 used in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aeb1fc8 <col:60, col:65> col:65 used inlen 'long'
| |-ParmVarDecl 0x2c51aeb2048 <line:641:34, col:51> col:51 invalid it 'const int *'
| |-ParmVarDecl 0x2c51aeb20c8 <line:642:34, col:38> col:38 used tag 'int'
| |-ParmVarDecl 0x2c51aeb2148 <col:43, col:47> col:47 used aclass 'int'
| |-ParmVarDecl 0x2c51aeb21c0 <col:55, col:60> col:60 used opt 'char'
| |-ParmVarDecl 0x2c51aeb2240 <col:65, col:75> col:75 invalid ctx 'int *'
| `-CompoundStmt 0x2c51aeb4098 <line:643:1, line:769:1>
|   |-DeclStmt 0x2c51aeb2548 <line:644:5, col:23>
|   | |-VarDecl 0x2c51aeb2420 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x2c51aeb2488 <col:15> 'int' 0
|   | `-VarDecl 0x2c51aeb24c8 <col:5, col:18> col:18 used utype 'int'
|   |-DeclStmt 0x2c51aeb25e0 <line:645:5, col:14>
|   | `-VarDecl 0x2c51aeb2578 <col:5, col:10> col:10 used plen 'long'
|   |-DeclStmt 0x2c51aeb9890 <line:646:5, col:33>
|   | |-VarDecl 0x2c51aeb2608 <col:5, col:10> col:10 used cst 'char'
|   | |-VarDecl 0x2c51aeb9750 <col:5, col:15> col:15 used inf 'char'
|   | `-VarDecl 0x2c51aeb97c8 <col:5, col:32> col:20 used free_cont 'char' cinit
|   |   `-ImplicitCastExpr 0x2c51aeb9858 <col:32> 'char' <IntegralCast>
|   |     `-IntegerLiteral 0x2c51aeb9830 <col:32> 'int' 0
|   |-DeclStmt 0x2c51aeb9928 <line:647:5, col:27>
|   | `-VarDecl 0x2c51aeb98c0 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-DeclStmt 0x2c51aeb9a60 <line:649:5, col:37>
|   | `-VarDecl 0x2c51aeb9958 <col:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/after\crypto\asn1\tasn_dec.c:649:26 used cont 'const unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x2c51aeb9a48 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x2c51aeb9a28 <col:16, col:25> 'void *'
|   |       `-CStyleCastExpr 0x2c51aeb9a00 <col:17, col:24> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x2c51aeb99c0 <col:24> 'int' 0
|   |-DeclStmt 0x2c51aeb9af8 <.//openssl//file_jk/after\crypto\asn1\tasn_dec.c:650:5, col:13>
|   | `-VarDecl 0x2c51aeb9a90 <col:5, col:10> col:10 used len 'long'
|   |-IfStmt 0x2c51aeb9b98 <line:651:5, line:654:5>
|   | |-OpaqueValueExpr 0x2c51aeb9b80 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2c51aeb9b68 <line:651:16, line:654:5>
|   |   `-ReturnStmt 0x2c51aeb9b58 <line:653:9, col:16>
|   |     `-IntegerLiteral 0x2c51aeb9b30 <col:16> 'int' 0
|   |-IfStmt 0x2c51aeb9d38 <line:656:5, line:660:9> has_else
|   | |-OpaqueValueExpr 0x2c51aeb9d20 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2c51aeb9cd8 <line:656:42, line:659:5>
|   | | |-BinaryOperator 0x2c51aeb9c38 <line:657:9, col:17> 'int' '='
|   | | | |-DeclRefExpr 0x2c51aeb9bb0 <col:9> 'int' lvalue Var 0x2c51aeb24c8 'utype' 'int'
|   | | | `-ImplicitCastExpr 0x2c51aeb9c20 <col:17> 'int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2c51aeb9be8 <col:17> 'int' lvalue ParmVar 0x2c51aeb20c8 'tag' 'int'
|   | | `-BinaryOperator 0x2c51aeb9cb8 <line:658:9, col:16> 'int' '='
|   | |   |-DeclRefExpr 0x2c51aeb9c58 <col:9> 'int' lvalue ParmVar 0x2c51aeb20c8 'tag' 'int'
|   | |   `-UnaryOperator 0x2c51aeb9ca0 <col:15, col:16> 'int' prefix '-'
|   | |     `-IntegerLiteral 0x2c51aeb9c78 <col:16> 'int' 1
|   | `-NullStmt 0x2c51aeb9d18 <line:660:9>
|   |-IfStmt 0x2c51aeba590 <line:662:5, line:683:5>
|   | |-OpaqueValueExpr 0x2c51aeba578 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2c51aeba540 <line:662:30, line:683:5>
|   |   |-DeclStmt 0x2c51aeb9e00 <line:664:9, col:29>
|   |   | `-VarDecl 0x2c51aeb9d98 <col:9, col:23> col:23 used oclass 'unsigned char'
|   |   |-IfStmt 0x2c51aeb9f08 <line:665:9, line:668:9>
|   |   | |-BinaryOperator 0x2c51aeb9e78 <line:665:13, col:20> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x2c51aeb9e60 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2c51aeb9e18 <col:13> 'int' lvalue ParmVar 0x2c51aeb20c8 'tag' 'int'
|   |   | | `-IntegerLiteral 0x2c51aeb9e38 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x2c51aeb9ef0 <col:23, line:668:9>
|   |   |   `-ReturnStmt 0x2c51aeb9ee0 <line:667:13, col:20>
|   |   |     `-IntegerLiteral 0x2c51aeb9eb8 <col:20> 'int' 0
|   |   |-IfStmt 0x2c51aeb9fe0 <line:669:9, line:673:9>
|   |   | |-ImplicitCastExpr 0x2c51aeb9f58 <line:669:13> 'char' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2c51aeb9f20 <col:13> 'char' lvalue ParmVar 0x2c51aeb21c0 'opt' 'char'
|   |   | `-CompoundStmt 0x2c51aeb9fc8 <col:18, line:673:9>
|   |   |   `-ReturnStmt 0x2c51aeb9fb8 <line:672:13, col:20>
|   |   |     `-IntegerLiteral 0x2c51aeb9f90 <col:20> 'int' 0
|   |   |-BinaryOperator 0x2c51aeba0b0 <line:674:9, col:14> 'const unsigned char *' '='
|   |   | |-DeclRefExpr 0x2c51aeb9ff8 <col:9> 'const unsigned char *' lvalue Var 0x2c51aeb98c0 'p' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x2c51aeba098 <col:13, col:14> 'const unsigned char *' <LValueToRValue>
|   |   |   `-UnaryOperator 0x2c51aeba080 <col:13, col:14> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x2c51aeba068 <col:14> 'const unsigned char **' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2c51aeba030 <col:14> 'const unsigned char **' lvalue ParmVar 0x2c51aeb1f48 'in' 'const unsigned char **'
|   |   `-IfStmt 0x2c51aeba4e8 <line:677:9, line:680:9>
|   |     |-UnaryOperator 0x2c51aeba460 <line:677:13, col:14> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x2c51aeba448 <col:14> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2c51aeba428 <col:14> 'int' lvalue Var 0x2c51aeb2420 'ret' 'int'
|   |     `-CompoundStmt 0x2c51aeba4d0 <col:19, line:680:9>
|   |       `-ReturnStmt 0x2c51aeba4c0 <line:679:13, col:20>
|   |         `-IntegerLiteral 0x2c51aeba498 <col:20> 'int' 0
|   |-IfStmt 0x2c51aeba708 <line:684:5, line:687:5>
|   | |-BinaryOperator 0x2c51aeba620 <line:684:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x2c51aeba608 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2c51aeba5a8 <col:9> 'int' lvalue ParmVar 0x2c51aeb20c8 'tag' 'int'
|   | | `-UnaryOperator 0x2c51aeba5f0 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x2c51aeba5c8 <col:17> 'int' 1
|   | `-CompoundStmt 0x2c51aeba6f0 <col:20, line:687:5>
|   |   `-BinaryOperator 0x2c51aeba698 <line:685:9, col:15> 'int' '='
|   |     |-DeclRefExpr 0x2c51aeba640 <col:9> 'int' lvalue ParmVar 0x2c51aeb20c8 'tag' 'int'
|   |     `-ImplicitCastExpr 0x2c51aeba680 <col:15> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x2c51aeba660 <col:15> 'int' lvalue Var 0x2c51aeb24c8 'utype' 'int'
|   |-BinaryOperator 0x2c51aeba7c8 <line:688:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2c51aeba720 <col:5> 'const unsigned char *' lvalue Var 0x2c51aeb98c0 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2c51aeba7b0 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2c51aeba798 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2c51aeba780 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2c51aeba760 <col:10> 'const unsigned char **' lvalue ParmVar 0x2c51aeb1f48 'in' 'const unsigned char **'
|   |-IfStmt 0x2c51aebac80 <line:692:5, line:696:17> has_else
|   | |-UnaryOperator 0x2c51aebaaf8 <line:692:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x2c51aebaae0 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2c51aebaac0 <col:10> 'int' lvalue Var 0x2c51aeb2420 'ret' 'int'
|   | |-CompoundStmt 0x2c51aebab68 <col:15, line:695:5>
|   | | `-ReturnStmt 0x2c51aebab58 <line:694:9, col:16>
|   | |   `-IntegerLiteral 0x2c51aebab30 <col:16> 'int' 0
|   | `-IfStmt 0x2c51aebac68 <line:695:12, line:696:17>
|   |   |-BinaryOperator 0x2c51aebabf8 <line:695:16, col:24> 'int' '=='
|   |   | |-ImplicitCastExpr 0x2c51aebabe0 <col:16> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2c51aebab80 <col:16> 'int' lvalue Var 0x2c51aeb2420 'ret' 'int'
|   |   | `-UnaryOperator 0x2c51aebabc8 <col:23, col:24> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x2c51aebaba0 <col:24> 'int' 1
|   |   `-ReturnStmt 0x2c51aebac58 <line:696:9, col:17>
|   |     `-UnaryOperator 0x2c51aebac40 <col:16, col:17> 'int' prefix '-'
|   |       `-IntegerLiteral 0x2c51aebac18 <col:17> 'int' 1
|   |-BinaryOperator 0x2c51aebacf0 <line:697:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2c51aebaca8 <col:5> 'int' lvalue Var 0x2c51aeb2420 'ret' 'int'
|   | `-IntegerLiteral 0x2c51aebacc8 <col:11> 'int' 0
|   |-IfStmt 0x2c51aeb3cd0 <line:699:5, line:756:5> has_else
|   | |-OpaqueValueExpr 0x2c51aeb3cb8 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x2c51aebb4f8 <line:700:62, line:725:5>
|   | | |-IfStmt 0x2c51aebaeb8 <line:705:9, line:713:9> has_else
|   | | | |-OpaqueValueExpr 0x2c51aebaea0 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x2c51aebadb8 <line:705:36, line:707:9>
|   | | | `-IfStmt 0x2c51aebae88 <line:709:14, line:713:9>
|   | | |   |-UnaryOperator 0x2c51aebae00 <line:709:18, col:19> 'int' prefix '!' cannot overflow
|   | | |   | `-ImplicitCastExpr 0x2c51aebade8 <col:19> 'char' <LValueToRValue>
|   | | |   |   `-DeclRefExpr 0x2c51aebadc8 <col:19> 'char' lvalue Var 0x2c51aeb2608 'cst' 'char'
|   | | |   `-CompoundStmt 0x2c51aebae70 <col:24, line:713:9>
|   | | |     `-ReturnStmt 0x2c51aebae60 <line:712:13, col:20>
|   | | |       `-IntegerLiteral 0x2c51aebae38 <col:20> 'int' 0
|   | | |-BinaryOperator 0x2c51aebaf80 <line:715:9, col:17> 'const unsigned char *' '='
|   | | | |-DeclRefExpr 0x2c51aebaee0 <col:9> 'const unsigned char *' lvalue Var 0x2c51aeb9958 'cont' 'const unsigned char *'
|   | | | `-ImplicitCastExpr 0x2c51aebaf68 <col:16, col:17> 'const unsigned char *' <LValueToRValue>
|   | | |   `-UnaryOperator 0x2c51aebaf50 <col:16, col:17> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x2c51aebaf38 <col:17> 'const unsigned char **' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x2c51aebaf18 <col:17> 'const unsigned char **' lvalue ParmVar 0x2c51aeb1f48 'in' 'const unsigned char **'
|   | | `-IfStmt 0x2c51aebb4d0 <line:717:9, line:724:9> has_else
|   | |   |-ImplicitCastExpr 0x2c51aebafc0 <line:717:13> 'char' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x2c51aebafa0 <col:13> 'char' lvalue Var 0x2c51aeb9750 'inf' 'char'
|   | |   |-CompoundStmt 0x2c51aebb2b0 <col:18, line:721:9>
|   | |   | |-IfStmt 0x2c51aebb198 <line:718:13, line:719:22>
|   | |   | | |-UnaryOperator 0x2c51aebb118 <line:718:17, col:45> 'int' prefix '!' cannot overflow
|   | |   | | | `-CallExpr 0x2c51aebb0b0 <col:18, col:45> 'int'
|   | |   | | |   |-ImplicitCastExpr 0x2c51aebb098 <col:18> 'int (*)(const unsigned char **, long, char)' <FunctionToPointerDecay>
|   | |   | | |   | `-DeclRefExpr 0x2c51aebafd8 <col:18> 'int (const unsigned char **, long, char)' Function 0x2c51aea7530 'asn1_find_end' 'int (const unsigned char **, long, char)'
|   | |   | | |   |-UnaryOperator 0x2c51aebb018 <col:32, col:33> 'const unsigned char **' prefix '&' cannot overflow
|   | |   | | |   | `-DeclRefExpr 0x2c51aebaff8 <col:33> 'const unsigned char *' lvalue Var 0x2c51aeb98c0 'p' 'const unsigned char *'
|   | |   | | |   |-ImplicitCastExpr 0x2c51aebb0e8 <col:36> 'long' <LValueToRValue>
|   | |   | | |   | `-DeclRefExpr 0x2c51aebb030 <col:36> 'long' lvalue Var 0x2c51aeb2578 'plen' 'long'
|   | |   | | |   `-ImplicitCastExpr 0x2c51aebb100 <col:42> 'char' <LValueToRValue>
|   | |   | | |     `-DeclRefExpr 0x2c51aebb050 <col:42> 'char' lvalue Var 0x2c51aeb9750 'inf' 'char'
|   | |   | | `-GotoStmt 0x2c51aebb180 <line:719:17, col:22> 'err' 0x2c51aebb130
|   | |   | `-BinaryOperator 0x2c51aebb290 <line:720:13, col:23> 'long' '='
|   | |   |   |-DeclRefExpr 0x2c51aebb1b0 <col:13> 'long' lvalue Var 0x2c51aeb9a90 'len' 'long'
|   | |   |   `-ImplicitCastExpr 0x2c51aebb278 <col:19, col:23> 'long' <IntegralCast>
|   | |   |     `-BinaryOperator 0x2c51aebb258 <col:19, col:23> 'long long' '-'
|   | |   |       |-ImplicitCastExpr 0x2c51aebb228 <col:19> 'const unsigned char *' <LValueToRValue>
|   | |   |       | `-DeclRefExpr 0x2c51aebb1e8 <col:19> 'const unsigned char *' lvalue Var 0x2c51aeb98c0 'p' 'const unsigned char *'
|   | |   |       `-ImplicitCastExpr 0x2c51aebb240 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |   |         `-DeclRefExpr 0x2c51aebb208 <col:23> 'const unsigned char *' lvalue Var 0x2c51aeb9958 'cont' 'const unsigned char *'
|   | |   `-CompoundStmt 0x2c51aebb4b0 <line:721:16, line:724:9>
|   | |     |-BinaryOperator 0x2c51aebb408 <line:722:13, col:30> 'long' '='
|   | |     | |-DeclRefExpr 0x2c51aebb2d0 <col:13> 'long' lvalue Var 0x2c51aeb9a90 'len' 'long'
|   | |     | `-ImplicitCastExpr 0x2c51aebb3f0 <col:19, col:30> 'long' <IntegralCast>
|   | |     |   `-BinaryOperator 0x2c51aebb3d0 <col:19, col:30> 'long long' '+'
|   | |     |     |-BinaryOperator 0x2c51aebb360 <col:19, col:23> 'long long' '-'
|   | |     |     | |-ImplicitCastExpr 0x2c51aebb330 <col:19> 'const unsigned char *' <LValueToRValue>
|   | |     |     | | `-DeclRefExpr 0x2c51aebb2f0 <col:19> 'const unsigned char *' lvalue Var 0x2c51aeb98c0 'p' 'const unsigned char *'
|   | |     |     | `-ImplicitCastExpr 0x2c51aebb348 <col:23> 'const unsigned char *' <LValueToRValue>
|   | |     |     |   `-DeclRefExpr 0x2c51aebb310 <col:23> 'const unsigned char *' lvalue Var 0x2c51aeb9958 'cont' 'const unsigned char *'
|   | |     |     `-ImplicitCastExpr 0x2c51aebb3b8 <col:30> 'long long' <IntegralCast>
|   | |     |       `-ImplicitCastExpr 0x2c51aebb3a0 <col:30> 'long' <LValueToRValue>
|   | |     |         `-DeclRefExpr 0x2c51aebb380 <col:30> 'long' lvalue Var 0x2c51aeb2578 'plen' 'long'
|   | |     `-CompoundAssignOperator 0x2c51aebb480 <line:723:13, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |       |-DeclRefExpr 0x2c51aebb428 <col:13> 'const unsigned char *' lvalue Var 0x2c51aeb98c0 'p' 'const unsigned char *'
|   | |       `-ImplicitCastExpr 0x2c51aebb468 <col:18> 'long' <LValueToRValue>
|   | |         `-DeclRefExpr 0x2c51aebb448 <col:18> 'long' lvalue Var 0x2c51aeb2578 'plen' 'long'
|   | `-IfStmt 0x2c51aeb3c90 <line:725:12, line:756:5> has_else
|   |   |-ImplicitCastExpr 0x2c51aebb540 <line:725:16> 'char' <LValueToRValue>
|   |   | `-DeclRefExpr 0x2c51aebb520 <col:16> 'char' lvalue Var 0x2c51aeb2608 'cst' 'char'
|   |   |-CompoundStmt 0x2c51aeb3ac0 <col:21, line:752:5>
|   |   | |-IfStmt 0x2c51aebb680 <line:726:9, line:731:9>
|   |   | | |-OpaqueValueExpr 0x2c51aebb668 <<invalid sloc>> '_Bool'
|   |   | | `-CompoundStmt 0x2c51aebb650 <line:728:44, line:731:9>
|   |   | |   `-ReturnStmt 0x2c51aebb640 <line:730:13, col:20>
|   |   | |     `-IntegerLiteral 0x2c51aebb618 <col:20> 'int' 0
|   |   | |-BinaryOperator 0x2c51aebb710 <line:734:9, col:21> 'char' '='
|   |   | | |-DeclRefExpr 0x2c51aebb698 <col:9> 'char' lvalue Var 0x2c51aeb97c8 'free_cont' 'char'
|   |   | | `-ImplicitCastExpr 0x2c51aebb6f8 <col:21> 'char' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x2c51aebb6d0 <col:21> 'int' 1
|   |   | |-IfStmt 0x2c51aeb37f8 <line:741:9, line:743:9>
|   |   | | |-OpaqueValueExpr 0x2c51aeb37e0 <<invalid sloc>> '_Bool'
|   |   | | `-CompoundStmt 0x2c51aeb37c8 <line:741:74, line:743:9>
|   |   | |   `-GotoStmt 0x2c51aeb37b0 <line:742:13, col:18> 'err' 0x2c51aebb130
|   |   | `-IfStmt 0x2c51aeb3a40 <line:746:9, line:749:9>
|   |   |   |-OpaqueValueExpr 0x2c51aeb3a28 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x2c51aeb3a10 <line:746:49, line:749:9>
|   |   |     `-GotoStmt 0x2c51aeb39f8 <line:748:13, col:18> 'err' 0x2c51aebb130
|   |   `-CompoundStmt 0x2c51aeb3c68 <line:752:12, line:756:5>
|   |     |-BinaryOperator 0x2c51aeb3b48 <line:753:9, col:16> 'const unsigned char *' '='
|   |     | |-DeclRefExpr 0x2c51aeb3af0 <col:9> 'const unsigned char *' lvalue Var 0x2c51aeb9958 'cont' 'const unsigned char *'
|   |     | `-ImplicitCastExpr 0x2c51aeb3b30 <col:16> 'const unsigned char *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2c51aeb3b10 <col:16> 'const unsigned char *' lvalue Var 0x2c51aeb98c0 'p' 'const unsigned char *'
|   |     |-BinaryOperator 0x2c51aeb3bc0 <line:754:9, col:15> 'long' '='
|   |     | |-DeclRefExpr 0x2c51aeb3b68 <col:9> 'long' lvalue Var 0x2c51aeb9a90 'len' 'long'
|   |     | `-ImplicitCastExpr 0x2c51aeb3ba8 <col:15> 'long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x2c51aeb3b88 <col:15> 'long' lvalue Var 0x2c51aeb2578 'plen' 'long'
|   |     `-CompoundAssignOperator 0x2c51aeb3c38 <line:755:9, col:14> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |       |-DeclRefExpr 0x2c51aeb3be0 <col:9> 'const unsigned char *' lvalue Var 0x2c51aeb98c0 'p' 'const unsigned char *'
|   |       `-ImplicitCastExpr 0x2c51aeb3c20 <col:14> 'long' <LValueToRValue>
|   |         `-DeclRefExpr 0x2c51aeb3c00 <col:14> 'long' lvalue Var 0x2c51aeb2578 'plen' 'long'
|   |-IfStmt 0x2c51aeb3dc0 <line:760:5, line:761:14>
|   | |-OpaqueValueExpr 0x2c51aeb3da8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x2c51aeb3d90 <col:9, col:14> 'err' 0x2c51aebb130
|   |-BinaryOperator 0x2c51aeb3e60 <line:763:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2c51aeb3e10 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2c51aeb3df8 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2c51aeb3dd8 <col:6> 'const unsigned char **' lvalue ParmVar 0x2c51aeb1f48 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2c51aeb3e48 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2c51aeb3e28 <col:11> 'const unsigned char *' lvalue Var 0x2c51aeb98c0 'p' 'const unsigned char *'
|   |-BinaryOperator 0x2c51aeb3ec8 <line:764:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2c51aeb3e80 <col:5> 'int' lvalue Var 0x2c51aeb2420 'ret' 'int'
|   | `-IntegerLiteral 0x2c51aeb3ea0 <col:11> 'int' 1
|   |-LabelStmt 0x2c51aeb4038 <line:765:2, col:5> 'err'
|   | `-NullStmt 0x2c51aeb4030 <col:5>
|   `-ReturnStmt 0x2c51aeb4088 <line:768:5, col:12>
|     `-ImplicitCastExpr 0x2c51aeb4070 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2c51aeb4050 <col:12> 'int' lvalue Var 0x2c51aeb2420 'ret' 'int'
|-FunctionDecl 0x2c51aeb44a0 <line:773:1, line:907:1> line:773:12 invalid asn1_ex_c2i 'int (int **, const unsigned char *, int, int, char *, const int *)' static
| |-ParmVarDecl 0x2c51aeb4160 <col:24, col:37> col:37 invalid pval 'int **'
| |-ParmVarDecl 0x2c51aeb41e0 <col:43, col:64> col:64 used cont 'const unsigned char *'
| |-ParmVarDecl 0x2c51aeb4260 <col:70, col:74> col:74 used len 'int'
| |-ParmVarDecl 0x2c51aeb42e0 <line:774:24, col:28> col:28 used utype 'int'
| |-ParmVarDecl 0x2c51aeb4360 <col:35, col:41> col:41 used free_cont 'char *'
| |-ParmVarDecl 0x2c51aeb43e0 <col:52, col:69> col:69 invalid it 'const int *'
| `-CompoundStmt 0x2c51aec4310 <line:775:1, line:907:1>
|   |-DeclStmt 0x2c51aebb800 <line:779:5, col:16>
|   | `-VarDecl 0x2c51aebb770 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x2c51aebb7d8 <col:15> 'int' 0
|   |-DeclStmt 0x2c51aebb898 <line:780:5, col:35>
|   | `-VarDecl 0x2c51aebb830 <col:5, col:33> col:33 invalid pf 'const int *'
|   |-IfStmt 0x2c51aebbe88 <line:787:5, line:800:5>
|   | |-OpaqueValueExpr 0x2c51aebbe70 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2c51aebbe58 <line:787:34, line:800:5>
|   |   `-IfStmt 0x2c51aebbc58 <line:788:9, line:794:13> has_else
|   |     |-OpaqueValueExpr 0x2c51aebbc40 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x2c51aebbc20 <line:788:21, line:793:9>
|   |     | `-IfStmt 0x2c51aebbc08 <line:790:13, line:791:22>
|   |     |   |-OpaqueValueExpr 0x2c51aebbbf0 <<invalid sloc>> '_Bool'
|   |     |   `-GotoStmt 0x2c51aebbbd8 <col:17, col:22> 'err' 0x2c51aebbb88
|   |     `-NullStmt 0x2c51aebbc38 <line:794:13>
|   |-SwitchStmt 0x2c51aebbed8 <line:801:5, line:894:5>
|   | |-ImplicitCastExpr 0x2c51aebbec0 <line:801:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x2c51aebbea0 <col:13> 'int' lvalue ParmVar 0x2c51aeb42e0 'utype' 'int'
|   | `-CompoundStmt 0x2c51aec3ef0 <col:20, line:894:5>
|   |   |-IfStmt 0x2c51aebbf80 <line:803:9, line:804:18>
|   |   | |-OpaqueValueExpr 0x2c51aebbf68 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2c51aebbf50 <col:13, col:18> 'err' 0x2c51aebbb88
|   |   |-BreakStmt 0x2c51aebbf98 <line:805:9>
|   |   |-IfStmt 0x2c51aebc028 <line:808:9, line:811:9>
|   |   | |-ImplicitCastExpr 0x2c51aebbfc0 <line:808:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2c51aebbfa0 <col:13> 'int' lvalue ParmVar 0x2c51aeb4260 'len' 'int'
|   |   | `-CompoundStmt 0x2c51aebc010 <col:18, line:811:9>
|   |   |   `-GotoStmt 0x2c51aebbff8 <line:810:13, col:18> 'err' 0x2c51aebbb88
|   |   |-BreakStmt 0x2c51aebc040 <line:813:9>
|   |   |-IfStmt 0x2c51aebc178 <line:816:9, line:823:9> has_else
|   |   | |-BinaryOperator 0x2c51aebc0a8 <line:816:13, col:20> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x2c51aebc090 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x2c51aebc048 <col:13> 'int' lvalue ParmVar 0x2c51aeb4260 'len' 'int'
|   |   | | `-IntegerLiteral 0x2c51aebc068 <col:20> 'int' 1
|   |   | |-CompoundStmt 0x2c51aebc100 <col:23, line:819:9>
|   |   | | `-GotoStmt 0x2c51aebc0e8 <line:818:13, col:18> 'err' 0x2c51aebbb88
|   |   | `-CompoundStmt 0x2c51aebc168 <line:819:16, line:823:9>
|   |   |-BreakStmt 0x2c51aebc1a0 <line:824:9>
|   |   |-IfStmt 0x2c51aebc230 <line:827:9, line:828:18>
|   |   | |-OpaqueValueExpr 0x2c51aebc218 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2c51aebc200 <col:13, col:18> 'err' 0x2c51aebbb88
|   |   |-BreakStmt 0x2c51aebc248 <line:829:9>
|   |   |-IfStmt 0x2c51aebc2d8 <line:834:9, line:835:18>
|   |   | |-OpaqueValueExpr 0x2c51aebc2c0 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x2c51aebc2a8 <col:13, col:18> 'err' 0x2c51aebbb88
|   |   |-BreakStmt 0x2c51aebc310 <line:838:9>
|   |   |-DefaultStmt 0x2c51aebc458 <line:857:5, line:861:9>
|   |   | `-IfStmt 0x2c51aebc440 <line:858:9, line:861:9>
|   |   |   |-OpaqueValueExpr 0x2c51aebc428 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x2c51aebc410 <line:858:53, line:861:9>
|   |   |     `-GotoStmt 0x2c51aebc3f8 <line:860:13, col:18> 'err' 0x2c51aebbb88
|   |   |-IfStmt 0x2c51aebc5a0 <line:862:9, line:866:9>
|   |   | |-OpaqueValueExpr 0x2c51aebc588 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2c51aebc570 <line:862:59, line:866:9>
|   |   |   `-GotoStmt 0x2c51aebc558 <line:865:13, col:18> 'err' 0x2c51aebbb88
|   |   |-IfStmt 0x2c51aec3930 <line:868:9, line:878:9> has_else
|   |   | |-OpaqueValueExpr 0x2c51aec3918 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x2c51aec38d0 <line:868:21, line:875:9>
|   |   | | `-IfStmt 0x2c51aec38b8 <line:870:13, line:873:13>
|   |   | |   |-OpaqueValueExpr 0x2c51aec38a0 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x2c51aec3888 <line:870:31, line:873:13>
|   |   | |     `-GotoStmt 0x2c51aec3870 <line:872:17, col:22> 'err' 0x2c51aebbb88
|   |   | `-CompoundStmt 0x2c51aec3908 <line:875:16, line:878:9>
|   |   |-IfStmt 0x2c51aec3ec0 <line:880:9, line:892:9> has_else
|   |   | |-ImplicitCastExpr 0x2c51aec39a8 <line:880:13, col:14> 'char' <LValueToRValue>
|   |   | | `-UnaryOperator 0x2c51aec3990 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | |   `-ImplicitCastExpr 0x2c51aec3978 <col:14> 'char *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x2c51aec3958 <col:14> 'char *' lvalue ParmVar 0x2c51aeb4360 'free_cont' 'char *'
|   |   | |-CompoundStmt 0x2c51aec3b28 <col:25, line:885:9>
|   |   | | `-BinaryOperator 0x2c51aec3b08 <line:884:13, col:26> 'char' '='
|   |   | |   |-UnaryOperator 0x2c51aec3ab0 <col:13, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | |   | `-ImplicitCastExpr 0x2c51aec3a98 <col:14> 'char *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x2c51aec3a78 <col:14> 'char *' lvalue ParmVar 0x2c51aeb4360 'free_cont' 'char *'
|   |   | |   `-ImplicitCastExpr 0x2c51aec3af0 <col:26> 'char' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x2c51aec3ac8 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x2c51aec3ea8 <line:885:16, line:892:9>
|   |   |   `-IfStmt 0x2c51aec3e90 <line:886:13, line:891:13>
|   |   |     |-OpaqueValueExpr 0x2c51aec3e78 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x2c51aec3e60 <line:886:52, line:891:13>
|   |   |       `-GotoStmt 0x2c51aec3e48 <line:890:17, col:22> 'err' 0x2c51aebbb88
|   |   `-BreakStmt 0x2c51aec3ee8 <line:893:9>
|   |-BinaryOperator 0x2c51aec4080 <line:899:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x2c51aec4020 <col:5> 'int' lvalue Var 0x2c51aebb770 'ret' 'int'
|   | `-IntegerLiteral 0x2c51aec4058 <col:11> 'int' 1
|   |-LabelStmt 0x2c51aec42b0 <line:900:2, line:905:5> 'err'
|   | `-IfStmt 0x2c51aec4298 <line:901:5, line:905:5>
|   |   |-UnaryOperator 0x2c51aec40d8 <line:901:9, col:10> 'int' prefix '!' cannot overflow
|   |   | `-ImplicitCastExpr 0x2c51aec40c0 <col:10> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2c51aec40a0 <col:10> 'int' lvalue Var 0x2c51aebb770 'ret' 'int'
|   |   `-CompoundStmt 0x2c51aec4288 <col:15, line:905:5>
|   `-ReturnStmt 0x2c51aec4300 <line:906:5, col:12>
|     `-ImplicitCastExpr 0x2c51aec42e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x2c51aec42c8 <col:12> 'int' lvalue Var 0x2c51aebb770 'ret' 'int'
|-FunctionDecl 0x2c51aec4560 prev 0x2c51aea7530 <line:916:1, line:965:1> line:916:12 used asn1_find_end 'int (const unsigned char **, long, char)' static
| |-ParmVarDecl 0x2c51aec4378 <col:26, col:48> col:48 used in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aec43f8 <col:52, col:57> col:57 used len 'long'
| |-ParmVarDecl 0x2c51aec4470 <col:62, col:67> col:67 used inf 'char'
| `-CompoundStmt 0x2c51aec3648 <line:917:1, line:965:1>
|   |-DeclStmt 0x2c51aec4698 <line:919:5, col:14>
|   | `-VarDecl 0x2c51aec4630 <col:5, col:10> col:10 used plen 'long'
|   |-DeclStmt 0x2c51aec2860 <line:920:5, col:37>
|   | |-VarDecl 0x2c51aec46c8 <col:5, col:31> col:26 used p 'const unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x2c51aec4780 <col:30, col:31> 'const unsigned char *' <LValueToRValue>
|   | |   `-UnaryOperator 0x2c51aec4768 <col:30, col:31> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | |     `-ImplicitCastExpr 0x2c51aec4750 <col:31> 'const unsigned char **' <LValueToRValue>
|   | |       `-DeclRefExpr 0x2c51aec4730 <col:31> 'const unsigned char **' lvalue ParmVar 0x2c51aec4378 'in' 'const unsigned char **'
|   | `-VarDecl 0x2c51aec27e0 <col:5, col:36> col:36 used q 'const unsigned char *'
|   |-IfStmt 0x2c51aec2a20 <line:922:5, line:925:5>
|   | |-BinaryOperator 0x2c51aec28f0 <line:922:9, col:16> 'int' '=='
|   | | |-ImplicitCastExpr 0x2c51aec28d8 <col:9> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x2c51aec28c0 <col:9> 'char' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x2c51aec2878 <col:9> 'char' lvalue ParmVar 0x2c51aec4470 'inf' 'char'
|   | | `-IntegerLiteral 0x2c51aec2898 <col:16> 'int' 0
|   | `-CompoundStmt 0x2c51aec2a00 <col:19, line:925:5>
|   |   |-CompoundAssignOperator 0x2c51aec2998 <line:923:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-UnaryOperator 0x2c51aec2948 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x2c51aec2930 <col:10> 'const unsigned char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2c51aec2910 <col:10> 'const unsigned char **' lvalue ParmVar 0x2c51aec4378 'in' 'const unsigned char **'
|   |   | `-ImplicitCastExpr 0x2c51aec2980 <col:16> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2c51aec2960 <col:16> 'long' lvalue ParmVar 0x2c51aec43f8 'len' 'long'
|   |   `-ReturnStmt 0x2c51aec29f0 <line:924:9, col:16>
|   |     `-IntegerLiteral 0x2c51aec29c8 <col:16> 'int' 1
|   |-WhileStmt 0x2c51aec34b0 <line:933:5, line:958:5>
|   | |-BinaryOperator 0x2c51aec2ad8 <line:933:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x2c51aec2aa8 <col:12> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2c51aec2a60 <col:12> 'long' lvalue ParmVar 0x2c51aec43f8 'len' 'long'
|   | | `-ImplicitCastExpr 0x2c51aec2ac0 <col:18> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2c51aec2a80 <col:18> 'int' 0
|   | `-CompoundStmt 0x2c51aec3478 <col:21, line:958:5>
|   |   |-IfStmt 0x2c51aec2d08 <line:934:9, line:940:9>
|   |   | |-CallExpr 0x2c51aec2ba0 <line:934:13, col:35> 'int'
|   |   | | |-ImplicitCastExpr 0x2c51aec2b88 <col:13> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x2c51aec2af8 <col:13> 'int (const unsigned char **, long)' Function 0x2c51aea7220 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   |   | | |-UnaryOperator 0x2c51aec2b50 <col:28, col:29> 'const unsigned char **' prefix '&' cannot overflow
|   |   | | | `-DeclRefExpr 0x2c51aec2b18 <col:29> 'const unsigned char *' lvalue Var 0x2c51aec46c8 'p' 'const unsigned char *'
|   |   | | `-ImplicitCastExpr 0x2c51aec2bd0 <col:32> 'long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2c51aec2b68 <col:32> 'long' lvalue ParmVar 0x2c51aec43f8 'len' 'long'
|   |   | `-CompoundStmt 0x2c51aec2ce0 <col:38, line:940:9>
|   |   |   |-IfStmt 0x2c51aec2c30 <line:936:13, line:937:17>
|   |   |   | |-OpaqueValueExpr 0x2c51aec2c18 <<invalid sloc>> '_Bool'
|   |   |   | `-BreakStmt 0x2c51aec2c10 <col:17>
|   |   |   |-CompoundAssignOperator 0x2c51aec2ca8 <line:938:13, col:20> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
|   |   |   | |-DeclRefExpr 0x2c51aec2c48 <col:13> 'long' lvalue ParmVar 0x2c51aec43f8 'len' 'long'
|   |   |   | `-ImplicitCastExpr 0x2c51aec2c90 <col:20> 'long' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x2c51aec2c68 <col:20> 'int' 2
|   |   |   `-ContinueStmt 0x2c51aec2cd8 <line:939:13>
|   |   |-BinaryOperator 0x2c51aec2d90 <line:941:9, col:13> 'const unsigned char *' '='
|   |   | |-DeclRefExpr 0x2c51aec2d20 <col:9> 'const unsigned char *' lvalue Var 0x2c51aec27e0 'q' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x2c51aec2d78 <col:13> 'const unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2c51aec2d58 <col:13> 'const unsigned char *' lvalue Var 0x2c51aec46c8 'p' 'const unsigned char *'
|   |   |-IfStmt 0x2c51aec31c8 <line:943:9, line:947:9>
|   |   | |-OpaqueValueExpr 0x2c51aec31b0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2c51aec3198 <line:944:47, line:947:9>
|   |   |   `-ReturnStmt 0x2c51aec3188 <line:946:13, col:20>
|   |   |     `-IntegerLiteral 0x2c51aec3160 <col:20> 'int' 0
|   |   |-IfStmt 0x2c51aec3370 <line:948:9, line:956:9> has_else
|   |   | |-ImplicitCastExpr 0x2c51aec3200 <line:948:13> 'char' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2c51aec31e0 <col:13> 'char' lvalue ParmVar 0x2c51aec4470 'inf' 'char'
|   |   | |-CompoundStmt 0x2c51aec32b8 <col:18, line:954:9>
|   |   | | `-IfStmt 0x2c51aec32a0 <line:949:13, line:952:13>
|   |   | |   |-OpaqueValueExpr 0x2c51aec3288 <<invalid sloc>> '_Bool'
|   |   | |   `-CompoundStmt 0x2c51aec3270 <line:949:45, line:952:13>
|   |   | |     `-ReturnStmt 0x2c51aec3260 <line:951:17, col:24>
|   |   | |       `-IntegerLiteral 0x2c51aec3238 <col:24> 'int' 0
|   |   | `-CompoundStmt 0x2c51aec3358 <line:954:16, line:956:9>
|   |   |   `-CompoundAssignOperator 0x2c51aec3328 <line:955:13, col:18> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   |     |-DeclRefExpr 0x2c51aec32d0 <col:13> 'const unsigned char *' lvalue Var 0x2c51aec46c8 'p' 'const unsigned char *'
|   |   |     `-ImplicitCastExpr 0x2c51aec3310 <col:18> 'long' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x2c51aec32f0 <col:18> 'long' lvalue Var 0x2c51aec4630 'plen' 'long'
|   |   `-CompoundAssignOperator 0x2c51aec3448 <line:957:9, col:20> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   |     |-DeclRefExpr 0x2c51aec3398 <col:9> 'long' lvalue ParmVar 0x2c51aec43f8 'len' 'long'
|   |     `-BinaryOperator 0x2c51aec3428 <col:16, col:20> 'long long' '-'
|   |       |-ImplicitCastExpr 0x2c51aec33f8 <col:16> 'const unsigned char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2c51aec33b8 <col:16> 'const unsigned char *' lvalue Var 0x2c51aec46c8 'p' 'const unsigned char *'
|   |       `-ImplicitCastExpr 0x2c51aec3410 <col:20> 'const unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2c51aec33d8 <col:20> 'const unsigned char *' lvalue Var 0x2c51aec27e0 'q' 'const unsigned char *'
|   |-IfStmt 0x2c51aec3550 <line:959:5, line:962:5>
|   | |-OpaqueValueExpr 0x2c51aec3538 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2c51aec3520 <line:959:23, line:962:5>
|   |   `-ReturnStmt 0x2c51aec3510 <line:961:9, col:16>
|   |     `-IntegerLiteral 0x2c51aec34e8 <col:16> 'int' 0
|   |-BinaryOperator 0x2c51aec35f0 <line:963:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2c51aec35a0 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2c51aec3588 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2c51aec3568 <col:6> 'const unsigned char **' lvalue ParmVar 0x2c51aec4378 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2c51aec35d8 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2c51aec35b8 <col:11> 'const unsigned char *' lvalue Var 0x2c51aec46c8 'p' 'const unsigned char *'
|   `-ReturnStmt 0x2c51aec3638 <line:964:5, col:12>
|     `-IntegerLiteral 0x2c51aec3610 <col:12> 'int' 1
|-FunctionDecl 0x2c51aebca40 <line:983:1, line:1038:1> line:983:12 invalid asn1_collect 'int (int *, const unsigned char **, long, char, int, int, int)' static
| |-ParmVarDecl 0x2c51aec36a8 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x2c51aec3730 <col:39, col:61> col:61 used in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aebc780 <col:65, col:70> col:70 used len 'long'
| |-ParmVarDecl 0x2c51aebc7f8 <line:984:25, col:30> col:30 used inf 'char'
| |-ParmVarDecl 0x2c51aebc878 <col:35, col:39> col:39 used tag 'int'
| |-ParmVarDecl 0x2c51aebc8f8 <col:44, col:48> col:48 used aclass 'int'
| |-ParmVarDecl 0x2c51aebc978 <col:56, col:60> col:60 used depth 'int'
| `-CompoundStmt 0x2c51aebeff8 <line:985:1, line:1038:1>
|   |-DeclStmt 0x2c51aebcc48 <line:986:5, col:31>
|   | |-VarDecl 0x2c51aebcb48 <col:5, col:26> col:26 used p 'const unsigned char *'
|   | `-VarDecl 0x2c51aebcbc8 <col:5, col:30> col:30 used q 'const unsigned char *'
|   |-DeclStmt 0x2c51aebcce0 <line:987:5, col:14>
|   | `-VarDecl 0x2c51aebcc78 <col:5, col:10> col:10 used plen 'long'
|   |-DeclStmt 0x2c51aebce00 <line:988:5, col:20>
|   | |-VarDecl 0x2c51aebcd08 <col:5, col:10> col:10 used cst 'char'
|   | `-VarDecl 0x2c51aebcd80 <col:5, col:15> col:15 used ininf 'char'
|   |-BinaryOperator 0x2c51aebced0 <line:989:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2c51aebce18 <col:5> 'const unsigned char *' lvalue Var 0x2c51aebcb48 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2c51aebceb8 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2c51aebcea0 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2c51aebce88 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2c51aebce50 <col:10> 'const unsigned char **' lvalue ParmVar 0x2c51aec3730 'in' 'const unsigned char **'
|   |-CompoundAssignOperator 0x2c51aebcf50 <line:990:5, col:12> 'char' '&=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-DeclRefExpr 0x2c51aebcef0 <col:5> 'char' lvalue ParmVar 0x2c51aebc7f8 'inf' 'char'
|   | `-IntegerLiteral 0x2c51aebcf28 <col:12> 'int' 1
|   |-IfStmt 0x2c51aebd110 <line:995:5, line:998:5>
|   | |-OpaqueValueExpr 0x2c51aebd0f8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2c51aebd0d8 <line:995:23, line:998:5>
|   |   |-CompoundAssignOperator 0x2c51aebd070 <line:996:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-UnaryOperator 0x2c51aebd008 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x2c51aebcff0 <col:10> 'const unsigned char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2c51aebcfd0 <col:10> 'const unsigned char **' lvalue ParmVar 0x2c51aec3730 'in' 'const unsigned char **'
|   |   | `-ImplicitCastExpr 0x2c51aebd058 <col:16> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2c51aebd020 <col:16> 'long' lvalue ParmVar 0x2c51aebc780 'len' 'long'
|   |   `-ReturnStmt 0x2c51aebd0c8 <line:997:9, col:16>
|   |     `-IntegerLiteral 0x2c51aebd0a0 <col:16> 'int' 1
|   |-WhileStmt 0x2c51aebee40 <line:999:5, line:1031:5>
|   | |-BinaryOperator 0x2c51aebd1a0 <line:999:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x2c51aebd170 <col:12> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2c51aebd128 <col:12> 'long' lvalue ParmVar 0x2c51aebc780 'len' 'long'
|   | | `-ImplicitCastExpr 0x2c51aebd188 <col:18> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2c51aebd148 <col:18> 'int' 0
|   | `-CompoundStmt 0x2c51aebee08 <col:21, line:1031:5>
|   |   |-BinaryOperator 0x2c51aebd230 <line:1000:9, col:13> 'const unsigned char *' '='
|   |   | |-DeclRefExpr 0x2c51aebd1c0 <col:9> 'const unsigned char *' lvalue Var 0x2c51aebcbc8 'q' 'const unsigned char *'
|   |   | `-ImplicitCastExpr 0x2c51aebd218 <col:13> 'const unsigned char *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x2c51aebd1f8 <col:13> 'const unsigned char *' lvalue Var 0x2c51aebcb48 'p' 'const unsigned char *'
|   |   |-IfStmt 0x2c51aebd4b0 <line:1002:9, line:1012:9>
|   |   | |-CallExpr 0x2c51aebd2e0 <line:1002:13, col:35> 'int'
|   |   | | |-ImplicitCastExpr 0x2c51aebd2c8 <col:13> 'int (*)(const unsigned char **, long)' <FunctionToPointerDecay>
|   |   | | | `-DeclRefExpr 0x2c51aebd250 <col:13> 'int (const unsigned char **, long)' Function 0x2c51aea7220 'asn1_check_eoc' 'int (const unsigned char **, long)'
|   |   | | |-UnaryOperator 0x2c51aebd290 <col:28, col:29> 'const unsigned char **' prefix '&' cannot overflow
|   |   | | | `-DeclRefExpr 0x2c51aebd270 <col:29> 'const unsigned char *' lvalue Var 0x2c51aebcb48 'p' 'const unsigned char *'
|   |   | | `-ImplicitCastExpr 0x2c51aebd310 <col:32> 'long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2c51aebd2a8 <col:32> 'long' lvalue ParmVar 0x2c51aebc780 'len' 'long'
|   |   | `-CompoundStmt 0x2c51aebd488 <col:38, line:1012:9>
|   |   |   |-IfStmt 0x2c51aebd3e8 <line:1006:13, line:1009:13>
|   |   |   | |-UnaryOperator 0x2c51aebd360 <line:1006:17, col:18> 'int' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x2c51aebd348 <col:18> 'char' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x2c51aebd328 <col:18> 'char' lvalue ParmVar 0x2c51aebc7f8 'inf' 'char'
|   |   |   | `-CompoundStmt 0x2c51aebd3d0 <col:23, line:1009:13>
|   |   |   |   `-ReturnStmt 0x2c51aebd3c0 <line:1008:17, col:24>
|   |   |   |     `-IntegerLiteral 0x2c51aebd398 <col:24> 'int' 0
|   |   |   |-BinaryOperator 0x2c51aebd460 <line:1010:13, col:19> 'char' '='
|   |   |   | |-DeclRefExpr 0x2c51aebd400 <col:13> 'char' lvalue ParmVar 0x2c51aebc7f8 'inf' 'char'
|   |   |   | `-ImplicitCastExpr 0x2c51aebd448 <col:19> 'char' <IntegralCast>
|   |   |   |   `-IntegerLiteral 0x2c51aebd420 <col:19> 'int' 0
|   |   |   `-BreakStmt 0x2c51aebd480 <line:1011:13>
|   |   |-IfStmt 0x2c51aebe8f0 <line:1014:9, line:1018:9>
|   |   | |-OpaqueValueExpr 0x2c51aebe8d8 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x2c51aebe8c0 <line:1015:58, line:1018:9>
|   |   |   `-ReturnStmt 0x2c51aebe8b0 <line:1017:13, col:20>
|   |   |     `-IntegerLiteral 0x2c51aebe888 <col:20> 'int' 0
|   |   |-IfStmt 0x2c51aebed00 <line:1021:9, line:1029:20> has_else
|   |   | |-ImplicitCastExpr 0x2c51aebe928 <line:1021:13> 'char' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x2c51aebe908 <col:13> 'char' lvalue Var 0x2c51aebcd08 'cst' 'char'
|   |   | |-CompoundStmt 0x2c51aebec00 <col:18, line:1028:9>
|   |   | | |-IfStmt 0x2c51aebea48 <line:1022:13, line:1025:13>
|   |   | | | |-BinaryOperator 0x2c51aebe9b8 <line:1022:17, line:980:31> 'int' '>='
|   |   | | | | |-ImplicitCastExpr 0x2c51aebe9a0 <line:1022:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x2c51aebe940 <col:17> 'int' lvalue ParmVar 0x2c51aebc978 'depth' 'int'
|   |   | | | | `-IntegerLiteral 0x2c51aebe978 <line:980:31> 'int' 5
|   |   | | | `-CompoundStmt 0x2c51aebea30 <line:1022:48, line:1025:13>
|   |   | | |   `-ReturnStmt 0x2c51aebea20 <line:1024:17, col:24>
|   |   | | |     `-IntegerLiteral 0x2c51aebe9f8 <col:24> 'int' 0
|   |   | | `-IfStmt 0x2c51aebebe8 <line:1026:13, line:1027:24>
|   |   | |   |-OpaqueValueExpr 0x2c51aebebd0 <<invalid sloc>> '_Bool'
|   |   | |   `-ReturnStmt 0x2c51aebebc0 <col:17, col:24>
|   |   | |     `-IntegerLiteral 0x2c51aebeb98 <col:24> 'int' 0
|   |   | `-IfStmt 0x2c51aebece8 <line:1028:16, line:1029:20>
|   |   |   |-OpaqueValueExpr 0x2c51aebecd0 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x2c51aebecc0 <col:13, col:20>
|   |   |     `-IntegerLiteral 0x2c51aebec98 <col:20> 'int' 0
|   |   `-CompoundAssignOperator 0x2c51aebedd8 <line:1030:9, col:20> 'long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   |     |-DeclRefExpr 0x2c51aebed28 <col:9> 'long' lvalue ParmVar 0x2c51aebc780 'len' 'long'
|   |     `-BinaryOperator 0x2c51aebedb8 <col:16, col:20> 'long long' '-'
|   |       |-ImplicitCastExpr 0x2c51aebed88 <col:16> 'const unsigned char *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x2c51aebed48 <col:16> 'const unsigned char *' lvalue Var 0x2c51aebcb48 'p' 'const unsigned char *'
|   |       `-ImplicitCastExpr 0x2c51aebeda0 <col:20> 'const unsigned char *' <LValueToRValue>
|   |         `-DeclRefExpr 0x2c51aebed68 <col:20> 'const unsigned char *' lvalue Var 0x2c51aebcbc8 'q' 'const unsigned char *'
|   |-IfStmt 0x2c51aebef00 <line:1032:5, line:1035:5>
|   | |-ImplicitCastExpr 0x2c51aebee78 <line:1032:9> 'char' <LValueToRValue>
|   | | `-DeclRefExpr 0x2c51aebee58 <col:9> 'char' lvalue ParmVar 0x2c51aebc7f8 'inf' 'char'
|   | `-CompoundStmt 0x2c51aebeee8 <col:14, line:1035:5>
|   |   `-ReturnStmt 0x2c51aebeed8 <line:1034:9, col:16>
|   |     `-IntegerLiteral 0x2c51aebeeb0 <col:16> 'int' 0
|   |-BinaryOperator 0x2c51aebefa0 <line:1036:5, col:11> 'const unsigned char *' '='
|   | |-UnaryOperator 0x2c51aebef50 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2c51aebef38 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2c51aebef18 <col:6> 'const unsigned char **' lvalue ParmVar 0x2c51aec3730 'in' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2c51aebef88 <col:11> 'const unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x2c51aebef68 <col:11> 'const unsigned char *' lvalue Var 0x2c51aebcb48 'p' 'const unsigned char *'
|   `-ReturnStmt 0x2c51aebefe8 <line:1037:5, col:12>
|     `-IntegerLiteral 0x2c51aebefc0 <col:12> 'int' 1
|-FunctionDecl 0x2c51aebf220 <line:1040:1, line:1053:1> line:1040:12 invalid collect_data 'int (int *, const unsigned char **, long)' static
| |-ParmVarDecl 0x2c51aebf070 <col:25, col:34> col:34 invalid buf 'int *'
| |-ParmVarDecl 0x2c51aebf0f8 <col:39, col:61> col:61 used p 'const unsigned char **'
| |-ParmVarDecl 0x2c51aebf178 <col:64, col:69> col:69 used plen 'long'
| `-CompoundStmt 0x2c51aebf740 <line:1041:1, line:1053:1>
|   |-DeclStmt 0x2c51aebf370 <line:1042:5, col:12>
|   | `-VarDecl 0x2c51aebf308 <col:5, col:9> col:9 used len 'int'
|   |-IfStmt 0x2c51aebf638 <line:1043:5, line:1050:5>
|   | |-OpaqueValueExpr 0x2c51aebf620 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x2c51aebf608 <line:1043:14, line:1050:5>
|   |   `-IfStmt 0x2c51aebf528 <line:1045:9, line:1048:9>
|   |     |-OpaqueValueExpr 0x2c51aebf510 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x2c51aebf4f8 <line:1045:51, line:1048:9>
|   |       `-ReturnStmt 0x2c51aebf4e8 <line:1047:13, col:20>
|   |         `-IntegerLiteral 0x2c51aebf4c0 <col:20> 'int' 0
|   |-CompoundAssignOperator 0x2c51aebf6d8 <line:1051:5, col:11> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   | |-UnaryOperator 0x2c51aebf688 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x2c51aebf670 <col:6> 'const unsigned char **' <LValueToRValue>
|   | |   `-DeclRefExpr 0x2c51aebf650 <col:6> 'const unsigned char **' lvalue ParmVar 0x2c51aebf0f8 'p' 'const unsigned char **'
|   | `-ImplicitCastExpr 0x2c51aebf6c0 <col:11> 'long' <LValueToRValue>
|   |   `-DeclRefExpr 0x2c51aebf6a0 <col:11> 'long' lvalue ParmVar 0x2c51aebf178 'plen' 'long'
|   `-ReturnStmt 0x2c51aebf730 <line:1052:5, col:12>
|     `-IntegerLiteral 0x2c51aebf708 <col:12> 'int' 1
|-FunctionDecl 0x2c51aec0910 prev 0x2c51aea7220 <line:1057:1, line:1068:1> line:1057:12 used asn1_check_eoc 'int (const unsigned char **, long)' static
| |-ParmVarDecl 0x2c51aec07c0 <col:27, col:49> col:49 used in 'const unsigned char **'
| |-ParmVarDecl 0x2c51aec0840 <col:53, col:58> col:58 used len 'long'
| `-CompoundStmt 0x2c51aec0ed0 <line:1058:1, line:1068:1>
|   |-DeclStmt 0x2c51aec0a40 <line:1059:5, col:27>
|   | `-VarDecl 0x2c51aec09d8 <col:5, col:26> col:26 used p 'const unsigned char *'
|   |-IfStmt 0x2c51aec0b28 <line:1060:5, line:1061:16>
|   | |-BinaryOperator 0x2c51aec0ad0 <line:1060:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x2c51aec0aa0 <col:9> 'long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x2c51aec0a58 <col:9> 'long' lvalue ParmVar 0x2c51aec0840 'len' 'long'
|   | | `-ImplicitCastExpr 0x2c51aec0ab8 <col:15> 'long' <IntegralCast>
|   | |   `-IntegerLiteral 0x2c51aec0a78 <col:15> 'int' 2
|   | `-ReturnStmt 0x2c51aec0b18 <line:1061:9, col:16>
|   |   `-IntegerLiteral 0x2c51aec0af0 <col:16> 'int' 0
|   |-BinaryOperator 0x2c51aec0be0 <line:1062:5, col:10> 'const unsigned char *' '='
|   | |-DeclRefExpr 0x2c51aec0b40 <col:5> 'const unsigned char *' lvalue Var 0x2c51aec09d8 'p' 'const unsigned char *'
|   | `-ImplicitCastExpr 0x2c51aec0bc8 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
|   |   `-UnaryOperator 0x2c51aec0bb0 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |     `-ImplicitCastExpr 0x2c51aec0b98 <col:10> 'const unsigned char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x2c51aec0b78 <col:10> 'const unsigned char **' lvalue ParmVar 0x2c51aec07c0 'in' 'const unsigned char **'
|   |-IfStmt 0x2c51aec0e80 <line:1063:5, line:1066:5>
|   | |-BinaryOperator 0x2c51aec0d60 <line:1063:9, col:22> 'int' '&&'
|   | | |-UnaryOperator 0x2c51aec0c98 <col:9, col:13> 'int' prefix '!' cannot overflow
|   | | | `-ImplicitCastExpr 0x2c51aec0c80 <col:10, col:13> 'unsigned char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x2c51aec0c60 <col:10, col:13> 'const unsigned char' lvalue
|   | | |     |-ImplicitCastExpr 0x2c51aec0c48 <col:10> 'const unsigned char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x2c51aec0c00 <col:10> 'const unsigned char *' lvalue Var 0x2c51aec09d8 'p' 'const unsigned char *'
|   | | |     `-IntegerLiteral 0x2c51aec0c20 <col:12> 'int' 0
|   | | `-UnaryOperator 0x2c51aec0d48 <col:18, col:22> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x2c51aec0d30 <col:19, col:22> 'unsigned char' <LValueToRValue>
|   | |     `-ArraySubscriptExpr 0x2c51aec0d10 <col:19, col:22> 'const unsigned char' lvalue
|   | |       |-ImplicitCastExpr 0x2c51aec0cf8 <col:19> 'const unsigned char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x2c51aec0cb0 <col:19> 'const unsigned char *' lvalue Var 0x2c51aec09d8 'p' 'const unsigned char *'
|   | |       `-IntegerLiteral 0x2c51aec0cd0 <col:21> 'int' 1
|   | `-CompoundStmt 0x2c51aec0e60 <col:25, line:1066:5>
|   |   |-CompoundAssignOperator 0x2c51aec0df8 <line:1064:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
|   |   | |-UnaryOperator 0x2c51aec0db8 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
|   |   | | `-ImplicitCastExpr 0x2c51aec0da0 <col:10> 'const unsigned char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x2c51aec0d80 <col:10> 'const unsigned char **' lvalue ParmVar 0x2c51aec07c0 'in' 'const unsigned char **'
|   |   | `-IntegerLiteral 0x2c51aec0dd0 <col:16> 'int' 2
|   |   `-ReturnStmt 0x2c51aec0e50 <line:1065:9, col:16>
|   |     `-IntegerLiteral 0x2c51aec0e28 <col:16> 'int' 1
|   `-ReturnStmt 0x2c51aec0ec0 <line:1067:5, col:12>
|     `-IntegerLiteral 0x2c51aec0e98 <col:12> 'int' 0
`-FunctionDecl 0x2c51aec1508 <line:1077:1, line:1159:1> line:1077:12 invalid asn1_check_tlen 'int (long *, int *, unsigned char *, char *, char *, const unsigned char **, long, int, int, char, int *)' static
  |-ParmVarDecl 0x2c51aec0f20 <col:28, col:34> col:34 used olen 'long *'
  |-ParmVarDecl 0x2c51aec0fa0 <col:40, col:45> col:45 used otag 'int *'
  |-ParmVarDecl 0x2c51aec1020 <col:51, col:66> col:66 used oclass 'unsigned char *'
  |-ParmVarDecl 0x2c51aec10a0 <line:1078:28, col:34> col:34 used inf 'char *'
  |-ParmVarDecl 0x2c51aec1120 <col:39, col:45> col:45 used cst 'char *'
  |-ParmVarDecl 0x2c51aec11a8 <line:1079:28, col:50> col:50 used in 'const unsigned char **'
  |-ParmVarDecl 0x2c51aec1228 <col:54, col:59> col:59 used len 'long'
  |-ParmVarDecl 0x2c51aec12a8 <line:1080:28, col:32> col:32 used exptag 'int'
  |-ParmVarDecl 0x2c51aec1328 <col:40, col:44> col:44 used expclass 'int'
  |-ParmVarDecl 0x2c51aec13a0 <col:54, col:59> col:59 used opt 'char'
  |-ParmVarDecl 0x2c51aec1420 <col:64, col:74> col:74 invalid ctx 'int *'
  `-CompoundStmt 0x2c51aec0030 <line:1081:1, line:1159:1>
    |-DeclStmt 0x2c51aec1698 <line:1082:5, col:10>
    | `-VarDecl 0x2c51aec1630 <col:5, col:9> col:9 used i 'int'
    |-DeclStmt 0x2c51aebd7a8 <line:1083:5, col:21>
    | |-VarDecl 0x2c51aec16c8 <col:5, col:9> col:9 used ptag 'int'
    | `-VarDecl 0x2c51aec1748 <col:5, col:15> col:15 used pclass 'int'
    |-DeclStmt 0x2c51aebd840 <line:1084:5, col:14>
    | `-VarDecl 0x2c51aebd7d8 <col:5, col:10> col:10 used plen 'long'
    |-DeclStmt 0x2c51aebd970 <line:1085:5, col:31>
    | |-VarDecl 0x2c51aebd870 <col:5, col:26> col:26 used p 'const unsigned char *'
    | `-VarDecl 0x2c51aebd8f0 <col:5, col:30> col:30 used q 'const unsigned char *'
    |-BinaryOperator 0x2c51aebda40 <line:1086:5, col:10> 'const unsigned char *' '='
    | |-DeclRefExpr 0x2c51aebd988 <col:5> 'const unsigned char *' lvalue Var 0x2c51aebd870 'p' 'const unsigned char *'
    | `-ImplicitCastExpr 0x2c51aebda28 <col:9, col:10> 'const unsigned char *' <LValueToRValue>
    |   `-UnaryOperator 0x2c51aebda10 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow
    |     `-ImplicitCastExpr 0x2c51aebd9f8 <col:10> 'const unsigned char **' <LValueToRValue>
    |       `-DeclRefExpr 0x2c51aebd9c0 <col:10> 'const unsigned char **' lvalue ParmVar 0x2c51aec11a8 'in' 'const unsigned char **'
    |-BinaryOperator 0x2c51aebdad0 <line:1087:5, col:9> 'const unsigned char *' '='
    | |-DeclRefExpr 0x2c51aebda60 <col:5> 'const unsigned char *' lvalue Var 0x2c51aebd8f0 'q' 'const unsigned char *'
    | `-ImplicitCastExpr 0x2c51aebdab8 <col:9> 'const unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x2c51aebda98 <col:9> 'const unsigned char *' lvalue Var 0x2c51aebd870 'p' 'const unsigned char *'
    |-IfStmt 0x2c51aebe258 <line:1089:5, line:1114:5> has_else
    | |-OpaqueValueExpr 0x2c51aebe240 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x2c51aebdbf0 <line:1089:28, line:1095:5>
    | `-CompoundStmt 0x2c51aebe220 <col:12, line:1114:5>
    |   |-BinaryOperator 0x2c51aebdec0 <line:1096:9, col:59> 'int' '='
    |   | |-DeclRefExpr 0x2c51aebdc00 <col:9> 'int' lvalue Var 0x2c51aec1630 'i' 'int'
    |   | `-CallExpr 0x2c51aebde60 <col:13, col:59> 'int'
    |   |   |-ImplicitCastExpr 0x2c51aebde48 <col:13> 'int (*)()' <FunctionToPointerDecay>
    |   |   | `-DeclRefExpr 0x2c51aebdd10 <col:13> 'int ()' Function 0x2c51aebdc48 'ASN1_get_object' 'int ()'
    |   |   |-UnaryOperator 0x2c51aebdd50 <col:29, col:30> 'const unsigned char **' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x2c51aebdd30 <col:30> 'const unsigned char *' lvalue Var 0x2c51aebd870 'p' 'const unsigned char *'
    |   |   |-UnaryOperator 0x2c51aebdd88 <col:33, col:34> 'long *' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x2c51aebdd68 <col:34> 'long' lvalue Var 0x2c51aebd7d8 'plen' 'long'
    |   |   |-UnaryOperator 0x2c51aebddc0 <col:40, col:41> 'int *' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x2c51aebdda0 <col:41> 'int' lvalue Var 0x2c51aec16c8 'ptag' 'int'
    |   |   |-UnaryOperator 0x2c51aebddf8 <col:47, col:48> 'int *' prefix '&' cannot overflow
    |   |   | `-DeclRefExpr 0x2c51aebddd8 <col:48> 'int' lvalue Var 0x2c51aec1748 'pclass' 'int'
    |   |   `-ImplicitCastExpr 0x2c51aebdea8 <col:56> 'long' <LValueToRValue>
    |   |     `-DeclRefExpr 0x2c51aebde10 <col:56> 'long' lvalue ParmVar 0x2c51aec1228 'len' 'long'
    |   `-IfStmt 0x2c51aebe208 <line:1097:9, line:1113:9>
    |     |-OpaqueValueExpr 0x2c51aebe1f0 <<invalid sloc>> '_Bool'
    |     `-CompoundStmt 0x2c51aebe1d8 <line:1097:18, line:1113:9>
    |       `-IfStmt 0x2c51aebe1c0 <line:1108:13, line:1112:13>
    |         |-OpaqueValueExpr 0x2c51aebe1a8 <<invalid sloc>> '_Bool'
    |         `-CompoundStmt 0x2c51aebe190 <line:1108:62, line:1112:13>
    |           `-ReturnStmt 0x2c51aebe180 <line:1111:17, col:24>
    |             `-IntegerLiteral 0x2c51aebe158 <col:24> 'int' 0
    |-IfStmt 0x2c51aebe398 <line:1116:5, line:1120:5>
    | |-BinaryOperator 0x2c51aebe2e0 <line:1116:9, col:13> 'int' '&'
    | | |-ImplicitCastExpr 0x2c51aebe2c8 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2c51aebe280 <col:9> 'int' lvalue Var 0x2c51aec1630 'i' 'int'
    | | `-IntegerLiteral 0x2c51aebe2a0 <col:13> 'int' 128
    | `-CompoundStmt 0x2c51aebe380 <col:19, line:1120:5>
    |   `-ReturnStmt 0x2c51aebe370 <line:1119:9, col:16>
    |     `-IntegerLiteral 0x2c51aebe348 <col:16> 'int' 0
    |-IfStmt 0x2c51aebf7b0 <line:1121:5, line:1137:5>
    | |-BinaryOperator 0x2c51aebe428 <line:1121:9, col:19> 'int' '>='
    | | |-ImplicitCastExpr 0x2c51aebe410 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2c51aebe3b0 <col:9> 'int' lvalue ParmVar 0x2c51aec12a8 'exptag' 'int'
    | | `-IntegerLiteral 0x2c51aebe3e8 <col:19> 'int' 0
    | `-CompoundStmt 0x2c51aebe778 <col:22, line:1137:5>
    |   `-IfStmt 0x2c51aebe738 <line:1122:9, line:1131:9>
    |     |-BinaryOperator 0x2c51aebe5c0 <line:1122:13, col:52> 'int' '||'
    |     | |-ParenExpr 0x2c51aebe4d8 <col:13, col:28> 'int'
    |     | | `-BinaryOperator 0x2c51aebe4b8 <col:14, col:24> 'int' '!='
    |     | |   |-ImplicitCastExpr 0x2c51aebe488 <col:14> 'int' <LValueToRValue>
    |     | |   | `-DeclRefExpr 0x2c51aebe448 <col:14> 'int' lvalue ParmVar 0x2c51aec12a8 'exptag' 'int'
    |     | |   `-ImplicitCastExpr 0x2c51aebe4a0 <col:24> 'int' <LValueToRValue>
    |     | |     `-DeclRefExpr 0x2c51aebe468 <col:24> 'int' lvalue Var 0x2c51aec16c8 'ptag' 'int'
    |     | `-ParenExpr 0x2c51aebe5a0 <col:33, col:52> 'int'
    |     |   `-BinaryOperator 0x2c51aebe580 <col:34, col:46> 'int' '!='
    |     |     |-ImplicitCastExpr 0x2c51aebe550 <col:34> 'int' <LValueToRValue>
    |     |     | `-DeclRefExpr 0x2c51aebe4f8 <col:34> 'int' lvalue ParmVar 0x2c51aec1328 'expclass' 'int'
    |     |     `-ImplicitCastExpr 0x2c51aebe568 <col:46> 'int' <LValueToRValue>
    |     |       `-DeclRefExpr 0x2c51aebe530 <col:46> 'int' lvalue Var 0x2c51aec1748 'pclass' 'int'
    |     `-CompoundStmt 0x2c51aebe718 <col:55, line:1131:9>
    |       |-IfStmt 0x2c51aebe680 <line:1126:13, line:1127:25>
    |       | |-ImplicitCastExpr 0x2c51aebe618 <line:1126:17> 'char' <LValueToRValue>
    |       | | `-DeclRefExpr 0x2c51aebe5e0 <col:17> 'char' lvalue ParmVar 0x2c51aec13a0 'opt' 'char'
    |       | `-ReturnStmt 0x2c51aebe670 <line:1127:17, col:25>
    |       |   `-UnaryOperator 0x2c51aebe658 <col:24, col:25> 'int' prefix '-'
    |       |     `-IntegerLiteral 0x2c51aebe630 <col:25> 'int' 1
    |       `-ReturnStmt 0x2c51aebe708 <line:1130:13, col:20>
    |         `-IntegerLiteral 0x2c51aebe6e0 <col:20> 'int' 0
    |-IfStmt 0x2c51aebf9c0 <line:1139:5, line:1140:28>
    | |-BinaryOperator 0x2c51aebf828 <line:1139:9, col:13> 'int' '&'
    | | |-ImplicitCastExpr 0x2c51aebf810 <col:9> 'int' <LValueToRValue>
    | | | `-DeclRefExpr 0x2c51aebf7c8 <col:9> 'int' lvalue Var 0x2c51aec1630 'i' 'int'
    | | `-IntegerLiteral 0x2c51aebf7e8 <col:13> 'int' 1
    | `-BinaryOperator 0x2c51aebf9a0 <line:1140:9, col:28> 'long' '='
    |   |-DeclRefExpr 0x2c51aebf848 <col:9> 'long' lvalue Var 0x2c51aebd7d8 'plen' 'long'
    |   `-ImplicitCastExpr 0x2c51aebf988 <col:16, col:28> 'long' <IntegralCast>
    |     `-BinaryOperator 0x2c51aebf968 <col:16, col:28> 'long long' '-'
    |       |-ImplicitCastExpr 0x2c51aebf950 <col:16> 'long long' <IntegralCast>
    |       | `-ImplicitCastExpr 0x2c51aebf938 <col:16> 'long' <LValueToRValue>
    |       |   `-DeclRefExpr 0x2c51aebf868 <col:16> 'long' lvalue ParmVar 0x2c51aec1228 'len' 'long'
    |       `-ParenExpr 0x2c51aebf918 <col:22, col:28> 'long long'
    |         `-BinaryOperator 0x2c51aebf8f8 <col:23, col:27> 'long long' '-'
    |           |-ImplicitCastExpr 0x2c51aebf8c8 <col:23> 'const unsigned char *' <LValueToRValue>
    |           | `-DeclRefExpr 0x2c51aebf888 <col:23> 'const unsigned char *' lvalue Var 0x2c51aebd870 'p' 'const unsigned char *'
    |           `-ImplicitCastExpr 0x2c51aebf8e0 <col:27> 'const unsigned char *' <LValueToRValue>
    |             `-DeclRefExpr 0x2c51aebf8a8 <col:27> 'const unsigned char *' lvalue Var 0x2c51aebd8f0 'q' 'const unsigned char *'
    |-IfStmt 0x2c51aebfb30 <line:1142:5, line:1143:20>
    | |-ImplicitCastExpr 0x2c51aebfa10 <line:1142:9> 'char *' <LValueToRValue>
    | | `-DeclRefExpr 0x2c51aebf9d8 <col:9> 'char *' lvalue ParmVar 0x2c51aec10a0 'inf' 'char *'
    | `-BinaryOperator 0x2c51aebfb10 <line:1143:9, col:20> 'char' '='
    |   |-UnaryOperator 0x2c51aebfa60 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x2c51aebfa48 <col:10> 'char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x2c51aebfa28 <col:10> 'char *' lvalue ParmVar 0x2c51aec10a0 'inf' 'char *'
    |   `-ImplicitCastExpr 0x2c51aebfaf8 <col:16, col:20> 'char' <IntegralCast>
    |     `-BinaryOperator 0x2c51aebfad8 <col:16, col:20> 'int' '&'
    |       |-ImplicitCastExpr 0x2c51aebfac0 <col:16> 'int' <LValueToRValue>
    |       | `-DeclRefExpr 0x2c51aebfa78 <col:16> 'int' lvalue Var 0x2c51aec1630 'i' 'int'
    |       `-IntegerLiteral 0x2c51aebfa98 <col:20> 'int' 1
    |-IfStmt 0x2c51aebfd00 <line:1148:5, line:1149:17>
    | |-ImplicitCastExpr 0x2c51aebfc40 <line:1148:9> 'long *' <LValueToRValue>
    | | `-DeclRefExpr 0x2c51aebfc08 <col:9> 'long *' lvalue ParmVar 0x2c51aec0f20 'olen' 'long *'
    | `-BinaryOperator 0x2c51aebfce0 <line:1149:9, col:17> 'long' '='
    |   |-UnaryOperator 0x2c51aebfc90 <col:9, col:10> 'long' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x2c51aebfc78 <col:10> 'long *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x2c51aebfc58 <col:10> 'long *' lvalue ParmVar 0x2c51aec0f20 'olen' 'long *'
    |   `-ImplicitCastExpr 0x2c51aebfcc8 <col:17> 'long' <LValueToRValue>
    |     `-DeclRefExpr 0x2c51aebfca8 <col:17> 'long' lvalue Var 0x2c51aebd7d8 'plen' 'long'
    |-IfStmt 0x2c51aebfe28 <line:1151:5, line:1152:19>
    | |-ImplicitCastExpr 0x2c51aebfd50 <line:1151:9> 'unsigned char *' <LValueToRValue>
    | | `-DeclRefExpr 0x2c51aebfd18 <col:9> 'unsigned char *' lvalue ParmVar 0x2c51aec1020 'oclass' 'unsigned char *'
    | `-BinaryOperator 0x2c51aebfe08 <line:1152:9, col:19> 'unsigned char' '='
    |   |-UnaryOperator 0x2c51aebfda0 <col:9, col:10> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x2c51aebfd88 <col:10> 'unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x2c51aebfd68 <col:10> 'unsigned char *' lvalue ParmVar 0x2c51aec1020 'oclass' 'unsigned char *'
    |   `-ImplicitCastExpr 0x2c51aebfdf0 <col:19> 'unsigned char' <IntegralCast>
    |     `-ImplicitCastExpr 0x2c51aebfdd8 <col:19> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x2c51aebfdb8 <col:19> 'int' lvalue Var 0x2c51aec1748 'pclass' 'int'
    |-IfStmt 0x2c51aebff38 <line:1154:5, line:1155:17>
    | |-ImplicitCastExpr 0x2c51aebfe78 <line:1154:9> 'int *' <LValueToRValue>
    | | `-DeclRefExpr 0x2c51aebfe40 <col:9> 'int *' lvalue ParmVar 0x2c51aec0fa0 'otag' 'int *'
    | `-BinaryOperator 0x2c51aebff18 <line:1155:9, col:17> 'int' '='
    |   |-UnaryOperator 0x2c51aebfec8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    |   | `-ImplicitCastExpr 0x2c51aebfeb0 <col:10> 'int *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x2c51aebfe90 <col:10> 'int *' lvalue ParmVar 0x2c51aec0fa0 'otag' 'int *'
    |   `-ImplicitCastExpr 0x2c51aebff00 <col:17> 'int' <LValueToRValue>
    |     `-DeclRefExpr 0x2c51aebfee0 <col:17> 'int' lvalue Var 0x2c51aec16c8 'ptag' 'int'
    |-BinaryOperator 0x2c51aebffd8 <line:1157:5, col:11> 'const unsigned char *' '='
    | |-UnaryOperator 0x2c51aebff88 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x2c51aebff70 <col:6> 'const unsigned char **' <LValueToRValue>
    | |   `-DeclRefExpr 0x2c51aebff50 <col:6> 'const unsigned char **' lvalue ParmVar 0x2c51aec11a8 'in' 'const unsigned char **'
    | `-ImplicitCastExpr 0x2c51aebffc0 <col:11> 'const unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x2c51aebffa0 <col:11> 'const unsigned char *' lvalue Var 0x2c51aebd870 'p' 'const unsigned char *'
    `-ReturnStmt 0x2c51aec0020 <line:1158:5, col:12>
      `-IntegerLiteral 0x2c51aebfff8 <col:12> 'int' 1
