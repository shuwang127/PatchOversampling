TranslationUnitDecl 0x1e2905c9488 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x1e2905c9d20 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1e2905c9a20 '__int128'
|-TypedefDecl 0x1e2905c9d90 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1e2905c9a40 'unsigned __int128'
|-TypedefDecl 0x1e2905ca0c8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1e2905c9e80 'struct __NSConstantString_tag'
|   `-Record 0x1e2905c9de8 '__NSConstantString_tag'
|-TypedefDecl 0x1e2905ca138 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1e2905c9660 'unsigned long long'
|-TypedefDecl 0x1e2905ca1d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1e2905ca190 'char *'
|   `-BuiltinType 0x1e2905c9520 'char'
|-TypedefDecl 0x1e2905ca240 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1e2905ca190 'char *'
|   `-BuiltinType 0x1e2905c9520 'char'
|-TypedefDecl 0x1e2905ca2b0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x1e2905c95c0 'long long'
|-TypedefDecl 0x1e2905ca320 prev 0x1e2905ca138 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x1e2905c9660 'unsigned long long'
|-TypedefDecl 0x1e2905ca3a8 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x1e2905c9660 'unsigned long long'
|-TypedefDecl 0x1e2905ca418 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x1e2905c9600 'unsigned short'
|-ImportDecl 0x1e291f72ea0 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-TypedefDecl 0x1e291f72f48 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1e2905c9660 'unsigned long long'
|-TypedefDecl 0x1e291f72fb8 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1e2905ca190 'char *'
|   `-BuiltinType 0x1e2905c9520 'char'
|-FunctionDecl 0x1e291f73200 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1e291f732a0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1e291f73310 <col:21> Implicit
|-FunctionDecl 0x1e291f73368 prev 0x1e291f73200 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1e291f73098 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1e291f73458 <col:21> Inherited Implicit
|-TypedefDecl 0x1e291f73510 prev 0x1e291f73488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1e2905c9660 'unsigned long long'
|-TypedefDecl 0x1e291f735a0 prev 0x1e2905ca3a8 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1e291f73570 'size_t' sugar
|   |-Typedef 0x1e291f73510 'size_t'
|   `-BuiltinType 0x1e2905c9660 'unsigned long long'
|-TypedefDecl 0x1e291f73628 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1e2905c95c0 'long long'
|-TypedefDecl 0x1e291f73698 prev 0x1e2905ca2b0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1e2905c95c0 'long long'
|-TypedefDecl 0x1e291f73720 prev 0x1e2905ca418 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1e2905c9600 'unsigned short'
|-TypedefDecl 0x1e291f737a8 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1e2905c9600 'unsigned short'
|-TypedefDecl 0x1e291f73818 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1e2905c9600 'unsigned short'
|-TypedefDecl 0x1e291f73888 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1e2905c9580 'int'
|-TypedefDecl 0x1e291f738f8 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1e2905c95a0 'long'
|-TypedefDecl 0x1e291f73968 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1e2905c95c0 'long long'
|-TypedefDecl 0x1e291f739f0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1e291f739c0 '__time64_t' sugar
|   |-Typedef 0x1e291f73968 '__time64_t'
|   `-BuiltinType 0x1e2905c95c0 'long long'
|-FunctionDecl 0x1e291f73b68 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1e291f73d88 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1e29208de60 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1e29208d9f8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1e29208da70 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1e29208dae8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1e29208db68 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1e29208dc00 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1e29208df40 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1e29208e000 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1e29208e170 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1e29208e120 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1e29208e0c0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1e29208dfe0 'struct threadlocaleinfostruct'
|       `-Record 0x1e29209cc88 'threadlocaleinfostruct'
|-TypedefDecl 0x1e29208e280 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1e29208e230 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1e29208e1d0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1e29208e0a0 'struct threadmbcinfostruct'
|       `-Record 0x1e29208e000 'threadmbcinfostruct'
|-RecordDecl 0x1e29208e2d8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1e29208e390 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1e29208e450 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e29208e4e0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1e29208e570 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1e29208e628 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1e29208e5d0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1e29208e430 'struct localeinfo_struct'
|     `-Record 0x1e29208e390 'localeinfo_struct'
|-TypedefDecl 0x1e29208e700 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1e29208e6b0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1e29208e5d0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1e29208e430 'struct localeinfo_struct'
|       `-Record 0x1e29208e390 'localeinfo_struct'
|-RecordDecl 0x1e29208e778 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1e29208e830 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e29208e8a8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1e29208e968 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1e29209caf0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1e29209cb60 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1e29209cc18 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1e29209cbc0 'struct localerefcount' sugar
|   `-RecordType 0x1e29208e810 'struct localerefcount'
|     `-Record 0x1e29208e778 'localerefcount'
|-RecordDecl 0x1e29209cc88 prev 0x1e29208df40 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1e29209cd08 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e29209cd80 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1e29209cdf0 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1e29209ce60 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1e29209ced0 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1e29209d098 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1e29209d108 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1e29209d178 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1e29209d1e8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1e29209d258 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1e29209d2c8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1e29209d320 parent 0x1e2905c9488 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1e29209d4b0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1e29209d520 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1e29209d590 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1e29209d600 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1e29209d6a0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1e29209d710 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1e29209d820 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1e29209d958 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1e29209da08 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1e29209d9b0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1e29208dfe0 'struct threadlocaleinfostruct'
|     `-Record 0x1e29209cc88 'threadlocaleinfostruct'
|-FunctionDecl 0x1e29209ee80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1e29209ead0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1e29209eb80 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1e29209ec00 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1e29209ec78 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e29209f248 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1e29209f2e8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1e29209f350 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1e29209f3b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e29209f438 prev 0x1e29209f248 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1e29209ef70 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1e29209eff0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1e29209f068 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e29209f7f8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1e29209f520 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1e29209f5a0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1e29209f618 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e292099c90 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e29209f8e0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1e29209f960 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1e29209f9d8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e292099a80 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e292099f98 <line:51:32> col:32 implicit used memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1e29209a038 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1e29209a0a0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1e29209a108 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e29209a188 prev 0x1e292099f98 <col:16, col:144> col:32 used memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1e292099d80 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1e292099e00 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1e292099e78 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e29209a548 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1e29209a5e8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e29209a650 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1e29209a6b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e29209a738 prev 0x1e29209a548 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1e29209a270 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1e29209a2f0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1e29209a368 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920a1c68 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1e29209a848 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1e29209a8e0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e29209a960 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1e29209a9d8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e2920a2028 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1e2920a20c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e2920a2130 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1e2920a2198 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e2920a2218 prev 0x1e2920a2028 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1e2920a1d58 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1e2920a1dd8 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1e2920a1e50 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920a2698 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1e2920a2738 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e2920a27a0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1e2920a2808 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1e2920a2870 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e2920a28f8 prev 0x1e2920a2698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1e2920a23e0 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1e2920a2460 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1e2920a24e0 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1e2920a2558 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920a29b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1e2920a4e00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1e2920a4be8 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1e2920a4c68 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1e2920a4ce0 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920a4eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1e2920a52b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1e2920a4fe0 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1e2920a5058 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920a50d8 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1e2920a5680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1e2920a5490 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1e2920a5510 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1e2920a5730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920a5b80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1e2920a5878 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1e2920a58f0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920a5970 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1e2920a5f50 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1e2920a5ff0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1e2920a6058 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e2920a60d0 prev 0x1e2920a5f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1e2920a5d60 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1e2920a5de0 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1e2920a6180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920a64d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1e2920a62c8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1e2920a6340 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920a63c0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1e2920a6800 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1e2920a68a0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1e2920a6908 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e2920a6980 prev 0x1e2920a6800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1e2920a6680 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1e2920a6700 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1e2920a6a30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920a9dd0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1e2920a9e70 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e2920a9ed8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e2920a9f50 prev 0x1e2920a9dd0 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1e2920a9be0 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1e2920a9c60 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1e2920aa1a0 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1e2920aa240 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e2920aa2b0 prev 0x1e2920aa1a0 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1e2920aa030 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1e2920aa5a8 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1e2920aa388 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1e2920aa400 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920aa7f8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1e2920aa688 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1e2920aa700 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1e2920aab28 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1e2920aab18 <line:132:5, col:51>
|     `-ConditionalOperator 0x1e2920aaae8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1e2920aa958 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1e2920aa938 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1e2920aa908 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1e2920aa8c0 <col:13> 'const char *' lvalue ParmVar 0x1e2920aa688 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1e2920aa920 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1e2920aa8e0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1e2920aaad0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1e2920aa978 <col:24> 'int' 0
|       `-CallExpr 0x1e2920aaa70 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1e2920aaa58 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1e2920aa9a0 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1e2920aa5a8 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1e2920aaaa0 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1e2920aa9c0 <col:36> 'const char *' lvalue ParmVar 0x1e2920aa688 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1e2920aaab8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1e2920aa9e0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1e2920aa700 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920a6df8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1e2920a6b50 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1e2920a6bc8 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e2920a6c48 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1e2920a6cc0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e2920a7100 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1e2920a71a0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e2920a7208 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1e2920a7270 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e2920a72f0 prev 0x1e2920a7100 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1e2920a6ee8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1e2920a6f68 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1e2920a6fe0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920a7528 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1e2920a73d8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1e2920a77f0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1e2920a7890 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e2920a78f8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1e2920a7970 prev 0x1e2920a77f0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1e2920a7600 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1e2920a7680 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1e2920a2b90 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e2920a7a50 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1e2920a7ad0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1e2920a2df0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e2920a2c70 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1e2920a2cf0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1e2920a31a8 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1e2920a2ed0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920a2f50 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1e2920a2fc8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920a3410 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e2920a3290 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1e2920a3310 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1e2920a3708 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1e2920a34f0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920a3570 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1e2920a35e8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920a3970 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e2920a37f0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1e2920a3870 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1e2920a3cb8 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1e2920a3a50 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920a3b20 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1e2920a3b98 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920a4078 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e2920a3da0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920a3e20 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1e2920a3e98 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920a44e0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920a4160 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920a41e0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1e2920a4258 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920a42d0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920a47e8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e2920a45d0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920a4650 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1e2920a46c8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920a7bd8 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920a48d0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920a4950 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1e2920a49c8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920a4a40 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920a7ee8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1e2920a7f88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e2920a7ff0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e2920a8068 prev 0x1e2920a7ee8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1e2920a7cc8 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1e2920a7d48 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1e2920a8320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1e2920a8240 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1e2920a83c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920a87a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1e2920a8510 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1e2920a8588 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920a8608 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1e2920a8ab8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1e2920a8b70 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1e2920a8be0 prev 0x1e2920a8ab8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1e2920a8980 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1e2920a8c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920a8fe0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1e2920a8dd0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1e2920a8e48 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920a8ec8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1e2920a92e8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1e2920a90c8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1e2920a9140 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920a95d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e2920a9488 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1e2920a9680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920a9a90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920a97c8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1e2920a9840 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920a98b8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920d8360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1e2920d8138 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1e2920d81b0 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e2920d8410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920d88c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1e2920d8558 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1e2920d85d0 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e2920d8650 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1e2920d86c8 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e2920d8d48 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e2920d8de8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e2920d8e50 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e2920d8eb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e2920d8f38 prev 0x1e2920d8d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e2920d8a78 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1e2920d8af8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1e2920d8b70 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920d8ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920d3328 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e2920d33c8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1e2920d3430 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e2920d3498 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e2920d3518 prev 0x1e2920d3328 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e2920d3110 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920d3190 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1e2920d3208 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920d3818 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e2920d3600 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920d3680 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1e2920d36f8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920d3bb0 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920d3900 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920d3980 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1e2920d39f8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920d3a70 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920d3f48 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1e2920d3ca0 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1e2920d3d18 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e2920d3d98 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1e2920d3e10 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e2920d9378 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e2920d9418 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e2920d9480 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e2920d94e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e2920d9568 prev 0x1e2920d9378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e2920d9160 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1e2920d91e0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1e2920d9258 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920d9620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920d9ad8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1e2920d9768 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1e2920d97e0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e2920d9860 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1e2920d98d8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920d9f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1e2920d9c88 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1e2920d9d08 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1e2920d9d80 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920da010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920d22f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1e2920d2390 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e2920d23f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e2920d2470 prev 0x1e2920d22f0 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1e2920d2100 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1e2920d2180 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1e2920d26d0 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1e2920d2770 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e2920d27d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1e2920d2850 prev 0x1e2920d26d0 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1e2920d2550 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1e2920d25d0 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1e2920d2a10 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1e2920d2930 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1e2920d2c60 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1e2920d2d00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e2920d2d68 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e2920d2de0 prev 0x1e2920d2c60 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1e2920d2ae8 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1e2920d2b68 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1e2920da0c0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1e2920da160 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e2920da1c8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e2920da240 prev 0x1e2920da0c0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1e2920d2ec0 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1e2920d2f40 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1e2920da560 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1e2920da600 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1e2920da668 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e2920da6e0 prev 0x1e2920da560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1e2920da3e0 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1e2920da460 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1e2920da790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920dab78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1e2920da8d8 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1e2920da958 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1e2920da9d8 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1e2920dadd0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1e2920dac60 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1e2920dacd8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920d7050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e2920daf70 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1e2920d70f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920d7448 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920d7240 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1e2920d72b8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920d7330 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920d7768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1e2920d75f0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1e2920d7668 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e2920d7818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920d7c30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1e2920d7cd0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e2920d7d38 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e2920d7da0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e2920d7e20 prev 0x1e2920d7c30 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1e2920d7960 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1e2920d79e0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1e2920d7a58 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920d4298 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920d7f08 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1e2920d7f88 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1e2920d4020 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920d4098 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920d4540 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1e2920d45e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e2920d4650 prev 0x1e2920d4540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1e2920d4460 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1e2920d46f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1e2920d4a40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e2920d48c0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920d4940 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1e2920d4af0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1e2920d4e38 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e2920d4cb8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920d4d38 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1e2920d4ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1e2920dc238 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e2920dc158 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1e2920dc2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1e2920dc6f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1e2920dc4e0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1e2920dc560 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1e2920dc5d8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920dc7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1e2920dcb90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1e2920dc978 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1e2920dc9f8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1e2920dca70 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920dcc48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1e2920dcef0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e2920dce10 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1e2920dcf98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1e2920d5280 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1e2920d5100 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1e2920d5180 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1e2920d5330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1e2920d55d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e2920d54f8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1e2920d5680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1e2920d5910 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1e2920d57a0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1e2920d5ca0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1e2920d59e0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e2920d5a58 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920d5ad0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1e2920dd0e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920d5e40 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e2920d5eb8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1e2920dd198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920dd4f8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1e2920dd598 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1e2920dd600 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1e2920dd678 prev 0x1e2920dd4f8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1e2920dd2d8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e2920dd350 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1e2920dd970 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1e2920dda10 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1e2920dda78 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1e2920ddaf0 prev 0x1e2920dd970 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1e2920dd750 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e2920dd7c8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e2920dddd0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1e2920ddbc8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e2920ddc40 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920ddcb8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1e2920e0118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920ddf70 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e2920ddfe8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1e2920e01c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920e0528 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920e0308 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e0380 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1e2920e0770 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1e2920e0810 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1e2920e0880 prev 0x1e2920e0770 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1e2920e0600 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1e2920e0b68 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e2920e0950 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e09c8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920e0db0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1e2920e0c40 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e0cb8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1e2920e3180 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1e2920e3170 <line:307:5, col:56>
|     `-ConditionalOperator 0x1e2920e3140 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1e2920e0f70 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1e2920e0f50 <col:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|       |   |-ImplicitCastExpr 0x1e2920e0f20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1e2920e0e78 <col:13> 'const wchar_t *' lvalue ParmVar 0x1e2920e0c40 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1e2920e0f38 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1e2920e0f00 <col:16, col:25> 'void *'
|       |       `-CStyleCastExpr 0x1e2920e0ed8 <col:17, col:24> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1e2920e0e98 <col:24> 'int' 0
|       |-ImplicitCastExpr 0x1e2920e3128 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1e2920e0f90 <col:29> 'int' 0
|       `-CallExpr 0x1e2920e1090 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1e2920e1078 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1e2920e0fb8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1e2920e0b68 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1e2920e10c0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1e2920e0fd8 <col:41> 'const wchar_t *' lvalue ParmVar 0x1e2920e0c40 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1e2920e3110 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1e2920e0ff8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1e2920e0cb8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920e3518 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1e2920e31a8 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e2920e3220 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e2920e3298 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e3310 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e2920e3980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e2920e36c0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e2920e3738 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e37b0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920e3a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920e3e48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1e2920e3ee8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1e2920e3f50 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1e2920e3fb8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e2920e4038 prev 0x1e2920e3e48 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1e2920e3b78 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e3bf0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e3c68 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920e23b0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1e2920e2110 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e2920e2188 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1e2920e2200 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e2278 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e2920e2760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e2920e2558 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e2920e25d0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e2648 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920e2818 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920e2b78 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920e2958 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e29d0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1e2920e2dc0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1e2920e2c50 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e2cc8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1e2920e3008 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920e2e98 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e2f10 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1e2920e62b0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920e6140 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e61b8 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1e2920e65b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920e6448 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e2920e64c0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1e2920e6668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920e6ad0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1e2920e67a8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e2920e6820 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e6900 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1e2920e6df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1e2920e6c78 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1e2920e6e98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920e4290 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1e2920e6fd8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1e2920e7050 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920e70d0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1e2920e4540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1e2920e4468 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1e2920e45e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920e49b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1e2920e4728 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1e2920e47a0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920e4818 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1e2920e4c08 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920e4a90 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e4b08 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e2920e4fa8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e2920e4ce0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e4d58 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e4dd0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920e1288 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e2920e5088 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e10f0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e1168 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920e16e0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920e1368 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e13e0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e1458 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920e14d0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920e1b38 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1e2920e17c8 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e2920e1840 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e2920e18b8 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1e2920e1930 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920e1fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1e2920e1ce0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e2920e1d58 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1e2920e1dd0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920e2058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920e53a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1e2920e5228 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1e2920e5730 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1e2920e5470 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e2920e54e8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920e5560 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1e2920e5ae8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1e2920e58d0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e2920e5948 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1e2920e5b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920e5ef8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1e2920e5cd8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1e2920e5d50 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920df128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e2920e6090 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1e2920df1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920df5d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920df310 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e2920df388 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920df400 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920df988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e2920df770 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1e2920df7e8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e2920dfa38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920dfce8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1e2920dfb78 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1e2920dfbf0 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920dff58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e2920dfe80 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1e2920e0000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920ea480 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920ea278 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e2920ea2f0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920ea368 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920ea790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e2920ea620 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1e2920ea698 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e2920ea840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e2920eac40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e2920ea980 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e2920ea9f8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e2920eaa70 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920eb088 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920ead20 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e2920ead98 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e2920eae10 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920eae88 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920ee338 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920ee1c0 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e2920ee238 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e2920ee620 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e2920ee410 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920ee488 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e2920ee500 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920ee878 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920ee700 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1e2920ee778 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1e2920eeb60 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1e2920ee950 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920ee9c8 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e2920eea40 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920eee50 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e2920eec40 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920eecb8 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e2920eed30 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920e71a0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920eef30 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920eefa8 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e2920ef020 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920ef098 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920e7498 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e2920e7288 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e7300 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1e2920e7378 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1e2920e7820 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1e2920e7578 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e75f0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e7668 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e2920e76e0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e2920e7a80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1e2920e79a8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1e2920e7b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1e2920e7e60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920e7ce8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920e7d60 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1e2920e7f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1e2920eb328 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1e2920e80d0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920eb190 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1e2920eb208 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920eb3e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1e2920eb7a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1e2920eb5a0 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e2920eb618 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1e2920eb690 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1e2920eb860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1e2920ebaf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e2920eba20 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1e2920ebba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1e2920ebed0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1e2920ebd60 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1e2920ebdd8 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1e2920ebf80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1e2920ec278 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e2920ec1a0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1e2920ec320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1e2920ec5b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e2920ec4e0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1e2920ec660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1e2920ec998 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e2920ec820 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1e2920ec898 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1e2920eca48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-FunctionDecl 0x1e2920ece70 <.//openssl//file_jk/after\crypto\asn1/asn1_locl.h:12:1, col:60> col:5 invalid asn1_utctime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1e2920eccd0 <col:24, col:35> col:35 tm 'struct tm *'
| `-ParmVarDecl 0x1e2920ecd50 <col:39, col:59> col:59 invalid d 'const int *'
|-FunctionDecl 0x1e2920e8210 <line:13:1, col:76> col:5 invalid asn1_generalizedtime_to_tm 'int (struct tm *, const int *)'
| |-ParmVarDecl 0x1e2920ed0a0 <col:32, col:43> col:43 tm 'struct tm *'
| `-ParmVarDecl 0x1e2920ed120 <col:47, col:75> col:75 invalid d 'const int *'
|-RecordDecl 0x1e2920e82c0 <line:17:1, line:38:1> line:17:8 invalid struct asn1_sctx_st definition
| |-FieldDecl 0x1e2920e8398 <line:19:5, col:22> col:22 invalid it 'const int *'
| |-FieldDecl 0x1e2920e8408 <line:21:5, col:26> col:26 invalid tt 'const int *'
| |-FieldDecl 0x1e2920e8478 <line:23:5, col:19> col:19 flags 'unsigned long'
| |-FieldDecl 0x1e2920e84e8 <line:25:5, col:9> col:9 skidx 'int'
| |-FieldDecl 0x1e2920e8558 <line:27:5, col:9> col:9 depth 'int'
| |-FieldDecl 0x1e2920e85c8 <line:29:5, col:17> col:17 sname 'const char *'
| |-FieldDecl 0x1e2920e8638 <col:5, col:25> col:25 fname 'const char *'
| |-FieldDecl 0x1e2920e86a8 <line:31:5, col:9> col:9 prim_type 'int'
| |-FieldDecl 0x1e2920e8748 <line:33:5, col:18> col:18 invalid field 'int **'
| |-FieldDecl 0x1e2920e8918 <line:35:5, col:35> col:11 scan_cb 'int (*)(int *)'
| `-FieldDecl 0x1e2920e8988 <line:37:5, col:11> col:11 app_data 'void *'
|-RecordDecl 0x1e2920e89e0 <line:40:9, col:16> col:16 struct mime_param_st
|-TypedefDecl 0x1e2920e8af8 <col:1, col:30> col:30 referenced MIME_PARAM 'struct mime_param_st':'struct mime_param_st'
| `-ElaboratedType 0x1e2920e8aa0 'struct mime_param_st' sugar
|   `-RecordType 0x1e2920e8a80 'struct mime_param_st'
|     `-Record 0x1e2920e89e0 'mime_param_st'
|-FunctionDecl 0x1e2920e8ca0 <line:41:1, col:27> col:1 DEFINE_STACK_OF 'int (MIME_PARAM)'
| `-ParmVarDecl 0x1e2920e8ba0 <col:17> col:27 'MIME_PARAM':'struct mime_param_st'
|-RecordDecl 0x1e2920e8d60 <line:42:9, col:16> col:16 struct mime_header_st
|-TypedefDecl 0x1e2920e8e78 <col:1, col:31> col:31 referenced MIME_HEADER 'struct mime_header_st':'struct mime_header_st'
| `-ElaboratedType 0x1e2920e8e20 'struct mime_header_st' sugar
|   `-RecordType 0x1e2920e8e00 'struct mime_header_st'
|     `-Record 0x1e2920e8d60 'mime_header_st'
|-FunctionDecl 0x1e2920e9020 <line:43:1, col:28> col:1 invalid DEFINE_STACK_OF 'int (MIME_HEADER)'
| `-ParmVarDecl 0x1e2920e8f20 <col:17> col:28 'MIME_HEADER':'struct mime_header_st'
|-VarDecl 0x1e2920e9198 <line:46:1, col:32> col:20 _asn1_mon 'const char *[12]' extern
|-FunctionDecl 0x1e2920e9388 <line:48:1, col:54> col:6 invalid asn1_string_embed_free 'void (int *, int)'
| |-ParmVarDecl 0x1e2920e9230 <col:29, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1e2920e92b0 <col:45, col:49> col:49 embed 'int'
|-FunctionDecl 0x1e2920e95b0 <line:50:1, col:68> col:5 invalid asn1_get_choice_selector 'int (int **, const int *)'
| |-ParmVarDecl 0x1e2920e9458 <col:30, col:43> col:43 invalid pval 'int **'
| `-ParmVarDecl 0x1e2920e94d8 <col:49, col:66> col:66 invalid it 'const int *'
|-FunctionDecl 0x1e2920e9870 <line:51:1, line:52:49> line:51:5 invalid asn1_set_choice_selector 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1e2920e9680 <col:30, col:43> col:43 invalid pval 'int **'
| |-ParmVarDecl 0x1e2920e9700 <col:49, col:53> col:53 value 'int'
| `-ParmVarDecl 0x1e2920e9780 <line:52:30, col:47> col:47 invalid it 'const int *'
|-FunctionDecl 0x1e2920e9aa8 <line:54:1, col:75> col:14 invalid asn1_get_field_ptr 'int **(int **, const int *)'
| |-ParmVarDecl 0x1e2920e9948 <col:33, col:46> col:46 invalid pval 'int **'
| `-ParmVarDecl 0x1e2920e99c8 <col:52, col:73> col:73 invalid tt 'const int *'
|-FunctionDecl 0x1e2920e9d60 <line:56:1, line:57:45> line:56:22 invalid asn1_do_adb 'const int *(int **, const int *, int)'
| |-ParmVarDecl 0x1e2920e9b78 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x1e2920e9bf8 <col:53, col:74> col:74 invalid tt 'const int *'
| `-ParmVarDecl 0x1e2920e9c78 <line:57:34, col:38> col:38 nullerr 'int'
|-FunctionDecl 0x1e2920e9fe0 <line:59:1, col:64> col:5 invalid asn1_do_lock 'int (int **, int, const int *)'
| |-ParmVarDecl 0x1e2920e9e38 <col:18, col:31> col:31 invalid pval 'int **'
| |-ParmVarDecl 0x1e2920e9eb8 <col:37, col:41> col:41 op 'int'
| `-ParmVarDecl 0x1e2920e9f38 <col:45, col:62> col:62 invalid it 'const int *'
|-FunctionDecl 0x1e2920ff808 <line:61:1, col:58> col:6 invalid asn1_enc_init 'void (int **, const int *)'
| |-ParmVarDecl 0x1e2920ea0b8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1e2920ff730 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1e2920ff9f0 <line:62:1, col:58> col:6 invalid asn1_enc_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1e2920ff8d8 <col:20, col:33> col:33 invalid pval 'int **'
| `-ParmVarDecl 0x1e2920ff958 <col:39, col:56> col:56 invalid it 'const int *'
|-FunctionDecl 0x1e2920ffda0 <line:63:1, line:64:41> line:63:5 invalid asn1_enc_restore 'int (int *, unsigned char **, int **, const int *)'
| |-ParmVarDecl 0x1e2920ffab8 <col:22, col:27> col:27 len 'int *'
| |-ParmVarDecl 0x1e2920ffb98 <col:32, col:48> col:48 out 'unsigned char **'
| |-ParmVarDecl 0x1e2920ffc20 <col:53, col:66> col:66 invalid pval 'int **'
| `-ParmVarDecl 0x1e2920ffca0 <line:64:22, col:39> col:39 invalid it 'const int *'
|-FunctionDecl 0x1e292100100 <line:65:1, line:66:38> line:65:5 invalid asn1_enc_save 'int (int **, const unsigned char *, int, const int *)'
| |-ParmVarDecl 0x1e2920ffe80 <col:19, col:32> col:32 invalid pval 'int **'
| |-ParmVarDecl 0x1e2920fff00 <col:38, col:59> col:59 in 'const unsigned char *'
| |-ParmVarDecl 0x1e2920fff80 <col:63, col:67> col:67 inlen 'int'
| `-ParmVarDecl 0x1e292100000 <line:66:19, col:36> col:36 invalid it 'const int *'
|-FunctionDecl 0x1e2921003c8 <line:68:1, col:76> col:6 invalid asn1_item_embed_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1e2921001e0 <col:27, col:40> col:40 invalid pval 'int **'
| |-ParmVarDecl 0x1e292100260 <col:46, col:63> col:63 invalid it 'const int *'
| `-ParmVarDecl 0x1e2921002e0 <col:67, col:71> col:71 embed 'int'
|-FunctionDecl 0x1e292100640 <line:69:1, col:75> col:6 invalid asn1_primitive_free 'void (int **, const int *, int)'
| |-ParmVarDecl 0x1e2921004a0 <col:26, col:39> col:39 invalid pval 'int **'
| |-ParmVarDecl 0x1e292100520 <col:45, col:62> col:62 invalid it 'const int *'
| `-ParmVarDecl 0x1e2921005a0 <col:66, col:70> col:70 embed 'int'
|-FunctionDecl 0x1e2920f97e8 <line:70:1, col:67> col:6 invalid asn1_template_free 'void (int **, const int *)'
| |-ParmVarDecl 0x1e2920f96d0 <col:25, col:38> col:38 invalid pval 'int **'
| `-ParmVarDecl 0x1e2920f9750 <col:44, col:65> col:65 invalid tt 'const int *'
|-FunctionDecl 0x1e2920f9ad0 <line:72:1, line:73:41> line:72:14 invalid c2i_ASN1_OBJECT 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1e2920f98b8 <col:30, col:44> col:44 invalid a 'int **'
| |-ParmVarDecl 0x1e2920f9968 <col:47, col:69> col:69 pp 'const unsigned char **'
| `-ParmVarDecl 0x1e2920f99e8 <line:73:30, col:35> col:35 length 'long'
|-FunctionDecl 0x1e2920f9d00 <line:74:1, col:63> col:5 invalid i2c_ASN1_BIT_STRING 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1e2920f9ba0 <col:25, col:42> col:42 invalid a 'int *'
| `-ParmVarDecl 0x1e2920f9c28 <col:45, col:61> col:61 pp 'unsigned char **'
|-FunctionDecl 0x1e2920f9f80 <line:75:1, line:76:75> line:75:18 invalid c2i_ASN1_BIT_STRING 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1e2920f9dd0 <col:38, col:56> col:56 invalid a 'int **'
| |-ParmVarDecl 0x1e2920f9e58 <line:76:38, col:60> col:60 pp 'const unsigned char **'
| `-ParmVarDecl 0x1e2920f9ed8 <col:64, col:69> col:69 length 'long'
|-FunctionDecl 0x1e2920fa178 <line:77:1, col:57> col:5 invalid i2c_ASN1_INTEGER 'int (int *, unsigned char **)'
| |-ParmVarDecl 0x1e2920fa050 <col:22, col:36> col:36 invalid a 'int *'
| `-ParmVarDecl 0x1e2920fa0d8 <col:39, col:55> col:55 pp 'unsigned char **'
|-FunctionDecl 0x1e2920fa3f8 <line:78:1, line:79:43> line:78:15 invalid c2i_ASN1_INTEGER 'int *(int **, const unsigned char **, long)'
| |-ParmVarDecl 0x1e2920fa248 <col:32, col:47> col:47 invalid a 'int **'
| |-ParmVarDecl 0x1e2920fa2d0 <col:50, col:72> col:72 pp 'const unsigned char **'
| `-ParmVarDecl 0x1e2920fa350 <line:79:32, col:37> col:37 length 'long'
|-FunctionDecl 0x1e2920fa770 <line:82:1, col:79> col:5 invalid c2i_uint64_int 'int (int *, int *, const unsigned char **, long)'
| |-ParmVarDecl 0x1e2920fa4c8 <col:20, col:30> col:30 invalid ret 'int *'
| |-ParmVarDecl 0x1e2920fa548 <col:35, col:40> col:40 neg 'int *'
| |-ParmVarDecl 0x1e2920fa5d0 <col:45, col:67> col:67 pp 'const unsigned char **'
| `-ParmVarDecl 0x1e2920fa650 <col:71, col:76> col:76 len 'long'
|-FunctionDecl 0x1e2920faa30 <line:83:1, col:57> col:5 invalid i2c_uint64_int 'int (unsigned char *, int, int)'
| |-ParmVarDecl 0x1e2920fa848 <col:20, col:35> col:35 p 'unsigned char *'
| |-ParmVarDecl 0x1e2920fa8c8 <col:38, col:47> col:47 invalid r 'int'
| `-ParmVarDecl 0x1e2920fa948 <col:50, col:54> col:54 neg 'int'
|-FunctionDecl 0x1e2920fae20 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:19:1, line:20:74> line:19:12 invalid asn1_i2d_ex_primitive 'int (int **, unsigned char **, const int *, int, int)' static
| |-ParmVarDecl 0x1e2920fab08 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x1e2920fab90 <col:53, col:69> col:69 out 'unsigned char **'
| |-ParmVarDecl 0x1e2920fac10 <line:20:34, col:51> col:51 invalid it 'const int *'
| |-ParmVarDecl 0x1e2920fac90 <col:55, col:59> col:59 tag 'int'
| `-ParmVarDecl 0x1e2920fad10 <col:64, col:68> col:68 aclass 'int'
|-FunctionDecl 0x1e2920fb0a0 <line:21:1, line:23:52> line:21:12 invalid asn1_set_seq_out 'int (int (*)())' static
| `-ParmVarDecl 0x1e2920fafa0 <col:29, <invalid sloc>> col:29 invalid STACK_OF 'int (*)()':'int (*)()'
|-FunctionDecl 0x1e2920fb428 <line:24:1, line:25:77> line:24:12 invalid asn1_template_ex_i2d 'int (int **, unsigned char **, const int *, int, int)' static
| |-ParmVarDecl 0x1e2920fb168 <col:33, col:46> col:46 invalid pval 'int **'
| |-ParmVarDecl 0x1e2920fb1f0 <col:52, col:68> col:68 out 'unsigned char **'
| |-ParmVarDecl 0x1e2920fb270 <line:25:33, col:54> col:54 invalid tt 'const int *'
| |-ParmVarDecl 0x1e2920fb2f0 <col:58, col:62> col:62 tag 'int'
| `-ParmVarDecl 0x1e2920fb370 <col:67, col:71> col:71 aclass 'int'
|-FunctionDecl 0x1e2920f87c0 <line:26:1, line:27:62> line:26:12 invalid asn1_item_flags_i2d 'int (int *, unsigned char **, const int *, int)' static
| |-ParmVarDecl 0x1e2920fb508 <col:32, col:44> col:44 invalid val 'int *'
| |-ParmVarDecl 0x1e2920fb590 <col:49, col:65> col:65 out 'unsigned char **'
| |-ParmVarDecl 0x1e2920fb610 <line:27:32, col:49> col:49 invalid it 'const int *'
| `-ParmVarDecl 0x1e2920f86c0 <col:53, col:57> col:57 flags 'int'
|-FunctionDecl 0x1e2920f8b20 <line:28:1, line:29:43> line:28:12 invalid asn1_ex_i2c 'int (int **, unsigned char *, int *, const int *)' static
| |-ParmVarDecl 0x1e2920f88a0 <col:24, col:37> col:37 invalid pval 'int **'
| |-ParmVarDecl 0x1e2920f8920 <col:43, col:58> col:58 cout 'unsigned char *'
| |-ParmVarDecl 0x1e2920f89a0 <col:64, col:69> col:69 putype 'int *'
| `-ParmVarDecl 0x1e2920f8a20 <line:29:24, col:41> col:41 invalid it 'const int *'
|-FunctionDecl 0x1e2920f8df0 <line:36:1, line:40:1> line:36:5 invalid ASN1_item_ndef_i2d 'int (int *, unsigned char **, const int *)'
| |-ParmVarDecl 0x1e2920f8bf8 <col:24, col:36> col:36 invalid val 'int *'
| |-ParmVarDecl 0x1e2920f8c80 <col:41, col:57> col:57 used out 'unsigned char **'
| |-ParmVarDecl 0x1e2920f8d00 <line:37:24, col:41> col:41 invalid it 'const int *'
| `-CompoundStmt 0x1e2920f8ef8 <line:38:1, line:40:1>
|-FunctionDecl 0x1e2920f90d0 <line:42:1, line:45:1> line:42:5 invalid ASN1_item_i2d 'int (int *, unsigned char **, const int *)'
| |-ParmVarDecl 0x1e2920f8f20 <col:19, col:31> col:31 invalid val 'int *'
| |-ParmVarDecl 0x1e2920f8fa8 <col:36, col:52> col:52 used out 'unsigned char **'
| |-ParmVarDecl 0x1e2920f9028 <col:57, col:74> col:74 invalid it 'const int *'
| `-CompoundStmt 0x1e2920f9200 <line:43:1, line:45:1>
|-FunctionDecl 0x1e2920f9460 <line:54:1, line:73:1> line:54:12 invalid asn1_item_flags_i2d 'int (int *, unsigned char **, const int *, int)' static
| |-ParmVarDecl 0x1e2920f9228 <col:32, col:44> col:44 invalid val 'int *'
| |-ParmVarDecl 0x1e2920f92b0 <col:49, col:65> col:65 used out 'unsigned char **'
| |-ParmVarDecl 0x1e2920f9330 <line:55:32, col:49> col:49 invalid it 'const int *'
| |-ParmVarDecl 0x1e2920f93b0 <col:53, col:57> col:57 used flags 'int'
| `-CompoundStmt 0x1e2921022c0 <line:56:1, line:73:1>
|   `-IfStmt 0x1e292102208 <line:57:5, line:70:5>
|     |-BinaryOperator 0x1e2920f9630 <line:57:9, col:18> 'int' '&&'
|     | |-ImplicitCastExpr 0x1e2920f9618 <col:9> 'unsigned char **' <LValueToRValue>
|     | | `-DeclRefExpr 0x1e2920f9538 <col:9> 'unsigned char **' lvalue ParmVar 0x1e2920f92b0 'out' 'unsigned char **'
|     | `-UnaryOperator 0x1e2920f9600 <col:16, col:18> 'int' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x1e2920f95e8 <col:17, col:18> 'unsigned char *' <LValueToRValue>
|     |     `-UnaryOperator 0x1e2920f95d0 <col:17, col:18> 'unsigned char *' lvalue prefix '*' cannot overflow
|     |       `-ImplicitCastExpr 0x1e2920f95b8 <col:18> 'unsigned char **' <LValueToRValue>
|     |         `-DeclRefExpr 0x1e2920f9598 <col:18> 'unsigned char **' lvalue ParmVar 0x1e2920f92b0 'out' 'unsigned char **'
|     `-CompoundStmt 0x1e2921021b8 <col:23, line:70:5>
|       |-DeclStmt 0x1e292101850 <line:58:9, col:31>
|       | |-VarDecl 0x1e292101750 <col:9, col:24> col:24 used p 'unsigned char *'
|       | `-VarDecl 0x1e2921017d0 <col:9, col:28> col:28 used buf 'unsigned char *'
|       |-DeclStmt 0x1e2921018e8 <line:59:9, col:16>
|       | `-VarDecl 0x1e292101880 <col:9, col:13> col:13 used len 'int'
|       |-IfStmt 0x1e292101c10 <line:61:9, line:62:20>
|       | |-BinaryOperator 0x1e292101ba8 <line:61:13, col:20> 'int' '<='
|       | | |-ImplicitCastExpr 0x1e292101b90 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1e292101b48 <col:13> 'int' lvalue Var 0x1e292101880 'len' 'int'
|       | | `-IntegerLiteral 0x1e292101b68 <col:20> 'int' 0
|       | `-ReturnStmt 0x1e292101c00 <line:62:13, col:20>
|       |   `-ImplicitCastExpr 0x1e292101be8 <col:20> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1e292101bc8 <col:20> 'int' lvalue Var 0x1e292101880 'len' 'int'
|       |-BinaryOperator 0x1e292101e00 <line:63:9, col:33> 'unsigned char *' '='
|       | |-DeclRefExpr 0x1e292101c28 <col:9> 'unsigned char *' lvalue Var 0x1e2921017d0 'buf' 'unsigned char *'
|       | `-ImplicitCastExpr 0x1e292101de8 <col:15, col:33> 'unsigned char *' <IntegralToPointer>
|       |   `-CallExpr 0x1e292101da8 <col:15, col:33> 'int'
|       |     |-ImplicitCastExpr 0x1e292101d90 <col:15> 'int (*)()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x1e292101d50 <col:15> 'int ()' Function 0x1e292101c88 'OPENSSL_malloc' 'int ()'
|       |     `-ImplicitCastExpr 0x1e292101dd0 <col:30> 'int' <LValueToRValue>
|       |       `-DeclRefExpr 0x1e292101d70 <col:30> 'int' lvalue Var 0x1e292101880 'len' 'int'
|       |-IfStmt 0x1e292101f68 <line:64:9, line:65:21>
|       | |-BinaryOperator 0x1e292101ef8 <line:64:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|       | | |-ImplicitCastExpr 0x1e292101ec8 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:64:13> 'unsigned char *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1e292101e20 <col:13> 'unsigned char *' lvalue Var 0x1e2921017d0 'buf' 'unsigned char *'
|       | | `-ImplicitCastExpr 0x1e292101ee0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'unsigned char *' <BitCast>
|       | |   `-ParenExpr 0x1e292101ea8 <col:16, col:25> 'void *'
|       | |     `-CStyleCastExpr 0x1e292101e80 <col:17, col:24> 'void *' <NullToPointer>
|       | |       `-IntegerLiteral 0x1e292101e40 <col:24> 'int' 0
|       | `-ReturnStmt 0x1e292101f58 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:65:13, col:21>
|       |   `-UnaryOperator 0x1e292101f40 <col:20, col:21> 'int' prefix '-'
|       |     `-IntegerLiteral 0x1e292101f18 <col:21> 'int' 1
|       |-BinaryOperator 0x1e292101ff0 <line:66:9, col:13> 'unsigned char *' '='
|       | |-DeclRefExpr 0x1e292101f80 <col:9> 'unsigned char *' lvalue Var 0x1e292101750 'p' 'unsigned char *'
|       | `-ImplicitCastExpr 0x1e292101fd8 <col:13> 'unsigned char *' <LValueToRValue>
|       |   `-DeclRefExpr 0x1e292101fb8 <col:13> 'unsigned char *' lvalue Var 0x1e2921017d0 'buf' 'unsigned char *'
|       |-BinaryOperator 0x1e292102150 <line:68:9, col:16> 'unsigned char *' '='
|       | |-UnaryOperator 0x1e292102100 <col:9, col:10> 'unsigned char *' lvalue prefix '*' cannot overflow
|       | | `-ImplicitCastExpr 0x1e2921020e8 <col:10> 'unsigned char **' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1e2921020c8 <col:10> 'unsigned char **' lvalue ParmVar 0x1e2920f92b0 'out' 'unsigned char **'
|       | `-ImplicitCastExpr 0x1e292102138 <col:16> 'unsigned char *' <LValueToRValue>
|       |   `-DeclRefExpr 0x1e292102118 <col:16> 'unsigned char *' lvalue Var 0x1e2921017d0 'buf' 'unsigned char *'
|       `-ReturnStmt 0x1e2921021a8 <line:69:9, col:16>
|         `-ImplicitCastExpr 0x1e292102190 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x1e292102170 <col:16> 'int' lvalue Var 0x1e292101880 'len' 'int'
|-FunctionDecl 0x1e2921025b8 <line:80:1, line:193:1> line:80:5 invalid ASN1_item_ex_i2d 'int (int **, unsigned char **, const int *, int, int)'
| |-ParmVarDecl 0x1e2921022f8 <col:22, col:35> col:35 invalid pval 'int **'
| |-ParmVarDecl 0x1e292102380 <col:41, col:57> col:57 used out 'unsigned char **'
| |-ParmVarDecl 0x1e292102400 <line:81:22, col:39> col:39 invalid it 'const int *'
| |-ParmVarDecl 0x1e292102480 <col:43, col:47> col:47 used tag 'int'
| |-ParmVarDecl 0x1e292102500 <col:52, col:56> col:56 used aclass 'int'
| `-CompoundStmt 0x1e292103d00 <line:82:1, line:193:1>
|   |-DeclStmt 0x1e2921007a0 <line:83:5, col:35>
|   | `-VarDecl 0x1e2921026b0 <col:5, col:26> col:26 invalid tt 'const int *'
|   |-DeclStmt 0x1e292100a08 <line:84:5, col:40>
|   | |-VarDecl 0x1e2921007d0 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x1e292100850 <col:5, col:12> col:12 used seqcontlen 'int'
|   | |-VarDecl 0x1e2921008d0 <col:5, col:24> col:24 used seqlen 'int'
|   | `-VarDecl 0x1e292100950 <col:5, col:39> col:32 used ndef 'int' cinit
|   |   `-IntegerLiteral 0x1e2921009b8 <col:39> 'int' 1
|   |-DeclStmt 0x1e292100aa0 <line:85:5, col:32>
|   | `-VarDecl 0x1e292100a38 <col:5, col:30> col:30 invalid ef 'const int *'
|   |-DeclStmt 0x1e292100b38 <line:86:5, col:36>
|   | `-VarDecl 0x1e292100ad0 <col:5, col:21> col:21 invalid aux 'const int *'
|   |-IfStmt 0x1e292100bc8 <line:89:5, line:90:16>
|   | |-OpaqueValueExpr 0x1e292100bb0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e292100ba0 <col:9, col:16>
|   |   `-IntegerLiteral 0x1e292100b78 <col:16> 'int' 0
|   `-ReturnStmt 0x1e292103cf0 <line:192:5, col:12>
|     `-IntegerLiteral 0x1e292103cc8 <col:12> 'int' 0
|-FunctionDecl 0x1e292104020 <line:195:1, line:345:1> line:195:12 invalid asn1_template_ex_i2d 'int (int **, unsigned char **, const int *, int, int)' static
| |-ParmVarDecl 0x1e292103d60 <col:33, col:46> col:46 invalid pval 'int **'
| |-ParmVarDecl 0x1e292103de8 <col:52, col:68> col:68 used out 'unsigned char **'
| |-ParmVarDecl 0x1e292103e68 <line:196:33, col:54> col:54 invalid tt 'const int *'
| |-ParmVarDecl 0x1e292103ee8 <col:58, col:62> col:62 used tag 'int'
| |-ParmVarDecl 0x1e292103f68 <col:67, col:71> col:71 used iclass 'int'
| `-CompoundStmt 0x1e2920fe428 <line:197:1, line:345:1>
|   |-DeclStmt 0x1e292104438 <line:198:5, col:42>
|   | |-VarDecl 0x1e292104118 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x1e292104198 <col:5, col:12> col:12 used ret 'int'
|   | |-VarDecl 0x1e292104218 <col:5, col:17> col:17 used flags 'int'
|   | |-VarDecl 0x1e292104298 <col:5, col:24> col:24 used ttag 'int'
|   | |-VarDecl 0x1e292104318 <col:5, col:30> col:30 used tclass 'int'
|   | `-VarDecl 0x1e292104398 <col:5, col:38> col:38 used ndef 'int'
|   |-IfStmt 0x1e2921044d0 <line:206:5, line:209:5>
|   | |-OpaqueValueExpr 0x1e2921044b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e2921044a8 <line:206:34, line:209:5>
|   |-IfStmt 0x1e2920fc930 <line:217:5, line:232:5> has_else
|   | |-OpaqueValueExpr 0x1e2920fc918 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1e2921046b0 <line:217:37, line:225:5>
|   | | `-IfStmt 0x1e292104608 <line:219:9, line:221:21>
|   | |   |-BinaryOperator 0x1e292104598 <line:219:13, col:21> 'int' '!='
|   | |   | |-ImplicitCastExpr 0x1e292104580 <col:13> 'int' <LValueToRValue>
|   | |   | | `-DeclRefExpr 0x1e292104508 <col:13> 'int' lvalue ParmVar 0x1e292103ee8 'tag' 'int'
|   | |   | `-UnaryOperator 0x1e292104568 <col:20, col:21> 'int' prefix '-'
|   | |   |   `-IntegerLiteral 0x1e292104540 <col:21> 'int' 1
|   | |   `-ReturnStmt 0x1e2921045f8 <line:221:13, col:21>
|   | |     `-UnaryOperator 0x1e2921045e0 <col:20, col:21> 'int' prefix '-'
|   | |       `-IntegerLiteral 0x1e2921045b8 <col:21> 'int' 1
|   | `-IfStmt 0x1e2920fc8f0 <line:225:12, line:232:5> has_else
|   |   |-BinaryOperator 0x1e292104740 <line:225:16, col:24> 'int' '!='
|   |   | |-ImplicitCastExpr 0x1e292104728 <col:16> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1e2921046c8 <col:16> 'int' lvalue ParmVar 0x1e292103ee8 'tag' 'int'
|   |   | `-UnaryOperator 0x1e292104710 <col:23, col:24> 'int' prefix '-'
|   |   |   `-IntegerLiteral 0x1e2921046e8 <col:24> 'int' 1
|   |   |-CompoundStmt 0x1e2920fc7d0 <col:27, line:229:5>
|   |   | `-BinaryOperator 0x1e2920fc758 <line:227:9, col:16> 'int' '='
|   |   |   |-DeclRefExpr 0x1e2920fc700 <col:9> 'int' lvalue Var 0x1e292104298 'ttag' 'int'
|   |   |   `-ImplicitCastExpr 0x1e2920fc740 <col:16> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e2920fc720 <col:16> 'int' lvalue ParmVar 0x1e292103ee8 'tag' 'int'
|   |   `-CompoundStmt 0x1e2920fc8d0 <line:229:12, line:232:5>
|   |     |-BinaryOperator 0x1e2920fc848 <line:230:9, col:17> 'int' '='
|   |     | |-DeclRefExpr 0x1e2920fc7e8 <col:9> 'int' lvalue Var 0x1e292104298 'ttag' 'int'
|   |     | `-UnaryOperator 0x1e2920fc830 <col:16, col:17> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x1e2920fc808 <col:17> 'int' 1
|   |     `-BinaryOperator 0x1e2920fc8b0 <line:231:9, col:18> 'int' '='
|   |       |-DeclRefExpr 0x1e2920fc868 <col:9> 'int' lvalue Var 0x1e292104318 'tclass' 'int'
|   |       `-IntegerLiteral 0x1e2920fc888 <col:18> 'int' 0
|   |-IfStmt 0x1e2920fcab8 <line:244:5, line:247:16> has_else
|   | |-OpaqueValueExpr 0x1e2920fcaa0 <<invalid sloc>> '_Bool'
|   | |-BinaryOperator 0x1e2920fca18 <line:245:9, col:16> 'int' '='
|   | | |-DeclRefExpr 0x1e2920fc9b8 <col:9> 'int' lvalue Var 0x1e292104398 'ndef' 'int'
|   | | `-IntegerLiteral 0x1e2920fc9f0 <col:16> 'int' 2
|   | `-BinaryOperator 0x1e2920fca80 <line:247:9, col:16> 'int' '='
|   |   |-DeclRefExpr 0x1e2920fca38 <col:9> 'int' lvalue Var 0x1e292104398 'ndef' 'int'
|   |   `-IntegerLiteral 0x1e2920fca58 <col:16> 'int' 1
|   |-IfStmt 0x1e2920fdaa8 <line:249:5, line:321:5>
|   | |-OpaqueValueExpr 0x1e2920fda90 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e2920fda10 <line:249:36, line:321:5>
|   |   |-DeclStmt 0x1e2920fcdd0 <line:252:9, col:35>
|   |   | |-VarDecl 0x1e2920fcc48 <col:9, col:13> col:13 used isset 'int'
|   |   | |-VarDecl 0x1e2920fccc8 <col:9, col:20> col:20 used sktag 'int'
|   |   | `-VarDecl 0x1e2920fcd48 <col:9, col:27> col:27 used skaclass 'int'
|   |   |-DeclStmt 0x1e2920fcf00 <line:253:9, col:29>
|   |   | |-VarDecl 0x1e2920fce00 <col:9, col:13> col:13 used skcontlen 'int'
|   |   | `-VarDecl 0x1e2920fce80 <col:9, col:24> col:24 used sklen 'int'
|   |   |-IfStmt 0x1e2920fcf68 <line:256:9, line:257:20>
|   |   | |-OpaqueValueExpr 0x1e2920fcf50 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1e2920fcf40 <col:13, col:20>
|   |   |   `-IntegerLiteral 0x1e2920fcf18 <col:20> 'int' 0
|   |   |-IfStmt 0x1e2920fd178 <line:259:9, line:265:21> has_else
|   |   | |-OpaqueValueExpr 0x1e2920fd160 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1e2920fd0d8 <line:259:39, line:264:9>
|   |   | | |-BinaryOperator 0x1e2920fd000 <line:260:13, col:21> 'int' '='
|   |   | | | |-DeclRefExpr 0x1e2920fcfa0 <col:13> 'int' lvalue Var 0x1e2920fcc48 'isset' 'int'
|   |   | | | `-IntegerLiteral 0x1e2920fcfd8 <col:21> 'int' 1
|   |   | | `-IfStmt 0x1e2920fd0c0 <line:262:13, line:263:25>
|   |   | |   |-OpaqueValueExpr 0x1e2920fd0a8 <<invalid sloc>> '_Bool'
|   |   | |   `-BinaryOperator 0x1e2920fd088 <col:17, col:25> 'int' '='
|   |   | |     |-DeclRefExpr 0x1e2920fd040 <col:17> 'int' lvalue Var 0x1e2920fcc48 'isset' 'int'
|   |   | |     `-IntegerLiteral 0x1e2920fd060 <col:25> 'int' 2
|   |   | `-BinaryOperator 0x1e2920fd140 <line:265:13, col:21> 'int' '='
|   |   |   |-DeclRefExpr 0x1e2920fd0f8 <col:13> 'int' lvalue Var 0x1e2920fcc48 'isset' 'int'
|   |   |   `-IntegerLiteral 0x1e2920fd118 <col:21> 'int' 0
|   |   |-IfStmt 0x1e2920fd478 <line:271:9, line:280:9> has_else
|   |   | |-OpaqueValueExpr 0x1e2920fd460 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1e2920fd398 <line:271:58, line:274:9>
|   |   | | |-BinaryOperator 0x1e2920fd2e8 <line:272:13, col:21> 'int' '='
|   |   | | | |-DeclRefExpr 0x1e2920fd278 <col:13> 'int' lvalue Var 0x1e2920fccc8 'sktag' 'int'
|   |   | | | `-ImplicitCastExpr 0x1e2920fd2d0 <col:21> 'int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1e2920fd2b0 <col:21> 'int' lvalue Var 0x1e292104298 'ttag' 'int'
|   |   | | `-BinaryOperator 0x1e2920fd378 <line:273:13, col:24> 'int' '='
|   |   | |   |-DeclRefExpr 0x1e2920fd308 <col:13> 'int' lvalue Var 0x1e2920fcd48 'skaclass' 'int'
|   |   | |   `-ImplicitCastExpr 0x1e2920fd360 <col:24> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1e2920fd340 <col:24> 'int' lvalue Var 0x1e292104318 'tclass' 'int'
|   |   | `-CompoundStmt 0x1e2920fd450 <line:274:16, line:280:9>
|   |   |-BinaryOperator 0x1e2920fd500 <line:283:9, col:21> 'int' '='
|   |   | |-DeclRefExpr 0x1e2920fd4a0 <col:9> 'int' lvalue Var 0x1e2920fce00 'skcontlen' 'int'
|   |   | `-IntegerLiteral 0x1e2920fd4d8 <col:21> 'int' 0
|   |   |-BinaryOperator 0x1e292104ee8 <line:293:9, col:56> 'int' '='
|   |   | |-DeclRefExpr 0x1e292104d98 <col:9> 'int' lvalue Var 0x1e2920fce80 'sklen' 'int'
|   |   | `-CallExpr 0x1e292104e68 <col:17, col:56> 'int'
|   |   |   |-ImplicitCastExpr 0x1e292104e50 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1e292104dd0 <col:17> 'int ()' Function 0x1e292102fa8 'ASN1_object_size' 'int ()'
|   |   |   |-ImplicitCastExpr 0x1e292104ea0 <col:34> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e292104df0 <col:34> 'int' lvalue Var 0x1e292104398 'ndef' 'int'
|   |   |   |-ImplicitCastExpr 0x1e292104eb8 <col:40> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e292104e10 <col:40> 'int' lvalue Var 0x1e2920fce00 'skcontlen' 'int'
|   |   |   `-ImplicitCastExpr 0x1e292104ed0 <col:51> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e292104e30 <col:51> 'int' lvalue Var 0x1e2920fccc8 'sktag' 'int'
|   |   |-IfStmt 0x1e292104ff0 <line:294:9, line:295:21>
|   |   | |-BinaryOperator 0x1e292104f80 <line:294:13, col:23> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1e292104f68 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1e292104f08 <col:13> 'int' lvalue Var 0x1e2920fce80 'sklen' 'int'
|   |   | | `-UnaryOperator 0x1e292104f50 <col:22, col:23> 'int' prefix '-'
|   |   | |   `-IntegerLiteral 0x1e292104f28 <col:23> 'int' 1
|   |   | `-ReturnStmt 0x1e292104fe0 <line:295:13, col:21>
|   |   |   `-UnaryOperator 0x1e292104fc8 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x1e292104fa0 <col:21> 'int' 1
|   |   |-IfStmt 0x1e292105228 <line:297:9, line:300:19> has_else
|   |   | |-OpaqueValueExpr 0x1e292105210 <<invalid sloc>> '_Bool'
|   |   | |-BinaryOperator 0x1e292105178 <line:298:13, col:53> 'int' '='
|   |   | | |-DeclRefExpr 0x1e292105028 <col:13> 'int' lvalue Var 0x1e292104198 'ret' 'int'
|   |   | | `-CallExpr 0x1e2921050f8 <col:19, col:53> 'int'
|   |   | |   |-ImplicitCastExpr 0x1e2921050e0 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | `-DeclRefExpr 0x1e292105060 <col:19> 'int ()' Function 0x1e292102fa8 'ASN1_object_size' 'int ()'
|   |   | |   |-ImplicitCastExpr 0x1e292105130 <col:36> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x1e292105080 <col:36> 'int' lvalue Var 0x1e292104398 'ndef' 'int'
|   |   | |   |-ImplicitCastExpr 0x1e292105148 <col:42> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x1e2921050a0 <col:42> 'int' lvalue Var 0x1e2920fce80 'sklen' 'int'
|   |   | |   `-ImplicitCastExpr 0x1e292105160 <col:49> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1e2921050c0 <col:49> 'int' lvalue Var 0x1e292104298 'ttag' 'int'
|   |   | `-BinaryOperator 0x1e2921051f0 <line:300:13, col:19> 'int' '='
|   |   |   |-DeclRefExpr 0x1e292105198 <col:13> 'int' lvalue Var 0x1e292104198 'ret' 'int'
|   |   |   `-ImplicitCastExpr 0x1e2921051d8 <col:19> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e2921051b8 <col:19> 'int' lvalue Var 0x1e2920fce80 'sklen' 'int'
|   |   |-IfStmt 0x1e2921053b8 <line:302:9, line:303:20>
|   |   | |-BinaryOperator 0x1e292105350 <line:302:13, col:29> 'int' '||'
|   |   | | |-UnaryOperator 0x1e2921052a0 <col:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | | `-ImplicitCastExpr 0x1e292105288 <col:14> 'unsigned char **' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x1e292105250 <col:14> 'unsigned char **' lvalue ParmVar 0x1e292103de8 'out' 'unsigned char **'
|   |   | | `-BinaryOperator 0x1e292105330 <col:21, col:29> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x1e292105318 <col:21> 'int' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x1e2921052b8 <col:21> 'int' lvalue Var 0x1e292104198 'ret' 'int'
|   |   | |   `-UnaryOperator 0x1e292105300 <col:28, col:29> 'int' prefix '-'
|   |   | |     `-IntegerLiteral 0x1e2921052d8 <col:29> 'int' 1
|   |   | `-ReturnStmt 0x1e2921053a8 <line:303:13, col:20>
|   |   |   `-ImplicitCastExpr 0x1e292105390 <col:20> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e292105370 <col:20> 'int' lvalue Var 0x1e292104198 'ret' 'int'
|   |   |-IfStmt 0x1e2921055a0 <line:307:9, line:308:59>
|   |   | |-OpaqueValueExpr 0x1e292105588 <<invalid sloc>> '_Bool'
|   |   | `-CallExpr 0x1e2921054c8 <col:13, col:59> 'int'
|   |   |   |-ImplicitCastExpr 0x1e2921054b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1e2921053f0 <col:13> 'int ()' Function 0x1e292103338 'ASN1_put_object' 'int ()'
|   |   |   |-ImplicitCastExpr 0x1e292105510 <col:29> 'unsigned char **' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e292105410 <col:29> 'unsigned char **' lvalue ParmVar 0x1e292103de8 'out' 'unsigned char **'
|   |   |   |-ImplicitCastExpr 0x1e292105528 <col:34> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e292105430 <col:34> 'int' lvalue Var 0x1e292104398 'ndef' 'int'
|   |   |   |-ImplicitCastExpr 0x1e292105540 <col:40> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e292105450 <col:40> 'int' lvalue Var 0x1e2920fce80 'sklen' 'int'
|   |   |   |-ImplicitCastExpr 0x1e292105558 <col:47> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e292105470 <col:47> 'int' lvalue Var 0x1e292104298 'ttag' 'int'
|   |   |   `-ImplicitCastExpr 0x1e292105570 <col:53> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e292105490 <col:53> 'int' lvalue Var 0x1e292104318 'tclass' 'int'
|   |   |-CallExpr 0x1e292105690 <line:310:9, col:62> 'int'
|   |   | |-ImplicitCastExpr 0x1e292105678 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1e2921055b8 <col:9> 'int ()' Function 0x1e292103338 'ASN1_put_object' 'int ()'
|   |   | |-ImplicitCastExpr 0x1e2921056d8 <col:25> 'unsigned char **' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1e2921055d8 <col:25> 'unsigned char **' lvalue ParmVar 0x1e292103de8 'out' 'unsigned char **'
|   |   | |-ImplicitCastExpr 0x1e2921056f0 <col:30> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1e2921055f8 <col:30> 'int' lvalue Var 0x1e292104398 'ndef' 'int'
|   |   | |-ImplicitCastExpr 0x1e292105708 <col:36> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1e292105618 <col:36> 'int' lvalue Var 0x1e2920fce00 'skcontlen' 'int'
|   |   | |-ImplicitCastExpr 0x1e292105720 <col:47> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1e292105638 <col:47> 'int' lvalue Var 0x1e2920fccc8 'sktag' 'int'
|   |   | `-ImplicitCastExpr 0x1e292105738 <col:54> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e292105658 <col:54> 'int' lvalue Var 0x1e2920fcd48 'skaclass' 'int'
|   |   |-IfStmt 0x1e2920fd9b0 <line:314:9, line:318:9>
|   |   | |-BinaryOperator 0x1e2920fd7f0 <line:314:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1e2920fd7d8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1e2920fd790 <col:13> 'int' lvalue Var 0x1e292104398 'ndef' 'int'
|   |   | | `-IntegerLiteral 0x1e2920fd7b0 <col:21> 'int' 2
|   |   | `-CompoundStmt 0x1e2920fd990 <col:24, line:318:9>
|   |   |   |-CallExpr 0x1e2920fd868 <line:315:13, col:29> 'int'
|   |   |   | |-ImplicitCastExpr 0x1e2920fd850 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1e2920fd810 <col:13> 'int ()' Function 0x1e2921038e8 'ASN1_put_eoc' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x1e2920fd890 <col:26> 'unsigned char **' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1e2920fd830 <col:26> 'unsigned char **' lvalue ParmVar 0x1e292103de8 'out' 'unsigned char **'
|   |   |   `-IfStmt 0x1e2920fd978 <line:316:13, line:317:33>
|   |   |     |-OpaqueValueExpr 0x1e2920fd960 <<invalid sloc>> '_Bool'
|   |   |     `-CallExpr 0x1e2920fd920 <col:17, col:33> 'int'
|   |   |       |-ImplicitCastExpr 0x1e2920fd908 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x1e2920fd8c8 <col:17> 'int ()' Function 0x1e2921038e8 'ASN1_put_eoc' 'int ()'
|   |   |       `-ImplicitCastExpr 0x1e2920fd948 <col:30> 'unsigned char **' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1e2920fd8e8 <col:30> 'unsigned char **' lvalue ParmVar 0x1e292103de8 'out' 'unsigned char **'
|   |   `-ReturnStmt 0x1e2920fda00 <line:320:9, col:16>
|   |     `-ImplicitCastExpr 0x1e2920fd9e8 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e2920fd9c8 <col:16> 'int' lvalue Var 0x1e292104198 'ret' 'int'
|   `-IfStmt 0x1e2920fe320 <line:323:5, line:339:5>
|     |-OpaqueValueExpr 0x1e2920fe308 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1e2920fe2d8 <line:323:35, line:339:5>
|       |-IfStmt 0x1e2920fdc90 <line:327:9, line:328:20>
|       | |-UnaryOperator 0x1e2920fdc40 <line:327:13, col:14> 'int' prefix '!' cannot overflow
|       | | `-ImplicitCastExpr 0x1e2920fdc28 <col:14> 'int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x1e2920fdc08 <col:14> 'int' lvalue Var 0x1e292104118 'i' 'int'
|       | `-ReturnStmt 0x1e2920fdc80 <line:328:13, col:20>
|       |   `-IntegerLiteral 0x1e2920fdc58 <col:20> 'int' 0
|       |-BinaryOperator 0x1e2920fdde0 <line:330:9, col:45> 'int' '='
|       | |-DeclRefExpr 0x1e2920fdca8 <col:9> 'int' lvalue Var 0x1e292104198 'ret' 'int'
|       | `-CallExpr 0x1e2920fdd60 <col:15, col:45> 'int'
|       |   |-ImplicitCastExpr 0x1e2920fdd48 <col:15> 'int (*)()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x1e2920fdcc8 <col:15> 'int ()' Function 0x1e292102fa8 'ASN1_object_size' 'int ()'
|       |   |-ImplicitCastExpr 0x1e2920fdd98 <col:32> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1e2920fdce8 <col:32> 'int' lvalue Var 0x1e292104398 'ndef' 'int'
|       |   |-ImplicitCastExpr 0x1e2920fddb0 <col:38> 'int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1e2920fdd08 <col:38> 'int' lvalue Var 0x1e292104118 'i' 'int'
|       |   `-ImplicitCastExpr 0x1e2920fddc8 <col:41> 'int' <LValueToRValue>
|       |     `-DeclRefExpr 0x1e2920fdd28 <col:41> 'int' lvalue Var 0x1e292104298 'ttag' 'int'
|       |-IfStmt 0x1e2920fe278 <line:331:9, line:337:9>
|       | |-BinaryOperator 0x1e2920fded0 <line:331:13, col:28> 'int' '&&'
|       | | |-ImplicitCastExpr 0x1e2920fdeb8 <col:13> 'unsigned char **' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1e2920fde00 <col:13> 'unsigned char **' lvalue ParmVar 0x1e292103de8 'out' 'unsigned char **'
|       | | `-BinaryOperator 0x1e2920fde98 <col:20, col:28> 'int' '!='
|       | |   |-ImplicitCastExpr 0x1e2920fde80 <col:20> 'int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x1e2920fde20 <col:20> 'int' lvalue Var 0x1e292104198 'ret' 'int'
|       | |   `-UnaryOperator 0x1e2920fde68 <col:27, col:28> 'int' prefix '-'
|       | |     `-IntegerLiteral 0x1e2920fde40 <col:28> 'int' 1
|       | `-CompoundStmt 0x1e2920fe258 <col:31, line:337:9>
|       |   |-CallExpr 0x1e2920fdfc8 <line:333:13, col:55> 'int'
|       |   | |-ImplicitCastExpr 0x1e2920fdfb0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|       |   | | `-DeclRefExpr 0x1e2920fdef0 <col:13> 'int ()' Function 0x1e292103338 'ASN1_put_object' 'int ()'
|       |   | |-ImplicitCastExpr 0x1e2920fe010 <col:29> 'unsigned char **' <LValueToRValue>
|       |   | | `-DeclRefExpr 0x1e2920fdf10 <col:29> 'unsigned char **' lvalue ParmVar 0x1e292103de8 'out' 'unsigned char **'
|       |   | |-ImplicitCastExpr 0x1e2920fe028 <col:34> 'int' <LValueToRValue>
|       |   | | `-DeclRefExpr 0x1e2920fdf30 <col:34> 'int' lvalue Var 0x1e292104398 'ndef' 'int'
|       |   | |-ImplicitCastExpr 0x1e2920fe040 <col:40> 'int' <LValueToRValue>
|       |   | | `-DeclRefExpr 0x1e2920fdf50 <col:40> 'int' lvalue Var 0x1e292104118 'i' 'int'
|       |   | |-ImplicitCastExpr 0x1e2920fe058 <col:43> 'int' <LValueToRValue>
|       |   | | `-DeclRefExpr 0x1e2920fdf70 <col:43> 'int' lvalue Var 0x1e292104298 'ttag' 'int'
|       |   | `-ImplicitCastExpr 0x1e2920fe070 <col:49> 'int' <LValueToRValue>
|       |   |   `-DeclRefExpr 0x1e2920fdf90 <col:49> 'int' lvalue Var 0x1e292104318 'tclass' 'int'
|       |   `-IfStmt 0x1e2920fe240 <line:335:13, line:336:33>
|       |     |-BinaryOperator 0x1e2920fe188 <line:335:17, col:25> 'int' '=='
|       |     | |-ImplicitCastExpr 0x1e2920fe170 <col:17> 'int' <LValueToRValue>
|       |     | | `-DeclRefExpr 0x1e2920fe128 <col:17> 'int' lvalue Var 0x1e292104398 'ndef' 'int'
|       |     | `-IntegerLiteral 0x1e2920fe148 <col:25> 'int' 2
|       |     `-CallExpr 0x1e2920fe200 <line:336:17, col:33> 'int'
|       |       |-ImplicitCastExpr 0x1e2920fe1e8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|       |       | `-DeclRefExpr 0x1e2920fe1a8 <col:17> 'int ()' Function 0x1e2921038e8 'ASN1_put_eoc' 'int ()'
|       |       `-ImplicitCastExpr 0x1e2920fe228 <col:30> 'unsigned char **' <LValueToRValue>
|       |         `-DeclRefExpr 0x1e2920fe1c8 <col:30> 'unsigned char **' lvalue ParmVar 0x1e292103de8 'out' 'unsigned char **'
|       `-ReturnStmt 0x1e2920fe2c8 <line:338:9, col:16>
|         `-ImplicitCastExpr 0x1e2920fe2b0 <col:16> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x1e2920fe290 <col:16> 'int' lvalue Var 0x1e292104198 'ret' 'int'
|-RecordDecl 0x1e2920fe468 <line:349:9, line:353:1> line:349:9 invalid struct definition
| |-FieldDecl 0x1e2920fe538 <line:350:5, col:20> col:20 referenced data 'unsigned char *'
| |-FieldDecl 0x1e2920fe5a8 <line:351:5, col:9> col:9 referenced length 'int'
| `-FieldDecl 0x1e2920fe618 <line:352:5, col:17> col:17 invalid field 'int *'
|-TypedefDecl 0x1e29210c800 <line:349:1, line:353:3> col:3 referenced DER_ENC 'struct (anonymous struct at .//openssl//file_jk/after\crypto\asn1\tasn_enc.c:349:9)':'struct (anonymous at .//openssl//file_jk/after\crypto\asn1\tasn_enc.c:349:9)'
| `-ElaboratedType 0x1e2920fe670 'struct (anonymous struct at .//openssl//file_jk/after\crypto\asn1\tasn_enc.c:349:9)' sugar
|   `-RecordType 0x1e2920fe500 'struct (anonymous at .//openssl//file_jk/after\crypto\asn1\tasn_enc.c:349:9)'
|     `-Record 0x1e2920fe468 ''
|-FunctionDecl 0x1e29210ca10 <line:355:1, line:364:1> line:355:12 used der_cmp 'int (const void *, const void *)' static
| |-ParmVarDecl 0x1e29210c888 <col:20, col:32> col:32 used a 'const void *'
| |-ParmVarDecl 0x1e29210c908 <col:35, col:47> col:47 used b 'const void *'
| `-CompoundStmt 0x1e29210d5c0 <line:356:1, line:364:1>
|   |-DeclStmt 0x1e29210cd00 <line:357:5, col:35>
|   | |-VarDecl 0x1e29210cb68 <col:5, col:25> col:20 used d1 'const DER_ENC *' cinit
|   | | `-ImplicitCastExpr 0x1e29210cc08 <col:25> 'const DER_ENC *' <BitCast>
|   | |   `-ImplicitCastExpr 0x1e29210cbf0 <col:25> 'const void *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x1e29210cbd0 <col:25> 'const void *' lvalue ParmVar 0x1e29210c888 'a' 'const void *'
|   | `-VarDecl 0x1e29210cc30 <col:5, col:34> col:29 used d2 'const DER_ENC *' cinit
|   |   `-ImplicitCastExpr 0x1e29210ccd0 <col:34> 'const DER_ENC *' <BitCast>
|   |     `-ImplicitCastExpr 0x1e29210ccb8 <col:34> 'const void *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e29210cc98 <col:34> 'const void *' lvalue ParmVar 0x1e29210c908 'b' 'const void *'
|   |-DeclStmt 0x1e29210ce30 <line:358:5, col:18>
|   | |-VarDecl 0x1e29210cd30 <col:5, col:9> col:9 used cmplen 'int'
|   | `-VarDecl 0x1e29210cdb0 <col:5, col:17> col:17 used i 'int'
|   |-BinaryOperator 0x1e29210d120 <line:359:5, col:59> 'int' '='
|   | |-DeclRefExpr 0x1e29210ce48 <col:5> 'int' lvalue Var 0x1e29210cd30 'cmplen' 'int'
|   | `-ConditionalOperator 0x1e29210d0f0 <col:14, col:59> 'int'
|   |   |-ParenExpr 0x1e29210cfd0 <col:14, col:38> 'int'
|   |   | `-BinaryOperator 0x1e29210cfb0 <col:15, col:32> 'int' '<'
|   |   |   |-ImplicitCastExpr 0x1e29210cf80 <col:15, col:19> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x1e29210ced0 <col:15, col:19> 'const int' lvalue ->length 0x1e2920fe5a8
|   |   |   |   `-ImplicitCastExpr 0x1e29210ceb8 <col:15> 'const DER_ENC *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1e29210ce80 <col:15> 'const DER_ENC *' lvalue Var 0x1e29210cb68 'd1' 'const DER_ENC *'
|   |   |   `-ImplicitCastExpr 0x1e29210cf98 <col:28, col:32> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x1e29210cf50 <col:28, col:32> 'const int' lvalue ->length 0x1e2920fe5a8
|   |   |       `-ImplicitCastExpr 0x1e29210cf38 <col:28> 'const DER_ENC *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1e29210cf00 <col:28> 'const DER_ENC *' lvalue Var 0x1e29210cc30 'd2' 'const DER_ENC *'
|   |   |-ImplicitCastExpr 0x1e29210d0c0 <col:42, col:46> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x1e29210d028 <col:42, col:46> 'const int' lvalue ->length 0x1e2920fe5a8
|   |   |   `-ImplicitCastExpr 0x1e29210d010 <col:42> 'const DER_ENC *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e29210cff0 <col:42> 'const DER_ENC *' lvalue Var 0x1e29210cb68 'd1' 'const DER_ENC *'
|   |   `-ImplicitCastExpr 0x1e29210d0d8 <col:55, col:59> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1e29210d090 <col:55, col:59> 'const int' lvalue ->length 0x1e2920fe5a8
|   |       `-ImplicitCastExpr 0x1e29210d078 <col:55> 'const DER_ENC *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1e29210d058 <col:55> 'const DER_ENC *' lvalue Var 0x1e29210cc30 'd2' 'const DER_ENC *'
|   |-BinaryOperator 0x1e29210d3d8 <line:360:5, col:42> 'int' '='
|   | |-DeclRefExpr 0x1e29210d140 <col:5> 'int' lvalue Var 0x1e29210cdb0 'i' 'int'
|   | `-CallExpr 0x1e29210d310 <col:9, col:42> 'int'
|   |   |-ImplicitCastExpr 0x1e29210d2f8 <col:9> 'int (*)(const void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e29210d178 <col:9> 'int (const void *, const void *, unsigned long long)' Function 0x1e29209a188 'memcmp' 'int (const void *, const void *, unsigned long long)'
|   |   |-ImplicitCastExpr 0x1e29210d360 <col:16, col:20> 'const void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x1e29210d348 <col:16, col:20> 'unsigned char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1e29210d1d0 <col:16, col:20> 'unsigned char *const' lvalue ->data 0x1e2920fe538
|   |   |     `-ImplicitCastExpr 0x1e29210d1b8 <col:16> 'const DER_ENC *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1e29210d198 <col:16> 'const DER_ENC *' lvalue Var 0x1e29210cb68 'd1' 'const DER_ENC *'
|   |   |-ImplicitCastExpr 0x1e29210d390 <col:26, col:30> 'const void *' <BitCast>
|   |   | `-ImplicitCastExpr 0x1e29210d378 <col:26, col:30> 'unsigned char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1e29210d238 <col:26, col:30> 'unsigned char *const' lvalue ->data 0x1e2920fe538
|   |   |     `-ImplicitCastExpr 0x1e29210d220 <col:26> 'const DER_ENC *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1e29210d200 <col:26> 'const DER_ENC *' lvalue Var 0x1e29210cc30 'd2' 'const DER_ENC *'
|   |   `-ImplicitCastExpr 0x1e29210d3c0 <col:36> 'unsigned long long' <IntegralCast>
|   |     `-ImplicitCastExpr 0x1e29210d3a8 <col:36> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e29210d268 <col:36> 'int' lvalue Var 0x1e29210cd30 'cmplen' 'int'
|   |-IfStmt 0x1e29210d478 <line:361:5, line:362:16>
|   | |-ImplicitCastExpr 0x1e29210d418 <line:361:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e29210d3f8 <col:9> 'int' lvalue Var 0x1e29210cdb0 'i' 'int'
|   | `-ReturnStmt 0x1e29210d468 <line:362:9, col:16>
|   |   `-ImplicitCastExpr 0x1e29210d450 <col:16> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1e29210d430 <col:16> 'int' lvalue Var 0x1e29210cdb0 'i' 'int'
|   `-ReturnStmt 0x1e29210d5b0 <line:363:5, col:29>
|     `-BinaryOperator 0x1e29210d590 <col:12, col:29> 'int' '-'
|       |-ImplicitCastExpr 0x1e29210d560 <col:12, col:16> 'int' <LValueToRValue>
|       | `-MemberExpr 0x1e29210d4c8 <col:12, col:16> 'const int' lvalue ->length 0x1e2920fe5a8
|       |   `-ImplicitCastExpr 0x1e29210d4b0 <col:12> 'const DER_ENC *' <LValueToRValue>
|       |     `-DeclRefExpr 0x1e29210d490 <col:12> 'const DER_ENC *' lvalue Var 0x1e29210cb68 'd1' 'const DER_ENC *'
|       `-ImplicitCastExpr 0x1e29210d578 <col:25, col:29> 'int' <LValueToRValue>
|         `-MemberExpr 0x1e29210d530 <col:25, col:29> 'const int' lvalue ->length 0x1e2920fe5a8
|           `-ImplicitCastExpr 0x1e29210d518 <col:25> 'const DER_ENC *' <LValueToRValue>
|             `-DeclRefExpr 0x1e29210d4f8 <col:25> 'const DER_ENC *' lvalue Var 0x1e29210cc30 'd2' 'const DER_ENC *'
|-FunctionDecl 0x1e29210d6c0 <line:368:1, line:427:1> line:368:12 invalid asn1_set_seq_out 'int (int (*)())' static
| |-ParmVarDecl 0x1e29210d628 <col:29, <invalid sloc>> col:29 invalid STACK_OF 'int (*)()':'int (*)()'
| `-CompoundStmt 0x1e292108630 <line:371:1, line:427:1>
|   |-DeclStmt 0x1e2921087c0 <line:372:5, col:10>
|   | `-VarDecl 0x1e29210d798 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x1e292108a30 <line:374:5, col:44>
|   | |-VarDecl 0x1e2921087f0 <col:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/after\crypto\asn1\tasn_enc.c:374:20 used tmpdat 'unsigned char *' cinit
|   | | `-ImplicitCastExpr 0x1e2921088e0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'unsigned char *' <NullToPointer>
|   | |   `-ParenExpr 0x1e2921088c0 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x1e292108898 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e292108858 <col:24> 'int' 0
|   | `-VarDecl 0x1e292108910 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:374:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/after\crypto\asn1\tasn_enc.c:374:36 used p 'unsigned char *' cinit
|   |   `-ImplicitCastExpr 0x1e292108a00 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'unsigned char *' <NullToPointer>
|   |     `-ParenExpr 0x1e2921089e0 <col:16, col:25> 'void *'
|   |       `-CStyleCastExpr 0x1e2921089b8 <col:17, col:24> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1e292108978 <col:24> 'int' 0
|   |-DeclStmt 0x1e292108c50 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:375:5, col:34>
|   | |-VarDecl 0x1e292108ab8 <col:5, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> .//openssl//file_jk/after\crypto\asn1\tasn_enc.c:375:14 used derlst 'DER_ENC *' cinit
|   | | `-ImplicitCastExpr 0x1e292108ba8 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'DER_ENC *' <NullToPointer>
|   | |   `-ParenExpr 0x1e292108b88 <col:16, col:25> 'void *'
|   | |     `-CStyleCastExpr 0x1e292108b60 <col:17, col:24> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e292108b20 <col:24> 'int' 0
|   | `-VarDecl 0x1e292108bd0 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:375:5, col:30> col:30 used tder 'DER_ENC *'
|   |-IfStmt 0x1e292109308 <line:376:5, line:391:5>
|   | |-OpaqueValueExpr 0x1e2921092f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e2921092d8 <line:376:18, line:391:5>
|   |   `-IfStmt 0x1e2921092b0 <line:378:9, line:390:9> has_else
|   |     |-OpaqueValueExpr 0x1e292109298 <<invalid sloc>> '_Bool'
|   |     |-NullStmt 0x1e292109290 <line:379:13>
|   |     `-CompoundStmt 0x1e292109270 <line:380:14, line:390:9>
|   |       |-IfStmt 0x1e292108f10 <line:383:13, line:384:24>
|   |       | |-BinaryOperator 0x1e292108eb8 <line:383:17, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x1e292108e88 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:383:17> 'DER_ENC *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1e292108de0 <col:17> 'DER_ENC *' lvalue Var 0x1e292108ab8 'derlst' 'DER_ENC *'
|   |       | | `-ImplicitCastExpr 0x1e292108ea0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'DER_ENC *' <BitCast>
|   |       | |   `-ParenExpr 0x1e292108e68 <col:16, col:25> 'void *'
|   |       | |     `-CStyleCastExpr 0x1e292108e40 <col:17, col:24> 'void *' <NullToPointer>
|   |       | |       `-IntegerLiteral 0x1e292108e00 <col:24> 'int' 0
|   |       | `-ReturnStmt 0x1e292108f00 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:384:17, col:24>
|   |       |   `-IntegerLiteral 0x1e292108ed8 <col:24> 'int' 0
|   |       `-IfStmt 0x1e292109258 <line:386:13, line:389:13>
|   |         |-BinaryOperator 0x1e292109058 <line:386:17, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
|   |         | |-ImplicitCastExpr 0x1e292109028 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:386:17> 'unsigned char *' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1e292108f80 <col:17> 'unsigned char *' lvalue Var 0x1e2921087f0 'tmpdat' 'unsigned char *'
|   |         | `-ImplicitCastExpr 0x1e292109040 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'unsigned char *' <BitCast>
|   |         |   `-ParenExpr 0x1e292109008 <col:16, col:25> 'void *'
|   |         |     `-CStyleCastExpr 0x1e292108fe0 <col:17, col:24> 'void *' <NullToPointer>
|   |         |       `-IntegerLiteral 0x1e292108fa0 <col:24> 'int' 0
|   |         `-CompoundStmt 0x1e292109238 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:386:33, line:389:13>
|   |           |-CallExpr 0x1e2921091c0 <line:387:17, col:36> 'int'
|   |           | |-ImplicitCastExpr 0x1e2921091a8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x1e292109168 <col:17> 'int ()' Function 0x1e2921090a0 'OPENSSL_free' 'int ()'
|   |           | `-ImplicitCastExpr 0x1e2921091e8 <col:30> 'DER_ENC *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x1e292109188 <col:30> 'DER_ENC *' lvalue Var 0x1e292108ab8 'derlst' 'DER_ENC *'
|   |           `-ReturnStmt 0x1e292109228 <line:388:17, col:24>
|   |             `-IntegerLiteral 0x1e292109200 <col:24> 'int' 0
|   |-IfStmt 0x1e292109510 <line:393:5, line:399:5>
|   | |-OpaqueValueExpr 0x1e2921094f8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e2921094e0 <line:393:19, line:399:5>
|   |   `-ReturnStmt 0x1e2921094d0 <line:398:9, col:16>
|   |     `-IntegerLiteral 0x1e2921094a8 <col:16> 'int' 1
|   |-BinaryOperator 0x1e292109598 <line:400:5, col:9> 'unsigned char *' '='
|   | |-DeclRefExpr 0x1e292109528 <col:5> 'unsigned char *' lvalue Var 0x1e292108910 'p' 'unsigned char *'
|   | `-ImplicitCastExpr 0x1e292109580 <col:9> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e292109560 <col:9> 'unsigned char *' lvalue Var 0x1e2921087f0 'tmpdat' 'unsigned char *'
|   |-IfStmt 0x1e2921084b0 <line:420:5, line:423:5>
|   | |-OpaqueValueExpr 0x1e292108498 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e292108488 <line:420:23, line:423:5>
|   |-CallExpr 0x1e292108520 <line:424:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x1e292108508 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e2921084c8 <col:5> 'int ()' Function 0x1e2921090a0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e292108548 <col:18> 'DER_ENC *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e2921084e8 <col:18> 'DER_ENC *' lvalue Var 0x1e292108ab8 'derlst' 'DER_ENC *'
|   |-CallExpr 0x1e2921085b8 <line:425:5, col:24> 'int'
|   | |-ImplicitCastExpr 0x1e2921085a0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e292108560 <col:5> 'int ()' Function 0x1e2921090a0 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e2921085e0 <col:18> 'unsigned char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e292108580 <col:18> 'unsigned char *' lvalue Var 0x1e2921087f0 'tmpdat' 'unsigned char *'
|   `-ReturnStmt 0x1e292108620 <line:426:5, col:12>
|     `-IntegerLiteral 0x1e2921085f8 <col:12> 'int' 1
|-FunctionDecl 0x1e29210a9b0 <line:429:1, line:485:1> line:429:12 invalid asn1_i2d_ex_primitive 'int (int **, unsigned char **, const int *, int, int)' static
| |-ParmVarDecl 0x1e2921086b0 <col:34, col:47> col:47 invalid pval 'int **'
| |-ParmVarDecl 0x1e292108738 <col:53, col:69> col:69 used out 'unsigned char **'
| |-ParmVarDecl 0x1e29210a7f8 <line:430:34, col:51> col:51 invalid it 'const int *'
| |-ParmVarDecl 0x1e29210a878 <col:55, col:59> col:59 used tag 'int'
| |-ParmVarDecl 0x1e29210a8f8 <col:64, col:68> col:68 used aclass 'int'
| `-CompoundStmt 0x1e29210ba40 <line:431:1, line:485:1>
|   |-DeclStmt 0x1e29210ab10 <line:432:5, col:12>
|   | `-VarDecl 0x1e29210aaa8 <col:5, col:9> col:9 used len 'int'
|   |-DeclStmt 0x1e29210aba8 <line:433:5, col:14>
|   | `-VarDecl 0x1e29210ab40 <col:5, col:9> col:9 used utype 'int'
|   |-DeclStmt 0x1e29210ac40 <line:434:5, col:15>
|   | `-VarDecl 0x1e29210abd8 <col:5, col:9> col:9 used usetag 'int'
|   |-DeclStmt 0x1e29210ad00 <line:435:5, col:17>
|   | `-VarDecl 0x1e29210ac70 <col:5, col:16> col:9 used ndef 'int' cinit
|   |   `-IntegerLiteral 0x1e29210acd8 <col:16> 'int' 0
|   |-IfStmt 0x1e29210afa8 <line:450:5, line:454:18> has_else
|   | |-OpaqueValueExpr 0x1e29210af90 <<invalid sloc>> '_Bool'
|   | |-BinaryOperator 0x1e29210af08 <line:452:9, col:18> 'int' '='
|   | | |-DeclRefExpr 0x1e29210aea8 <col:9> 'int' lvalue Var 0x1e29210abd8 'usetag' 'int'
|   | | `-IntegerLiteral 0x1e29210aee0 <col:18> 'int' 0
|   | `-BinaryOperator 0x1e29210af70 <line:454:9, col:18> 'int' '='
|   |   |-DeclRefExpr 0x1e29210af28 <col:9> 'int' lvalue Var 0x1e29210abd8 'usetag' 'int'
|   |   `-IntegerLiteral 0x1e29210af48 <col:18> 'int' 1
|   |-IfStmt 0x1e29210b0a0 <line:458:5, line:459:16>
|   | |-BinaryOperator 0x1e29210b048 <line:458:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e29210b030 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e29210afd0 <col:9> 'int' lvalue Var 0x1e29210aaa8 'len' 'int'
|   | | `-UnaryOperator 0x1e29210b018 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1e29210aff0 <col:17> 'int' 1
|   | `-ReturnStmt 0x1e29210b090 <line:459:9, col:16>
|   |   `-IntegerLiteral 0x1e29210b068 <col:16> 'int' 0
|   |-IfStmt 0x1e29210b258 <line:462:5, line:465:5>
|   | |-BinaryOperator 0x1e29210b130 <line:462:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e29210b118 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e29210b0b8 <col:9> 'int' lvalue Var 0x1e29210aaa8 'len' 'int'
|   | | `-UnaryOperator 0x1e29210b100 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1e29210b0d8 <col:17> 'int' 2
|   | `-CompoundStmt 0x1e29210b238 <col:20, line:465:5>
|   |   |-BinaryOperator 0x1e29210b1b0 <line:463:9, col:16> 'int' '='
|   |   | |-DeclRefExpr 0x1e29210b150 <col:9> 'int' lvalue Var 0x1e29210ac70 'ndef' 'int'
|   |   | `-IntegerLiteral 0x1e29210b188 <col:16> 'int' 2
|   |   `-BinaryOperator 0x1e29210b218 <line:464:9, col:15> 'int' '='
|   |     |-DeclRefExpr 0x1e29210b1d0 <col:9> 'int' lvalue Var 0x1e29210aaa8 'len' 'int'
|   |     `-IntegerLiteral 0x1e29210b1f0 <col:15> 'int' 0
|   |-IfStmt 0x1e29210b398 <line:468:5, line:469:15>
|   | |-BinaryOperator 0x1e29210b300 <line:468:9, col:17> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e29210b2e8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e29210b270 <col:9> 'int' lvalue ParmVar 0x1e29210a878 'tag' 'int'
|   | | `-UnaryOperator 0x1e29210b2d0 <col:16, col:17> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1e29210b2a8 <col:17> 'int' 1
|   | `-BinaryOperator 0x1e29210b378 <line:469:9, col:15> 'int' '='
|   |   |-DeclRefExpr 0x1e29210b320 <col:9> 'int' lvalue ParmVar 0x1e29210a878 'tag' 'int'
|   |   `-ImplicitCastExpr 0x1e29210b360 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1e29210b340 <col:15> 'int' lvalue Var 0x1e29210ab40 'utype' 'int'
|   |-IfStmt 0x1e29210b868 <line:472:5, line:480:5>
|   | |-ImplicitCastExpr 0x1e29210b3e8 <line:472:9> 'unsigned char **' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e29210b3b0 <col:9> 'unsigned char **' lvalue ParmVar 0x1e292108738 'out' 'unsigned char **'
|   | `-CompoundStmt 0x1e29210b848 <col:14, line:480:5>
|   |   |-IfStmt 0x1e29210b5e8 <line:473:9, line:474:56>
|   |   | |-ImplicitCastExpr 0x1e29210b420 <line:473:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1e29210b400 <col:13> 'int' lvalue Var 0x1e29210abd8 'usetag' 'int'
|   |   | `-CallExpr 0x1e29210b528 <line:474:13, col:56> 'int'
|   |   |   |-ImplicitCastExpr 0x1e29210b510 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1e29210b438 <col:13> 'int ()' Function 0x1e292103338 'ASN1_put_object' 'int ()'
|   |   |   |-ImplicitCastExpr 0x1e29210b570 <col:29> 'unsigned char **' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e29210b458 <col:29> 'unsigned char **' lvalue ParmVar 0x1e292108738 'out' 'unsigned char **'
|   |   |   |-ImplicitCastExpr 0x1e29210b588 <col:34> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e29210b478 <col:34> 'int' lvalue Var 0x1e29210ac70 'ndef' 'int'
|   |   |   |-ImplicitCastExpr 0x1e29210b5a0 <col:40> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e29210b498 <col:40> 'int' lvalue Var 0x1e29210aaa8 'len' 'int'
|   |   |   |-ImplicitCastExpr 0x1e29210b5b8 <col:45> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e29210b4b8 <col:45> 'int' lvalue ParmVar 0x1e29210a878 'tag' 'int'
|   |   |   `-ImplicitCastExpr 0x1e29210b5d0 <col:50> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e29210b4d8 <col:50> 'int' lvalue ParmVar 0x1e29210a8f8 'aclass' 'int'
|   |   `-IfStmt 0x1e29210b820 <line:476:9, line:479:21> has_else
|   |     |-ImplicitCastExpr 0x1e29210b6a8 <line:476:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1e29210b688 <col:13> 'int' lvalue Var 0x1e29210ac70 'ndef' 'int'
|   |     |-CallExpr 0x1e29210b718 <line:477:13, col:29> 'int'
|   |     | |-ImplicitCastExpr 0x1e29210b700 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x1e29210b6c0 <col:13> 'int ()' Function 0x1e2921038e8 'ASN1_put_eoc' 'int ()'
|   |     | `-ImplicitCastExpr 0x1e29210b740 <col:26> 'unsigned char **' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1e29210b6e0 <col:26> 'unsigned char **' lvalue ParmVar 0x1e292108738 'out' 'unsigned char **'
|   |     `-CompoundAssignOperator 0x1e29210b7f0 <line:479:13, col:21> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
|   |       |-UnaryOperator 0x1e29210b790 <col:13, col:14> 'unsigned char *' lvalue prefix '*' cannot overflow
|   |       | `-ImplicitCastExpr 0x1e29210b778 <col:14> 'unsigned char **' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1e29210b758 <col:14> 'unsigned char **' lvalue ParmVar 0x1e292108738 'out' 'unsigned char **'
|   |       `-ImplicitCastExpr 0x1e29210b7c8 <col:21> 'int' <LValueToRValue>
|   |         `-DeclRefExpr 0x1e29210b7a8 <col:21> 'int' lvalue Var 0x1e29210aaa8 'len' 'int'
|   |-IfStmt 0x1e29210b9e0 <line:482:5, line:483:47>
|   | |-ImplicitCastExpr 0x1e29210b8a0 <line:482:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e29210b880 <col:9> 'int' lvalue Var 0x1e29210abd8 'usetag' 'int'
|   | `-ReturnStmt 0x1e29210b9d0 <line:483:9, col:47>
|   |   `-CallExpr 0x1e29210b950 <col:16, col:47> 'int'
|   |     |-ImplicitCastExpr 0x1e29210b938 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e29210b8b8 <col:16> 'int ()' Function 0x1e292102fa8 'ASN1_object_size' 'int ()'
|   |     |-ImplicitCastExpr 0x1e29210b988 <col:33> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1e29210b8d8 <col:33> 'int' lvalue Var 0x1e29210ac70 'ndef' 'int'
|   |     |-ImplicitCastExpr 0x1e29210b9a0 <col:39> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1e29210b8f8 <col:39> 'int' lvalue Var 0x1e29210aaa8 'len' 'int'
|   |     `-ImplicitCastExpr 0x1e29210b9b8 <col:44> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e29210b918 <col:44> 'int' lvalue ParmVar 0x1e29210a878 'tag' 'int'
|   `-ReturnStmt 0x1e29210ba30 <line:484:5, col:12>
|     `-ImplicitCastExpr 0x1e29210ba18 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1e29210b9f8 <col:12> 'int' lvalue Var 0x1e29210aaa8 'len' 'int'
`-FunctionDecl 0x1e29210bcf8 <line:489:1, line:607:1> line:489:12 invalid asn1_ex_i2c 'int (int **, unsigned char *, int *, const int *)' static
  |-ParmVarDecl 0x1e29210bac8 <col:24, col:37> col:37 invalid pval 'int **'
  |-ParmVarDecl 0x1e29210bb48 <col:43, col:58> col:58 used cout 'unsigned char *'
  |-ParmVarDecl 0x1e29210bbc8 <col:64, col:69> col:69 used putype 'int *'
  |-ParmVarDecl 0x1e29210bc48 <line:490:24, col:41> col:41 invalid it 'const int *'
  `-CompoundStmt 0x1e292106408 <line:491:1, line:607:1>
    |-DeclStmt 0x1e29210bed8 <line:495:5, col:14>
    | `-VarDecl 0x1e29210be70 <col:5, col:9> col:9 used utype 'int'
    |-DeclStmt 0x1e29210bf70 <line:496:5, col:30>
    | `-VarDecl 0x1e29210bf08 <col:5, col:26> col:26 used cont 'const unsigned char *'
    |-DeclStmt 0x1e29210c008 <line:497:5, col:20>
    | `-VarDecl 0x1e29210bfa0 <col:5, col:19> col:19 used c 'unsigned char'
    |-DeclStmt 0x1e29210c0a0 <line:498:5, col:12>
    | `-VarDecl 0x1e29210c038 <col:5, col:9> col:9 used len 'int'
    |-DeclStmt 0x1e29210c138 <line:499:5, col:35>
    | `-VarDecl 0x1e29210c0d0 <col:5, col:33> col:33 invalid pf 'const int *'
    |-IfStmt 0x1e29210c270 <line:505:5, line:509:5>
    | |-OpaqueValueExpr 0x1e29210c258 <<invalid sloc>> '_Bool'
    | `-CompoundStmt 0x1e29210c240 <line:506:43, line:509:5>
    |   `-IfStmt 0x1e29210c228 <line:507:9, line:508:21>
    |     |-OpaqueValueExpr 0x1e29210c210 <<invalid sloc>> '_Bool'
    |     `-ReturnStmt 0x1e29210c200 <col:13, col:21>
    |       `-UnaryOperator 0x1e29210c1e8 <col:20, col:21> 'int' prefix '-'
    |         `-IntegerLiteral 0x1e29210c1c0 <col:21> 'int' 1
    |-IfStmt 0x1e29210c560 <line:511:5, line:524:18> has_else
    | |-OpaqueValueExpr 0x1e29210c548 <<invalid sloc>> '_Bool'
    | |-CompoundStmt 0x1e29210c368 <line:511:42, line:516:5>
    | | `-BinaryOperator 0x1e29210c348 <line:515:9, col:19> 'int' '='
    | |   |-UnaryOperator 0x1e29210c2f8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    | |   | `-ImplicitCastExpr 0x1e29210c2e0 <col:10> 'int *' <LValueToRValue>
    | |   |   `-DeclRefExpr 0x1e29210c2c0 <col:10> 'int *' lvalue ParmVar 0x1e29210bbc8 'putype' 'int *'
    | |   `-ImplicitCastExpr 0x1e29210c330 <col:19> 'int' <LValueToRValue>
    | |     `-DeclRefExpr 0x1e29210c310 <col:19> 'int' lvalue Var 0x1e29210be70 'utype' 'int'
    | `-IfStmt 0x1e29210c520 <line:516:12, line:524:18> has_else
    |   |-OpaqueValueExpr 0x1e29210c508 <<invalid sloc>> '_Bool'
    |   |-CompoundStmt 0x1e29210c448 <line:516:41, line:523:5>
    |   | `-BinaryOperator 0x1e29210c428 <line:521:9, col:19> 'int' '='
    |   |   |-UnaryOperator 0x1e29210c3d8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow
    |   |   | `-ImplicitCastExpr 0x1e29210c3c0 <col:10> 'int *' <LValueToRValue>
    |   |   |   `-DeclRefExpr 0x1e29210c3a0 <col:10> 'int *' lvalue ParmVar 0x1e29210bbc8 'putype' 'int *'
    |   |   `-ImplicitCastExpr 0x1e29210c410 <col:19> 'int' <LValueToRValue>
    |   |     `-DeclRefExpr 0x1e29210c3f0 <col:19> 'int' lvalue Var 0x1e29210be70 'utype' 'int'
    |   `-BinaryOperator 0x1e29210c4e8 <line:524:9, col:18> 'int' '='
    |     |-DeclRefExpr 0x1e29210c460 <col:9> 'int' lvalue Var 0x1e29210be70 'utype' 'int'
    |     `-ImplicitCastExpr 0x1e29210c4d0 <col:17, col:18> 'int' <LValueToRValue>
    |       `-UnaryOperator 0x1e29210c4b8 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
    |         `-ImplicitCastExpr 0x1e29210c4a0 <col:18> 'int *' <LValueToRValue>
    |           `-DeclRefExpr 0x1e29210c480 <col:18> 'int *' lvalue ParmVar 0x1e29210bbc8 'putype' 'int *'
    |-SwitchStmt 0x1e29210c5c0 <line:526:5, line:603:5>
    | |-ImplicitCastExpr 0x1e29210c5a8 <line:526:13> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x1e29210c588 <col:13> 'int' lvalue Var 0x1e29210be70 'utype' 'int'
    | `-CompoundStmt 0x1e2921060f8 <col:20, line:603:5>
    |   |-IfStmt 0x1e2921057e0 <line:531:9, line:532:21>
    |   | |-BinaryOperator 0x1e29210c7c8 <line:531:13, col:36> 'int' '||'
    |   | | |-BinaryOperator 0x1e29210c728 <col:13, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'int' '=='
    |   | | | |-ImplicitCastExpr 0x1e29210c6f8 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:531:13> 'const unsigned char *' <LValueToRValue>
    |   | | | | `-DeclRefExpr 0x1e29210c650 <col:13> 'const unsigned char *' lvalue Var 0x1e29210bf08 'cont' 'const unsigned char *'
    |   | | | `-ImplicitCastExpr 0x1e29210c710 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const unsigned char *' <BitCast>
    |   | | |   `-ParenExpr 0x1e29210c6d8 <col:16, col:25> 'void *'
    |   | | |     `-CStyleCastExpr 0x1e29210c6b0 <col:17, col:24> 'void *' <NullToPointer>
    |   | | |       `-IntegerLiteral 0x1e29210c670 <col:24> 'int' 0
    |   | | `-BinaryOperator 0x1e29210c7a8 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:531:29, col:36> 'int' '=='
    |   | |   |-ImplicitCastExpr 0x1e29210c790 <col:29> 'int' <LValueToRValue>
    |   | |   | `-DeclRefExpr 0x1e29210c748 <col:29> 'int' lvalue Var 0x1e29210c038 'len' 'int'
    |   | |   `-IntegerLiteral 0x1e29210c768 <col:36> 'int' 0
    |   | `-ReturnStmt 0x1e2921057d0 <line:532:13, col:21>
    |   |   `-UnaryOperator 0x1e2921057b8 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1e292105790 <col:21> 'int' 1
    |   |-BreakStmt 0x1e2921057f8 <line:533:9>
    |   |-BinaryOperator 0x1e2921058c0 <line:536:9, D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:25> 'const unsigned char *' '='
    |   | |-DeclRefExpr 0x1e292105800 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:536:9> 'const unsigned char *' lvalue Var 0x1e29210bf08 'cont' 'const unsigned char *'
    |   | `-ImplicitCastExpr 0x1e2921058a8 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:89:16, col:25> 'const unsigned char *' <NullToPointer>
    |   |   `-ParenExpr 0x1e292105888 <col:16, col:25> 'void *'
    |   |     `-CStyleCastExpr 0x1e292105860 <col:17, col:24> 'void *' <NullToPointer>
    |   |       `-IntegerLiteral 0x1e292105820 <col:24> 'int' 0
    |   |-BinaryOperator 0x1e292105928 <.//openssl//file_jk/after\crypto\asn1\tasn_enc.c:537:9, col:15> 'int' '='
    |   | |-DeclRefExpr 0x1e2921058e0 <col:9> 'int' lvalue Var 0x1e29210c038 'len' 'int'
    |   | `-IntegerLiteral 0x1e292105900 <col:15> 'int' 0
    |   |-BreakStmt 0x1e292105948 <line:538:9>
    |   |-IfStmt 0x1e2921059f8 <line:542:9, line:543:21>
    |   | |-OpaqueValueExpr 0x1e2921059e0 <<invalid sloc>> '_Bool'
    |   | `-ReturnStmt 0x1e2921059d0 <col:13, col:21>
    |   |   `-UnaryOperator 0x1e2921059b8 <col:20, col:21> 'int' prefix '-'
    |   |     `-IntegerLiteral 0x1e292105990 <col:21> 'int' 1
    |   |-IfStmt 0x1e292105b70 <line:544:9, line:552:9>
    |   | |-OpaqueValueExpr 0x1e292105b58 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x1e292105b38 <line:544:38, line:552:9>
    |   |   |-IfStmt 0x1e292105aa0 <line:548:13, line:549:25>
    |   |   | |-OpaqueValueExpr 0x1e292105a88 <<invalid sloc>> '_Bool'
    |   |   | `-ReturnStmt 0x1e292105a78 <col:17, col:25>
    |   |   |   `-UnaryOperator 0x1e292105a60 <col:24, col:25> 'int' prefix '-'
    |   |   |     `-IntegerLiteral 0x1e292105a38 <col:25> 'int' 1
    |   |   `-IfStmt 0x1e292105b20 <line:550:13, line:551:25>
    |   |     |-OpaqueValueExpr 0x1e292105b08 <<invalid sloc>> '_Bool'
    |   |     `-ReturnStmt 0x1e292105af8 <col:17, col:25>
    |   |       `-UnaryOperator 0x1e292105ae0 <col:24, col:25> 'int' prefix '-'
    |   |         `-IntegerLiteral 0x1e292105ab8 <col:25> 'int' 1
    |   |-BinaryOperator 0x1e292105c30 <line:554:9, col:17> 'const unsigned char *' '='
    |   | |-DeclRefExpr 0x1e292105bc0 <col:9> 'const unsigned char *' lvalue Var 0x1e29210bf08 'cont' 'const unsigned char *'
    |   | `-ImplicitCastExpr 0x1e292105c18 <col:16, col:17> 'const unsigned char *' <NoOp>
    |   |   `-UnaryOperator 0x1e292105c00 <col:16, col:17> 'unsigned char *' prefix '&' cannot overflow
    |   |     `-DeclRefExpr 0x1e292105be0 <col:17> 'unsigned char' lvalue Var 0x1e29210bfa0 'c' 'unsigned char'
    |   |-BinaryOperator 0x1e292105c98 <line:555:9, col:15> 'int' '='
    |   | |-DeclRefExpr 0x1e292105c50 <col:9> 'int' lvalue Var 0x1e29210c038 'len' 'int'
    |   | `-IntegerLiteral 0x1e292105c70 <col:15> 'int' 1
    |   |-BreakStmt 0x1e292105cb8 <line:556:9>
    |   |-DefaultStmt 0x1e292105f48 <line:585:5, col:12>
    |   | `-NullStmt 0x1e292105f40 <col:12>
    |   |-IfStmt 0x1e292106098 <line:589:9, line:597:9>
    |   | |-OpaqueValueExpr 0x1e292106080 <<invalid sloc>> '_Bool'
    |   | `-CompoundStmt 0x1e292106060 <line:590:57, line:597:9>
    |   |   |-IfStmt 0x1e292105ff8 <line:591:13, line:594:13>
    |   |   | |-ImplicitCastExpr 0x1e292105f88 <line:591:17> 'unsigned char *' <LValueToRValue>
    |   |   | | `-DeclRefExpr 0x1e292105f68 <col:17> 'unsigned char *' lvalue ParmVar 0x1e29210bb48 'cout' 'unsigned char *'
    |   |   | `-CompoundStmt 0x1e292105fe8 <col:23, line:594:13>
    |   |   `-ReturnStmt 0x1e292106050 <line:596:13, col:21>
    |   |     `-UnaryOperator 0x1e292106038 <col:20, col:21> 'int' prefix '-'
    |   |       `-IntegerLiteral 0x1e292106010 <col:21> 'int' 2
    |   `-BreakStmt 0x1e2921060f0 <line:601:9>
    |-IfStmt 0x1e2921063a8 <line:604:5, line:605:31>
    | |-BinaryOperator 0x1e2921061e0 <line:604:9, col:17> 'int' '&&'
    | | |-ImplicitCastExpr 0x1e2921061b0 <col:9> 'unsigned char *' <LValueToRValue>
    | | | `-DeclRefExpr 0x1e292106170 <col:9> 'unsigned char *' lvalue ParmVar 0x1e29210bb48 'cout' 'unsigned char *'
    | | `-ImplicitCastExpr 0x1e2921061c8 <col:17> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1e292106190 <col:17> 'int' lvalue Var 0x1e29210c038 'len' 'int'
    | `-CallExpr 0x1e2921062e0 <line:605:9, col:31> 'void *'
    |   |-ImplicitCastExpr 0x1e2921062c8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
    |   | `-DeclRefExpr 0x1e292106200 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1e29209a738 'memcpy' 'void *(void *, const void *, unsigned long long)'
    |   |-ImplicitCastExpr 0x1e292106330 <col:16> 'void *' <BitCast>
    |   | `-ImplicitCastExpr 0x1e292106318 <col:16> 'unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1e292106220 <col:16> 'unsigned char *' lvalue ParmVar 0x1e29210bb48 'cout' 'unsigned char *'
    |   |-ImplicitCastExpr 0x1e292106360 <col:22> 'const void *' <BitCast>
    |   | `-ImplicitCastExpr 0x1e292106348 <col:22> 'const unsigned char *' <LValueToRValue>
    |   |   `-DeclRefExpr 0x1e292106240 <col:22> 'const unsigned char *' lvalue Var 0x1e29210bf08 'cont' 'const unsigned char *'
    |   `-ImplicitCastExpr 0x1e292106390 <col:28> 'unsigned long long' <IntegralCast>
    |     `-ImplicitCastExpr 0x1e292106378 <col:28> 'int' <LValueToRValue>
    |       `-DeclRefExpr 0x1e292106260 <col:28> 'int' lvalue Var 0x1e29210c038 'len' 'int'
    `-ReturnStmt 0x1e2921063f8 <line:606:5, col:12>
      `-ImplicitCastExpr 0x1e2921063e0 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x1e2921063c0 <col:12> 'int' lvalue Var 0x1e29210c038 'len' 'int'
