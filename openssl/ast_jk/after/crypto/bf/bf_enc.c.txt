TranslationUnitDecl 0x22b20dbf228 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x22b20dbfac0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x22b20dbf7c0 '__int128'
|-TypedefDecl 0x22b20dbfb30 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x22b20dbf7e0 'unsigned __int128'
|-TypedefDecl 0x22b20dbfe68 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x22b20dbfc20 'struct __NSConstantString_tag'
|   `-Record 0x22b20dbfb88 '__NSConstantString_tag'
|-TypedefDecl 0x22b20dbfed8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x22b20dbf400 'unsigned long long'
|-TypedefDecl 0x22b20dbff70 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x22b20dbff30 'char *'
|   `-BuiltinType 0x22b20dbf2c0 'char'
|-TypedefDecl 0x22b20dbffe0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x22b20dbff30 'char *'
|   `-BuiltinType 0x22b20dbf2c0 'char'
|-FunctionDecl 0x22b20e28150 <.//openssl//file_jk/after\crypto\bf\bf_enc.c:24:1, line:61:1> line:24:6 invalid BF_encrypt 'void (int *, const int *)'
| |-ParmVarDecl 0x22b20dc0080 <col:17, col:26> col:26 invalid data 'int *'
| |-ParmVarDecl 0x22b20dc0100 <col:32, col:46> col:46 invalid key 'const int *'
| `-CompoundStmt 0x22b20e272d0 <line:25:1, line:61:1>
|   |-DeclStmt 0x22b20e28298 <line:26:5, col:26>
|   | `-VarDecl 0x22b20e28230 <col:5, col:22> col:22 invalid l 'int' register
|   `-DeclStmt 0x22b20e28330 <line:27:5, col:34>
|     `-VarDecl 0x22b20e282c8 <col:5, col:29> col:29 invalid p 'const int *' register
|-FunctionDecl 0x22b20e27420 <line:65:1, line:102:1> line:65:6 invalid BF_decrypt 'void (int *, const int *)'
| |-ParmVarDecl 0x22b20e27308 <col:17, col:26> col:26 invalid data 'int *'
| |-ParmVarDecl 0x22b20e27388 <col:32, col:46> col:46 invalid key 'const int *'
| `-CompoundStmt 0x22b20e295c0 <line:66:1, line:102:1>
|   |-DeclStmt 0x22b20e27568 <line:67:5, col:26>
|   | `-VarDecl 0x22b20e27500 <col:5, col:22> col:22 invalid l 'int' register
|   `-DeclStmt 0x22b20e27600 <line:68:5, col:34>
|     `-VarDecl 0x22b20e27598 <col:5, col:29> col:29 invalid p 'const int *' register
`-FunctionDecl 0x22b20e299e8 <line:104:1, line:177:1> line:104:6 invalid BF_cbc_encrypt 'void (const unsigned char *, unsigned char *, long, const int *, unsigned char *, int)'
  |-ParmVarDecl 0x22b20e29620 <col:21, col:42> col:42 used in 'const unsigned char *'
  |-ParmVarDecl 0x22b20e296d0 <col:46, col:61> col:61 used out 'unsigned char *'
  |-ParmVarDecl 0x22b20e29750 <col:66, col:71> col:71 used length 'long'
  |-ParmVarDecl 0x22b20e297d0 <line:105:21, col:35> col:35 invalid schedule 'const int *'
  |-ParmVarDecl 0x22b20e29850 <col:45, col:60> col:60 used ivec 'unsigned char *'
  |-ParmVarDecl 0x22b20e298d0 <col:66, col:70> col:70 used encrypt 'int'
  `-CompoundStmt 0x22b20e4b120 <line:106:1, line:177:1>
    |-DeclStmt 0x22b20e29b50 <line:107:5, col:32>
    | `-VarDecl 0x22b20e29ae8 <col:5, col:22> col:22 invalid tin0 'int' register
    |-DeclStmt 0x22b20e29be8 <line:108:5, col:46>
    | `-VarDecl 0x22b20e29b80 <col:5, col:22> col:22 invalid tout0 'int' register
    |-DeclStmt 0x22b20e29cd0 <line:109:5, col:29>
    | `-VarDecl 0x22b20e29c18 <col:5, col:23> col:19 used l 'long' register cinit
    |   `-ImplicitCastExpr 0x22b20e29cb8 <col:23> 'long' <LValueToRValue>
    |     `-DeclRefExpr 0x22b20e29c80 <col:23> 'long' lvalue ParmVar 0x22b20e29750 'length' 'long'
    `-IfStmt 0x22b20e4b058 <line:112:5, line:174:5> has_else
      |-ImplicitCastExpr 0x22b20e29d20 <line:112:9> 'int' <LValueToRValue>
      | `-DeclRefExpr 0x22b20e29ce8 <col:9> 'int' lvalue ParmVar 0x22b20e298d0 'encrypt' 'int'
      |-CompoundStmt 0x22b20e46ca0 <col:18, line:143:5>
      | |-CompoundAssignOperator 0x22b20e42530 <line:115:9, col:17> 'unsigned char *' '-=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
      | | |-DeclRefExpr 0x22b20e424e8 <col:9> 'unsigned char *' lvalue ParmVar 0x22b20e29850 'ivec' 'unsigned char *'
      | | `-IntegerLiteral 0x22b20e42508 <col:17> 'int' 8
      | |-ForStmt 0x22b20e41aa8 <line:116:9, line:128:9>
      | | |-CompoundAssignOperator 0x22b20e425d8 <line:116:14, col:19> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
      | | | |-DeclRefExpr 0x22b20e42560 <col:14> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
      | | | `-ImplicitCastExpr 0x22b20e425c0 <col:19> 'long' <IntegralCast>
      | | |   `-IntegerLiteral 0x22b20e42598 <col:19> 'int' 8
      | | |-<<<NULL>>>
      | | |-BinaryOperator 0x22b20e42680 <col:22, col:27> 'int' '>='
      | | | |-ImplicitCastExpr 0x22b20e42650 <col:22> 'long' <LValueToRValue>
      | | | | `-DeclRefExpr 0x22b20e42608 <col:22> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
      | | | `-ImplicitCastExpr 0x22b20e42668 <col:27> 'long' <IntegralCast>
      | | |   `-IntegerLiteral 0x22b20e42628 <col:27> 'int' 0
      | | |-CompoundAssignOperator 0x22b20e42700 <col:30, col:35> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
      | | | |-DeclRefExpr 0x22b20e426a0 <col:30> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
      | | | `-ImplicitCastExpr 0x22b20e426e8 <col:35> 'long' <IntegralCast>
      | | |   `-IntegerLiteral 0x22b20e426c0 <col:35> 'int' 8
      | | `-CompoundStmt 0x22b20e41a98 <col:38, line:128:9>
      | `-IfStmt 0x22b20e465d8 <line:129:9, line:140:9>
      |   |-BinaryOperator 0x22b20e41b70 <line:129:13, col:19> 'int' '!='
      |   | |-ImplicitCastExpr 0x22b20e41b40 <col:13> 'long' <LValueToRValue>
      |   | | `-DeclRefExpr 0x22b20e41ae0 <col:13> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
      |   | `-ImplicitCastExpr 0x22b20e41b58 <col:18, col:19> 'long' <IntegralCast>
      |   |   `-UnaryOperator 0x22b20e41b28 <col:18, col:19> 'int' prefix '-'
      |   |     `-IntegerLiteral 0x22b20e41b00 <col:19> 'int' 8
      |   `-CompoundStmt 0x22b20e465b8 <col:22, line:140:9>
      |     |-CompoundStmt 0x22b20e45e40 <.//openssl//file_jk/after\crypto\bf/bf_locl.h:15:26, line:35:25>
      |     | |-CompoundAssignOperator 0x22b20e41c48 <.//openssl//file_jk/after\crypto\bf\bf_enc.c:130:18, col:38> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
      |     | | |-DeclRefExpr 0x22b20e41b90 <col:18> 'const unsigned char *' lvalue ParmVar 0x22b20e29620 'in' 'const unsigned char *'
      |     | | `-BinaryOperator 0x22b20e41c28 <col:34, col:38> 'long' '+'
      |     | |   |-ImplicitCastExpr 0x22b20e41bf8 <col:34> 'long' <LValueToRValue>
      |     | |   | `-DeclRefExpr 0x22b20e41bb0 <col:34> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
      |     | |   `-ImplicitCastExpr 0x22b20e41c10 <col:38> 'long' <IntegralCast>
      |     | |     `-IntegerLiteral 0x22b20e41bd0 <col:38> 'int' 8
      |     | `-SwitchStmt 0x22b20e42d60 <.//openssl//file_jk/after\crypto\bf/bf_locl.h:18:25, line:34:33>
      |     |   |-BinaryOperator 0x22b20e42d40 <.//openssl//file_jk/after\crypto\bf\bf_enc.c:130:34, col:38> 'long' '+'
      |     |   | |-ImplicitCastExpr 0x22b20e42d10 <col:34> 'long' <LValueToRValue>
      |     |   | | `-DeclRefExpr 0x22b20e41ca0 <col:34> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
      |     |   | `-ImplicitCastExpr 0x22b20e42d28 <col:38> 'long' <IntegralCast>
      |     |   |   `-IntegerLiteral 0x22b20e41cc0 <col:38> 'int' 8
      |     |   `-CompoundStmt 0x22b20e45df0 <.//openssl//file_jk/after\crypto\bf/bf_locl.h:18:36, line:34:33>
      |     |     |-CaseStmt 0x22b20e42dd8 <line:19:25, <invalid sloc>>
      |     |     | |-ImplicitCastExpr 0x22b20e42dc0 <col:30> 'long' <IntegralCast>
      |     |     | | `-ConstantExpr 0x22b20e42da8 <col:30> 'int'
      |     |     | |   `-IntegerLiteral 0x22b20e42d80 <col:30> 'int' 8
      |     |     | `-NullStmt 0x22b20e42f48 <<invalid sloc>>
      |     |     |-CaseStmt 0x22b20e42fa8 <line:21:25, <invalid sloc>>
      |     |     | |-ImplicitCastExpr 0x22b20e42f90 <col:30> 'long' <IntegralCast>
      |     |     | | `-ConstantExpr 0x22b20e42f78 <col:30> 'int'
      |     |     | |   `-IntegerLiteral 0x22b20e42f50 <col:30> 'int' 7
      |     |     | `-NullStmt 0x22b20e43160 <<invalid sloc>>
      |     |     |-CaseStmt 0x22b20e431c0 <line:23:25, <invalid sloc>>
      |     |     | |-ImplicitCastExpr 0x22b20e431a8 <col:30> 'long' <IntegralCast>
      |     |     | | `-ConstantExpr 0x22b20e43190 <col:30> 'int'
      |     |     | |   `-IntegerLiteral 0x22b20e43168 <col:30> 'int' 6
      |     |     | `-NullStmt 0x22b20e43378 <<invalid sloc>>
      |     |     |-CaseStmt 0x22b20e433d8 <line:25:25, <invalid sloc>>
      |     |     | |-ImplicitCastExpr 0x22b20e433c0 <col:30> 'long' <IntegralCast>
      |     |     | | `-ConstantExpr 0x22b20e433a8 <col:30> 'int'
      |     |     | |   `-IntegerLiteral 0x22b20e43380 <col:30> 'int' 5
      |     |     | `-NullStmt 0x22b20e43590 <<invalid sloc>>
      |     |     |-CaseStmt 0x22b20e435f0 <line:27:25, <invalid sloc>>
      |     |     | |-ImplicitCastExpr 0x22b20e435d8 <col:30> 'long' <IntegralCast>
      |     |     | | `-ConstantExpr 0x22b20e435c0 <col:30> 'int'
      |     |     | |   `-IntegerLiteral 0x22b20e43598 <col:30> 'int' 4
      |     |     | `-NullStmt 0x22b20e43760 <<invalid sloc>>
      |     |     |-CaseStmt 0x22b20e437c0 <line:29:25, <invalid sloc>>
      |     |     | |-ImplicitCastExpr 0x22b20e437a8 <col:30> 'long' <IntegralCast>
      |     |     | | `-ConstantExpr 0x22b20e43790 <col:30> 'int'
      |     |     | |   `-IntegerLiteral 0x22b20e43768 <col:30> 'int' 3
      |     |     | `-NullStmt 0x22b20e43978 <<invalid sloc>>
      |     |     |-CaseStmt 0x22b20e439d8 <line:31:25, <invalid sloc>>
      |     |     | |-ImplicitCastExpr 0x22b20e439c0 <col:30> 'long' <IntegralCast>
      |     |     | | `-ConstantExpr 0x22b20e439a8 <col:30> 'int'
      |     |     | |   `-IntegerLiteral 0x22b20e43980 <col:30> 'int' 2
      |     |     | `-NullStmt 0x22b20e43b90 <<invalid sloc>>
      |     |     `-CaseStmt 0x22b20e43bf0 <line:33:25, <invalid sloc>>
      |     |       |-ImplicitCastExpr 0x22b20e43bd8 <col:30> 'long' <IntegralCast>
      |     |       | `-ConstantExpr 0x22b20e43bc0 <col:30> 'int'
      |     |       |   `-IntegerLiteral 0x22b20e43b98 <col:30> 'int' 1
      |     |       `-NullStmt 0x22b20e45de8 <<invalid sloc>>
      |     `-NullStmt 0x22b20e45e60 <.//openssl//file_jk/after\crypto\bf\bf_enc.c:130:40>
      `-CompoundStmt 0x22b20e4b030 <line:143:12, line:174:5>
        |-CompoundAssignOperator 0x22b20e448e0 <line:146:9, col:17> 'unsigned char *' '-=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
        | |-DeclRefExpr 0x22b20e44898 <col:9> 'unsigned char *' lvalue ParmVar 0x22b20e29850 'ivec' 'unsigned char *'
        | `-IntegerLiteral 0x22b20e448b8 <col:17> 'int' 8
        |-ForStmt 0x22b20e46e68 <line:147:9, line:159:9>
        | |-CompoundAssignOperator 0x22b20e44970 <line:147:14, col:19> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
        | | |-DeclRefExpr 0x22b20e44910 <col:14> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
        | | `-ImplicitCastExpr 0x22b20e44958 <col:19> 'long' <IntegralCast>
        | |   `-IntegerLiteral 0x22b20e44930 <col:19> 'int' 8
        | |-<<<NULL>>>
        | |-BinaryOperator 0x22b20e44a18 <col:22, col:27> 'int' '>='
        | | |-ImplicitCastExpr 0x22b20e449e8 <col:22> 'long' <LValueToRValue>
        | | | `-DeclRefExpr 0x22b20e449a0 <col:22> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
        | | `-ImplicitCastExpr 0x22b20e44a00 <col:27> 'long' <IntegralCast>
        | |   `-IntegerLiteral 0x22b20e449c0 <col:27> 'int' 0
        | |-CompoundAssignOperator 0x22b20e44a98 <col:30, col:35> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'
        | | |-DeclRefExpr 0x22b20e44a38 <col:30> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
        | | `-ImplicitCastExpr 0x22b20e44a80 <col:35> 'long' <IntegralCast>
        | |   `-IntegerLiteral 0x22b20e44a58 <col:35> 'int' 8
        | `-CompoundStmt 0x22b20e46e58 <col:38, line:159:9>
        `-IfStmt 0x22b20e408a8 <line:160:9, line:171:9>
          |-BinaryOperator 0x22b20e46f30 <line:160:13, col:19> 'int' '!='
          | |-ImplicitCastExpr 0x22b20e46f00 <col:13> 'long' <LValueToRValue>
          | | `-DeclRefExpr 0x22b20e46ea0 <col:13> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
          | `-ImplicitCastExpr 0x22b20e46f18 <col:18, col:19> 'long' <IntegralCast>
          |   `-UnaryOperator 0x22b20e46ee8 <col:18, col:19> 'int' prefix '-'
          |     `-IntegerLiteral 0x22b20e46ec0 <col:19> 'int' 8
          `-CompoundStmt 0x22b20e40888 <col:22, line:171:9>
            |-CompoundStmt 0x22b20e40860 <.//openssl//file_jk/after\crypto\bf/bf_locl.h:38:26, line:57:25>
            | |-CompoundAssignOperator 0x22b20e47c98 <.//openssl//file_jk/after\crypto\bf\bf_enc.c:168:32, col:41> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
            | | |-DeclRefExpr 0x22b20e47be0 <col:32> 'unsigned char *' lvalue ParmVar 0x22b20e296d0 'out' 'unsigned char *'
            | | `-BinaryOperator 0x22b20e47c78 <col:37, col:41> 'long' '+'
            | |   |-ImplicitCastExpr 0x22b20e47c48 <col:37> 'long' <LValueToRValue>
            | |   | `-DeclRefExpr 0x22b20e47c00 <col:37> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
            | |   `-ImplicitCastExpr 0x22b20e47c60 <col:41> 'long' <IntegralCast>
            | |     `-IntegerLiteral 0x22b20e47c20 <col:41> 'int' 8
            | `-SwitchStmt 0x22b20e3fd00 <.//openssl//file_jk/after\crypto\bf/bf_locl.h:40:25, line:56:33>
            |   |-BinaryOperator 0x22b20e3fce0 <.//openssl//file_jk/after\crypto\bf\bf_enc.c:168:37, col:41> 'long' '+'
            |   | |-ImplicitCastExpr 0x22b20e47d10 <col:37> 'long' <LValueToRValue>
            |   | | `-DeclRefExpr 0x22b20e47cc8 <col:37> 'long' lvalue Var 0x22b20e29c18 'l' 'long'
            |   | `-ImplicitCastExpr 0x22b20e47d28 <col:41> 'long' <IntegralCast>
            |   |   `-IntegerLiteral 0x22b20e47ce8 <col:41> 'int' 8
            |   `-CompoundStmt 0x22b20e40810 <.//openssl//file_jk/after\crypto\bf/bf_locl.h:40:36, line:56:33>
            |     |-CaseStmt 0x22b20e3fd78 <line:41:25, <invalid sloc>>
            |     | |-ImplicitCastExpr 0x22b20e3fd60 <col:30> 'long' <IntegralCast>
            |     | | `-ConstantExpr 0x22b20e3fd48 <col:30> 'int'
            |     | |   `-IntegerLiteral 0x22b20e3fd20 <col:30> 'int' 8
            |     | `-NullStmt 0x22b20e3fe58 <<invalid sloc>>
            |     |-CaseStmt 0x22b20e3feb8 <line:43:25, <invalid sloc>>
            |     | |-ImplicitCastExpr 0x22b20e3fea0 <col:30> 'long' <IntegralCast>
            |     | | `-ConstantExpr 0x22b20e3fe88 <col:30> 'int'
            |     | |   `-IntegerLiteral 0x22b20e3fe60 <col:30> 'int' 7
            |     | `-NullStmt 0x22b20e3ffc0 <<invalid sloc>>
            |     |-CaseStmt 0x22b20e40020 <line:45:25, <invalid sloc>>
            |     | |-ImplicitCastExpr 0x22b20e40008 <col:30> 'long' <IntegralCast>
            |     | | `-ConstantExpr 0x22b20e3fff0 <col:30> 'int'
            |     | |   `-IntegerLiteral 0x22b20e3ffc8 <col:30> 'int' 6
            |     | `-NullStmt 0x22b20e40128 <<invalid sloc>>
            |     |-CaseStmt 0x22b20e40188 <line:47:25, <invalid sloc>>
            |     | |-ImplicitCastExpr 0x22b20e40170 <col:30> 'long' <IntegralCast>
            |     | | `-ConstantExpr 0x22b20e40158 <col:30> 'int'
            |     | |   `-IntegerLiteral 0x22b20e40130 <col:30> 'int' 5
            |     | `-NullStmt 0x22b20e40290 <<invalid sloc>>
            |     |-CaseStmt 0x22b20e402f0 <line:49:25, <invalid sloc>>
            |     | |-ImplicitCastExpr 0x22b20e402d8 <col:30> 'long' <IntegralCast>
            |     | | `-ConstantExpr 0x22b20e402c0 <col:30> 'int'
            |     | |   `-IntegerLiteral 0x22b20e40298 <col:30> 'int' 4
            |     | `-NullStmt 0x22b20e403d0 <<invalid sloc>>
            |     |-CaseStmt 0x22b20e40430 <line:51:25, <invalid sloc>>
            |     | |-ImplicitCastExpr 0x22b20e40418 <col:30> 'long' <IntegralCast>
            |     | | `-ConstantExpr 0x22b20e40400 <col:30> 'int'
            |     | |   `-IntegerLiteral 0x22b20e403d8 <col:30> 'int' 3
            |     | `-NullStmt 0x22b20e40538 <<invalid sloc>>
            |     |-CaseStmt 0x22b20e40598 <line:53:25, <invalid sloc>>
            |     | |-ImplicitCastExpr 0x22b20e40580 <col:30> 'long' <IntegralCast>
            |     | | `-ConstantExpr 0x22b20e40568 <col:30> 'int'
            |     | |   `-IntegerLiteral 0x22b20e40540 <col:30> 'int' 2
            |     | `-NullStmt 0x22b20e406a0 <<invalid sloc>>
            |     `-CaseStmt 0x22b20e40700 <line:55:25, <invalid sloc>>
            |       |-ImplicitCastExpr 0x22b20e406e8 <col:30> 'long' <IntegralCast>
            |       | `-ConstantExpr 0x22b20e406d0 <col:30> 'int'
            |       |   `-IntegerLiteral 0x22b20e406a8 <col:30> 'int' 1
            |       `-NullStmt 0x22b20e40808 <<invalid sloc>>
            `-NullStmt 0x22b20e40880 <.//openssl//file_jk/after\crypto\bf\bf_enc.c:168:43>
