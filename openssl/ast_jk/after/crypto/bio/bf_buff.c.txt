TranslationUnitDecl 0x1b36a8627d8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1b36a863070 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1b36a862d70 '__int128'
|-TypedefDecl 0x1b36a8630e0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1b36a862d90 'unsigned __int128'
|-TypedefDecl 0x1b36a863418 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1b36a8631d0 'struct __NSConstantString_tag'
|   `-Record 0x1b36a863138 '__NSConstantString_tag'
|-TypedefDecl 0x1b36a863488 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1b36a8629b0 'unsigned long long'
|-TypedefDecl 0x1b36a863520 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1b36a8634e0 'char *'
|   `-BuiltinType 0x1b36a862870 'char'
|-TypedefDecl 0x1b36a863590 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1b36a8634e0 'char *'
|   `-BuiltinType 0x1b36a862870 'char'
|-TypedefDecl 0x1b36a863650 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1b36a8629b0 'unsigned long long'
|-TypedefDecl 0x1b36a8636c0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1b36a8634e0 'char *'
|   `-BuiltinType 0x1b36a862870 'char'
|-FunctionDecl 0x1b36c1f1440 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b36c1f14e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1b36c1f1550 <col:21> Implicit
|-FunctionDecl 0x1b36c1f15a8 prev 0x1b36c1f1440 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b36c1f12d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1b36c1f1698 <col:21> Inherited Implicit
|-TypedefDecl 0x1b36c1f16d8 prev 0x1b36a863488 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1b36a8629b0 'unsigned long long'
|-TypedefDecl 0x1b36c1f1780 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1b36c1f1750 'size_t' sugar
|   |-Typedef 0x1b36c1f16d8 'size_t'
|   `-BuiltinType 0x1b36a8629b0 'unsigned long long'
|-TypedefDecl 0x1b36c1f17f0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1b36a862910 'long long'
|-TypedefDecl 0x1b36c1f1860 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1b36a862910 'long long'
|-TypedefDecl 0x1b36c1f18d0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1b36a862950 'unsigned short'
|-TypedefDecl 0x1b36c1f1940 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1b36a862950 'unsigned short'
|-TypedefDecl 0x1b36c1f19b0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1b36a862950 'unsigned short'
|-TypedefDecl 0x1b36c1f1a20 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1b36a8628d0 'int'
|-TypedefDecl 0x1b36c1f1a90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1b36a8628f0 'long'
|-TypedefDecl 0x1b36c1f1b00 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1b36a862910 'long long'
|-TypedefDecl 0x1b36c1f1b90 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1b36c1f1b60 '__time64_t' sugar
|   |-Typedef 0x1b36c1f1b00 '__time64_t'
|   `-BuiltinType 0x1b36a862910 'long long'
|-FunctionDecl 0x1b36c1f1d08 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1b36c1f1f28 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1b36c224f00 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1b36c1f2068 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1b36c1f20e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1b36c1f2158 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1b36c1f21d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1b36c224ca0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1b36c224fe0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1b36c2250a0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1b36c225210 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1b36c2251c0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1b36c225160 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1b36c225080 'struct threadlocaleinfostruct'
|       `-Record 0x1b36c233d90 'threadlocaleinfostruct'
|-TypedefDecl 0x1b36c225320 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1b36c2252d0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1b36c225270 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1b36c225140 'struct threadmbcinfostruct'
|       `-Record 0x1b36c2250a0 'threadmbcinfostruct'
|-RecordDecl 0x1b36c225378 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1b36c225430 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1b36c2254f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b36c225580 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1b36c225610 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1b36c2256c8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1b36c225670 'struct localeinfo_struct' sugar
|   `-RecordType 0x1b36c2254d0 'struct localeinfo_struct'
|     `-Record 0x1b36c225430 'localeinfo_struct'
|-TypedefDecl 0x1b36c2257a0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1b36c225750 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1b36c225670 'struct localeinfo_struct' sugar
|     `-RecordType 0x1b36c2254d0 'struct localeinfo_struct'
|       `-Record 0x1b36c225430 'localeinfo_struct'
|-RecordDecl 0x1b36c225818 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1b36c2258d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b36c225948 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1b36c225a08 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1b36c225aa0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1b36c225b10 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1b36c225bc8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1b36c225b70 'struct localerefcount' sugar
|   `-RecordType 0x1b36c2258b0 'struct localerefcount'
|     `-Record 0x1b36c225818 'localerefcount'
|-RecordDecl 0x1b36c233d90 prev 0x1b36c224fe0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1b36c233e10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b36c233e88 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1b36c233ef8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1b36c233f68 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1b36c233fd8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1b36c234198 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1b36c234208 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1b36c234278 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1b36c2342e8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1b36c234358 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1b36c2343c8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1b36c234420 parent 0x1b36a8627d8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1b36c2345b0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1b36c234620 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1b36c234690 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1b36c234700 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1b36c2347a0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1b36c234810 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1b36c234920 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1b36c234a58 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1b36c234b08 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1b36c234ab0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1b36c225080 'struct threadlocaleinfostruct'
|     `-Record 0x1b36c233d90 'threadlocaleinfostruct'
|-RecordDecl 0x1b36c234ba0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1b36c234c60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b36c234cd8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1b36c22cd20 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1b36c22cd90 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1b36c22ce00 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1b36c22ce70 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1b36c22cee0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1b36c22cf50 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1b36c22cfc0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1b36c22d070 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1b36c22d020 'struct _iobuf' sugar
|   `-RecordType 0x1b36c234c40 'struct _iobuf'
|     `-Record 0x1b36c234ba0 '_iobuf'
|-FunctionDecl 0x1b36c22d2a8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1b36c22d378 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1b36a862910 'long long'
|-FunctionDecl 0x1b36c22d558 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c22d3e0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1b36c22d850 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b36c22d630 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1b36c22d6a8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1b36c22dc00 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1b36c22d930 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1b36c22d9b0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1b36c22da30 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1b36c23dfa0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1b36c23de30 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1b36c23e1d0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1b36c23e090 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1b36c23e380 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c23e2a0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1b36c23e570 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b36c23e868 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1b36c23e640 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1b36c23e6c0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1b36c23ea20 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c23e940 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1b36c23ebd0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c23eaf0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1b36c23ed80 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c23eca0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1b36c239ef8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c239e18 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1b36c23a088 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b36c23a3f0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1b36c23a150 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1b36c23a248 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1b36c23a7a8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1b36c23a4d0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1b36c23a550 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1b36c23a5c8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1b36c23a968 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c23a888 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1b36c23ac30 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1b36c23aa40 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1b36c23aac0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1b36c238de0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b36c2391d8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1b36c239278 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b36c2392e0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b36c239358 prev 0x1b36c2391d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1b36c238fb0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1b36c239030 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1b36c239408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c239880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1b36c2395b0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1b36c239630 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1b36c2396b0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1b36c239ba0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1b36c239c40 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1b36c239ca8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1b36c239d20 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1b36c23ae00 prev 0x1b36c239ba0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1b36c239960 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2399e0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1b36c23aef8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1b36c23b0c0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1b36c23af40 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1b36c23afc0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1b36c23b318 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b36c23b1a0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1b36c23b218 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1b36c23b548 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1b36c23b3f8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1b36c23b840 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1b36c23b620 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1b36c23b698 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1b36c23bcd8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1b36c23bd78 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b36c236dc0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1b36c236e28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1b36c236e90 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1b36c236f18 prev 0x1b36c23bcd8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1b36c23b920 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1b36c23b998 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c23ba10 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c23ba88 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1b36c237420 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1b36c237008 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1b36c237080 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2370f8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c237170 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c2371e8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1b36c2378e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1b36c237610 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1b36c237690 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1b36c237708 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1b36c237998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c23eee8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1b36c237ae0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1b36c237b60 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1b36c237be0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1b36c237c58 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1b36c23f290 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1b36c23f330 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1b36c23f398 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1b36c23f410 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1b36c23f478 prev 0x1b36c23f290 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1b36c23f0c8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1b36c23f148 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1b36c23f658 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1b36c23f528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c23fa98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c23f798 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1b36c23f818 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1b36c23f8b0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b36c23fb50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c237dd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1b36c23fc90 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1b36c23fd10 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1b36c2380c0 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c237ea8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1b36c237f28 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1b36c237fa0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c238420 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1b36c2381a0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1b36c238278 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1b36c2387d8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1b36c2384f8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1b36c238578 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1b36c2385f8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1b36c238a38 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1b36c2388b8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1b36c23fe98 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1b36c238b08 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1b36c238b88 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1b36c238c08 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1b36c2400f8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1b36c23ff78 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1b36c2405b8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1b36c240658 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1b36c2406c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1b36c240728 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1b36c240790 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1b36c240818 prev 0x1b36c2405b8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1b36c240200 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1b36c240278 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2402f0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c240368 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1b36c2409e0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c240900 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1b36c240b70 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b36c240cf8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b36c243040 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1b36c240dc8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1b36c242e90 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b36c243368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b36c243220 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1b36c243410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c243630 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c243550 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1b36c243850 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1b36c243708 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1b36c243a00 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c243920 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1b36c243c50 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1b36c243ad8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1b36c243b58 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1b36c240e60 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1b36c240f00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1b36c240f70 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1b36c240fd8 prev 0x1b36c240e60 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1b36c243d30 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1b36c2410c8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1b36c2411f8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1b36c241118 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1b36c241448 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b36c2412d0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1b36c241348 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1b36c241608 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1b36c241528 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1b36c241828 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1b36c2416e0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1b36c241a78 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b36c241900 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1b36c241978 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1b36c241c38 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1b36c241b58 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1b36c28f0b0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b36c241d10 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1b36c241d90 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1b36c28f270 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1b36c28f190 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1b36c28f500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1b36c28f420 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1b36c28f5a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1b36c28f7a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1b36c28f6c8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1b36c28f930 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b36c28fbd8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1b36c28fc78 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1b36c28fce8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1b36c28fd50 prev 0x1b36c28fbd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1b36c28fac0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1b36c28ff28 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1b36c28fdf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c293330 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2930f8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1b36c293170 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b36c2933e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c293608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1b36c293528 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1b36c293858 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2936e0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1b36c293758 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c293c18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1b36c2939f0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1b36c293a70 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1b36c293cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c293ef0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1b36c293e10 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1b36c292158 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1b36c292010 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1b36c292340 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1b36c292790 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1b36c292408 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1b36c292488 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1b36c292508 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1b36c292580 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b36c292c10 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b36c292880 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c2928f8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c292970 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c2929f0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1b36c294030 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b36c292d00 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c292d78 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c292df8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1b36c2941f8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1b36c294118 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1b36c2945d0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1b36c294670 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1b36c2946d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1b36c294750 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1b36c2947b8 prev 0x1b36c2945d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1b36c294390 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1b36c294410 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1b36c294998 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1b36c294868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c294d88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c294aa8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1b36c294b28 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1b36c294ba0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b36c294e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c296150 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1b36c294f88 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1b36c296050 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1b36c296448 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c296230 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1b36c2962b0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1b36c296328 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2968d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b36c2965f0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1b36c296668 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2966e8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1b36c296990 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c296f60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c296bd0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1b36c296c48 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c296cc8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1b36c296d40 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b36c297060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2973c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b36c2971a8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1b36c297220 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c2972a0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1b36c297758 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2974a8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1b36c297520 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2975a0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1b36c297618 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2979b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1b36c297a58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c297d10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1b36c297ba0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1b36c291000 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1b36c297de8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1b36c297e60 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b36c291280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b36c2911a0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1b36c291328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2915e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b36c291470 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1b36c2914e8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1b36c291a00 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b36c291aa0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1b36c291b08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1b36c291b70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b36c291bf0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1b36c291c58 prev 0x1b36c291a00 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1b36c2916c0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1b36c291740 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1b36c2917b8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1b36c291d58 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1b36c295040 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b36c2950e0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1b36c295148 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1b36c2951b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b36c295230 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1b36c295298 prev 0x1b36c295040 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1b36c291da0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1b36c291e20 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1b36c291e98 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1b36c295398 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1b36c2955f8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1b36c2953e0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1b36c295460 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2954d8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2958f0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1b36c2956d8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1b36c295758 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2957d0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c295c38 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b36c295cd8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1b36c295d40 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b36c295db8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1b36c295e20 prev 0x1b36c295c38 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1b36c2959d8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1b36c295a50 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1b36c295f18 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1b36c290128 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b36c2901c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1b36c290230 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b36c2902a8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1b36c290310 prev 0x1b36c290128 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1b36c295f68 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1b36c28fff0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1b36c290408 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1b36c2905d0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1b36c290458 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2904d0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c290828 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1b36c2906b0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1b36c290728 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c290d88 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b36c290e28 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b36c290e90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1b36c290ef8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1b36c290f60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b36c29b0a0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1b36c29b108 prev 0x1b36c290d88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1b36c2909c8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c290a40 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c290ac0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1b36c290b38 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1b36c29b2f8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1b36c29b1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c29b768 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b36c29b348 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c29b3c0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29b438 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29b4b8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1b36c29b530 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c29bba8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b36c29b860 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c29b8d8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29b950 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29b9d0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1b36c29ba48 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c29bf78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b36c29bd60 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1b36c29bdd8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29be58 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1b36c29c030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c29e540 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b36c29e290 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1b36c29e308 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29e388 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1b36c29e400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1b36c29e600 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c29e9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b36c29e748 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c29e7c0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29e840 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1b36c29e8b8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c29edb8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1b36c29eae8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1b36c29eb68 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1b36c29ebe0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c29a130 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1b36c29a1d0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b36c29a238 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1b36c29a2b0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1b36c29a318 prev 0x1b36c29a130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1b36c29ef60 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1b36c29efe0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1b36c29a4f8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1b36c29a3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c29a920 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b36c29a9c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b36c29aa28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1b36c29aa90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b36c29ab10 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1b36c29ab78 prev 0x1b36c29a920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1b36c29a608 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1b36c29a688 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1b36c29a700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1b36c29ad60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1b36c29ac30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c299080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1b36c299120 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1b36c299188 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1b36c2991f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1b36c299270 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1b36c2992d8 prev 0x1b36c299080 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1b36c29adb0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1b36c29ae30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1b36c29aea8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1b36c2993d8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1b36c2995a0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1b36c299428 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2994a0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c299898 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b36c299680 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c2996f8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c299778 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1b36c299c30 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b36c299980 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c2999f8 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c299a78 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1b36c299af0 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c299e98 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1b36c299d18 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1b36c299d98 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1b36c298070 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1b36c299f78 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1b36c298360 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1b36c298148 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1b36c2981c0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c298240 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1b36c298658 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1b36c298440 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2984c0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1b36c298538 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2988b8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1b36c298740 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2987b8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c298c48 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1b36c298998 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1b36c298a10 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c298a90 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1b36c298b08 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c298e18 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1b36c298d38 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1b36c29f0e0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1b36c298ef0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1b36c298f68 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c29f2a0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1b36c29f1c0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1b36c29f430 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1b36c29f678 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c29f500 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1b36c29f578 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c29f8d0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c29f758 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1b36c29f7d0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c29fb28 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c29f9b0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1b36c29fa28 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c29fed8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c29fc08 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1b36c29fc80 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c29fcf8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a0210 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c29ffc0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1b36c2a0038 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2a00f0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a0508 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2a02f8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1b36c2a0370 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2a03e8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a0800 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2a05e8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2a0668 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2a06e0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2a0af8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2a08e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2a0960 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2a09d8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2a0df0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2a0bd8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2a0c58 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2a0cd0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2a1260 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2a0ed0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2a0f50 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1b36c2a0fc8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2a1040 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a15f8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2a1348 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2a13c8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1b36c2a1440 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2a14b8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a1990 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2a16e0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2a1760 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1b36c2a17d8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2a1850 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a1e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2a1b40 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c2a1bc0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1b36c2a1c38 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b36c2a1ee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2a3430 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2a2028 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c2a3120 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a31a0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2a3218 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2a37d0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2a3520 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c2a3598 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a3618 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2a3690 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2a3d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2a39c0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c2a3a40 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1b36c2a3ab8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1b36c2a3b30 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1b36c2a3de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c29c2e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2a3f28 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c2a3fa0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a4020 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1b36c2a4098 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c29c0b0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c29c728 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c29c3e0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c29c458 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29c4d8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1b36c29c550 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c29c5c8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c29c998 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c29c820 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1b36c29c898 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c29cbf0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c29ca78 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1b36c29caf0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c29cee0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c29ccd0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1b36c29cd48 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c29cdc0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a4260 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c29cfc8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1b36c29d040 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2a4140 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a46b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2a4408 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c2a4480 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a4500 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1b36c2a4578 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b36c2a4778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2a4b70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2a48c0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c2a4938 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a49b8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2a4a30 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c29d0c0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2a4c60 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c2a4cd8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a4d50 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a4dd0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1b36c2a4e48 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c29d600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c29d2b8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c29d330 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29d3b0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1b36c29d428 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1b36c29d4a0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1b36c29d6c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c29db48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c29d818 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c29d890 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29d910 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1b36c29d988 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c29da00 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a81d0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c29dc40 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1b36c29dcb8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29dd30 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c29ddb0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1b36c29de28 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c29dea0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a8590 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1b36c2a82c8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2a8340 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2a83c0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1b36c2a8800 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1b36c2a8690 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1b36c2a8a18 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1b36c2a8cf8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1b36c2a8ae0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1b36c2a8b58 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1b36c2a8f40 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1b36c2a8dd0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b36c2a9180 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1b36c2a9010 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1b36c2a9308 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1b36c2a9540 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1b36c2a93d0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1b36c2a9448 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1b36c2a96f0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1b36c2a9618 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b36c2a9998 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1b36c2a97c0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1b36c2a9838 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1b36c2a9d40 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1b36c2a9a70 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b36c2a9af0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1b36c2a9b68 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1b36c2aa040 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1b36c2a9e20 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2a9e98 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1b36c2ac368 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1b36c2aa118 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1b36c2ac1c0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1b36c2ac670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b36c2ac500 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1b36c2ac718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2ac9d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1b36c2ac858 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1b36c2acce0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2acaa8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1b36c2acb20 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2acf30 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2acdb8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1b36c2ace30 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2aa190 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b36c2ad008 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2aa340 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b36c2aa260 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2aa4f0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b36c2aa410 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2aa888 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2aa5c0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2aa638 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2aa6b0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2aab78 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2aa968 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2aa9e0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2aaa58 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2aae68 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2aac58 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2aacd0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2aad48 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2ab1a0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2aaf48 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2aafc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2ab038 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2ab4a0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2ab280 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2ab2f8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2ab6f0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2ab578 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2ab5f0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2ab940 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2ab7c8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2ab840 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2abb90 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2aba18 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2aba90 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2abf48 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2abc68 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b36c2abce0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c2abd58 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2ad3d0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2ac028 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b36c2ac0a0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2ac118 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2ad1c0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2ad788 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2ad4b8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2ad530 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2ad5a8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2ada78 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2ad868 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2ad8e0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2ad958 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2add68 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2adb58 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2adbd0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c2adc48 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2ae0f0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2ade48 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2adec0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2adf38 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2adfb0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a6500 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2a6178 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2a61f0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a6268 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c2a62e0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2a6a08 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2a65e8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2a6660 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a66d8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a6750 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2a67c8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a6dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2a6bb8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b36c2a6c30 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a6ca8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1b36c2a6e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2a7390 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2a7080 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b36c2a7160 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2a71d8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2a7250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1b36c2a7450 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2a7708 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2a7590 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1b36c2a7608 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2a78c0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b36c2a77e0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2a7ba0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2a7990 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2a7a08 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2a7a80 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2a7df8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2a7c80 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2a7cf8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b2040 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2a7ed0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2a7f48 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c2a7fc0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2b23c8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2b2120 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b2198 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b2210 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b2288 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b2590 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b36c2b24b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2b27d8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2b2660 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b26d8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b2ae0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b28b0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b2928 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b2d30 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b2bb8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b2c30 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b2f80 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b2e08 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b2e80 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b3348 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b3078 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b30f0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2b3168 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b3638 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b3428 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b34a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2b3518 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b3928 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b3718 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b3790 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2b3808 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b3ce8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b3a08 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2b3a80 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b3af8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b4060 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b3dc8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2b3e40 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b3eb8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b4350 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b4140 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2b41b8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b4230 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b47a0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b4430 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2b44a8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b4520 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2b4598 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b4b30 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b4888 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2b4900 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b4978 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2b49f0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b4ec0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b4c18 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2b4c90 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b4d08 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2b4d80 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b5380 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b4fa8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b5070 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b50e8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b5160 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b5710 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b5468 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b54e0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b5558 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b55d0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b5aa0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b57f8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b5870 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b58e8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b5960 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b5fa8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b5b88 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b5c00 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b5c78 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b5cf0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2b5d68 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b63e8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b60a8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b6120 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b6198 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b6210 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2b6288 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b6818 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b64d8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b6550 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b65c8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b6640 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2b66b8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b6a80 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b6908 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b6980 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b6cd0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b6b58 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b6bd0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b6fb8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b6da8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b6e20 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2b6e98 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b7428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b7180 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b71f8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b7270 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b72e8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b36c2b74e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2b7a58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b7630 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b76a8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b7720 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b7798 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b7810 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2b7f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b7c50 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b7cc8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b7d40 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b7db8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1b36c2b7e30 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1b36c2b80a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2b86b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b81e8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b8260 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b82d8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2b8350 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b83c8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2b8440 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b8bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2b8978 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b89f0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1b36c2b8c60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1b36c2b8d78 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1b36c2b1298 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2b9030 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b1040 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b10b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1b36c2b1350 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1b36c2b1468 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1b36c2b1a08 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b1728 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b17a0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b1818 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1b36c2b1ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1b36c2b1be0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1b36c2be310 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2b1ea0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b36c2b1f18 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b1f90 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1b36c2be100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1b36c2be3d0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1b36c2be4f0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1b36c2be7f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1b36c2be618 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1b36c2be690 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2be708 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1b36c2c03c0 <line:37:1, line:44:1>
|   |-DeclStmt 0x1b36c2be940 <line:38:5, col:21>
|   | `-VarDecl 0x1b36c2be8d8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1b36c2be9d8 <line:39:5, col:13>
|   | `-VarDecl 0x1b36c2be970 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1b36c2bed30 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1b36c2bed18 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1b36c2bec30 <col:34> '<builtin fn type>' Function 0x1b36c2beac8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1b36c2bec68 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1b36c2be8d8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1b36c2beca0 <col:29> 'const wchar_t *' lvalue ParmVar 0x1b36c2be708 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1b36c2beff0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1b36c2bed60 <col:5> 'int' lvalue Var 0x1b36c2be970 '_Ret' 'int'
|   | `-CallExpr 0x1b36c2bef30 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1b36c2bef18 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1b36c2bed98 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1b36c2b5fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1b36c2bef78 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b36c2bedb8 <col:27> 'wchar_t *' lvalue ParmVar 0x1b36c2be618 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1b36c2bef90 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b36c2bedd8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1b36c2be690 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1b36c2befa8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b36c2bedf8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1b36c2be708 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1b36c2befc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1b36c2bee80 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1b36c2bee58 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1b36c2bee18 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1b36c2befd8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1b36c2beea0 <col:59> 'va_list':'char *' lvalue Var 0x1b36c2be8d8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1b36c2c0350 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1b36c2c0338 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1b36c2c0288 <col:34> '<builtin fn type>' Function 0x1b36c2c0120 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1b36c2c02c0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1b36c2be8d8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1b36c2c03b0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1b36c2c0398 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1b36c2c0378 <col:12> 'int' lvalue Var 0x1b36c2be970 '_Ret' 'int'
|-FunctionDecl 0x1b36c2beac8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1b36c2beb68 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1b36c2bebd8 <col:34> Implicit
|-FunctionDecl 0x1b36c2c0120 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1b36c2c01c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1b36c2c0230 <col:34> Implicit
|-FunctionDecl 0x1b36c2c06b8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1b36c2c0410 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1b36c2c0488 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2c0500 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2c0578 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1b36c2c09a0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1b36c2c0990 <line:51:5, col:62>
|     `-CallExpr 0x1b36c2c08d0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1b36c2c08b8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1b36c2c0790 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1b36c2b5fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1b36c2c0918 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1b36c2c07b0 <col:27> 'wchar_t *' lvalue ParmVar 0x1b36c2c0410 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1b36c2c0930 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1b36c2c07d0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1b36c2c0488 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1b36c2c0948 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1b36c2c07f0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1b36c2c0500 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1b36c2c0960 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1b36c2c0878 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1b36c2c0850 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1b36c2c0810 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1b36c2c0978 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1b36c2c0898 <col:59> 'va_list':'char *' lvalue ParmVar 0x1b36c2c0578 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1b36c2c0c40 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1b36c2c09c8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1b36c2c0a40 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2c0ab8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2c0b30 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1b36c2bd198 <line:61:1, line:68:1>
|   |-DeclStmt 0x1b36c2c0d90 <line:62:5, col:21>
|   | `-VarDecl 0x1b36c2c0d28 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1b36c2c0e28 <line:63:5, col:13>
|   | `-VarDecl 0x1b36c2c0dc0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1b36c2c0ed0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1b36c2c0eb8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1b36c2c0e40 <col:34> '<builtin fn type>' Function 0x1b36c2beac8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1b36c2c0e60 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1b36c2c0d28 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1b36c2c0e98 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1b36c2c0b30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1b36c2c10d0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1b36c2c0f00 <col:5> 'int' lvalue Var 0x1b36c2c0dc0 '_Ret' 'int'
|   | `-CallExpr 0x1b36c2c1010 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1b36c2c0ff8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1b36c2c0f38 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1b36c2b5fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1b36c2c1058 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b36c2c0f58 <col:27> 'wchar_t *' lvalue ParmVar 0x1b36c2c09c8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1b36c2c1070 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b36c2c0f78 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1b36c2c0a40 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1b36c2c1088 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b36c2c0f98 <col:44> 'const wchar_t *' lvalue ParmVar 0x1b36c2c0ab8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1b36c2c10a0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1b36c2c0fb8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1b36c2c0b30 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1b36c2c10b8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1b36c2c0fd8 <col:64> 'va_list':'char *' lvalue Var 0x1b36c2c0d28 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1b36c2bd128 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1b36c2bd110 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1b36c2c10f0 <col:34> '<builtin fn type>' Function 0x1b36c2c0120 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1b36c2bd0f0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1b36c2c0d28 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1b36c2bd188 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1b36c2bd170 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1b36c2bd150 <col:12> 'int' lvalue Var 0x1b36c2c0dc0 '_Ret' 'int'
|-FunctionDecl 0x1b36c2bd528 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1b36c2bd1e8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1b36c2bd260 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2bd2d8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2bd350 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1b36c2bd3c8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1b36c2bd7b0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1b36c2bd7a0 <line:75:5, col:67>
|     `-CallExpr 0x1b36c2bd6e0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1b36c2bd6c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1b36c2bd608 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1b36c2b5fa8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1b36c2bd728 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1b36c2bd628 <col:27> 'wchar_t *' lvalue ParmVar 0x1b36c2bd1e8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1b36c2bd740 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1b36c2bd648 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1b36c2bd260 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1b36c2bd758 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1b36c2bd668 <col:44> 'const wchar_t *' lvalue ParmVar 0x1b36c2bd2d8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1b36c2bd770 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1b36c2bd688 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1b36c2bd350 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1b36c2bd788 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1b36c2bd6a8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1b36c2bd3c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1b36c2bd9f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b36c2bd7d8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2bd850 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1b36c2bdc48 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1b36c2bdad0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2bdb48 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2bdf30 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1b36c2bdd20 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2bdd98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1b36c2bde10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1b36c2b9228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2b90b0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2b9128 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1b36c2b92d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2b96e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b94d8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2b9550 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b95c8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b36c2b97a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2b9a58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2b98e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1b36c2b9958 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2b9d40 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2b9b30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2b9ba8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2b9c20 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2c11a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2b9ee0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2b9f58 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1b36c2c1250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2c1728 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2c1450 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2c14c8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2c1540 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b36c2c17e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2c1a98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2c1920 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2c1998 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2c1d80 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2c1b70 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2c1be8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2c1c60 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2ba1a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2c1f20 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2c1f98 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2c2010 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1b36c2ba260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2ba7e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2ba460 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2ba4d8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2ba550 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2ba5c8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b36c2ba8a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2babf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2ba9e0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2baa58 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c2baad0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2baf78 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2bacd0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2bad48 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2badc0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2bae38 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2c22f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1b36c2c2210 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1b36c2c2398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2c2710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2c2598 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2c2610 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b36c2c27c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2c29e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1b36c2c2900 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1b36c2c2c28 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1b36c2c2ab0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2c2b28 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b36c2c2f28 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1b36c2c2d08 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1b36c2c2d80 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1b36c2bb278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b36c2c30c0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2bb0d0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1b36c2bb328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2bb730 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b36c2bb470 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1b36c2bb4e8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2bb560 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1b36c2bbb90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1b36c2bb8d0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2bb948 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2bb9c0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1b36c2bbc48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2bc128 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1b36c2bbd90 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1b36c2bbe08 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1b36c2bbe80 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2bbef8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1b36c2bc380 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1b36c2bc210 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1b36c2bc5c0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b36c2bc450 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1b36c2bc4c8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1b36c2bc778 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1b36c2bc698 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1b36c2bca68 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1b36c2bc848 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1b36c2bc8c0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1b36c2bccd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b36c2bcc00 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1b36c2bcd80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b36c2bcf98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1b36c2bcec0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1b36c2c92a8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1b36c2bd068 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1b36c2c91b0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1b36c2c94f0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1b36c2c9380 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1b36c2c93f8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1b36c2c96a0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1b36c2c95c8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1b36c2c9848 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1b36c2c9770 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1b36c2c99f8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c2c9918 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1b36c2c9ba8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1b36c2c9ac8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1b36c2c9f20 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1b36c2c9c80 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1b36c2c9cf8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2c9d70 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c2c9de8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1b36c2c7360 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1b36c2ca010 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1b36c2ca088 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2ca100 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2c7190 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c2c7208 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1b36c2c7670 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1b36c2c7450 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2c74d0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1b36c2c7550 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1b36c2c7830 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1b36c2c7750 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1b36c2c7b20 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1b36c2c7900 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1b36c2c7980 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1b36c2c7a00 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1b36c2c7ce0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1b36c2c7c00 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1b36c2c8058 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1b36c2c7db8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1b36c2c7e30 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b36c2c7ea8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b36c2c7f20 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1b36c2cb348 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b36c2cb1d0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1b36c2cb248 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1b36c2cb680 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1b36c2cb500 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1b36c2cb580 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1b36c2cb730 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1b36c2cb9e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1b36c2cba88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1b36c2cbdc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1b36c2cbc50 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1b36c2cbcd0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1b36c2cbe78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1b36c2c4160 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1b36c2c4200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1b36c2c44a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1b36c2c43c0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1b36c2c4548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1b36c2c47c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1b36c2c4868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1b36c2c4b10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1b36c2c4a30 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1b36c2c4bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1b36c2c4e98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1b36c2c4db8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1b36c2c4f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1b36c2cc358 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1b36c2cc1e0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1b36c2cc258 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1b36c2cc408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1b36c2cc6c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1b36c2cc768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1b36c2cc9a0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1b36c2ccbb0 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1b36c2cca70 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1b36c2cce00 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1b36c2ccc88 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x1b36c2ccec0 <.//openssl//file_jk/after\crypto\bio/bio_lcl.h:64:1, line:71:1> line:64:8 struct bio_addrinfo_st definition
| |-FieldDecl 0x1b36c2ccf98 <line:65:5, col:9> col:9 bai_family 'int'
| |-FieldDecl 0x1b36c2cd008 <line:66:5, col:9> col:9 bai_socktype 'int'
| |-FieldDecl 0x1b36c2cd078 <line:67:5, col:9> col:9 bai_protocol 'int'
| |-FieldDecl 0x1b36c2cd0e0 <line:68:5, col:12> col:12 bai_addrlen 'size_t':'unsigned long long'
| |-RecordDecl 0x1b36c2cd138 parent 0x1b36a8627d8 <line:69:5, col:12> col:12 struct sockaddr
| |-FieldDecl 0x1b36c2d4630 <col:5, col:22> col:22 bai_addr 'struct sockaddr *'
| `-FieldDecl 0x1b36c2d4740 <line:70:5, col:29> col:29 bai_next 'struct bio_addrinfo_st *'
|-RecordDecl 0x1b36c2d4798 <line:74:1, line:83:1> line:74:7 invalid union bio_addr_st definition
| |-FieldDecl 0x1b36c2d48a0 <line:75:5, col:21> col:21 invalid sa 'struct sockaddr':'struct sockaddr'
| |-RecordDecl 0x1b36c2d48f8 parent 0x1b36a8627d8 <line:79:5, col:12> col:12 struct sockaddr_in
| `-FieldDecl 0x1b36c2d4a18 <col:5, col:24> col:24 invalid s_in 'struct sockaddr_in':'struct sockaddr_in'
|-RecordDecl 0x1b36c2d4a70 <line:91:9, line:112:1> line:91:16 struct bio_f_buffer_ctx_struct definition
| |-FieldDecl 0x1b36c2d4b48 <line:104:5, col:9> col:9 referenced ibuf_size 'int'
| |-FieldDecl 0x1b36c2d4bb8 <line:105:5, col:9> col:9 referenced obuf_size 'int'
| |-FieldDecl 0x1b36c2d4c28 <line:106:5, col:11> col:11 referenced ibuf 'char *'
| |-FieldDecl 0x1b36c2d4c98 <line:107:5, col:9> col:9 referenced ibuf_len 'int'
| |-FieldDecl 0x1b36c2d4d08 <line:108:5, col:9> col:9 referenced ibuf_off 'int'
| |-FieldDecl 0x1b36c2d4d78 <line:109:5, col:11> col:11 referenced obuf 'char *'
| |-FieldDecl 0x1b36c2d4de8 <line:110:5, col:9> col:9 referenced obuf_len 'int'
| `-FieldDecl 0x1b36c2d4e58 <line:111:5, col:9> col:9 referenced obuf_off 'int'
|-TypedefDecl 0x1b36c2d4f08 <line:91:1, line:112:3> col:3 referenced BIO_F_BUFFER_CTX 'struct bio_f_buffer_ctx_struct':'struct bio_f_buffer_ctx_struct'
| `-ElaboratedType 0x1b36c2d4eb0 'struct bio_f_buffer_ctx_struct' sugar
|   `-RecordType 0x1b36c2d4b10 'struct bio_f_buffer_ctx_struct'
|     `-Record 0x1b36c2d4a70 'bio_f_buffer_ctx_struct'
|-RecordDecl 0x1b36c2d4f78 <line:114:1, line:132:1> line:114:8 invalid struct bio_st definition
| |-FieldDecl 0x1b36c2d5048 <line:115:5, col:23> col:23 invalid method 'const int *'
| |-FieldDecl 0x1b36c2d25e0 <line:117:5, col:74> col:12 callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
| |-FieldDecl 0x1b36c2d2650 <line:118:5, col:11> col:11 cb_arg 'char *'
| |-FieldDecl 0x1b36c2d26c0 <line:119:5, col:9> col:9 init 'int'
| |-FieldDecl 0x1b36c2d2730 <line:120:5, col:9> col:9 shutdown 'int'
| |-FieldDecl 0x1b36c2d27a0 <line:121:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1b36c2d2810 <line:122:5, col:9> col:9 retry_reason 'int'
| |-FieldDecl 0x1b36c2d2880 <line:123:5, col:9> col:9 num 'int'
| |-FieldDecl 0x1b36c2d28f0 <line:124:5, col:11> col:11 ptr 'void *'
| |-FieldDecl 0x1b36c2d2970 <line:125:5, col:20> col:20 next_bio 'struct bio_st *'
| |-FieldDecl 0x1b36c2d29f0 <line:126:5, col:20> col:20 prev_bio 'struct bio_st *'
| |-FieldDecl 0x1b36c2d2a60 <line:127:5, col:9> col:9 references 'int'
| |-FieldDecl 0x1b36c2d2ad0 <line:128:5, col:14> col:14 invalid num_read 'int'
| |-FieldDecl 0x1b36c2d2b40 <line:129:5, col:14> col:14 invalid num_write 'int'
| |-FieldDecl 0x1b36c2d2bb0 <line:130:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x1b36c2d2c20 <line:131:5, col:20> col:20 invalid lock 'int *'
|-VarDecl 0x1b36c2d2c90 <line:139:1, col:23> col:23 invalid bio_lookup_lock 'int *' extern
|-FunctionDecl 0x1b36c2d2f20 <line:141:1, col:58> col:5 invalid BIO_ADDR_make 'int (int *, const struct sockaddr *)'
| |-ParmVarDecl 0x1b36c2d2d10 <col:19, col:29> col:29 invalid ap 'int *'
| `-ParmVarDecl 0x1b36c2d2e00 <col:33, col:56> col:56 sa 'const struct sockaddr *'
|-FunctionDecl 0x1b36c2d30f0 <line:142:1, col:60> col:24 invalid BIO_ADDR_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x1b36c2d2fe8 <col:42, col:58> col:58 invalid ap 'const int *'
|-FunctionDecl 0x1b36c2d32f0 <line:143:1, col:56> col:18 invalid BIO_ADDR_sockaddr_noconst 'struct sockaddr *(int *)'
| `-ParmVarDecl 0x1b36c2d31b0 <col:44, col:54> col:54 invalid ap 'int *'
|-FunctionDecl 0x1b36c2d3480 <line:144:1, col:52> col:11 invalid BIO_ADDR_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x1b36c2d33b0 <col:34, col:50> col:50 invalid ap 'const int *'
|-FunctionDecl 0x1b36c2d05b8 <line:145:1, col:61> col:11 invalid BIO_ADDRINFO_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x1b36c2d0520 <col:38, col:58> col:58 invalid bai 'const int *'
|-FunctionDecl 0x1b36c2d0720 <line:146:1, col:69> col:24 invalid BIO_ADDRINFO_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x1b36c2d0678 <col:46, col:66> col:66 invalid bai 'const int *'
|-VarDecl 0x1b36c2d07e0 <line:149:1, col:23> col:23 invalid bio_type_lock 'int *' extern
|-FunctionDecl 0x1b36c2d08e0 <line:151:1, col:31> col:6 bio_sock_cleanup_int 'void (void)'
|-FunctionDecl 0x1b36c2d0ba0 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:15:1, col:57> col:12 invalid buffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1b36c2d09b0 <col:25, col:30> col:30 invalid h 'int *'
| |-ParmVarDecl 0x1b36c2d0a30 <col:33, col:45> col:45 buf 'const char *'
| `-ParmVarDecl 0x1b36c2d0ab0 <col:50, col:54> col:54 num 'int'
|-FunctionDecl 0x1b36c2d0e60 <line:16:1, col:51> col:12 invalid buffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1b36c2d0c70 <col:24, col:29> col:29 invalid h 'int *'
| |-ParmVarDecl 0x1b36c2d0cf0 <col:32, col:38> col:38 buf 'char *'
| `-ParmVarDecl 0x1b36c2d0d70 <col:43, col:47> col:47 size 'int'
|-FunctionDecl 0x1b36c2d1090 <line:17:1, col:47> col:12 invalid buffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1b36c2d0f30 <col:24, col:29> col:29 invalid h 'int *'
| `-ParmVarDecl 0x1b36c2d0fb0 <col:32, col:44> col:44 str 'const char *'
|-FunctionDecl 0x1b36c2d1300 <line:18:1, col:51> col:12 invalid buffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1b36c2d1158 <col:24, col:29> col:29 invalid h 'int *'
| |-ParmVarDecl 0x1b36c2d11d8 <col:32, col:38> col:38 str 'char *'
| `-ParmVarDecl 0x1b36c2d1258 <col:43, col:47> col:47 size 'int'
|-FunctionDecl 0x1b36c2db730 <line:19:1, col:63> col:13 invalid buffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1b36c2d13d0 <col:25, col:30> col:30 invalid h 'int *'
| |-ParmVarDecl 0x1b36c2d1450 <col:33, col:37> col:37 cmd 'int'
| |-ParmVarDecl 0x1b36c2db5b0 <col:42, col:47> col:47 arg1 'long'
| `-ParmVarDecl 0x1b36c2db630 <col:53, col:59> col:59 arg2 'void *'
|-FunctionDecl 0x1b36c2db8a0 <line:20:1, col:29> col:12 invalid buffer_new 'int (int *)' static
| `-ParmVarDecl 0x1b36c2db808 <col:23, col:28> col:28 invalid h 'int *'
|-FunctionDecl 0x1b36c2db9f8 <line:21:1, col:33> col:12 invalid buffer_free 'int (int *)' static
| `-ParmVarDecl 0x1b36c2db960 <col:24, col:29> col:29 invalid data 'int *'
|-FunctionDecl 0x1b36c2dbca0 <line:22:1, col:66> col:13 invalid buffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1b36c2dbab8 <col:34, col:39> col:39 invalid h 'int *'
| |-ParmVarDecl 0x1b36c2dbb38 <col:42, col:46> col:46 cmd 'int'
| `-ParmVarDecl 0x1b36c2dbbb8 <col:51, col:64> col:64 invalid fp 'int *'
|-VarDecl 0x1b36c2dbd70 <line:25:1, col:25> col:25 invalid methods_buffer 'const int' static
|-FunctionDecl 0x1b36c2dbf00 <line:38:1, line:41:1> line:38:19 invalid BIO_f_buffer 'const int *(void)'
| `-CompoundStmt 0x1b36c2dbfb8 <line:39:1, line:41:1>
|-FunctionDecl 0x1b36c2dc078 <line:43:1, line:67:1> line:43:12 invalid buffer_new 'int (int *)' static
| |-ParmVarDecl 0x1b36c2dbfe0 <col:23, col:28> col:28 invalid bi 'int *'
| `-CompoundStmt 0x1b36c2da268 <line:44:1, line:67:1>
|   |-DeclStmt 0x1b36c2dc480 <line:45:5, col:57>
|   | `-VarDecl 0x1b36c2dc1c8 <col:5, col:56> col:23 used ctx 'BIO_F_BUFFER_CTX *' cinit
|   |   `-ImplicitCastExpr 0x1b36c2dc468 <col:29, col:56> 'BIO_F_BUFFER_CTX *' <IntegralToPointer>
|   |     `-CallExpr 0x1b36c2dc440 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x1b36c2dc428 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1b36c2dc348 <col:29> 'int ()' Function 0x1b36c2dc280 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x1b36c2dc3d8 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1b36c2dc3b8 <col:50, col:55> 'BIO_F_BUFFER_CTX':'struct bio_f_buffer_ctx_struct' lvalue
|   |           `-UnaryOperator 0x1b36c2dc3a0 <col:51, col:52> 'BIO_F_BUFFER_CTX':'struct bio_f_buffer_ctx_struct' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x1b36c2dc388 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x1b36c2dc368 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dc1c8 'ctx' 'BIO_F_BUFFER_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x1b36c2d95e8 <line:47:5, line:48:18>
|   | |-BinaryOperator 0x1b36c2dc588 <line:47:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1b36c2dc558 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:47:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b36c2dc498 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dc1c8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x1b36c2dc570 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_F_BUFFER_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1b36c2dc538 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1b36c2dc510 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1b36c2dc4d0 <col:26> 'int' 0
|   | `-ReturnStmt 0x1b36c2d95d8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:48:9, col:18>
|   |   `-ParenExpr 0x1b36c2d95b8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1b36c2d9590 <col:17> 'int' 0
|   |-BinaryOperator 0x1b36c2d9690 <line:49:5, line:23:33> 'int' '='
|   | |-MemberExpr 0x1b36c2d9638 <line:49:5, col:10> 'int' lvalue ->ibuf_size 0x1b36c2d4b48
|   | | `-ImplicitCastExpr 0x1b36c2d9620 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b36c2d9600 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dc1c8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x1b36c2d9668 <line:23:33> 'int' 4096
|   |-BinaryOperator 0x1b36c2d98a8 <line:50:5, col:51> 'char *' '='
|   | |-MemberExpr 0x1b36c2d96e8 <col:5, col:10> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   | | `-ImplicitCastExpr 0x1b36c2d96d0 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b36c2d96b0 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dc1c8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x1b36c2d9890 <col:17, col:51> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1b36c2d9868 <col:17, col:51> 'int'
|   |     |-ImplicitCastExpr 0x1b36c2d9850 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1b36c2d9808 <col:17> 'int ()' Function 0x1b36c2d9740 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x1b36c2d9828 <line:23:33> 'int' 4096
|   |-IfStmt 0x1b36c2d9c08 <line:51:5, line:54:5>
|   | |-BinaryOperator 0x1b36c2d99e8 <line:51:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1b36c2d99b8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:51:9, col:14> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1b36c2d9900 <col:9, col:14> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   | | |   `-ImplicitCastExpr 0x1b36c2d98e8 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1b36c2d98c8 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dc1c8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x1b36c2d99d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1b36c2d9998 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1b36c2d9970 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1b36c2d9930 <col:26> 'int' 0
|   | `-CompoundStmt 0x1b36c2d9be8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:51:28, line:54:5>
|   |   |-CallExpr 0x1b36c2d9b50 <line:52:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1b36c2d9b38 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1b36c2d9af8 <col:9> 'int ()' Function 0x1b36c2d9a30 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1b36c2d9b78 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b36c2d9b18 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dc1c8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   `-ReturnStmt 0x1b36c2d9bd8 <line:53:9, col:18>
|   |     `-ParenExpr 0x1b36c2d9bb8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x1b36c2d9b90 <col:17> 'int' 0
|   |-BinaryOperator 0x1b36c2d9cb0 <line:55:5, line:23:33> 'int' '='
|   | |-MemberExpr 0x1b36c2d9c58 <line:55:5, col:10> 'int' lvalue ->obuf_size 0x1b36c2d4bb8
|   | | `-ImplicitCastExpr 0x1b36c2d9c40 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b36c2d9c20 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dc1c8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x1b36c2d9c88 <line:23:33> 'int' 4096
|   |-BinaryOperator 0x1b36c2d9dd8 <line:56:5, col:51> 'char *' '='
|   | |-MemberExpr 0x1b36c2d9d08 <col:5, col:10> 'char *' lvalue ->obuf 0x1b36c2d4d78
|   | | `-ImplicitCastExpr 0x1b36c2d9cf0 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b36c2d9cd0 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dc1c8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x1b36c2d9dc0 <col:17, col:51> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1b36c2d9d98 <col:17, col:51> 'int'
|   |     |-ImplicitCastExpr 0x1b36c2d9d80 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1b36c2d9d38 <col:17> 'int ()' Function 0x1b36c2d9740 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x1b36c2d9d58 <line:23:33> 'int' 4096
|   |-IfStmt 0x1b36c2da130 <line:57:5, line:61:5>
|   | |-BinaryOperator 0x1b36c2d9f18 <line:57:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1b36c2d9ee8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:57:9, col:14> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1b36c2d9e30 <col:9, col:14> 'char *' lvalue ->obuf 0x1b36c2d4d78
|   | | |   `-ImplicitCastExpr 0x1b36c2d9e18 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1b36c2d9df8 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dc1c8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x1b36c2d9f00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1b36c2d9ec8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1b36c2d9ea0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1b36c2d9e60 <col:26> 'int' 0
|   | `-CompoundStmt 0x1b36c2da108 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:57:28, line:61:5>
|   |   |-CallExpr 0x1b36c2d9fd8 <line:58:9, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x1b36c2d9fc0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1b36c2d9f38 <col:9> 'int ()' Function 0x1b36c2d9a30 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1b36c2da000 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1b36c2d9f90 <col:22, col:27> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |   |     `-ImplicitCastExpr 0x1b36c2d9f78 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1b36c2d9f58 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dc1c8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-CallExpr 0x1b36c2da070 <line:59:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1b36c2da058 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1b36c2da018 <col:9> 'int ()' Function 0x1b36c2d9a30 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1b36c2da098 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b36c2da038 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dc1c8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   `-ReturnStmt 0x1b36c2da0f8 <line:60:9, col:18>
|   |     `-ParenExpr 0x1b36c2da0d8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x1b36c2da0b0 <col:17> 'int' 0
|   `-ReturnStmt 0x1b36c2da258 <line:66:5, col:14>
|     `-ParenExpr 0x1b36c2da238 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1b36c2da210 <col:13> 'int' 1
|-FunctionDecl 0x1b36c2da370 <line:69:1, line:83:1> line:69:12 invalid buffer_free 'int (int *)' static
| |-ParmVarDecl 0x1b36c2da2d8 <col:24, col:29> col:29 invalid a 'int *'
| `-CompoundStmt 0x1b36c2e0988 <line:70:1, line:83:1>
|   |-DeclStmt 0x1b36c2da4a8 <line:71:5, col:24>
|   | `-VarDecl 0x1b36c2da440 <col:5, col:23> col:23 used b 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x1b36c2e0628 <line:73:5, line:74:18>
|   | |-OpaqueValueExpr 0x1b36c2e0610 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b36c2e0600 <col:9, col:18>
|   |   `-ParenExpr 0x1b36c2da570 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1b36c2da548 <col:17> 'int' 0
|   |-CallExpr 0x1b36c2e0718 <line:76:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x1b36c2e0700 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1b36c2e0678 <col:5> 'int ()' Function 0x1b36c2d9a30 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1b36c2e0740 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1b36c2e06d0 <col:18, col:21> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |     `-ImplicitCastExpr 0x1b36c2e06b8 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1b36c2e0698 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2da440 'b' 'BIO_F_BUFFER_CTX *'
|   |-CallExpr 0x1b36c2e07f8 <line:77:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x1b36c2e07e0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1b36c2e0758 <col:5> 'int ()' Function 0x1b36c2d9a30 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1b36c2e0820 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1b36c2e07b0 <col:18, col:21> 'char *' lvalue ->obuf 0x1b36c2d4d78
|   |     `-ImplicitCastExpr 0x1b36c2e0798 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1b36c2e0778 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2da440 'b' 'BIO_F_BUFFER_CTX *'
|   `-ReturnStmt 0x1b36c2e0978 <line:82:5, col:14>
|     `-ParenExpr 0x1b36c2e0958 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1b36c2e0930 <col:13> 'int' 1
|-FunctionDecl 0x1b36c2e0b80 <line:85:1, line:154:1> line:85:12 invalid buffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1b36c2e09d8 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x1b36c2e0a58 <col:32, col:38> col:38 used out 'char *'
| |-ParmVarDecl 0x1b36c2e0ad8 <col:43, col:47> col:47 used outl 'int'
| `-CompoundStmt 0x1b36c2e2180 <line:86:1, line:154:1>
|   |-DeclStmt 0x1b36c2e0d90 <line:87:5, col:19>
|   | |-VarDecl 0x1b36c2e0c68 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1b36c2e0ce8 <col:5, col:18> col:12 used num 'int' cinit
|   |   `-IntegerLiteral 0x1b36c2e0d50 <col:18> 'int' 0
|   |-DeclStmt 0x1b36c2e0e20 <line:88:5, col:26>
|   | `-VarDecl 0x1b36c2e0db8 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x1b36c2e0fa0 <line:90:5, line:91:18>
|   | |-BinaryOperator 0x1b36c2e0f28 <line:90:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1b36c2e0ef8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:90:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b36c2e0e38 <col:9> 'char *' lvalue ParmVar 0x1b36c2e0a58 'out' 'char *'
|   | | `-ImplicitCastExpr 0x1b36c2e0f10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1b36c2e0ed8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1b36c2e0eb0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1b36c2e0e70 <col:26> 'int' 0
|   | `-ReturnStmt 0x1b36c2e0f90 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:91:9, col:18>
|   |   `-ParenExpr 0x1b36c2e0f70 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1b36c2e0f48 <col:17> 'int' 0
|   |-IfStmt 0x1b36c2e1200 <line:94:5, line:95:18>
|   | |-OpaqueValueExpr 0x1b36c2e11e8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b36c2e11d8 <col:9, col:18>
|   |   `-ParenExpr 0x1b36c2e11b8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1b36c2e1190 <col:17> 'int' 0
|   |-BinaryOperator 0x1b36c2e1278 <line:96:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1b36c2e1218 <col:5> 'int' lvalue Var 0x1b36c2e0ce8 'num' 'int'
|   | `-IntegerLiteral 0x1b36c2e1250 <col:11> 'int' 0
|   |-LabelStmt 0x1b36c2e14d0 <line:99:2, line:100:14> 'start'
|   | `-BinaryOperator 0x1b36c2e1460 <col:5, col:14> 'int' '='
|   |   |-DeclRefExpr 0x1b36c2e13a8 <col:5> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |   `-ImplicitCastExpr 0x1b36c2e1448 <col:9, col:14> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1b36c2e1418 <col:9, col:14> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|   |       `-ImplicitCastExpr 0x1b36c2e1400 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1b36c2e13e0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e0db8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x1b36c2dd028 <line:102:5, line:113:5>
|   | |-BinaryOperator 0x1b36c2e1548 <line:102:9, col:14> 'int' '!='
|   | | |-ImplicitCastExpr 0x1b36c2e1530 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b36c2e14e8 <col:9> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   | | `-IntegerLiteral 0x1b36c2e1508 <col:14> 'int' 0
|   | `-CompoundStmt 0x1b36c2dcfd8 <col:17, line:113:5>
|   |   |-IfStmt 0x1b36c2dc658 <line:103:9, line:104:17>
|   |   | |-BinaryOperator 0x1b36c2dc5c0 <line:103:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1b36c2e15c0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b36c2e1568 <col:13> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x1b36c2e15d8 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2e1588 <col:17> 'int' lvalue ParmVar 0x1b36c2e0ad8 'outl' 'int'
|   |   | `-BinaryOperator 0x1b36c2dc638 <line:104:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x1b36c2dc5e0 <col:13> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x1b36c2dc620 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1b36c2dc600 <col:17> 'int' lvalue ParmVar 0x1b36c2e0ad8 'outl' 'int'
|   |   |-CallExpr 0x1b36c2dcae0 <line:105:9, col:51> 'void *'
|   |   | |-ImplicitCastExpr 0x1b36c2dcac8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1b36c2dc8a0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1b36c2dc6b0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1b36c2dcb30 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1b36c2dcb18 <col:16> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2dc8d8 <col:16> 'char *' lvalue ParmVar 0x1b36c2e0a58 'out' 'char *'
|   |   | |-ImplicitCastExpr 0x1b36c2dcb48 <col:21, col:47> 'const void *' <BitCast>
|   |   | | `-UnaryOperator 0x1b36c2dca38 <col:21, col:47> 'char *' prefix '&' cannot overflow
|   |   | |   `-ParenExpr 0x1b36c2dca18 <col:22, col:47> 'char' lvalue
|   |   | |     `-ArraySubscriptExpr 0x1b36c2dc9f8 <col:23, col:46> 'char' lvalue
|   |   | |       |-ImplicitCastExpr 0x1b36c2dc9c8 <col:23, col:28> 'char *' <LValueToRValue>
|   |   | |       | `-MemberExpr 0x1b36c2dc930 <col:23, col:28> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |   | |       |   `-ImplicitCastExpr 0x1b36c2dc918 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       |     `-DeclRefExpr 0x1b36c2dc8f8 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e0db8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |       `-ImplicitCastExpr 0x1b36c2dc9e0 <col:33, col:38> 'int' <LValueToRValue>
|   |   | |         `-MemberExpr 0x1b36c2dc998 <col:33, col:38> 'int' lvalue ->ibuf_off 0x1b36c2d4d08
|   |   | |           `-ImplicitCastExpr 0x1b36c2dc980 <col:33> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |             `-DeclRefExpr 0x1b36c2dc960 <col:33> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e0db8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x1b36c2dcb78 <col:50> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1b36c2dcb60 <col:50> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1b36c2dca50 <col:50> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |   |-CompoundAssignOperator 0x1b36c2dcc30 <line:106:9, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1b36c2dcbc8 <col:9, col:14> 'int' lvalue ->ibuf_off 0x1b36c2d4d08
|   |   | | `-ImplicitCastExpr 0x1b36c2dcbb0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2dcb90 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e0db8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x1b36c2dcc18 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b36c2dcbf8 <col:26> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |   |-CompoundAssignOperator 0x1b36c2dcd00 <line:107:9, col:26> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1b36c2dcc98 <col:9, col:14> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|   |   | | `-ImplicitCastExpr 0x1b36c2dcc80 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2dcc60 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e0db8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x1b36c2dcce8 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b36c2dccc8 <col:26> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |   |-CompoundAssignOperator 0x1b36c2dcd88 <line:108:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1b36c2dcd30 <col:9> 'int' lvalue Var 0x1b36c2e0ce8 'num' 'int'
|   |   | `-ImplicitCastExpr 0x1b36c2dcd70 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b36c2dcd50 <col:16> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |   |-IfStmt 0x1b36c2dceb0 <line:109:9, line:110:24>
|   |   | |-BinaryOperator 0x1b36c2dce28 <line:109:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1b36c2dcdf8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b36c2dcdb8 <col:13> 'int' lvalue ParmVar 0x1b36c2e0ad8 'outl' 'int'
|   |   | | `-ImplicitCastExpr 0x1b36c2dce10 <col:21> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2dcdd8 <col:21> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |   | `-ReturnStmt 0x1b36c2dcea0 <line:110:13, col:24>
|   |   |   `-ImplicitCastExpr 0x1b36c2dce88 <col:20, col:24> 'int' <LValueToRValue>
|   |   |     `-ParenExpr 0x1b36c2dce68 <col:20, col:24> 'int' lvalue
|   |   |       `-DeclRefExpr 0x1b36c2dce48 <col:21> 'int' lvalue Var 0x1b36c2e0ce8 'num' 'int'
|   |   |-CompoundAssignOperator 0x1b36c2dcf20 <line:111:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1b36c2dcec8 <col:9> 'int' lvalue ParmVar 0x1b36c2e0ad8 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x1b36c2dcf08 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b36c2dcee8 <col:17> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |   `-CompoundAssignOperator 0x1b36c2dcfa8 <line:112:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x1b36c2dcf50 <col:9> 'char *' lvalue ParmVar 0x1b36c2e0a58 'out' 'char *'
|   |     `-ImplicitCastExpr 0x1b36c2dcf90 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1b36c2dcf70 <col:16> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |-IfStmt 0x1b36c2e1af0 <line:121:5, line:137:5>
|   | |-BinaryOperator 0x1b36c2dd0f8 <line:121:9, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x1b36c2dd0c8 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b36c2dd040 <col:9> 'int' lvalue ParmVar 0x1b36c2e0ad8 'outl' 'int'
|   | | `-ImplicitCastExpr 0x1b36c2dd0e0 <col:16, col:21> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1b36c2dd098 <col:16, col:21> 'int' lvalue ->ibuf_size 0x1b36c2d4b48
|   | |     `-ImplicitCastExpr 0x1b36c2dd080 <col:16> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1b36c2dd060 <col:16> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e0db8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-CompoundStmt 0x1b36c2e1ad8 <col:32, line:137:5>
|   |   `-ForStmt 0x1b36c2e1aa0 <line:122:9, line:136:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x1b36c2e1a68 <line:122:18, line:136:9>
|   |       |-IfStmt 0x1b36c2e17a8 <line:124:13, line:130:13>
|   |       | |-BinaryOperator 0x1b36c2dd2e8 <line:124:17, col:22> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x1b36c2dd2d0 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1b36c2dd288 <col:17> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |       | | `-IntegerLiteral 0x1b36c2dd2a8 <col:22> 'int' 0
|   |       | `-CompoundStmt 0x1b36c2e1788 <col:25, line:130:13>
|   |       |   |-IfStmt 0x1b36c2e1670 <line:126:17, line:127:48>
|   |       |   | |-BinaryOperator 0x1b36c2dd478 <line:126:21, col:25> 'int' '<'
|   |       |   | | |-ImplicitCastExpr 0x1b36c2dd460 <col:21> 'int' <LValueToRValue>
|   |       |   | | | `-DeclRefExpr 0x1b36c2dd418 <col:21> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |       |   | | `-IntegerLiteral 0x1b36c2dd438 <col:25> 'int' 0
|   |       |   | `-ReturnStmt 0x1b36c2e1660 <line:127:21, col:48>
|   |       |   |   `-ParenExpr 0x1b36c2e1640 <col:28, col:48> 'int'
|   |       |   |     `-ConditionalOperator 0x1b36c2e1610 <col:29, col:47> 'int'
|   |       |   |       |-ParenExpr 0x1b36c2dd518 <col:29, col:37> 'int'
|   |       |   |       | `-BinaryOperator 0x1b36c2dd4f8 <col:30, col:36> 'int' '>'
|   |       |   |       |   |-ImplicitCastExpr 0x1b36c2dd4e0 <col:30> 'int' <LValueToRValue>
|   |       |   |       |   | `-DeclRefExpr 0x1b36c2dd498 <col:30> 'int' lvalue Var 0x1b36c2e0ce8 'num' 'int'
|   |       |   |       |   `-IntegerLiteral 0x1b36c2dd4b8 <col:36> 'int' 0
|   |       |   |       |-ImplicitCastExpr 0x1b36c2dd578 <col:41> 'int' <LValueToRValue>
|   |       |   |       | `-DeclRefExpr 0x1b36c2dd538 <col:41> 'int' lvalue Var 0x1b36c2e0ce8 'num' 'int'
|   |       |   |       `-ImplicitCastExpr 0x1b36c2dd590 <col:47> 'int' <LValueToRValue>
|   |       |   |         `-DeclRefExpr 0x1b36c2dd558 <col:47> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |       |   `-IfStmt 0x1b36c2e1770 <line:128:17, line:129:32>
|   |       |     |-BinaryOperator 0x1b36c2e16e8 <line:128:21, col:26> 'int' '=='
|   |       |     | |-ImplicitCastExpr 0x1b36c2e16d0 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x1b36c2e1688 <col:21> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |       |     | `-IntegerLiteral 0x1b36c2e16a8 <col:26> 'int' 0
|   |       |     `-ReturnStmt 0x1b36c2e1760 <line:129:21, col:32>
|   |       |       `-ImplicitCastExpr 0x1b36c2e1748 <col:28, col:32> 'int' <LValueToRValue>
|   |       |         `-ParenExpr 0x1b36c2e1728 <col:28, col:32> 'int' lvalue
|   |       |           `-DeclRefExpr 0x1b36c2e1708 <col:29> 'int' lvalue Var 0x1b36c2e0ce8 'num' 'int'
|   |       |-CompoundAssignOperator 0x1b36c2e1818 <line:131:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x1b36c2e17c0 <col:13> 'int' lvalue Var 0x1b36c2e0ce8 'num' 'int'
|   |       | `-ImplicitCastExpr 0x1b36c2e1800 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1b36c2e17e0 <col:20> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |       |-IfStmt 0x1b36c2e1940 <line:132:13, line:133:28>
|   |       | |-BinaryOperator 0x1b36c2e18b8 <line:132:17, col:25> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x1b36c2e1888 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1b36c2e1848 <col:17> 'int' lvalue ParmVar 0x1b36c2e0ad8 'outl' 'int'
|   |       | | `-ImplicitCastExpr 0x1b36c2e18a0 <col:25> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1b36c2e1868 <col:25> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |       | `-ReturnStmt 0x1b36c2e1930 <line:133:17, col:28>
|   |       |   `-ImplicitCastExpr 0x1b36c2e1918 <col:24, col:28> 'int' <LValueToRValue>
|   |       |     `-ParenExpr 0x1b36c2e18f8 <col:24, col:28> 'int' lvalue
|   |       |       `-DeclRefExpr 0x1b36c2e18d8 <col:25> 'int' lvalue Var 0x1b36c2e0ce8 'num' 'int'
|   |       |-CompoundAssignOperator 0x1b36c2e19b0 <line:134:13, col:20> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |       | |-DeclRefExpr 0x1b36c2e1958 <col:13> 'char *' lvalue ParmVar 0x1b36c2e0a58 'out' 'char *'
|   |       | `-ImplicitCastExpr 0x1b36c2e1998 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1b36c2e1978 <col:20> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |       `-CompoundAssignOperator 0x1b36c2e1a38 <line:135:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |-DeclRefExpr 0x1b36c2e19e0 <col:13> 'int' lvalue ParmVar 0x1b36c2e0ad8 'outl' 'int'
|   |         `-ImplicitCastExpr 0x1b36c2e1a20 <col:21> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x1b36c2e1a00 <col:21> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |-IfStmt 0x1b36c2e1fe0 <line:142:5, line:148:5>
|   | |-BinaryOperator 0x1b36c2e1c78 <line:142:9, col:14> 'int' '<='
|   | | |-ImplicitCastExpr 0x1b36c2e1c60 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b36c2e1c18 <col:9> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   | | `-IntegerLiteral 0x1b36c2e1c38 <col:14> 'int' 0
|   | `-CompoundStmt 0x1b36c2e1fc0 <col:17, line:148:5>
|   |   |-IfStmt 0x1b36c2e1ea8 <line:144:9, line:145:40>
|   |   | |-BinaryOperator 0x1b36c2e1d18 <line:144:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1b36c2e1d00 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b36c2e1cb8 <col:13> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |   | | `-IntegerLiteral 0x1b36c2e1cd8 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x1b36c2e1e98 <line:145:13, col:40>
|   |   |   `-ParenExpr 0x1b36c2e1e78 <col:20, col:40> 'int'
|   |   |     `-ConditionalOperator 0x1b36c2e1e48 <col:21, col:39> 'int'
|   |   |       |-ParenExpr 0x1b36c2e1db8 <col:21, col:29> 'int'
|   |   |       | `-BinaryOperator 0x1b36c2e1d98 <col:22, col:28> 'int' '>'
|   |   |       |   |-ImplicitCastExpr 0x1b36c2e1d80 <col:22> 'int' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x1b36c2e1d38 <col:22> 'int' lvalue Var 0x1b36c2e0ce8 'num' 'int'
|   |   |       |   `-IntegerLiteral 0x1b36c2e1d58 <col:28> 'int' 0
|   |   |       |-ImplicitCastExpr 0x1b36c2e1e18 <col:33> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x1b36c2e1dd8 <col:33> 'int' lvalue Var 0x1b36c2e0ce8 'num' 'int'
|   |   |       `-ImplicitCastExpr 0x1b36c2e1e30 <col:39> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1b36c2e1df8 <col:39> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |   `-IfStmt 0x1b36c2e1fa8 <line:146:9, line:147:24>
|   |     |-BinaryOperator 0x1b36c2e1f20 <line:146:13, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1b36c2e1f08 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1b36c2e1ec0 <col:13> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   |     | `-IntegerLiteral 0x1b36c2e1ee0 <col:18> 'int' 0
|   |     `-ReturnStmt 0x1b36c2e1f98 <line:147:13, col:24>
|   |       `-ImplicitCastExpr 0x1b36c2e1f80 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x1b36c2e1f60 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x1b36c2e1f40 <col:21> 'int' lvalue Var 0x1b36c2e0ce8 'num' 'int'
|   |-BinaryOperator 0x1b36c2e2088 <line:149:5, col:21> 'int' '='
|   | |-MemberExpr 0x1b36c2e2030 <col:5, col:10> 'int' lvalue ->ibuf_off 0x1b36c2d4d08
|   | | `-ImplicitCastExpr 0x1b36c2e2018 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b36c2e1ff8 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e0db8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x1b36c2e2060 <col:21> 'int' 0
|   |-BinaryOperator 0x1b36c2e2148 <line:150:5, col:21> 'int' '='
|   | |-MemberExpr 0x1b36c2e20e0 <col:5, col:10> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|   | | `-ImplicitCastExpr 0x1b36c2e20c8 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b36c2e20a8 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e0db8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x1b36c2e2130 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1b36c2e2110 <col:21> 'int' lvalue Var 0x1b36c2e0c68 'i' 'int'
|   `-GotoStmt 0x1b36c2e2168 <line:153:5, col:10> 'start' 0x1b36c2e1480
|-FunctionDecl 0x1b36c2dc6b0 <line:105:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1b36c2dc750 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b36c2dc7b8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1b36c2dc820 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b36c2e23b0 <line:156:1, line:231:1> line:156:12 invalid buffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1b36c2e2208 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x1b36c2e2288 <col:33, col:45> col:45 used in 'const char *'
| |-ParmVarDecl 0x1b36c2e2308 <col:49, col:53> col:53 used inl 'int'
| `-CompoundStmt 0x1b36c2dadd8 <line:157:1, line:231:1>
|   |-DeclStmt 0x1b36c2e25c0 <line:158:5, col:19>
|   | |-VarDecl 0x1b36c2e2498 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1b36c2e2518 <col:5, col:18> col:12 used num 'int' cinit
|   |   `-IntegerLiteral 0x1b36c2e2580 <col:18> 'int' 0
|   |-DeclStmt 0x1b36c2dd638 <line:159:5, col:26>
|   | `-VarDecl 0x1b36c2dd5d0 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x1b36c2dd8b0 <line:161:5, line:162:18>
|   | |-BinaryOperator 0x1b36c2dd838 <line:161:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x1b36c2dd760 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x1b36c2dd740 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1b36c2dd710 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:161:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1b36c2dd650 <col:10> 'const char *' lvalue ParmVar 0x1b36c2e2288 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x1b36c2dd728 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x1b36c2dd6f0 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x1b36c2dd6c8 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x1b36c2dd688 <col:26> 'int' 0
|   | | `-ParenExpr 0x1b36c2dd818 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:161:25, col:34> 'int'
|   | |   `-BinaryOperator 0x1b36c2dd7f8 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x1b36c2dd7e0 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1b36c2dd780 <col:26> 'int' lvalue ParmVar 0x1b36c2e2308 'inl' 'int'
|   | |     `-IntegerLiteral 0x1b36c2dd7b8 <col:33> 'int' 0
|   | `-ReturnStmt 0x1b36c2dd8a0 <line:162:9, col:18>
|   |   `-ParenExpr 0x1b36c2dd880 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1b36c2dd858 <col:17> 'int' 0
|   |-IfStmt 0x1b36c2ddb10 <line:164:5, line:165:18>
|   | |-OpaqueValueExpr 0x1b36c2ddaf8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b36c2ddae8 <col:9, col:18>
|   |   `-ParenExpr 0x1b36c2ddac8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1b36c2ddaa0 <col:17> 'int' 0
|   |-LabelStmt 0x1b36c2dddd0 <line:168:2, line:169:56> 'start'
|   | `-BinaryOperator 0x1b36c2ddd60 <col:5, col:56> 'int' '='
|   |   |-DeclRefExpr 0x1b36c2ddb48 <col:5> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   `-BinaryOperator 0x1b36c2ddd40 <col:9, col:56> 'int' '-'
|   |     |-ImplicitCastExpr 0x1b36c2ddd28 <col:9, col:14> 'int' <LValueToRValue>
|   |     | `-MemberExpr 0x1b36c2ddbb8 <col:9, col:14> 'int' lvalue ->obuf_size 0x1b36c2d4bb8
|   |     |   `-ImplicitCastExpr 0x1b36c2ddba0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1b36c2ddb80 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |     `-ParenExpr 0x1b36c2ddd08 <col:26, col:56> 'int'
|   |       `-BinaryOperator 0x1b36c2ddce8 <col:27, col:48> 'int' '+'
|   |         |-ImplicitCastExpr 0x1b36c2ddcb8 <col:27, col:32> 'int' <LValueToRValue>
|   |         | `-MemberExpr 0x1b36c2ddc20 <col:27, col:32> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |         |   `-ImplicitCastExpr 0x1b36c2ddc08 <col:27> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x1b36c2ddbe8 <col:27> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |         `-ImplicitCastExpr 0x1b36c2ddcd0 <col:43, col:48> 'int' <LValueToRValue>
|   |           `-MemberExpr 0x1b36c2ddc88 <col:43, col:48> 'int' lvalue ->obuf_off 0x1b36c2d4e58
|   |             `-ImplicitCastExpr 0x1b36c2ddc70 <col:43> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x1b36c2ddc50 <col:43> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x1b36c2de398 <line:171:5, line:175:5>
|   | |-BinaryOperator 0x1b36c2dde58 <line:171:9, col:14> 'int' '>='
|   | | |-ImplicitCastExpr 0x1b36c2dde28 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b36c2ddde8 <col:9> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   | | `-ImplicitCastExpr 0x1b36c2dde40 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b36c2dde08 <col:14> 'int' lvalue ParmVar 0x1b36c2e2308 'inl' 'int'
|   | `-CompoundStmt 0x1b36c2de370 <col:19, line:175:5>
|   |   |-CallExpr 0x1b36c2de118 <line:172:9, col:68> 'void *'
|   |   | |-ImplicitCastExpr 0x1b36c2de100 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1b36c2dde78 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1b36c2dc6b0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1b36c2de150 <col:16, col:58> 'void *' <BitCast>
|   |   | | `-UnaryOperator 0x1b36c2de078 <col:16, col:58> 'char *' prefix '&' cannot overflow
|   |   | |   `-ParenExpr 0x1b36c2de058 <col:17, col:58> 'char' lvalue
|   |   | |     `-ArraySubscriptExpr 0x1b36c2de038 <col:18, col:57> 'char' lvalue
|   |   | |       |-ImplicitCastExpr 0x1b36c2de020 <col:18, col:23> 'char *' <LValueToRValue>
|   |   | |       | `-MemberExpr 0x1b36c2dded0 <col:18, col:23> 'char *' lvalue ->obuf 0x1b36c2d4d78
|   |   | |       |   `-ImplicitCastExpr 0x1b36c2ddeb8 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       |     `-DeclRefExpr 0x1b36c2dde98 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |       `-BinaryOperator 0x1b36c2de000 <col:28, col:49> 'int' '+'
|   |   | |         |-ImplicitCastExpr 0x1b36c2ddfd0 <col:28, col:33> 'int' <LValueToRValue>
|   |   | |         | `-MemberExpr 0x1b36c2ddf38 <col:28, col:33> 'int' lvalue ->obuf_off 0x1b36c2d4e58
|   |   | |         |   `-ImplicitCastExpr 0x1b36c2ddf20 <col:28> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |         |     `-DeclRefExpr 0x1b36c2ddf00 <col:28> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |         `-ImplicitCastExpr 0x1b36c2ddfe8 <col:44, col:49> 'int' <LValueToRValue>
|   |   | |           `-MemberExpr 0x1b36c2ddfa0 <col:44, col:49> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   | |             `-ImplicitCastExpr 0x1b36c2ddf88 <col:44> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |               `-DeclRefExpr 0x1b36c2ddf68 <col:44> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-ImplicitCastExpr 0x1b36c2de180 <col:61> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1b36c2de168 <col:61> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2de090 <col:61> 'const char *' lvalue ParmVar 0x1b36c2e2288 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x1b36c2de1b0 <col:65> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1b36c2de198 <col:65> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1b36c2de0b0 <col:65> 'int' lvalue ParmVar 0x1b36c2e2308 'inl' 'int'
|   |   |-CompoundAssignOperator 0x1b36c2de268 <line:173:9, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1b36c2de200 <col:9, col:14> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   | | `-ImplicitCastExpr 0x1b36c2de1e8 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2de1c8 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x1b36c2de250 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b36c2de230 <col:26> 'int' lvalue ParmVar 0x1b36c2e2308 'inl' 'int'
|   |   `-ReturnStmt 0x1b36c2de360 <line:174:9, col:26>
|   |     `-ParenExpr 0x1b36c2de340 <col:16, col:26> 'int'
|   |       `-BinaryOperator 0x1b36c2de320 <col:17, col:23> 'int' '+'
|   |         |-ImplicitCastExpr 0x1b36c2de2f0 <col:17> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1b36c2de298 <col:17> 'int' lvalue Var 0x1b36c2e2518 'num' 'int'
|   |         `-ImplicitCastExpr 0x1b36c2de308 <col:23> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x1b36c2de2d0 <col:23> 'int' lvalue ParmVar 0x1b36c2e2308 'inl' 'int'
|   |-IfStmt 0x1b36c2df508 <line:178:5, line:203:5>
|   | |-BinaryOperator 0x1b36c2de458 <line:178:9, col:26> 'int' '!='
|   | | |-ImplicitCastExpr 0x1b36c2de440 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1b36c2de3e8 <col:9, col:14> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   | | |   `-ImplicitCastExpr 0x1b36c2de3d0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1b36c2de3b0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-IntegerLiteral 0x1b36c2de418 <col:26> 'int' 0
|   | `-CompoundStmt 0x1b36c2df4e8 <col:29, line:203:5>
|   |   |-IfStmt 0x1b36c2deb10 <line:179:9, line:185:9>
|   |   | |-BinaryOperator 0x1b36c2de4d8 <line:179:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1b36c2de4c0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b36c2de478 <col:13> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   | | `-IntegerLiteral 0x1b36c2de498 <col:17> 'int' 0
|   |   | `-CompoundStmt 0x1b36c2dead8 <col:20, line:185:9>
|   |   |   |-CallExpr 0x1b36c2de7c0 <line:180:13, col:70> 'void *'
|   |   |   | |-ImplicitCastExpr 0x1b36c2de7a8 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1b36c2de4f8 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x1b36c2dc6b0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   | |-ImplicitCastExpr 0x1b36c2de7f8 <col:20, col:62> 'void *' <BitCast>
|   |   |   | | `-UnaryOperator 0x1b36c2de720 <col:20, col:62> 'char *' prefix '&' cannot overflow
|   |   |   | |   `-ParenExpr 0x1b36c2de700 <col:21, col:62> 'char' lvalue
|   |   |   | |     `-ArraySubscriptExpr 0x1b36c2de6e0 <col:22, col:61> 'char' lvalue
|   |   |   | |       |-ImplicitCastExpr 0x1b36c2de6c8 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   | |       | `-MemberExpr 0x1b36c2de550 <col:22, col:27> 'char *' lvalue ->obuf 0x1b36c2d4d78
|   |   |   | |       |   `-ImplicitCastExpr 0x1b36c2de538 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |       |     `-DeclRefExpr 0x1b36c2de518 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |       `-BinaryOperator 0x1b36c2de6a8 <col:32, col:53> 'int' '+'
|   |   |   | |         |-ImplicitCastExpr 0x1b36c2de678 <col:32, col:37> 'int' <LValueToRValue>
|   |   |   | |         | `-MemberExpr 0x1b36c2de5e0 <col:32, col:37> 'int' lvalue ->obuf_off 0x1b36c2d4e58
|   |   |   | |         |   `-ImplicitCastExpr 0x1b36c2de5a0 <col:32> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |         |     `-DeclRefExpr 0x1b36c2de580 <col:32> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |         `-ImplicitCastExpr 0x1b36c2de690 <col:48, col:53> 'int' <LValueToRValue>
|   |   |   | |           `-MemberExpr 0x1b36c2de648 <col:48, col:53> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   |   | |             `-ImplicitCastExpr 0x1b36c2de630 <col:48> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |               `-DeclRefExpr 0x1b36c2de610 <col:48> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |-ImplicitCastExpr 0x1b36c2de828 <col:65> 'const void *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x1b36c2de810 <col:65> 'const char *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1b36c2de738 <col:65> 'const char *' lvalue ParmVar 0x1b36c2e2288 'in' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x1b36c2de858 <col:69> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1b36c2de840 <col:69> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1b36c2de758 <col:69> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1b36c2de8c8 <line:181:13, col:19> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   |   | |-DeclRefExpr 0x1b36c2de870 <col:13> 'const char *' lvalue ParmVar 0x1b36c2e2288 'in' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x1b36c2de8b0 <col:19> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1b36c2de890 <col:19> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1b36c2de950 <line:182:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x1b36c2de8f8 <col:13> 'int' lvalue ParmVar 0x1b36c2e2308 'inl' 'int'
|   |   |   | `-ImplicitCastExpr 0x1b36c2de938 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1b36c2de918 <col:20> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1b36c2de9d8 <line:183:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x1b36c2de980 <col:13> 'int' lvalue Var 0x1b36c2e2518 'num' 'int'
|   |   |   | `-ImplicitCastExpr 0x1b36c2de9c0 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1b36c2de9a0 <col:20> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   |   `-CompoundAssignOperator 0x1b36c2deaa8 <line:184:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-MemberExpr 0x1b36c2dea40 <col:13, col:18> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   |     | `-ImplicitCastExpr 0x1b36c2dea28 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1b36c2dea08 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x1b36c2dea90 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1b36c2dea70 <col:30> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   `-ForStmt 0x1b36c2df4b0 <line:187:9, line:202:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x1b36c2df480 <line:187:18, line:202:9>
|   |       |-IfStmt 0x1b36c2df1e0 <line:190:13, line:197:13>
|   |       | |-BinaryOperator 0x1b36c2dee78 <line:190:17, col:22> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x1b36c2dee60 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1b36c2dee18 <col:17> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |       | | `-IntegerLiteral 0x1b36c2dee38 <col:22> 'int' 0
|   |       | `-CompoundStmt 0x1b36c2df1c0 <col:25, line:197:13>
|   |       |   |-IfStmt 0x1b36c2df0a8 <line:193:17, line:194:48>
|   |       |   | |-BinaryOperator 0x1b36c2def18 <line:193:21, col:25> 'int' '<'
|   |       |   | | |-ImplicitCastExpr 0x1b36c2def00 <col:21> 'int' <LValueToRValue>
|   |       |   | | | `-DeclRefExpr 0x1b36c2deeb8 <col:21> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |       |   | | `-IntegerLiteral 0x1b36c2deed8 <col:25> 'int' 0
|   |       |   | `-ReturnStmt 0x1b36c2df098 <line:194:21, col:48>
|   |       |   |   `-ParenExpr 0x1b36c2df078 <col:28, col:48> 'int'
|   |       |   |     `-ConditionalOperator 0x1b36c2df048 <col:29, col:47> 'int'
|   |       |   |       |-ParenExpr 0x1b36c2defb8 <col:29, col:37> 'int'
|   |       |   |       | `-BinaryOperator 0x1b36c2def98 <col:30, col:36> 'int' '>'
|   |       |   |       |   |-ImplicitCastExpr 0x1b36c2def80 <col:30> 'int' <LValueToRValue>
|   |       |   |       |   | `-DeclRefExpr 0x1b36c2def38 <col:30> 'int' lvalue Var 0x1b36c2e2518 'num' 'int'
|   |       |   |       |   `-IntegerLiteral 0x1b36c2def58 <col:36> 'int' 0
|   |       |   |       |-ImplicitCastExpr 0x1b36c2df018 <col:41> 'int' <LValueToRValue>
|   |       |   |       | `-DeclRefExpr 0x1b36c2defd8 <col:41> 'int' lvalue Var 0x1b36c2e2518 'num' 'int'
|   |       |   |       `-ImplicitCastExpr 0x1b36c2df030 <col:47> 'int' <LValueToRValue>
|   |       |   |         `-DeclRefExpr 0x1b36c2deff8 <col:47> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |       |   `-IfStmt 0x1b36c2df1a8 <line:195:17, line:196:32>
|   |       |     |-BinaryOperator 0x1b36c2df120 <line:195:21, col:26> 'int' '=='
|   |       |     | |-ImplicitCastExpr 0x1b36c2df108 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x1b36c2df0c0 <col:21> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |       |     | `-IntegerLiteral 0x1b36c2df0e0 <col:26> 'int' 0
|   |       |     `-ReturnStmt 0x1b36c2df198 <line:196:21, col:32>
|   |       |       `-ImplicitCastExpr 0x1b36c2df180 <col:28, col:32> 'int' <LValueToRValue>
|   |       |         `-ParenExpr 0x1b36c2df160 <col:28, col:32> 'int' lvalue
|   |       |           `-DeclRefExpr 0x1b36c2df140 <col:29> 'int' lvalue Var 0x1b36c2e2518 'num' 'int'
|   |       |-CompoundAssignOperator 0x1b36c2df298 <line:198:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x1b36c2df230 <col:13, col:18> 'int' lvalue ->obuf_off 0x1b36c2d4e58
|   |       | | `-ImplicitCastExpr 0x1b36c2df218 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1b36c2df1f8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |       | `-ImplicitCastExpr 0x1b36c2df280 <col:30> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1b36c2df260 <col:30> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |       |-CompoundAssignOperator 0x1b36c2df368 <line:199:13, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x1b36c2df300 <col:13, col:18> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |       | | `-ImplicitCastExpr 0x1b36c2df2e8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1b36c2df2c8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |       | `-ImplicitCastExpr 0x1b36c2df350 <col:30> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1b36c2df330 <col:30> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |       `-IfStmt 0x1b36c2df468 <line:200:13, line:201:17>
|   |         |-BinaryOperator 0x1b36c2df440 <line:200:17, col:34> 'int' '=='
|   |         | |-ImplicitCastExpr 0x1b36c2df428 <col:17, col:22> 'int' <LValueToRValue>
|   |         | | `-MemberExpr 0x1b36c2df3d0 <col:17, col:22> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |         | |   `-ImplicitCastExpr 0x1b36c2df3b8 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         | |     `-DeclRefExpr 0x1b36c2df398 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   |         | `-IntegerLiteral 0x1b36c2df400 <col:34> 'int' 0
|   |         `-BreakStmt 0x1b36c2df460 <line:201:17>
|   |-BinaryOperator 0x1b36c2df5b0 <line:208:5, col:21> 'int' '='
|   | |-MemberExpr 0x1b36c2df558 <col:5, col:10> 'int' lvalue ->obuf_off 0x1b36c2d4e58
|   | | `-ImplicitCastExpr 0x1b36c2df540 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b36c2df520 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x1b36c2df588 <col:21> 'int' 0
|   |-WhileStmt 0x1b36c2dada8 <line:211:5, line:225:5>
|   | |-BinaryOperator 0x1b36c2da658 <line:211:12, col:24> 'int' '>='
|   | | |-ImplicitCastExpr 0x1b36c2da628 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b36c2da5a0 <col:12> 'int' lvalue ParmVar 0x1b36c2e2308 'inl' 'int'
|   | | `-ImplicitCastExpr 0x1b36c2da640 <col:19, col:24> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1b36c2da5f8 <col:19, col:24> 'int' lvalue ->obuf_size 0x1b36c2d4bb8
|   | |     `-ImplicitCastExpr 0x1b36c2da5e0 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1b36c2da5c0 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2dd5d0 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-CompoundStmt 0x1b36c2dad70 <col:35, line:225:5>
|   |   |-IfStmt 0x1b36c2daac0 <line:213:9, line:219:9>
|   |   | |-BinaryOperator 0x1b36c2da758 <line:213:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1b36c2da740 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b36c2da6f8 <col:13> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   | | `-IntegerLiteral 0x1b36c2da718 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x1b36c2daaa0 <col:21, line:219:9>
|   |   |   |-IfStmt 0x1b36c2da988 <line:215:13, line:216:44>
|   |   |   | |-BinaryOperator 0x1b36c2da7f8 <line:215:17, col:21> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x1b36c2da7e0 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1b36c2da798 <col:17> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x1b36c2da7b8 <col:21> 'int' 0
|   |   |   | `-ReturnStmt 0x1b36c2da978 <line:216:17, col:44>
|   |   |   |   `-ParenExpr 0x1b36c2da958 <col:24, col:44> 'int'
|   |   |   |     `-ConditionalOperator 0x1b36c2da928 <col:25, col:43> 'int'
|   |   |   |       |-ParenExpr 0x1b36c2da898 <col:25, col:33> 'int'
|   |   |   |       | `-BinaryOperator 0x1b36c2da878 <col:26, col:32> 'int' '>'
|   |   |   |       |   |-ImplicitCastExpr 0x1b36c2da860 <col:26> 'int' <LValueToRValue>
|   |   |   |       |   | `-DeclRefExpr 0x1b36c2da818 <col:26> 'int' lvalue Var 0x1b36c2e2518 'num' 'int'
|   |   |   |       |   `-IntegerLiteral 0x1b36c2da838 <col:32> 'int' 0
|   |   |   |       |-ImplicitCastExpr 0x1b36c2da8f8 <col:37> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x1b36c2da8b8 <col:37> 'int' lvalue Var 0x1b36c2e2518 'num' 'int'
|   |   |   |       `-ImplicitCastExpr 0x1b36c2da910 <col:43> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x1b36c2da8d8 <col:43> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   |   `-IfStmt 0x1b36c2daa88 <line:217:13, line:218:28>
|   |   |     |-BinaryOperator 0x1b36c2daa00 <line:217:17, col:22> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1b36c2da9e8 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1b36c2da9a0 <col:17> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   |     | `-IntegerLiteral 0x1b36c2da9c0 <col:22> 'int' 0
|   |   |     `-ReturnStmt 0x1b36c2daa78 <line:218:17, col:28>
|   |   |       `-ImplicitCastExpr 0x1b36c2daa60 <col:24, col:28> 'int' <LValueToRValue>
|   |   |         `-ParenExpr 0x1b36c2daa40 <col:24, col:28> 'int' lvalue
|   |   |           `-DeclRefExpr 0x1b36c2daa20 <col:25> 'int' lvalue Var 0x1b36c2e2518 'num' 'int'
|   |   |-CompoundAssignOperator 0x1b36c2dab30 <line:220:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1b36c2daad8 <col:9> 'int' lvalue Var 0x1b36c2e2518 'num' 'int'
|   |   | `-ImplicitCastExpr 0x1b36c2dab18 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b36c2daaf8 <col:16> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   |-CompoundAssignOperator 0x1b36c2dabb8 <line:221:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x1b36c2dab60 <col:9> 'const char *' lvalue ParmVar 0x1b36c2e2288 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x1b36c2daba0 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b36c2dab80 <col:15> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   |-CompoundAssignOperator 0x1b36c2dac40 <line:222:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1b36c2dabe8 <col:9> 'int' lvalue ParmVar 0x1b36c2e2308 'inl' 'int'
|   |   | `-ImplicitCastExpr 0x1b36c2dac28 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1b36c2dac08 <col:16> 'int' lvalue Var 0x1b36c2e2498 'i' 'int'
|   |   `-IfStmt 0x1b36c2dad58 <line:223:9, line:224:24>
|   |     |-BinaryOperator 0x1b36c2dacd0 <line:223:13, col:20> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1b36c2dacb8 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1b36c2dac70 <col:13> 'int' lvalue ParmVar 0x1b36c2e2308 'inl' 'int'
|   |     | `-IntegerLiteral 0x1b36c2dac90 <col:20> 'int' 0
|   |     `-ReturnStmt 0x1b36c2dad48 <line:224:13, col:24>
|   |       `-ImplicitCastExpr 0x1b36c2dad30 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x1b36c2dad10 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x1b36c2dacf0 <col:21> 'int' lvalue Var 0x1b36c2e2518 'num' 'int'
|   `-GotoStmt 0x1b36c2dadc0 <line:230:5, col:10> 'start' 0x1b36c2ddd80
|-FunctionDecl 0x1b36c2db080 <line:233:1, line:389:1> line:233:13 invalid buffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1b36c2dae50 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x1b36c2daed0 <col:33, col:37> col:37 used cmd 'int'
| |-ParmVarDecl 0x1b36c2daf50 <col:42, col:47> col:47 used num 'long'
| |-ParmVarDecl 0x1b36c2dafd0 <col:52, col:58> col:58 used ptr 'void *'
| `-CompoundStmt 0x1b36c2df958 <line:234:1, line:389:1>
|   |-DeclStmt 0x1b36c2db1d0 <line:236:5, col:26>
|   | `-VarDecl 0x1b36c2db168 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-DeclStmt 0x1b36c2db2a8 <line:237:5, col:17>
|   | `-VarDecl 0x1b36c2db200 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1b36c2db290 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1b36c2db268 <col:16> 'int' 1
|   |-DeclStmt 0x1b36c2db3d8 <line:238:5, col:18>
|   | |-VarDecl 0x1b36c2db2d8 <col:5, col:11> col:11 used p1 'char *'
|   | `-VarDecl 0x1b36c2db358 <col:5, col:16> col:16 used p2 'char *'
|   |-DeclStmt 0x1b36c2e3630 <line:239:5, col:18>
|   | |-VarDecl 0x1b36c2db408 <col:5, col:9> col:9 used r 'int'
|   | |-VarDecl 0x1b36c2db488 <col:5, col:12> col:12 used i 'int'
|   | `-VarDecl 0x1b36c2db508 <col:5, col:16> col:16 used ip 'int *'
|   |-DeclStmt 0x1b36c2e3760 <line:240:5, col:17>
|   | |-VarDecl 0x1b36c2e3660 <col:5, col:9> col:9 used ibs 'int'
|   | `-VarDecl 0x1b36c2e36e0 <col:5, col:14> col:14 used obs 'int'
|   |-SwitchStmt 0x1b36c2e3800 <line:244:5, line:384:5>
|   | |-ImplicitCastExpr 0x1b36c2e37e8 <line:244:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b36c2e37b0 <col:13> 'int' lvalue ParmVar 0x1b36c2daed0 'cmd' 'int'
|   | `-CompoundStmt 0x1b36c2df5f0 <col:18, line:384:5>
|   |   |-BinaryOperator 0x1b36c2e38b0 <line:246:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1b36c2e3858 <col:9, col:14> 'int' lvalue ->ibuf_off 0x1b36c2d4d08
|   |   | | `-ImplicitCastExpr 0x1b36c2e3840 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2e3820 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x1b36c2e3888 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1b36c2e3960 <line:247:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1b36c2e3908 <col:9, col:14> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|   |   | | `-ImplicitCastExpr 0x1b36c2e38f0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2e38d0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x1b36c2e3938 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1b36c2e3a10 <line:248:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1b36c2e39b8 <col:9, col:14> 'int' lvalue ->obuf_off 0x1b36c2d4e58
|   |   | | `-ImplicitCastExpr 0x1b36c2e39a0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2e3980 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x1b36c2e39e8 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1b36c2e3ac0 <line:249:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1b36c2e3a68 <col:9, col:14> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   | | `-ImplicitCastExpr 0x1b36c2e3a50 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2e3a30 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x1b36c2e3a98 <col:25> 'int' 0
|   |   |-IfStmt 0x1b36c2e3bf0 <line:250:9, line:251:22>
|   |   | |-OpaqueValueExpr 0x1b36c2e3bd8 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1b36c2e3bc8 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x1b36c2e3bb0 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x1b36c2e3b90 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x1b36c2e3b68 <col:21> 'int' 0
|   |   |-BreakStmt 0x1b36c2e3de0 <line:253:9>
|   |   |-BinaryOperator 0x1b36c2e3ec8 <line:255:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x1b36c2e3de8 <col:9> 'long' lvalue Var 0x1b36c2db200 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1b36c2e3ea0 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1b36c2e3e88 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1b36c2e3e40 <col:21, col:26> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   |       `-ImplicitCastExpr 0x1b36c2e3e28 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1b36c2e3e08 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-BreakStmt 0x1b36c2e3ee8 <line:256:9>
|   |   |-BinaryOperator 0x1b36c2e3f50 <line:258:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x1b36c2e3ef0 <col:9> 'long' lvalue Var 0x1b36c2db200 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1b36c2e3f38 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1b36c2e3f10 <col:15> 'int' 0
|   |   |-BinaryOperator 0x1b36c2e4028 <line:259:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x1b36c2e3f70 <col:9> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   | `-ImplicitCastExpr 0x1b36c2e4010 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1b36c2e3fe0 <col:14, col:19> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |   |     `-ImplicitCastExpr 0x1b36c2e3fc8 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1b36c2e3fa8 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-ForStmt 0x1b36c2e43d8 <line:260:9, line:263:9>
|   |   | |-BinaryOperator 0x1b36c2e40a8 <line:260:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x1b36c2e4048 <col:14> 'int' lvalue Var 0x1b36c2db488 'i' 'int'
|   |   | | `-IntegerLiteral 0x1b36c2e4080 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1b36c2e4180 <col:21, col:30> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1b36c2e4150 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b36c2e40c8 <col:21> 'int' lvalue Var 0x1b36c2db488 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x1b36c2e4168 <col:25, col:30> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1b36c2e4120 <col:25, col:30> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|   |   | |     `-ImplicitCastExpr 0x1b36c2e4108 <col:25> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1b36c2e40e8 <col:25> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-UnaryOperator 0x1b36c2e41c0 <col:40, col:41> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x1b36c2e41a0 <col:40> 'int' lvalue Var 0x1b36c2db488 'i' 'int'
|   |   | `-CompoundStmt 0x1b36c2e43c0 <col:45, line:263:9>
|   |   |   `-IfStmt 0x1b36c2e43a8 <line:261:13, line:262:20>
|   |   |     |-BinaryOperator 0x1b36c2e4350 <line:261:17, col:42> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1b36c2e4338 <col:17, col:37> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x1b36c2e4320 <col:17, col:37> 'char' <LValueToRValue>
|   |   |     | |   `-ArraySubscriptExpr 0x1b36c2e42e8 <col:17, col:37> 'char' lvalue
|   |   |     | |     |-ImplicitCastExpr 0x1b36c2e42d0 <col:17> 'char *' <LValueToRValue>
|   |   |     | |     | `-DeclRefExpr 0x1b36c2e41d8 <col:17> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   |     | |     `-BinaryOperator 0x1b36c2e42b0 <col:20, col:36> 'int' '+'
|   |   |     | |       |-ImplicitCastExpr 0x1b36c2e4280 <col:20, col:25> 'int' <LValueToRValue>
|   |   |     | |       | `-MemberExpr 0x1b36c2e4230 <col:20, col:25> 'int' lvalue ->ibuf_off 0x1b36c2d4d08
|   |   |     | |       |   `-ImplicitCastExpr 0x1b36c2e4218 <col:20> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | |       |     `-DeclRefExpr 0x1b36c2e41f8 <col:20> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | |       `-ImplicitCastExpr 0x1b36c2e4298 <col:36> 'int' <LValueToRValue>
|   |   |     | |         `-DeclRefExpr 0x1b36c2e4260 <col:36> 'int' lvalue Var 0x1b36c2db488 'i' 'int'
|   |   |     | `-CharacterLiteral 0x1b36c2e4308 <col:42> 'int' 10
|   |   |     `-UnaryOperator 0x1b36c2e4390 <line:262:17, col:20> 'long' postfix '++'
|   |   |       `-DeclRefExpr 0x1b36c2e4370 <col:17> 'long' lvalue Var 0x1b36c2db200 'ret' 'long'
|   |   |-BreakStmt 0x1b36c2e4410 <line:264:9>
|   |   |-BinaryOperator 0x1b36c2e44f8 <line:266:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x1b36c2e4418 <col:9> 'long' lvalue Var 0x1b36c2db200 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1b36c2e44d0 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1b36c2e44b8 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1b36c2e4470 <col:21, col:26> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   |       `-ImplicitCastExpr 0x1b36c2e4458 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1b36c2e4438 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x1b36c2e2798 <line:267:9, line:271:9>
|   |   | |-BinaryOperator 0x1b36c2e4590 <line:267:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1b36c2e4560 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b36c2e4518 <col:13> 'long' lvalue Var 0x1b36c2db200 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x1b36c2e4578 <col:20> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1b36c2e4538 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x1b36c2e2780 <col:23, line:271:9>
|   |   |   `-IfStmt 0x1b36c2e26c8 <line:268:13, line:269:26>
|   |   |     |-OpaqueValueExpr 0x1b36c2e26b0 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x1b36c2e26a0 <col:17, col:26>
|   |   |       `-ImplicitCastExpr 0x1b36c2e2688 <col:24, col:26> 'long' <IntegralCast>
|   |   |         `-ParenExpr 0x1b36c2e2668 <col:24, col:26> 'int'
|   |   |           `-IntegerLiteral 0x1b36c2e2640 <col:25> 'int' 0
|   |   |-BreakStmt 0x1b36c2e27b0 <line:272:9>
|   |   |-BinaryOperator 0x1b36c2e2898 <line:274:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x1b36c2e27b8 <col:9> 'long' lvalue Var 0x1b36c2db200 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1b36c2e2870 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1b36c2e2858 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1b36c2e2810 <col:21, col:26> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|   |   |       `-ImplicitCastExpr 0x1b36c2e27f8 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1b36c2e27d8 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x1b36c2e2b30 <line:275:9, line:279:9>
|   |   | |-BinaryOperator 0x1b36c2e2930 <line:275:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1b36c2e2900 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b36c2e28b8 <col:13> 'long' lvalue Var 0x1b36c2db200 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x1b36c2e2918 <col:20> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1b36c2e28d8 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x1b36c2e2b18 <col:23, line:279:9>
|   |   |   `-IfStmt 0x1b36c2e2a60 <line:276:13, line:277:26>
|   |   |     |-OpaqueValueExpr 0x1b36c2e2a48 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x1b36c2e2a38 <col:17, col:26>
|   |   |       `-ImplicitCastExpr 0x1b36c2e2a20 <col:24, col:26> 'long' <IntegralCast>
|   |   |         `-ParenExpr 0x1b36c2e2a00 <col:24, col:26> 'int'
|   |   |           `-IntegerLiteral 0x1b36c2e29d8 <col:25> 'int' 0
|   |   |-BreakStmt 0x1b36c2e2b48 <line:280:9>
|   |   |-IfStmt 0x1b36c2e30b8 <line:282:9, line:288:9>
|   |   | |-BinaryOperator 0x1b36c2e2c20 <line:282:13, col:24> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1b36c2e2bd8 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b36c2e2b50 <col:13> 'long' lvalue ParmVar 0x1b36c2daf50 'num' 'long'
|   |   | | `-ImplicitCastExpr 0x1b36c2e2c08 <col:19, col:24> 'long' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x1b36c2e2bf0 <col:19, col:24> 'int' <LValueToRValue>
|   |   | |     `-MemberExpr 0x1b36c2e2ba8 <col:19, col:24> 'int' lvalue ->ibuf_size 0x1b36c2d4b48
|   |   | |       `-ImplicitCastExpr 0x1b36c2e2b90 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x1b36c2e2b70 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x1b36c2e3088 <col:35, line:288:9>
|   |   |   |-BinaryOperator 0x1b36c2e2d50 <line:283:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x1b36c2e2c40 <col:13> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1b36c2e2d38 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x1b36c2e2d10 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x1b36c2e2cf8 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1b36c2e2c60 <col:18> 'int ()' Function 0x1b36c2d9740 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x1b36c2e2cd0 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x1b36c2e2cb8 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x1b36c2e2c80 <col:38> 'long' lvalue ParmVar 0x1b36c2daf50 'num' 'long'
|   |   |   |-IfStmt 0x1b36c2e2ed0 <line:284:13, line:285:22>
|   |   |   | |-BinaryOperator 0x1b36c2e2e48 <line:284:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x1b36c2e2e18 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:284:17> 'char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1b36c2e2d70 <col:17> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   |   | | `-ImplicitCastExpr 0x1b36c2e2e30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |   | |   `-ParenExpr 0x1b36c2e2df8 <col:17, col:27> 'void *'
|   |   |   | |     `-CStyleCastExpr 0x1b36c2e2dd0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   | |       `-IntegerLiteral 0x1b36c2e2d90 <col:26> 'int' 0
|   |   |   | `-GotoStmt 0x1b36c2e2eb8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:285:17, col:22> 'malloc_error' 0x1b36c2e2e68
|   |   |   |-CallExpr 0x1b36c2e2f88 <line:286:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x1b36c2e2f70 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1b36c2e2ee8 <col:13> 'int ()' Function 0x1b36c2d9a30 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x1b36c2e2fb0 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x1b36c2e2f40 <col:26, col:31> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |   |   |     `-ImplicitCastExpr 0x1b36c2e2f28 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1b36c2e2f08 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   `-BinaryOperator 0x1b36c2e3068 <line:287:13, col:25> 'char *' '='
|   |   |     |-MemberExpr 0x1b36c2e3000 <col:13, col:18> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |   |     | `-ImplicitCastExpr 0x1b36c2e2fe8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1b36c2e2fc8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x1b36c2e3050 <col:25> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1b36c2e3030 <col:25> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   |-BinaryOperator 0x1b36c2e3160 <line:289:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1b36c2e3108 <col:9, col:14> 'int' lvalue ->ibuf_off 0x1b36c2d4d08
|   |   | | `-ImplicitCastExpr 0x1b36c2e30f0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2e30d0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x1b36c2e3138 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1b36c2e3260 <line:290:9, col:30> 'int' '='
|   |   | |-MemberExpr 0x1b36c2e31b8 <col:9, col:14> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|   |   | | `-ImplicitCastExpr 0x1b36c2e31a0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2e3180 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CStyleCastExpr 0x1b36c2e3238 <col:25, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1b36c2e3220 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x1b36c2e31e8 <col:30> 'long' lvalue ParmVar 0x1b36c2daf50 'num' 'long'
|   |   |-CallExpr 0x1b36c2e33e8 <line:291:9, col:40> 'void *'
|   |   | |-ImplicitCastExpr 0x1b36c2e33d0 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1b36c2e3280 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1b36c2dc6b0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1b36c2e3438 <col:16, col:21> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1b36c2e3420 <col:16, col:21> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1b36c2e32d8 <col:16, col:21> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |   | |     `-ImplicitCastExpr 0x1b36c2e32c0 <col:16> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1b36c2e32a0 <col:16> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-ImplicitCastExpr 0x1b36c2e3468 <col:27> 'const void *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1b36c2e3450 <col:27> 'void *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2e3308 <col:27> 'void *' lvalue ParmVar 0x1b36c2dafd0 'ptr' 'void *'
|   |   | `-ImplicitCastExpr 0x1b36c2e3480 <col:32, col:37> 'unsigned long long' <IntegralCast>
|   |   |   `-CStyleCastExpr 0x1b36c2e3378 <col:32, col:37> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1b36c2e3360 <col:37> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |       `-DeclRefExpr 0x1b36c2e3328 <col:37> 'long' lvalue ParmVar 0x1b36c2daf50 'num' 'long'
|   |   |-BinaryOperator 0x1b36c2e34f8 <line:292:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x1b36c2e3498 <col:9> 'long' lvalue Var 0x1b36c2db200 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1b36c2e34e0 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1b36c2e34b8 <col:15> 'int' 1
|   |   |-BreakStmt 0x1b36c2e3518 <line:293:9>
|   |   |-IfStmt 0x1b36c2e4cd8 <line:295:9, line:308:9> has_else
|   |   | |-BinaryOperator 0x1b36c2e35e0 <line:295:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1b36c2e35c8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:295:13> 'void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1b36c2e3520 <col:13> 'void *' lvalue ParmVar 0x1b36c2dafd0 'ptr' 'void *'
|   |   | | `-ParenExpr 0x1b36c2e35a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   `-CStyleCastExpr 0x1b36c2e3580 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     `-IntegerLiteral 0x1b36c2e3540 <col:26> 'int' 0
|   |   | |-CompoundStmt 0x1b36c2e4b28 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:295:26, line:305:9>
|   |   | | |-BinaryOperator 0x1b36c2e46d0 <line:296:13, col:25> 'int *' '='
|   |   | | | |-DeclRefExpr 0x1b36c2e3600 <col:13> 'int *' lvalue Var 0x1b36c2db508 'ip' 'int *'
|   |   | | | `-CStyleCastExpr 0x1b36c2e46a8 <col:18, col:25> 'int *' <BitCast>
|   |   | | |   `-ImplicitCastExpr 0x1b36c2e4690 <col:25> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | | |     `-DeclRefExpr 0x1b36c2e4658 <col:25> 'void *' lvalue ParmVar 0x1b36c2dafd0 'ptr' 'void *'
|   |   | | `-IfStmt 0x1b36c2e4b00 <line:297:13, line:304:13> has_else
|   |   | |   |-BinaryOperator 0x1b36c2e4780 <line:297:17, col:24> 'int' '=='
|   |   | |   | |-ImplicitCastExpr 0x1b36c2e4768 <col:17, col:18> 'int' <LValueToRValue>
|   |   | |   | | `-UnaryOperator 0x1b36c2e4728 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|   |   | |   | |   `-ImplicitCastExpr 0x1b36c2e4710 <col:18> 'int *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x1b36c2e46f0 <col:18> 'int *' lvalue Var 0x1b36c2db508 'ip' 'int *'
|   |   | |   | `-IntegerLiteral 0x1b36c2e4740 <col:24> 'int' 0
|   |   | |   |-CompoundStmt 0x1b36c2e4948 <col:27, line:300:13>
|   |   | |   | |-BinaryOperator 0x1b36c2e4850 <line:298:17, col:28> 'int' '='
|   |   | |   | | |-DeclRefExpr 0x1b36c2e47a0 <col:17> 'int' lvalue Var 0x1b36c2e3660 'ibs' 'int'
|   |   | |   | | `-CStyleCastExpr 0x1b36c2e4828 <col:23, col:28> 'int' <IntegralCast>
|   |   | |   | |   `-ImplicitCastExpr 0x1b36c2e4810 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
|   |   | |   | |     `-DeclRefExpr 0x1b36c2e47d8 <col:28> 'long' lvalue ParmVar 0x1b36c2daf50 'num' 'long'
|   |   | |   | `-BinaryOperator 0x1b36c2e4928 <line:299:17, col:28> 'int' '='
|   |   | |   |   |-DeclRefExpr 0x1b36c2e4870 <col:17> 'int' lvalue Var 0x1b36c2e36e0 'obs' 'int'
|   |   | |   |   `-ImplicitCastExpr 0x1b36c2e4910 <col:23, col:28> 'int' <LValueToRValue>
|   |   | |   |     `-MemberExpr 0x1b36c2e48e0 <col:23, col:28> 'int' lvalue ->obuf_size 0x1b36c2d4bb8
|   |   | |   |       `-ImplicitCastExpr 0x1b36c2e48c8 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   |         `-DeclRefExpr 0x1b36c2e48a8 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |   `-CompoundStmt 0x1b36c2e4ae0 <line:300:20, line:304:13>
|   |   | |     |-BinaryOperator 0x1b36c2e4a08 <line:302:17, col:28> 'int' '='
|   |   | |     | |-DeclRefExpr 0x1b36c2e4968 <col:17> 'int' lvalue Var 0x1b36c2e3660 'ibs' 'int'
|   |   | |     | `-ImplicitCastExpr 0x1b36c2e49f0 <col:23, col:28> 'int' <LValueToRValue>
|   |   | |     |   `-MemberExpr 0x1b36c2e49c0 <col:23, col:28> 'int' lvalue ->ibuf_size 0x1b36c2d4b48
|   |   | |     |     `-ImplicitCastExpr 0x1b36c2e49a8 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x1b36c2e4988 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |     `-BinaryOperator 0x1b36c2e4ac0 <line:303:17, col:28> 'int' '='
|   |   | |       |-DeclRefExpr 0x1b36c2e4a28 <col:17> 'int' lvalue Var 0x1b36c2e36e0 'obs' 'int'
|   |   | |       `-CStyleCastExpr 0x1b36c2e4a98 <col:23, col:28> 'int' <IntegralCast>
|   |   | |         `-ImplicitCastExpr 0x1b36c2e4a80 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
|   |   | |           `-DeclRefExpr 0x1b36c2e4a48 <col:28> 'long' lvalue ParmVar 0x1b36c2daf50 'num' 'long'
|   |   | `-CompoundStmt 0x1b36c2e4cb8 <line:305:16, line:308:9>
|   |   |   |-BinaryOperator 0x1b36c2e4be0 <line:306:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x1b36c2e4b48 <col:13> 'int' lvalue Var 0x1b36c2e3660 'ibs' 'int'
|   |   |   | `-CStyleCastExpr 0x1b36c2e4bb8 <col:19, col:24> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1b36c2e4ba0 <col:24> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |     `-DeclRefExpr 0x1b36c2e4b68 <col:24> 'long' lvalue ParmVar 0x1b36c2daf50 'num' 'long'
|   |   |   `-BinaryOperator 0x1b36c2e4c98 <line:307:13, col:24> 'int' '='
|   |   |     |-DeclRefExpr 0x1b36c2e4c00 <col:13> 'int' lvalue Var 0x1b36c2e36e0 'obs' 'int'
|   |   |     `-CStyleCastExpr 0x1b36c2e4c70 <col:19, col:24> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x1b36c2e4c58 <col:24> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |         `-DeclRefExpr 0x1b36c2e4c20 <col:24> 'long' lvalue ParmVar 0x1b36c2daf50 'num' 'long'
|   |   |-BinaryOperator 0x1b36c2e4da0 <line:309:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x1b36c2e4d00 <col:9> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   | `-ImplicitCastExpr 0x1b36c2e4d88 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1b36c2e4d58 <col:14, col:19> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |   |     `-ImplicitCastExpr 0x1b36c2e4d40 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1b36c2e4d20 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-BinaryOperator 0x1b36c2e4e78 <line:310:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x1b36c2e4dc0 <col:9> 'char *' lvalue Var 0x1b36c2db358 'p2' 'char *'
|   |   | `-ImplicitCastExpr 0x1b36c2e4e60 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1b36c2e4e30 <col:14, col:19> 'char *' lvalue ->obuf 0x1b36c2d4d78
|   |   |     `-ImplicitCastExpr 0x1b36c2e4e18 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1b36c2e4df8 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x1b36c2e52c8 <line:311:9, line:315:9>
|   |   | |-BinaryOperator 0x1b36c2e5030 <line:311:13, col:66> 'int' '&&'
|   |   | | |-ParenExpr 0x1b36c2e4f18 <col:13, col:39> 'int'
|   |   | | | `-BinaryOperator 0x1b36c2e4ef8 <col:14, line:23:33> 'int' '>'
|   |   | | |   |-ImplicitCastExpr 0x1b36c2e4ee0 <line:311:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1b36c2e4e98 <col:14> 'int' lvalue Var 0x1b36c2e3660 'ibs' 'int'
|   |   | | |   `-IntegerLiteral 0x1b36c2e4eb8 <line:23:33> 'int' 4096
|   |   | | `-ParenExpr 0x1b36c2e5010 <line:311:44, col:66> 'int'
|   |   | |   `-BinaryOperator 0x1b36c2e4ff0 <col:45, col:57> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x1b36c2e4fc0 <col:45> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1b36c2e4f38 <col:45> 'int' lvalue Var 0x1b36c2e3660 'ibs' 'int'
|   |   | |     `-ImplicitCastExpr 0x1b36c2e4fd8 <col:52, col:57> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x1b36c2e4f90 <col:52, col:57> 'int' lvalue ->ibuf_size 0x1b36c2d4b48
|   |   | |         `-ImplicitCastExpr 0x1b36c2e4f78 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x1b36c2e4f58 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x1b36c2e52a8 <col:69, line:315:9>
|   |   |   |-BinaryOperator 0x1b36c2e5160 <line:312:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x1b36c2e5050 <col:13> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1b36c2e5148 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x1b36c2e5120 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x1b36c2e5108 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1b36c2e5070 <col:18> 'int ()' Function 0x1b36c2d9740 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x1b36c2e50e0 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x1b36c2e50c8 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x1b36c2e5090 <col:38> 'long' lvalue ParmVar 0x1b36c2daf50 'num' 'long'
|   |   |   `-IfStmt 0x1b36c2e5290 <line:313:13, line:314:22>
|   |   |     |-BinaryOperator 0x1b36c2e5258 <line:313:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1b36c2e5228 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:313:17> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1b36c2e5180 <col:17> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   |     | `-ImplicitCastExpr 0x1b36c2e5240 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |     |   `-ParenExpr 0x1b36c2e5208 <col:17, col:27> 'void *'
|   |   |     |     `-CStyleCastExpr 0x1b36c2e51e0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |       `-IntegerLiteral 0x1b36c2e51a0 <col:26> 'int' 0
|   |   |     `-GotoStmt 0x1b36c2e5278 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:314:17, col:22> 'malloc_error' 0x1b36c2e2e68
|   |   |-IfStmt 0x1b36c2e68f0 <line:316:9, line:323:9>
|   |   | |-BinaryOperator 0x1b36c2e5478 <line:316:13, col:66> 'int' '&&'
|   |   | | |-ParenExpr 0x1b36c2e5360 <col:13, col:39> 'int'
|   |   | | | `-BinaryOperator 0x1b36c2e5340 <col:14, line:23:33> 'int' '>'
|   |   | | |   |-ImplicitCastExpr 0x1b36c2e5328 <line:316:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1b36c2e52e0 <col:14> 'int' lvalue Var 0x1b36c2e36e0 'obs' 'int'
|   |   | | |   `-IntegerLiteral 0x1b36c2e5300 <line:23:33> 'int' 4096
|   |   | | `-ParenExpr 0x1b36c2e5458 <line:316:44, col:66> 'int'
|   |   | |   `-BinaryOperator 0x1b36c2e5438 <col:45, col:57> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x1b36c2e5408 <col:45> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1b36c2e5380 <col:45> 'int' lvalue Var 0x1b36c2e36e0 'obs' 'int'
|   |   | |     `-ImplicitCastExpr 0x1b36c2e5420 <col:52, col:57> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x1b36c2e53d8 <col:52, col:57> 'int' lvalue ->obuf_size 0x1b36c2d4bb8
|   |   | |         `-ImplicitCastExpr 0x1b36c2e53c0 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x1b36c2e53a0 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x1b36c2e68d0 <col:69, line:323:9>
|   |   |   |-BinaryOperator 0x1b36c2e55a8 <line:317:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x1b36c2e5498 <col:13> 'char *' lvalue Var 0x1b36c2db358 'p2' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1b36c2e5590 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x1b36c2e5568 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x1b36c2e5550 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1b36c2e54b8 <col:18> 'int ()' Function 0x1b36c2d9740 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x1b36c2e5528 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x1b36c2e5510 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x1b36c2e54d8 <col:38> 'long' lvalue ParmVar 0x1b36c2daf50 'num' 'long'
|   |   |   `-IfStmt 0x1b36c2e68b8 <line:318:13, line:322:13>
|   |   |     |-BinaryOperator 0x1b36c2e66d8 <line:318:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1b36c2e66a8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:318:17> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1b36c2e55c8 <col:17> 'char *' lvalue Var 0x1b36c2db358 'p2' 'char *'
|   |   |     | `-ImplicitCastExpr 0x1b36c2e66c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |     |   `-ParenExpr 0x1b36c2e6688 <col:17, col:27> 'void *'
|   |   |     |     `-CStyleCastExpr 0x1b36c2e6660 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |       `-IntegerLiteral 0x1b36c2e55e8 <col:26> 'int' 0
|   |   |     `-CompoundStmt 0x1b36c2e6898 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:318:29, line:322:13>
|   |   |       |-IfStmt 0x1b36c2e6868 <line:319:17, line:320:36>
|   |   |       | |-BinaryOperator 0x1b36c2e67b0 <line:319:21, col:32> 'int' '!='
|   |   |       | | |-ImplicitCastExpr 0x1b36c2e6780 <col:21> 'char *' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x1b36c2e66f8 <col:21> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   |       | | `-ImplicitCastExpr 0x1b36c2e6798 <col:27, col:32> 'char *' <LValueToRValue>
|   |   |       | |   `-MemberExpr 0x1b36c2e6750 <col:27, col:32> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |   |       | |     `-ImplicitCastExpr 0x1b36c2e6738 <col:27> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |       `-DeclRefExpr 0x1b36c2e6718 <col:27> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-CallExpr 0x1b36c2e6828 <line:320:21, col:36> 'int'
|   |   |       |   |-ImplicitCastExpr 0x1b36c2e6810 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |   | `-DeclRefExpr 0x1b36c2e67d0 <col:21> 'int ()' Function 0x1b36c2d9a30 'OPENSSL_free' 'int ()'
|   |   |       |   `-ImplicitCastExpr 0x1b36c2e6850 <col:34> 'char *' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x1b36c2e67f0 <col:34> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   |       `-GotoStmt 0x1b36c2e6880 <line:321:17, col:22> 'malloc_error' 0x1b36c2e2e68
|   |   |-IfStmt 0x1b36c2e6dd8 <line:324:9, line:330:9>
|   |   | |-BinaryOperator 0x1b36c2e69c0 <line:324:13, col:26> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1b36c2e6990 <col:13, col:18> 'char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1b36c2e6940 <col:13, col:18> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |   | | |   `-ImplicitCastExpr 0x1b36c2e6928 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1b36c2e6908 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-ImplicitCastExpr 0x1b36c2e69a8 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2e6970 <col:26> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   | `-CompoundStmt 0x1b36c2e6da0 <col:30, line:330:9>
|   |   |   |-CallExpr 0x1b36c2e6a80 <line:325:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x1b36c2e6a68 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1b36c2e69e0 <col:13> 'int ()' Function 0x1b36c2d9a30 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x1b36c2e6aa8 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x1b36c2e6a38 <col:26, col:31> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |   |   |     `-ImplicitCastExpr 0x1b36c2e6a20 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1b36c2e6a00 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   |-BinaryOperator 0x1b36c2e6b60 <line:326:13, col:25> 'char *' '='
|   |   |   | |-MemberExpr 0x1b36c2e6af8 <col:13, col:18> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|   |   |   | | `-ImplicitCastExpr 0x1b36c2e6ae0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1b36c2e6ac0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1b36c2e6b48 <col:25> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1b36c2e6b28 <col:25> 'char *' lvalue Var 0x1b36c2db2d8 'p1' 'char *'
|   |   |   |-BinaryOperator 0x1b36c2e6c10 <line:327:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x1b36c2e6bb8 <col:13, col:18> 'int' lvalue ->ibuf_off 0x1b36c2d4d08
|   |   |   | | `-ImplicitCastExpr 0x1b36c2e6ba0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1b36c2e6b80 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x1b36c2e6be8 <col:29> 'int' 0
|   |   |   |-BinaryOperator 0x1b36c2e6cc0 <line:328:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x1b36c2e6c68 <col:13, col:18> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|   |   |   | | `-ImplicitCastExpr 0x1b36c2e6c50 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1b36c2e6c30 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x1b36c2e6c98 <col:29> 'int' 0
|   |   |   `-BinaryOperator 0x1b36c2e6d80 <line:329:13, col:30> 'int' '='
|   |   |     |-MemberExpr 0x1b36c2e6d18 <col:13, col:18> 'int' lvalue ->ibuf_size 0x1b36c2d4b48
|   |   |     | `-ImplicitCastExpr 0x1b36c2e6d00 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1b36c2e6ce0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x1b36c2e6d68 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1b36c2e6d48 <col:30> 'int' lvalue Var 0x1b36c2e3660 'ibs' 'int'
|   |   |-IfStmt 0x1b36c2e72c0 <line:331:9, line:337:9>
|   |   | |-BinaryOperator 0x1b36c2e6ea8 <line:331:13, col:26> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1b36c2e6e78 <col:13, col:18> 'char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1b36c2e6e28 <col:13, col:18> 'char *' lvalue ->obuf 0x1b36c2d4d78
|   |   | | |   `-ImplicitCastExpr 0x1b36c2e6e10 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1b36c2e6df0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-ImplicitCastExpr 0x1b36c2e6e90 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1b36c2e6e58 <col:26> 'char *' lvalue Var 0x1b36c2db358 'p2' 'char *'
|   |   | `-CompoundStmt 0x1b36c2e7288 <col:30, line:337:9>
|   |   |   |-CallExpr 0x1b36c2e6f68 <line:332:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x1b36c2e6f50 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1b36c2e6ec8 <col:13> 'int ()' Function 0x1b36c2d9a30 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x1b36c2e6f90 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x1b36c2e6f20 <col:26, col:31> 'char *' lvalue ->obuf 0x1b36c2d4d78
|   |   |   |     `-ImplicitCastExpr 0x1b36c2e6f08 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1b36c2e6ee8 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   |-BinaryOperator 0x1b36c2e7048 <line:333:13, col:25> 'char *' '='
|   |   |   | |-MemberExpr 0x1b36c2e6fe0 <col:13, col:18> 'char *' lvalue ->obuf 0x1b36c2d4d78
|   |   |   | | `-ImplicitCastExpr 0x1b36c2e6fc8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1b36c2e6fa8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1b36c2e7030 <col:25> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1b36c2e7010 <col:25> 'char *' lvalue Var 0x1b36c2db358 'p2' 'char *'
|   |   |   |-BinaryOperator 0x1b36c2e70f8 <line:334:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x1b36c2e70a0 <col:13, col:18> 'int' lvalue ->obuf_off 0x1b36c2d4e58
|   |   |   | | `-ImplicitCastExpr 0x1b36c2e7088 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1b36c2e7068 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x1b36c2e70d0 <col:29> 'int' 0
|   |   |   |-BinaryOperator 0x1b36c2e71a8 <line:335:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x1b36c2e7150 <col:13, col:18> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   |   | | `-ImplicitCastExpr 0x1b36c2e7138 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1b36c2e7118 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x1b36c2e7180 <col:29> 'int' 0
|   |   |   `-BinaryOperator 0x1b36c2e7268 <line:336:13, col:30> 'int' '='
|   |   |     |-MemberExpr 0x1b36c2e7200 <col:13, col:18> 'int' lvalue ->obuf_size 0x1b36c2d4bb8
|   |   |     | `-ImplicitCastExpr 0x1b36c2e71e8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1b36c2e71c8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x1b36c2e7250 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1b36c2e7230 <col:30> 'int' lvalue Var 0x1b36c2e36e0 'obs' 'int'
|   |   |-BreakStmt 0x1b36c2e72d8 <line:338:9>
|   |   |-IfStmt 0x1b36c2e73f0 <line:340:9, line:341:22>
|   |   | |-OpaqueValueExpr 0x1b36c2e73d8 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1b36c2e73c8 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x1b36c2e73b0 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x1b36c2e7390 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x1b36c2e7368 <col:21> 'int' 0
|   |   |-BreakStmt 0x1b36c2e74e8 <line:345:9>
|   |   |-IfStmt 0x1b36c2e7600 <line:348:9, line:349:22>
|   |   | |-OpaqueValueExpr 0x1b36c2e75e8 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1b36c2e75d8 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x1b36c2e75c0 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x1b36c2e75a0 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x1b36c2e7578 <col:21> 'int' 0
|   |   |-IfStmt 0x1b36c2e57a0 <line:350:9, line:353:9>
|   |   | |-BinaryOperator 0x1b36c2e56c0 <line:350:13, col:30> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1b36c2e56a8 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1b36c2e5650 <col:13, col:18> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   | | |   `-ImplicitCastExpr 0x1b36c2e7638 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1b36c2e7618 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-IntegerLiteral 0x1b36c2e5680 <col:30> 'int' 0
|   |   | `-CompoundStmt 0x1b36c2e5788 <col:33, line:353:9>
|   |   |   `-BreakStmt 0x1b36c2e5780 <line:352:13>
|   |   |-ForStmt 0x1b36c2e5fb0 <line:355:9, line:370:9>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | `-CompoundStmt 0x1b36c2e5f98 <line:355:18, line:370:9>
|   |   |   `-IfStmt 0x1b36c2e5f70 <line:357:13, line:369:13> has_else
|   |   |     |-BinaryOperator 0x1b36c2e5880 <line:357:17, col:33> 'int' '>'
|   |   |     | |-ImplicitCastExpr 0x1b36c2e5868 <col:17, col:22> 'int' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x1b36c2e5810 <col:17, col:22> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   |     | |   `-ImplicitCastExpr 0x1b36c2e57f8 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x1b36c2e57d8 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | `-IntegerLiteral 0x1b36c2e5840 <col:33> 'int' 0
|   |   |     |-CompoundStmt 0x1b36c2e5db8 <col:36, line:365:13>
|   |   |     | |-IfStmt 0x1b36c2e5c00 <line:361:17, line:362:36>
|   |   |     | | |-BinaryOperator 0x1b36c2e5b38 <line:361:21, col:26> 'int' '<='
|   |   |     | | | |-ImplicitCastExpr 0x1b36c2e5b20 <col:21> 'int' <LValueToRValue>
|   |   |     | | | | `-DeclRefExpr 0x1b36c2e5ad8 <col:21> 'int' lvalue Var 0x1b36c2db408 'r' 'int'
|   |   |     | | | `-IntegerLiteral 0x1b36c2e5af8 <col:26> 'int' 0
|   |   |     | | `-ReturnStmt 0x1b36c2e5bf0 <line:362:21, col:36>
|   |   |     | |   `-ParenExpr 0x1b36c2e5bd0 <col:28, col:36> 'long'
|   |   |     | |     `-CStyleCastExpr 0x1b36c2e5ba8 <col:29, col:35> 'long' <IntegralCast>
|   |   |     | |       `-ImplicitCastExpr 0x1b36c2e5b90 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     | |         `-DeclRefExpr 0x1b36c2e5b58 <col:35> 'int' lvalue Var 0x1b36c2db408 'r' 'int'
|   |   |     | |-CompoundAssignOperator 0x1b36c2e5cb8 <line:363:17, col:34> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     | | |-MemberExpr 0x1b36c2e5c50 <col:17, col:22> 'int' lvalue ->obuf_off 0x1b36c2d4e58
|   |   |     | | | `-ImplicitCastExpr 0x1b36c2e5c38 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | | |   `-DeclRefExpr 0x1b36c2e5c18 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | | `-ImplicitCastExpr 0x1b36c2e5ca0 <col:34> 'int' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x1b36c2e5c80 <col:34> 'int' lvalue Var 0x1b36c2db408 'r' 'int'
|   |   |     | `-CompoundAssignOperator 0x1b36c2e5d88 <line:364:17, col:34> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |   |-MemberExpr 0x1b36c2e5d20 <col:17, col:22> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   |     |   | `-ImplicitCastExpr 0x1b36c2e5d08 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   |   `-DeclRefExpr 0x1b36c2e5ce8 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     |   `-ImplicitCastExpr 0x1b36c2e5d70 <col:34> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1b36c2e5d50 <col:34> 'int' lvalue Var 0x1b36c2db408 'r' 'int'
|   |   |     `-CompoundStmt 0x1b36c2e5f48 <line:365:20, line:369:13>
|   |   |       |-BinaryOperator 0x1b36c2e5e70 <line:366:17, col:33> 'int' '='
|   |   |       | |-MemberExpr 0x1b36c2e5e18 <col:17, col:22> 'int' lvalue ->obuf_len 0x1b36c2d4de8
|   |   |       | | `-ImplicitCastExpr 0x1b36c2e5e00 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x1b36c2e5de0 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-IntegerLiteral 0x1b36c2e5e48 <col:33> 'int' 0
|   |   |       |-BinaryOperator 0x1b36c2e5f20 <line:367:17, col:33> 'int' '='
|   |   |       | |-MemberExpr 0x1b36c2e5ec8 <col:17, col:22> 'int' lvalue ->obuf_off 0x1b36c2d4e58
|   |   |       | | `-ImplicitCastExpr 0x1b36c2e5eb0 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x1b36c2e5e90 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2db168 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-IntegerLiteral 0x1b36c2e5ef8 <col:33> 'int' 0
|   |   |       `-BreakStmt 0x1b36c2e5f40 <line:368:17>
|   |   |-BreakStmt 0x1b36c2e6088 <line:372:9>
|   |   |-IfStmt 0x1b36c2e6418 <line:375:9, line:377:19>
|   |   | |-OpaqueValueExpr 0x1b36c2e6400 <<invalid sloc>> '_Bool'
|   |   | `-BinaryOperator 0x1b36c2e63e0 <col:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x1b36c2e6380 <col:13> 'long' lvalue Var 0x1b36c2db200 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1b36c2e63c8 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1b36c2e63a0 <col:19> 'int' 0
|   |   |-BreakStmt 0x1b36c2e6430 <line:378:9>
|   |   |-DefaultStmt 0x1b36c2e6560 <line:379:5, line:381:22>
|   |   | `-IfStmt 0x1b36c2e6548 <line:380:9, line:381:22>
|   |   |   |-OpaqueValueExpr 0x1b36c2e6530 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x1b36c2e6520 <col:13, col:22>
|   |   |     `-ImplicitCastExpr 0x1b36c2e6508 <col:20, col:22> 'long' <IntegralCast>
|   |   |       `-ParenExpr 0x1b36c2e64e8 <col:20, col:22> 'int'
|   |   |         `-IntegerLiteral 0x1b36c2e64c0 <col:21> 'int' 0
|   |   `-BreakStmt 0x1b36c2e6620 <line:383:9>
|   |-ReturnStmt 0x1b36c2df7a8 <line:385:5, col:16>
|   | `-ImplicitCastExpr 0x1b36c2df790 <col:12, col:16> 'long' <LValueToRValue>
|   |   `-ParenExpr 0x1b36c2df770 <col:12, col:16> 'long' lvalue
|   |     `-DeclRefExpr 0x1b36c2df750 <col:13> 'long' lvalue Var 0x1b36c2db200 'ret' 'long'
|   |-LabelStmt 0x1b36c2df8d0 <line:386:2, col:14> 'malloc_error'
|   | `-NullStmt 0x1b36c2df8c8 <col:14>
|   `-ReturnStmt 0x1b36c2df948 <line:388:5, col:14>
|     `-ImplicitCastExpr 0x1b36c2df930 <col:12, col:14> 'long' <IntegralCast>
|       `-ParenExpr 0x1b36c2df910 <col:12, col:14> 'int'
|         `-IntegerLiteral 0x1b36c2df8e8 <col:13> 'int' 0
|-FunctionDecl 0x1b36c2dfb70 <line:391:1, line:403:1> line:391:13 invalid buffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1b36c2df9c8 <col:34, col:39> col:39 invalid b 'int *'
| |-ParmVarDecl 0x1b36c2dfa48 <col:42, col:46> col:46 used cmd 'int'
| |-ParmVarDecl 0x1b36c2dfac8 <col:51, col:64> col:64 invalid fp 'int *'
| `-CompoundStmt 0x1b36c2e00d0 <line:392:1, line:403:1>
|   |-DeclStmt 0x1b36c2dfd00 <line:393:5, col:17>
|   | `-VarDecl 0x1b36c2dfc58 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1b36c2dfce8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1b36c2dfcc0 <col:16> 'int' 1
|   |-IfStmt 0x1b36c2dfe28 <line:395:5, line:396:18>
|   | |-OpaqueValueExpr 0x1b36c2dfe10 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1b36c2dfe00 <col:9, col:18>
|   |   `-ImplicitCastExpr 0x1b36c2dfde8 <col:16, col:18> 'long' <IntegralCast>
|   |     `-ParenExpr 0x1b36c2dfdc8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x1b36c2dfda0 <col:17> 'int' 0
|   |-SwitchStmt 0x1b36c2dfe90 <line:397:5, line:401:5>
|   | |-ImplicitCastExpr 0x1b36c2dfe78 <line:397:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1b36c2dfe40 <col:13> 'int' lvalue ParmVar 0x1b36c2dfa48 'cmd' 'int'
|   | `-CompoundStmt 0x1b36c2e0048 <col:18, line:401:5>
|   |   |-DefaultStmt 0x1b36c2e0020 <line:398:5, col:12>
|   |   | `-NullStmt 0x1b36c2e0018 <col:12>
|   |   `-BreakStmt 0x1b36c2e0040 <line:400:9>
|   `-ReturnStmt 0x1b36c2e00c0 <line:402:5, col:16>
|     `-ImplicitCastExpr 0x1b36c2e00a8 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x1b36c2e0088 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x1b36c2e0068 <col:13> 'long' lvalue Var 0x1b36c2dfc58 'ret' 'long'
|-FunctionDecl 0x1b36c2e02c0 <line:405:1, line:450:1> line:405:12 invalid buffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1b36c2e0118 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x1b36c2e0198 <col:32, col:38> col:38 used buf 'char *'
| |-ParmVarDecl 0x1b36c2e0218 <col:43, col:47> col:47 used size 'int'
| `-CompoundStmt 0x1b36c2ede00 <line:406:1, line:450:1>
|   |-DeclStmt 0x1b36c2e0408 <line:407:5, col:26>
|   | `-VarDecl 0x1b36c2e03a0 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-DeclStmt 0x1b36c2e9690 <line:408:5, col:25>
|   | |-VarDecl 0x1b36c2e0438 <col:5, col:15> col:9 used num 'int' cinit
|   | | `-IntegerLiteral 0x1b36c2e04a0 <col:15> 'int' 0
|   | |-VarDecl 0x1b36c2e04e0 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x1b36c2e0560 <col:5, col:21> col:21 used flag 'int'
|   |-DeclStmt 0x1b36c2e9728 <line:409:5, col:12>
|   | `-VarDecl 0x1b36c2e96c0 <col:5, col:11> col:11 used p 'char *'
|   |-UnaryOperator 0x1b36c2e97b0 <line:412:5, col:9> 'int' postfix '--'
|   | `-DeclRefExpr 0x1b36c2e9778 <col:5> 'int' lvalue ParmVar 0x1b36c2e0218 'size' 'int'
|   `-ForStmt 0x1b36c2eddc8 <line:415:5, line:449:5>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     `-CompoundStmt 0x1b36c2eddb0 <line:415:14, line:449:5>
|       `-IfStmt 0x1b36c2edd88 <line:416:9, line:448:9> has_else
|         |-BinaryOperator 0x1b36c2e9890 <line:416:13, col:29> 'int' '>'
|         | |-ImplicitCastExpr 0x1b36c2e9878 <col:13, col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x1b36c2e9820 <col:13, col:18> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|         | |   `-ImplicitCastExpr 0x1b36c2e9808 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |     `-DeclRefExpr 0x1b36c2e97e8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e03a0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | `-IntegerLiteral 0x1b36c2e9850 <col:29> 'int' 0
|         |-CompoundStmt 0x1b36c2ea5c8 <col:32, line:435:9>
|         | |-BinaryOperator 0x1b36c2e9a40 <line:417:13, col:43> 'char *' '='
|         | | |-DeclRefExpr 0x1b36c2e98b0 <col:13> 'char *' lvalue Var 0x1b36c2e96c0 'p' 'char *'
|         | | `-UnaryOperator 0x1b36c2e9a28 <col:17, col:43> 'char *' prefix '&' cannot overflow
|         | |   `-ParenExpr 0x1b36c2e9a08 <col:18, col:43> 'char' lvalue
|         | |     `-ArraySubscriptExpr 0x1b36c2e99e8 <col:19, col:42> 'char' lvalue
|         | |       |-ImplicitCastExpr 0x1b36c2e99b8 <col:19, col:24> 'char *' <LValueToRValue>
|         | |       | `-MemberExpr 0x1b36c2e9920 <col:19, col:24> 'char *' lvalue ->ibuf 0x1b36c2d4c28
|         | |       |   `-ImplicitCastExpr 0x1b36c2e9908 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |       |     `-DeclRefExpr 0x1b36c2e98e8 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e03a0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | |       `-ImplicitCastExpr 0x1b36c2e99d0 <col:29, col:34> 'int' <LValueToRValue>
|         | |         `-MemberExpr 0x1b36c2e9988 <col:29, col:34> 'int' lvalue ->ibuf_off 0x1b36c2d4d08
|         | |           `-ImplicitCastExpr 0x1b36c2e9970 <col:29> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |             `-DeclRefExpr 0x1b36c2e9950 <col:29> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e03a0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | |-BinaryOperator 0x1b36c2e9ac0 <line:418:13, col:20> 'int' '='
|         | | |-DeclRefExpr 0x1b36c2e9a60 <col:13> 'int' lvalue Var 0x1b36c2e0560 'flag' 'int'
|         | | `-IntegerLiteral 0x1b36c2e9a98 <col:20> 'int' 0
|         | |-ForStmt 0x1b36c2ea0b0 <line:419:13, line:426:13>
|         | | |-BinaryOperator 0x1b36c2e9b40 <line:419:18, col:22> 'int' '='
|         | | | |-DeclRefExpr 0x1b36c2e9ae0 <col:18> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|         | | | `-IntegerLiteral 0x1b36c2e9b18 <col:22> 'int' 0
|         | | |-<<<NULL>>>
|         | | |-BinaryOperator 0x1b36c2e9d08 <col:25, col:57> 'int' '&&'
|         | | | |-ParenExpr 0x1b36c2e9c38 <col:25, col:43> 'int'
|         | | | | `-BinaryOperator 0x1b36c2e9c18 <col:26, col:35> 'int' '<'
|         | | | |   |-ImplicitCastExpr 0x1b36c2e9be8 <col:26> 'int' <LValueToRValue>
|         | | | |   | `-DeclRefExpr 0x1b36c2e9b60 <col:26> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|         | | | |   `-ImplicitCastExpr 0x1b36c2e9c00 <col:30, col:35> 'int' <LValueToRValue>
|         | | | |     `-MemberExpr 0x1b36c2e9bb8 <col:30, col:35> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|         | | | |       `-ImplicitCastExpr 0x1b36c2e9ba0 <col:30> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | | |         `-DeclRefExpr 0x1b36c2e9b80 <col:30> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e03a0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | | `-ParenExpr 0x1b36c2e9ce8 <col:48, col:57> 'int'
|         | | |   `-BinaryOperator 0x1b36c2e9cc8 <col:49, col:53> 'int' '<'
|         | | |     |-ImplicitCastExpr 0x1b36c2e9c98 <col:49> 'int' <LValueToRValue>
|         | | |     | `-DeclRefExpr 0x1b36c2e9c58 <col:49> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|         | | |     `-ImplicitCastExpr 0x1b36c2e9cb0 <col:53> 'int' <LValueToRValue>
|         | | |       `-DeclRefExpr 0x1b36c2e9c78 <col:53> 'int' lvalue ParmVar 0x1b36c2e0218 'size' 'int'
|         | | |-UnaryOperator 0x1b36c2e9d48 <col:60, col:61> 'int' postfix '++'
|         | | | `-DeclRefExpr 0x1b36c2e9d28 <col:60> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|         | | `-CompoundStmt 0x1b36c2ea090 <col:65, line:426:13>
|         | |   |-BinaryOperator 0x1b36c2e9e90 <line:420:17, col:31> 'char' '='
|         | |   | |-UnaryOperator 0x1b36c2e9dd0 <col:17, col:24> 'char' lvalue prefix '*' cannot overflow
|         | |   | | `-ParenExpr 0x1b36c2e9db0 <col:18, col:24> 'char *'
|         | |   | |   `-UnaryOperator 0x1b36c2e9d98 <col:19, col:22> 'char *' postfix '++'
|         | |   | |     `-DeclRefExpr 0x1b36c2e9d60 <col:19> 'char *' lvalue ParmVar 0x1b36c2e0198 'buf' 'char *'
|         | |   | `-ImplicitCastExpr 0x1b36c2e9e78 <col:28, col:31> 'char' <LValueToRValue>
|         | |   |   `-ArraySubscriptExpr 0x1b36c2e9e58 <col:28, col:31> 'char' lvalue
|         | |   |     |-ImplicitCastExpr 0x1b36c2e9e28 <col:28> 'char *' <LValueToRValue>
|         | |   |     | `-DeclRefExpr 0x1b36c2e9de8 <col:28> 'char *' lvalue Var 0x1b36c2e96c0 'p' 'char *'
|         | |   |     `-ImplicitCastExpr 0x1b36c2e9e40 <col:30> 'int' <LValueToRValue>
|         | |   |       `-DeclRefExpr 0x1b36c2e9e08 <col:30> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|         | |   `-IfStmt 0x1b36c2ea078 <line:421:17, line:425:17>
|         | |     |-BinaryOperator 0x1b36c2e9f88 <line:421:21, col:29> 'int' '=='
|         | |     | |-ImplicitCastExpr 0x1b36c2e9f70 <col:21, col:24> 'int' <IntegralCast>
|         | |     | | `-ImplicitCastExpr 0x1b36c2e9f58 <col:21, col:24> 'char' <LValueToRValue>
|         | |     | |   `-ArraySubscriptExpr 0x1b36c2e9f20 <col:21, col:24> 'char' lvalue
|         | |     | |     |-ImplicitCastExpr 0x1b36c2e9ef0 <col:21> 'char *' <LValueToRValue>
|         | |     | |     | `-DeclRefExpr 0x1b36c2e9eb0 <col:21> 'char *' lvalue Var 0x1b36c2e96c0 'p' 'char *'
|         | |     | |     `-ImplicitCastExpr 0x1b36c2e9f08 <col:23> 'int' <LValueToRValue>
|         | |     | |       `-DeclRefExpr 0x1b36c2e9ed0 <col:23> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|         | |     | `-CharacterLiteral 0x1b36c2e9f40 <col:29> 'int' 10
|         | |     `-CompoundStmt 0x1b36c2ea050 <col:35, line:425:17>
|         | |       |-BinaryOperator 0x1b36c2e9ff0 <line:422:21, col:28> 'int' '='
|         | |       | |-DeclRefExpr 0x1b36c2e9fa8 <col:21> 'int' lvalue Var 0x1b36c2e0560 'flag' 'int'
|         | |       | `-IntegerLiteral 0x1b36c2e9fc8 <col:28> 'int' 1
|         | |       |-UnaryOperator 0x1b36c2ea030 <line:423:21, col:22> 'int' postfix '++'
|         | |       | `-DeclRefExpr 0x1b36c2ea010 <col:21> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|         | |       `-BreakStmt 0x1b36c2ea048 <line:424:21>
|         | |-CompoundAssignOperator 0x1b36c2ea158 <line:427:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-DeclRefExpr 0x1b36c2ea0e8 <col:13> 'int' lvalue Var 0x1b36c2e0438 'num' 'int'
|         | | `-ImplicitCastExpr 0x1b36c2ea140 <col:20> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x1b36c2ea120 <col:20> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|         | |-CompoundAssignOperator 0x1b36c2ea1e0 <line:428:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-DeclRefExpr 0x1b36c2ea188 <col:13> 'int' lvalue ParmVar 0x1b36c2e0218 'size' 'int'
|         | | `-ImplicitCastExpr 0x1b36c2ea1c8 <col:21> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x1b36c2ea1a8 <col:21> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|         | |-CompoundAssignOperator 0x1b36c2ea2b0 <line:429:13, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-MemberExpr 0x1b36c2ea248 <col:13, col:18> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|         | | | `-ImplicitCastExpr 0x1b36c2ea230 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x1b36c2ea210 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e03a0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | `-ImplicitCastExpr 0x1b36c2ea298 <col:30> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x1b36c2ea278 <col:30> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|         | |-CompoundAssignOperator 0x1b36c2ea380 <line:430:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-MemberExpr 0x1b36c2ea318 <col:13, col:18> 'int' lvalue ->ibuf_off 0x1b36c2d4d08
|         | | | `-ImplicitCastExpr 0x1b36c2ea300 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x1b36c2ea2e0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e03a0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | `-ImplicitCastExpr 0x1b36c2ea368 <col:30> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x1b36c2ea348 <col:30> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|         | `-IfStmt 0x1b36c2ea5b0 <line:431:13, line:434:13>
|         |   |-BinaryOperator 0x1b36c2ea468 <line:431:17, col:33> 'int' '||'
|         |   | |-ImplicitCastExpr 0x1b36c2ea450 <col:17> 'int' <LValueToRValue>
|         |   | | `-DeclRefExpr 0x1b36c2ea3b0 <col:17> 'int' lvalue Var 0x1b36c2e0560 'flag' 'int'
|         |   | `-BinaryOperator 0x1b36c2ea430 <col:25, col:33> 'int' '=='
|         |   |   |-ImplicitCastExpr 0x1b36c2ea418 <col:25> 'int' <LValueToRValue>
|         |   |   | `-DeclRefExpr 0x1b36c2ea3d0 <col:25> 'int' lvalue ParmVar 0x1b36c2e0218 'size' 'int'
|         |   |   `-IntegerLiteral 0x1b36c2ea3f0 <col:33> 'int' 0
|         |   `-CompoundStmt 0x1b36c2ea590 <col:36, line:434:13>
|         |     |-BinaryOperator 0x1b36c2ea508 <line:432:17, col:24> 'char' '='
|         |     | |-UnaryOperator 0x1b36c2ea4c0 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|         |     | | `-ImplicitCastExpr 0x1b36c2ea4a8 <col:18> 'char *' <LValueToRValue>
|         |     | |   `-DeclRefExpr 0x1b36c2ea488 <col:18> 'char *' lvalue ParmVar 0x1b36c2e0198 'buf' 'char *'
|         |     | `-ImplicitCastExpr 0x1b36c2ea4f0 <col:24> 'char' <IntegralCast>
|         |     |   `-CharacterLiteral 0x1b36c2ea4d8 <col:24> 'int' 0
|         |     `-ReturnStmt 0x1b36c2ea580 <line:433:17, col:28>
|         |       `-ImplicitCastExpr 0x1b36c2ea568 <col:24, col:28> 'int' <LValueToRValue>
|         |         `-ParenExpr 0x1b36c2ea548 <col:24, col:28> 'int' lvalue
|         |           `-DeclRefExpr 0x1b36c2ea528 <col:25> 'int' lvalue Var 0x1b36c2e0438 'num' 'int'
|         `-CompoundStmt 0x1b36c2edd60 <line:435:16, line:448:9>
|           |-IfStmt 0x1b36c2edbd8 <line:438:13, line:445:13>
|           | |-BinaryOperator 0x1b36c2ed7c8 <line:438:17, col:22> 'int' '<='
|           | | |-ImplicitCastExpr 0x1b36c2ed7b0 <col:17> 'int' <LValueToRValue>
|           | | | `-DeclRefExpr 0x1b36c2ed768 <col:17> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|           | | `-IntegerLiteral 0x1b36c2ed788 <col:22> 'int' 0
|           | `-CompoundStmt 0x1b36c2edbb0 <col:25, line:445:13>
|           |   |-BinaryOperator 0x1b36c2ed888 <line:440:17, col:24> 'char' '='
|           |   | |-UnaryOperator 0x1b36c2ed840 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|           |   | | `-ImplicitCastExpr 0x1b36c2ed828 <col:18> 'char *' <LValueToRValue>
|           |   | |   `-DeclRefExpr 0x1b36c2ed808 <col:18> 'char *' lvalue ParmVar 0x1b36c2e0198 'buf' 'char *'
|           |   | `-ImplicitCastExpr 0x1b36c2ed870 <col:24> 'char' <IntegralCast>
|           |   |   `-CharacterLiteral 0x1b36c2ed858 <col:24> 'int' 0
|           |   |-IfStmt 0x1b36c2eda98 <line:441:17, line:442:48>
|           |   | |-BinaryOperator 0x1b36c2ed908 <line:441:21, col:25> 'int' '<'
|           |   | | |-ImplicitCastExpr 0x1b36c2ed8f0 <col:21> 'int' <LValueToRValue>
|           |   | | | `-DeclRefExpr 0x1b36c2ed8a8 <col:21> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|           |   | | `-IntegerLiteral 0x1b36c2ed8c8 <col:25> 'int' 0
|           |   | `-ReturnStmt 0x1b36c2eda88 <line:442:21, col:48>
|           |   |   `-ParenExpr 0x1b36c2eda68 <col:28, col:48> 'int'
|           |   |     `-ConditionalOperator 0x1b36c2eda38 <col:29, col:47> 'int'
|           |   |       |-ParenExpr 0x1b36c2ed9a8 <col:29, col:37> 'int'
|           |   |       | `-BinaryOperator 0x1b36c2ed988 <col:30, col:36> 'int' '>'
|           |   |       |   |-ImplicitCastExpr 0x1b36c2ed970 <col:30> 'int' <LValueToRValue>
|           |   |       |   | `-DeclRefExpr 0x1b36c2ed928 <col:30> 'int' lvalue Var 0x1b36c2e0438 'num' 'int'
|           |   |       |   `-IntegerLiteral 0x1b36c2ed948 <col:36> 'int' 0
|           |   |       |-ImplicitCastExpr 0x1b36c2eda08 <col:41> 'int' <LValueToRValue>
|           |   |       | `-DeclRefExpr 0x1b36c2ed9c8 <col:41> 'int' lvalue Var 0x1b36c2e0438 'num' 'int'
|           |   |       `-ImplicitCastExpr 0x1b36c2eda20 <col:47> 'int' <LValueToRValue>
|           |   |         `-DeclRefExpr 0x1b36c2ed9e8 <col:47> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|           |   `-IfStmt 0x1b36c2edb98 <line:443:17, line:444:32>
|           |     |-BinaryOperator 0x1b36c2edb10 <line:443:21, col:26> 'int' '=='
|           |     | |-ImplicitCastExpr 0x1b36c2edaf8 <col:21> 'int' <LValueToRValue>
|           |     | | `-DeclRefExpr 0x1b36c2edab0 <col:21> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|           |     | `-IntegerLiteral 0x1b36c2edad0 <col:26> 'int' 0
|           |     `-ReturnStmt 0x1b36c2edb88 <line:444:21, col:32>
|           |       `-ImplicitCastExpr 0x1b36c2edb70 <col:28, col:32> 'int' <LValueToRValue>
|           |         `-ParenExpr 0x1b36c2edb50 <col:28, col:32> 'int' lvalue
|           |           `-DeclRefExpr 0x1b36c2edb30 <col:29> 'int' lvalue Var 0x1b36c2e0438 'num' 'int'
|           |-BinaryOperator 0x1b36c2edc90 <line:446:13, col:29> 'int' '='
|           | |-MemberExpr 0x1b36c2edc28 <col:13, col:18> 'int' lvalue ->ibuf_len 0x1b36c2d4c98
|           | | `-ImplicitCastExpr 0x1b36c2edc10 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|           | |   `-DeclRefExpr 0x1b36c2edbf0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e03a0 'ctx' 'BIO_F_BUFFER_CTX *'
|           | `-ImplicitCastExpr 0x1b36c2edc78 <col:29> 'int' <LValueToRValue>
|           |   `-DeclRefExpr 0x1b36c2edc58 <col:29> 'int' lvalue Var 0x1b36c2e04e0 'i' 'int'
|           `-BinaryOperator 0x1b36c2edd40 <line:447:13, col:29> 'int' '='
|             |-MemberExpr 0x1b36c2edce8 <col:13, col:18> 'int' lvalue ->ibuf_off 0x1b36c2d4d08
|             | `-ImplicitCastExpr 0x1b36c2edcd0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|             |   `-DeclRefExpr 0x1b36c2edcb0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1b36c2e03a0 'ctx' 'BIO_F_BUFFER_CTX *'
|             `-IntegerLiteral 0x1b36c2edd18 <col:29> 'int' 0
|-FunctionDecl 0x1b36c2edf70 <line:452:1, line:455:1> line:452:12 invalid buffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1b36c2ede50 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x1b36c2eded0 <col:32, col:44> col:44 used str 'const char *'
| `-CompoundStmt 0x1b36c2ee2a0 <line:453:1, line:455:1>
`-FunctionDecl 0x1b36c2ee0a0 <line:454:34> col:34 implicit used strlen 'unsigned long long (const char *)' extern
  `-ParmVarDecl 0x1b36c2ee140 <<invalid sloc>> <invalid sloc> 'const char *'
