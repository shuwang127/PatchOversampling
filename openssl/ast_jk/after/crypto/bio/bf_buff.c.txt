TranslationUnitDecl 0x1d42c212f98 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1d42c213830 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1d42c213530 '__int128'
|-TypedefDecl 0x1d42c2138a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1d42c213550 'unsigned __int128'
|-TypedefDecl 0x1d42c213bd8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1d42c213990 'struct __NSConstantString_tag'
|   `-Record 0x1d42c2138f8 '__NSConstantString_tag'
|-TypedefDecl 0x1d42c213c48 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1d42c213170 'unsigned long long'
|-TypedefDecl 0x1d42c213ce0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1d42c213ca0 'char *'
|   `-BuiltinType 0x1d42c213030 'char'
|-TypedefDecl 0x1d42c213d50 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1d42c213ca0 'char *'
|   `-BuiltinType 0x1d42c213030 'char'
|-TypedefDecl 0x1d42c213e10 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1d42c213170 'unsigned long long'
|-TypedefDecl 0x1d42c213e80 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1d42c213ca0 'char *'
|   `-BuiltinType 0x1d42c213030 'char'
|-FunctionDecl 0x1d42db993c0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d42db99460 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1d42db994d0 <col:21> Implicit
|-FunctionDecl 0x1d42db99528 prev 0x1d42db993c0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1d42db99250 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1d42db99618 <col:21> Inherited Implicit
|-TypedefDecl 0x1d42db99658 prev 0x1d42c213c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1d42c213170 'unsigned long long'
|-TypedefDecl 0x1d42db99700 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1d42db996d0 'size_t' sugar
|   |-Typedef 0x1d42db99658 'size_t'
|   `-BuiltinType 0x1d42c213170 'unsigned long long'
|-TypedefDecl 0x1d42db99770 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1d42c2130d0 'long long'
|-TypedefDecl 0x1d42db997e0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1d42c2130d0 'long long'
|-TypedefDecl 0x1d42db99850 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1d42c213110 'unsigned short'
|-TypedefDecl 0x1d42db998c0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1d42c213110 'unsigned short'
|-TypedefDecl 0x1d42db99930 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1d42c213110 'unsigned short'
|-TypedefDecl 0x1d42db999a0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1d42c213090 'int'
|-TypedefDecl 0x1d42db99a10 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1d42c2130b0 'long'
|-TypedefDecl 0x1d42db99a80 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1d42c2130d0 'long long'
|-TypedefDecl 0x1d42db99b10 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1d42db99ae0 '__time64_t' sugar
|   |-Typedef 0x1d42db99a80 '__time64_t'
|   `-BuiltinType 0x1d42c2130d0 'long long'
|-FunctionDecl 0x1d42db99c88 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1d42db99ea8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1d42dbd48f0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1d42db99fe8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1d42db9a060 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1d42db9a0d8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1d42db9a158 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1d42dbd4690 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1d42dbd49d0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1d42dbd4a90 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1d42dbd4c00 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1d42dbd4bb0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1d42dbd4b50 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1d42dbd4a70 'struct threadlocaleinfostruct'
|       `-Record 0x1d42dbe4790 'threadlocaleinfostruct'
|-TypedefDecl 0x1d42dbd4d10 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1d42dbd4cc0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1d42dbd4c60 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1d42dbd4b30 'struct threadmbcinfostruct'
|       `-Record 0x1d42dbd4a90 'threadmbcinfostruct'
|-RecordDecl 0x1d42dbd4d68 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1d42dbd4e20 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1d42dbd4ee0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d42dbd4f70 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1d42dbd5000 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1d42dbd50b8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1d42dbd5060 'struct localeinfo_struct' sugar
|   `-RecordType 0x1d42dbd4ec0 'struct localeinfo_struct'
|     `-Record 0x1d42dbd4e20 'localeinfo_struct'
|-TypedefDecl 0x1d42dbd5190 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1d42dbd5140 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1d42dbd5060 'struct localeinfo_struct' sugar
|     `-RecordType 0x1d42dbd4ec0 'struct localeinfo_struct'
|       `-Record 0x1d42dbd4e20 'localeinfo_struct'
|-RecordDecl 0x1d42dbd5208 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1d42dbd52c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d42dbd5338 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1d42dbd53f8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1d42dbd5490 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1d42dbd5500 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1d42dbd55b8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1d42dbd5560 'struct localerefcount' sugar
|   `-RecordType 0x1d42dbd52a0 'struct localerefcount'
|     `-Record 0x1d42dbd5208 'localerefcount'
|-RecordDecl 0x1d42dbe4790 prev 0x1d42dbd49d0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1d42dbe4810 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d42dbe4888 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1d42dbe48f8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1d42dbe4968 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1d42dbe49d8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1d42dbe4b98 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1d42dbe4c08 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1d42dbe4c78 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1d42dbe4ce8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1d42dbe4d58 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1d42dbe4dc8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1d42dbe4e20 parent 0x1d42c212f98 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1d42dbe4fb0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1d42dbe5020 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1d42dbe5090 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1d42dbe5100 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1d42dbe51a0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1d42dbe5210 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1d42dbe5320 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1d42dbe5458 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1d42dbe5508 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1d42dbe54b0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1d42dbd4a70 'struct threadlocaleinfostruct'
|     `-Record 0x1d42dbe4790 'threadlocaleinfostruct'
|-RecordDecl 0x1d42dbe55a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1d42dbe5660 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1d42dbe56d8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1d42dbe2770 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1d42dbe27e0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1d42dbe2850 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1d42dbe28c0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1d42dbe2930 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1d42dbe29a0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1d42dbe2a10 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1d42dbe2ac0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1d42dbe2a70 'struct _iobuf' sugar
|   `-RecordType 0x1d42dbe5640 'struct _iobuf'
|     `-Record 0x1d42dbe55a0 '_iobuf'
|-FunctionDecl 0x1d42dbe2cf8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1d42dbe2dc8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1d42c2130d0 'long long'
|-FunctionDecl 0x1d42dbe2fa8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dbe2e30 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1d42dbe32a0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d42dbe3080 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1d42dbe30f8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1d42dbe3650 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1d42dbe3380 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1d42dbe3400 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1d42dbe3480 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1d42dbe7930 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d42dbe77c0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1d42dbe7b60 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1d42dbe7a20 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1d42dbe7d10 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dbe7c30 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1d42dbe7f00 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d42dbe81f8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1d42dbe7fd0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1d42dbe8050 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1d42dbe83b0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dbe82d0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1d42dbe8560 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dbe8480 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1d42dbe8710 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dbe8630 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1d42dbe58a8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dbe57c8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1d42dbe5a38 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d42dbe5da0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1d42dbe5b00 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1d42dbe5bf8 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1d42dbe6158 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1d42dbe5e80 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1d42dbe5f00 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1d42dbe5f78 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1d42dbe6318 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dbe6238 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1d42dbe65e0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1d42dbe63f0 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1d42dbe6470 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1d42dbea7f0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d42dbeabe8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1d42dbeac88 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1d42dbeacf0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1d42dbead68 prev 0x1d42dbeabe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1d42dbea9c0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1d42dbeaa40 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1d42dbeae18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dbeb290 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1d42dbeafc0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1d42dbeb040 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1d42dbeb0c0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1d42dbeb5b0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1d42dbeb650 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1d42dbeb6b8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1d42dbeb730 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1d42dbe97e0 prev 0x1d42dbeb5b0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d42dbeb370 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1d42dbeb3f0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1d42dbe98d8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1d42dbe9aa0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d42dbe9920 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1d42dbe99a0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1d42dbe9cf8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d42dbe9b80 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1d42dbe9bf8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1d42dbe9f28 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d42dbe9dd8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1d42dbea220 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1d42dbea000 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1d42dbea078 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1d42dbea6b8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1d42dbea758 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d42dbef840 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1d42dbef8a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1d42dbef910 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1d42dbef998 prev 0x1d42dbea6b8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1d42dbea300 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1d42dbea378 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dbea3f0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dbea468 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1d42dbefea0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d42dbefa88 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1d42dbefb00 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dbefb78 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dbefbf0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dbefc68 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1d42dbf0360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1d42dbf0090 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1d42dbf0110 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1d42dbf0188 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1d42dbf0418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dbee8d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1d42dbf0560 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1d42dbf05e0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1d42dbf0660 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1d42dbf06d8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1d42dbeec80 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1d42dbeed20 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1d42dbeed88 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1d42dbeee00 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1d42dbeee68 prev 0x1d42dbeec80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1d42dbeeab8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1d42dbeeb38 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1d42dbef048 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1d42dbeef18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dbef488 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dbef188 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1d42dbef208 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1d42dbef2a0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d42dbef540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dbf2870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d42dbef680 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1d42dbef700 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1d42dbf2b60 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dbf2948 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d42dbf29c8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1d42dbf2a40 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dbf2ec0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1d42dbf2c40 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1d42dbf2d18 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1d42dbf3278 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1d42dbf2f98 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1d42dbf3018 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1d42dbf3098 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1d42dbf34d8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1d42dbf3358 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1d42dbf0898 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1d42dbf35a8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1d42dbf3628 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1d42dbf36a8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1d42dbf0af8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1d42dbf0978 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1d42dbf0fb8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1d42dbf1058 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1d42dbf10c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1d42dbf1128 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1d42dbf1190 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1d42dbf1218 prev 0x1d42dbf0fb8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1d42dbf0c00 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1d42dbf0c78 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dbf0cf0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dbf0d68 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1d42dbf13e0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dbf1300 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1d42dbf1570 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d42dbf16f8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d42dbed9e0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1d42dbf17c8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1d42dbed830 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d42dbedd08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d42dbedbc0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1d42dbeddb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dbedfd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dbedef0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1d42dbee1f0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1d42dbee0a8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1d42dbee3a0 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dbee2c0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1d42dbee5f0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1d42dbee478 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1d42dbee4f8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1d42dbeb800 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1d42dbeb8a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1d42dbeb910 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1d42dbeb978 prev 0x1d42dbeb800 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1d42dbee6d0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1d42dbeba68 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1d42dbebb98 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d42dbebab8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1d42dbebde8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d42dbebc70 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1d42dbebce8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1d42dbebfa8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d42dbebec8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1d42dbec1c8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1d42dbec080 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1d42dbec418 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d42dbec2a0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1d42dbec318 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1d42dbec5d8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1d42dbec4f8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1d42dc400b0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1d42dbec6b0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1d42dbec730 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1d42dc40270 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1d42dc40190 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1d42dc40500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1d42dc40420 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1d42dc405a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1d42dc407a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d42dc406c8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1d42dc40930 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d42dc40bd8 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1d42dc40c78 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1d42dc40ce8 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1d42dc40d50 prev 0x1d42dc40bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1d42dc40ac0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1d42dc40f28 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1d42dc40df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc3e2d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc3e098 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc3e110 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d42dc3e380 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc3e5a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d42dc3e4c8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1d42dc3e7f8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc3e680 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc3e6f8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc3ebb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1d42dc3e990 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc3ea10 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1d42dc3ec68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc3ee90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d42dc3edb0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1d42dc46188 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1d42dc46040 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1d42dc46370 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1d42dc467c0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1d42dc46438 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc464b8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1d42dc46538 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1d42dc465b0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1d42dc46c40 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d42dc468b0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc46928 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc469a0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc46a20 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1d42dc44020 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d42dc46d30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc46da8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc46e28 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1d42dc441e8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d42dc44108 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1d42dc445c0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1d42dc44660 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d42dc446c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1d42dc44740 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1d42dc447a8 prev 0x1d42dc445c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1d42dc44380 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1d42dc44400 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1d42dc44988 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1d42dc44858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc44d78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc44a98 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1d42dc44b18 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc44b90 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d42dc44e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc410f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1d42dc44f78 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1d42dc40ff0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1d42dc413e8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc411d0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1d42dc41250 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc412c8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc41878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d42dc41590 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1d42dc41608 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc41688 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1d42dc41930 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc41f00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc41b70 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1d42dc41be8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc41c68 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc41ce0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d42dc45030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc45390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d42dc45178 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1d42dc451f0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc45270 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1d42dc45728 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc45478 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1d42dc454f0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc45570 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc455e8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc45988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1d42dc45a28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc45ce0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1d42dc45b70 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1d42dc3efd0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1d42dc45db8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1d42dc45e30 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1d42dc3f250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1d42dc3f170 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1d42dc3f2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc3f5b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d42dc3f440 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1d42dc3f4b8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1d42dc3f9d0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d42dc3fa70 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1d42dc3fad8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d42dc3fb40 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d42dc3fbc0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1d42dc3fc28 prev 0x1d42dc3f9d0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d42dc3f690 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc3f710 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc3f788 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d42dc3fd28 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1d42dc47050 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d42dc470f0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1d42dc47158 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d42dc471c0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d42dc47240 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1d42dc472a8 prev 0x1d42dc47050 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1d42dc3fd70 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc3fdf0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc3fe68 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d42dc473a8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1d42dc47608 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1d42dc473f0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc47470 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc474e8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc47900 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1d42dc476e8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc47768 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc477e0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc47c48 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d42dc47ce8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d42dc47d50 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d42dc47dc8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1d42dc47e30 prev 0x1d42dc47c48 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d42dc479e8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc47a60 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d42dc47f28 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1d42dc48198 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d42dc48238 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d42dc482a0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d42dc48318 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1d42dc48380 prev 0x1d42dc48198 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1d42dc47f78 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc48060 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d42dc48478 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1d42dc48640 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d42dc484c8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc48540 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc48898 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d42dc48720 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc48798 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc48df8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d42dc48e98 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d42dc48f00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1d42dc48f68 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d42dc48fd0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d42dc49070 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1d42dc490d8 prev 0x1d42dc48df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d42dc48a38 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc48ab0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc48b30 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc48ba8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1d42dc492c8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1d42dc49198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc49738 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d42dc49318 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc49390 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc49408 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc49488 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc49500 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc49b78 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d42dc49830 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc498a8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc49920 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc499a0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc49a18 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc49f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d42dc49d30 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1d42dc49da8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc49e28 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1d42dc4a000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc43480 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d42dc431d0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1d42dc43248 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc432c8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc43340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1d42dc43540 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc43938 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d42dc43688 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc43700 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc43780 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc437f8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc43cf8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1d42dc43a28 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1d42dc43aa8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc43b20 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc420a0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1d42dc42140 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d42dc421a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1d42dc42220 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1d42dc42288 prev 0x1d42dc420a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1d42dc43ea0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1d42dc43f20 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1d42dc42468 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1d42dc42338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc42890 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d42dc42930 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1d42dc42998 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1d42dc42a00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d42dc42a80 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1d42dc42ae8 prev 0x1d42dc42890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1d42dc42578 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1d42dc425f8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc42670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1d42dc42cd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1d42dc42ba0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc500e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1d42dc50180 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d42dc501e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1d42dc50250 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1d42dc502d0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1d42dc50338 prev 0x1d42dc500e0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1d42dc42d20 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1d42dc42da0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc42e18 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1d42dc50438 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1d42dc50600 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d42dc50488 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc50500 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc508f8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d42dc506e0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc50758 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc507d8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1d42dc50c90 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d42dc509e0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc50a58 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc50ad8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc50b50 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc50ef8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1d42dc50d78 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1d42dc50df8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1d42dc4c0a0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d42dc50fd8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1d42dc4c390 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1d42dc4c178 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1d42dc4c1f0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc4c270 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1d42dc4c688 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1d42dc4c470 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc4c4f0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4c568 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc4c8e8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d42dc4c770 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4c7e8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc4cc78 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1d42dc4c9c8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1d42dc4ca40 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc4cac0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4cb38 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc4ce48 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1d42dc4cd68 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1d42dc4f0d0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1d42dc4cf20 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4cf98 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc4f290 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1d42dc4f1b0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1d42dc4f420 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1d42dc4f668 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc4f4f0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4f568 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc4f8c0 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc4f748 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4f7c0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc4fb18 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc4f9a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4fa18 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc4fec8 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc4fbf8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc4fc70 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc4fce8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc4b1b0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc4ffb0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc50028 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc4b090 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc4b4a8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc4b298 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc4b310 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc4b388 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc4b7a0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc4b588 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc4b608 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4b680 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc4ba98 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc4b880 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc4b900 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4b978 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc4bd90 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc4bb78 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc4bbf8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4bc70 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc51250 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc4be70 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc4bef0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc4bf68 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc4bfe0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc515e8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc51338 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc513b8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc51430 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc514a8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc51980 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc516d0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc51750 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc517c8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc51840 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc51e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc51b30 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc51bb0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc51c28 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d42dc51ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc4a390 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc52018 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc4a080 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc4a100 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4a178 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc4a730 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc4a480 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc4a4f8 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc4a578 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc4a5f0 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc4ac80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc4a920 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc4a9a0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc4aa18 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d42dc4aa90 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1d42dc4ad40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc52338 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc4ae88 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc4af00 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc4af80 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc4aff8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc52100 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc52778 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc52430 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc524a8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc52528 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc525a0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc52618 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc529e8 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc52870 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc528e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc52c40 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc52ac8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc52b40 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc52f30 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc52d20 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc52d98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc52e10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc53240 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc53018 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc53090 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc53120 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc53698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc533e8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc53460 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc534e0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc53558 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d42dc53758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc53b50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc538a0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc53918 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc53998 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc53a10 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc54120 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc53c40 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc53cb8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc53d30 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc53db0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1d42dc53e28 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc54660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc54318 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc54390 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc54410 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc54488 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d42dc54500 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1d42dc54728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc54ba8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc54878 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc548f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc54970 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1d42dc549e8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc54a60 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc4d110 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc54ca0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1d42dc54d18 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc54d90 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc54e10 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1d42dc54e88 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc54f00 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc4d4d0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1d42dc4d208 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc4d280 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc4d300 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1d42dc4d740 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1d42dc4d5d0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1d42dc4d958 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1d42dc4dc38 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1d42dc4da20 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1d42dc4da98 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1d42dc4de80 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1d42dc4dd10 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d42dc58160 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1d42dc4df50 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1d42dc582e8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1d42dc58520 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1d42dc583b0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1d42dc58428 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1d42dc586d0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1d42dc585f8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1d42dc58978 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1d42dc587a0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1d42dc58818 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1d42dc58d20 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1d42dc58a50 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d42dc58ad0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1d42dc58b48 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1d42dc59020 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1d42dc58e00 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc58e78 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1d42dc5b348 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1d42dc590f8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1d42dc5b1a0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1d42dc5b650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d42dc5b4e0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1d42dc5b6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc5b9b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1d42dc5b838 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1d42dc5bcc0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc5ba88 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1d42dc5bb00 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc5bf10 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc5bd98 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1d42dc5be10 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc5c1a0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d42dc5bfe8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc5c350 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d42dc5c270 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc5c500 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d42dc5c420 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc5c898 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc5c5d0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc5c648 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc5c6c0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc5cb88 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc5c978 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc5c9f0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc5ca68 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc5ce78 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc5cc68 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc5cce0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc5cd58 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc55130 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc5cf58 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc5cfd0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc5d048 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc55430 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc55210 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc55288 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc55680 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc55508 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc55580 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc558d0 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc55758 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc557d0 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc55b20 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc559a8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc55a20 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc55ed8 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc55bf8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d42dc55c70 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc55ce8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc56350 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc55fb8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1d42dc56030 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc560a8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc56140 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc56708 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc56438 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc564b0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc56528 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc569f8 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc567e8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc56860 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc568d8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc56ce8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc56ad8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc56b50 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc56bc8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc57070 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc56dc8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc56e40 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc56eb8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc56f30 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc57500 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc57178 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc571f0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc57268 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc572e0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc57a08 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc575e8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc57660 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc576d8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc57750 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc577c8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc57dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc57bb8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d42dc57c30 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc57ca8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d42dc57e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc593a0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc58080 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d42dc59170 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc591e8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc59260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1d42dc59460 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc59718 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc595a0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1d42dc59618 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc598d0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d42dc597f0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc59bb0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc599a0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc59a18 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc59a90 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc59e08 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc59c90 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc59d08 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc61010 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc59ee0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc59f58 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc59fd0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc61398 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc610f0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc61168 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc611e0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc61258 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc61560 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d42dc61480 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc617a8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc61630 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc616a8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc61ab0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc61880 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc618f8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc61d00 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc61b88 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc61c00 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc61f50 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc61dd8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc61e50 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc66358 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc66088 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc66100 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc66178 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc66648 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc66438 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc664b0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc66528 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc66938 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc66728 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc667a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc66818 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc66cf8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc66a18 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc66a90 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc66b08 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc62020 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc66dd8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc66e50 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc66ec8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc62310 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc62100 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc62178 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc621f0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc62760 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc623f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc62468 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc624e0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc62558 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc62af0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc62848 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc628c0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc62938 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc629b0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc62e80 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc62bd8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc62c50 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc62cc8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc62d40 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc64350 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc62f68 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc64040 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc640b8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc64130 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc646e0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc64438 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc644b0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc64528 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc645a0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc64a70 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc647c8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc64840 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc648b8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc64930 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc64f78 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc64b58 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc64bd0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc64c48 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc64cc0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc64d38 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc653b8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc65078 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc650f0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc65168 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc651e0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc65258 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc657e8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc654a8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc65520 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc65598 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc65610 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc65688 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc65a50 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc658d8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc65950 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc65ca0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc65b28 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc65ba0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc65f88 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc65d78 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc65df0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc65e68 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc5f388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc5f0e0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc5f158 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc5f1d0 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc5f248 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d42dc5f448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc5f9b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc5f590 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc5f608 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc5f680 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc5f6f8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc5f770 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc5fef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc5fbb0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc5fc28 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc5fca0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc5fd18 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d42dc5fd90 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1d42dc67070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc67680 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc671b8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1d42dc67230 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc672a8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc67320 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc67398 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc67410 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc67b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc67948 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d42dc679c0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1d42dc67c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d42dc67d48 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d42dc682e8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc68000 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d42dc68090 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc68108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1d42dc683a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d42dc684b8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d42dc68a58 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc68778 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d42dc687f0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc68868 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1d42dc68b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d42dc68c30 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d42dc692a0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc68ef0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1d42dc68f68 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc68fe0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d42dc69090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1d42dc69360 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1d42dc69480 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1d42dc69788 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1d42dc695a8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d42dc69620 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc69698 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1d42dc632d0 <line:37:1, line:44:1>
|   |-DeclStmt 0x1d42dc698d0 <line:38:5, col:21>
|   | `-VarDecl 0x1d42dc69868 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1d42dc69968 <line:39:5, col:13>
|   | `-VarDecl 0x1d42dc69900 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1d42dc69cc0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1d42dc69ca8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d42dc69bc0 <col:34> '<builtin fn type>' Function 0x1d42dc69a58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1d42dc69bf8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1d42dc69868 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1d42dc69c30 <col:29> 'const wchar_t *' lvalue ParmVar 0x1d42dc69698 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1d42dc69f80 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1d42dc69cf0 <col:5> 'int' lvalue Var 0x1d42dc69900 '_Ret' 'int'
|   | `-CallExpr 0x1d42dc69ec0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1d42dc69ea8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1d42dc69d28 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d42dc64f78 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1d42dc69f08 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d42dc69d48 <col:27> 'wchar_t *' lvalue ParmVar 0x1d42dc695a8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1d42dc69f20 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d42dc69d68 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d42dc69620 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1d42dc69f38 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d42dc69d88 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d42dc69698 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1d42dc69f50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1d42dc69e10 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1d42dc69de8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1d42dc69da8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1d42dc69f68 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1d42dc69e30 <col:59> 'va_list':'char *' lvalue Var 0x1d42dc69868 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1d42dc63260 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1d42dc63248 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d42dc63198 <col:34> '<builtin fn type>' Function 0x1d42dc63030 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1d42dc631d0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1d42dc69868 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1d42dc632c0 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1d42dc632a8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1d42dc63288 <col:12> 'int' lvalue Var 0x1d42dc69900 '_Ret' 'int'
|-FunctionDecl 0x1d42dc69a58 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1d42dc69af8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1d42dc69b68 <col:34> Implicit
|-FunctionDecl 0x1d42dc63030 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1d42dc630d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1d42dc63140 <col:34> Implicit
|-FunctionDecl 0x1d42dc635c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1d42dc63320 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d42dc63398 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc63410 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc63488 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1d42dc638b0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1d42dc638a0 <line:51:5, col:62>
|     `-CallExpr 0x1d42dc637e0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1d42dc637c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d42dc636a0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d42dc64f78 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1d42dc63828 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d42dc636c0 <col:27> 'wchar_t *' lvalue ParmVar 0x1d42dc63320 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1d42dc63840 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1d42dc636e0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d42dc63398 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1d42dc63858 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d42dc63700 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d42dc63410 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1d42dc63870 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1d42dc63788 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1d42dc63760 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1d42dc63720 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1d42dc63888 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1d42dc637a8 <col:59> 'va_list':'char *' lvalue ParmVar 0x1d42dc63488 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1d42dc63b50 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1d42dc638d8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d42dc63950 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc639c8 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc63a40 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1d42dc701a8 <line:61:1, line:68:1>
|   |-DeclStmt 0x1d42dc63ca0 <line:62:5, col:21>
|   | `-VarDecl 0x1d42dc63c38 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1d42dc63d38 <line:63:5, col:13>
|   | `-VarDecl 0x1d42dc63cd0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1d42dc63de0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1d42dc63dc8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d42dc63d50 <col:34> '<builtin fn type>' Function 0x1d42dc69a58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1d42dc63d70 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1d42dc63c38 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1d42dc63da8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1d42dc63a40 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1d42dc63fe0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1d42dc63e10 <col:5> 'int' lvalue Var 0x1d42dc63cd0 '_Ret' 'int'
|   | `-CallExpr 0x1d42dc63f20 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1d42dc63f08 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1d42dc63e48 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d42dc64f78 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1d42dc63f68 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d42dc63e68 <col:27> 'wchar_t *' lvalue ParmVar 0x1d42dc638d8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1d42dc63f80 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d42dc63e88 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d42dc63950 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1d42dc63f98 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d42dc63ea8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d42dc639c8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1d42dc63fb0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1d42dc63ec8 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1d42dc63a40 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1d42dc63fc8 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1d42dc63ee8 <col:64> 'va_list':'char *' lvalue Var 0x1d42dc63c38 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1d42dc70138 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1d42dc70120 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1d42dc64000 <col:34> '<builtin fn type>' Function 0x1d42dc63030 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1d42dc70100 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1d42dc63c38 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1d42dc70198 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1d42dc70180 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1d42dc70160 <col:12> 'int' lvalue Var 0x1d42dc63cd0 '_Ret' 'int'
|-FunctionDecl 0x1d42dc70538 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1d42dc701f8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1d42dc70270 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc702e8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc70360 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1d42dc703d8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1d42dc707c0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1d42dc707b0 <line:75:5, col:67>
|     `-CallExpr 0x1d42dc706f0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1d42dc706d8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1d42dc70618 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1d42dc64f78 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1d42dc70738 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d42dc70638 <col:27> 'wchar_t *' lvalue ParmVar 0x1d42dc701f8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1d42dc70750 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1d42dc70658 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1d42dc70270 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1d42dc70768 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d42dc70678 <col:44> 'const wchar_t *' lvalue ParmVar 0x1d42dc702e8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1d42dc70780 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1d42dc70698 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1d42dc70360 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1d42dc70798 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1d42dc706b8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1d42dc703d8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1d42dc70a08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d42dc707e8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc70860 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1d42dc70c58 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1d42dc70ae0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc70b58 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc70f40 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1d42dc70d30 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc70da8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1d42dc70e20 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1d42dc6b228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc6b0b0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc6b128 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d42dc6b2d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc6b6e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc6b4d8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc6b550 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc6b5c8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d42dc6b7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc6ba58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc6b8e0 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1d42dc6b958 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc6bd40 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc6bb30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc6bba8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc6bc20 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc6c130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc6bee0 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc6bf58 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d42dc6c1e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc6c6b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc6c3e0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc6c458 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc6c4d0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d42dc6c770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc6ca28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc6c8b0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc6c928 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc6cd10 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc6cb00 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc6cb78 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc6cbf0 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc74228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc6ceb0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc6cf28 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc6cfa0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d42dc742e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc74860 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc744e0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc74558 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc745d0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc74648 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d42dc74920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc74c70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc74a60 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc74ad8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc74b50 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc74ff8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc74d50 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc74dc8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc74e40 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc74eb8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc712c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1d42dc711e0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1d42dc71368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc716e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc71568 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc715e0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1d42dc71790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc719b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1d42dc718d0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1d42dc71bf8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1d42dc71a80 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc71af8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1d42dc71ef8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1d42dc71cd8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1d42dc71d50 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1d42dc722c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d42dc72090 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc72120 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1d42dc72378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc72780 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d42dc724c0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1d42dc72538 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc725b0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1d42dc72be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1d42dc72920 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc72998 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc72a10 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1d42dc72c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc6f138 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1d42dc72de0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1d42dc72e58 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1d42dc72ed0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc72f48 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1d42dc6f390 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1d42dc6f220 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1d42dc6f5d0 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1d42dc6f460 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1d42dc6f4d8 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1d42dc6f788 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1d42dc6f6a8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1d42dc6fa78 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1d42dc6f858 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1d42dc6f8d0 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1d42dc6fce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1d42dc6fc10 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1d42dc6fd90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1d42dc6ffa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1d42dc6fed0 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1d42dc6e1d8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1d42dc70078 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1d42dc6e0e0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1d42dc6e420 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1d42dc6e2b0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1d42dc6e328 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1d42dc6e5d0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d42dc6e4f8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1d42dc6e778 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1d42dc6e6a0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1d42dc6e928 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dc6e848 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1d42dc6ead8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1d42dc6e9f8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1d42dc6ee50 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d42dc6ebb0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1d42dc6ec28 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc6eca0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc6ed18 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1d42dc78350 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d42dc6ef40 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1d42dc6efb8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc6f030 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc78180 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc781f8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1d42dc78660 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1d42dc78440 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc784c0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1d42dc78540 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1d42dc78820 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1d42dc78740 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1d42dc78b10 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1d42dc788f0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1d42dc78970 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1d42dc789f0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1d42dc78cd0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1d42dc78bf0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1d42dc79048 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1d42dc78da8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1d42dc78e20 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1d42dc78e98 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1d42dc78f10 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1d42dc7a318 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d42dc7a1a0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1d42dc7a218 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1d42dc7a650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1d42dc7a4d0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1d42dc7a550 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1d42dc7a700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1d42dc7a9b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d42dc7aa58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1d42dc7ad98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1d42dc7ac20 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1d42dc7aca0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1d42dc7ae48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1d42dc76160 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d42dc76200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1d42dc764a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1d42dc763c0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1d42dc76548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1d42dc767c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d42dc76868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1d42dc76b10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1d42dc76a30 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1d42dc76bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1d42dc76e98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1d42dc76db8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1d42dc76f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1d42dc79308 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1d42dc79190 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1d42dc79208 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1d42dc793b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1d42dc79678 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1d42dc79718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1d42dc79950 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1d42dc79b60 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1d42dc79a20 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1d42dc79db0 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1d42dc79c38 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x1d42dc79e70 <.//openssl//file_jk/after\crypto\bio/bio_lcl.h:64:1, line:71:1> line:64:8 struct bio_addrinfo_st definition
| |-FieldDecl 0x1d42dc79f48 <line:65:5, col:9> col:9 bai_family 'int'
| |-FieldDecl 0x1d42dc79fb8 <line:66:5, col:9> col:9 bai_socktype 'int'
| |-FieldDecl 0x1d42dc7a028 <line:67:5, col:9> col:9 bai_protocol 'int'
| |-FieldDecl 0x1d42dc7a090 <line:68:5, col:12> col:12 bai_addrlen 'size_t':'unsigned long long'
| |-RecordDecl 0x1d42dc7a0e8 parent 0x1d42c212f98 <line:69:5, col:12> col:12 struct sockaddr
| |-FieldDecl 0x1d42dc81750 <col:5, col:22> col:22 bai_addr 'struct sockaddr *'
| `-FieldDecl 0x1d42dc81860 <line:70:5, col:29> col:29 bai_next 'struct bio_addrinfo_st *'
|-RecordDecl 0x1d42dc818b8 <line:74:1, line:83:1> line:74:7 invalid union bio_addr_st definition
| |-FieldDecl 0x1d42dc819c0 <line:75:5, col:21> col:21 invalid sa 'struct sockaddr':'struct sockaddr'
| |-RecordDecl 0x1d42dc81a18 parent 0x1d42c212f98 <line:79:5, col:12> col:12 struct sockaddr_in
| `-FieldDecl 0x1d42dc81b38 <col:5, col:24> col:24 invalid s_in 'struct sockaddr_in':'struct sockaddr_in'
|-RecordDecl 0x1d42dc81b90 <line:91:9, line:112:1> line:91:16 struct bio_f_buffer_ctx_struct definition
| |-FieldDecl 0x1d42dc81c68 <line:104:5, col:9> col:9 referenced ibuf_size 'int'
| |-FieldDecl 0x1d42dc81cd8 <line:105:5, col:9> col:9 referenced obuf_size 'int'
| |-FieldDecl 0x1d42dc81d48 <line:106:5, col:11> col:11 referenced ibuf 'char *'
| |-FieldDecl 0x1d42dc81db8 <line:107:5, col:9> col:9 referenced ibuf_len 'int'
| |-FieldDecl 0x1d42dc81e28 <line:108:5, col:9> col:9 referenced ibuf_off 'int'
| |-FieldDecl 0x1d42dc81e98 <line:109:5, col:11> col:11 referenced obuf 'char *'
| |-FieldDecl 0x1d42dc81f08 <line:110:5, col:9> col:9 referenced obuf_len 'int'
| `-FieldDecl 0x1d42dc81f78 <line:111:5, col:9> col:9 referenced obuf_off 'int'
|-TypedefDecl 0x1d42dc82028 <line:91:1, line:112:3> col:3 referenced BIO_F_BUFFER_CTX 'struct bio_f_buffer_ctx_struct':'struct bio_f_buffer_ctx_struct'
| `-ElaboratedType 0x1d42dc81fd0 'struct bio_f_buffer_ctx_struct' sugar
|   `-RecordType 0x1d42dc81c30 'struct bio_f_buffer_ctx_struct'
|     `-Record 0x1d42dc81b90 'bio_f_buffer_ctx_struct'
|-RecordDecl 0x1d42dc82098 <line:114:1, line:132:1> line:114:8 invalid struct bio_st definition
| |-FieldDecl 0x1d42dc82168 <line:115:5, col:23> col:23 invalid method 'const int *'
| |-FieldDecl 0x1d42dc85760 <line:117:5, col:74> col:12 callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
| |-FieldDecl 0x1d42dc857d0 <line:118:5, col:11> col:11 cb_arg 'char *'
| |-FieldDecl 0x1d42dc85840 <line:119:5, col:9> col:9 init 'int'
| |-FieldDecl 0x1d42dc858b0 <line:120:5, col:9> col:9 shutdown 'int'
| |-FieldDecl 0x1d42dc85920 <line:121:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1d42dc85990 <line:122:5, col:9> col:9 retry_reason 'int'
| |-FieldDecl 0x1d42dc85a00 <line:123:5, col:9> col:9 num 'int'
| |-FieldDecl 0x1d42dc85a70 <line:124:5, col:11> col:11 ptr 'void *'
| |-FieldDecl 0x1d42dc85af0 <line:125:5, col:20> col:20 next_bio 'struct bio_st *'
| |-FieldDecl 0x1d42dc85b70 <line:126:5, col:20> col:20 prev_bio 'struct bio_st *'
| |-FieldDecl 0x1d42dc85be0 <line:127:5, col:9> col:9 references 'int'
| |-FieldDecl 0x1d42dc85c50 <line:128:5, col:14> col:14 invalid num_read 'int'
| |-FieldDecl 0x1d42dc85cc0 <line:129:5, col:14> col:14 invalid num_write 'int'
| |-FieldDecl 0x1d42dc85d30 <line:130:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x1d42dc85da0 <line:131:5, col:20> col:20 invalid lock 'int *'
|-VarDecl 0x1d42dc85e10 <line:139:1, col:23> col:23 invalid bio_lookup_lock 'int *' extern
|-FunctionDecl 0x1d42dc860a0 <line:141:1, col:58> col:5 invalid BIO_ADDR_make 'int (int *, const struct sockaddr *)'
| |-ParmVarDecl 0x1d42dc85e90 <col:19, col:29> col:29 invalid ap 'int *'
| `-ParmVarDecl 0x1d42dc85f80 <col:33, col:56> col:56 sa 'const struct sockaddr *'
|-FunctionDecl 0x1d42dc86270 <line:142:1, col:60> col:24 invalid BIO_ADDR_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x1d42dc86168 <col:42, col:58> col:58 invalid ap 'const int *'
|-FunctionDecl 0x1d42dc86470 <line:143:1, col:56> col:18 invalid BIO_ADDR_sockaddr_noconst 'struct sockaddr *(int *)'
| `-ParmVarDecl 0x1d42dc86330 <col:44, col:54> col:54 invalid ap 'int *'
|-FunctionDecl 0x1d42dc86600 <line:144:1, col:52> col:11 invalid BIO_ADDR_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x1d42dc86530 <col:34, col:50> col:50 invalid ap 'const int *'
|-FunctionDecl 0x1d42dc82728 <line:145:1, col:61> col:11 invalid BIO_ADDRINFO_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x1d42dc82690 <col:38, col:58> col:58 invalid bai 'const int *'
|-FunctionDecl 0x1d42dc82890 <line:146:1, col:69> col:24 invalid BIO_ADDRINFO_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x1d42dc827e8 <col:46, col:66> col:66 invalid bai 'const int *'
|-VarDecl 0x1d42dc82950 <line:149:1, col:23> col:23 invalid bio_type_lock 'int *' extern
|-FunctionDecl 0x1d42dc82a50 <line:151:1, col:31> col:6 bio_sock_cleanup_int 'void (void)'
|-FunctionDecl 0x1d42dc82d10 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:15:1, col:57> col:12 invalid buffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1d42dc82b20 <col:25, col:30> col:30 invalid h 'int *'
| |-ParmVarDecl 0x1d42dc82ba0 <col:33, col:45> col:45 buf 'const char *'
| `-ParmVarDecl 0x1d42dc82c20 <col:50, col:54> col:54 num 'int'
|-FunctionDecl 0x1d42dc82fd0 <line:16:1, col:51> col:12 invalid buffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1d42dc82de0 <col:24, col:29> col:29 invalid h 'int *'
| |-ParmVarDecl 0x1d42dc82e60 <col:32, col:38> col:38 buf 'char *'
| `-ParmVarDecl 0x1d42dc82ee0 <col:43, col:47> col:47 size 'int'
|-FunctionDecl 0x1d42dc83200 <line:17:1, col:47> col:12 invalid buffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1d42dc830a0 <col:24, col:29> col:29 invalid h 'int *'
| `-ParmVarDecl 0x1d42dc83120 <col:32, col:44> col:44 str 'const char *'
|-FunctionDecl 0x1d42dc83470 <line:18:1, col:51> col:12 invalid buffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1d42dc832c8 <col:24, col:29> col:29 invalid h 'int *'
| |-ParmVarDecl 0x1d42dc83348 <col:32, col:38> col:38 str 'char *'
| `-ParmVarDecl 0x1d42dc833c8 <col:43, col:47> col:47 size 'int'
|-FunctionDecl 0x1d42dc84810 <line:19:1, col:63> col:13 invalid buffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1d42dc83540 <col:25, col:30> col:30 invalid h 'int *'
| |-ParmVarDecl 0x1d42dc835c0 <col:33, col:37> col:37 cmd 'int'
| |-ParmVarDecl 0x1d42dc84690 <col:42, col:47> col:47 arg1 'long'
| `-ParmVarDecl 0x1d42dc84710 <col:53, col:59> col:59 arg2 'void *'
|-FunctionDecl 0x1d42dc84980 <line:20:1, col:29> col:12 invalid buffer_new 'int (int *)' static
| `-ParmVarDecl 0x1d42dc848e8 <col:23, col:28> col:28 invalid h 'int *'
|-FunctionDecl 0x1d42dc84ad8 <line:21:1, col:33> col:12 invalid buffer_free 'int (int *)' static
| `-ParmVarDecl 0x1d42dc84a40 <col:24, col:29> col:29 invalid data 'int *'
|-FunctionDecl 0x1d42dc84d80 <line:22:1, col:66> col:13 invalid buffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1d42dc84b98 <col:34, col:39> col:39 invalid h 'int *'
| |-ParmVarDecl 0x1d42dc84c18 <col:42, col:46> col:46 cmd 'int'
| `-ParmVarDecl 0x1d42dc84c98 <col:51, col:64> col:64 invalid fp 'int *'
|-VarDecl 0x1d42dc84e50 <line:25:1, col:25> col:25 invalid methods_buffer 'const int' static
|-FunctionDecl 0x1d42dc84fe0 <line:38:1, line:41:1> line:38:19 invalid BIO_f_buffer 'const int *(void)'
| `-CompoundStmt 0x1d42dc85098 <line:39:1, line:41:1>
|-FunctionDecl 0x1d42dc85158 <line:43:1, line:67:1> line:43:12 invalid buffer_new 'int (int *)' static
| |-ParmVarDecl 0x1d42dc850c0 <col:23, col:28> col:28 invalid bi 'int *'
| `-CompoundStmt 0x1d42dc92438 <line:44:1, line:67:1>
|   |-DeclStmt 0x1d42dc85560 <line:45:5, col:57>
|   | `-VarDecl 0x1d42dc852a8 <col:5, col:56> col:23 used ctx 'BIO_F_BUFFER_CTX *' cinit
|   |   `-ImplicitCastExpr 0x1d42dc85548 <col:29, col:56> 'BIO_F_BUFFER_CTX *' <IntegralToPointer>
|   |     `-CallExpr 0x1d42dc85520 <col:29, col:56> 'int'
|   |       |-ImplicitCastExpr 0x1d42dc85508 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1d42dc85428 <col:29> 'int ()' Function 0x1d42dc85360 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x1d42dc854b8 <col:44, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1d42dc85498 <col:50, col:55> 'BIO_F_BUFFER_CTX':'struct bio_f_buffer_ctx_struct' lvalue
|   |           `-UnaryOperator 0x1d42dc85480 <col:51, col:52> 'BIO_F_BUFFER_CTX':'struct bio_f_buffer_ctx_struct' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x1d42dc85468 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x1d42dc85448 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc852a8 'ctx' 'BIO_F_BUFFER_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x1d42dc917b8 <line:47:5, line:48:18>
|   | |-BinaryOperator 0x1d42dc85668 <line:47:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1d42dc85638 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:47:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d42dc85578 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc852a8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x1d42dc85650 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_F_BUFFER_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1d42dc85618 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1d42dc855f0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1d42dc855b0 <col:26> 'int' 0
|   | `-ReturnStmt 0x1d42dc917a8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:48:9, col:18>
|   |   `-ParenExpr 0x1d42dc91788 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1d42dc91760 <col:17> 'int' 0
|   |-BinaryOperator 0x1d42dc91860 <line:49:5, line:23:33> 'int' '='
|   | |-MemberExpr 0x1d42dc91808 <line:49:5, col:10> 'int' lvalue ->ibuf_size 0x1d42dc81c68
|   | | `-ImplicitCastExpr 0x1d42dc917f0 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d42dc917d0 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc852a8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x1d42dc91838 <line:23:33> 'int' 4096
|   |-BinaryOperator 0x1d42dc91a78 <line:50:5, col:51> 'char *' '='
|   | |-MemberExpr 0x1d42dc918b8 <col:5, col:10> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   | | `-ImplicitCastExpr 0x1d42dc918a0 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d42dc91880 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc852a8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x1d42dc91a60 <col:17, col:51> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1d42dc91a38 <col:17, col:51> 'int'
|   |     |-ImplicitCastExpr 0x1d42dc91a20 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1d42dc919d8 <col:17> 'int ()' Function 0x1d42dc91910 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x1d42dc919f8 <line:23:33> 'int' 4096
|   |-IfStmt 0x1d42dc91dd8 <line:51:5, line:54:5>
|   | |-BinaryOperator 0x1d42dc91bb8 <line:51:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1d42dc91b88 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:51:9, col:14> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1d42dc91ad0 <col:9, col:14> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   | | |   `-ImplicitCastExpr 0x1d42dc91ab8 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1d42dc91a98 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc852a8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x1d42dc91ba0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1d42dc91b68 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1d42dc91b40 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1d42dc91b00 <col:26> 'int' 0
|   | `-CompoundStmt 0x1d42dc91db8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:51:28, line:54:5>
|   |   |-CallExpr 0x1d42dc91d20 <line:52:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1d42dc91d08 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1d42dc91cc8 <col:9> 'int ()' Function 0x1d42dc91c00 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1d42dc91d48 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d42dc91ce8 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc852a8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   `-ReturnStmt 0x1d42dc91da8 <line:53:9, col:18>
|   |     `-ParenExpr 0x1d42dc91d88 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x1d42dc91d60 <col:17> 'int' 0
|   |-BinaryOperator 0x1d42dc91e80 <line:55:5, line:23:33> 'int' '='
|   | |-MemberExpr 0x1d42dc91e28 <line:55:5, col:10> 'int' lvalue ->obuf_size 0x1d42dc81cd8
|   | | `-ImplicitCastExpr 0x1d42dc91e10 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d42dc91df0 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc852a8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x1d42dc91e58 <line:23:33> 'int' 4096
|   |-BinaryOperator 0x1d42dc91fa8 <line:56:5, col:51> 'char *' '='
|   | |-MemberExpr 0x1d42dc91ed8 <col:5, col:10> 'char *' lvalue ->obuf 0x1d42dc81e98
|   | | `-ImplicitCastExpr 0x1d42dc91ec0 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d42dc91ea0 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc852a8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x1d42dc91f90 <col:17, col:51> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1d42dc91f68 <col:17, col:51> 'int'
|   |     |-ImplicitCastExpr 0x1d42dc91f50 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1d42dc91f08 <col:17> 'int ()' Function 0x1d42dc91910 'OPENSSL_malloc' 'int ()'
|   |     `-IntegerLiteral 0x1d42dc91f28 <line:23:33> 'int' 4096
|   |-IfStmt 0x1d42dc92300 <line:57:5, line:61:5>
|   | |-BinaryOperator 0x1d42dc920e8 <line:57:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1d42dc920b8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:57:9, col:14> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1d42dc92000 <col:9, col:14> 'char *' lvalue ->obuf 0x1d42dc81e98
|   | | |   `-ImplicitCastExpr 0x1d42dc91fe8 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1d42dc91fc8 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc852a8 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x1d42dc920d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1d42dc92098 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1d42dc92070 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1d42dc92030 <col:26> 'int' 0
|   | `-CompoundStmt 0x1d42dc922d8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:57:28, line:61:5>
|   |   |-CallExpr 0x1d42dc921a8 <line:58:9, col:31> 'int'
|   |   | |-ImplicitCastExpr 0x1d42dc92190 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1d42dc92108 <col:9> 'int ()' Function 0x1d42dc91c00 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1d42dc921d0 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1d42dc92160 <col:22, col:27> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |   |     `-ImplicitCastExpr 0x1d42dc92148 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1d42dc92128 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc852a8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-CallExpr 0x1d42dc92240 <line:59:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1d42dc92228 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1d42dc921e8 <col:9> 'int ()' Function 0x1d42dc91c00 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1d42dc92268 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d42dc92208 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc852a8 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   `-ReturnStmt 0x1d42dc922c8 <line:60:9, col:18>
|   |     `-ParenExpr 0x1d42dc922a8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x1d42dc92280 <col:17> 'int' 0
|   `-ReturnStmt 0x1d42dc92428 <line:66:5, col:14>
|     `-ParenExpr 0x1d42dc92408 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1d42dc923e0 <col:13> 'int' 1
|-FunctionDecl 0x1d42dc92540 <line:69:1, line:83:1> line:69:12 invalid buffer_free 'int (int *)' static
| |-ParmVarDecl 0x1d42dc924a8 <col:24, col:29> col:29 invalid a 'int *'
| `-CompoundStmt 0x1d42dc92af8 <line:70:1, line:83:1>
|   |-DeclStmt 0x1d42dc92678 <line:71:5, col:24>
|   | `-VarDecl 0x1d42dc92610 <col:5, col:23> col:23 used b 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x1d42dc92798 <line:73:5, line:74:18>
|   | |-OpaqueValueExpr 0x1d42dc92780 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d42dc92770 <col:9, col:18>
|   |   `-ParenExpr 0x1d42dc92740 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1d42dc92718 <col:17> 'int' 0
|   |-CallExpr 0x1d42dc92888 <line:76:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x1d42dc92870 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1d42dc927e8 <col:5> 'int ()' Function 0x1d42dc91c00 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1d42dc928b0 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1d42dc92840 <col:18, col:21> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |     `-ImplicitCastExpr 0x1d42dc92828 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1d42dc92808 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc92610 'b' 'BIO_F_BUFFER_CTX *'
|   |-CallExpr 0x1d42dc92968 <line:77:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x1d42dc92950 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1d42dc928c8 <col:5> 'int ()' Function 0x1d42dc91c00 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1d42dc92990 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1d42dc92920 <col:18, col:21> 'char *' lvalue ->obuf 0x1d42dc81e98
|   |     `-ImplicitCastExpr 0x1d42dc92908 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1d42dc928e8 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc92610 'b' 'BIO_F_BUFFER_CTX *'
|   `-ReturnStmt 0x1d42dc92ae8 <line:82:5, col:14>
|     `-ParenExpr 0x1d42dc92ac8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1d42dc92aa0 <col:13> 'int' 1
|-FunctionDecl 0x1d42dc92cf0 <line:85:1, line:154:1> line:85:12 invalid buffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1d42dc92b48 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x1d42dc92bc8 <col:32, col:38> col:38 used out 'char *'
| |-ParmVarDecl 0x1d42dc92c48 <col:43, col:47> col:47 used outl 'int'
| `-CompoundStmt 0x1d42dc912c0 <line:86:1, line:154:1>
|   |-DeclStmt 0x1d42dc92f00 <line:87:5, col:19>
|   | |-VarDecl 0x1d42dc92dd8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1d42dc92e58 <col:5, col:18> col:12 used num 'int' cinit
|   |   `-IntegerLiteral 0x1d42dc92ec0 <col:18> 'int' 0
|   |-DeclStmt 0x1d42dc92f90 <line:88:5, col:26>
|   | `-VarDecl 0x1d42dc92f28 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x1d42dc93110 <line:90:5, line:91:18>
|   | |-BinaryOperator 0x1d42dc93098 <line:90:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1d42dc93068 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:90:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d42dc92fa8 <col:9> 'char *' lvalue ParmVar 0x1d42dc92bc8 'out' 'char *'
|   | | `-ImplicitCastExpr 0x1d42dc93080 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1d42dc93048 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1d42dc93020 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1d42dc92fe0 <col:26> 'int' 0
|   | `-ReturnStmt 0x1d42dc93100 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:91:9, col:18>
|   |   `-ParenExpr 0x1d42dc930e0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1d42dc930b8 <col:17> 'int' 0
|   |-IfStmt 0x1d42dc93370 <line:94:5, line:95:18>
|   | |-OpaqueValueExpr 0x1d42dc93358 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d42dc93348 <col:9, col:18>
|   |   `-ParenExpr 0x1d42dc93328 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1d42dc93300 <col:17> 'int' 0
|   |-BinaryOperator 0x1d42dc933e8 <line:96:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1d42dc93388 <col:5> 'int' lvalue Var 0x1d42dc92e58 'num' 'int'
|   | `-IntegerLiteral 0x1d42dc933c0 <col:11> 'int' 0
|   |-LabelStmt 0x1d42dc93640 <line:99:2, line:100:14> 'start'
|   | `-BinaryOperator 0x1d42dc935d0 <col:5, col:14> 'int' '='
|   |   |-DeclRefExpr 0x1d42dc93518 <col:5> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |   `-ImplicitCastExpr 0x1d42dc935b8 <col:9, col:14> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1d42dc93588 <col:9, col:14> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|   |       `-ImplicitCastExpr 0x1d42dc93570 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1d42dc93550 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc92f28 'ctx' 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x1d42dc8f198 <line:102:5, line:113:5>
|   | |-BinaryOperator 0x1d42dc936b8 <line:102:9, col:14> 'int' '!='
|   | | |-ImplicitCastExpr 0x1d42dc936a0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d42dc93658 <col:9> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   | | `-IntegerLiteral 0x1d42dc93678 <col:14> 'int' 0
|   | `-CompoundStmt 0x1d42dc8f148 <col:17, line:113:5>
|   |   |-IfStmt 0x1d42dc8e7c8 <line:103:9, line:104:17>
|   |   | |-BinaryOperator 0x1d42dc8e730 <line:103:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1d42dc93730 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d42dc936d8 <col:13> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x1d42dc93748 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc936f8 <col:17> 'int' lvalue ParmVar 0x1d42dc92c48 'outl' 'int'
|   |   | `-BinaryOperator 0x1d42dc8e7a8 <line:104:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x1d42dc8e750 <col:13> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x1d42dc8e790 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1d42dc8e770 <col:17> 'int' lvalue ParmVar 0x1d42dc92c48 'outl' 'int'
|   |   |-CallExpr 0x1d42dc8ec50 <line:105:9, col:51> 'void *'
|   |   | |-ImplicitCastExpr 0x1d42dc8ec38 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1d42dc8ea10 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1d42dc8e820 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1d42dc8eca0 <col:16> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1d42dc8ec88 <col:16> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc8ea48 <col:16> 'char *' lvalue ParmVar 0x1d42dc92bc8 'out' 'char *'
|   |   | |-ImplicitCastExpr 0x1d42dc8ecb8 <col:21, col:47> 'const void *' <BitCast>
|   |   | | `-UnaryOperator 0x1d42dc8eba8 <col:21, col:47> 'char *' prefix '&' cannot overflow
|   |   | |   `-ParenExpr 0x1d42dc8eb88 <col:22, col:47> 'char' lvalue
|   |   | |     `-ArraySubscriptExpr 0x1d42dc8eb68 <col:23, col:46> 'char' lvalue
|   |   | |       |-ImplicitCastExpr 0x1d42dc8eb38 <col:23, col:28> 'char *' <LValueToRValue>
|   |   | |       | `-MemberExpr 0x1d42dc8eaa0 <col:23, col:28> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |   | |       |   `-ImplicitCastExpr 0x1d42dc8ea88 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       |     `-DeclRefExpr 0x1d42dc8ea68 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc92f28 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |       `-ImplicitCastExpr 0x1d42dc8eb50 <col:33, col:38> 'int' <LValueToRValue>
|   |   | |         `-MemberExpr 0x1d42dc8eb08 <col:33, col:38> 'int' lvalue ->ibuf_off 0x1d42dc81e28
|   |   | |           `-ImplicitCastExpr 0x1d42dc8eaf0 <col:33> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |             `-DeclRefExpr 0x1d42dc8ead0 <col:33> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc92f28 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x1d42dc8ece8 <col:50> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1d42dc8ecd0 <col:50> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1d42dc8ebc0 <col:50> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |   |-CompoundAssignOperator 0x1d42dc8eda0 <line:106:9, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1d42dc8ed38 <col:9, col:14> 'int' lvalue ->ibuf_off 0x1d42dc81e28
|   |   | | `-ImplicitCastExpr 0x1d42dc8ed20 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc8ed00 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc92f28 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x1d42dc8ed88 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d42dc8ed68 <col:26> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |   |-CompoundAssignOperator 0x1d42dc8ee70 <line:107:9, col:26> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1d42dc8ee08 <col:9, col:14> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|   |   | | `-ImplicitCastExpr 0x1d42dc8edf0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc8edd0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc92f28 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x1d42dc8ee58 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d42dc8ee38 <col:26> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |   |-CompoundAssignOperator 0x1d42dc8eef8 <line:108:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1d42dc8eea0 <col:9> 'int' lvalue Var 0x1d42dc92e58 'num' 'int'
|   |   | `-ImplicitCastExpr 0x1d42dc8eee0 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d42dc8eec0 <col:16> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |   |-IfStmt 0x1d42dc8f020 <line:109:9, line:110:24>
|   |   | |-BinaryOperator 0x1d42dc8ef98 <line:109:13, col:21> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1d42dc8ef68 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d42dc8ef28 <col:13> 'int' lvalue ParmVar 0x1d42dc92c48 'outl' 'int'
|   |   | | `-ImplicitCastExpr 0x1d42dc8ef80 <col:21> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc8ef48 <col:21> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |   | `-ReturnStmt 0x1d42dc8f010 <line:110:13, col:24>
|   |   |   `-ImplicitCastExpr 0x1d42dc8eff8 <col:20, col:24> 'int' <LValueToRValue>
|   |   |     `-ParenExpr 0x1d42dc8efd8 <col:20, col:24> 'int' lvalue
|   |   |       `-DeclRefExpr 0x1d42dc8efb8 <col:21> 'int' lvalue Var 0x1d42dc92e58 'num' 'int'
|   |   |-CompoundAssignOperator 0x1d42dc8f090 <line:111:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1d42dc8f038 <col:9> 'int' lvalue ParmVar 0x1d42dc92c48 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x1d42dc8f078 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d42dc8f058 <col:17> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |   `-CompoundAssignOperator 0x1d42dc8f118 <line:112:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x1d42dc8f0c0 <col:9> 'char *' lvalue ParmVar 0x1d42dc92bc8 'out' 'char *'
|   |     `-ImplicitCastExpr 0x1d42dc8f100 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1d42dc8f0e0 <col:16> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |-IfStmt 0x1d42dc90c30 <line:121:5, line:137:5>
|   | |-BinaryOperator 0x1d42dc8f268 <line:121:9, col:21> 'int' '>'
|   | | |-ImplicitCastExpr 0x1d42dc8f238 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d42dc8f1b0 <col:9> 'int' lvalue ParmVar 0x1d42dc92c48 'outl' 'int'
|   | | `-ImplicitCastExpr 0x1d42dc8f250 <col:16, col:21> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1d42dc8f208 <col:16, col:21> 'int' lvalue ->ibuf_size 0x1d42dc81c68
|   | |     `-ImplicitCastExpr 0x1d42dc8f1f0 <col:16> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1d42dc8f1d0 <col:16> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc92f28 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-CompoundStmt 0x1d42dc90c18 <col:32, line:137:5>
|   |   `-ForStmt 0x1d42dc90be0 <line:122:9, line:136:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x1d42dc90ba8 <line:122:18, line:136:9>
|   |       |-IfStmt 0x1d42dc908e8 <line:124:13, line:130:13>
|   |       | |-BinaryOperator 0x1d42dc8f458 <line:124:17, col:22> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x1d42dc8f440 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1d42dc8f3f8 <col:17> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |       | | `-IntegerLiteral 0x1d42dc8f418 <col:22> 'int' 0
|   |       | `-CompoundStmt 0x1d42dc908c8 <col:25, line:130:13>
|   |       |   |-IfStmt 0x1d42dc907b0 <line:126:17, line:127:48>
|   |       |   | |-BinaryOperator 0x1d42dc8f5e8 <line:126:21, col:25> 'int' '<'
|   |       |   | | |-ImplicitCastExpr 0x1d42dc8f5d0 <col:21> 'int' <LValueToRValue>
|   |       |   | | | `-DeclRefExpr 0x1d42dc8f588 <col:21> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |       |   | | `-IntegerLiteral 0x1d42dc8f5a8 <col:25> 'int' 0
|   |       |   | `-ReturnStmt 0x1d42dc907a0 <line:127:21, col:48>
|   |       |   |   `-ParenExpr 0x1d42dc90780 <col:28, col:48> 'int'
|   |       |   |     `-ConditionalOperator 0x1d42dc90750 <col:29, col:47> 'int'
|   |       |   |       |-ParenExpr 0x1d42dc8f688 <col:29, col:37> 'int'
|   |       |   |       | `-BinaryOperator 0x1d42dc8f668 <col:30, col:36> 'int' '>'
|   |       |   |       |   |-ImplicitCastExpr 0x1d42dc8f650 <col:30> 'int' <LValueToRValue>
|   |       |   |       |   | `-DeclRefExpr 0x1d42dc8f608 <col:30> 'int' lvalue Var 0x1d42dc92e58 'num' 'int'
|   |       |   |       |   `-IntegerLiteral 0x1d42dc8f628 <col:36> 'int' 0
|   |       |   |       |-ImplicitCastExpr 0x1d42dc8f6e8 <col:41> 'int' <LValueToRValue>
|   |       |   |       | `-DeclRefExpr 0x1d42dc8f6a8 <col:41> 'int' lvalue Var 0x1d42dc92e58 'num' 'int'
|   |       |   |       `-ImplicitCastExpr 0x1d42dc8f700 <col:47> 'int' <LValueToRValue>
|   |       |   |         `-DeclRefExpr 0x1d42dc8f6c8 <col:47> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |       |   `-IfStmt 0x1d42dc908b0 <line:128:17, line:129:32>
|   |       |     |-BinaryOperator 0x1d42dc90828 <line:128:21, col:26> 'int' '=='
|   |       |     | |-ImplicitCastExpr 0x1d42dc90810 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x1d42dc907c8 <col:21> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |       |     | `-IntegerLiteral 0x1d42dc907e8 <col:26> 'int' 0
|   |       |     `-ReturnStmt 0x1d42dc908a0 <line:129:21, col:32>
|   |       |       `-ImplicitCastExpr 0x1d42dc90888 <col:28, col:32> 'int' <LValueToRValue>
|   |       |         `-ParenExpr 0x1d42dc90868 <col:28, col:32> 'int' lvalue
|   |       |           `-DeclRefExpr 0x1d42dc90848 <col:29> 'int' lvalue Var 0x1d42dc92e58 'num' 'int'
|   |       |-CompoundAssignOperator 0x1d42dc90958 <line:131:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-DeclRefExpr 0x1d42dc90900 <col:13> 'int' lvalue Var 0x1d42dc92e58 'num' 'int'
|   |       | `-ImplicitCastExpr 0x1d42dc90940 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1d42dc90920 <col:20> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |       |-IfStmt 0x1d42dc90a80 <line:132:13, line:133:28>
|   |       | |-BinaryOperator 0x1d42dc909f8 <line:132:17, col:25> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x1d42dc909c8 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1d42dc90988 <col:17> 'int' lvalue ParmVar 0x1d42dc92c48 'outl' 'int'
|   |       | | `-ImplicitCastExpr 0x1d42dc909e0 <col:25> 'int' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1d42dc909a8 <col:25> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |       | `-ReturnStmt 0x1d42dc90a70 <line:133:17, col:28>
|   |       |   `-ImplicitCastExpr 0x1d42dc90a58 <col:24, col:28> 'int' <LValueToRValue>
|   |       |     `-ParenExpr 0x1d42dc90a38 <col:24, col:28> 'int' lvalue
|   |       |       `-DeclRefExpr 0x1d42dc90a18 <col:25> 'int' lvalue Var 0x1d42dc92e58 'num' 'int'
|   |       |-CompoundAssignOperator 0x1d42dc90af0 <line:134:13, col:20> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |       | |-DeclRefExpr 0x1d42dc90a98 <col:13> 'char *' lvalue ParmVar 0x1d42dc92bc8 'out' 'char *'
|   |       | `-ImplicitCastExpr 0x1d42dc90ad8 <col:20> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1d42dc90ab8 <col:20> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |       `-CompoundAssignOperator 0x1d42dc90b78 <line:135:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |         |-DeclRefExpr 0x1d42dc90b20 <col:13> 'int' lvalue ParmVar 0x1d42dc92c48 'outl' 'int'
|   |         `-ImplicitCastExpr 0x1d42dc90b60 <col:21> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x1d42dc90b40 <col:21> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |-IfStmt 0x1d42dc91120 <line:142:5, line:148:5>
|   | |-BinaryOperator 0x1d42dc90db8 <line:142:9, col:14> 'int' '<='
|   | | |-ImplicitCastExpr 0x1d42dc90da0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d42dc90d58 <col:9> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   | | `-IntegerLiteral 0x1d42dc90d78 <col:14> 'int' 0
|   | `-CompoundStmt 0x1d42dc91100 <col:17, line:148:5>
|   |   |-IfStmt 0x1d42dc90fe8 <line:144:9, line:145:40>
|   |   | |-BinaryOperator 0x1d42dc90e58 <line:144:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1d42dc90e40 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d42dc90df8 <col:13> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |   | | `-IntegerLiteral 0x1d42dc90e18 <col:17> 'int' 0
|   |   | `-ReturnStmt 0x1d42dc90fd8 <line:145:13, col:40>
|   |   |   `-ParenExpr 0x1d42dc90fb8 <col:20, col:40> 'int'
|   |   |     `-ConditionalOperator 0x1d42dc90f88 <col:21, col:39> 'int'
|   |   |       |-ParenExpr 0x1d42dc90ef8 <col:21, col:29> 'int'
|   |   |       | `-BinaryOperator 0x1d42dc90ed8 <col:22, col:28> 'int' '>'
|   |   |       |   |-ImplicitCastExpr 0x1d42dc90ec0 <col:22> 'int' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x1d42dc90e78 <col:22> 'int' lvalue Var 0x1d42dc92e58 'num' 'int'
|   |   |       |   `-IntegerLiteral 0x1d42dc90e98 <col:28> 'int' 0
|   |   |       |-ImplicitCastExpr 0x1d42dc90f58 <col:33> 'int' <LValueToRValue>
|   |   |       | `-DeclRefExpr 0x1d42dc90f18 <col:33> 'int' lvalue Var 0x1d42dc92e58 'num' 'int'
|   |   |       `-ImplicitCastExpr 0x1d42dc90f70 <col:39> 'int' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1d42dc90f38 <col:39> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |   `-IfStmt 0x1d42dc910e8 <line:146:9, line:147:24>
|   |     |-BinaryOperator 0x1d42dc91060 <line:146:13, col:18> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1d42dc91048 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1d42dc91000 <col:13> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   |     | `-IntegerLiteral 0x1d42dc91020 <col:18> 'int' 0
|   |     `-ReturnStmt 0x1d42dc910d8 <line:147:13, col:24>
|   |       `-ImplicitCastExpr 0x1d42dc910c0 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x1d42dc910a0 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x1d42dc91080 <col:21> 'int' lvalue Var 0x1d42dc92e58 'num' 'int'
|   |-BinaryOperator 0x1d42dc911c8 <line:149:5, col:21> 'int' '='
|   | |-MemberExpr 0x1d42dc91170 <col:5, col:10> 'int' lvalue ->ibuf_off 0x1d42dc81e28
|   | | `-ImplicitCastExpr 0x1d42dc91158 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d42dc91138 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc92f28 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x1d42dc911a0 <col:21> 'int' 0
|   |-BinaryOperator 0x1d42dc91288 <line:150:5, col:21> 'int' '='
|   | |-MemberExpr 0x1d42dc91220 <col:5, col:10> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|   | | `-ImplicitCastExpr 0x1d42dc91208 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d42dc911e8 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc92f28 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-ImplicitCastExpr 0x1d42dc91270 <col:21> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1d42dc91250 <col:21> 'int' lvalue Var 0x1d42dc92dd8 'i' 'int'
|   `-GotoStmt 0x1d42dc912a8 <line:153:5, col:10> 'start' 0x1d42dc935f0
|-FunctionDecl 0x1d42dc8e820 <line:105:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1d42dc8e8c0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1d42dc8e928 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1d42dc8e990 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1d42dc914f0 <line:156:1, line:231:1> line:156:12 invalid buffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1d42dc91348 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x1d42dc913c8 <col:33, col:45> col:45 used in 'const char *'
| |-ParmVarDecl 0x1d42dc91448 <col:49, col:53> col:53 used inl 'int'
| `-CompoundStmt 0x1d42dc93fb8 <line:157:1, line:231:1>
|   |-DeclStmt 0x1d42dc91700 <line:158:5, col:19>
|   | |-VarDecl 0x1d42dc915d8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x1d42dc91658 <col:5, col:18> col:12 used num 'int' cinit
|   |   `-IntegerLiteral 0x1d42dc916c0 <col:18> 'int' 0
|   |-DeclStmt 0x1d42dc8b768 <line:159:5, col:26>
|   | `-VarDecl 0x1d42dc8b700 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x1d42dc8b9e0 <line:161:5, line:162:18>
|   | |-BinaryOperator 0x1d42dc8b968 <line:161:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x1d42dc8b890 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x1d42dc8b870 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1d42dc8b840 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:161:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1d42dc8b780 <col:10> 'const char *' lvalue ParmVar 0x1d42dc913c8 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x1d42dc8b858 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x1d42dc8b820 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x1d42dc8b7f8 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x1d42dc8b7b8 <col:26> 'int' 0
|   | | `-ParenExpr 0x1d42dc8b948 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:161:25, col:34> 'int'
|   | |   `-BinaryOperator 0x1d42dc8b928 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x1d42dc8b910 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1d42dc8b8b0 <col:26> 'int' lvalue ParmVar 0x1d42dc91448 'inl' 'int'
|   | |     `-IntegerLiteral 0x1d42dc8b8e8 <col:33> 'int' 0
|   | `-ReturnStmt 0x1d42dc8b9d0 <line:162:9, col:18>
|   |   `-ParenExpr 0x1d42dc8b9b0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1d42dc8b988 <col:17> 'int' 0
|   |-IfStmt 0x1d42dc8bc40 <line:164:5, line:165:18>
|   | |-OpaqueValueExpr 0x1d42dc8bc28 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d42dc8bc18 <col:9, col:18>
|   |   `-ParenExpr 0x1d42dc8bbf8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1d42dc8bbd0 <col:17> 'int' 0
|   |-LabelStmt 0x1d42dc8bf00 <line:168:2, line:169:56> 'start'
|   | `-BinaryOperator 0x1d42dc8be90 <col:5, col:56> 'int' '='
|   |   |-DeclRefExpr 0x1d42dc8bc78 <col:5> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   `-BinaryOperator 0x1d42dc8be70 <col:9, col:56> 'int' '-'
|   |     |-ImplicitCastExpr 0x1d42dc8be58 <col:9, col:14> 'int' <LValueToRValue>
|   |     | `-MemberExpr 0x1d42dc8bce8 <col:9, col:14> 'int' lvalue ->obuf_size 0x1d42dc81cd8
|   |     |   `-ImplicitCastExpr 0x1d42dc8bcd0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1d42dc8bcb0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |     `-ParenExpr 0x1d42dc8be38 <col:26, col:56> 'int'
|   |       `-BinaryOperator 0x1d42dc8be18 <col:27, col:48> 'int' '+'
|   |         |-ImplicitCastExpr 0x1d42dc8bde8 <col:27, col:32> 'int' <LValueToRValue>
|   |         | `-MemberExpr 0x1d42dc8bd50 <col:27, col:32> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |         |   `-ImplicitCastExpr 0x1d42dc8bd38 <col:27> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x1d42dc8bd18 <col:27> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |         `-ImplicitCastExpr 0x1d42dc8be00 <col:43, col:48> 'int' <LValueToRValue>
|   |           `-MemberExpr 0x1d42dc8bdb8 <col:43, col:48> 'int' lvalue ->obuf_off 0x1d42dc81f78
|   |             `-ImplicitCastExpr 0x1d42dc8bda0 <col:43> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |               `-DeclRefExpr 0x1d42dc8bd80 <col:43> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |-IfStmt 0x1d42dc8c4c8 <line:171:5, line:175:5>
|   | |-BinaryOperator 0x1d42dc8bf88 <line:171:9, col:14> 'int' '>='
|   | | |-ImplicitCastExpr 0x1d42dc8bf58 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d42dc8bf18 <col:9> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   | | `-ImplicitCastExpr 0x1d42dc8bf70 <col:14> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d42dc8bf38 <col:14> 'int' lvalue ParmVar 0x1d42dc91448 'inl' 'int'
|   | `-CompoundStmt 0x1d42dc8c4a0 <col:19, line:175:5>
|   |   |-CallExpr 0x1d42dc8c248 <line:172:9, col:68> 'void *'
|   |   | |-ImplicitCastExpr 0x1d42dc8c230 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1d42dc8bfa8 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1d42dc8e820 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1d42dc8c280 <col:16, col:58> 'void *' <BitCast>
|   |   | | `-UnaryOperator 0x1d42dc8c1a8 <col:16, col:58> 'char *' prefix '&' cannot overflow
|   |   | |   `-ParenExpr 0x1d42dc8c188 <col:17, col:58> 'char' lvalue
|   |   | |     `-ArraySubscriptExpr 0x1d42dc8c168 <col:18, col:57> 'char' lvalue
|   |   | |       |-ImplicitCastExpr 0x1d42dc8c150 <col:18, col:23> 'char *' <LValueToRValue>
|   |   | |       | `-MemberExpr 0x1d42dc8c000 <col:18, col:23> 'char *' lvalue ->obuf 0x1d42dc81e98
|   |   | |       |   `-ImplicitCastExpr 0x1d42dc8bfe8 <col:18> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       |     `-DeclRefExpr 0x1d42dc8bfc8 <col:18> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |       `-BinaryOperator 0x1d42dc8c130 <col:28, col:49> 'int' '+'
|   |   | |         |-ImplicitCastExpr 0x1d42dc8c100 <col:28, col:33> 'int' <LValueToRValue>
|   |   | |         | `-MemberExpr 0x1d42dc8c068 <col:28, col:33> 'int' lvalue ->obuf_off 0x1d42dc81f78
|   |   | |         |   `-ImplicitCastExpr 0x1d42dc8c050 <col:28> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |         |     `-DeclRefExpr 0x1d42dc8c030 <col:28> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |         `-ImplicitCastExpr 0x1d42dc8c118 <col:44, col:49> 'int' <LValueToRValue>
|   |   | |           `-MemberExpr 0x1d42dc8c0d0 <col:44, col:49> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   | |             `-ImplicitCastExpr 0x1d42dc8c0b8 <col:44> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |               `-DeclRefExpr 0x1d42dc8c098 <col:44> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-ImplicitCastExpr 0x1d42dc8c2b0 <col:61> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1d42dc8c298 <col:61> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc8c1c0 <col:61> 'const char *' lvalue ParmVar 0x1d42dc913c8 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x1d42dc8c2e0 <col:65> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1d42dc8c2c8 <col:65> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1d42dc8c1e0 <col:65> 'int' lvalue ParmVar 0x1d42dc91448 'inl' 'int'
|   |   |-CompoundAssignOperator 0x1d42dc8c398 <line:173:9, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1d42dc8c330 <col:9, col:14> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   | | `-ImplicitCastExpr 0x1d42dc8c318 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc8c2f8 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x1d42dc8c380 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d42dc8c360 <col:26> 'int' lvalue ParmVar 0x1d42dc91448 'inl' 'int'
|   |   `-ReturnStmt 0x1d42dc8c490 <line:174:9, col:26>
|   |     `-ParenExpr 0x1d42dc8c470 <col:16, col:26> 'int'
|   |       `-BinaryOperator 0x1d42dc8c450 <col:17, col:23> 'int' '+'
|   |         |-ImplicitCastExpr 0x1d42dc8c420 <col:17> 'int' <LValueToRValue>
|   |         | `-DeclRefExpr 0x1d42dc8c3c8 <col:17> 'int' lvalue Var 0x1d42dc91658 'num' 'int'
|   |         `-ImplicitCastExpr 0x1d42dc8c438 <col:23> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x1d42dc8c400 <col:23> 'int' lvalue ParmVar 0x1d42dc91448 'inl' 'int'
|   |-IfStmt 0x1d42dc90668 <line:178:5, line:203:5>
|   | |-BinaryOperator 0x1d42dc8c588 <line:178:9, col:26> 'int' '!='
|   | | |-ImplicitCastExpr 0x1d42dc8c570 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1d42dc8c518 <col:9, col:14> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   | | |   `-ImplicitCastExpr 0x1d42dc8c500 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1d42dc8c4e0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   | | `-IntegerLiteral 0x1d42dc8c548 <col:26> 'int' 0
|   | `-CompoundStmt 0x1d42dc90648 <col:29, line:203:5>
|   |   |-IfStmt 0x1d42dc8fc70 <line:179:9, line:185:9>
|   |   | |-BinaryOperator 0x1d42dc8c608 <line:179:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1d42dc8c5f0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d42dc8c5a8 <col:13> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   | | `-IntegerLiteral 0x1d42dc8c5c8 <col:17> 'int' 0
|   |   | `-CompoundStmt 0x1d42dc8fc38 <col:20, line:185:9>
|   |   |   |-CallExpr 0x1d42dc8f920 <line:180:13, col:70> 'void *'
|   |   |   | |-ImplicitCastExpr 0x1d42dc8f908 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1d42dc8c628 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x1d42dc8e820 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   | |-ImplicitCastExpr 0x1d42dc8f958 <col:20, col:62> 'void *' <BitCast>
|   |   |   | | `-UnaryOperator 0x1d42dc8f880 <col:20, col:62> 'char *' prefix '&' cannot overflow
|   |   |   | |   `-ParenExpr 0x1d42dc8f860 <col:21, col:62> 'char' lvalue
|   |   |   | |     `-ArraySubscriptExpr 0x1d42dc8f840 <col:22, col:61> 'char' lvalue
|   |   |   | |       |-ImplicitCastExpr 0x1d42dc8f828 <col:22, col:27> 'char *' <LValueToRValue>
|   |   |   | |       | `-MemberExpr 0x1d42dc8c680 <col:22, col:27> 'char *' lvalue ->obuf 0x1d42dc81e98
|   |   |   | |       |   `-ImplicitCastExpr 0x1d42dc8c668 <col:22> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |       |     `-DeclRefExpr 0x1d42dc8c648 <col:22> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |       `-BinaryOperator 0x1d42dc8f808 <col:32, col:53> 'int' '+'
|   |   |   | |         |-ImplicitCastExpr 0x1d42dc8f7d8 <col:32, col:37> 'int' <LValueToRValue>
|   |   |   | |         | `-MemberExpr 0x1d42dc8f740 <col:32, col:37> 'int' lvalue ->obuf_off 0x1d42dc81f78
|   |   |   | |         |   `-ImplicitCastExpr 0x1d42dc8c6d0 <col:32> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |         |     `-DeclRefExpr 0x1d42dc8c6b0 <col:32> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |         `-ImplicitCastExpr 0x1d42dc8f7f0 <col:48, col:53> 'int' <LValueToRValue>
|   |   |   | |           `-MemberExpr 0x1d42dc8f7a8 <col:48, col:53> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   |   | |             `-ImplicitCastExpr 0x1d42dc8f790 <col:48> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |               `-DeclRefExpr 0x1d42dc8f770 <col:48> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | |-ImplicitCastExpr 0x1d42dc8f988 <col:65> 'const void *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x1d42dc8f970 <col:65> 'const char *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1d42dc8f898 <col:65> 'const char *' lvalue ParmVar 0x1d42dc913c8 'in' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x1d42dc8f9b8 <col:69> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1d42dc8f9a0 <col:69> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1d42dc8f8b8 <col:69> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1d42dc8fa28 <line:181:13, col:19> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   |   | |-DeclRefExpr 0x1d42dc8f9d0 <col:13> 'const char *' lvalue ParmVar 0x1d42dc913c8 'in' 'const char *'
|   |   |   | `-ImplicitCastExpr 0x1d42dc8fa10 <col:19> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1d42dc8f9f0 <col:19> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1d42dc8fab0 <line:182:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x1d42dc8fa58 <col:13> 'int' lvalue ParmVar 0x1d42dc91448 'inl' 'int'
|   |   |   | `-ImplicitCastExpr 0x1d42dc8fa98 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1d42dc8fa78 <col:20> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1d42dc8fb38 <line:183:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x1d42dc8fae0 <col:13> 'int' lvalue Var 0x1d42dc91658 'num' 'int'
|   |   |   | `-ImplicitCastExpr 0x1d42dc8fb20 <col:20> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1d42dc8fb00 <col:20> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   |   `-CompoundAssignOperator 0x1d42dc8fc08 <line:184:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-MemberExpr 0x1d42dc8fba0 <col:13, col:18> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   |     | `-ImplicitCastExpr 0x1d42dc8fb88 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1d42dc8fb68 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x1d42dc8fbf0 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1d42dc8fbd0 <col:30> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   `-ForStmt 0x1d42dc90610 <line:187:9, line:202:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x1d42dc905e0 <line:187:18, line:202:9>
|   |       |-IfStmt 0x1d42dc90340 <line:190:13, line:197:13>
|   |       | |-BinaryOperator 0x1d42dc8ffd8 <line:190:17, col:22> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x1d42dc8ffc0 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1d42dc8ff78 <col:17> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |       | | `-IntegerLiteral 0x1d42dc8ff98 <col:22> 'int' 0
|   |       | `-CompoundStmt 0x1d42dc90320 <col:25, line:197:13>
|   |       |   |-IfStmt 0x1d42dc90208 <line:193:17, line:194:48>
|   |       |   | |-BinaryOperator 0x1d42dc90078 <line:193:21, col:25> 'int' '<'
|   |       |   | | |-ImplicitCastExpr 0x1d42dc90060 <col:21> 'int' <LValueToRValue>
|   |       |   | | | `-DeclRefExpr 0x1d42dc90018 <col:21> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |       |   | | `-IntegerLiteral 0x1d42dc90038 <col:25> 'int' 0
|   |       |   | `-ReturnStmt 0x1d42dc901f8 <line:194:21, col:48>
|   |       |   |   `-ParenExpr 0x1d42dc901d8 <col:28, col:48> 'int'
|   |       |   |     `-ConditionalOperator 0x1d42dc901a8 <col:29, col:47> 'int'
|   |       |   |       |-ParenExpr 0x1d42dc90118 <col:29, col:37> 'int'
|   |       |   |       | `-BinaryOperator 0x1d42dc900f8 <col:30, col:36> 'int' '>'
|   |       |   |       |   |-ImplicitCastExpr 0x1d42dc900e0 <col:30> 'int' <LValueToRValue>
|   |       |   |       |   | `-DeclRefExpr 0x1d42dc90098 <col:30> 'int' lvalue Var 0x1d42dc91658 'num' 'int'
|   |       |   |       |   `-IntegerLiteral 0x1d42dc900b8 <col:36> 'int' 0
|   |       |   |       |-ImplicitCastExpr 0x1d42dc90178 <col:41> 'int' <LValueToRValue>
|   |       |   |       | `-DeclRefExpr 0x1d42dc90138 <col:41> 'int' lvalue Var 0x1d42dc91658 'num' 'int'
|   |       |   |       `-ImplicitCastExpr 0x1d42dc90190 <col:47> 'int' <LValueToRValue>
|   |       |   |         `-DeclRefExpr 0x1d42dc90158 <col:47> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |       |   `-IfStmt 0x1d42dc90308 <line:195:17, line:196:32>
|   |       |     |-BinaryOperator 0x1d42dc90280 <line:195:21, col:26> 'int' '=='
|   |       |     | |-ImplicitCastExpr 0x1d42dc90268 <col:21> 'int' <LValueToRValue>
|   |       |     | | `-DeclRefExpr 0x1d42dc90220 <col:21> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |       |     | `-IntegerLiteral 0x1d42dc90240 <col:26> 'int' 0
|   |       |     `-ReturnStmt 0x1d42dc902f8 <line:196:21, col:32>
|   |       |       `-ImplicitCastExpr 0x1d42dc902e0 <col:28, col:32> 'int' <LValueToRValue>
|   |       |         `-ParenExpr 0x1d42dc902c0 <col:28, col:32> 'int' lvalue
|   |       |           `-DeclRefExpr 0x1d42dc902a0 <col:29> 'int' lvalue Var 0x1d42dc91658 'num' 'int'
|   |       |-CompoundAssignOperator 0x1d42dc903f8 <line:198:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x1d42dc90390 <col:13, col:18> 'int' lvalue ->obuf_off 0x1d42dc81f78
|   |       | | `-ImplicitCastExpr 0x1d42dc90378 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1d42dc90358 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |       | `-ImplicitCastExpr 0x1d42dc903e0 <col:30> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1d42dc903c0 <col:30> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |       |-CompoundAssignOperator 0x1d42dc904c8 <line:199:13, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |       | |-MemberExpr 0x1d42dc90460 <col:13, col:18> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |       | | `-ImplicitCastExpr 0x1d42dc90448 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1d42dc90428 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |       | `-ImplicitCastExpr 0x1d42dc904b0 <col:30> 'int' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x1d42dc90490 <col:30> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |       `-IfStmt 0x1d42dc905c8 <line:200:13, line:201:17>
|   |         |-BinaryOperator 0x1d42dc905a0 <line:200:17, col:34> 'int' '=='
|   |         | |-ImplicitCastExpr 0x1d42dc90588 <col:17, col:22> 'int' <LValueToRValue>
|   |         | | `-MemberExpr 0x1d42dc90530 <col:17, col:22> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |         | |   `-ImplicitCastExpr 0x1d42dc90518 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |         | |     `-DeclRefExpr 0x1d42dc904f8 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   |         | `-IntegerLiteral 0x1d42dc90560 <col:34> 'int' 0
|   |         `-BreakStmt 0x1d42dc905c0 <line:201:17>
|   |-BinaryOperator 0x1d42dc90710 <line:208:5, col:21> 'int' '='
|   | |-MemberExpr 0x1d42dc906b8 <col:5, col:10> 'int' lvalue ->obuf_off 0x1d42dc81f78
|   | | `-ImplicitCastExpr 0x1d42dc906a0 <col:5> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1d42dc90680 <col:5> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-IntegerLiteral 0x1d42dc906e8 <col:21> 'int' 0
|   |-WhileStmt 0x1d42dc93f88 <line:211:5, line:225:5>
|   | |-BinaryOperator 0x1d42dc93838 <line:211:12, col:24> 'int' '>='
|   | | |-ImplicitCastExpr 0x1d42dc93808 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1d42dc93780 <col:12> 'int' lvalue ParmVar 0x1d42dc91448 'inl' 'int'
|   | | `-ImplicitCastExpr 0x1d42dc93820 <col:19, col:24> 'int' <LValueToRValue>
|   | |   `-MemberExpr 0x1d42dc937d8 <col:19, col:24> 'int' lvalue ->obuf_size 0x1d42dc81cd8
|   | |     `-ImplicitCastExpr 0x1d42dc937c0 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1d42dc937a0 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc8b700 'ctx' 'BIO_F_BUFFER_CTX *'
|   | `-CompoundStmt 0x1d42dc93f50 <col:35, line:225:5>
|   |   |-IfStmt 0x1d42dc93ca0 <line:213:9, line:219:9>
|   |   | |-BinaryOperator 0x1d42dc93938 <line:213:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1d42dc93920 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d42dc938d8 <col:13> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   | | `-IntegerLiteral 0x1d42dc938f8 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x1d42dc93c80 <col:21, line:219:9>
|   |   |   |-IfStmt 0x1d42dc93b68 <line:215:13, line:216:44>
|   |   |   | |-BinaryOperator 0x1d42dc939d8 <line:215:17, col:21> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x1d42dc939c0 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1d42dc93978 <col:17> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x1d42dc93998 <col:21> 'int' 0
|   |   |   | `-ReturnStmt 0x1d42dc93b58 <line:216:17, col:44>
|   |   |   |   `-ParenExpr 0x1d42dc93b38 <col:24, col:44> 'int'
|   |   |   |     `-ConditionalOperator 0x1d42dc93b08 <col:25, col:43> 'int'
|   |   |   |       |-ParenExpr 0x1d42dc93a78 <col:25, col:33> 'int'
|   |   |   |       | `-BinaryOperator 0x1d42dc93a58 <col:26, col:32> 'int' '>'
|   |   |   |       |   |-ImplicitCastExpr 0x1d42dc93a40 <col:26> 'int' <LValueToRValue>
|   |   |   |       |   | `-DeclRefExpr 0x1d42dc939f8 <col:26> 'int' lvalue Var 0x1d42dc91658 'num' 'int'
|   |   |   |       |   `-IntegerLiteral 0x1d42dc93a18 <col:32> 'int' 0
|   |   |   |       |-ImplicitCastExpr 0x1d42dc93ad8 <col:37> 'int' <LValueToRValue>
|   |   |   |       | `-DeclRefExpr 0x1d42dc93a98 <col:37> 'int' lvalue Var 0x1d42dc91658 'num' 'int'
|   |   |   |       `-ImplicitCastExpr 0x1d42dc93af0 <col:43> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x1d42dc93ab8 <col:43> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   |   `-IfStmt 0x1d42dc93c68 <line:217:13, line:218:28>
|   |   |     |-BinaryOperator 0x1d42dc93be0 <line:217:17, col:22> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1d42dc93bc8 <col:17> 'int' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1d42dc93b80 <col:17> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   |     | `-IntegerLiteral 0x1d42dc93ba0 <col:22> 'int' 0
|   |   |     `-ReturnStmt 0x1d42dc93c58 <line:218:17, col:28>
|   |   |       `-ImplicitCastExpr 0x1d42dc93c40 <col:24, col:28> 'int' <LValueToRValue>
|   |   |         `-ParenExpr 0x1d42dc93c20 <col:24, col:28> 'int' lvalue
|   |   |           `-DeclRefExpr 0x1d42dc93c00 <col:25> 'int' lvalue Var 0x1d42dc91658 'num' 'int'
|   |   |-CompoundAssignOperator 0x1d42dc93d10 <line:220:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1d42dc93cb8 <col:9> 'int' lvalue Var 0x1d42dc91658 'num' 'int'
|   |   | `-ImplicitCastExpr 0x1d42dc93cf8 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d42dc93cd8 <col:16> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   |-CompoundAssignOperator 0x1d42dc93d98 <line:221:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x1d42dc93d40 <col:9> 'const char *' lvalue ParmVar 0x1d42dc913c8 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x1d42dc93d80 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d42dc93d60 <col:15> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   |-CompoundAssignOperator 0x1d42dc93e20 <line:222:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1d42dc93dc8 <col:9> 'int' lvalue ParmVar 0x1d42dc91448 'inl' 'int'
|   |   | `-ImplicitCastExpr 0x1d42dc93e08 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1d42dc93de8 <col:16> 'int' lvalue Var 0x1d42dc915d8 'i' 'int'
|   |   `-IfStmt 0x1d42dc93f38 <line:223:9, line:224:24>
|   |     |-BinaryOperator 0x1d42dc93eb0 <line:223:13, col:20> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1d42dc93e98 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1d42dc93e50 <col:13> 'int' lvalue ParmVar 0x1d42dc91448 'inl' 'int'
|   |     | `-IntegerLiteral 0x1d42dc93e70 <col:20> 'int' 0
|   |     `-ReturnStmt 0x1d42dc93f28 <line:224:13, col:24>
|   |       `-ImplicitCastExpr 0x1d42dc93f10 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x1d42dc93ef0 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x1d42dc93ed0 <col:21> 'int' lvalue Var 0x1d42dc91658 'num' 'int'
|   `-GotoStmt 0x1d42dc93fa0 <line:230:5, col:10> 'start' 0x1d42dc8beb0
|-FunctionDecl 0x1d42dc94260 <line:233:1, line:389:1> line:233:13 invalid buffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1d42dc94030 <col:25, col:30> col:30 invalid b 'int *'
| |-ParmVarDecl 0x1d42dc940b0 <col:33, col:37> col:37 used cmd 'int'
| |-ParmVarDecl 0x1d42dc94130 <col:42, col:47> col:47 used num 'long'
| |-ParmVarDecl 0x1d42dc941b0 <col:52, col:58> col:58 used ptr 'void *'
| `-CompoundStmt 0x1d42dc9cb78 <line:234:1, line:389:1>
|   |-DeclStmt 0x1d42dc943b0 <line:236:5, col:26>
|   | `-VarDecl 0x1d42dc94348 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-DeclStmt 0x1d42dc94488 <line:237:5, col:17>
|   | `-VarDecl 0x1d42dc943e0 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1d42dc94470 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1d42dc94448 <col:16> 'int' 1
|   |-DeclStmt 0x1d42dc945b8 <line:238:5, col:18>
|   | |-VarDecl 0x1d42dc944b8 <col:5, col:11> col:11 used p1 'char *'
|   | `-VarDecl 0x1d42dc94538 <col:5, col:16> col:16 used p2 'char *'
|   |-DeclStmt 0x1d42dc8c710 <line:239:5, col:18>
|   | |-VarDecl 0x1d42dc945e8 <col:5, col:9> col:9 used r 'int'
|   | |-VarDecl 0x1d42dc94668 <col:5, col:12> col:12 used i 'int'
|   | `-VarDecl 0x1d42dc946e8 <col:5, col:16> col:16 used ip 'int *'
|   |-DeclStmt 0x1d42dc8c840 <line:240:5, col:17>
|   | |-VarDecl 0x1d42dc8c740 <col:5, col:9> col:9 used ibs 'int'
|   | `-VarDecl 0x1d42dc8c7c0 <col:5, col:14> col:14 used obs 'int'
|   |-SwitchStmt 0x1d42dc8c8e0 <line:244:5, line:384:5>
|   | |-ImplicitCastExpr 0x1d42dc8c8c8 <line:244:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1d42dc8c890 <col:13> 'int' lvalue ParmVar 0x1d42dc940b0 'cmd' 'int'
|   | `-CompoundStmt 0x1d42dc9c810 <col:18, line:384:5>
|   |   |-BinaryOperator 0x1d42dc8c990 <line:246:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1d42dc8c938 <col:9, col:14> 'int' lvalue ->ibuf_off 0x1d42dc81e28
|   |   | | `-ImplicitCastExpr 0x1d42dc8c920 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc8c900 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x1d42dc8c968 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1d42dc8ca40 <line:247:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1d42dc8c9e8 <col:9, col:14> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|   |   | | `-ImplicitCastExpr 0x1d42dc8c9d0 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc8c9b0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x1d42dc8ca18 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1d42dc8caf0 <line:248:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1d42dc8ca98 <col:9, col:14> 'int' lvalue ->obuf_off 0x1d42dc81f78
|   |   | | `-ImplicitCastExpr 0x1d42dc8ca80 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc8ca60 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x1d42dc8cac8 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1d42dc8cba0 <line:249:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1d42dc8cb48 <col:9, col:14> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   | | `-ImplicitCastExpr 0x1d42dc8cb30 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc8cb10 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x1d42dc8cb78 <col:25> 'int' 0
|   |   |-IfStmt 0x1d42dc8ccd0 <line:250:9, line:251:22>
|   |   | |-OpaqueValueExpr 0x1d42dc8ccb8 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1d42dc8cca8 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x1d42dc8cc90 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x1d42dc8cc70 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x1d42dc8cc48 <col:21> 'int' 0
|   |   |-BreakStmt 0x1d42dc8cec0 <line:253:9>
|   |   |-BinaryOperator 0x1d42dc8cfa8 <line:255:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x1d42dc8cec8 <col:9> 'long' lvalue Var 0x1d42dc943e0 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1d42dc8cf80 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1d42dc8cf68 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1d42dc8cf20 <col:21, col:26> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   |       `-ImplicitCastExpr 0x1d42dc8cf08 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1d42dc8cee8 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-BreakStmt 0x1d42dc8cfc8 <line:256:9>
|   |   |-BinaryOperator 0x1d42dc8d030 <line:258:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x1d42dc8cfd0 <col:9> 'long' lvalue Var 0x1d42dc943e0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1d42dc8d018 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1d42dc8cff0 <col:15> 'int' 0
|   |   |-BinaryOperator 0x1d42dc8d108 <line:259:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x1d42dc8d050 <col:9> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   | `-ImplicitCastExpr 0x1d42dc8d0f0 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1d42dc8d0c0 <col:14, col:19> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |   |     `-ImplicitCastExpr 0x1d42dc8d0a8 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1d42dc8d088 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-ForStmt 0x1d42dc8d4b8 <line:260:9, line:263:9>
|   |   | |-BinaryOperator 0x1d42dc8d188 <line:260:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x1d42dc8d128 <col:14> 'int' lvalue Var 0x1d42dc94668 'i' 'int'
|   |   | | `-IntegerLiteral 0x1d42dc8d160 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1d42dc8d260 <col:21, col:30> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1d42dc8d230 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d42dc8d1a8 <col:21> 'int' lvalue Var 0x1d42dc94668 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x1d42dc8d248 <col:25, col:30> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1d42dc8d200 <col:25, col:30> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|   |   | |     `-ImplicitCastExpr 0x1d42dc8d1e8 <col:25> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1d42dc8d1c8 <col:25> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-UnaryOperator 0x1d42dc8d2a0 <col:40, col:41> 'int' postfix '++'
|   |   | | `-DeclRefExpr 0x1d42dc8d280 <col:40> 'int' lvalue Var 0x1d42dc94668 'i' 'int'
|   |   | `-CompoundStmt 0x1d42dc8d4a0 <col:45, line:263:9>
|   |   |   `-IfStmt 0x1d42dc8d488 <line:261:13, line:262:20>
|   |   |     |-BinaryOperator 0x1d42dc8d430 <line:261:17, col:42> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1d42dc8d418 <col:17, col:37> 'int' <IntegralCast>
|   |   |     | | `-ImplicitCastExpr 0x1d42dc8d400 <col:17, col:37> 'char' <LValueToRValue>
|   |   |     | |   `-ArraySubscriptExpr 0x1d42dc8d3c8 <col:17, col:37> 'char' lvalue
|   |   |     | |     |-ImplicitCastExpr 0x1d42dc8d3b0 <col:17> 'char *' <LValueToRValue>
|   |   |     | |     | `-DeclRefExpr 0x1d42dc8d2b8 <col:17> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   |     | |     `-BinaryOperator 0x1d42dc8d390 <col:20, col:36> 'int' '+'
|   |   |     | |       |-ImplicitCastExpr 0x1d42dc8d360 <col:20, col:25> 'int' <LValueToRValue>
|   |   |     | |       | `-MemberExpr 0x1d42dc8d310 <col:20, col:25> 'int' lvalue ->ibuf_off 0x1d42dc81e28
|   |   |     | |       |   `-ImplicitCastExpr 0x1d42dc8d2f8 <col:20> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | |       |     `-DeclRefExpr 0x1d42dc8d2d8 <col:20> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | |       `-ImplicitCastExpr 0x1d42dc8d378 <col:36> 'int' <LValueToRValue>
|   |   |     | |         `-DeclRefExpr 0x1d42dc8d340 <col:36> 'int' lvalue Var 0x1d42dc94668 'i' 'int'
|   |   |     | `-CharacterLiteral 0x1d42dc8d3e8 <col:42> 'int' 10
|   |   |     `-UnaryOperator 0x1d42dc8d470 <line:262:17, col:20> 'long' postfix '++'
|   |   |       `-DeclRefExpr 0x1d42dc8d450 <col:17> 'long' lvalue Var 0x1d42dc943e0 'ret' 'long'
|   |   |-BreakStmt 0x1d42dc8d4f0 <line:264:9>
|   |   |-BinaryOperator 0x1d42dc8d5d8 <line:266:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x1d42dc8d4f8 <col:9> 'long' lvalue Var 0x1d42dc943e0 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1d42dc8d5b0 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1d42dc8d598 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1d42dc8d550 <col:21, col:26> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   |       `-ImplicitCastExpr 0x1d42dc8d538 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1d42dc8d518 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x1d42dc94908 <line:267:9, line:271:9>
|   |   | |-BinaryOperator 0x1d42dc8d670 <line:267:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1d42dc8d640 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d42dc8d5f8 <col:13> 'long' lvalue Var 0x1d42dc943e0 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x1d42dc8d658 <col:20> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1d42dc8d618 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x1d42dc948f0 <col:23, line:271:9>
|   |   |   `-IfStmt 0x1d42dc94838 <line:268:13, line:269:26>
|   |   |     |-OpaqueValueExpr 0x1d42dc94820 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x1d42dc94810 <col:17, col:26>
|   |   |       `-ImplicitCastExpr 0x1d42dc947f8 <col:24, col:26> 'long' <IntegralCast>
|   |   |         `-ParenExpr 0x1d42dc947d8 <col:24, col:26> 'int'
|   |   |           `-IntegerLiteral 0x1d42dc947b0 <col:25> 'int' 0
|   |   |-BreakStmt 0x1d42dc94920 <line:272:9>
|   |   |-BinaryOperator 0x1d42dc94a08 <line:274:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x1d42dc94928 <col:9> 'long' lvalue Var 0x1d42dc943e0 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1d42dc949e0 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1d42dc949c8 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1d42dc94980 <col:21, col:26> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|   |   |       `-ImplicitCastExpr 0x1d42dc94968 <col:21> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1d42dc94948 <col:21> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x1d42dc94ca0 <line:275:9, line:279:9>
|   |   | |-BinaryOperator 0x1d42dc94aa0 <line:275:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1d42dc94a70 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d42dc94a28 <col:13> 'long' lvalue Var 0x1d42dc943e0 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x1d42dc94a88 <col:20> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1d42dc94a48 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x1d42dc94c88 <col:23, line:279:9>
|   |   |   `-IfStmt 0x1d42dc94bd0 <line:276:13, line:277:26>
|   |   |     |-OpaqueValueExpr 0x1d42dc94bb8 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x1d42dc94ba8 <col:17, col:26>
|   |   |       `-ImplicitCastExpr 0x1d42dc94b90 <col:24, col:26> 'long' <IntegralCast>
|   |   |         `-ParenExpr 0x1d42dc94b70 <col:24, col:26> 'int'
|   |   |           `-IntegerLiteral 0x1d42dc94b48 <col:25> 'int' 0
|   |   |-BreakStmt 0x1d42dc94cb8 <line:280:9>
|   |   |-IfStmt 0x1d42dc95228 <line:282:9, line:288:9>
|   |   | |-BinaryOperator 0x1d42dc94d90 <line:282:13, col:24> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1d42dc94d48 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d42dc94cc0 <col:13> 'long' lvalue ParmVar 0x1d42dc94130 'num' 'long'
|   |   | | `-ImplicitCastExpr 0x1d42dc94d78 <col:19, col:24> 'long' <IntegralCast>
|   |   | |   `-ImplicitCastExpr 0x1d42dc94d60 <col:19, col:24> 'int' <LValueToRValue>
|   |   | |     `-MemberExpr 0x1d42dc94d18 <col:19, col:24> 'int' lvalue ->ibuf_size 0x1d42dc81c68
|   |   | |       `-ImplicitCastExpr 0x1d42dc94d00 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x1d42dc94ce0 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x1d42dc951f8 <col:35, line:288:9>
|   |   |   |-BinaryOperator 0x1d42dc94ec0 <line:283:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x1d42dc94db0 <col:13> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1d42dc94ea8 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x1d42dc94e80 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x1d42dc94e68 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1d42dc94dd0 <col:18> 'int ()' Function 0x1d42dc91910 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x1d42dc94e40 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x1d42dc94e28 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x1d42dc94df0 <col:38> 'long' lvalue ParmVar 0x1d42dc94130 'num' 'long'
|   |   |   |-IfStmt 0x1d42dc95040 <line:284:13, line:285:22>
|   |   |   | |-BinaryOperator 0x1d42dc94fb8 <line:284:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x1d42dc94f88 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:284:17> 'char *' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1d42dc94ee0 <col:17> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   |   | | `-ImplicitCastExpr 0x1d42dc94fa0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |   | |   `-ParenExpr 0x1d42dc94f68 <col:17, col:27> 'void *'
|   |   |   | |     `-CStyleCastExpr 0x1d42dc94f40 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   | |       `-IntegerLiteral 0x1d42dc94f00 <col:26> 'int' 0
|   |   |   | `-GotoStmt 0x1d42dc95028 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:285:17, col:22> 'malloc_error' 0x1d42dc94fd8
|   |   |   |-CallExpr 0x1d42dc950f8 <line:286:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x1d42dc950e0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1d42dc95058 <col:13> 'int ()' Function 0x1d42dc91c00 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x1d42dc95120 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x1d42dc950b0 <col:26, col:31> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |   |   |     `-ImplicitCastExpr 0x1d42dc95098 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1d42dc95078 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   `-BinaryOperator 0x1d42dc951d8 <line:287:13, col:25> 'char *' '='
|   |   |     |-MemberExpr 0x1d42dc95170 <col:13, col:18> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |   |     | `-ImplicitCastExpr 0x1d42dc95158 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1d42dc95138 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x1d42dc951c0 <col:25> 'char *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1d42dc951a0 <col:25> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   |-BinaryOperator 0x1d42dc952d0 <line:289:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1d42dc95278 <col:9, col:14> 'int' lvalue ->ibuf_off 0x1d42dc81e28
|   |   | | `-ImplicitCastExpr 0x1d42dc95260 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc95240 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-IntegerLiteral 0x1d42dc952a8 <col:25> 'int' 0
|   |   |-BinaryOperator 0x1d42dc953d0 <line:290:9, col:30> 'int' '='
|   |   | |-MemberExpr 0x1d42dc95328 <col:9, col:14> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|   |   | | `-ImplicitCastExpr 0x1d42dc95310 <col:9> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc952f0 <col:9> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CStyleCastExpr 0x1d42dc953a8 <col:25, col:30> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1d42dc95390 <col:30> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x1d42dc95358 <col:30> 'long' lvalue ParmVar 0x1d42dc94130 'num' 'long'
|   |   |-CallExpr 0x1d42dc95558 <line:291:9, col:40> 'void *'
|   |   | |-ImplicitCastExpr 0x1d42dc95540 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1d42dc953f0 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1d42dc8e820 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1d42dc955a8 <col:16, col:21> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1d42dc95590 <col:16, col:21> 'char *' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1d42dc95448 <col:16, col:21> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |   | |     `-ImplicitCastExpr 0x1d42dc95430 <col:16> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1d42dc95410 <col:16> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |-ImplicitCastExpr 0x1d42dc955d8 <col:27> 'const void *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x1d42dc955c0 <col:27> 'void *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc95478 <col:27> 'void *' lvalue ParmVar 0x1d42dc941b0 'ptr' 'void *'
|   |   | `-ImplicitCastExpr 0x1d42dc955f0 <col:32, col:37> 'unsigned long long' <IntegralCast>
|   |   |   `-CStyleCastExpr 0x1d42dc954e8 <col:32, col:37> 'int' <IntegralCast>
|   |   |     `-ImplicitCastExpr 0x1d42dc954d0 <col:37> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |       `-DeclRefExpr 0x1d42dc95498 <col:37> 'long' lvalue ParmVar 0x1d42dc94130 'num' 'long'
|   |   |-BinaryOperator 0x1d42dc95668 <line:292:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x1d42dc95608 <col:9> 'long' lvalue Var 0x1d42dc943e0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1d42dc95650 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1d42dc95628 <col:15> 'int' 1
|   |   |-BreakStmt 0x1d42dc95688 <line:293:9>
|   |   |-IfStmt 0x1d42dc8ddb8 <line:295:9, line:308:9> has_else
|   |   | |-BinaryOperator 0x1d42dc95750 <line:295:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1d42dc95738 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:295:13> 'void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1d42dc95690 <col:13> 'void *' lvalue ParmVar 0x1d42dc941b0 'ptr' 'void *'
|   |   | | `-ParenExpr 0x1d42dc95718 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   `-CStyleCastExpr 0x1d42dc956f0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     `-IntegerLiteral 0x1d42dc956b0 <col:26> 'int' 0
|   |   | |-CompoundStmt 0x1d42dc8dc08 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:295:26, line:305:9>
|   |   | | |-BinaryOperator 0x1d42dc8d7b0 <line:296:13, col:25> 'int *' '='
|   |   | | | |-DeclRefExpr 0x1d42dc95770 <col:13> 'int *' lvalue Var 0x1d42dc946e8 'ip' 'int *'
|   |   | | | `-CStyleCastExpr 0x1d42dc8d788 <col:18, col:25> 'int *' <BitCast>
|   |   | | |   `-ImplicitCastExpr 0x1d42dc8d770 <col:25> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | | |     `-DeclRefExpr 0x1d42dc8d738 <col:25> 'void *' lvalue ParmVar 0x1d42dc941b0 'ptr' 'void *'
|   |   | | `-IfStmt 0x1d42dc8dbe0 <line:297:13, line:304:13> has_else
|   |   | |   |-BinaryOperator 0x1d42dc8d860 <line:297:17, col:24> 'int' '=='
|   |   | |   | |-ImplicitCastExpr 0x1d42dc8d848 <col:17, col:18> 'int' <LValueToRValue>
|   |   | |   | | `-UnaryOperator 0x1d42dc8d808 <col:17, col:18> 'int' lvalue prefix '*' cannot overflow
|   |   | |   | |   `-ImplicitCastExpr 0x1d42dc8d7f0 <col:18> 'int *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x1d42dc8d7d0 <col:18> 'int *' lvalue Var 0x1d42dc946e8 'ip' 'int *'
|   |   | |   | `-IntegerLiteral 0x1d42dc8d820 <col:24> 'int' 0
|   |   | |   |-CompoundStmt 0x1d42dc8da28 <col:27, line:300:13>
|   |   | |   | |-BinaryOperator 0x1d42dc8d930 <line:298:17, col:28> 'int' '='
|   |   | |   | | |-DeclRefExpr 0x1d42dc8d880 <col:17> 'int' lvalue Var 0x1d42dc8c740 'ibs' 'int'
|   |   | |   | | `-CStyleCastExpr 0x1d42dc8d908 <col:23, col:28> 'int' <IntegralCast>
|   |   | |   | |   `-ImplicitCastExpr 0x1d42dc8d8f0 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
|   |   | |   | |     `-DeclRefExpr 0x1d42dc8d8b8 <col:28> 'long' lvalue ParmVar 0x1d42dc94130 'num' 'long'
|   |   | |   | `-BinaryOperator 0x1d42dc8da08 <line:299:17, col:28> 'int' '='
|   |   | |   |   |-DeclRefExpr 0x1d42dc8d950 <col:17> 'int' lvalue Var 0x1d42dc8c7c0 'obs' 'int'
|   |   | |   |   `-ImplicitCastExpr 0x1d42dc8d9f0 <col:23, col:28> 'int' <LValueToRValue>
|   |   | |   |     `-MemberExpr 0x1d42dc8d9c0 <col:23, col:28> 'int' lvalue ->obuf_size 0x1d42dc81cd8
|   |   | |   |       `-ImplicitCastExpr 0x1d42dc8d9a8 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |   |         `-DeclRefExpr 0x1d42dc8d988 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |   `-CompoundStmt 0x1d42dc8dbc0 <line:300:20, line:304:13>
|   |   | |     |-BinaryOperator 0x1d42dc8dae8 <line:302:17, col:28> 'int' '='
|   |   | |     | |-DeclRefExpr 0x1d42dc8da48 <col:17> 'int' lvalue Var 0x1d42dc8c740 'ibs' 'int'
|   |   | |     | `-ImplicitCastExpr 0x1d42dc8dad0 <col:23, col:28> 'int' <LValueToRValue>
|   |   | |     |   `-MemberExpr 0x1d42dc8daa0 <col:23, col:28> 'int' lvalue ->ibuf_size 0x1d42dc81c68
|   |   | |     |     `-ImplicitCastExpr 0x1d42dc8da88 <col:23> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |     |       `-DeclRefExpr 0x1d42dc8da68 <col:23> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | |     `-BinaryOperator 0x1d42dc8dba0 <line:303:17, col:28> 'int' '='
|   |   | |       |-DeclRefExpr 0x1d42dc8db08 <col:17> 'int' lvalue Var 0x1d42dc8c7c0 'obs' 'int'
|   |   | |       `-CStyleCastExpr 0x1d42dc8db78 <col:23, col:28> 'int' <IntegralCast>
|   |   | |         `-ImplicitCastExpr 0x1d42dc8db60 <col:28> 'long' <LValueToRValue> part_of_explicit_cast
|   |   | |           `-DeclRefExpr 0x1d42dc8db28 <col:28> 'long' lvalue ParmVar 0x1d42dc94130 'num' 'long'
|   |   | `-CompoundStmt 0x1d42dc8dd98 <line:305:16, line:308:9>
|   |   |   |-BinaryOperator 0x1d42dc8dcc0 <line:306:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x1d42dc8dc28 <col:13> 'int' lvalue Var 0x1d42dc8c740 'ibs' 'int'
|   |   |   | `-CStyleCastExpr 0x1d42dc8dc98 <col:19, col:24> 'int' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1d42dc8dc80 <col:24> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |     `-DeclRefExpr 0x1d42dc8dc48 <col:24> 'long' lvalue ParmVar 0x1d42dc94130 'num' 'long'
|   |   |   `-BinaryOperator 0x1d42dc8dd78 <line:307:13, col:24> 'int' '='
|   |   |     |-DeclRefExpr 0x1d42dc8dce0 <col:13> 'int' lvalue Var 0x1d42dc8c7c0 'obs' 'int'
|   |   |     `-CStyleCastExpr 0x1d42dc8dd50 <col:19, col:24> 'int' <IntegralCast>
|   |   |       `-ImplicitCastExpr 0x1d42dc8dd38 <col:24> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |         `-DeclRefExpr 0x1d42dc8dd00 <col:24> 'long' lvalue ParmVar 0x1d42dc94130 'num' 'long'
|   |   |-BinaryOperator 0x1d42dc8de80 <line:309:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x1d42dc8dde0 <col:9> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   | `-ImplicitCastExpr 0x1d42dc8de68 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1d42dc8de38 <col:14, col:19> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |   |     `-ImplicitCastExpr 0x1d42dc8de20 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1d42dc8de00 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-BinaryOperator 0x1d42dc8df58 <line:310:9, col:19> 'char *' '='
|   |   | |-DeclRefExpr 0x1d42dc8dea0 <col:9> 'char *' lvalue Var 0x1d42dc94538 'p2' 'char *'
|   |   | `-ImplicitCastExpr 0x1d42dc8df40 <col:14, col:19> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1d42dc8df10 <col:14, col:19> 'char *' lvalue ->obuf 0x1d42dc81e98
|   |   |     `-ImplicitCastExpr 0x1d42dc8def8 <col:14> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1d42dc8ded8 <col:14> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |-IfStmt 0x1d42dc8e3a8 <line:311:9, line:315:9>
|   |   | |-BinaryOperator 0x1d42dc8e110 <line:311:13, col:66> 'int' '&&'
|   |   | | |-ParenExpr 0x1d42dc8dff8 <col:13, col:39> 'int'
|   |   | | | `-BinaryOperator 0x1d42dc8dfd8 <col:14, line:23:33> 'int' '>'
|   |   | | |   |-ImplicitCastExpr 0x1d42dc8dfc0 <line:311:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1d42dc8df78 <col:14> 'int' lvalue Var 0x1d42dc8c740 'ibs' 'int'
|   |   | | |   `-IntegerLiteral 0x1d42dc8df98 <line:23:33> 'int' 4096
|   |   | | `-ParenExpr 0x1d42dc8e0f0 <line:311:44, col:66> 'int'
|   |   | |   `-BinaryOperator 0x1d42dc8e0d0 <col:45, col:57> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x1d42dc8e0a0 <col:45> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1d42dc8e018 <col:45> 'int' lvalue Var 0x1d42dc8c740 'ibs' 'int'
|   |   | |     `-ImplicitCastExpr 0x1d42dc8e0b8 <col:52, col:57> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x1d42dc8e070 <col:52, col:57> 'int' lvalue ->ibuf_size 0x1d42dc81c68
|   |   | |         `-ImplicitCastExpr 0x1d42dc8e058 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x1d42dc8e038 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x1d42dc8e388 <col:69, line:315:9>
|   |   |   |-BinaryOperator 0x1d42dc8e240 <line:312:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x1d42dc8e130 <col:13> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1d42dc8e228 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x1d42dc8e200 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x1d42dc8e1e8 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1d42dc8e150 <col:18> 'int ()' Function 0x1d42dc91910 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x1d42dc8e1c0 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x1d42dc8e1a8 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x1d42dc8e170 <col:38> 'long' lvalue ParmVar 0x1d42dc94130 'num' 'long'
|   |   |   `-IfStmt 0x1d42dc8e370 <line:313:13, line:314:22>
|   |   |     |-BinaryOperator 0x1d42dc8e338 <line:313:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1d42dc8e308 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:313:17> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1d42dc8e260 <col:17> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   |     | `-ImplicitCastExpr 0x1d42dc8e320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |     |   `-ParenExpr 0x1d42dc8e2e8 <col:17, col:27> 'void *'
|   |   |     |     `-CStyleCastExpr 0x1d42dc8e2c0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |       `-IntegerLiteral 0x1d42dc8e280 <col:26> 'int' 0
|   |   |     `-GotoStmt 0x1d42dc8e358 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:314:17, col:22> 'malloc_error' 0x1d42dc94fd8
|   |   |-IfStmt 0x1d42dc97a50 <line:316:9, line:323:9>
|   |   | |-BinaryOperator 0x1d42dc8e558 <line:316:13, col:66> 'int' '&&'
|   |   | | |-ParenExpr 0x1d42dc8e440 <col:13, col:39> 'int'
|   |   | | | `-BinaryOperator 0x1d42dc8e420 <col:14, line:23:33> 'int' '>'
|   |   | | |   |-ImplicitCastExpr 0x1d42dc8e408 <line:316:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1d42dc8e3c0 <col:14> 'int' lvalue Var 0x1d42dc8c7c0 'obs' 'int'
|   |   | | |   `-IntegerLiteral 0x1d42dc8e3e0 <line:23:33> 'int' 4096
|   |   | | `-ParenExpr 0x1d42dc8e538 <line:316:44, col:66> 'int'
|   |   | |   `-BinaryOperator 0x1d42dc8e518 <col:45, col:57> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x1d42dc8e4e8 <col:45> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1d42dc8e460 <col:45> 'int' lvalue Var 0x1d42dc8c7c0 'obs' 'int'
|   |   | |     `-ImplicitCastExpr 0x1d42dc8e500 <col:52, col:57> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x1d42dc8e4b8 <col:52, col:57> 'int' lvalue ->obuf_size 0x1d42dc81cd8
|   |   | |         `-ImplicitCastExpr 0x1d42dc8e4a0 <col:52> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x1d42dc8e480 <col:52> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | `-CompoundStmt 0x1d42dc97a30 <col:69, line:323:9>
|   |   |   |-BinaryOperator 0x1d42dc8e688 <line:317:13, col:41> 'char *' '='
|   |   |   | |-DeclRefExpr 0x1d42dc8e578 <col:13> 'char *' lvalue Var 0x1d42dc94538 'p2' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1d42dc8e670 <col:18, col:41> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x1d42dc8e648 <col:18, col:41> 'int'
|   |   |   |     |-ImplicitCastExpr 0x1d42dc8e630 <col:18> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1d42dc8e598 <col:18> 'int ()' Function 0x1d42dc91910 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x1d42dc8e608 <col:33, col:38> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x1d42dc8e5f0 <col:38> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x1d42dc8e5b8 <col:38> 'long' lvalue ParmVar 0x1d42dc94130 'num' 'long'
|   |   |   `-IfStmt 0x1d42dc97a18 <line:318:13, line:322:13>
|   |   |     |-BinaryOperator 0x1d42dc97838 <line:318:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1d42dc97808 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:318:17> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1d42dc8e6a8 <col:17> 'char *' lvalue Var 0x1d42dc94538 'p2' 'char *'
|   |   |     | `-ImplicitCastExpr 0x1d42dc97820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |     |   `-ParenExpr 0x1d42dc977e8 <col:17, col:27> 'void *'
|   |   |     |     `-CStyleCastExpr 0x1d42dc977c0 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |       `-IntegerLiteral 0x1d42dc8e6c8 <col:26> 'int' 0
|   |   |     `-CompoundStmt 0x1d42dc979f8 <.//openssl//file_jk/after\crypto\bio\bf_buff.c:318:29, line:322:13>
|   |   |       |-IfStmt 0x1d42dc979c8 <line:319:17, line:320:36>
|   |   |       | |-BinaryOperator 0x1d42dc97910 <line:319:21, col:32> 'int' '!='
|   |   |       | | |-ImplicitCastExpr 0x1d42dc978e0 <col:21> 'char *' <LValueToRValue>
|   |   |       | | | `-DeclRefExpr 0x1d42dc97858 <col:21> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   |       | | `-ImplicitCastExpr 0x1d42dc978f8 <col:27, col:32> 'char *' <LValueToRValue>
|   |   |       | |   `-MemberExpr 0x1d42dc978b0 <col:27, col:32> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |   |       | |     `-ImplicitCastExpr 0x1d42dc97898 <col:27> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |       `-DeclRefExpr 0x1d42dc97878 <col:27> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-CallExpr 0x1d42dc97988 <line:320:21, col:36> 'int'
|   |   |       |   |-ImplicitCastExpr 0x1d42dc97970 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |   | `-DeclRefExpr 0x1d42dc97930 <col:21> 'int ()' Function 0x1d42dc91c00 'OPENSSL_free' 'int ()'
|   |   |       |   `-ImplicitCastExpr 0x1d42dc979b0 <col:34> 'char *' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x1d42dc97950 <col:34> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   |       `-GotoStmt 0x1d42dc979e0 <line:321:17, col:22> 'malloc_error' 0x1d42dc94fd8
|   |   |-IfStmt 0x1d42dc97f38 <line:324:9, line:330:9>
|   |   | |-BinaryOperator 0x1d42dc97b20 <line:324:13, col:26> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1d42dc97af0 <col:13, col:18> 'char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1d42dc97aa0 <col:13, col:18> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |   | | |   `-ImplicitCastExpr 0x1d42dc97a88 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1d42dc97a68 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-ImplicitCastExpr 0x1d42dc97b08 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc97ad0 <col:26> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   | `-CompoundStmt 0x1d42dc97f00 <col:30, line:330:9>
|   |   |   |-CallExpr 0x1d42dc97be0 <line:325:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x1d42dc97bc8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1d42dc97b40 <col:13> 'int ()' Function 0x1d42dc91c00 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x1d42dc97c08 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x1d42dc97b98 <col:26, col:31> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |   |   |     `-ImplicitCastExpr 0x1d42dc97b80 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1d42dc97b60 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   |-BinaryOperator 0x1d42dc97cc0 <line:326:13, col:25> 'char *' '='
|   |   |   | |-MemberExpr 0x1d42dc97c58 <col:13, col:18> 'char *' lvalue ->ibuf 0x1d42dc81d48
|   |   |   | | `-ImplicitCastExpr 0x1d42dc97c40 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1d42dc97c20 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1d42dc97ca8 <col:25> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1d42dc97c88 <col:25> 'char *' lvalue Var 0x1d42dc944b8 'p1' 'char *'
|   |   |   |-BinaryOperator 0x1d42dc97d70 <line:327:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x1d42dc97d18 <col:13, col:18> 'int' lvalue ->ibuf_off 0x1d42dc81e28
|   |   |   | | `-ImplicitCastExpr 0x1d42dc97d00 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1d42dc97ce0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x1d42dc97d48 <col:29> 'int' 0
|   |   |   |-BinaryOperator 0x1d42dc97e20 <line:328:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x1d42dc97dc8 <col:13, col:18> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|   |   |   | | `-ImplicitCastExpr 0x1d42dc97db0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1d42dc97d90 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x1d42dc97df8 <col:29> 'int' 0
|   |   |   `-BinaryOperator 0x1d42dc97ee0 <line:329:13, col:30> 'int' '='
|   |   |     |-MemberExpr 0x1d42dc97e78 <col:13, col:18> 'int' lvalue ->ibuf_size 0x1d42dc81c68
|   |   |     | `-ImplicitCastExpr 0x1d42dc97e60 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1d42dc97e40 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x1d42dc97ec8 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1d42dc97ea8 <col:30> 'int' lvalue Var 0x1d42dc8c740 'ibs' 'int'
|   |   |-IfStmt 0x1d42dc98420 <line:331:9, line:337:9>
|   |   | |-BinaryOperator 0x1d42dc98008 <line:331:13, col:26> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1d42dc97fd8 <col:13, col:18> 'char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1d42dc97f88 <col:13, col:18> 'char *' lvalue ->obuf 0x1d42dc81e98
|   |   | | |   `-ImplicitCastExpr 0x1d42dc97f70 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1d42dc97f50 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-ImplicitCastExpr 0x1d42dc97ff0 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1d42dc97fb8 <col:26> 'char *' lvalue Var 0x1d42dc94538 'p2' 'char *'
|   |   | `-CompoundStmt 0x1d42dc983e8 <col:30, line:337:9>
|   |   |   |-CallExpr 0x1d42dc980c8 <line:332:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x1d42dc980b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1d42dc98028 <col:13> 'int ()' Function 0x1d42dc91c00 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x1d42dc980f0 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x1d42dc98080 <col:26, col:31> 'char *' lvalue ->obuf 0x1d42dc81e98
|   |   |   |     `-ImplicitCastExpr 0x1d42dc98068 <col:26> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1d42dc98048 <col:26> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   |-BinaryOperator 0x1d42dc981a8 <line:333:13, col:25> 'char *' '='
|   |   |   | |-MemberExpr 0x1d42dc98140 <col:13, col:18> 'char *' lvalue ->obuf 0x1d42dc81e98
|   |   |   | | `-ImplicitCastExpr 0x1d42dc98128 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1d42dc98108 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1d42dc98190 <col:25> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1d42dc98170 <col:25> 'char *' lvalue Var 0x1d42dc94538 'p2' 'char *'
|   |   |   |-BinaryOperator 0x1d42dc98258 <line:334:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x1d42dc98200 <col:13, col:18> 'int' lvalue ->obuf_off 0x1d42dc81f78
|   |   |   | | `-ImplicitCastExpr 0x1d42dc981e8 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1d42dc981c8 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x1d42dc98230 <col:29> 'int' 0
|   |   |   |-BinaryOperator 0x1d42dc98308 <line:335:13, col:29> 'int' '='
|   |   |   | |-MemberExpr 0x1d42dc982b0 <col:13, col:18> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   |   | | `-ImplicitCastExpr 0x1d42dc98298 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1d42dc98278 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |   | `-IntegerLiteral 0x1d42dc982e0 <col:29> 'int' 0
|   |   |   `-BinaryOperator 0x1d42dc983c8 <line:336:13, col:30> 'int' '='
|   |   |     |-MemberExpr 0x1d42dc98360 <col:13, col:18> 'int' lvalue ->obuf_size 0x1d42dc81cd8
|   |   |     | `-ImplicitCastExpr 0x1d42dc98348 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1d42dc98328 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x1d42dc983b0 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1d42dc98390 <col:30> 'int' lvalue Var 0x1d42dc8c7c0 'obs' 'int'
|   |   |-BreakStmt 0x1d42dc98438 <line:338:9>
|   |   |-IfStmt 0x1d42dc98550 <line:340:9, line:341:22>
|   |   | |-OpaqueValueExpr 0x1d42dc98538 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1d42dc98528 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x1d42dc98510 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x1d42dc984f0 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x1d42dc984c8 <col:21> 'int' 0
|   |   |-BreakStmt 0x1d42dc98648 <line:345:9>
|   |   |-IfStmt 0x1d42dc98760 <line:348:9, line:349:22>
|   |   | |-OpaqueValueExpr 0x1d42dc98748 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1d42dc98738 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x1d42dc98720 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x1d42dc98700 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x1d42dc986d8 <col:21> 'int' 0
|   |   |-IfStmt 0x1d42dc96900 <line:350:9, line:353:9>
|   |   | |-BinaryOperator 0x1d42dc96820 <line:350:13, col:30> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1d42dc96808 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1d42dc967b0 <col:13, col:18> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   | | |   `-ImplicitCastExpr 0x1d42dc98798 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1d42dc98778 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   | | `-IntegerLiteral 0x1d42dc967e0 <col:30> 'int' 0
|   |   | `-CompoundStmt 0x1d42dc968e8 <col:33, line:353:9>
|   |   |   `-BreakStmt 0x1d42dc968e0 <line:352:13>
|   |   |-ForStmt 0x1d42dc97110 <line:355:9, line:370:9>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | `-CompoundStmt 0x1d42dc970f8 <line:355:18, line:370:9>
|   |   |   `-IfStmt 0x1d42dc970d0 <line:357:13, line:369:13> has_else
|   |   |     |-BinaryOperator 0x1d42dc969e0 <line:357:17, col:33> 'int' '>'
|   |   |     | |-ImplicitCastExpr 0x1d42dc969c8 <col:17, col:22> 'int' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x1d42dc96970 <col:17, col:22> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   |     | |   `-ImplicitCastExpr 0x1d42dc96958 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x1d42dc96938 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | `-IntegerLiteral 0x1d42dc969a0 <col:33> 'int' 0
|   |   |     |-CompoundStmt 0x1d42dc96f18 <col:36, line:365:13>
|   |   |     | |-IfStmt 0x1d42dc96d60 <line:361:17, line:362:36>
|   |   |     | | |-BinaryOperator 0x1d42dc96c98 <line:361:21, col:26> 'int' '<='
|   |   |     | | | |-ImplicitCastExpr 0x1d42dc96c80 <col:21> 'int' <LValueToRValue>
|   |   |     | | | | `-DeclRefExpr 0x1d42dc96c38 <col:21> 'int' lvalue Var 0x1d42dc945e8 'r' 'int'
|   |   |     | | | `-IntegerLiteral 0x1d42dc96c58 <col:26> 'int' 0
|   |   |     | | `-ReturnStmt 0x1d42dc96d50 <line:362:21, col:36>
|   |   |     | |   `-ParenExpr 0x1d42dc96d30 <col:28, col:36> 'long'
|   |   |     | |     `-CStyleCastExpr 0x1d42dc96d08 <col:29, col:35> 'long' <IntegralCast>
|   |   |     | |       `-ImplicitCastExpr 0x1d42dc96cf0 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     | |         `-DeclRefExpr 0x1d42dc96cb8 <col:35> 'int' lvalue Var 0x1d42dc945e8 'r' 'int'
|   |   |     | |-CompoundAssignOperator 0x1d42dc96e18 <line:363:17, col:34> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     | | |-MemberExpr 0x1d42dc96db0 <col:17, col:22> 'int' lvalue ->obuf_off 0x1d42dc81f78
|   |   |     | | | `-ImplicitCastExpr 0x1d42dc96d98 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     | | |   `-DeclRefExpr 0x1d42dc96d78 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     | | `-ImplicitCastExpr 0x1d42dc96e00 <col:34> 'int' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x1d42dc96de0 <col:34> 'int' lvalue Var 0x1d42dc945e8 'r' 'int'
|   |   |     | `-CompoundAssignOperator 0x1d42dc96ee8 <line:364:17, col:34> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |   |-MemberExpr 0x1d42dc96e80 <col:17, col:22> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   |     |   | `-ImplicitCastExpr 0x1d42dc96e68 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |     |   |   `-DeclRefExpr 0x1d42dc96e48 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |     |   `-ImplicitCastExpr 0x1d42dc96ed0 <col:34> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1d42dc96eb0 <col:34> 'int' lvalue Var 0x1d42dc945e8 'r' 'int'
|   |   |     `-CompoundStmt 0x1d42dc970a8 <line:365:20, line:369:13>
|   |   |       |-BinaryOperator 0x1d42dc96fd0 <line:366:17, col:33> 'int' '='
|   |   |       | |-MemberExpr 0x1d42dc96f78 <col:17, col:22> 'int' lvalue ->obuf_len 0x1d42dc81f08
|   |   |       | | `-ImplicitCastExpr 0x1d42dc96f60 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x1d42dc96f40 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-IntegerLiteral 0x1d42dc96fa8 <col:33> 'int' 0
|   |   |       |-BinaryOperator 0x1d42dc97080 <line:367:17, col:33> 'int' '='
|   |   |       | |-MemberExpr 0x1d42dc97028 <col:17, col:22> 'int' lvalue ->obuf_off 0x1d42dc81f78
|   |   |       | | `-ImplicitCastExpr 0x1d42dc97010 <col:17> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x1d42dc96ff0 <col:17> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc94348 'ctx' 'BIO_F_BUFFER_CTX *'
|   |   |       | `-IntegerLiteral 0x1d42dc97058 <col:33> 'int' 0
|   |   |       `-BreakStmt 0x1d42dc970a0 <line:368:17>
|   |   |-BreakStmt 0x1d42dc971e8 <line:372:9>
|   |   |-IfStmt 0x1d42dc97578 <line:375:9, line:377:19>
|   |   | |-OpaqueValueExpr 0x1d42dc97560 <<invalid sloc>> '_Bool'
|   |   | `-BinaryOperator 0x1d42dc97540 <col:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x1d42dc974e0 <col:13> 'long' lvalue Var 0x1d42dc943e0 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1d42dc97528 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1d42dc97500 <col:19> 'int' 0
|   |   |-BreakStmt 0x1d42dc97590 <line:378:9>
|   |   |-DefaultStmt 0x1d42dc976c0 <line:379:5, line:381:22>
|   |   | `-IfStmt 0x1d42dc976a8 <line:380:9, line:381:22>
|   |   |   |-OpaqueValueExpr 0x1d42dc97690 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x1d42dc97680 <col:13, col:22>
|   |   |     `-ImplicitCastExpr 0x1d42dc97668 <col:20, col:22> 'long' <IntegralCast>
|   |   |       `-ParenExpr 0x1d42dc97648 <col:20, col:22> 'int'
|   |   |         `-IntegerLiteral 0x1d42dc97620 <col:21> 'int' 0
|   |   `-BreakStmt 0x1d42dc97780 <line:383:9>
|   |-ReturnStmt 0x1d42dc9c9c8 <line:385:5, col:16>
|   | `-ImplicitCastExpr 0x1d42dc9c9b0 <col:12, col:16> 'long' <LValueToRValue>
|   |   `-ParenExpr 0x1d42dc9c990 <col:12, col:16> 'long' lvalue
|   |     `-DeclRefExpr 0x1d42dc9c970 <col:13> 'long' lvalue Var 0x1d42dc943e0 'ret' 'long'
|   |-LabelStmt 0x1d42dc9caf0 <line:386:2, col:14> 'malloc_error'
|   | `-NullStmt 0x1d42dc9cae8 <col:14>
|   `-ReturnStmt 0x1d42dc9cb68 <line:388:5, col:14>
|     `-ImplicitCastExpr 0x1d42dc9cb50 <col:12, col:14> 'long' <IntegralCast>
|       `-ParenExpr 0x1d42dc9cb30 <col:12, col:14> 'int'
|         `-IntegerLiteral 0x1d42dc9cb08 <col:13> 'int' 0
|-FunctionDecl 0x1d42dc9cd90 <line:391:1, line:403:1> line:391:13 invalid buffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1d42dc9cbe8 <col:34, col:39> col:39 invalid b 'int *'
| |-ParmVarDecl 0x1d42dc9cc68 <col:42, col:46> col:46 used cmd 'int'
| |-ParmVarDecl 0x1d42dc9cce8 <col:51, col:64> col:64 invalid fp 'int *'
| `-CompoundStmt 0x1d42dc9d2f0 <line:392:1, line:403:1>
|   |-DeclStmt 0x1d42dc9cf20 <line:393:5, col:17>
|   | `-VarDecl 0x1d42dc9ce78 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1d42dc9cf08 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1d42dc9cee0 <col:16> 'int' 1
|   |-IfStmt 0x1d42dc9d048 <line:395:5, line:396:18>
|   | |-OpaqueValueExpr 0x1d42dc9d030 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1d42dc9d020 <col:9, col:18>
|   |   `-ImplicitCastExpr 0x1d42dc9d008 <col:16, col:18> 'long' <IntegralCast>
|   |     `-ParenExpr 0x1d42dc9cfe8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x1d42dc9cfc0 <col:17> 'int' 0
|   |-SwitchStmt 0x1d42dc9d0b0 <line:397:5, line:401:5>
|   | |-ImplicitCastExpr 0x1d42dc9d098 <line:397:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1d42dc9d060 <col:13> 'int' lvalue ParmVar 0x1d42dc9cc68 'cmd' 'int'
|   | `-CompoundStmt 0x1d42dc9d268 <col:18, line:401:5>
|   |   |-DefaultStmt 0x1d42dc9d240 <line:398:5, col:12>
|   |   | `-NullStmt 0x1d42dc9d238 <col:12>
|   |   `-BreakStmt 0x1d42dc9d260 <line:400:9>
|   `-ReturnStmt 0x1d42dc9d2e0 <line:402:5, col:16>
|     `-ImplicitCastExpr 0x1d42dc9d2c8 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x1d42dc9d2a8 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x1d42dc9d288 <col:13> 'long' lvalue Var 0x1d42dc9ce78 'ret' 'long'
|-FunctionDecl 0x1d42dc9d4e0 <line:405:1, line:450:1> line:405:12 invalid buffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1d42dc9d338 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x1d42dc9d3b8 <col:32, col:38> col:38 used buf 'char *'
| |-ParmVarDecl 0x1d42dc9d438 <col:43, col:47> col:47 used size 'int'
| `-CompoundStmt 0x1d42dc98f00 <line:406:1, line:450:1>
|   |-DeclStmt 0x1d42dc9d628 <line:407:5, col:26>
|   | `-VarDecl 0x1d42dc9d5c0 <col:5, col:23> col:23 used ctx 'BIO_F_BUFFER_CTX *'
|   |-DeclStmt 0x1d42dc9a7f0 <line:408:5, col:25>
|   | |-VarDecl 0x1d42dc9d658 <col:5, col:15> col:9 used num 'int' cinit
|   | | `-IntegerLiteral 0x1d42dc9d6c0 <col:15> 'int' 0
|   | |-VarDecl 0x1d42dc9d700 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x1d42dc9d780 <col:5, col:21> col:21 used flag 'int'
|   |-DeclStmt 0x1d42dc9a888 <line:409:5, col:12>
|   | `-VarDecl 0x1d42dc9a820 <col:5, col:11> col:11 used p 'char *'
|   |-UnaryOperator 0x1d42dc9a910 <line:412:5, col:9> 'int' postfix '--'
|   | `-DeclRefExpr 0x1d42dc9a8d8 <col:5> 'int' lvalue ParmVar 0x1d42dc9d438 'size' 'int'
|   `-ForStmt 0x1d42dc98ec8 <line:415:5, line:449:5>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     |-<<<NULL>>>
|     `-CompoundStmt 0x1d42dc98eb0 <line:415:14, line:449:5>
|       `-IfStmt 0x1d42dc98e88 <line:416:9, line:448:9> has_else
|         |-BinaryOperator 0x1d42dc9a9f0 <line:416:13, col:29> 'int' '>'
|         | |-ImplicitCastExpr 0x1d42dc9a9d8 <col:13, col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x1d42dc9a980 <col:13, col:18> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|         | |   `-ImplicitCastExpr 0x1d42dc9a968 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |     `-DeclRefExpr 0x1d42dc9a948 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc9d5c0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | `-IntegerLiteral 0x1d42dc9a9b0 <col:29> 'int' 0
|         |-CompoundStmt 0x1d42dc9b728 <col:32, line:435:9>
|         | |-BinaryOperator 0x1d42dc9aba0 <line:417:13, col:43> 'char *' '='
|         | | |-DeclRefExpr 0x1d42dc9aa10 <col:13> 'char *' lvalue Var 0x1d42dc9a820 'p' 'char *'
|         | | `-UnaryOperator 0x1d42dc9ab88 <col:17, col:43> 'char *' prefix '&' cannot overflow
|         | |   `-ParenExpr 0x1d42dc9ab68 <col:18, col:43> 'char' lvalue
|         | |     `-ArraySubscriptExpr 0x1d42dc9ab48 <col:19, col:42> 'char' lvalue
|         | |       |-ImplicitCastExpr 0x1d42dc9ab18 <col:19, col:24> 'char *' <LValueToRValue>
|         | |       | `-MemberExpr 0x1d42dc9aa80 <col:19, col:24> 'char *' lvalue ->ibuf 0x1d42dc81d48
|         | |       |   `-ImplicitCastExpr 0x1d42dc9aa68 <col:19> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |       |     `-DeclRefExpr 0x1d42dc9aa48 <col:19> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc9d5c0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | |       `-ImplicitCastExpr 0x1d42dc9ab30 <col:29, col:34> 'int' <LValueToRValue>
|         | |         `-MemberExpr 0x1d42dc9aae8 <col:29, col:34> 'int' lvalue ->ibuf_off 0x1d42dc81e28
|         | |           `-ImplicitCastExpr 0x1d42dc9aad0 <col:29> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | |             `-DeclRefExpr 0x1d42dc9aab0 <col:29> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc9d5c0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | |-BinaryOperator 0x1d42dc9ac20 <line:418:13, col:20> 'int' '='
|         | | |-DeclRefExpr 0x1d42dc9abc0 <col:13> 'int' lvalue Var 0x1d42dc9d780 'flag' 'int'
|         | | `-IntegerLiteral 0x1d42dc9abf8 <col:20> 'int' 0
|         | |-ForStmt 0x1d42dc9b210 <line:419:13, line:426:13>
|         | | |-BinaryOperator 0x1d42dc9aca0 <line:419:18, col:22> 'int' '='
|         | | | |-DeclRefExpr 0x1d42dc9ac40 <col:18> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|         | | | `-IntegerLiteral 0x1d42dc9ac78 <col:22> 'int' 0
|         | | |-<<<NULL>>>
|         | | |-BinaryOperator 0x1d42dc9ae68 <col:25, col:57> 'int' '&&'
|         | | | |-ParenExpr 0x1d42dc9ad98 <col:25, col:43> 'int'
|         | | | | `-BinaryOperator 0x1d42dc9ad78 <col:26, col:35> 'int' '<'
|         | | | |   |-ImplicitCastExpr 0x1d42dc9ad48 <col:26> 'int' <LValueToRValue>
|         | | | |   | `-DeclRefExpr 0x1d42dc9acc0 <col:26> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|         | | | |   `-ImplicitCastExpr 0x1d42dc9ad60 <col:30, col:35> 'int' <LValueToRValue>
|         | | | |     `-MemberExpr 0x1d42dc9ad18 <col:30, col:35> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|         | | | |       `-ImplicitCastExpr 0x1d42dc9ad00 <col:30> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | | |         `-DeclRefExpr 0x1d42dc9ace0 <col:30> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc9d5c0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | | `-ParenExpr 0x1d42dc9ae48 <col:48, col:57> 'int'
|         | | |   `-BinaryOperator 0x1d42dc9ae28 <col:49, col:53> 'int' '<'
|         | | |     |-ImplicitCastExpr 0x1d42dc9adf8 <col:49> 'int' <LValueToRValue>
|         | | |     | `-DeclRefExpr 0x1d42dc9adb8 <col:49> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|         | | |     `-ImplicitCastExpr 0x1d42dc9ae10 <col:53> 'int' <LValueToRValue>
|         | | |       `-DeclRefExpr 0x1d42dc9add8 <col:53> 'int' lvalue ParmVar 0x1d42dc9d438 'size' 'int'
|         | | |-UnaryOperator 0x1d42dc9aea8 <col:60, col:61> 'int' postfix '++'
|         | | | `-DeclRefExpr 0x1d42dc9ae88 <col:60> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|         | | `-CompoundStmt 0x1d42dc9b1f0 <col:65, line:426:13>
|         | |   |-BinaryOperator 0x1d42dc9aff0 <line:420:17, col:31> 'char' '='
|         | |   | |-UnaryOperator 0x1d42dc9af30 <col:17, col:24> 'char' lvalue prefix '*' cannot overflow
|         | |   | | `-ParenExpr 0x1d42dc9af10 <col:18, col:24> 'char *'
|         | |   | |   `-UnaryOperator 0x1d42dc9aef8 <col:19, col:22> 'char *' postfix '++'
|         | |   | |     `-DeclRefExpr 0x1d42dc9aec0 <col:19> 'char *' lvalue ParmVar 0x1d42dc9d3b8 'buf' 'char *'
|         | |   | `-ImplicitCastExpr 0x1d42dc9afd8 <col:28, col:31> 'char' <LValueToRValue>
|         | |   |   `-ArraySubscriptExpr 0x1d42dc9afb8 <col:28, col:31> 'char' lvalue
|         | |   |     |-ImplicitCastExpr 0x1d42dc9af88 <col:28> 'char *' <LValueToRValue>
|         | |   |     | `-DeclRefExpr 0x1d42dc9af48 <col:28> 'char *' lvalue Var 0x1d42dc9a820 'p' 'char *'
|         | |   |     `-ImplicitCastExpr 0x1d42dc9afa0 <col:30> 'int' <LValueToRValue>
|         | |   |       `-DeclRefExpr 0x1d42dc9af68 <col:30> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|         | |   `-IfStmt 0x1d42dc9b1d8 <line:421:17, line:425:17>
|         | |     |-BinaryOperator 0x1d42dc9b0e8 <line:421:21, col:29> 'int' '=='
|         | |     | |-ImplicitCastExpr 0x1d42dc9b0d0 <col:21, col:24> 'int' <IntegralCast>
|         | |     | | `-ImplicitCastExpr 0x1d42dc9b0b8 <col:21, col:24> 'char' <LValueToRValue>
|         | |     | |   `-ArraySubscriptExpr 0x1d42dc9b080 <col:21, col:24> 'char' lvalue
|         | |     | |     |-ImplicitCastExpr 0x1d42dc9b050 <col:21> 'char *' <LValueToRValue>
|         | |     | |     | `-DeclRefExpr 0x1d42dc9b010 <col:21> 'char *' lvalue Var 0x1d42dc9a820 'p' 'char *'
|         | |     | |     `-ImplicitCastExpr 0x1d42dc9b068 <col:23> 'int' <LValueToRValue>
|         | |     | |       `-DeclRefExpr 0x1d42dc9b030 <col:23> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|         | |     | `-CharacterLiteral 0x1d42dc9b0a0 <col:29> 'int' 10
|         | |     `-CompoundStmt 0x1d42dc9b1b0 <col:35, line:425:17>
|         | |       |-BinaryOperator 0x1d42dc9b150 <line:422:21, col:28> 'int' '='
|         | |       | |-DeclRefExpr 0x1d42dc9b108 <col:21> 'int' lvalue Var 0x1d42dc9d780 'flag' 'int'
|         | |       | `-IntegerLiteral 0x1d42dc9b128 <col:28> 'int' 1
|         | |       |-UnaryOperator 0x1d42dc9b190 <line:423:21, col:22> 'int' postfix '++'
|         | |       | `-DeclRefExpr 0x1d42dc9b170 <col:21> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|         | |       `-BreakStmt 0x1d42dc9b1a8 <line:424:21>
|         | |-CompoundAssignOperator 0x1d42dc9b2b8 <line:427:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-DeclRefExpr 0x1d42dc9b248 <col:13> 'int' lvalue Var 0x1d42dc9d658 'num' 'int'
|         | | `-ImplicitCastExpr 0x1d42dc9b2a0 <col:20> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x1d42dc9b280 <col:20> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|         | |-CompoundAssignOperator 0x1d42dc9b340 <line:428:13, col:21> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-DeclRefExpr 0x1d42dc9b2e8 <col:13> 'int' lvalue ParmVar 0x1d42dc9d438 'size' 'int'
|         | | `-ImplicitCastExpr 0x1d42dc9b328 <col:21> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x1d42dc9b308 <col:21> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|         | |-CompoundAssignOperator 0x1d42dc9b410 <line:429:13, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-MemberExpr 0x1d42dc9b3a8 <col:13, col:18> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|         | | | `-ImplicitCastExpr 0x1d42dc9b390 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x1d42dc9b370 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc9d5c0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | `-ImplicitCastExpr 0x1d42dc9b3f8 <col:30> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x1d42dc9b3d8 <col:30> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|         | |-CompoundAssignOperator 0x1d42dc9b4e0 <line:430:13, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|         | | |-MemberExpr 0x1d42dc9b478 <col:13, col:18> 'int' lvalue ->ibuf_off 0x1d42dc81e28
|         | | | `-ImplicitCastExpr 0x1d42dc9b460 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|         | | |   `-DeclRefExpr 0x1d42dc9b440 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc9d5c0 'ctx' 'BIO_F_BUFFER_CTX *'
|         | | `-ImplicitCastExpr 0x1d42dc9b4c8 <col:30> 'int' <LValueToRValue>
|         | |   `-DeclRefExpr 0x1d42dc9b4a8 <col:30> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|         | `-IfStmt 0x1d42dc9b710 <line:431:13, line:434:13>
|         |   |-BinaryOperator 0x1d42dc9b5c8 <line:431:17, col:33> 'int' '||'
|         |   | |-ImplicitCastExpr 0x1d42dc9b5b0 <col:17> 'int' <LValueToRValue>
|         |   | | `-DeclRefExpr 0x1d42dc9b510 <col:17> 'int' lvalue Var 0x1d42dc9d780 'flag' 'int'
|         |   | `-BinaryOperator 0x1d42dc9b590 <col:25, col:33> 'int' '=='
|         |   |   |-ImplicitCastExpr 0x1d42dc9b578 <col:25> 'int' <LValueToRValue>
|         |   |   | `-DeclRefExpr 0x1d42dc9b530 <col:25> 'int' lvalue ParmVar 0x1d42dc9d438 'size' 'int'
|         |   |   `-IntegerLiteral 0x1d42dc9b550 <col:33> 'int' 0
|         |   `-CompoundStmt 0x1d42dc9b6f0 <col:36, line:434:13>
|         |     |-BinaryOperator 0x1d42dc9b668 <line:432:17, col:24> 'char' '='
|         |     | |-UnaryOperator 0x1d42dc9b620 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|         |     | | `-ImplicitCastExpr 0x1d42dc9b608 <col:18> 'char *' <LValueToRValue>
|         |     | |   `-DeclRefExpr 0x1d42dc9b5e8 <col:18> 'char *' lvalue ParmVar 0x1d42dc9d3b8 'buf' 'char *'
|         |     | `-ImplicitCastExpr 0x1d42dc9b650 <col:24> 'char' <IntegralCast>
|         |     |   `-CharacterLiteral 0x1d42dc9b638 <col:24> 'int' 0
|         |     `-ReturnStmt 0x1d42dc9b6e0 <line:433:17, col:28>
|         |       `-ImplicitCastExpr 0x1d42dc9b6c8 <col:24, col:28> 'int' <LValueToRValue>
|         |         `-ParenExpr 0x1d42dc9b6a8 <col:24, col:28> 'int' lvalue
|         |           `-DeclRefExpr 0x1d42dc9b688 <col:25> 'int' lvalue Var 0x1d42dc9d658 'num' 'int'
|         `-CompoundStmt 0x1d42dc98e60 <line:435:16, line:448:9>
|           |-IfStmt 0x1d42dc98cd8 <line:438:13, line:445:13>
|           | |-BinaryOperator 0x1d42dc988c8 <line:438:17, col:22> 'int' '<='
|           | | |-ImplicitCastExpr 0x1d42dc988b0 <col:17> 'int' <LValueToRValue>
|           | | | `-DeclRefExpr 0x1d42dc98868 <col:17> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|           | | `-IntegerLiteral 0x1d42dc98888 <col:22> 'int' 0
|           | `-CompoundStmt 0x1d42dc98cb0 <col:25, line:445:13>
|           |   |-BinaryOperator 0x1d42dc98988 <line:440:17, col:24> 'char' '='
|           |   | |-UnaryOperator 0x1d42dc98940 <col:17, col:18> 'char' lvalue prefix '*' cannot overflow
|           |   | | `-ImplicitCastExpr 0x1d42dc98928 <col:18> 'char *' <LValueToRValue>
|           |   | |   `-DeclRefExpr 0x1d42dc98908 <col:18> 'char *' lvalue ParmVar 0x1d42dc9d3b8 'buf' 'char *'
|           |   | `-ImplicitCastExpr 0x1d42dc98970 <col:24> 'char' <IntegralCast>
|           |   |   `-CharacterLiteral 0x1d42dc98958 <col:24> 'int' 0
|           |   |-IfStmt 0x1d42dc98b98 <line:441:17, line:442:48>
|           |   | |-BinaryOperator 0x1d42dc98a08 <line:441:21, col:25> 'int' '<'
|           |   | | |-ImplicitCastExpr 0x1d42dc989f0 <col:21> 'int' <LValueToRValue>
|           |   | | | `-DeclRefExpr 0x1d42dc989a8 <col:21> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|           |   | | `-IntegerLiteral 0x1d42dc989c8 <col:25> 'int' 0
|           |   | `-ReturnStmt 0x1d42dc98b88 <line:442:21, col:48>
|           |   |   `-ParenExpr 0x1d42dc98b68 <col:28, col:48> 'int'
|           |   |     `-ConditionalOperator 0x1d42dc98b38 <col:29, col:47> 'int'
|           |   |       |-ParenExpr 0x1d42dc98aa8 <col:29, col:37> 'int'
|           |   |       | `-BinaryOperator 0x1d42dc98a88 <col:30, col:36> 'int' '>'
|           |   |       |   |-ImplicitCastExpr 0x1d42dc98a70 <col:30> 'int' <LValueToRValue>
|           |   |       |   | `-DeclRefExpr 0x1d42dc98a28 <col:30> 'int' lvalue Var 0x1d42dc9d658 'num' 'int'
|           |   |       |   `-IntegerLiteral 0x1d42dc98a48 <col:36> 'int' 0
|           |   |       |-ImplicitCastExpr 0x1d42dc98b08 <col:41> 'int' <LValueToRValue>
|           |   |       | `-DeclRefExpr 0x1d42dc98ac8 <col:41> 'int' lvalue Var 0x1d42dc9d658 'num' 'int'
|           |   |       `-ImplicitCastExpr 0x1d42dc98b20 <col:47> 'int' <LValueToRValue>
|           |   |         `-DeclRefExpr 0x1d42dc98ae8 <col:47> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|           |   `-IfStmt 0x1d42dc98c98 <line:443:17, line:444:32>
|           |     |-BinaryOperator 0x1d42dc98c10 <line:443:21, col:26> 'int' '=='
|           |     | |-ImplicitCastExpr 0x1d42dc98bf8 <col:21> 'int' <LValueToRValue>
|           |     | | `-DeclRefExpr 0x1d42dc98bb0 <col:21> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|           |     | `-IntegerLiteral 0x1d42dc98bd0 <col:26> 'int' 0
|           |     `-ReturnStmt 0x1d42dc98c88 <line:444:21, col:32>
|           |       `-ImplicitCastExpr 0x1d42dc98c70 <col:28, col:32> 'int' <LValueToRValue>
|           |         `-ParenExpr 0x1d42dc98c50 <col:28, col:32> 'int' lvalue
|           |           `-DeclRefExpr 0x1d42dc98c30 <col:29> 'int' lvalue Var 0x1d42dc9d658 'num' 'int'
|           |-BinaryOperator 0x1d42dc98d90 <line:446:13, col:29> 'int' '='
|           | |-MemberExpr 0x1d42dc98d28 <col:13, col:18> 'int' lvalue ->ibuf_len 0x1d42dc81db8
|           | | `-ImplicitCastExpr 0x1d42dc98d10 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|           | |   `-DeclRefExpr 0x1d42dc98cf0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc9d5c0 'ctx' 'BIO_F_BUFFER_CTX *'
|           | `-ImplicitCastExpr 0x1d42dc98d78 <col:29> 'int' <LValueToRValue>
|           |   `-DeclRefExpr 0x1d42dc98d58 <col:29> 'int' lvalue Var 0x1d42dc9d700 'i' 'int'
|           `-BinaryOperator 0x1d42dc98e40 <line:447:13, col:29> 'int' '='
|             |-MemberExpr 0x1d42dc98de8 <col:13, col:18> 'int' lvalue ->ibuf_off 0x1d42dc81e28
|             | `-ImplicitCastExpr 0x1d42dc98dd0 <col:13> 'BIO_F_BUFFER_CTX *' <LValueToRValue>
|             |   `-DeclRefExpr 0x1d42dc98db0 <col:13> 'BIO_F_BUFFER_CTX *' lvalue Var 0x1d42dc9d5c0 'ctx' 'BIO_F_BUFFER_CTX *'
|             `-IntegerLiteral 0x1d42dc98e18 <col:29> 'int' 0
|-FunctionDecl 0x1d42dc99070 <line:452:1, line:455:1> line:452:12 invalid buffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1d42dc98f50 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x1d42dc98fd0 <col:32, col:44> col:44 used str 'const char *'
| `-CompoundStmt 0x1d42dc993a0 <line:453:1, line:455:1>
`-FunctionDecl 0x1d42dc991a0 <line:454:34> col:34 implicit used strlen 'unsigned long long (const char *)' extern
  `-ParmVarDecl 0x1d42dc99240 <<invalid sloc>> <invalid sloc> 'const char *'
