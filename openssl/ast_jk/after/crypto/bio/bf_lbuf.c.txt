TranslationUnitDecl 0x1a5d7eb6098 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1a5d7eb6930 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1a5d7eb6630 '__int128'
|-TypedefDecl 0x1a5d7eb69a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1a5d7eb6650 'unsigned __int128'
|-TypedefDecl 0x1a5d7eb6cd8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1a5d7eb6a90 'struct __NSConstantString_tag'
|   `-Record 0x1a5d7eb69f8 '__NSConstantString_tag'
|-TypedefDecl 0x1a5d7eb6d48 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1a5d7eb6270 'unsigned long long'
|-TypedefDecl 0x1a5d7eb6de0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1a5d7eb6da0 'char *'
|   `-BuiltinType 0x1a5d7eb6130 'char'
|-TypedefDecl 0x1a5d7eb6e50 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1a5d7eb6da0 'char *'
|   `-BuiltinType 0x1a5d7eb6130 'char'
|-TypedefDecl 0x1a5d7eb6f10 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1a5d7eb6270 'unsigned long long'
|-TypedefDecl 0x1a5d7eb6f80 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1a5d7eb6da0 'char *'
|   `-BuiltinType 0x1a5d7eb6130 'char'
|-FunctionDecl 0x1a5d9a02420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1a5d9a024c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1a5d9a02530 <col:21> Implicit
|-FunctionDecl 0x1a5d9a02588 prev 0x1a5d9a02420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1a5d9a022b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1a5d9a02678 <col:21> Inherited Implicit
|-TypedefDecl 0x1a5d9a026b8 prev 0x1a5d7eb6d48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1a5d7eb6270 'unsigned long long'
|-TypedefDecl 0x1a5d9a02760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1a5d9a02730 'size_t' sugar
|   |-Typedef 0x1a5d9a026b8 'size_t'
|   `-BuiltinType 0x1a5d7eb6270 'unsigned long long'
|-TypedefDecl 0x1a5d9a027d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1a5d7eb61d0 'long long'
|-TypedefDecl 0x1a5d9a02840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1a5d7eb61d0 'long long'
|-TypedefDecl 0x1a5d9a028b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1a5d7eb6210 'unsigned short'
|-TypedefDecl 0x1a5d9a02920 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1a5d7eb6210 'unsigned short'
|-TypedefDecl 0x1a5d9a02990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1a5d7eb6210 'unsigned short'
|-TypedefDecl 0x1a5d9a02a00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1a5d7eb6190 'int'
|-TypedefDecl 0x1a5d9a02a70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1a5d7eb61b0 'long'
|-TypedefDecl 0x1a5d9a02ae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1a5d7eb61d0 'long long'
|-TypedefDecl 0x1a5d9a02b70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1a5d9a02b40 '__time64_t' sugar
|   |-Typedef 0x1a5d9a02ae0 '__time64_t'
|   `-BuiltinType 0x1a5d7eb61d0 'long long'
|-FunctionDecl 0x1a5d9a02ce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1a5d9a02f08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1a5d9a3ad60 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1a5d9a03048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9a030c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9a03138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9a031b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1a5d9a3ab00 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1a5d9a3ae40 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1a5d9a3af00 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1a5d9a3b070 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1a5d9a3b020 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1a5d9a3afc0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1a5d9a3aee0 'struct threadlocaleinfostruct'
|       `-Record 0x1a5d9a42b80 'threadlocaleinfostruct'
|-TypedefDecl 0x1a5d9a3b180 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1a5d9a3b130 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1a5d9a3b0d0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1a5d9a3afa0 'struct threadmbcinfostruct'
|       `-Record 0x1a5d9a3af00 'threadmbcinfostruct'
|-RecordDecl 0x1a5d9a3b1d8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1a5d9a3b290 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1a5d9a3b350 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1a5d9a3b3e0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1a5d9a3b470 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1a5d9a3b528 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1a5d9a3b4d0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1a5d9a3b330 'struct localeinfo_struct'
|     `-Record 0x1a5d9a3b290 'localeinfo_struct'
|-TypedefDecl 0x1a5d9a3b600 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1a5d9a3b5b0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1a5d9a3b4d0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1a5d9a3b330 'struct localeinfo_struct'
|       `-Record 0x1a5d9a3b290 'localeinfo_struct'
|-RecordDecl 0x1a5d9a3b678 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1a5d9a3b730 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1a5d9a3b7a8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1a5d9a3b868 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1a5d9a3b900 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1a5d9a3b970 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1a5d9a3ba28 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1a5d9a3b9d0 'struct localerefcount' sugar
|   `-RecordType 0x1a5d9a3b710 'struct localerefcount'
|     `-Record 0x1a5d9a3b678 'localerefcount'
|-RecordDecl 0x1a5d9a42b80 prev 0x1a5d9a3ae40 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1a5d9a42c00 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1a5d9a42c78 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1a5d9a42ce8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1a5d9a42d58 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1a5d9a42dc8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1a5d9a42f88 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1a5d9a42ff8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1a5d9a43068 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1a5d9a430d8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1a5d9a43148 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1a5d9a431b8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1a5d9a43210 parent 0x1a5d7eb6098 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1a5d9a433a0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1a5d9a43410 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1a5d9a43480 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1a5d9a434f0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1a5d9a43590 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1a5d9a43600 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1a5d9a43710 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1a5d9a43848 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1a5d9a438f8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1a5d9a438a0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1a5d9a3aee0 'struct threadlocaleinfostruct'
|     `-Record 0x1a5d9a42b80 'threadlocaleinfostruct'
|-RecordDecl 0x1a5d9a43990 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1a5d9a43a50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1a5d9a43ac8 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1a5d9a47bd0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1a5d9a47c40 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1a5d9a47cb0 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1a5d9a47d20 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1a5d9a47d90 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1a5d9a47e00 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1a5d9a47e70 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1a5d9a47f20 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1a5d9a47ed0 'struct _iobuf' sugar
|   `-RecordType 0x1a5d9a43a30 'struct _iobuf'
|     `-Record 0x1a5d9a43990 '_iobuf'
|-FunctionDecl 0x1a5d9a48158 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1a5d9a48228 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1a5d7eb61d0 'long long'
|-FunctionDecl 0x1a5d9a48408 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9a48290 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1a5d9a48700 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1a5d9a484e0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1a5d9a48558 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1a5d9a48ab0 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1a5d9a487e0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1a5d9a48860 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1a5d9a488e0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1a5d9a52df0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1a5d9a52c80 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1a5d9a53020 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1a5d9a52ee0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1a5d9a531d0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9a530f0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1a5d9a533c0 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1a5d9a536b8 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1a5d9a53490 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1a5d9a53510 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1a5d9a53870 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9a53790 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1a5d9a53a20 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9a53940 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1a5d9a53bd0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9a53af0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1a5d9a4bd18 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9a4bc38 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1a5d9a4bea8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1a5d9a4c210 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1a5d9a4bf70 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1a5d9a4c068 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1a5d9a4c5c8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1a5d9a4c2f0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1a5d9a4c370 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1a5d9a4c3e8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1a5d9a4c788 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9a4c6a8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1a5d9a4ca50 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1a5d9a4c860 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1a5d9a4c8e0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1a5d9a53c90 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1a5d9a54088 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1a5d9a54128 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1a5d9a54190 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1a5d9a54208 prev 0x1a5d9a54088 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1a5d9a53e60 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1a5d9a53ee0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1a5d9a542b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9a54730 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1a5d9a54460 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1a5d9a544e0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1a5d9a54560 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1a5d9a54a50 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1a5d9a54af0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1a5d9a54b58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1a5d9a54bd0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1a5d9a4cc20 prev 0x1a5d9a54a50 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1a5d9a54810 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9a54890 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1a5d9a4cd18 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1a5d9a4cee0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1a5d9a4cd60 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1a5d9a4cde0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1a5d9a4d138 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1a5d9a4cfc0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1a5d9a4d038 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1a5d9a4d368 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1a5d9a4d218 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1a5d9a4d660 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1a5d9a4d440 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1a5d9a4d4b8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1a5d9a4daf8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1a5d9a4db98 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1a5d9a50c60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1a5d9a50cc8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1a5d9a50d30 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1a5d9a50db8 prev 0x1a5d9a4daf8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1a5d9a4d740 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1a5d9a4d7b8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9a4d830 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9a4d8a8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1a5d9a512c0 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1a5d9a50ea8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1a5d9a50f20 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9a50f98 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9a51010 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9a51088 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1a5d9a51780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1a5d9a514b0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1a5d9a51530 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1a5d9a515a8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1a5d9a51838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9a4ece8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1a5d9a51980 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1a5d9a51a00 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1a5d9a51a80 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1a5d9a51af8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1a5d9a4f090 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1a5d9a4f130 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1a5d9a4f198 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1a5d9a4f210 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1a5d9a4f278 prev 0x1a5d9a4f090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1a5d9a4eec8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9a4ef48 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1a5d9a4f458 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1a5d9a4f328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9a4f898 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9a4f598 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9a4f618 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9a4f6b0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1a5d9a4f950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9a54ca0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1a5d9a4fa90 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1a5d9a4fb10 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1a5d9a54f90 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9a54d78 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9a54df8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9a54e70 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9a552f0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1a5d9a55070 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1a5d9a55148 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1a5d9a556a8 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1a5d9a553c8 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9a55448 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1a5d9a554c8 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1a5d9a55908 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1a5d9a55788 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1a5d9a51cb8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1a5d9a559d8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9a55a58 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1a5d9a55ad8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1a5d9a51f18 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1a5d9a51d98 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1a5d9a523d8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1a5d9a52478 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1a5d9a524e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1a5d9a52548 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1a5d9a525b0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1a5d9a52638 prev 0x1a5d9a523d8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1a5d9a52020 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1a5d9a52098 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9a52110 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9a52188 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1a5d9a52800 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9a52720 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1a5d9a52990 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1a5d9a52b18 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1a5d9a55e70 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1a5d9a52be8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1a5d9a55cc0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1a5d9a56198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1a5d9a56050 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1a5d9a56240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9a56460 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9a56380 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1a5d9a56680 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1a5d9a56538 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1a5d9a56830 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9a56750 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1a5d9a56a80 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1a5d9a56908 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1a5d9a56988 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1a5d9a4fc50 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1a5d9a4fcf0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1a5d9a4fd60 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1a5d9a4fdc8 prev 0x1a5d9a4fc50 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1a5d9a56b60 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1a5d9a4feb8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1a5d9a4ffe8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1a5d9a4ff08 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1a5d9a50238 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1a5d9a500c0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1a5d9a50138 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1a5d9a503f8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1a5d9a50318 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1a5d9a50618 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1a5d9a504d0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1a5d9a50868 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1a5d9a506f0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1a5d9a50768 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1a5d9a50a28 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1a5d9a50948 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1a5d9aa5f20 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1a5d9a50b00 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1a5d9a50b80 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1a5d9aa60e0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1a5d9aa6000 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1a5d9aa6370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1a5d9aa6290 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1a5d9aa6418 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1a5d9aa6610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1a5d9aa6538 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1a5d9aa67a0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1a5d9aa6a48 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1a5d9aa6ae8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1a5d9aa6b58 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1a5d9aa6bc0 prev 0x1a5d9aa6a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1a5d9aa6930 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1a5d9aa6d98 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1a5d9aa6c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aa8180 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aa7f48 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aa7fc0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1a5d9aa8230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aa8458 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1a5d9aa8378 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1a5d9aa86a8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aa8530 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aa85a8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9aa8a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1a5d9aa8840 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9aa88c0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1a5d9aa8b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aa8d40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1a5d9aa8c60 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1a5d9aa6fa8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1a5d9aa6e60 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1a5d9aa7190 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1a5d9aa75e0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1a5d9aa7258 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9aa72d8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1a5d9aa7358 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1a5d9aa73d0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1a5d9aa7a60 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1a5d9aa76d0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9aa7748 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aa77c0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9aa7840 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1a5d9aa8e80 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1a5d9aa7b50 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9aa7bc8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9aa7c48 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1a5d9aa9048 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1a5d9aa8f68 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1a5d9aa9420 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1a5d9aa94c0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1a5d9aa9528 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1a5d9aa95a0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1a5d9aa9608 prev 0x1a5d9aa9420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1a5d9aa91e0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1a5d9aa9260 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1a5d9aa97e8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1a5d9aa96b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aa9bd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aa98f8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1a5d9aa9978 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aa99f0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1a5d9aa9c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aa1f10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1a5d9aa9dd8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1a5d9aa1e10 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1a5d9aa2208 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aa1ff0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1a5d9aa2070 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aa20e8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9aa2698 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1a5d9aa23b0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1a5d9aa2428 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aa24a8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1a5d9aa2750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aa2d20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aa2990 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1a5d9aa2a08 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aa2a88 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aa2b00 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1a5d9aa4e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aa51a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1a5d9aa4f88 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1a5d9aa5000 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9aa5080 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1a5d9aa5538 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aa5288 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1a5d9aa5300 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aa5380 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aa53f8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9aa5798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1a5d9aa5838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aa5af0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1a5d9aa5980 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1a5d9aa9e90 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1a5d9aa5bc8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1a5d9aa5c40 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1a5d9aaa110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1a5d9aaa030 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1a5d9aaa1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aaa478 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1a5d9aaa300 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1a5d9aaa378 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1a5d9aaa890 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1a5d9aaa930 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1a5d9aaa998 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1a5d9aaaa00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1a5d9aaaa80 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1a5d9aaaae8 prev 0x1a5d9aaa890 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1a5d9aaa550 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9aaa5d0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aaa648 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1a5d9aaabe8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1a5d9aa2e20 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1a5d9aa2ec0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1a5d9aa2f28 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1a5d9aa2f90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1a5d9aa3010 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1a5d9aa3078 prev 0x1a5d9aa2e20 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1a5d9aaac30 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9aaacb0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aaad28 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1a5d9aa3178 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1a5d9aa33d8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1a5d9aa31c0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9aa3240 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aa32b8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aa36d0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1a5d9aa34b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9aa3538 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aa35b0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aa3a18 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1a5d9aa3ab8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1a5d9aa3b20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1a5d9aa3b98 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1a5d9aa3c00 prev 0x1a5d9aa3a18 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1a5d9aa37b8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aa3830 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1a5d9aa3cf8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1a5d9aaafd8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1a5d9aab078 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1a5d9aab0e0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1a5d9aab158 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1a5d9aab1c0 prev 0x1a5d9aaafd8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1a5d9aa3d48 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aaaea0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1a5d9aab2b8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1a5d9aab480 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1a5d9aab308 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aab380 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aab6d8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1a5d9aab560 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aab5d8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aabc38 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1a5d9aabcd8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1a5d9aabd40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1a5d9aabda8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1a5d9aabe10 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1a5d9aa3e30 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1a5d9aa3e98 prev 0x1a5d9aabc38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1a5d9aab878 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9aab8f0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aab970 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aab9e8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1a5d9aa4088 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1a5d9aa3f58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aa44f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1a5d9aa40d8 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9aa4150 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aa41c8 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aa4248 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aa42c0 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aa4938 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1a5d9aa45f0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9aa4668 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aa46e0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aa4760 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aa47d8 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aa4d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1a5d9aa4af0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1a5d9aa4b68 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aa4be8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1a5d9aa4dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ab2380 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1a5d9ab20d0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1a5d9ab2148 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab21c8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab2240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1a5d9ab2440 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ab2838 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1a5d9ab2588 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9ab2600 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab2680 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab26f8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab2bf8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1a5d9ab2928 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1a5d9ab29a8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab2a20 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aabf50 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1a5d9aabff0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1a5d9aac058 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1a5d9aac0d0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1a5d9aac138 prev 0x1a5d9aabf50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1a5d9ab2da0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1a5d9ab2e20 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1a5d9aac318 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1a5d9aac1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aac740 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1a5d9aac7e0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1a5d9aac848 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1a5d9aac8b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1a5d9aac930 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1a5d9aac998 prev 0x1a5d9aac740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1a5d9aac428 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1a5d9aac4a8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aac520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1a5d9aacb80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1a5d9aaca50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aaeee0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1a5d9aaef80 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1a5d9aaefe8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1a5d9aaf050 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1a5d9aaf0d0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1a5d9aaf138 prev 0x1a5d9aaeee0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1a5d9aacbd0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1a5d9aacc50 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aaccc8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1a5d9aaf238 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1a5d9aaf400 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1a5d9aaf288 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aaf300 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aaf6f8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1a5d9aaf4e0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9aaf558 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9aaf5d8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1a5d9aafa90 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1a5d9aaf7e0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9aaf858 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aaf8d8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aaf950 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aafcf8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1a5d9aafb78 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1a5d9aafbf8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1a5d9ab2f20 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1a5d9aafdd8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1a5d9ab3210 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1a5d9ab2ff8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1a5d9ab3070 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9ab30f0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1a5d9ab3508 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1a5d9ab32f0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ab3370 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab33e8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab3768 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1a5d9ab35f0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab3668 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab3af8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1a5d9ab3848 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1a5d9ab38c0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab3940 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab39b8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab3cc8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1a5d9ab3be8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1a5d9ab3f30 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1a5d9ab3da0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab3e18 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab40f0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1a5d9ab4010 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1a5d9ab4280 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1a5d9ab44c8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ab4350 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab43c8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ab4720 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ab45a8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab4620 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ab4978 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ab4800 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab4878 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ab4d28 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ab4a58 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab4ad0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ab4b48 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aacfe0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ab4e10 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab4e88 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9aacec0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aad2d8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9aad0c8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aad140 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9aad1b8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aad5d0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aad3b8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9aad438 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aad4b0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9aad8c8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aad6b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9aad730 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aad7a8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9aadbc0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aad9a8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9aada28 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aadaa0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ab50a0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9aadca0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9aadd20 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aadd98 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9aade10 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab5438 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ab5188 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ab5208 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab5280 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ab52f8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab57d0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ab5520 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ab55a0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab5618 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ab5690 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab5c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ab5980 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9ab5a00 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab5a78 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1a5d9ab5d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aae1e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ab5e68 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9aaded0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aadf50 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aadfc8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9aae580 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aae2d0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9aae348 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aae3c8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9aae440 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9aaead0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9aae770 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9aae7f0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aae868 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1a5d9aae8e0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1a5d9aaeb90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ab6188 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9aaecd8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9aaed50 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aaedd0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9aaee48 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ab5f50 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab65c8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ab6280 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9ab62f8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab6378 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab63f0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ab6468 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab6838 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ab66c0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab6738 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ab6a90 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ab6918 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab6990 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ab6d80 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ab6b70 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab6be8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ab6c60 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab7090 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ab6e68 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab6ee0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ab6f70 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab74e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ab7238 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9ab72b0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab7330 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab73a8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1a5d9ab75a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ab79a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ab76f0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9ab7768 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab77e8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab7860 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ab7f70 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ab7a90 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9ab7b08 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab7b80 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab7c00 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1a5d9ab7c78 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ab84b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ab8168 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9ab81e0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab8260 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab82d8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1a5d9ab8350 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1a5d9ab8578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ab89f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ab86c8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9ab8740 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab87c0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1a5d9ab8838 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ab88b0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab0f60 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ab8af0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1a5d9ab8b68 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab8be0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab8c60 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1a5d9ab8cd8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ab8d50 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab1320 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1a5d9ab1058 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ab10d0 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ab1150 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1a5d9ab1590 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1a5d9ab1420 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1a5d9ab17a8 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1a5d9ab1a88 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1a5d9ab1870 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1a5d9ab18e8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1a5d9ab1cd0 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1a5d9ab1b60 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1a5d9abafa0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1a5d9ab1da0 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1a5d9abb128 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1a5d9abb360 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1a5d9abb1f0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1a5d9abb268 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1a5d9abb510 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1a5d9abb438 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1a5d9abb7b8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1a5d9abb5e0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1a5d9abb658 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1a5d9abbb60 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1a5d9abb890 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1a5d9abb910 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1a5d9abb988 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1a5d9abbe60 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1a5d9abbc40 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9abbcb8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1a5d9abe188 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1a5d9abbf38 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1a5d9abdfe0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1a5d9abe490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1a5d9abe320 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1a5d9abe538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9abe7f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1a5d9abe678 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1a5d9abeb00 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9abe8c8 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1a5d9abe940 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9abed50 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9abebd8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1a5d9abec50 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9abefe0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1a5d9abee28 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9abf190 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1a5d9abf0b0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9abf340 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1a5d9abf260 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9abf6d8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9abf410 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9abf488 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9abf500 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9abf9c8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9abf7b8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9abf830 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9abf8a8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9abfcb8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9abfaa8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9abfb20 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9abfb98 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9abfff0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9abfd98 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9abfe10 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9abfe88 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac02f0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9ac00d0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac0148 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac0540 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9ac03c8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac0440 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac0790 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9ac0618 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac0690 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac09e0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9ac0868 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac08e0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac0d98 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9ac0ab8 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ac0b30 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9ac0ba8 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9abd1d0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9ac0e78 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ac0ef0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ac0f68 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9abcfc0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9abd588 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9abd2b8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9abd330 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9abd3a8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9abd878 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9abd668 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9abd6e0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9abd758 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9abdb68 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9abd958 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9abd9d0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9abda48 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9abdef0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9abdc48 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9abdcc0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9abdd38 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9abddb0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab9330 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9ab8fa8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ab9020 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab9098 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9ab9110 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9ab9838 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9ab9418 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ab9490 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab9508 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab9580 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ab95f8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ab9bf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9ab99e8 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ab9a60 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ab9ad8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1a5d9ab9cb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aba1c0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9ab9eb0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ab9f90 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aba008 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9aba080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1a5d9aba280 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9aba538 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9aba3c0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1a5d9aba438 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9aba6f0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1a5d9aba610 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9aba9d0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9aba7c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9aba838 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9aba8b0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9abac28 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9abaab0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9abab28 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac8ea0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9abad00 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9abad78 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9abadf0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9ac9228 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9ac8f80 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ac8ff8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ac9070 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac90e8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac93f0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1a5d9ac9310 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9ac9638 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9ac94c0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac9538 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac9940 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ac9710 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac9788 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ac9b90 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ac9a18 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac9a90 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ac9de0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ac9c68 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac9ce0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ac4148 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ac3e78 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ac3ef0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ac3f68 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac4438 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ac4228 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ac42a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ac4318 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac4728 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ac4518 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ac4590 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ac4608 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac4ae8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ac4808 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ac4880 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac48f8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ac2e40 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ac4bc8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ac4c40 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac4cb8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ac3130 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ac2f20 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ac2f98 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac3010 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ac3580 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ac3210 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ac3288 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ac3300 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ac3378 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac3910 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ac3668 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ac36e0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ac3758 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ac37d0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac3ca0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ac39f8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ac3a70 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ac3ae8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ac3b60 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9aca1c0 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ac3d88 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ac9eb0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ac9f28 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac9fa0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9aca550 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aca2a8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9aca320 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aca398 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9aca410 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9aca8e0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9aca638 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9aca6b0 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9aca728 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9aca7a0 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9acade8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9aca9c8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9acaa40 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9acaab8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9acab30 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9acaba8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9acc238 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9acbef8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9acbf70 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9acbfe8 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9acc060 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9acc0d8 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9acc668 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9acc328 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9acc3a0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9acc418 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9acc490 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9acc508 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9acc8d0 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9acc758 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9acc7d0 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9accb20 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9acc9a8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9acca20 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9acce08 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9accbf8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9accc70 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9accce8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac51f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ac4f50 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ac4fc8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ac5040 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ac50b8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1a5d9ac52b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ac5828 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ac5400 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ac5478 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ac54f0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ac5568 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac55e0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ac5d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ac5a20 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ac5a98 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ac5b10 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ac5b88 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1a5d9ac5c00 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1a5d9ac5e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ac6480 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ac5fb8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ac6030 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ac60a8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ac6120 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ac6198 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ac6210 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac6980 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9ac6748 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ac67c0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1a5d9ac6a30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1a5d9ac6b48 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1a5d9acb128 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9ac6e00 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1a5d9acaed0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9acaf48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1a5d9acb1e0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1a5d9acb2f8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1a5d9acb898 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9acb5b8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1a5d9acb630 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9acb6a8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1a5d9acb950 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1a5d9acba70 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1a5d9acd0f0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9acbd30 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1a5d9acbda8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9acbe20 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1a5d9accee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1a5d9acd1b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1a5d9acd2d0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1a5d9acd5d8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1a5d9acd3f8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1a5d9acd470 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9acd4e8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1a5d9acf1a0 <line:37:1, line:44:1>
|   |-DeclStmt 0x1a5d9acd720 <line:38:5, col:21>
|   | `-VarDecl 0x1a5d9acd6b8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1a5d9acd7b8 <line:39:5, col:13>
|   | `-VarDecl 0x1a5d9acd750 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1a5d9acdb10 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1a5d9acdaf8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1a5d9acda10 <col:34> '<builtin fn type>' Function 0x1a5d9acd8a8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1a5d9acda48 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1a5d9acd6b8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1a5d9acda80 <col:29> 'const wchar_t *' lvalue ParmVar 0x1a5d9acd4e8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1a5d9acddd0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1a5d9acdb40 <col:5> 'int' lvalue Var 0x1a5d9acd750 '_Ret' 'int'
|   | `-CallExpr 0x1a5d9acdd10 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1a5d9acdcf8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1a5d9acdb78 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1a5d9acade8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1a5d9acdd58 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1a5d9acdb98 <col:27> 'wchar_t *' lvalue ParmVar 0x1a5d9acd3f8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1a5d9acdd70 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1a5d9acdbb8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1a5d9acd470 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1a5d9acdd88 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1a5d9acdbd8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1a5d9acd4e8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1a5d9acdda0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1a5d9acdc60 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1a5d9acdc38 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1a5d9acdbf8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1a5d9acddb8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1a5d9acdc80 <col:59> 'va_list':'char *' lvalue Var 0x1a5d9acd6b8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1a5d9acf130 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1a5d9acf118 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1a5d9acf068 <col:34> '<builtin fn type>' Function 0x1a5d9acef00 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1a5d9acf0a0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1a5d9acd6b8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1a5d9acf190 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1a5d9acf178 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1a5d9acf158 <col:12> 'int' lvalue Var 0x1a5d9acd750 '_Ret' 'int'
|-FunctionDecl 0x1a5d9acd8a8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1a5d9acd948 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1a5d9acd9b8 <col:34> Implicit
|-FunctionDecl 0x1a5d9acef00 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1a5d9acefa0 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1a5d9acf010 <col:34> Implicit
|-FunctionDecl 0x1a5d9acf498 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1a5d9acf1f0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1a5d9acf268 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9acf2e0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9acf358 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1a5d9acf780 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1a5d9acf770 <line:51:5, col:62>
|     `-CallExpr 0x1a5d9acf6b0 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1a5d9acf698 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1a5d9acf570 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1a5d9acade8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1a5d9acf6f8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1a5d9acf590 <col:27> 'wchar_t *' lvalue ParmVar 0x1a5d9acf1f0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1a5d9acf710 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1a5d9acf5b0 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1a5d9acf268 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1a5d9acf728 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1a5d9acf5d0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1a5d9acf2e0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1a5d9acf740 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1a5d9acf658 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1a5d9acf630 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1a5d9acf5f0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1a5d9acf758 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1a5d9acf678 <col:59> 'va_list':'char *' lvalue ParmVar 0x1a5d9acf358 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1a5d9acfa20 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1a5d9acf7a8 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1a5d9acf820 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9acf898 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9acf910 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1a5d9ac7f38 <line:61:1, line:68:1>
|   |-DeclStmt 0x1a5d9acfb70 <line:62:5, col:21>
|   | `-VarDecl 0x1a5d9acfb08 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1a5d9acfc08 <line:63:5, col:13>
|   | `-VarDecl 0x1a5d9acfba0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1a5d9acfcb0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1a5d9acfc98 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1a5d9acfc20 <col:34> '<builtin fn type>' Function 0x1a5d9acd8a8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1a5d9acfc40 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1a5d9acfb08 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1a5d9acfc78 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1a5d9acf910 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1a5d9acfeb0 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1a5d9acfce0 <col:5> 'int' lvalue Var 0x1a5d9acfba0 '_Ret' 'int'
|   | `-CallExpr 0x1a5d9acfdf0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1a5d9acfdd8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1a5d9acfd18 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1a5d9acade8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1a5d9acfe38 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1a5d9acfd38 <col:27> 'wchar_t *' lvalue ParmVar 0x1a5d9acf7a8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1a5d9acfe50 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1a5d9acfd58 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1a5d9acf820 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1a5d9acfe68 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1a5d9acfd78 <col:44> 'const wchar_t *' lvalue ParmVar 0x1a5d9acf898 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1a5d9acfe80 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1a5d9acfd98 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1a5d9acf910 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1a5d9acfe98 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1a5d9acfdb8 <col:64> 'va_list':'char *' lvalue Var 0x1a5d9acfb08 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1a5d9ac7ec8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1a5d9ac7eb0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1a5d9acfed0 <col:34> '<builtin fn type>' Function 0x1a5d9acef00 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1a5d9ac7e90 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1a5d9acfb08 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1a5d9ac7f28 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1a5d9ac7f10 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1a5d9ac7ef0 <col:12> 'int' lvalue Var 0x1a5d9acfba0 '_Ret' 'int'
|-FunctionDecl 0x1a5d9ac82c8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1a5d9ac7f88 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1a5d9ac8000 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ac8078 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ac80f0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1a5d9ac8168 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1a5d9ac8550 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1a5d9ac8540 <line:75:5, col:67>
|     `-CallExpr 0x1a5d9ac8480 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1a5d9ac8468 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1a5d9ac83a8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1a5d9acade8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1a5d9ac84c8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1a5d9ac83c8 <col:27> 'wchar_t *' lvalue ParmVar 0x1a5d9ac7f88 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1a5d9ac84e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1a5d9ac83e8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1a5d9ac8000 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1a5d9ac84f8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1a5d9ac8408 <col:44> 'const wchar_t *' lvalue ParmVar 0x1a5d9ac8078 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1a5d9ac8510 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1a5d9ac8428 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1a5d9ac80f0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1a5d9ac8528 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1a5d9ac8448 <col:64> 'va_list':'char *' lvalue ParmVar 0x1a5d9ac8168 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac8798 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1a5d9ac8578 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac85f0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1a5d9ac89e8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1a5d9ac8870 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ac88e8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ac8cd0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1a5d9ac8ac0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ac8b38 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1a5d9ac8bb0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1a5d9ad30b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9ad2f40 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ad2fb8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1a5d9ad3168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ad3578 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ad3368 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ad33e0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad3458 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1a5d9ad3630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ad38e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9ad3770 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1a5d9ad37e8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9ad3bd0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ad39c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ad3a38 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ad3ab0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ad4fd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9ad3d70 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad3de8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1a5d9ad5080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ad5558 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ad5280 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad52f8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad5370 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1a5d9ad5610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ad58c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9ad5750 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ad57c8 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9ad5bb0 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ad59a0 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad5a18 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ad5a90 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ad6058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9ad5d50 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad5dc8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ad5e40 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1a5d9ad6110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ad6690 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ad6310 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad6388 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ad6400 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad6478 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1a5d9ad6750 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ad6aa0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9ad6890 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad6908 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9ad6980 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9ad6e28 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ad6b80 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad6bf8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ad6c70 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ad6ce8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ad7130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1a5d9ad7050 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1a5d9ad71d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ad7550 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ad73d8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad7450 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1a5d9ad7600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ad7820 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1a5d9ad7740 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1a5d9ad7a68 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1a5d9ad78f0 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ad7968 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1a5d9ad7d68 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1a5d9ad7b48 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1a5d9ad7bc0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1a5d9ad00b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1a5d9ad7f00 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9acff10 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1a5d9ad0168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ad0570 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1a5d9ad02b0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1a5d9ad0328 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ad03a0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1a5d9ad09d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1a5d9ad0710 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad0788 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad0800 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1a5d9ad0a88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ad0f68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1a5d9ad0bd0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1a5d9ad0c48 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1a5d9ad0cc0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ad0d38 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1a5d9ad11c0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1a5d9ad1050 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1a5d9ad1400 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1a5d9ad1290 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1a5d9ad1308 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1a5d9ad15b8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1a5d9ad14d8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1a5d9ad18a8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1a5d9ad1688 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1a5d9ad1700 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1a5d9ad1b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1a5d9ad1a40 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1a5d9ad1bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1a5d9ad1dd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1a5d9ad1d00 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1a5d9ad9098 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1a5d9ad1ea8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1a5d9ad8fa0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1a5d9ad92e0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1a5d9ad9170 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1a5d9ad91e8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1a5d9ad9490 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1a5d9ad93b8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1a5d9ad9638 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1a5d9ad9560 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1a5d9ad97e8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9ad9708 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1a5d9ad9998 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1a5d9ad98b8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1a5d9ad9d10 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1a5d9ad9a70 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1a5d9ad9ae8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ad9b60 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9ad9bd8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1a5d9ad2100 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1a5d9ad9e00 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1a5d9ad9e78 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ad9ef0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ad1f30 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9ad1fa8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1a5d9ad2410 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1a5d9ad21f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ad2270 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1a5d9ad22f0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1a5d9ad25d0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1a5d9ad24f0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1a5d9ad28c0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1a5d9ad26a0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1a5d9ad2720 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1a5d9ad27a0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1a5d9ad2a80 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1a5d9ad29a0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1a5d9ad2df8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1a5d9ad2b58 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1a5d9ad2bd0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1a5d9ad2c48 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1a5d9ad2cc0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1a5d9adf178 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1a5d9adf000 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1a5d9adf078 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1a5d9adf4b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1a5d9adf330 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1a5d9adf3b0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1a5d9adf560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1a5d9adf818 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1a5d9adf8b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1a5d9adfbf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1a5d9adfa80 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1a5d9adfb00 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1a5d9adfca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1a5d9ae0010 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1a5d9ae00b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1a5d9ae0350 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1a5d9ae0270 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1a5d9ae03f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1a5d9ae0678 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1a5d9ae0718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1a5d9ae09c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1a5d9ae08e0 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1a5d9ae0a68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1a5d9ae0d48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1a5d9ae0c68 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1a5d9ae0df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1a5d9adb138 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1a5d9adafc0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1a5d9adb038 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1a5d9adb1e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1a5d9adb4a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1a5d9adb548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1a5d9adb780 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1a5d9adb990 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1a5d9adb850 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1a5d9adbbe0 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1a5d9adba68 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x1a5d9adbca0 <.//openssl//file_jk/after\crypto\bio/bio_lcl.h:64:1, line:71:1> line:64:8 struct bio_addrinfo_st definition
| |-FieldDecl 0x1a5d9adbd78 <line:65:5, col:9> col:9 bai_family 'int'
| |-FieldDecl 0x1a5d9adbde8 <line:66:5, col:9> col:9 bai_socktype 'int'
| |-FieldDecl 0x1a5d9adbe58 <line:67:5, col:9> col:9 bai_protocol 'int'
| |-FieldDecl 0x1a5d9adbec0 <line:68:5, col:12> col:12 bai_addrlen 'size_t':'unsigned long long'
| |-RecordDecl 0x1a5d9adbf18 parent 0x1a5d7eb6098 <line:69:5, col:12> col:12 struct sockaddr
| |-FieldDecl 0x1a5d9ae5f70 <col:5, col:22> col:22 bai_addr 'struct sockaddr *'
| `-FieldDecl 0x1a5d9ae6080 <line:70:5, col:29> col:29 bai_next 'struct bio_addrinfo_st *'
|-RecordDecl 0x1a5d9ae60d8 <line:74:1, line:83:1> line:74:7 invalid union bio_addr_st definition
| |-FieldDecl 0x1a5d9ae61e0 <line:75:5, col:21> col:21 invalid sa 'struct sockaddr':'struct sockaddr'
| |-RecordDecl 0x1a5d9ae6238 parent 0x1a5d7eb6098 <line:79:5, col:12> col:12 struct sockaddr_in
| `-FieldDecl 0x1a5d9ae6358 <col:5, col:24> col:24 invalid s_in 'struct sockaddr_in':'struct sockaddr_in'
|-RecordDecl 0x1a5d9ae63b0 <line:91:9, line:112:1> line:91:16 struct bio_f_buffer_ctx_struct definition
| |-FieldDecl 0x1a5d9ae6488 <line:104:5, col:9> col:9 ibuf_size 'int'
| |-FieldDecl 0x1a5d9ae64f8 <line:105:5, col:9> col:9 obuf_size 'int'
| |-FieldDecl 0x1a5d9ae6568 <line:106:5, col:11> col:11 ibuf 'char *'
| |-FieldDecl 0x1a5d9ae65d8 <line:107:5, col:9> col:9 ibuf_len 'int'
| |-FieldDecl 0x1a5d9ae6648 <line:108:5, col:9> col:9 ibuf_off 'int'
| |-FieldDecl 0x1a5d9ae66b8 <line:109:5, col:11> col:11 obuf 'char *'
| |-FieldDecl 0x1a5d9ae6728 <line:110:5, col:9> col:9 obuf_len 'int'
| `-FieldDecl 0x1a5d9ae6798 <line:111:5, col:9> col:9 obuf_off 'int'
|-TypedefDecl 0x1a5d9ae6848 <line:91:1, line:112:3> col:3 BIO_F_BUFFER_CTX 'struct bio_f_buffer_ctx_struct':'struct bio_f_buffer_ctx_struct'
| `-ElaboratedType 0x1a5d9ae67f0 'struct bio_f_buffer_ctx_struct' sugar
|   `-RecordType 0x1a5d9ae6450 'struct bio_f_buffer_ctx_struct'
|     `-Record 0x1a5d9ae63b0 'bio_f_buffer_ctx_struct'
|-RecordDecl 0x1a5d9ae68b8 <line:114:1, line:132:1> line:114:8 invalid struct bio_st definition
| |-FieldDecl 0x1a5d9ae6988 <line:115:5, col:23> col:23 invalid method 'const int *'
| |-FieldDecl 0x1a5d9ae6f50 <line:117:5, col:74> col:12 callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
| |-FieldDecl 0x1a5d9ae6fc0 <line:118:5, col:11> col:11 cb_arg 'char *'
| |-FieldDecl 0x1a5d9ae7030 <line:119:5, col:9> col:9 init 'int'
| |-FieldDecl 0x1a5d9ae70a0 <line:120:5, col:9> col:9 shutdown 'int'
| |-FieldDecl 0x1a5d9ae7110 <line:121:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1a5d9ae7180 <line:122:5, col:9> col:9 retry_reason 'int'
| |-FieldDecl 0x1a5d9ae71f0 <line:123:5, col:9> col:9 num 'int'
| |-FieldDecl 0x1a5d9ae7260 <line:124:5, col:11> col:11 ptr 'void *'
| |-FieldDecl 0x1a5d9ae72e0 <line:125:5, col:20> col:20 next_bio 'struct bio_st *'
| |-FieldDecl 0x1a5d9ae7360 <line:126:5, col:20> col:20 prev_bio 'struct bio_st *'
| |-FieldDecl 0x1a5d9ae73d0 <line:127:5, col:9> col:9 references 'int'
| |-FieldDecl 0x1a5d9ae7440 <line:128:5, col:14> col:14 invalid num_read 'int'
| |-FieldDecl 0x1a5d9ae74b0 <line:129:5, col:14> col:14 invalid num_write 'int'
| |-FieldDecl 0x1a5d9ae7520 <line:130:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x1a5d9ae7590 <line:131:5, col:20> col:20 invalid lock 'int *'
|-VarDecl 0x1a5d9ae7600 <line:139:1, col:23> col:23 invalid bio_lookup_lock 'int *' extern
|-FunctionDecl 0x1a5d9ae7890 <line:141:1, col:58> col:5 invalid BIO_ADDR_make 'int (int *, const struct sockaddr *)'
| |-ParmVarDecl 0x1a5d9ae7680 <col:19, col:29> col:29 invalid ap 'int *'
| `-ParmVarDecl 0x1a5d9ae7770 <col:33, col:56> col:56 sa 'const struct sockaddr *'
|-FunctionDecl 0x1a5d9ae7a60 <line:142:1, col:60> col:24 invalid BIO_ADDR_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x1a5d9ae7958 <col:42, col:58> col:58 invalid ap 'const int *'
|-FunctionDecl 0x1a5d9ae7c60 <line:143:1, col:56> col:18 invalid BIO_ADDR_sockaddr_noconst 'struct sockaddr *(int *)'
| `-ParmVarDecl 0x1a5d9ae7b20 <col:44, col:54> col:54 invalid ap 'int *'
|-FunctionDecl 0x1a5d9ae7df0 <line:144:1, col:52> col:11 invalid BIO_ADDR_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x1a5d9ae7d20 <col:34, col:50> col:50 invalid ap 'const int *'
|-FunctionDecl 0x1a5d9ae9f78 <line:145:1, col:61> col:11 invalid BIO_ADDRINFO_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x1a5d9ae9ee0 <col:38, col:58> col:58 invalid bai 'const int *'
|-FunctionDecl 0x1a5d9aea0e0 <line:146:1, col:69> col:24 invalid BIO_ADDRINFO_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x1a5d9aea038 <col:46, col:66> col:66 invalid bai 'const int *'
|-VarDecl 0x1a5d9aea1a0 <line:149:1, col:23> col:23 invalid bio_type_lock 'int *' extern
|-FunctionDecl 0x1a5d9aea2a0 <line:151:1, col:31> col:6 bio_sock_cleanup_int 'void (void)'
|-FunctionDecl 0x1a5d9aea560 <.//openssl//file_jk/after\crypto\bio\bf_lbuf.c:16:1, col:61> col:12 invalid linebuffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1a5d9aea370 <col:29, col:34> col:34 invalid h 'int *'
| |-ParmVarDecl 0x1a5d9aea3f0 <col:37, col:49> col:49 buf 'const char *'
| `-ParmVarDecl 0x1a5d9aea470 <col:54, col:58> col:58 num 'int'
|-FunctionDecl 0x1a5d9aea820 <line:17:1, col:55> col:12 invalid linebuffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1a5d9aea630 <col:28, col:33> col:33 invalid h 'int *'
| |-ParmVarDecl 0x1a5d9aea6b0 <col:36, col:42> col:42 buf 'char *'
| `-ParmVarDecl 0x1a5d9aea730 <col:47, col:51> col:51 size 'int'
|-FunctionDecl 0x1a5d9aeaa50 <line:18:1, col:51> col:12 invalid linebuffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1a5d9aea8f0 <col:28, col:33> col:33 invalid h 'int *'
| `-ParmVarDecl 0x1a5d9aea970 <col:36, col:48> col:48 str 'const char *'
|-FunctionDecl 0x1a5d9aeacc0 <line:19:1, col:55> col:12 invalid linebuffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1a5d9aeab18 <col:28, col:33> col:33 invalid h 'int *'
| |-ParmVarDecl 0x1a5d9aeab98 <col:36, col:42> col:42 str 'char *'
| `-ParmVarDecl 0x1a5d9aeac18 <col:47, col:51> col:51 size 'int'
|-FunctionDecl 0x1a5d9af00a0 <line:20:1, col:67> col:13 invalid linebuffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1a5d9aead90 <col:29, col:34> col:34 invalid h 'int *'
| |-ParmVarDecl 0x1a5d9aeae10 <col:37, col:41> col:41 cmd 'int'
| |-ParmVarDecl 0x1a5d9aeff20 <col:46, col:51> col:51 arg1 'long'
| `-ParmVarDecl 0x1a5d9aeffa0 <col:57, col:63> col:63 arg2 'void *'
|-FunctionDecl 0x1a5d9af0210 <line:21:1, col:33> col:12 invalid linebuffer_new 'int (int *)' static
| `-ParmVarDecl 0x1a5d9af0178 <col:27, col:32> col:32 invalid h 'int *'
|-FunctionDecl 0x1a5d9af0368 <line:22:1, col:37> col:12 invalid linebuffer_free 'int (int *)' static
| `-ParmVarDecl 0x1a5d9af02d0 <col:28, col:33> col:33 invalid data 'int *'
|-FunctionDecl 0x1a5d9af0610 <line:23:1, col:70> col:13 invalid linebuffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1a5d9af0428 <col:38, col:43> col:43 invalid h 'int *'
| |-ParmVarDecl 0x1a5d9af04a8 <col:46, col:50> col:50 cmd 'int'
| `-ParmVarDecl 0x1a5d9af0528 <col:55, col:68> col:68 invalid fp 'int *'
|-VarDecl 0x1a5d9af06e0 <line:30:1, col:25> col:25 invalid methods_linebuffer 'const int' static
|-FunctionDecl 0x1a5d9af0880 <line:43:1, line:46:1> line:43:19 invalid BIO_f_linebuffer 'const int *(void)'
| `-CompoundStmt 0x1a5d9af0938 <line:44:1, line:46:1>
|-RecordDecl 0x1a5d9af0948 <line:48:9, line:52:1> line:48:16 struct bio_linebuffer_ctx_struct definition
| |-FieldDecl 0x1a5d9af0a18 <line:49:5, col:11> col:11 referenced obuf 'char *'
| |-FieldDecl 0x1a5d9af0a88 <line:50:5, col:9> col:9 referenced obuf_size 'int'
| `-FieldDecl 0x1a5d9af0af8 <line:51:5, col:9> col:9 referenced obuf_len 'int'
|-TypedefDecl 0x1a5d9af0ba8 <line:48:1, line:52:3> col:3 referenced BIO_LINEBUFFER_CTX 'struct bio_linebuffer_ctx_struct':'struct bio_linebuffer_ctx_struct'
| `-ElaboratedType 0x1a5d9af0b50 'struct bio_linebuffer_ctx_struct' sugar
|   `-RecordType 0x1a5d9af09e0 'struct bio_linebuffer_ctx_struct'
|     `-Record 0x1a5d9af0948 'bio_linebuffer_ctx_struct'
|-FunctionDecl 0x1a5d9af0cc8 <line:54:1, line:73:1> line:54:12 invalid linebuffer_new 'int (int *)' static
| |-ParmVarDecl 0x1a5d9af0c30 <col:27, col:32> col:32 invalid bi 'int *'
| `-CompoundStmt 0x1a5d9aec9f8 <line:55:1, line:73:1>
|   |-DeclStmt 0x1a5d9af0e80 <line:56:5, col:28>
|   | `-VarDecl 0x1a5d9af0e18 <col:5, col:25> col:25 used ctx 'BIO_LINEBUFFER_CTX *'
|   |-BinaryOperator 0x1a5d9aec0e0 <line:58:5, col:38> 'BIO_LINEBUFFER_CTX *' '='
|   | |-DeclRefExpr 0x1a5d9af0e98 <col:5> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af0e18 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | `-ImplicitCastExpr 0x1a5d9aec0c8 <col:11, col:38> 'BIO_LINEBUFFER_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x1a5d9aec0a0 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x1a5d9aec088 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1a5d9aebfa8 <col:11> 'int ()' Function 0x1a5d9aebee0 'OPENSSL_malloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x1a5d9aec038 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x1a5d9aec018 <col:32, col:37> 'BIO_LINEBUFFER_CTX':'struct bio_linebuffer_ctx_struct' lvalue
|   |         `-UnaryOperator 0x1a5d9aec000 <col:33, col:34> 'BIO_LINEBUFFER_CTX':'struct bio_linebuffer_ctx_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x1a5d9aebfe8 <col:34> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x1a5d9aebfc8 <col:34> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af0e18 'ctx' 'BIO_LINEBUFFER_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x1a5d9aec250 <line:59:5, line:60:18>
|   | |-BinaryOperator 0x1a5d9aec1d8 <line:59:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1a5d9aec1a8 <.//openssl//file_jk/after\crypto\bio\bf_lbuf.c:59:9> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1a5d9aec100 <col:9> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af0e18 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x1a5d9aec1c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_LINEBUFFER_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1a5d9aec188 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1a5d9aec160 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1a5d9aec120 <col:26> 'int' 0
|   | `-ReturnStmt 0x1a5d9aec240 <.//openssl//file_jk/after\crypto\bio\bf_lbuf.c:60:9, col:18>
|   |   `-ParenExpr 0x1a5d9aec220 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1a5d9aec1f8 <col:17> 'int' 0
|   |-BinaryOperator 0x1a5d9aec3b8 <line:61:5, col:55> 'char *' '='
|   | |-MemberExpr 0x1a5d9aec2a0 <col:5, col:10> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   | | `-ImplicitCastExpr 0x1a5d9aec288 <col:5> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1a5d9aec268 <col:5> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af0e18 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | `-ImplicitCastExpr 0x1a5d9aec3a0 <col:17, col:55> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1a5d9aec378 <col:17, col:55> 'int'
|   |     |-ImplicitCastExpr 0x1a5d9aec360 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1a5d9aec2d0 <col:17> 'int ()' Function 0x1a5d9aebee0 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1a5d9aec340 <line:26:33, col:38> 'int' '*'
|   |       |-IntegerLiteral 0x1a5d9aec2f0 <col:33> 'int' 1024
|   |       `-IntegerLiteral 0x1a5d9aec318 <col:38> 'int' 10
|   |-IfStmt 0x1a5d9aec718 <line:62:5, line:65:5>
|   | |-BinaryOperator 0x1a5d9aec4f8 <line:62:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1a5d9aec4c8 <.//openssl//file_jk/after\crypto\bio\bf_lbuf.c:62:9, col:14> 'char *' <LValueToRValue>
|   | | | `-MemberExpr 0x1a5d9aec410 <col:9, col:14> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   | | |   `-ImplicitCastExpr 0x1a5d9aec3f8 <col:9> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1a5d9aec3d8 <col:9> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af0e18 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | `-ImplicitCastExpr 0x1a5d9aec4e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1a5d9aec4a8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1a5d9aec480 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1a5d9aec440 <col:26> 'int' 0
|   | `-CompoundStmt 0x1a5d9aec6f8 <.//openssl//file_jk/after\crypto\bio\bf_lbuf.c:62:28, line:65:5>
|   |   |-CallExpr 0x1a5d9aec660 <line:63:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1a5d9aec648 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1a5d9aec608 <col:9> 'int ()' Function 0x1a5d9aec540 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1a5d9aec688 <col:22> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1a5d9aec628 <col:22> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af0e18 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   `-ReturnStmt 0x1a5d9aec6e8 <line:64:9, col:18>
|   |     `-ParenExpr 0x1a5d9aec6c8 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x1a5d9aec6a0 <col:17> 'int' 0
|   |-BinaryOperator 0x1a5d9aec808 <line:66:5, line:26:38> 'int' '='
|   | |-MemberExpr 0x1a5d9aec768 <line:66:5, col:10> 'int' lvalue ->obuf_size 0x1a5d9af0a88
|   | | `-ImplicitCastExpr 0x1a5d9aec750 <col:5> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1a5d9aec730 <col:5> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af0e18 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | `-BinaryOperator 0x1a5d9aec7e8 <line:26:33, col:38> 'int' '*'
|   |   |-IntegerLiteral 0x1a5d9aec798 <col:33> 'int' 1024
|   |   `-IntegerLiteral 0x1a5d9aec7c0 <col:38> 'int' 10
|   |-BinaryOperator 0x1a5d9aec8b8 <line:67:5, col:21> 'int' '='
|   | |-MemberExpr 0x1a5d9aec860 <col:5, col:10> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | `-ImplicitCastExpr 0x1a5d9aec848 <col:5> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1a5d9aec828 <col:5> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af0e18 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | `-IntegerLiteral 0x1a5d9aec890 <col:21> 'int' 0
|   `-ReturnStmt 0x1a5d9aec9e8 <line:72:5, col:14>
|     `-ParenExpr 0x1a5d9aec9c8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1a5d9aec9a0 <col:13> 'int' 1
|-FunctionDecl 0x1a5d9aecaf8 <line:75:1, line:88:1> line:75:12 invalid linebuffer_free 'int (int *)' static
| |-ParmVarDecl 0x1a5d9aeca60 <col:28, col:33> col:33 invalid a 'int *'
| `-CompoundStmt 0x1a5d9aecfe0 <line:76:1, line:88:1>
|   |-DeclStmt 0x1a5d9aecc30 <line:77:5, col:26>
|   | `-VarDecl 0x1a5d9aecbc8 <col:5, col:25> col:25 used b 'BIO_LINEBUFFER_CTX *'
|   |-IfStmt 0x1a5d9aecd40 <line:79:5, line:80:18>
|   | |-OpaqueValueExpr 0x1a5d9aecd28 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1a5d9aecd18 <col:9, col:18>
|   |   `-ParenExpr 0x1a5d9aeccf8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1a5d9aeccd0 <col:17> 'int' 0
|   |-CallExpr 0x1a5d9aece30 <line:82:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x1a5d9aece18 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1a5d9aecd90 <col:5> 'int ()' Function 0x1a5d9aec540 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1a5d9aece58 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1a5d9aecde8 <col:18, col:21> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   |     `-ImplicitCastExpr 0x1a5d9aecdd0 <col:18> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1a5d9aecdb0 <col:18> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9aecbc8 'b' 'BIO_LINEBUFFER_CTX *'
|   `-ReturnStmt 0x1a5d9aecfd0 <line:87:5, col:14>
|     `-ParenExpr 0x1a5d9aecfb0 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1a5d9aecf88 <col:13> 'int' 1
|-FunctionDecl 0x1a5d9aed1d0 <line:90:1, line:102:1> line:90:12 invalid linebuffer_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1a5d9aed028 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x1a5d9aed0a8 <col:36, col:42> col:42 used out 'char *'
| |-ParmVarDecl 0x1a5d9aed128 <col:47, col:51> col:51 used outl 'int'
| `-CompoundStmt 0x1a5d9aeda18 <line:91:1, line:102:1>
|   |-DeclStmt 0x1a5d9aed348 <line:92:5, col:16>
|   | `-VarDecl 0x1a5d9aed2b8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1a5d9aed320 <col:15> 'int' 0
|   |-IfStmt 0x1a5d9aed4c8 <line:94:5, line:95:18>
|   | |-BinaryOperator 0x1a5d9aed450 <line:94:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1a5d9aed420 <.//openssl//file_jk/after\crypto\bio\bf_lbuf.c:94:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1a5d9aed360 <col:9> 'char *' lvalue ParmVar 0x1a5d9aed0a8 'out' 'char *'
|   | | `-ImplicitCastExpr 0x1a5d9aed438 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1a5d9aed400 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1a5d9aed3d8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1a5d9aed398 <col:26> 'int' 0
|   | `-ReturnStmt 0x1a5d9aed4b8 <.//openssl//file_jk/after\crypto\bio\bf_lbuf.c:95:9, col:18>
|   |   `-ParenExpr 0x1a5d9aed498 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1a5d9aed470 <col:17> 'int' 0
|   |-IfStmt 0x1a5d9aed5d8 <line:96:5, line:97:18>
|   | |-OpaqueValueExpr 0x1a5d9aed5c0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1a5d9aed5b0 <col:9, col:18>
|   |   `-ParenExpr 0x1a5d9aed590 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1a5d9aed568 <col:17> 'int' 0
|   `-ReturnStmt 0x1a5d9aeda08 <line:101:5, col:16>
|     `-ImplicitCastExpr 0x1a5d9aed9f0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1a5d9aed9d0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1a5d9aed9b0 <col:13> 'int' lvalue Var 0x1a5d9aed2b8 'ret' 'int'
|-FunctionDecl 0x1a5d9aedc08 <line:104:1, line:197:1> line:104:12 invalid linebuffer_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1a5d9aeda60 <col:29, col:34> col:34 invalid b 'int *'
| |-ParmVarDecl 0x1a5d9aedae0 <col:37, col:49> col:49 used in 'const char *'
| |-ParmVarDecl 0x1a5d9aedb60 <col:53, col:57> col:57 used inl 'int'
| `-CompoundStmt 0x1a5d9af4050 <line:105:1, line:197:1>
|   |-DeclStmt 0x1a5d9aedea0 <line:106:5, col:28>
|   | |-VarDecl 0x1a5d9aedcf0 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x1a5d9aedd70 <col:5, col:18> col:12 used num 'int' cinit
|   | | `-IntegerLiteral 0x1a5d9aeddd8 <col:18> 'int' 0
|   | `-VarDecl 0x1a5d9aede18 <col:5, col:21> col:21 used foundnl 'int'
|   |-DeclStmt 0x1a5d9af2fb8 <line:107:5, col:28>
|   | `-VarDecl 0x1a5d9af2f50 <col:5, col:25> col:25 used ctx 'BIO_LINEBUFFER_CTX *'
|   |-IfStmt 0x1a5d9af3230 <line:109:5, line:110:18>
|   | |-BinaryOperator 0x1a5d9af31b8 <line:109:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x1a5d9af30e0 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x1a5d9af30c0 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1a5d9af3090 <.//openssl//file_jk/after\crypto\bio\bf_lbuf.c:109:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1a5d9af2fd0 <col:10> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x1a5d9af30a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x1a5d9af3070 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x1a5d9af3048 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x1a5d9af3008 <col:26> 'int' 0
|   | | `-ParenExpr 0x1a5d9af3198 <.//openssl//file_jk/after\crypto\bio\bf_lbuf.c:109:25, col:34> 'int'
|   | |   `-BinaryOperator 0x1a5d9af3178 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x1a5d9af3160 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1a5d9af3100 <col:26> 'int' lvalue ParmVar 0x1a5d9aedb60 'inl' 'int'
|   | |     `-IntegerLiteral 0x1a5d9af3138 <col:33> 'int' 0
|   | `-ReturnStmt 0x1a5d9af3220 <line:110:9, col:18>
|   |   `-ParenExpr 0x1a5d9af3200 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1a5d9af31d8 <col:17> 'int' 0
|   |-IfStmt 0x1a5d9af3490 <line:112:5, line:113:18>
|   | |-OpaqueValueExpr 0x1a5d9af3478 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1a5d9af3468 <col:9, col:18>
|   |   `-ParenExpr 0x1a5d9af3448 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1a5d9af3420 <col:17> 'int' 0
|   |-DoStmt 0x1a5d9af1af0 <line:117:5, line:185:30>
|   | |-CompoundStmt 0x1a5d9af19d8 <line:117:8, line:184:5>
|   | | |-DeclStmt 0x1a5d9af3548 <line:118:9, col:22>
|   | | | `-VarDecl 0x1a5d9af34e0 <col:9, col:21> col:21 used p 'const char *'
|   | | |-DeclStmt 0x1a5d9af35d8 <line:119:9, col:15>
|   | | | `-VarDecl 0x1a5d9af3570 <col:9, col:14> col:14 used c 'char'
|   | | |-ForStmt 0x1a5d9af3988 <line:121:9, col:71>
|   | | | |-BinaryOperator 0x1a5d9af3708 <col:14, col:26> 'char' ','
|   | | | | |-BinaryOperator 0x1a5d9af3660 <col:14, col:18> 'const char *' '='
|   | | | | | |-DeclRefExpr 0x1a5d9af35f0 <col:14> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | | | | `-ImplicitCastExpr 0x1a5d9af3648 <col:18> 'const char *' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x1a5d9af3628 <col:18> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | | | `-BinaryOperator 0x1a5d9af36e8 <col:22, col:26> 'char' '='
|   | | | |   |-DeclRefExpr 0x1a5d9af3680 <col:22> 'char' lvalue Var 0x1a5d9af3570 'c' 'char'
|   | | | |   `-ImplicitCastExpr 0x1a5d9af36d0 <col:26> 'char' <IntegralCast>
|   | | | |     `-CharacterLiteral 0x1a5d9af36b8 <col:26> 'int' 0
|   | | | |-<<<NULL>>>
|   | | | |-BinaryOperator 0x1a5d9af3928 <col:32, col:60> 'int' '&&'
|   | | | | |-BinaryOperator 0x1a5d9af37f0 <col:32, col:41> 'int' '<'
|   | | | | | |-ImplicitCastExpr 0x1a5d9af37d8 <col:32> 'const char *' <LValueToRValue>
|   | | | | | | `-DeclRefExpr 0x1a5d9af3728 <col:32> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | | | | `-BinaryOperator 0x1a5d9af37b8 <col:36, col:41> 'const char *' '+'
|   | | | | |   |-ImplicitCastExpr 0x1a5d9af3788 <col:36> 'const char *' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x1a5d9af3748 <col:36> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | | | |   `-ImplicitCastExpr 0x1a5d9af37a0 <col:41> 'int' <LValueToRValue>
|   | | | | |     `-DeclRefExpr 0x1a5d9af3768 <col:41> 'int' lvalue ParmVar 0x1a5d9aedb60 'inl' 'int'
|   | | | | `-BinaryOperator 0x1a5d9af3908 <col:48, col:60> 'int' '!='
|   | | | |   |-ImplicitCastExpr 0x1a5d9af38f0 <col:48, col:55> 'int' <IntegralCast>
|   | | | |   | `-ParenExpr 0x1a5d9af38b8 <col:48, col:55> 'char'
|   | | | |   |   `-BinaryOperator 0x1a5d9af3898 <col:49, col:54> 'char' '='
|   | | | |   |     |-DeclRefExpr 0x1a5d9af3810 <col:49> 'char' lvalue Var 0x1a5d9af3570 'c' 'char'
|   | | | |   |     `-ImplicitCastExpr 0x1a5d9af3880 <col:53, col:54> 'char' <LValueToRValue>
|   | | | |   |       `-UnaryOperator 0x1a5d9af3868 <col:53, col:54> 'const char' lvalue prefix '*' cannot overflow
|   | | | |   |         `-ImplicitCastExpr 0x1a5d9af3850 <col:54> 'const char *' <LValueToRValue>
|   | | | |   |           `-DeclRefExpr 0x1a5d9af3830 <col:54> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | | |   `-CharacterLiteral 0x1a5d9af38d8 <col:60> 'int' 10
|   | | | |-UnaryOperator 0x1a5d9af3968 <col:66, col:67> 'const char *' postfix '++'
|   | | | | `-DeclRefExpr 0x1a5d9af3948 <col:66> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | | `-NullStmt 0x1a5d9af3980 <col:71>
|   | | |-IfStmt 0x1a5d9af3b88 <line:122:9, line:126:23> has_else
|   | | | |-BinaryOperator 0x1a5d9af3a28 <line:122:13, col:18> 'int' '=='
|   | | | | |-ImplicitCastExpr 0x1a5d9af3a10 <col:13> 'int' <IntegralCast>
|   | | | | | `-ImplicitCastExpr 0x1a5d9af39f8 <col:13> 'char' <LValueToRValue>
|   | | | | |   `-DeclRefExpr 0x1a5d9af39c0 <col:13> 'char' lvalue Var 0x1a5d9af3570 'c' 'char'
|   | | | | `-CharacterLiteral 0x1a5d9af39e0 <col:18> 'int' 10
|   | | | |-CompoundStmt 0x1a5d9af3b00 <col:24, line:125:9>
|   | | | | |-UnaryOperator 0x1a5d9af3a68 <line:123:13, col:14> 'const char *' postfix '++'
|   | | | | | `-DeclRefExpr 0x1a5d9af3a48 <col:13> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | | | `-BinaryOperator 0x1a5d9af3ae0 <line:124:13, col:23> 'int' '='
|   | | | |   |-DeclRefExpr 0x1a5d9af3a80 <col:13> 'int' lvalue Var 0x1a5d9aede18 'foundnl' 'int'
|   | | | |   `-IntegerLiteral 0x1a5d9af3ab8 <col:23> 'int' 1
|   | | | `-BinaryOperator 0x1a5d9af3b68 <line:126:13, col:23> 'int' '='
|   | | |   |-DeclRefExpr 0x1a5d9af3b20 <col:13> 'int' lvalue Var 0x1a5d9aede18 'foundnl' 'int'
|   | | |   `-IntegerLiteral 0x1a5d9af3b40 <col:23> 'int' 0
|   | | |-WhileStmt 0x1a5d9af1040 <line:132:9, line:165:9>
|   | | | |-BinaryOperator 0x1a5d9af3ed8 <line:132:16, line:133:35> 'int' '&&'
|   | | | | |-ParenExpr 0x1a5d9af3df0 <line:132:16, col:67> 'int'
|   | | | | | `-BinaryOperator 0x1a5d9af3dd0 <col:17, col:59> 'int' '||'
|   | | | | |   |-ImplicitCastExpr 0x1a5d9af3db8 <col:17> 'int' <LValueToRValue>
|   | | | | |   | `-DeclRefExpr 0x1a5d9af3bb0 <col:17> 'int' lvalue Var 0x1a5d9aede18 'foundnl' 'int'
|   | | | | |   `-BinaryOperator 0x1a5d9af3d98 <col:28, col:59> 'int' '>'
|   | | | | |     |-BinaryOperator 0x1a5d9af3c40 <col:28, col:32> 'long long' '-'
|   | | | | |     | |-ImplicitCastExpr 0x1a5d9af3c10 <col:28> 'const char *' <LValueToRValue>
|   | | | | |     | | `-DeclRefExpr 0x1a5d9af3bd0 <col:28> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | | | |     | `-ImplicitCastExpr 0x1a5d9af3c28 <col:32> 'const char *' <LValueToRValue>
|   | | | | |     |   `-DeclRefExpr 0x1a5d9af3bf0 <col:32> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | | | |     `-ImplicitCastExpr 0x1a5d9af3d80 <col:37, col:59> 'long long' <IntegralCast>
|   | | | | |       `-BinaryOperator 0x1a5d9af3d60 <col:37, col:59> 'int' '-'
|   | | | | |         |-ImplicitCastExpr 0x1a5d9af3d30 <col:37, col:42> 'int' <LValueToRValue>
|   | | | | |         | `-MemberExpr 0x1a5d9af3c98 <col:37, col:42> 'int' lvalue ->obuf_size 0x1a5d9af0a88
|   | | | | |         |   `-ImplicitCastExpr 0x1a5d9af3c80 <col:37> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | | | |         |     `-DeclRefExpr 0x1a5d9af3c60 <col:37> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | | | |         `-ImplicitCastExpr 0x1a5d9af3d48 <col:54, col:59> 'int' <LValueToRValue>
|   | | | | |           `-MemberExpr 0x1a5d9af3d00 <col:54, col:59> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | | | |             `-ImplicitCastExpr 0x1a5d9af3ce8 <col:54> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | | | |               `-DeclRefExpr 0x1a5d9af3cc8 <col:54> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | | | `-BinaryOperator 0x1a5d9af3eb8 <line:133:19, col:35> 'int' '>'
|   | | | |   |-ImplicitCastExpr 0x1a5d9af3ea0 <col:19, col:24> 'int' <LValueToRValue>
|   | | | |   | `-MemberExpr 0x1a5d9af3e48 <col:19, col:24> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | | |   |   `-ImplicitCastExpr 0x1a5d9af3e30 <col:19> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | | |   |     `-DeclRefExpr 0x1a5d9af3e10 <col:19> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | | |   `-IntegerLiteral 0x1a5d9af3e78 <col:35> 'int' 0
|   | | | `-CompoundStmt 0x1a5d9af1000 <col:38, line:165:9>
|   | | |   |-DeclStmt 0x1a5d9af2028 <line:134:13, col:42>
|   | | |   | `-VarDecl 0x1a5d9af1f40 <col:13, col:34> col:17 used orig_olen 'int' cinit
|   | | |   |   `-ImplicitCastExpr 0x1a5d9af2010 <col:29, col:34> 'int' <LValueToRValue>
|   | | |   |     `-MemberExpr 0x1a5d9af1fe0 <col:29, col:34> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | |   |       `-ImplicitCastExpr 0x1a5d9af1fc8 <col:29> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |         `-DeclRefExpr 0x1a5d9af1fa8 <col:29> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |-BinaryOperator 0x1a5d9af2198 <line:136:13, col:39> 'int' '='
|   | | |   | |-DeclRefExpr 0x1a5d9af2040 <col:13> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   | `-BinaryOperator 0x1a5d9af2178 <col:17, col:39> 'int' '-'
|   | | |   |   |-ImplicitCastExpr 0x1a5d9af2148 <col:17, col:22> 'int' <LValueToRValue>
|   | | |   |   | `-MemberExpr 0x1a5d9af20b0 <col:17, col:22> 'int' lvalue ->obuf_size 0x1a5d9af0a88
|   | | |   |   |   `-ImplicitCastExpr 0x1a5d9af2098 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |   |     `-DeclRefExpr 0x1a5d9af2078 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |   `-ImplicitCastExpr 0x1a5d9af2160 <col:34, col:39> 'int' <LValueToRValue>
|   | | |   |     `-MemberExpr 0x1a5d9af2118 <col:34, col:39> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | |   |       `-ImplicitCastExpr 0x1a5d9af2100 <col:34> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |         `-DeclRefExpr 0x1a5d9af20e0 <col:34> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |-IfStmt 0x1a5d9aee228 <line:137:13, line:151:13>
|   | | |   | |-BinaryOperator 0x1a5d9af2288 <line:137:17, col:26> 'int' '>'
|   | | |   | | |-BinaryOperator 0x1a5d9af2228 <col:17, col:21> 'long long' '-'
|   | | |   | | | |-ImplicitCastExpr 0x1a5d9af21f8 <col:17> 'const char *' <LValueToRValue>
|   | | |   | | | | `-DeclRefExpr 0x1a5d9af21b8 <col:17> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | |   | | | `-ImplicitCastExpr 0x1a5d9af2210 <col:21> 'const char *' <LValueToRValue>
|   | | |   | | |   `-DeclRefExpr 0x1a5d9af21d8 <col:21> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | |   | | `-ImplicitCastExpr 0x1a5d9af2270 <col:26> 'long long' <IntegralCast>
|   | | |   | |   `-IntegerLiteral 0x1a5d9af2248 <col:26> 'int' 0
|   | | |   | `-CompoundStmt 0x1a5d9aee210 <col:29, line:151:13>
|   | | |   |   `-IfStmt 0x1a5d9aee1e8 <line:138:17, line:150:17> has_else
|   | | |   |     |-BinaryOperator 0x1a5d9af2388 <line:138:21, col:30> 'int' '>='
|   | | |   |     | |-ImplicitCastExpr 0x1a5d9af2370 <col:21> 'long long' <IntegralCast>
|   | | |   |     | | `-ImplicitCastExpr 0x1a5d9af2358 <col:21> 'int' <LValueToRValue>
|   | | |   |     | |   `-DeclRefExpr 0x1a5d9af22a8 <col:21> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   |     | `-BinaryOperator 0x1a5d9af2338 <col:26, col:30> 'long long' '-'
|   | | |   |     |   |-ImplicitCastExpr 0x1a5d9af2308 <col:26> 'const char *' <LValueToRValue>
|   | | |   |     |   | `-DeclRefExpr 0x1a5d9af22c8 <col:26> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | |   |     |   `-ImplicitCastExpr 0x1a5d9af2320 <col:30> 'const char *' <LValueToRValue>
|   | | |   |     |     `-DeclRefExpr 0x1a5d9af22e8 <col:30> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | |   |     |-CompoundStmt 0x1a5d9af2c90 <col:34, line:144:17>
|   | | |   |     | |-CallExpr 0x1a5d9af2880 <line:139:21, col:67> 'void *'
|   | | |   |     | | |-ImplicitCastExpr 0x1a5d9af2868 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | |   |     | | | `-DeclRefExpr 0x1a5d9af25e0 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x1a5d9af23f0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | | |   |     | | |-ImplicitCastExpr 0x1a5d9af28b8 <col:28, col:54> 'void *' <BitCast>
|   | | |   |     | | | `-UnaryOperator 0x1a5d9af2758 <col:28, col:54> 'char *' prefix '&' cannot overflow
|   | | |   |     | | |   `-ParenExpr 0x1a5d9af2738 <col:29, col:54> 'char' lvalue
|   | | |   |     | | |     `-ArraySubscriptExpr 0x1a5d9af2718 <col:30, col:53> 'char' lvalue
|   | | |   |     | | |       |-ImplicitCastExpr 0x1a5d9af26e8 <col:30, col:35> 'char *' <LValueToRValue>
|   | | |   |     | | |       | `-MemberExpr 0x1a5d9af2650 <col:30, col:35> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   | | |   |     | | |       |   `-ImplicitCastExpr 0x1a5d9af2638 <col:30> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |     | | |       |     `-DeclRefExpr 0x1a5d9af2618 <col:30> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |     | | |       `-ImplicitCastExpr 0x1a5d9af2700 <col:40, col:45> 'int' <LValueToRValue>
|   | | |   |     | | |         `-MemberExpr 0x1a5d9af26b8 <col:40, col:45> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | |   |     | | |           `-ImplicitCastExpr 0x1a5d9af26a0 <col:40> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |     | | |             `-DeclRefExpr 0x1a5d9af2680 <col:40> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |     | | |-ImplicitCastExpr 0x1a5d9af28e8 <col:57> 'const void *' <BitCast>
|   | | |   |     | | | `-ImplicitCastExpr 0x1a5d9af28d0 <col:57> 'const char *' <LValueToRValue>
|   | | |   |     | | |   `-DeclRefExpr 0x1a5d9af2770 <col:57> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | |   |     | | `-ImplicitCastExpr 0x1a5d9af2900 <col:61, col:65> 'unsigned long long' <IntegralCast>
|   | | |   |     | |   `-BinaryOperator 0x1a5d9af2800 <col:61, col:65> 'long long' '-'
|   | | |   |     | |     |-ImplicitCastExpr 0x1a5d9af27d0 <col:61> 'const char *' <LValueToRValue>
|   | | |   |     | |     | `-DeclRefExpr 0x1a5d9af2790 <col:61> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | |   |     | |     `-ImplicitCastExpr 0x1a5d9af27e8 <col:65> 'const char *' <LValueToRValue>
|   | | |   |     | |       `-DeclRefExpr 0x1a5d9af27b0 <col:65> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | |   |     | |-CompoundAssignOperator 0x1a5d9af2a10 <line:140:21, col:42> 'int' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   |     | | |-MemberExpr 0x1a5d9af2950 <col:21, col:26> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | |   |     | | | `-ImplicitCastExpr 0x1a5d9af2938 <col:21> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |     | | |   `-DeclRefExpr 0x1a5d9af2918 <col:21> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |     | | `-BinaryOperator 0x1a5d9af29f0 <col:38, col:42> 'long long' '-'
|   | | |   |     | |   |-ImplicitCastExpr 0x1a5d9af29c0 <col:38> 'const char *' <LValueToRValue>
|   | | |   |     | |   | `-DeclRefExpr 0x1a5d9af2980 <col:38> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | |   |     | |   `-ImplicitCastExpr 0x1a5d9af29d8 <col:42> 'const char *' <LValueToRValue>
|   | | |   |     | |     `-DeclRefExpr 0x1a5d9af29a0 <col:42> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | |   |     | |-CompoundAssignOperator 0x1a5d9af2af0 <line:141:21, col:32> 'int' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   |     | | |-DeclRefExpr 0x1a5d9af2a40 <col:21> 'int' lvalue ParmVar 0x1a5d9aedb60 'inl' 'int'
|   | | |   |     | | `-BinaryOperator 0x1a5d9af2ad0 <col:28, col:32> 'long long' '-'
|   | | |   |     | |   |-ImplicitCastExpr 0x1a5d9af2aa0 <col:28> 'const char *' <LValueToRValue>
|   | | |   |     | |   | `-DeclRefExpr 0x1a5d9af2a60 <col:28> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | |   |     | |   `-ImplicitCastExpr 0x1a5d9af2ab8 <col:32> 'const char *' <LValueToRValue>
|   | | |   |     | |     `-DeclRefExpr 0x1a5d9af2a80 <col:32> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | |   |     | |-CompoundAssignOperator 0x1a5d9af2be8 <line:142:21, col:32> 'int' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | | |   |     | | |-DeclRefExpr 0x1a5d9af2b20 <col:21> 'int' lvalue Var 0x1a5d9aedd70 'num' 'int'
|   | | |   |     | | `-BinaryOperator 0x1a5d9af2bc8 <col:28, col:32> 'long long' '-'
|   | | |   |     | |   |-ImplicitCastExpr 0x1a5d9af2b98 <col:28> 'const char *' <LValueToRValue>
|   | | |   |     | |   | `-DeclRefExpr 0x1a5d9af2b58 <col:28> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | |   |     | |   `-ImplicitCastExpr 0x1a5d9af2bb0 <col:32> 'const char *' <LValueToRValue>
|   | | |   |     | |     `-DeclRefExpr 0x1a5d9af2b78 <col:32> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | |   |     | `-BinaryOperator 0x1a5d9af2c70 <line:143:21, col:26> 'const char *' '='
|   | | |   |     |   |-DeclRefExpr 0x1a5d9af2c18 <col:21> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | |   |     |   `-ImplicitCastExpr 0x1a5d9af2c58 <col:26> 'const char *' <LValueToRValue>
|   | | |   |     |     `-DeclRefExpr 0x1a5d9af2c38 <col:26> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | | |   |     `-CompoundStmt 0x1a5d9aee1b0 <line:144:24, line:150:17>
|   | | |   |       |-CallExpr 0x1a5d9af2ec8 <line:145:21, col:62> 'void *'
|   | | |   |       | |-ImplicitCastExpr 0x1a5d9af2eb0 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | |   |       | | `-DeclRefExpr 0x1a5d9af2cc8 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x1a5d9af23f0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | | |   |       | |-ImplicitCastExpr 0x1a5d9af2f00 <col:28, col:54> 'void *' <BitCast>
|   | | |   |       | | `-UnaryOperator 0x1a5d9af2e28 <col:28, col:54> 'char *' prefix '&' cannot overflow
|   | | |   |       | |   `-ParenExpr 0x1a5d9af2e08 <col:29, col:54> 'char' lvalue
|   | | |   |       | |     `-ArraySubscriptExpr 0x1a5d9af2de8 <col:30, col:53> 'char' lvalue
|   | | |   |       | |       |-ImplicitCastExpr 0x1a5d9af2db8 <col:30, col:35> 'char *' <LValueToRValue>
|   | | |   |       | |       | `-MemberExpr 0x1a5d9af2d20 <col:30, col:35> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   | | |   |       | |       |   `-ImplicitCastExpr 0x1a5d9af2d08 <col:30> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |       | |       |     `-DeclRefExpr 0x1a5d9af2ce8 <col:30> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |       | |       `-ImplicitCastExpr 0x1a5d9af2dd0 <col:40, col:45> 'int' <LValueToRValue>
|   | | |   |       | |         `-MemberExpr 0x1a5d9af2d88 <col:40, col:45> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | |   |       | |           `-ImplicitCastExpr 0x1a5d9af2d70 <col:40> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |       | |             `-DeclRefExpr 0x1a5d9af2d50 <col:40> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |       | |-ImplicitCastExpr 0x1a5d9aedf00 <col:57> 'const void *' <BitCast>
|   | | |   |       | | `-ImplicitCastExpr 0x1a5d9af2f18 <col:57> 'const char *' <LValueToRValue>
|   | | |   |       | |   `-DeclRefExpr 0x1a5d9af2e40 <col:57> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | |   |       | `-ImplicitCastExpr 0x1a5d9aedf30 <col:61> 'unsigned long long' <IntegralCast>
|   | | |   |       |   `-ImplicitCastExpr 0x1a5d9aedf18 <col:61> 'int' <LValueToRValue>
|   | | |   |       |     `-DeclRefExpr 0x1a5d9af2e60 <col:61> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   |       |-CompoundAssignOperator 0x1a5d9aedfe8 <line:146:21, col:38> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |   |       | |-MemberExpr 0x1a5d9aedf80 <col:21, col:26> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | |   |       | | `-ImplicitCastExpr 0x1a5d9aedf68 <col:21> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |       | |   `-DeclRefExpr 0x1a5d9aedf48 <col:21> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |       | `-ImplicitCastExpr 0x1a5d9aedfd0 <col:38> 'int' <LValueToRValue>
|   | | |   |       |   `-DeclRefExpr 0x1a5d9aedfb0 <col:38> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   |       |-CompoundAssignOperator 0x1a5d9aee070 <line:147:21, col:28> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |   |       | |-DeclRefExpr 0x1a5d9aee018 <col:21> 'int' lvalue ParmVar 0x1a5d9aedb60 'inl' 'int'
|   | | |   |       | `-ImplicitCastExpr 0x1a5d9aee058 <col:28> 'int' <LValueToRValue>
|   | | |   |       |   `-DeclRefExpr 0x1a5d9aee038 <col:28> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   |       |-CompoundAssignOperator 0x1a5d9aee0f8 <line:148:21, col:27> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | | |   |       | |-DeclRefExpr 0x1a5d9aee0a0 <col:21> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | | |   |       | `-ImplicitCastExpr 0x1a5d9aee0e0 <col:27> 'int' <LValueToRValue>
|   | | |   |       |   `-DeclRefExpr 0x1a5d9aee0c0 <col:27> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   |       `-CompoundAssignOperator 0x1a5d9aee180 <line:149:21, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |   |         |-DeclRefExpr 0x1a5d9aee128 <col:21> 'int' lvalue Var 0x1a5d9aedd70 'num' 'int'
|   | | |   |         `-ImplicitCastExpr 0x1a5d9aee168 <col:28> 'int' <LValueToRValue>
|   | | |   |           `-DeclRefExpr 0x1a5d9aee148 <col:28> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   |-IfStmt 0x1a5d9aee8e8 <line:153:13, line:161:13>
|   | | |   | |-BinaryOperator 0x1a5d9aee4a0 <line:153:17, col:22> 'int' '<='
|   | | |   | | |-ImplicitCastExpr 0x1a5d9aee488 <col:17> 'int' <LValueToRValue>
|   | | |   | | | `-DeclRefExpr 0x1a5d9aee440 <col:17> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   | | `-IntegerLiteral 0x1a5d9aee460 <col:22> 'int' 0
|   | | |   | `-CompoundStmt 0x1a5d9aee8c0 <col:25, line:161:13>
|   | | |   |   |-BinaryOperator 0x1a5d9aee578 <line:154:17, col:33> 'int' '='
|   | | |   |   | |-MemberExpr 0x1a5d9aee4f8 <col:17, col:22> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | |   |   | | `-ImplicitCastExpr 0x1a5d9aee4e0 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |   | |   `-DeclRefExpr 0x1a5d9aee4c0 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |   | `-ImplicitCastExpr 0x1a5d9aee560 <col:33> 'int' <LValueToRValue>
|   | | |   |   |   `-DeclRefExpr 0x1a5d9aee528 <col:33> 'int' lvalue Var 0x1a5d9af1f40 'orig_olen' 'int'
|   | | |   |   |-IfStmt 0x1a5d9aee7a8 <line:157:17, line:158:48>
|   | | |   |   | |-BinaryOperator 0x1a5d9aee618 <line:157:21, col:25> 'int' '<'
|   | | |   |   | | |-ImplicitCastExpr 0x1a5d9aee600 <col:21> 'int' <LValueToRValue>
|   | | |   |   | | | `-DeclRefExpr 0x1a5d9aee5b8 <col:21> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   |   | | `-IntegerLiteral 0x1a5d9aee5d8 <col:25> 'int' 0
|   | | |   |   | `-ReturnStmt 0x1a5d9aee798 <line:158:21, col:48>
|   | | |   |   |   `-ParenExpr 0x1a5d9aee778 <col:28, col:48> 'int'
|   | | |   |   |     `-ConditionalOperator 0x1a5d9aee748 <col:29, col:47> 'int'
|   | | |   |   |       |-ParenExpr 0x1a5d9aee6b8 <col:29, col:37> 'int'
|   | | |   |   |       | `-BinaryOperator 0x1a5d9aee698 <col:30, col:36> 'int' '>'
|   | | |   |   |       |   |-ImplicitCastExpr 0x1a5d9aee680 <col:30> 'int' <LValueToRValue>
|   | | |   |   |       |   | `-DeclRefExpr 0x1a5d9aee638 <col:30> 'int' lvalue Var 0x1a5d9aedd70 'num' 'int'
|   | | |   |   |       |   `-IntegerLiteral 0x1a5d9aee658 <col:36> 'int' 0
|   | | |   |   |       |-ImplicitCastExpr 0x1a5d9aee718 <col:41> 'int' <LValueToRValue>
|   | | |   |   |       | `-DeclRefExpr 0x1a5d9aee6d8 <col:41> 'int' lvalue Var 0x1a5d9aedd70 'num' 'int'
|   | | |   |   |       `-ImplicitCastExpr 0x1a5d9aee730 <col:47> 'int' <LValueToRValue>
|   | | |   |   |         `-DeclRefExpr 0x1a5d9aee6f8 <col:47> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   |   `-IfStmt 0x1a5d9aee8a8 <line:159:17, line:160:32>
|   | | |   |     |-BinaryOperator 0x1a5d9aee820 <line:159:21, col:26> 'int' '=='
|   | | |   |     | |-ImplicitCastExpr 0x1a5d9aee808 <col:21> 'int' <LValueToRValue>
|   | | |   |     | | `-DeclRefExpr 0x1a5d9aee7c0 <col:21> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   |     | `-IntegerLiteral 0x1a5d9aee7e0 <col:26> 'int' 0
|   | | |   |     `-ReturnStmt 0x1a5d9aee898 <line:160:21, col:32>
|   | | |   |       `-ImplicitCastExpr 0x1a5d9aee880 <col:28, col:32> 'int' <LValueToRValue>
|   | | |   |         `-ParenExpr 0x1a5d9aee860 <col:28, col:32> 'int' lvalue
|   | | |   |           `-DeclRefExpr 0x1a5d9aee840 <col:29> 'int' lvalue Var 0x1a5d9aedd70 'num' 'int'
|   | | |   |-IfStmt 0x1a5d9aeeee0 <line:162:13, line:163:68>
|   | | |   | |-BinaryOperator 0x1a5d9aee9b8 <line:162:17, col:26> 'int' '<'
|   | | |   | | |-ImplicitCastExpr 0x1a5d9aee988 <col:17> 'int' <LValueToRValue>
|   | | |   | | | `-DeclRefExpr 0x1a5d9aee900 <col:17> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   | | `-ImplicitCastExpr 0x1a5d9aee9a0 <col:21, col:26> 'int' <LValueToRValue>
|   | | |   | |   `-MemberExpr 0x1a5d9aee958 <col:21, col:26> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | |   | |     `-ImplicitCastExpr 0x1a5d9aee940 <col:21> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   | |       `-DeclRefExpr 0x1a5d9aee920 <col:21> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   | `-CallExpr 0x1a5d9aeee48 <line:163:17, col:68> 'void *'
|   | | |   |   |-ImplicitCastExpr 0x1a5d9aeee30 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | |   |   | `-DeclRefExpr 0x1a5d9aeebc8 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x1a5d9aee9d8 'memmove' 'void *(void *, const void *, unsigned long long)'
|   | | |   |   |-ImplicitCastExpr 0x1a5d9aeee98 <col:25, col:30> 'void *' <BitCast>
|   | | |   |   | `-ImplicitCastExpr 0x1a5d9aeee80 <col:25, col:30> 'char *' <LValueToRValue>
|   | | |   |   |   `-MemberExpr 0x1a5d9aeec38 <col:25, col:30> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   | | |   |   |     `-ImplicitCastExpr 0x1a5d9aeec20 <col:25> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |   |       `-DeclRefExpr 0x1a5d9aeec00 <col:25> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |   |-ImplicitCastExpr 0x1a5d9aeeeb0 <col:36, col:48> 'const void *' <BitCast>
|   | | |   |   | `-BinaryOperator 0x1a5d9aeed20 <col:36, col:48> 'char *' '+'
|   | | |   |   |   |-ImplicitCastExpr 0x1a5d9aeecf0 <col:36, col:41> 'char *' <LValueToRValue>
|   | | |   |   |   | `-MemberExpr 0x1a5d9aeeca0 <col:36, col:41> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   | | |   |   |   |   `-ImplicitCastExpr 0x1a5d9aeec88 <col:36> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |   |   |     `-DeclRefExpr 0x1a5d9aeec68 <col:36> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |   |   `-ImplicitCastExpr 0x1a5d9aeed08 <col:48> 'int' <LValueToRValue>
|   | | |   |   |     `-DeclRefExpr 0x1a5d9aeecd0 <col:48> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   |   `-ImplicitCastExpr 0x1a5d9aeeec8 <col:51, col:67> 'unsigned long long' <IntegralCast>
|   | | |   |     `-BinaryOperator 0x1a5d9aeedf8 <col:51, col:67> 'int' '-'
|   | | |   |       |-ImplicitCastExpr 0x1a5d9aeedc8 <col:51, col:56> 'int' <LValueToRValue>
|   | | |   |       | `-MemberExpr 0x1a5d9aeed78 <col:51, col:56> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | |   |       |   `-ImplicitCastExpr 0x1a5d9aeed60 <col:51> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |   |       |     `-DeclRefExpr 0x1a5d9aeed40 <col:51> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |   |       `-ImplicitCastExpr 0x1a5d9aeede0 <col:67> 'int' <LValueToRValue>
|   | | |   |         `-DeclRefExpr 0x1a5d9aeeda8 <col:67> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | |   `-CompoundAssignOperator 0x1a5d9af0fd0 <line:164:13, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |     |-MemberExpr 0x1a5d9af0f68 <col:13, col:18> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   | | |     | `-ImplicitCastExpr 0x1a5d9af0f50 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | | |     |   `-DeclRefExpr 0x1a5d9af0f30 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | | |     `-ImplicitCastExpr 0x1a5d9af0fb8 <col:30> 'int' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1a5d9af0f98 <col:30> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | | `-IfStmt 0x1a5d9af19c0 <line:171:9, line:183:9>
|   | |   |-BinaryOperator 0x1a5d9af1308 <line:171:13, col:62> 'int' '&&'
|   | |   | |-ParenExpr 0x1a5d9af11f8 <col:13, col:48> 'int'
|   | |   | | `-BinaryOperator 0x1a5d9af11d8 <col:14, col:39> 'int' '||'
|   | |   | |   |-ImplicitCastExpr 0x1a5d9af11c0 <col:14> 'int' <LValueToRValue>
|   | |   | |   | `-DeclRefExpr 0x1a5d9af1058 <col:14> 'int' lvalue Var 0x1a5d9aede18 'foundnl' 'int'
|   | |   | |   `-BinaryOperator 0x1a5d9af11a0 <col:25, col:39> 'int' '>'
|   | |   | |     |-BinaryOperator 0x1a5d9af10e8 <col:25, col:29> 'long long' '-'
|   | |   | |     | |-ImplicitCastExpr 0x1a5d9af10b8 <col:25> 'const char *' <LValueToRValue>
|   | |   | |     | | `-DeclRefExpr 0x1a5d9af1078 <col:25> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | |   | |     | `-ImplicitCastExpr 0x1a5d9af10d0 <col:29> 'const char *' <LValueToRValue>
|   | |   | |     |   `-DeclRefExpr 0x1a5d9af1098 <col:29> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | |   | |     `-ImplicitCastExpr 0x1a5d9af1188 <col:34, col:39> 'long long' <IntegralCast>
|   | |   | |       `-ImplicitCastExpr 0x1a5d9af1170 <col:34, col:39> 'int' <LValueToRValue>
|   | |   | |         `-MemberExpr 0x1a5d9af1140 <col:34, col:39> 'int' lvalue ->obuf_size 0x1a5d9af0a88
|   | |   | |           `-ImplicitCastExpr 0x1a5d9af1128 <col:34> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   | |   | |             `-DeclRefExpr 0x1a5d9af1108 <col:34> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   | |   | `-BinaryOperator 0x1a5d9af12e8 <col:53, col:62> 'int' '>'
|   | |   |   |-BinaryOperator 0x1a5d9af1288 <col:53, col:57> 'long long' '-'
|   | |   |   | |-ImplicitCastExpr 0x1a5d9af1258 <col:53> 'const char *' <LValueToRValue>
|   | |   |   | | `-DeclRefExpr 0x1a5d9af1218 <col:53> 'const char *' lvalue Var 0x1a5d9af34e0 'p' 'const char *'
|   | |   |   | `-ImplicitCastExpr 0x1a5d9af1270 <col:57> 'const char *' <LValueToRValue>
|   | |   |   |   `-DeclRefExpr 0x1a5d9af1238 <col:57> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | |   |   `-ImplicitCastExpr 0x1a5d9af12d0 <col:62> 'long long' <IntegralCast>
|   | |   |     `-IntegerLiteral 0x1a5d9af12a8 <col:62> 'int' 0
|   | |   `-CompoundStmt 0x1a5d9af1990 <col:65, line:183:9>
|   | |     |-IfStmt 0x1a5d9af17e0 <line:173:13, line:179:13>
|   | |     | |-BinaryOperator 0x1a5d9af1478 <line:173:17, col:22> 'int' '<='
|   | |     | | |-ImplicitCastExpr 0x1a5d9af1460 <col:17> 'int' <LValueToRValue>
|   | |     | | | `-DeclRefExpr 0x1a5d9af1418 <col:17> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | |     | | `-IntegerLiteral 0x1a5d9af1438 <col:22> 'int' 0
|   | |     | `-CompoundStmt 0x1a5d9af17c0 <col:25, line:179:13>
|   | |     |   |-IfStmt 0x1a5d9af16a8 <line:175:17, line:176:48>
|   | |     |   | |-BinaryOperator 0x1a5d9af1518 <line:175:21, col:25> 'int' '<'
|   | |     |   | | |-ImplicitCastExpr 0x1a5d9af1500 <col:21> 'int' <LValueToRValue>
|   | |     |   | | | `-DeclRefExpr 0x1a5d9af14b8 <col:21> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | |     |   | | `-IntegerLiteral 0x1a5d9af14d8 <col:25> 'int' 0
|   | |     |   | `-ReturnStmt 0x1a5d9af1698 <line:176:21, col:48>
|   | |     |   |   `-ParenExpr 0x1a5d9af1678 <col:28, col:48> 'int'
|   | |     |   |     `-ConditionalOperator 0x1a5d9af1648 <col:29, col:47> 'int'
|   | |     |   |       |-ParenExpr 0x1a5d9af15b8 <col:29, col:37> 'int'
|   | |     |   |       | `-BinaryOperator 0x1a5d9af1598 <col:30, col:36> 'int' '>'
|   | |     |   |       |   |-ImplicitCastExpr 0x1a5d9af1580 <col:30> 'int' <LValueToRValue>
|   | |     |   |       |   | `-DeclRefExpr 0x1a5d9af1538 <col:30> 'int' lvalue Var 0x1a5d9aedd70 'num' 'int'
|   | |     |   |       |   `-IntegerLiteral 0x1a5d9af1558 <col:36> 'int' 0
|   | |     |   |       |-ImplicitCastExpr 0x1a5d9af1618 <col:41> 'int' <LValueToRValue>
|   | |     |   |       | `-DeclRefExpr 0x1a5d9af15d8 <col:41> 'int' lvalue Var 0x1a5d9aedd70 'num' 'int'
|   | |     |   |       `-ImplicitCastExpr 0x1a5d9af1630 <col:47> 'int' <LValueToRValue>
|   | |     |   |         `-DeclRefExpr 0x1a5d9af15f8 <col:47> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | |     |   `-IfStmt 0x1a5d9af17a8 <line:177:17, line:178:32>
|   | |     |     |-BinaryOperator 0x1a5d9af1720 <line:177:21, col:26> 'int' '=='
|   | |     |     | |-ImplicitCastExpr 0x1a5d9af1708 <col:21> 'int' <LValueToRValue>
|   | |     |     | | `-DeclRefExpr 0x1a5d9af16c0 <col:21> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | |     |     | `-IntegerLiteral 0x1a5d9af16e0 <col:26> 'int' 0
|   | |     |     `-ReturnStmt 0x1a5d9af1798 <line:178:21, col:32>
|   | |     |       `-ImplicitCastExpr 0x1a5d9af1780 <col:28, col:32> 'int' <LValueToRValue>
|   | |     |         `-ParenExpr 0x1a5d9af1760 <col:28, col:32> 'int' lvalue
|   | |     |           `-DeclRefExpr 0x1a5d9af1740 <col:29> 'int' lvalue Var 0x1a5d9aedd70 'num' 'int'
|   | |     |-CompoundAssignOperator 0x1a5d9af1850 <line:180:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |     | |-DeclRefExpr 0x1a5d9af17f8 <col:13> 'int' lvalue Var 0x1a5d9aedd70 'num' 'int'
|   | |     | `-ImplicitCastExpr 0x1a5d9af1838 <col:20> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1a5d9af1818 <col:20> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | |     |-CompoundAssignOperator 0x1a5d9af18d8 <line:181:13, col:19> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   | |     | |-DeclRefExpr 0x1a5d9af1880 <col:13> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   | |     | `-ImplicitCastExpr 0x1a5d9af18c0 <col:19> 'int' <LValueToRValue>
|   | |     |   `-DeclRefExpr 0x1a5d9af18a0 <col:19> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | |     `-CompoundAssignOperator 0x1a5d9af1960 <line:182:13, col:20> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |       |-DeclRefExpr 0x1a5d9af1908 <col:13> 'int' lvalue ParmVar 0x1a5d9aedb60 'inl' 'int'
|   | |       `-ImplicitCastExpr 0x1a5d9af1948 <col:20> 'int' <LValueToRValue>
|   | |         `-DeclRefExpr 0x1a5d9af1928 <col:20> 'int' lvalue Var 0x1a5d9aedcf0 'i' 'int'
|   | `-BinaryOperator 0x1a5d9af1ad0 <line:185:12, col:29> 'int' '&&'
|   |   |-ImplicitCastExpr 0x1a5d9af1ab8 <col:12> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1a5d9af1a18 <col:12> 'int' lvalue Var 0x1a5d9aede18 'foundnl' 'int'
|   |   `-BinaryOperator 0x1a5d9af1a98 <col:23, col:29> 'int' '>'
|   |     |-ImplicitCastExpr 0x1a5d9af1a80 <col:23> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1a5d9af1a38 <col:23> 'int' lvalue ParmVar 0x1a5d9aedb60 'inl' 'int'
|   |     `-IntegerLiteral 0x1a5d9af1a58 <col:29> 'int' 0
|   |-IfStmt 0x1a5d9af3ff0 <line:191:5, line:195:5>
|   | |-BinaryOperator 0x1a5d9af1b70 <line:191:9, col:15> 'int' '>'
|   | | |-ImplicitCastExpr 0x1a5d9af1b58 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1a5d9af1b10 <col:9> 'int' lvalue ParmVar 0x1a5d9aedb60 'inl' 'int'
|   | | `-IntegerLiteral 0x1a5d9af1b30 <col:15> 'int' 0
|   | `-CompoundStmt 0x1a5d9af3fc8 <col:18, line:195:5>
|   |   |-CallExpr 0x1a5d9af1d90 <line:192:9, col:52> 'void *'
|   |   | |-ImplicitCastExpr 0x1a5d9af1d78 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1a5d9af1b90 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x1a5d9af23f0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x1a5d9af1dc8 <col:16, col:42> 'void *' <BitCast>
|   |   | | `-UnaryOperator 0x1a5d9af1cf0 <col:16, col:42> 'char *' prefix '&' cannot overflow
|   |   | |   `-ParenExpr 0x1a5d9af1cd0 <col:17, col:42> 'char' lvalue
|   |   | |     `-ArraySubscriptExpr 0x1a5d9af1cb0 <col:18, col:41> 'char' lvalue
|   |   | |       |-ImplicitCastExpr 0x1a5d9af1c80 <col:18, col:23> 'char *' <LValueToRValue>
|   |   | |       | `-MemberExpr 0x1a5d9af1be8 <col:18, col:23> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   |   | |       |   `-ImplicitCastExpr 0x1a5d9af1bd0 <col:18> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | |       |     `-DeclRefExpr 0x1a5d9af1bb0 <col:18> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | |       `-ImplicitCastExpr 0x1a5d9af1c98 <col:28, col:33> 'int' <LValueToRValue>
|   |   | |         `-MemberExpr 0x1a5d9af1c50 <col:28, col:33> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   | |           `-ImplicitCastExpr 0x1a5d9af1c38 <col:28> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | |             `-DeclRefExpr 0x1a5d9af1c18 <col:28> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | |-ImplicitCastExpr 0x1a5d9af1df8 <col:45> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x1a5d9af1de0 <col:45> 'const char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1a5d9af1d08 <col:45> 'const char *' lvalue ParmVar 0x1a5d9aedae0 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x1a5d9af1e28 <col:49> 'unsigned long long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1a5d9af1e10 <col:49> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1a5d9af1d28 <col:49> 'int' lvalue ParmVar 0x1a5d9aedb60 'inl' 'int'
|   |   |-CompoundAssignOperator 0x1a5d9af1ee0 <line:193:9, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1a5d9af1e78 <col:9, col:14> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   | | `-ImplicitCastExpr 0x1a5d9af1e60 <col:9> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1a5d9af1e40 <col:9> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af2f50 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | `-ImplicitCastExpr 0x1a5d9af1ec8 <col:26> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1a5d9af1ea8 <col:26> 'int' lvalue ParmVar 0x1a5d9aedb60 'inl' 'int'
|   |   `-CompoundAssignOperator 0x1a5d9af3f98 <line:194:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1a5d9af1f10 <col:9> 'int' lvalue Var 0x1a5d9aedd70 'num' 'int'
|   |     `-ImplicitCastExpr 0x1a5d9af3f80 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1a5d9af3f60 <col:16> 'int' lvalue ParmVar 0x1a5d9aedb60 'inl' 'int'
|   `-ReturnStmt 0x1a5d9af4040 <line:196:5, col:12>
|     `-ImplicitCastExpr 0x1a5d9af4028 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1a5d9af4008 <col:12> 'int' lvalue Var 0x1a5d9aedd70 'num' 'int'
|-FunctionDecl 0x1a5d9af23f0 <line:139:21> col:21 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1a5d9af2490 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1a5d9af24f8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1a5d9af2560 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1a5d9aee9d8 <line:163:17> col:17 implicit used memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1a5d9aeea78 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1a5d9aeeae0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1a5d9aeeb48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1a5d9af42e0 <line:199:1, line:294:1> line:199:13 invalid linebuffer_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1a5d9af40b0 <col:29, col:34> col:34 invalid b 'int *'
| |-ParmVarDecl 0x1a5d9af4130 <col:37, col:41> col:41 used cmd 'int'
| |-ParmVarDecl 0x1a5d9af41b0 <col:46, col:51> col:51 used num 'long'
| |-ParmVarDecl 0x1a5d9af4230 <col:56, col:62> col:62 used ptr 'void *'
| `-CompoundStmt 0x1a5d9aef3f0 <line:200:1, line:294:1>
|   |-DeclStmt 0x1a5d9af4430 <line:202:5, col:28>
|   | `-VarDecl 0x1a5d9af43c8 <col:5, col:25> col:25 used ctx 'BIO_LINEBUFFER_CTX *'
|   |-DeclStmt 0x1a5d9af4508 <line:203:5, col:17>
|   | `-VarDecl 0x1a5d9af4460 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1a5d9af44f0 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1a5d9af44c8 <col:16> 'int' 1
|   |-DeclStmt 0x1a5d9af45a0 <line:204:5, col:12>
|   | `-VarDecl 0x1a5d9af4538 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x1a5d9af4638 <line:205:5, col:10>
|   | `-VarDecl 0x1a5d9af45d0 <col:5, col:9> col:9 used r 'int'
|   |-DeclStmt 0x1a5d9af46d0 <line:206:5, col:12>
|   | `-VarDecl 0x1a5d9af4668 <col:5, col:9> col:9 used obs 'int'
|   |-SwitchStmt 0x1a5d9af4770 <line:210:5, line:289:5>
|   | |-ImplicitCastExpr 0x1a5d9af4758 <line:210:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1a5d9af4720 <col:13> 'int' lvalue ParmVar 0x1a5d9af4130 'cmd' 'int'
|   | `-CompoundStmt 0x1a5d9aef120 <col:18, line:289:5>
|   |   |-BinaryOperator 0x1a5d9af4820 <line:212:9, col:25> 'int' '='
|   |   | |-MemberExpr 0x1a5d9af47c8 <col:9, col:14> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   | | `-ImplicitCastExpr 0x1a5d9af47b0 <col:9> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1a5d9af4790 <col:9> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | `-IntegerLiteral 0x1a5d9af47f8 <col:25> 'int' 0
|   |   |-IfStmt 0x1a5d9af4950 <line:213:9, line:214:22>
|   |   | |-OpaqueValueExpr 0x1a5d9af4938 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1a5d9af4928 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x1a5d9af4910 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x1a5d9af48f0 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x1a5d9af48c8 <col:21> 'int' 0
|   |   |-BreakStmt 0x1a5d9af4b40 <line:216:9>
|   |   |-BinaryOperator 0x1a5d9af4c28 <line:218:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x1a5d9af4b48 <col:9> 'long' lvalue Var 0x1a5d9af4460 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1a5d9af4c00 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1a5d9af4be8 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1a5d9af4ba0 <col:21, col:26> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   |       `-ImplicitCastExpr 0x1a5d9af4b88 <col:21> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1a5d9af4b68 <col:21> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |-BreakStmt 0x1a5d9af4c48 <line:219:9>
|   |   |-BinaryOperator 0x1a5d9af4d30 <line:221:9, col:26> 'long' '='
|   |   | |-DeclRefExpr 0x1a5d9af4c50 <col:9> 'long' lvalue Var 0x1a5d9af4460 'ret' 'long'
|   |   | `-CStyleCastExpr 0x1a5d9af4d08 <col:15, col:26> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1a5d9af4cf0 <col:21, col:26> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     `-MemberExpr 0x1a5d9af4ca8 <col:21, col:26> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   |       `-ImplicitCastExpr 0x1a5d9af4c90 <col:21> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1a5d9af4c70 <col:21> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |-IfStmt 0x1a5d9af4fe8 <line:222:9, line:226:9>
|   |   | |-BinaryOperator 0x1a5d9af4dc8 <line:222:13, col:20> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1a5d9af4d98 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1a5d9af4d50 <col:13> 'long' lvalue Var 0x1a5d9af4460 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x1a5d9af4db0 <col:20> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1a5d9af4d70 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x1a5d9af4fd0 <col:23, line:226:9>
|   |   |   `-IfStmt 0x1a5d9af4ef8 <line:223:13, line:224:26>
|   |   |     |-OpaqueValueExpr 0x1a5d9af4ee0 <<invalid sloc>> '_Bool'
|   |   |     `-ReturnStmt 0x1a5d9af4ed0 <col:17, col:26>
|   |   |       `-ImplicitCastExpr 0x1a5d9af4eb8 <col:24, col:26> 'long' <IntegralCast>
|   |   |         `-ParenExpr 0x1a5d9af4e98 <col:24, col:26> 'int'
|   |   |           `-IntegerLiteral 0x1a5d9af4e70 <col:25> 'int' 0
|   |   |-BreakStmt 0x1a5d9af5000 <line:227:9>
|   |   |-BinaryOperator 0x1a5d9af50b8 <line:229:9, col:20> 'int' '='
|   |   | |-DeclRefExpr 0x1a5d9af5008 <col:9> 'int' lvalue Var 0x1a5d9af4668 'obs' 'int'
|   |   | `-CStyleCastExpr 0x1a5d9af5090 <col:15, col:20> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1a5d9af5078 <col:20> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x1a5d9af5040 <col:20> 'long' lvalue ParmVar 0x1a5d9af41b0 'num' 'long'
|   |   |-BinaryOperator 0x1a5d9af5190 <line:230:9, col:18> 'char *' '='
|   |   | |-DeclRefExpr 0x1a5d9af50d8 <col:9> 'char *' lvalue Var 0x1a5d9af4538 'p' 'char *'
|   |   | `-ImplicitCastExpr 0x1a5d9af5178 <col:13, col:18> 'char *' <LValueToRValue>
|   |   |   `-MemberExpr 0x1a5d9af5148 <col:13, col:18> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   |   |     `-ImplicitCastExpr 0x1a5d9af5130 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1a5d9af5110 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |-IfStmt 0x1a5d9af5678 <line:231:9, line:235:9>
|   |   | |-BinaryOperator 0x1a5d9af5390 <line:231:13, col:70> 'int' '&&'
|   |   | | |-ParenExpr 0x1a5d9af5278 <col:13, col:43> 'int'
|   |   | | | `-BinaryOperator 0x1a5d9af5258 <col:14, line:26:38> 'int' '>'
|   |   | | |   |-ImplicitCastExpr 0x1a5d9af5240 <line:231:14> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1a5d9af51b0 <col:14> 'int' lvalue Var 0x1a5d9af4668 'obs' 'int'
|   |   | | |   `-BinaryOperator 0x1a5d9af5220 <line:26:33, col:38> 'int' '*'
|   |   | | |     |-IntegerLiteral 0x1a5d9af51d0 <col:33> 'int' 1024
|   |   | | |     `-IntegerLiteral 0x1a5d9af51f8 <col:38> 'int' 10
|   |   | | `-ParenExpr 0x1a5d9af5370 <line:231:48, col:70> 'int'
|   |   | |   `-BinaryOperator 0x1a5d9af5350 <col:49, col:61> 'int' '!='
|   |   | |     |-ImplicitCastExpr 0x1a5d9af5320 <col:49> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x1a5d9af5298 <col:49> 'int' lvalue Var 0x1a5d9af4668 'obs' 'int'
|   |   | |     `-ImplicitCastExpr 0x1a5d9af5338 <col:56, col:61> 'int' <LValueToRValue>
|   |   | |       `-MemberExpr 0x1a5d9af52f0 <col:56, col:61> 'int' lvalue ->obuf_size 0x1a5d9af0a88
|   |   | |         `-ImplicitCastExpr 0x1a5d9af52d8 <col:56> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | |           `-DeclRefExpr 0x1a5d9af52b8 <col:56> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | `-CompoundStmt 0x1a5d9af5658 <col:73, line:235:9>
|   |   |   |-BinaryOperator 0x1a5d9af54c0 <line:232:13, col:40> 'char *' '='
|   |   |   | |-DeclRefExpr 0x1a5d9af53b0 <col:13> 'char *' lvalue Var 0x1a5d9af4538 'p' 'char *'
|   |   |   | `-ImplicitCastExpr 0x1a5d9af54a8 <col:17, col:40> 'char *' <IntegralToPointer>
|   |   |   |   `-CallExpr 0x1a5d9af5480 <col:17, col:40> 'int'
|   |   |   |     |-ImplicitCastExpr 0x1a5d9af5468 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x1a5d9af53d0 <col:17> 'int ()' Function 0x1a5d9aebee0 'OPENSSL_malloc' 'int ()'
|   |   |   |     `-CStyleCastExpr 0x1a5d9af5440 <col:32, col:37> 'int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x1a5d9af5428 <col:37> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |   |         `-DeclRefExpr 0x1a5d9af53f0 <col:37> 'long' lvalue ParmVar 0x1a5d9af41b0 'num' 'long'
|   |   |   `-IfStmt 0x1a5d9af5640 <line:233:13, line:234:22>
|   |   |     |-BinaryOperator 0x1a5d9af55b8 <line:233:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1a5d9af5588 <.//openssl//file_jk/after\crypto\bio\bf_lbuf.c:233:17> 'char *' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1a5d9af54e0 <col:17> 'char *' lvalue Var 0x1a5d9af4538 'p' 'char *'
|   |   |     | `-ImplicitCastExpr 0x1a5d9af55a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |     |   `-ParenExpr 0x1a5d9af5568 <col:17, col:27> 'void *'
|   |   |     |     `-CStyleCastExpr 0x1a5d9af5540 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     |       `-IntegerLiteral 0x1a5d9af5500 <col:26> 'int' 0
|   |   |     `-GotoStmt 0x1a5d9af5628 <.//openssl//file_jk/after\crypto\bio\bf_lbuf.c:234:17, col:22> 'malloc_error' 0x1a5d9af55d8
|   |   |-IfStmt 0x1a5d9af5e00 <line:236:9, line:244:9>
|   |   | |-BinaryOperator 0x1a5d9af5748 <line:236:13, col:26> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1a5d9af5718 <col:13, col:18> 'char *' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1a5d9af56c8 <col:13, col:18> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   |   | | |   `-ImplicitCastExpr 0x1a5d9af56b0 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1a5d9af5690 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | | `-ImplicitCastExpr 0x1a5d9af5730 <col:26> 'char *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1a5d9af56f8 <col:26> 'char *' lvalue Var 0x1a5d9af4538 'p' 'char *'
|   |   | `-CompoundStmt 0x1a5d9af5dc8 <col:29, line:244:9>
|   |   |   |-IfStmt 0x1a5d9af5918 <line:237:13, line:239:13>
|   |   |   | |-BinaryOperator 0x1a5d9af5820 <line:237:17, col:33> 'int' '>'
|   |   |   | | |-ImplicitCastExpr 0x1a5d9af57f0 <col:17, col:22> 'int' <LValueToRValue>
|   |   |   | | | `-MemberExpr 0x1a5d9af57a0 <col:17, col:22> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   |   | | |   `-ImplicitCastExpr 0x1a5d9af5788 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   | | |     `-DeclRefExpr 0x1a5d9af5768 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   | | `-ImplicitCastExpr 0x1a5d9af5808 <col:33> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1a5d9af57d0 <col:33> 'int' lvalue Var 0x1a5d9af4668 'obs' 'int'
|   |   |   | `-CompoundStmt 0x1a5d9af5900 <col:38, line:239:13>
|   |   |   |   `-BinaryOperator 0x1a5d9af58e0 <line:238:17, col:33> 'int' '='
|   |   |   |     |-MemberExpr 0x1a5d9af5878 <col:17, col:22> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   |   |     | `-ImplicitCastExpr 0x1a5d9af5860 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x1a5d9af5840 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   |     `-ImplicitCastExpr 0x1a5d9af58c8 <col:33> 'int' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1a5d9af58a8 <col:33> 'int' lvalue Var 0x1a5d9af4668 'obs' 'int'
|   |   |   |-CallExpr 0x1a5d9af5aa0 <line:240:13, col:47> 'void *'
|   |   |   | |-ImplicitCastExpr 0x1a5d9af5a88 <col:13> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1a5d9af5930 <col:13> 'void *(void *, const void *, unsigned long long)' Function 0x1a5d9af23f0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   | |-ImplicitCastExpr 0x1a5d9af5af0 <col:20> 'void *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x1a5d9af5ad8 <col:20> 'char *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1a5d9af5950 <col:20> 'char *' lvalue Var 0x1a5d9af4538 'p' 'char *'
|   |   |   | |-ImplicitCastExpr 0x1a5d9af5b20 <col:23, col:28> 'const void *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x1a5d9af5b08 <col:23, col:28> 'char *' <LValueToRValue>
|   |   |   | |   `-MemberExpr 0x1a5d9af59a8 <col:23, col:28> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   |   |   | |     `-ImplicitCastExpr 0x1a5d9af5990 <col:23> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   | |       `-DeclRefExpr 0x1a5d9af5970 <col:23> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1a5d9af5b50 <col:34, col:39> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x1a5d9af5b38 <col:34, col:39> 'int' <LValueToRValue>
|   |   |   |     `-MemberExpr 0x1a5d9af5a10 <col:34, col:39> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   |   |       `-ImplicitCastExpr 0x1a5d9af59f8 <col:34> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x1a5d9af59d8 <col:34> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   |-CallExpr 0x1a5d9af5c08 <line:241:13, col:35> 'int'
|   |   |   | |-ImplicitCastExpr 0x1a5d9af5bf0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1a5d9af5b68 <col:13> 'int ()' Function 0x1a5d9aec540 'OPENSSL_free' 'int ()'
|   |   |   | `-ImplicitCastExpr 0x1a5d9af5c30 <col:26, col:31> 'char *' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x1a5d9af5bc0 <col:26, col:31> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   |   |   |     `-ImplicitCastExpr 0x1a5d9af5ba8 <col:26> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1a5d9af5b88 <col:26> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   |-BinaryOperator 0x1a5d9af5ce8 <line:242:13, col:25> 'char *' '='
|   |   |   | |-MemberExpr 0x1a5d9af5c80 <col:13, col:18> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   |   |   | | `-ImplicitCastExpr 0x1a5d9af5c68 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1a5d9af5c48 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1a5d9af5cd0 <col:25> 'char *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1a5d9af5cb0 <col:25> 'char *' lvalue Var 0x1a5d9af4538 'p' 'char *'
|   |   |   `-BinaryOperator 0x1a5d9af5da8 <line:243:13, col:30> 'int' '='
|   |   |     |-MemberExpr 0x1a5d9af5d40 <col:13, col:18> 'int' lvalue ->obuf_size 0x1a5d9af0a88
|   |   |     | `-ImplicitCastExpr 0x1a5d9af5d28 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1a5d9af5d08 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     `-ImplicitCastExpr 0x1a5d9af5d90 <col:30> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1a5d9af5d70 <col:30> 'int' lvalue Var 0x1a5d9af4668 'obs' 'int'
|   |   |-BreakStmt 0x1a5d9af5e18 <line:245:9>
|   |   |-IfStmt 0x1a5d9af5f30 <line:247:9, line:248:22>
|   |   | |-OpaqueValueExpr 0x1a5d9af5f18 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1a5d9af5f08 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x1a5d9af5ef0 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x1a5d9af5ed0 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x1a5d9af5ea8 <col:21> 'int' 0
|   |   |-BreakStmt 0x1a5d9af6040 <line:252:9>
|   |   |-IfStmt 0x1a5d9af6158 <line:255:9, line:256:22>
|   |   | |-OpaqueValueExpr 0x1a5d9af6140 <<invalid sloc>> '_Bool'
|   |   | `-ReturnStmt 0x1a5d9af6130 <col:13, col:22>
|   |   |   `-ImplicitCastExpr 0x1a5d9af6118 <col:20, col:22> 'long' <IntegralCast>
|   |   |     `-ParenExpr 0x1a5d9af60f8 <col:20, col:22> 'int'
|   |   |       `-IntegerLiteral 0x1a5d9af60d0 <col:21> 'int' 0
|   |   |-IfStmt 0x1a5d9af62f8 <line:257:9, line:260:9>
|   |   | |-BinaryOperator 0x1a5d9af6218 <line:257:13, col:30> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1a5d9af6200 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1a5d9af61a8 <col:13, col:18> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   | | |   `-ImplicitCastExpr 0x1a5d9af6190 <col:13> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1a5d9af6170 <col:13> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   | | `-IntegerLiteral 0x1a5d9af61d8 <col:30> 'int' 0
|   |   | `-CompoundStmt 0x1a5d9af62e0 <col:33, line:260:9>
|   |   |   `-BreakStmt 0x1a5d9af62d8 <line:259:13>
|   |   |-ForStmt 0x1a5d9af6c80 <line:262:9, line:276:9>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | |-<<<NULL>>>
|   |   | `-CompoundStmt 0x1a5d9af6c68 <line:262:18, line:276:9>
|   |   |   `-IfStmt 0x1a5d9af6c40 <line:264:13, line:275:13> has_else
|   |   |     |-BinaryOperator 0x1a5d9af63d8 <line:264:17, col:33> 'int' '>'
|   |   |     | |-ImplicitCastExpr 0x1a5d9af63c0 <col:17, col:22> 'int' <LValueToRValue>
|   |   |     | | `-MemberExpr 0x1a5d9af6368 <col:17, col:22> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   |     | |   `-ImplicitCastExpr 0x1a5d9af6350 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     | |     `-DeclRefExpr 0x1a5d9af6330 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     | `-IntegerLiteral 0x1a5d9af6398 <col:33> 'int' 0
|   |   |     |-CompoundStmt 0x1a5d9af6b40 <col:36, line:272:13>
|   |   |     | |-IfStmt 0x1a5d9af6668 <line:267:17, line:268:36>
|   |   |     | | |-BinaryOperator 0x1a5d9af65a0 <line:267:21, col:26> 'int' '<='
|   |   |     | | | |-ImplicitCastExpr 0x1a5d9af6588 <col:21> 'int' <LValueToRValue>
|   |   |     | | | | `-DeclRefExpr 0x1a5d9af6540 <col:21> 'int' lvalue Var 0x1a5d9af45d0 'r' 'int'
|   |   |     | | | `-IntegerLiteral 0x1a5d9af6560 <col:26> 'int' 0
|   |   |     | | `-ReturnStmt 0x1a5d9af6658 <line:268:21, col:36>
|   |   |     | |   `-ParenExpr 0x1a5d9af6638 <col:28, col:36> 'long'
|   |   |     | |     `-CStyleCastExpr 0x1a5d9af6610 <col:29, col:35> 'long' <IntegralCast>
|   |   |     | |       `-ImplicitCastExpr 0x1a5d9af65f8 <col:35> 'int' <LValueToRValue> part_of_explicit_cast
|   |   |     | |         `-DeclRefExpr 0x1a5d9af65c0 <col:35> 'int' lvalue Var 0x1a5d9af45d0 'r' 'int'
|   |   |     | |-IfStmt 0x1a5d9af6a58 <line:269:17, line:270:72>
|   |   |     | | |-BinaryOperator 0x1a5d9af6738 <line:269:21, col:30> 'int' '<'
|   |   |     | | | |-ImplicitCastExpr 0x1a5d9af6708 <col:21> 'int' <LValueToRValue>
|   |   |     | | | | `-DeclRefExpr 0x1a5d9af6680 <col:21> 'int' lvalue Var 0x1a5d9af45d0 'r' 'int'
|   |   |     | | | `-ImplicitCastExpr 0x1a5d9af6720 <col:25, col:30> 'int' <LValueToRValue>
|   |   |     | | |   `-MemberExpr 0x1a5d9af66d8 <col:25, col:30> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   |     | | |     `-ImplicitCastExpr 0x1a5d9af66c0 <col:25> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     | | |       `-DeclRefExpr 0x1a5d9af66a0 <col:25> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     | | `-CallExpr 0x1a5d9af69c0 <line:270:21, col:72> 'void *'
|   |   |     | |   |-ImplicitCastExpr 0x1a5d9af69a8 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |     | |   | `-DeclRefExpr 0x1a5d9af6758 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x1a5d9aee9d8 'memmove' 'void *(void *, const void *, unsigned long long)'
|   |   |     | |   |-ImplicitCastExpr 0x1a5d9af6a10 <col:29, col:34> 'void *' <BitCast>
|   |   |     | |   | `-ImplicitCastExpr 0x1a5d9af69f8 <col:29, col:34> 'char *' <LValueToRValue>
|   |   |     | |   |   `-MemberExpr 0x1a5d9af67b0 <col:29, col:34> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   |   |     | |   |     `-ImplicitCastExpr 0x1a5d9af6798 <col:29> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     | |   |       `-DeclRefExpr 0x1a5d9af6778 <col:29> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     | |   |-ImplicitCastExpr 0x1a5d9af6a28 <col:40, col:52> 'const void *' <BitCast>
|   |   |     | |   | `-BinaryOperator 0x1a5d9af6898 <col:40, col:52> 'char *' '+'
|   |   |     | |   |   |-ImplicitCastExpr 0x1a5d9af6868 <col:40, col:45> 'char *' <LValueToRValue>
|   |   |     | |   |   | `-MemberExpr 0x1a5d9af6818 <col:40, col:45> 'char *' lvalue ->obuf 0x1a5d9af0a18
|   |   |     | |   |   |   `-ImplicitCastExpr 0x1a5d9af6800 <col:40> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     | |   |   |     `-DeclRefExpr 0x1a5d9af67e0 <col:40> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     | |   |   `-ImplicitCastExpr 0x1a5d9af6880 <col:52> 'int' <LValueToRValue>
|   |   |     | |   |     `-DeclRefExpr 0x1a5d9af6848 <col:52> 'int' lvalue Var 0x1a5d9af45d0 'r' 'int'
|   |   |     | |   `-ImplicitCastExpr 0x1a5d9af6a40 <col:55, col:71> 'unsigned long long' <IntegralCast>
|   |   |     | |     `-BinaryOperator 0x1a5d9af6970 <col:55, col:71> 'int' '-'
|   |   |     | |       |-ImplicitCastExpr 0x1a5d9af6940 <col:55, col:60> 'int' <LValueToRValue>
|   |   |     | |       | `-MemberExpr 0x1a5d9af68f0 <col:55, col:60> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   |     | |       |   `-ImplicitCastExpr 0x1a5d9af68d8 <col:55> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     | |       |     `-DeclRefExpr 0x1a5d9af68b8 <col:55> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     | |       `-ImplicitCastExpr 0x1a5d9af6958 <col:71> 'int' <LValueToRValue>
|   |   |     | |         `-DeclRefExpr 0x1a5d9af6920 <col:71> 'int' lvalue Var 0x1a5d9af45d0 'r' 'int'
|   |   |     | `-CompoundAssignOperator 0x1a5d9af6b10 <line:271:17, col:34> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |   |-MemberExpr 0x1a5d9af6aa8 <col:17, col:22> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   |     |   | `-ImplicitCastExpr 0x1a5d9af6a90 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |     |   |   `-DeclRefExpr 0x1a5d9af6a70 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |     |   `-ImplicitCastExpr 0x1a5d9af6af8 <col:34> 'int' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1a5d9af6ad8 <col:34> 'int' lvalue Var 0x1a5d9af45d0 'r' 'int'
|   |   |     `-CompoundStmt 0x1a5d9af6c20 <line:272:20, line:275:13>
|   |   |       |-BinaryOperator 0x1a5d9af6bf8 <line:273:17, col:33> 'int' '='
|   |   |       | |-MemberExpr 0x1a5d9af6ba0 <col:17, col:22> 'int' lvalue ->obuf_len 0x1a5d9af0af8
|   |   |       | | `-ImplicitCastExpr 0x1a5d9af6b88 <col:17> 'BIO_LINEBUFFER_CTX *' <LValueToRValue>
|   |   |       | |   `-DeclRefExpr 0x1a5d9af6b68 <col:17> 'BIO_LINEBUFFER_CTX *' lvalue Var 0x1a5d9af43c8 'ctx' 'BIO_LINEBUFFER_CTX *'
|   |   |       | `-IntegerLiteral 0x1a5d9af6bd0 <col:33> 'int' 0
|   |   |       `-BreakStmt 0x1a5d9af6c18 <line:274:17>
|   |   |-BreakStmt 0x1a5d9af6d58 <line:278:9>
|   |   |-IfStmt 0x1a5d9aeef10 <line:281:9, line:282:19>
|   |   | |-OpaqueValueExpr 0x1a5d9af6f58 <<invalid sloc>> '_Bool'
|   |   | `-BinaryOperator 0x1a5d9af6f38 <col:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x1a5d9af6ed8 <col:13> 'long' lvalue Var 0x1a5d9af4460 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1a5d9af6f20 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1a5d9af6ef8 <col:19> 'int' 0
|   |   |-BreakStmt 0x1a5d9aeef28 <line:283:9>
|   |   |-DefaultStmt 0x1a5d9aef058 <line:284:5, line:286:22>
|   |   | `-IfStmt 0x1a5d9aef040 <line:285:9, line:286:22>
|   |   |   |-OpaqueValueExpr 0x1a5d9aef028 <<invalid sloc>> '_Bool'
|   |   |   `-ReturnStmt 0x1a5d9aef018 <col:13, col:22>
|   |   |     `-ImplicitCastExpr 0x1a5d9aef000 <col:20, col:22> 'long' <IntegralCast>
|   |   |       `-ParenExpr 0x1a5d9aeefe0 <col:20, col:22> 'int'
|   |   |         `-IntegerLiteral 0x1a5d9aeefb8 <col:21> 'int' 0
|   |   `-BreakStmt 0x1a5d9aef118 <line:288:9>
|   |-ReturnStmt 0x1a5d9aef240 <line:290:5, col:16>
|   | `-ImplicitCastExpr 0x1a5d9aef228 <col:12, col:16> 'long' <LValueToRValue>
|   |   `-ParenExpr 0x1a5d9aef208 <col:12, col:16> 'long' lvalue
|   |     `-DeclRefExpr 0x1a5d9aef1e8 <col:13> 'long' lvalue Var 0x1a5d9af4460 'ret' 'long'
|   |-LabelStmt 0x1a5d9aef368 <line:291:2, col:14> 'malloc_error'
|   | `-NullStmt 0x1a5d9aef360 <col:14>
|   `-ReturnStmt 0x1a5d9aef3e0 <line:293:5, col:14>
|     `-ImplicitCastExpr 0x1a5d9aef3c8 <col:12, col:14> 'long' <IntegralCast>
|       `-ParenExpr 0x1a5d9aef3a8 <col:12, col:14> 'int'
|         `-IntegerLiteral 0x1a5d9aef380 <col:13> 'int' 0
|-FunctionDecl 0x1a5d9aef608 <line:296:1, line:308:1> line:296:13 invalid linebuffer_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1a5d9aef460 <col:38, col:43> col:43 invalid b 'int *'
| |-ParmVarDecl 0x1a5d9aef4e0 <col:46, col:50> col:50 used cmd 'int'
| |-ParmVarDecl 0x1a5d9aef560 <col:55, col:68> col:68 invalid fp 'int *'
| `-CompoundStmt 0x1a5d9aefb68 <line:297:1, line:308:1>
|   |-DeclStmt 0x1a5d9aef798 <line:298:5, col:17>
|   | `-VarDecl 0x1a5d9aef6f0 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1a5d9aef780 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1a5d9aef758 <col:16> 'int' 1
|   |-IfStmt 0x1a5d9aef8c0 <line:300:5, line:301:18>
|   | |-OpaqueValueExpr 0x1a5d9aef8a8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1a5d9aef898 <col:9, col:18>
|   |   `-ImplicitCastExpr 0x1a5d9aef880 <col:16, col:18> 'long' <IntegralCast>
|   |     `-ParenExpr 0x1a5d9aef860 <col:16, col:18> 'int'
|   |       `-IntegerLiteral 0x1a5d9aef838 <col:17> 'int' 0
|   |-SwitchStmt 0x1a5d9aef928 <line:302:5, line:306:5>
|   | |-ImplicitCastExpr 0x1a5d9aef910 <line:302:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1a5d9aef8d8 <col:13> 'int' lvalue ParmVar 0x1a5d9aef4e0 'cmd' 'int'
|   | `-CompoundStmt 0x1a5d9aefae0 <col:18, line:306:5>
|   |   |-DefaultStmt 0x1a5d9aefab8 <line:303:5, col:12>
|   |   | `-NullStmt 0x1a5d9aefab0 <col:12>
|   |   `-BreakStmt 0x1a5d9aefad8 <line:305:9>
|   `-ReturnStmt 0x1a5d9aefb58 <line:307:5, col:16>
|     `-ImplicitCastExpr 0x1a5d9aefb40 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x1a5d9aefb20 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x1a5d9aefb00 <col:13> 'long' lvalue Var 0x1a5d9aef6f0 'ret' 'long'
|-FunctionDecl 0x1a5d9aefd58 <line:310:1, line:315:1> line:310:12 invalid linebuffer_gets 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1a5d9aefbb0 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x1a5d9aefc30 <col:36, col:42> col:42 used buf 'char *'
| |-ParmVarDecl 0x1a5d9aefcb0 <col:47, col:51> col:51 used size 'int'
| `-CompoundStmt 0x1a5d9afc190 <line:311:1, line:315:1>
|   `-IfStmt 0x1a5d9afbff8 <line:312:5, line:313:18>
|     |-OpaqueValueExpr 0x1a5d9afbfe0 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x1a5d9aefef8 <col:9, col:18>
|       `-ParenExpr 0x1a5d9aefed8 <col:16, col:18> 'int'
|         `-IntegerLiteral 0x1a5d9aefeb0 <col:17> 'int' 0
|-FunctionDecl 0x1a5d9afc2e0 <line:317:1, line:320:1> line:317:12 invalid linebuffer_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1a5d9afc1c0 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x1a5d9afc240 <col:36, col:48> col:48 used str 'const char *'
| `-CompoundStmt 0x1a5d9afc610 <line:318:1, line:320:1>
`-FunctionDecl 0x1a5d9afc410 <line:319:38> col:38 implicit used strlen 'unsigned long long (const char *)' extern
  `-ParmVarDecl 0x1a5d9afc4b0 <<invalid sloc>> <invalid sloc> 'const char *'
