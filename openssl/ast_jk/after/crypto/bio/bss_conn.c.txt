TranslationUnitDecl 0x1f574415ca8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1f574416540 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1f574416240 '__int128'
|-TypedefDecl 0x1f5744165b0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1f574416260 'unsigned __int128'
|-TypedefDecl 0x1f5744168e8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1f5744166a0 'struct __NSConstantString_tag'
|   `-Record 0x1f574416608 '__NSConstantString_tag'
|-TypedefDecl 0x1f574416958 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1f574415e80 'unsigned long long'
|-TypedefDecl 0x1f5744169f0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1f5744169b0 'char *'
|   `-BuiltinType 0x1f574415d40 'char'
|-TypedefDecl 0x1f574416a60 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1f5744169b0 'char *'
|   `-BuiltinType 0x1f574415d40 'char'
|-TypedefDecl 0x1f574416b20 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1f574415e80 'unsigned long long'
|-TypedefDecl 0x1f574416b90 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1f5744169b0 'char *'
|   `-BuiltinType 0x1f574415d40 'char'
|-FunctionDecl 0x1f575e1f3f0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1f575e1f490 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1f575e1f500 <col:21> Implicit
|-FunctionDecl 0x1f575e1f558 prev 0x1f575e1f3f0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1f575e1f280 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1f575e1f648 <col:21> Inherited Implicit
|-TypedefDecl 0x1f575e1f688 prev 0x1f574416958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1f574415e80 'unsigned long long'
|-TypedefDecl 0x1f575e1f730 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1f575e1f700 'size_t' sugar
|   |-Typedef 0x1f575e1f688 'size_t'
|   `-BuiltinType 0x1f574415e80 'unsigned long long'
|-TypedefDecl 0x1f575e1f7a0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1f574415de0 'long long'
|-TypedefDecl 0x1f575e1f810 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1f574415de0 'long long'
|-TypedefDecl 0x1f575e1f880 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1f574415e20 'unsigned short'
|-TypedefDecl 0x1f575e1f8f0 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1f574415e20 'unsigned short'
|-TypedefDecl 0x1f575e1f960 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1f574415e20 'unsigned short'
|-TypedefDecl 0x1f575e1f9d0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1f574415da0 'int'
|-TypedefDecl 0x1f575e1fa40 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1f574415dc0 'long'
|-TypedefDecl 0x1f575e1fab0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1f574415de0 'long long'
|-TypedefDecl 0x1f575e1fb40 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1f575e1fb10 '__time64_t' sugar
|   |-Typedef 0x1f575e1fab0 '__time64_t'
|   `-BuiltinType 0x1f574415de0 'long long'
|-FunctionDecl 0x1f575e1fcb8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1f575e1fed8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1f575e5f920 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1f575e20018 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1f575e20090 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1f575e20108 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1f575e20188 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1f575e5f6c0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1f575e5fa00 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1f575e5fac0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1f575e5fc30 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1f575e5fbe0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1f575e5fb80 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1f575e5faa0 'struct threadlocaleinfostruct'
|       `-Record 0x1f575e66730 'threadlocaleinfostruct'
|-TypedefDecl 0x1f575e5fd40 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1f575e5fcf0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1f575e5fc90 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1f575e5fb60 'struct threadmbcinfostruct'
|       `-Record 0x1f575e5fac0 'threadmbcinfostruct'
|-RecordDecl 0x1f575e5fd98 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1f575e5fe50 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1f575e5ff10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f575e5ffa0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1f575e60030 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1f575e600e8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1f575e60090 'struct localeinfo_struct' sugar
|   `-RecordType 0x1f575e5fef0 'struct localeinfo_struct'
|     `-Record 0x1f575e5fe50 'localeinfo_struct'
|-TypedefDecl 0x1f575e601c0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1f575e60170 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1f575e60090 'struct localeinfo_struct' sugar
|     `-RecordType 0x1f575e5fef0 'struct localeinfo_struct'
|       `-Record 0x1f575e5fe50 'localeinfo_struct'
|-RecordDecl 0x1f575e60238 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1f575e602f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f575e60368 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1f575e60428 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1f575e604c0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1f575e60530 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1f575e605e8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1f575e60590 'struct localerefcount' sugar
|   `-RecordType 0x1f575e602d0 'struct localerefcount'
|     `-Record 0x1f575e60238 'localerefcount'
|-RecordDecl 0x1f575e66730 prev 0x1f575e5fa00 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1f575e667b0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f575e66828 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1f575e66898 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1f575e66908 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1f575e66978 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1f575e66b38 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1f575e66ba8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1f575e66c18 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1f575e66c88 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1f575e66cf8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1f575e66d68 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1f575e66dc0 parent 0x1f574415ca8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1f575e66f50 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1f575e66fc0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1f575e67030 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1f575e670a0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1f575e67140 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1f575e671b0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1f575e672c0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1f575e673f8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1f575e674a8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1f575e67450 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1f575e5faa0 'struct threadlocaleinfostruct'
|     `-Record 0x1f575e66730 'threadlocaleinfostruct'
|-RecordDecl 0x1f575e67540 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1f575e67600 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1f575e67678 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1f575e67740 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1f575e677b0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1f575e67820 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1f575e67890 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1f575e67900 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1f575e67970 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1f575e679e0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1f575e67a90 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1f575e67a40 'struct _iobuf' sugar
|   `-RecordType 0x1f575e675e0 'struct _iobuf'
|     `-Record 0x1f575e67540 '_iobuf'
|-FunctionDecl 0x1f575e67cc8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1f575e67d98 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1f574415de0 'long long'
|-FunctionDecl 0x1f575e67f78 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575e67e00 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1f575e68270 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f575e68050 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1f575e680c8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1f575e68620 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1f575e68350 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1f575e683d0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1f575e68450 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1f575e64880 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f575e64710 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1f575e64ab0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1f575e64970 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1f575e64c60 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575e64b80 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1f575e64e50 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f575e65148 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1f575e64f20 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1f575e64fa0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1f575e65300 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575e65220 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1f575e654b0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575e653d0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1f575e65660 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575e65580 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1f575e718e8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575e71808 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1f575e71a78 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f575e71de0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1f575e71b40 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1f575e71c38 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1f575e72198 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1f575e71ec0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1f575e71f40 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1f575e71fb8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1f575e72358 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575e72278 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1f575e72620 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1f575e72430 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1f575e724b0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1f575e707d0 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f575e70bc8 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1f575e70c68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1f575e70cd0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1f575e70d48 prev 0x1f575e70bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1f575e709a0 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1f575e70a20 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1f575e70df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575e71270 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1f575e70fa0 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1f575e71020 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1f575e710a0 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1f575e71590 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1f575e71630 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1f575e71698 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1f575e71710 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1f575e727f0 prev 0x1f575e71590 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f575e71350 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1f575e713d0 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1f575e728e8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1f575e72ab0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f575e72930 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1f575e729b0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1f575e72d08 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f575e72b90 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1f575e72c08 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1f575e72f38 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f575e72de8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1f575e73230 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1f575e73010 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1f575e73088 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1f575e736c8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1f575e73768 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1f575e6f7c0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1f575e6f828 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1f575e6f890 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1f575e6f918 prev 0x1f575e736c8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1f575e73310 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1f575e73388 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575e73400 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575e73478 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1f575e6fe20 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f575e6fa08 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1f575e6fa80 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575e6faf8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575e6fb70 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575e6fbe8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1f575e702e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1f575e70010 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1f575e70090 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1f575e70108 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1f575e70398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575e6c838 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1f575e704e0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1f575e70560 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1f575e705e0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1f575e70658 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1f575e6cbe0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1f575e6cc80 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1f575e6cce8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1f575e6cd60 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1f575e6cdc8 prev 0x1f575e6cbe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1f575e6ca18 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1f575e6ca98 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1f575e6cfa8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1f575e6ce78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575e6d3e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575e6d0e8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1f575e6d168 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1f575e6d200 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f575e6d4a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575e74810 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f575e6d5e0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1f575e6d660 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1f575e74b00 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575e748e8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f575e74968 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1f575e749e0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575e74e60 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1f575e74be0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1f575e74cb8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1f575e75218 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1f575e74f38 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1f575e74fb8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1f575e75038 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1f575e75478 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1f575e752f8 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1f575e6d7e8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1f575e75548 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1f575e755c8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1f575e75648 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1f575e6da48 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1f575e6d8c8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1f575e6df08 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1f575e6dfa8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1f575e6e010 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1f575e6e078 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1f575e6e0e0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1f575e6e168 prev 0x1f575e6df08 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1f575e6db50 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1f575e6dbc8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575e6dc40 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575e6dcb8 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1f575e6e330 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575e6e250 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1f575e6e4c0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f575e6e648 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f575e6e970 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1f575e6e718 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1f575e6e7c0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f575e6ec98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1f575e6eb50 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1f575e6ed40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575e6ef60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575e6ee80 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1f575e6f180 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1f575e6f038 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1f575e6f330 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575e6f250 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1f575e6f580 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1f575e6f408 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1f575e6f488 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1f575e73800 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1f575e738a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1f575e73910 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1f575e73978 prev 0x1f575e73800 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1f575e6f660 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1f575e73a68 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1f575e73b98 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f575e73ab8 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1f575e73de8 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f575e73c70 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1f575e73ce8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1f575e73fa8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f575e73ec8 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1f575e741c8 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1f575e74080 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1f575e74418 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f575e742a0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1f575e74318 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1f575e745d8 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1f575e744f8 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1f575ec2100 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1f575e746b0 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1f575e74730 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1f575ec22c0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1f575ec21e0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1f575ec2550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1f575ec2470 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1f575ec25f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1f575ec27f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f575ec2718 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1f575ec2980 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f575ec2c28 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1f575ec2cc8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1f575ec2d38 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1f575ec2da0 prev 0x1f575ec2c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1f575ec2b10 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1f575ec2f78 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1f575ec2e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ec6380 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ec6148 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1f575ec61c0 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f575ec6430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ec6658 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f575ec6578 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1f575ec68a8 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ec6730 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1f575ec67a8 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ec6c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1f575ec6a40 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1f575ec6ac0 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1f575ec6d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ec6f40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f575ec6e60 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1f575ec51a8 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1f575ec5060 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1f575ec5390 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1f575ec57e0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1f575ec5458 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1f575ec54d8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1f575ec5558 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1f575ec55d0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1f575ec5c60 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f575ec58d0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ec5948 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ec59c0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575ec5a40 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1f575ec1020 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f575ec5d50 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ec5dc8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575ec5e48 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1f575ec11e8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f575ec1108 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1f575ec15c0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1f575ec1660 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f575ec16c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1f575ec1740 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1f575ec17a8 prev 0x1f575ec15c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1f575ec1380 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1f575ec1400 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1f575ec1988 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1f575ec1858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ec1d78 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ec1a98 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1f575ec1b18 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1f575ec1b90 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f575ec1e30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ec7180 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1f575ec1f78 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1f575ec7080 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1f575ec7478 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ec7260 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1f575ec72e0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1f575ec7358 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ec7908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f575ec7620 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1f575ec7698 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ec7718 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1f575ec79c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ec7f90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ec7c00 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1f575ec7c78 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ec7cf8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1f575ec7d70 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f575ec4050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ec43b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f575ec4198 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1f575ec4210 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575ec4290 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1f575ec4748 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ec4498 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1f575ec4510 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ec4590 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1f575ec4608 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ec49a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1f575ec4a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ec4d00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1f575ec4b90 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1f575eca0b0 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1f575ec4dd8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1f575ec4e50 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1f575eca330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1f575eca250 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1f575eca3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eca698 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f575eca520 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1f575eca598 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1f575ecaab0 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f575ecab50 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1f575ecabb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f575ecac20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f575ecaca0 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1f575ecad08 prev 0x1f575ecaab0 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f575eca770 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1f575eca7f0 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1f575eca868 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f575ecae08 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1f575ec90a0 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f575ec9140 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1f575ec91a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f575ec9210 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f575ec9290 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1f575ec92f8 prev 0x1f575ec90a0 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1f575ecae50 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1f575ecaed0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1f575ecaf48 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f575ec93f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1f575ec9658 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1f575ec9440 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1f575ec94c0 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1f575ec9538 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ec9950 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1f575ec9738 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1f575ec97b8 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1f575ec9830 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ec9c98 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f575ec9d38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f575ec9da0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f575ec9e18 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1f575ec9e80 prev 0x1f575ec9c98 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f575ec9a38 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1f575ec9ab0 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f575ec9f78 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1f575ec3178 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f575ec3218 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f575ec3280 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f575ec32f8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1f575ec3360 prev 0x1f575ec3178 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1f575ec9fc8 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1f575ec3040 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f575ec3458 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1f575ec3620 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f575ec34a8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1f575ec3520 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ec3878 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f575ec3700 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1f575ec3778 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ec3dd8 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f575ec3e78 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f575ec3ee0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1f575ec3f48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f575ec3fb0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f575ec8090 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1f575ec80f8 prev 0x1f575ec3dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f575ec3a18 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ec3a90 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ec3b10 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1f575ec3b88 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1f575ec82e8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1f575ec81b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ec8758 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f575ec8338 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ec83b0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ec8428 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ec84a8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1f575ec8520 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ec8b98 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f575ec8850 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ec88c8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ec8940 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ec89c0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1f575ec8a38 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ec8f68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f575ec8d50 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1f575ec8dc8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ec8e48 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1f575ec9020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ece560 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f575ece2b0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1f575ece328 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ece3a8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1f575ece420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1f575ece620 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ecea18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f575ece768 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ece7e0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ece860 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1f575ece8d8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ecedd8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1f575eceb08 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1f575eceb88 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1f575ecec00 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed21d0 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1f575ed2270 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f575ed22d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1f575ed2350 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1f575ed23b8 prev 0x1f575ed21d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1f575ecef80 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1f575ecf000 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1f575ed2598 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1f575ed2468 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ed29c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f575ed2a60 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1f575ed2ac8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1f575ed2b30 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f575ed2bb0 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1f575ed2c18 prev 0x1f575ed29c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1f575ed26a8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1f575ed2728 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed27a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1f575ed2e00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1f575ed2cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ecc0d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1f575ecc170 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f575ecc1d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1f575ecc240 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1f575ecc2c0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1f575ecc328 prev 0x1f575ecc0d0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1f575ed2e50 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1f575ed2ed0 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed2f48 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1f575ecc428 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1f575ecc5f0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f575ecc478 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1f575ecc4f0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ecc8e8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f575ecc6d0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ecc748 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575ecc7c8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1f575eccc80 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f575ecc9d0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ecca48 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eccac8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1f575eccb40 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575eccee8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1f575eccd68 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1f575eccde8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1f575ecf100 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f575eccfc8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1f575ecf3f0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1f575ecf1d8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1f575ecf250 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575ecf2d0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1f575ecf6e8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1f575ecf4d0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f575ecf550 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1f575ecf5c8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ecf948 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f575ecf7d0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1f575ecf848 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ecfcd8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1f575ecfa28 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1f575ecfaa0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ecfb20 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1f575ecfb98 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ecfea8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1f575ecfdc8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1f575ed0110 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1f575ecff80 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1f575ecfff8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed02d0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1f575ed01f0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1f575ed0460 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1f575ed06a8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed0530 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1f575ed05a8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ed0900 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed0788 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1f575ed0800 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ed0b58 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed09e0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1f575ed0a58 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ed0f08 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed0c38 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed0cb0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed0d28 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed4270 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed0ff0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed1068 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed4150 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed4568 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed4358 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed43d0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed4448 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed4860 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed4648 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1f575ed46c8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1f575ed4740 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ed4b58 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed4940 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f575ed49c0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1f575ed4a38 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ed4e50 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed4c38 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f575ed4cb8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1f575ed4d30 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ed32a0 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed4f30 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f575ed4fb0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed5028 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed50a0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed3638 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed3388 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f575ed3408 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed3480 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed34f8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed39d0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed3720 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f575ed37a0 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed3818 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed3890 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed3e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed3b80 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ed3c00 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed3c78 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f575ed3f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ecd3f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed4068 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ecd0e0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ecd160 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1f575ecd1d8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ecd790 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ecd4e0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ecd558 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ecd5d8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1f575ecd650 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ecdce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ecd980 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ecda00 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1f575ecda78 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f575ecdaf0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1f575ecdda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ed73b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ecdee8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ecdf60 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ecdfe0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1f575ece058 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed7180 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed77f8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed74b0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ed7528 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ed75a8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed7620 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed7698 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed7a68 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed78f0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1f575ed7968 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ed7cc0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed7b48 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1f575ed7bc0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ed7fb0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed7da0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed7e18 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed7e90 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed5290 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed8098 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed8110 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed5170 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed56e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed5438 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ed54b0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ed5530 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed55a8 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f575ed57a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ed5ba0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed58f0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ed5968 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ed59e8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1f575ed5a60 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ed8190 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ed5c90 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ed5d08 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ed5d80 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ed5e00 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1f575ed5e78 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ed86d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed8388 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ed8400 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ed8480 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed84f8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f575ed8570 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1f575ed8798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ed8c18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed88e8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ed8960 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ed89e0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1f575ed8a58 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed8ad0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed61d0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ed8d10 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1f575ed8d88 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ed8e00 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ed8e80 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1f575ed8ef8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ed8f70 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ed6590 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1f575ed62c8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f575ed6340 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1f575ed63c0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1f575ed6800 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1f575ed6690 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1f575ed6a18 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1f575ed6cf8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1f575ed6ae0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1f575ed6b58 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1f575ed6f40 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1f575ed6dd0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1f575ed1120 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1f575ed7010 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1f575ed12a8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1f575ed14e0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1f575ed1370 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1f575ed13e8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1f575ed1690 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1f575ed15b8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1f575ed1938 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1f575ed1760 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f575ed17d8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1f575ed1ce0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1f575ed1a10 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f575ed1a90 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1f575ed1b08 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1f575ed1fe0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1f575ed1dc0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1f575ed1e38 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1f575ed9358 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1f575ed20b8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1f575ed91b0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1f575ed9660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1f575ed94f0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1f575ed9708 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ed99c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1f575ed9848 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1f575ed9cd0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575ed9a98 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1f575ed9b10 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575ed9f20 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575ed9da8 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1f575ed9e20 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575eda1b0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f575ed9ff8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575eda360 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f575eda280 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575eda510 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f575eda430 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575eda8a8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575eda5e0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1f575eda658 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575eda6d0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edab98 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575eda988 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1f575edaa00 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edaa78 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edae88 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edac78 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f575edacf0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edad68 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edb1c0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edaf68 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1f575edafe0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edb058 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edb4c0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edb2a0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edb318 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edb710 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edb598 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edb610 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edb960 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edb7e8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edb860 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edbbb0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edba38 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edbab0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edbf68 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575edbc88 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f575edbd00 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575edbd78 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575edd3f0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edc048 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1f575edc0c0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575edc138 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edd1e0 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edd7a8 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edd4d8 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f575edd550 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edd5c8 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edda98 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edd888 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1f575edd900 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edd978 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575eddd88 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575eddb78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575eddbf0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575eddc68 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575ede110 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edde68 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575eddee0 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eddf58 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575eddfd0 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ede5a0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575ede218 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ede290 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ede308 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575ede380 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575edeaa8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575ede688 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ede700 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ede778 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ede7f0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ede868 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edee68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575edec58 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f575edecd0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eded48 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f575edef20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575edf430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edf120 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f575edf200 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575edf278 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575edf2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1f575edf4f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575edf7a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575edf630 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1f575edf6a8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575edf960 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f575edf880 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575edfc40 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edfa30 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f575edfaa8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edfb20 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575edfe98 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575edfd20 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575edfd98 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea3030 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575edff70 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575edffe8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575ee0060 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575ea33b8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575ea3110 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ea3188 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea3200 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea3278 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea3580 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f575ea34a0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575ea37c8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575ea3650 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea36c8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea3ad0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea38a0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea3918 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea3d20 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea3ba8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea3c20 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea3f70 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea3df8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea3e70 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea4338 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea4068 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea40e0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea4158 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea4628 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea4418 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea4490 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea4508 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea4918 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea4708 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea4780 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea47f8 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea4cd8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea49f8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1f575ea4a70 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea4ae8 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea5050 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea4db8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f575ea4e30 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea4ea8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea5340 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea5130 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f575ea51a8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea5220 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea5790 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea5420 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f575ea5498 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea5510 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea5588 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea5b20 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea5878 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1f575ea58f0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea5968 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea59e0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea5eb0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea5c08 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1f575ea5c80 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea5cf8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea5d70 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea6370 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea5f98 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ea6060 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea60d8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea6150 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea6700 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea6458 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ea64d0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea6548 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea65c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea6a90 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea67e8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ea6860 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea68d8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea6950 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea6f98 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea6b78 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ea6bf0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea6c68 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea6ce0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea6d58 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea2388 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea2048 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ea20c0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea2138 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea21b0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea2228 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea27b8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea2478 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ea24f0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea2568 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea25e0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea2658 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea2a20 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea28a8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea2920 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea2c70 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea2af8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea2b70 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea2f58 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea2d48 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea2dc0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea2e38 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea7408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea7160 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ea71d8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea7250 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea72c8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f575ea74c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ea7a38 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575ea7610 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ea7688 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea7700 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea7778 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea77f0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575ea7f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea7c30 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ea7ca8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea7d20 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea7d98 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f575ea7e10 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1f575ea0000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575ea0610 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea0148 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1f575ea01c0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea0238 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea02b0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea0328 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea03a0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea0b10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575ea08d8 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f575ea0950 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1f575ea0bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f575ea0cd8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f575eae348 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575ea0f90 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f575eae0f0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575eae168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1f575eae400 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f575eae518 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f575eaeab8 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575eae7d8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f575eae850 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575eae8c8 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1f575eaeb70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f575eaec90 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f575ea92a0 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575eaef50 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1f575eaefc8 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575eaf040 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f575ea9090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1f575ea9360 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1f575ea9480 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1f575ea9788 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1f575ea95a8 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f575ea9620 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea9698 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1f575eaa340 <line:37:1, line:44:1>
|   |-DeclStmt 0x1f575ea98d0 <line:38:5, col:21>
|   | `-VarDecl 0x1f575ea9868 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1f575ea9968 <line:39:5, col:13>
|   | `-VarDecl 0x1f575ea9900 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1f575ea9cc0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1f575ea9ca8 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f575ea9bc0 <col:34> '<builtin fn type>' Function 0x1f575ea9a58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1f575ea9bf8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1f575ea9868 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1f575ea9c30 <col:29> 'const wchar_t *' lvalue ParmVar 0x1f575ea9698 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1f575ea9f80 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1f575ea9cf0 <col:5> 'int' lvalue Var 0x1f575ea9900 '_Ret' 'int'
|   | `-CallExpr 0x1f575ea9ec0 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1f575ea9ea8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f575ea9d28 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f575ea6f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1f575ea9f08 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f575ea9d48 <col:27> 'wchar_t *' lvalue ParmVar 0x1f575ea95a8 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1f575ea9f20 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f575ea9d68 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f575ea9620 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1f575ea9f38 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f575ea9d88 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f575ea9698 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1f575ea9f50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1f575ea9e10 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1f575ea9de8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1f575ea9da8 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1f575ea9f68 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f575ea9e30 <col:59> 'va_list':'char *' lvalue Var 0x1f575ea9868 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1f575eaa2d0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1f575eaa2b8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f575eaa208 <col:34> '<builtin fn type>' Function 0x1f575eaa0a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1f575eaa240 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1f575ea9868 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1f575eaa330 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1f575eaa318 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1f575eaa2f8 <col:12> 'int' lvalue Var 0x1f575ea9900 '_Ret' 'int'
|-FunctionDecl 0x1f575ea9a58 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1f575ea9af8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1f575ea9b68 <col:34> Implicit
|-FunctionDecl 0x1f575eaa0a0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1f575eaa140 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1f575eaa1b0 <col:34> Implicit
|-FunctionDecl 0x1f575eaa638 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1f575eaa390 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f575eaa408 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eaa480 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575eaa4f8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1f575eaa920 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1f575eaa910 <line:51:5, col:62>
|     `-CallExpr 0x1f575eaa850 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1f575eaa838 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1f575eaa710 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f575ea6f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1f575eaa898 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f575eaa730 <col:27> 'wchar_t *' lvalue ParmVar 0x1f575eaa390 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1f575eaa8b0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1f575eaa750 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f575eaa408 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1f575eaa8c8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f575eaa770 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f575eaa480 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1f575eaa8e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1f575eaa7f8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1f575eaa7d0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1f575eaa790 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1f575eaa8f8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1f575eaa818 <col:59> 'va_list':'char *' lvalue ParmVar 0x1f575eaa4f8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1f575eaabc0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1f575eaa948 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f575eaa9c0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eaaa38 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575eaaab0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1f575ea8128 <line:61:1, line:68:1>
|   |-DeclStmt 0x1f575eaad10 <line:62:5, col:21>
|   | `-VarDecl 0x1f575eaaca8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1f575eaada8 <line:63:5, col:13>
|   | `-VarDecl 0x1f575eaad40 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1f575eaae50 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1f575eaae38 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f575eaadc0 <col:34> '<builtin fn type>' Function 0x1f575ea9a58 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1f575eaade0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1f575eaaca8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1f575eaae18 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1f575eaaab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1f575eab050 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1f575eaae80 <col:5> 'int' lvalue Var 0x1f575eaad40 '_Ret' 'int'
|   | `-CallExpr 0x1f575eaaf90 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1f575eaaf78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1f575eaaeb8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f575ea6f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1f575eaafd8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f575eaaed8 <col:27> 'wchar_t *' lvalue ParmVar 0x1f575eaa948 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1f575eaaff0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f575eaaef8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f575eaa9c0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1f575eab008 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f575eaaf18 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f575eaaa38 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1f575eab020 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1f575eaaf38 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1f575eaaab0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1f575eab038 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1f575eaaf58 <col:64> 'va_list':'char *' lvalue Var 0x1f575eaaca8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1f575ea80b8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1f575ea80a0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1f575eab070 <col:34> '<builtin fn type>' Function 0x1f575eaa0a0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1f575ea8080 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1f575eaaca8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1f575ea8118 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1f575ea8100 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1f575ea80e0 <col:12> 'int' lvalue Var 0x1f575eaad40 '_Ret' 'int'
|-FunctionDecl 0x1f575ea84b8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1f575ea8178 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1f575ea81f0 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575ea8268 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea82e0 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1f575ea8358 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1f575ea8740 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1f575ea8730 <line:75:5, col:67>
|     `-CallExpr 0x1f575ea8670 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1f575ea8658 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1f575ea8598 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1f575ea6f98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1f575ea86b8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f575ea85b8 <col:27> 'wchar_t *' lvalue ParmVar 0x1f575ea8178 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1f575ea86d0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1f575ea85d8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1f575ea81f0 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1f575ea86e8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f575ea85f8 <col:44> 'const wchar_t *' lvalue ParmVar 0x1f575ea8268 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1f575ea8700 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1f575ea8618 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1f575ea82e0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1f575ea8718 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1f575ea8638 <col:64> 'va_list':'char *' lvalue ParmVar 0x1f575ea8358 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1f575ea8988 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f575ea8768 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea87e0 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1f575ea8bd8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1f575ea8a60 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575ea8ad8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575ea8ec0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1f575ea8cb0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575ea8d28 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1f575ea8da0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1f575eaf268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575eaf0f0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1f575eaf168 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f575eaf318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eaf728 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575eaf518 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1f575eaf590 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575eaf608 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f575eaf7e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eafa98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575eaf920 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1f575eaf998 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575eafd80 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575eafb70 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1f575eafbe8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575eafc60 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575eb0170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575eaff20 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f575eaff98 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f575eb0220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eb06f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575eb0420 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb0498 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb0510 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f575eb07b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eb0a68 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575eb08f0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1f575eb0968 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575eb0d50 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575eb0b40 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb0bb8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575eb0c30 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575eb11f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575eb0ef0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb0f68 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eb0fe0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f575eb12b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eb1830 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575eb14b0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb1528 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eb15a0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb1618 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f575eb18f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eb1c40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575eb1a30 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb1aa8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575eb1b20 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575eb1fc8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575eb1d20 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb1d98 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eb1e10 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575eb1e88 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575eb22d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1f575eb21f0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1f575eb2378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eb26f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575eb2578 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb25f0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1f575eb27a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eb29c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1f575eb28e0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1f575eb2c08 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1f575eb2a90 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1f575eb2b08 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1f575eb2f08 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1f575eb2ce8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1f575eb2d60 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1f575eb32d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f575eb30a0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb3130 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1f575eb3388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eb3790 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f575eb34d0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1f575eb3548 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1f575eb35c0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1f575eb3bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1f575eb3930 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb39a8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb3a20 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1f575eb3ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eb4188 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1f575eb3df0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1f575eb3e68 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1f575eb3ee0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1f575eb3f58 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1f575eb43e0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1f575eb4270 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1f575eb4620 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1f575eb44b0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1f575eb4528 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1f575eb47d8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1f575eb46f8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1f575eb4ac8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1f575eb48a8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1f575eb4920 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1f575eb4d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1f575eb4c60 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1f575eb4de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1f575eb4ff8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1f575eb4f20 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1f575ead1c8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1f575eb50c8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1f575ead0d0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1f575ead410 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1f575ead2a0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1f575ead318 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1f575ead5c0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f575ead4e8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1f575ead768 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1f575ead690 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1f575ead918 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575ead838 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1f575eadac8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1f575ead9e8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1f575eade40 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f575eadba0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1f575eadc18 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eadc90 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575eadd08 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1f575eb8350 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f575eadf30 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1f575eadfa8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eae020 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eb8180 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575eb81f8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1f575eb8660 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1f575eb8440 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1f575eb84c0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1f575eb8540 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1f575eb8820 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1f575eb8740 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1f575eb8b10 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1f575eb88f0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1f575eb8970 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1f575eb89f0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1f575eb8cd0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1f575eb8bf0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1f575eb9048 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1f575eb8da8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1f575eb8e20 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1f575eb8e98 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1f575eb8f10 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1f575eb9308 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f575eb9190 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1f575eb9208 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1f575eb9640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1f575eb94c0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1f575eb9540 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1f575eb96f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1f575eb99a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f575eb9a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1f575eb9d88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1f575eb9c10 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1f575eb9c90 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1f575eb9e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1f575eba1a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f575eba240 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1f575eba4e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1f575eba400 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1f575eba588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1f575eba808 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f575eba8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1f575ebab50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1f575ebaa70 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1f575ebabf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1f575ebaed8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1f575ebadf8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1f575ebaf80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1f575ebd348 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1f575ebd1d0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1f575ebd248 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1f575ebd3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1f575ebd6b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1f575ebd758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1f575ebd990 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1f575ebdba0 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1f575ebda60 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1f575ebddf0 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1f575ebdc78 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x1f575ebdeb0 <.//openssl//file_jk/after\crypto\bio/bio_lcl.h:64:1, line:71:1> line:64:8 struct bio_addrinfo_st definition
| |-FieldDecl 0x1f575ebdf88 <line:65:5, col:9> col:9 bai_family 'int'
| |-FieldDecl 0x1f575ebdff8 <line:66:5, col:9> col:9 bai_socktype 'int'
| |-FieldDecl 0x1f575ebe068 <line:67:5, col:9> col:9 bai_protocol 'int'
| |-FieldDecl 0x1f575ebe0d0 <line:68:5, col:12> col:12 bai_addrlen 'size_t':'unsigned long long'
| |-RecordDecl 0x1f575ebe128 parent 0x1f574415ca8 <line:69:5, col:12> col:12 struct sockaddr
| |-FieldDecl 0x1f575f0d140 <col:5, col:22> col:22 bai_addr 'struct sockaddr *'
| `-FieldDecl 0x1f575f0d250 <line:70:5, col:29> col:29 bai_next 'struct bio_addrinfo_st *'
|-RecordDecl 0x1f575f0d2a8 <line:74:1, line:83:1> line:74:7 invalid union bio_addr_st definition
| |-FieldDecl 0x1f575f0d3b0 <line:75:5, col:21> col:21 invalid sa 'struct sockaddr':'struct sockaddr'
| |-RecordDecl 0x1f575f0d408 parent 0x1f574415ca8 <line:79:5, col:12> col:12 struct sockaddr_in
| `-FieldDecl 0x1f575f0d528 <col:5, col:24> col:24 invalid s_in 'struct sockaddr_in':'struct sockaddr_in'
|-RecordDecl 0x1f575f0d580 <line:91:9, line:112:1> line:91:16 struct bio_f_buffer_ctx_struct definition
| |-FieldDecl 0x1f575f0d658 <line:104:5, col:9> col:9 ibuf_size 'int'
| |-FieldDecl 0x1f575f0d6c8 <line:105:5, col:9> col:9 obuf_size 'int'
| |-FieldDecl 0x1f575f0d738 <line:106:5, col:11> col:11 ibuf 'char *'
| |-FieldDecl 0x1f575f0d7a8 <line:107:5, col:9> col:9 ibuf_len 'int'
| |-FieldDecl 0x1f575f0d818 <line:108:5, col:9> col:9 ibuf_off 'int'
| |-FieldDecl 0x1f575f0d888 <line:109:5, col:11> col:11 obuf 'char *'
| |-FieldDecl 0x1f575f0d8f8 <line:110:5, col:9> col:9 obuf_len 'int'
| `-FieldDecl 0x1f575f0d968 <line:111:5, col:9> col:9 obuf_off 'int'
|-TypedefDecl 0x1f575f0da18 <line:91:1, line:112:3> col:3 BIO_F_BUFFER_CTX 'struct bio_f_buffer_ctx_struct':'struct bio_f_buffer_ctx_struct'
| `-ElaboratedType 0x1f575f0d9c0 'struct bio_f_buffer_ctx_struct' sugar
|   `-RecordType 0x1f575f0d620 'struct bio_f_buffer_ctx_struct'
|     `-Record 0x1f575f0d580 'bio_f_buffer_ctx_struct'
|-RecordDecl 0x1f575f0da88 <line:114:1, line:132:1> line:114:8 invalid struct bio_st definition
| |-FieldDecl 0x1f575f0db58 <line:115:5, col:23> col:23 invalid method 'const int *'
| |-FieldDecl 0x1f575f10140 <line:117:5, col:74> col:12 callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
| |-FieldDecl 0x1f575f101b0 <line:118:5, col:11> col:11 cb_arg 'char *'
| |-FieldDecl 0x1f575f10220 <line:119:5, col:9> col:9 init 'int'
| |-FieldDecl 0x1f575f10290 <line:120:5, col:9> col:9 shutdown 'int'
| |-FieldDecl 0x1f575f10300 <line:121:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1f575f10370 <line:122:5, col:9> col:9 retry_reason 'int'
| |-FieldDecl 0x1f575f103e0 <line:123:5, col:9> col:9 num 'int'
| |-FieldDecl 0x1f575f10450 <line:124:5, col:11> col:11 ptr 'void *'
| |-FieldDecl 0x1f575f104d0 <line:125:5, col:20> col:20 next_bio 'struct bio_st *'
| |-FieldDecl 0x1f575f10550 <line:126:5, col:20> col:20 prev_bio 'struct bio_st *'
| |-FieldDecl 0x1f575f105c0 <line:127:5, col:9> col:9 references 'int'
| |-FieldDecl 0x1f575f10630 <line:128:5, col:14> col:14 invalid num_read 'int'
| |-FieldDecl 0x1f575f106a0 <line:129:5, col:14> col:14 invalid num_write 'int'
| |-FieldDecl 0x1f575f10710 <line:130:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x1f575f10780 <line:131:5, col:20> col:20 invalid lock 'int *'
|-VarDecl 0x1f575f107f0 <line:139:1, col:23> col:23 invalid bio_lookup_lock 'int *' extern
|-FunctionDecl 0x1f575f10a80 <line:141:1, col:58> col:5 invalid BIO_ADDR_make 'int (int *, const struct sockaddr *)'
| |-ParmVarDecl 0x1f575f10870 <col:19, col:29> col:29 invalid ap 'int *'
| `-ParmVarDecl 0x1f575f10960 <col:33, col:56> col:56 sa 'const struct sockaddr *'
|-FunctionDecl 0x1f575f10c50 <line:142:1, col:60> col:24 invalid BIO_ADDR_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x1f575f10b48 <col:42, col:58> col:58 invalid ap 'const int *'
|-FunctionDecl 0x1f575f10e50 <line:143:1, col:56> col:18 invalid BIO_ADDR_sockaddr_noconst 'struct sockaddr *(int *)'
| `-ParmVarDecl 0x1f575f10d10 <col:44, col:54> col:54 invalid ap 'int *'
|-FunctionDecl 0x1f575f10fe0 <line:144:1, col:52> col:11 invalid BIO_ADDR_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x1f575f10f10 <col:34, col:50> col:50 invalid ap 'const int *'
|-FunctionDecl 0x1f575f11148 <line:145:1, col:61> col:11 invalid BIO_ADDRINFO_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x1f575f110b0 <col:38, col:58> col:58 invalid bai 'const int *'
|-FunctionDecl 0x1f575f112b0 <line:146:1, col:69> col:24 invalid BIO_ADDRINFO_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x1f575f11208 <col:46, col:66> col:66 invalid bai 'const int *'
|-VarDecl 0x1f575f11370 <line:149:1, col:23> col:23 invalid bio_type_lock 'int *' extern
|-FunctionDecl 0x1f575f11470 <line:151:1, col:31> col:6 bio_sock_cleanup_int 'void (void)'
|-RecordDecl 0x1f575f11528 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:17:9, line:36:1> line:17:16 invalid struct bio_connect_st definition
| |-FieldDecl 0x1f575f115f8 <line:18:5, col:9> col:9 referenced state 'int'
| |-FieldDecl 0x1f575f11668 <line:19:5, col:9> col:9 referenced connect_family 'int'
| |-FieldDecl 0x1f575f116d8 <line:20:5, col:11> col:11 referenced param_hostname 'char *'
| |-FieldDecl 0x1f575f11748 <line:21:5, col:11> col:11 referenced param_service 'char *'
| |-FieldDecl 0x1f575f117b8 <line:22:5, col:9> col:9 referenced connect_mode 'int'
| |-FieldDecl 0x1f575f11828 <line:24:5, col:19> col:19 invalid addr_first 'int *'
| |-FieldDecl 0x1f575f11898 <line:25:5, col:25> col:25 invalid addr_iter 'const int *'
| `-FieldDecl 0x1f575f11908 <line:35:5, col:18> col:18 invalid info_callback 'int *'
|-TypedefDecl 0x1f575f119b8 <line:17:1, line:36:3> col:3 referenced BIO_CONNECT 'struct bio_connect_st':'struct bio_connect_st'
| `-ElaboratedType 0x1f575f11960 'struct bio_connect_st' sugar
|   `-RecordType 0x1f575f115c0 'struct bio_connect_st'
|     `-Record 0x1f575f11528 'bio_connect_st'
|-FunctionDecl 0x1f575f11c30 <line:38:1, col:55> col:12 invalid conn_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1f575f11a40 <col:23, col:28> col:28 invalid h 'int *'
| |-ParmVarDecl 0x1f575f11ac0 <col:31, col:43> col:43 buf 'const char *'
| `-ParmVarDecl 0x1f575f11b40 <col:48, col:52> col:52 num 'int'
|-FunctionDecl 0x1f575f11ef0 <line:39:1, col:49> col:12 invalid conn_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1f575f11d00 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x1f575f11d80 <col:30, col:36> col:36 buf 'char *'
| `-ParmVarDecl 0x1f575f11e00 <col:41, col:45> col:45 size 'int'
|-FunctionDecl 0x1f575f171d0 <line:40:1, col:45> col:12 invalid conn_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1f575f11fc0 <col:22, col:27> col:27 invalid h 'int *'
| `-ParmVarDecl 0x1f575f170f0 <col:30, col:42> col:42 str 'const char *'
|-FunctionDecl 0x1f575f17510 <line:41:1, col:61> col:13 invalid conn_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1f575f17298 <col:23, col:28> col:28 invalid h 'int *'
| |-ParmVarDecl 0x1f575f17318 <col:31, col:35> col:35 cmd 'int'
| |-ParmVarDecl 0x1f575f17398 <col:40, col:45> col:45 arg1 'long'
| `-ParmVarDecl 0x1f575f17418 <col:51, col:57> col:57 arg2 'void *'
|-FunctionDecl 0x1f575f17680 <line:42:1, col:27> col:12 invalid conn_new 'int (int *)' static
| `-ParmVarDecl 0x1f575f175e8 <col:21, col:26> col:26 invalid h 'int *'
|-FunctionDecl 0x1f575f177d8 <line:43:1, col:31> col:12 invalid conn_free 'int (int *)' static
| `-ParmVarDecl 0x1f575f17740 <col:22, col:27> col:27 invalid data 'int *'
|-FunctionDecl 0x1f575f17a80 <line:44:1, col:62> col:13 invalid conn_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1f575f17898 <col:32, col:37> col:37 invalid h 'int *'
| |-ParmVarDecl 0x1f575f17918 <col:40, col:44> col:44 cmd 'int'
| `-ParmVarDecl 0x1f575f17998 <col:49, <invalid sloc>> col:62 invalid 'int *'
|-FunctionDecl 0x1f575f17d60 <line:46:1, col:45> col:12 invalid conn_state 'int (int *, BIO_CONNECT *)' static
| |-ParmVarDecl 0x1f575f17b50 <col:23, col:28> col:28 invalid b 'int *'
| `-ParmVarDecl 0x1f575f17c48 <col:31, col:44> col:44 c 'BIO_CONNECT *'
|-FunctionDecl 0x1f575f17ee8 <line:47:1, col:40> col:13 invalid conn_close_socket 'void (int *)' static
| `-ParmVarDecl 0x1f575f17e28 <col:31, col:36> col:36 invalid data 'int *'
|-FunctionDecl 0x1f575f18100 <line:48:1, col:34> col:14 used BIO_CONNECT_new 'BIO_CONNECT *(void)'
|-FunctionDecl 0x1f575f182d8 <line:49:1, col:37> col:6 used BIO_CONNECT_free 'void (BIO_CONNECT *)'
| `-ParmVarDecl 0x1f575f181c8 <col:23, col:36> col:36 a 'BIO_CONNECT *'
|-VarDecl 0x1f575f183b0 <line:58:1, col:25> col:25 invalid methods_connectp 'const int' static
|-FunctionDecl 0x1f575f18638 <line:71:1, line:216:1> line:71:12 invalid conn_state 'int (int *, BIO_CONNECT *)' static
| |-ParmVarDecl 0x1f575f18520 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x1f575f18598 <col:31, col:44> col:44 used c 'BIO_CONNECT *'
| `-CompoundStmt 0x1f575f1b8c0 <line:72:1, line:216:1>
|   |-DeclStmt 0x1f575f18858 <line:73:5, col:20>
|   | |-VarDecl 0x1f575f18718 <col:5, col:16> col:9 used ret 'int' cinit
|   | | `-UnaryOperator 0x1f575f187a8 <col:15, col:16> 'int' prefix '-'
|   | |   `-IntegerLiteral 0x1f575f18780 <col:16> 'int' 1
|   | `-VarDecl 0x1f575f187d8 <col:5, col:19> col:19 used i 'int'
|   |-ForStmt 0x1f575f1b698 <line:79:5, line:208:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | `-CompoundStmt 0x1f575f1b678 <line:79:14, line:208:5>
|   |   |-SwitchStmt 0x1f575f18a88 <line:80:9, line:202:9>
|   |   | |-ImplicitCastExpr 0x1f575f18a70 <line:80:17, col:20> 'int' <LValueToRValue>
|   |   | | `-MemberExpr 0x1f575f18a40 <col:17, col:20> 'int' lvalue ->state 0x1f575f115f8
|   |   | |   `-ImplicitCastExpr 0x1f575f18a28 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1f575f18a08 <col:17> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   | `-CompoundStmt 0x1f575f1b280 <col:27, line:202:9>
|   |   |   |-CaseStmt 0x1f575f18ae8 <line:81:9, line:88:13>
|   |   |   | |-ConstantExpr 0x1f575f18ad0 <line:51:42> 'int'
|   |   |   | | `-IntegerLiteral 0x1f575f18aa8 <col:42> 'int' 1
|   |   |   | `-IfStmt 0x1f575f142c0 <line:82:13, line:88:13>
|   |   |   |   |-BinaryOperator 0x1f575f18d90 <line:82:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '&&'
|   |   |   |   | |-BinaryOperator 0x1f575f18c30 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:82:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |   |   | | |-ImplicitCastExpr 0x1f575f18c00 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:82:17, col:20> 'char *' <LValueToRValue>
|   |   |   |   | | | `-MemberExpr 0x1f575f18b48 <col:17, col:20> 'char *' lvalue ->param_hostname 0x1f575f116d8
|   |   |   |   | | |   `-ImplicitCastExpr 0x1f575f18b30 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   | | |     `-DeclRefExpr 0x1f575f18b10 <col:17> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   |   | | `-ImplicitCastExpr 0x1f575f18c18 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |   |   | |   `-ParenExpr 0x1f575f18be0 <col:17, col:27> 'void *'
|   |   |   |   | |     `-CStyleCastExpr 0x1f575f18bb8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   |   | |       `-IntegerLiteral 0x1f575f18b78 <col:26> 'int' 0
|   |   |   |   | `-BinaryOperator 0x1f575f18d70 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:82:46, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   |   |   |   |-ImplicitCastExpr 0x1f575f18d40 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:82:46, col:49> 'char *' <LValueToRValue>
|   |   |   |   |   | `-MemberExpr 0x1f575f18c88 <col:46, col:49> 'char *' lvalue ->param_service 0x1f575f11748
|   |   |   |   |   |   `-ImplicitCastExpr 0x1f575f18c70 <col:46> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   |   |     `-DeclRefExpr 0x1f575f18c50 <col:46> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   |   |   `-ImplicitCastExpr 0x1f575f18d58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   |   |   |   |     `-ParenExpr 0x1f575f18d20 <col:17, col:27> 'void *'
|   |   |   |   |       `-CStyleCastExpr 0x1f575f18cf8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |   |   |         `-IntegerLiteral 0x1f575f18cb8 <col:26> 'int' 0
|   |   |   |   `-CompoundStmt 0x1f575f142a0 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:82:72, line:88:13>
|   |   |   |     |-CallExpr 0x1f575f14190 <line:84:17, line:86:65> 'int'
|   |   |   |     | |-ImplicitCastExpr 0x1f575f14178 <line:84:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |     | | `-DeclRefExpr 0x1f575f18fd8 <col:17> 'int ()' Function 0x1f575f18f10 'ERR_add_error_data' 'int ()'
|   |   |   |     | |-IntegerLiteral 0x1f575f18ff8 <col:36> 'int' 4
|   |   |   |     | |-ImplicitCastExpr 0x1f575f141d8 <line:85:36> 'char *' <ArrayToPointerDecay>
|   |   |   |     | | `-StringLiteral 0x1f575f19058 <col:36> 'char [10]' lvalue "hostname="
|   |   |   |     | |-ImplicitCastExpr 0x1f575f141f0 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   |     | | `-MemberExpr 0x1f575f190b8 <col:49, col:52> 'char *' lvalue ->param_hostname 0x1f575f116d8
|   |   |   |     | |   `-ImplicitCastExpr 0x1f575f190a0 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |     | |     `-DeclRefExpr 0x1f575f19080 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   |     | |-ImplicitCastExpr 0x1f575f14208 <line:86:36> 'char *' <ArrayToPointerDecay>
|   |   |   |     | | `-StringLiteral 0x1f575f140c0 <col:36> 'char [10]' lvalue " service="
|   |   |   |     | `-ImplicitCastExpr 0x1f575f14220 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   |     |   `-MemberExpr 0x1f575f14120 <col:49, col:52> 'char *' lvalue ->param_service 0x1f575f11748
|   |   |   |     |     `-ImplicitCastExpr 0x1f575f14108 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |     |       `-DeclRefExpr 0x1f575f140e8 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   |     `-GotoStmt 0x1f575f14288 <line:87:17, col:22> 'exit_loop' 0x1f575f14238
|   |   |   |-BinaryOperator 0x1f575f14368 <line:89:13, line:52:42> 'int' '='
|   |   |   | |-MemberExpr 0x1f575f14310 <line:89:13, col:16> 'int' lvalue ->state 0x1f575f115f8
|   |   |   | | `-ImplicitCastExpr 0x1f575f142f8 <col:13> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1f575f142d8 <col:13> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   | `-IntegerLiteral 0x1f575f14340 <line:52:42> 'int' 2
|   |   |   |-BreakStmt 0x1f575f14388 <line:90:13>
|   |   |   |-CaseStmt 0x1f575f143d0 <line:92:9, line:123:13>
|   |   |   | |-ConstantExpr 0x1f575f143b8 <line:52:42> 'int'
|   |   |   | | `-IntegerLiteral 0x1f575f14390 <col:42> 'int' 2
|   |   |   | `-CompoundStmt 0x1f575f14978 <line:93:13, line:123:13>
|   |   |   |   |-DeclStmt 0x1f575f14478 <line:94:17, col:39>
|   |   |   |   | `-VarDecl 0x1f575f14410 <col:17, col:21> col:21 used family 'int'
|   |   |   |   |-SwitchStmt 0x1f575f14510 <line:95:17, line:118:17>
|   |   |   |   | |-ImplicitCastExpr 0x1f575f144f8 <line:95:25, col:28> 'int' <LValueToRValue>
|   |   |   |   | | `-MemberExpr 0x1f575f144c8 <col:25, col:28> 'int' lvalue ->connect_family 0x1f575f11668
|   |   |   |   | |   `-ImplicitCastExpr 0x1f575f144b0 <col:25> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   | |     `-DeclRefExpr 0x1f575f14490 <col:25> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   |   | `-CompoundStmt 0x1f575f14690 <col:44, line:118:17>
|   |   |   |   |   |-IfStmt 0x1f575f145a8 <line:97:21, line:107:21>
|   |   |   |   |   | |-IntegerLiteral 0x1f575f14530 <line:97:25> 'int' 1
|   |   |   |   |   | `-CompoundStmt 0x1f575f14590 <col:28, line:107:21>
|   |   |   |   |   |   `-GotoStmt 0x1f575f14578 <line:106:25, col:30> 'exit_loop' 0x1f575f14238
|   |   |   |   |   |-BreakStmt 0x1f575f145c0 <line:108:21>
|   |   |   |   |   |-BreakStmt 0x1f575f14600 <line:111:21>
|   |   |   |   |   |-BreakStmt 0x1f575f14628 <line:114:21>
|   |   |   |   |   |-DefaultStmt 0x1f575f14658 <line:115:17, col:24>
|   |   |   |   |   | `-NullStmt 0x1f575f14650 <col:24>
|   |   |   |   |   `-GotoStmt 0x1f575f14678 <line:117:21, col:26> 'exit_loop' 0x1f575f14238
|   |   |   |   `-IfStmt 0x1f575f14960 <line:119:17, line:122:26>
|   |   |   |     |-OpaqueValueExpr 0x1f575f14948 <<invalid sloc>> '_Bool'
|   |   |   |     `-GotoStmt 0x1f575f14930 <col:21, col:26> 'exit_loop' 0x1f575f14238
|   |   |   |-IfStmt 0x1f575f14ac8 <line:124:13, line:127:13>
|   |   |   | |-OpaqueValueExpr 0x1f575f14ab0 <<invalid sloc>> '_Bool'
|   |   |   | `-CompoundStmt 0x1f575f14a98 <line:124:40, line:127:13>
|   |   |   |   `-GotoStmt 0x1f575f14a80 <line:126:17, col:22> 'exit_loop' 0x1f575f14238
|   |   |   |-BinaryOperator 0x1f575f14be0 <line:129:13, line:53:42> 'int' '='
|   |   |   | |-MemberExpr 0x1f575f14b88 <line:129:13, col:16> 'int' lvalue ->state 0x1f575f115f8
|   |   |   | | `-ImplicitCastExpr 0x1f575f14b70 <col:13> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1f575f14b50 <col:13> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   | `-IntegerLiteral 0x1f575f14bb8 <line:53:42> 'int' 3
|   |   |   |-BreakStmt 0x1f575f14c00 <line:130:13>
|   |   |   |-CaseStmt 0x1f575f14c48 <line:132:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x1f575f14c30 <line:53:42> 'int'
|   |   |   | | `-IntegerLiteral 0x1f575f14c08 <col:42> 'int' 3
|   |   |   | `-NullStmt 0x1f575f1a268 <<invalid sloc>>
|   |   |   |-IfStmt 0x1f575f1a780 <line:136:13, line:143:13>
|   |   |   | |-OpaqueValueExpr 0x1f575f1a768 <<invalid sloc>> '_Bool'
|   |   |   | `-CompoundStmt 0x1f575f1a748 <line:136:45, line:143:13>
|   |   |   |   |-CallExpr 0x1f575f1a668 <line:138:17, line:140:65> 'int'
|   |   |   |   | |-ImplicitCastExpr 0x1f575f1a650 <line:138:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x1f575f1a4e8 <col:17> 'int ()' Function 0x1f575f18f10 'ERR_add_error_data' 'int ()'
|   |   |   |   | |-IntegerLiteral 0x1f575f1a508 <col:36> 'int' 4
|   |   |   |   | |-ImplicitCastExpr 0x1f575f1a6b0 <line:139:36> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | `-StringLiteral 0x1f575f1a530 <col:36> 'char [10]' lvalue "hostname="
|   |   |   |   | |-ImplicitCastExpr 0x1f575f1a6c8 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   |   | | `-MemberExpr 0x1f575f1a590 <col:49, col:52> 'char *' lvalue ->param_hostname 0x1f575f116d8
|   |   |   |   | |   `-ImplicitCastExpr 0x1f575f1a578 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   | |     `-DeclRefExpr 0x1f575f1a558 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   |   | |-ImplicitCastExpr 0x1f575f1a6e0 <line:140:36> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | `-StringLiteral 0x1f575f1a5c0 <col:36> 'char [10]' lvalue " service="
|   |   |   |   | `-ImplicitCastExpr 0x1f575f1a6f8 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   |   |   `-MemberExpr 0x1f575f1a620 <col:49, col:52> 'char *' lvalue ->param_service 0x1f575f11748
|   |   |   |   |     `-ImplicitCastExpr 0x1f575f1a608 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   |       `-DeclRefExpr 0x1f575f1a5e8 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   |   `-GotoStmt 0x1f575f1a730 <line:142:17, col:22> 'exit_loop' 0x1f575f14238
|   |   |   |-BinaryOperator 0x1f575f1a848 <line:145:13, line:54:42> 'int' '='
|   |   |   | |-MemberExpr 0x1f575f1a7f0 <line:145:13, col:16> 'int' lvalue ->state 0x1f575f115f8
|   |   |   | | `-ImplicitCastExpr 0x1f575f1a7d8 <col:13> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1f575f1a7b8 <col:13> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   | `-IntegerLiteral 0x1f575f1a820 <line:54:42> 'int' 4
|   |   |   |-BreakStmt 0x1f575f1a868 <line:146:13>
|   |   |   |-CaseStmt 0x1f575f1a8b0 <line:148:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x1f575f1a898 <line:54:42> 'int'
|   |   |   | | `-IntegerLiteral 0x1f575f1a870 <col:42> 'int' 4
|   |   |   | `-NullStmt 0x1f575f1a9e8 <<invalid sloc>>
|   |   |   |-IfStmt 0x1f575f13a80 <line:153:13, line:178:13> has_else
|   |   |   | |-BinaryOperator 0x1f575f1ad58 <line:153:17, col:24> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x1f575f1ad40 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1f575f1acf8 <col:17> 'int' lvalue Var 0x1f575f18718 'ret' 'int'
|   |   |   | | `-IntegerLiteral 0x1f575f1ad18 <col:24> 'int' 0
|   |   |   | |-CompoundStmt 0x1f575f13998 <col:27, line:176:13>
|   |   |   | | |-IfStmt 0x1f575f13958 <line:154:17, line:174:17> has_else
|   |   |   | | | |-CallExpr 0x1f575f1aec0 <line:154:21, col:46> 'int'
|   |   |   | | | | |-ImplicitCastExpr 0x1f575f1aea8 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | | | | `-DeclRefExpr 0x1f575f1ae68 <col:21> 'int ()' Function 0x1f575f1ada0 'BIO_sock_should_retry' 'int ()'
|   |   |   | | | | `-ImplicitCastExpr 0x1f575f1aee8 <col:43> 'int' <LValueToRValue>
|   |   |   | | | |   `-DeclRefExpr 0x1f575f1ae88 <col:43> 'int' lvalue Var 0x1f575f18718 'ret' 'int'
|   |   |   | | | |-CompoundStmt 0x1f575f131d0 <col:49, line:159:17>
|   |   |   | | | | |-BinaryOperator 0x1f575f1b0a0 <line:156:21, line:56:42> 'int' '='
|   |   |   | | | | | |-MemberExpr 0x1f575f1b048 <line:156:21, col:24> 'int' lvalue ->state 0x1f575f115f8
|   |   |   | | | | | | `-ImplicitCastExpr 0x1f575f1b030 <col:21> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | | | | |   `-DeclRefExpr 0x1f575f1b010 <col:21> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   | | | | | `-IntegerLiteral 0x1f575f1b078 <line:56:42> 'int' 6
|   |   |   | | | | `-CallExpr 0x1f575f131b0 <line:158:21, col:37> 'int'
|   |   |   | | | |   `-ImplicitCastExpr 0x1f575f13198 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | | |     `-DeclRefExpr 0x1f575f13178 <col:21> 'int ()' Function 0x1f575f130b0 'ERR_clear_error' 'int ()'
|   |   |   | | | `-IfStmt 0x1f575f13930 <line:159:24, line:174:17> has_else
|   |   |   | | |   |-OpaqueValueExpr 0x1f575f13918 <<invalid sloc>> '_Bool'
|   |   |   | | |   |-CompoundStmt 0x1f575f13618 <line:160:37, line:168:17>
|   |   |   | | |   | |-BinaryOperator 0x1f575f13598 <line:165:21, line:53:42> 'int' '='
|   |   |   | | |   | | |-MemberExpr 0x1f575f13540 <line:165:21, col:24> 'int' lvalue ->state 0x1f575f115f8
|   |   |   | | |   | | | `-ImplicitCastExpr 0x1f575f13528 <col:21> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | |   | | |   `-DeclRefExpr 0x1f575f13508 <col:21> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   | | |   | | `-IntegerLiteral 0x1f575f13570 <line:53:42> 'int' 3
|   |   |   | | |   | |-CallExpr 0x1f575f135f0 <line:166:21, col:37> 'int'
|   |   |   | | |   | | `-ImplicitCastExpr 0x1f575f135d8 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | |   | |   `-DeclRefExpr 0x1f575f135b8 <col:21> 'int ()' Function 0x1f575f130b0 'ERR_clear_error' 'int ()'
|   |   |   | | |   | `-BreakStmt 0x1f575f13610 <line:167:21>
|   |   |   | | |   `-CompoundStmt 0x1f575f13900 <line:168:24, line:174:17>
|   |   |   | | |     `-CallExpr 0x1f575f13838 <line:170:21, line:172:69> 'int'
|   |   |   | | |       |-ImplicitCastExpr 0x1f575f13820 <line:170:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | |       | `-DeclRefExpr 0x1f575f136b8 <col:21> 'int ()' Function 0x1f575f18f10 'ERR_add_error_data' 'int ()'
|   |   |   | | |       |-IntegerLiteral 0x1f575f136d8 <col:40> 'int' 4
|   |   |   | | |       |-ImplicitCastExpr 0x1f575f13880 <line:171:40> 'char *' <ArrayToPointerDecay>
|   |   |   | | |       | `-StringLiteral 0x1f575f13700 <col:40> 'char [10]' lvalue "hostname="
|   |   |   | | |       |-ImplicitCastExpr 0x1f575f13898 <col:53, col:56> 'char *' <LValueToRValue>
|   |   |   | | |       | `-MemberExpr 0x1f575f13760 <col:53, col:56> 'char *' lvalue ->param_hostname 0x1f575f116d8
|   |   |   | | |       |   `-ImplicitCastExpr 0x1f575f13748 <col:53> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | |       |     `-DeclRefExpr 0x1f575f13728 <col:53> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   | | |       |-ImplicitCastExpr 0x1f575f138b0 <line:172:40> 'char *' <ArrayToPointerDecay>
|   |   |   | | |       | `-StringLiteral 0x1f575f13790 <col:40> 'char [10]' lvalue " service="
|   |   |   | | |       `-ImplicitCastExpr 0x1f575f138c8 <col:53, col:56> 'char *' <LValueToRValue>
|   |   |   | | |         `-MemberExpr 0x1f575f137f0 <col:53, col:56> 'char *' lvalue ->param_service 0x1f575f11748
|   |   |   | | |           `-ImplicitCastExpr 0x1f575f137d8 <col:53> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | |             `-DeclRefExpr 0x1f575f137b8 <col:53> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   | | `-GotoStmt 0x1f575f13980 <line:175:17, col:22> 'exit_loop' 0x1f575f14238
|   |   |   | `-CompoundStmt 0x1f575f13a68 <line:176:20, line:178:13>
|   |   |   |   `-BinaryOperator 0x1f575f13a48 <line:177:17, line:55:42> 'int' '='
|   |   |   |     |-MemberExpr 0x1f575f139f0 <line:177:17, col:20> 'int' lvalue ->state 0x1f575f115f8
|   |   |   |     | `-ImplicitCastExpr 0x1f575f139d8 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |     |   `-DeclRefExpr 0x1f575f139b8 <col:17> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   |     `-IntegerLiteral 0x1f575f13a20 <line:55:42> 'int' 5
|   |   |   |-BreakStmt 0x1f575f13aa8 <line:179:13>
|   |   |   |-CaseStmt 0x1f575f13af0 <line:181:9, <invalid sloc>>
|   |   |   | |-ConstantExpr 0x1f575f13ad8 <line:56:42> 'int'
|   |   |   | | `-IntegerLiteral 0x1f575f13ab0 <col:42> 'int' 6
|   |   |   | `-NullStmt 0x1f575f13c60 <<invalid sloc>>
|   |   |   |-IfStmt 0x1f575f1b130 <line:183:13, line:55:42> has_else
|   |   |   | |-ImplicitCastExpr 0x1f575f13c88 <line:183:17> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1f575f13c68 <col:17> 'int' lvalue Var 0x1f575f187d8 'i' 'int'
|   |   |   | |-CompoundStmt 0x1f575f13fc8 <col:20, line:192:13>
|   |   |   | | |-CallExpr 0x1f575f13e80 <line:186:17, line:188:65> 'int'
|   |   |   | | | |-ImplicitCastExpr 0x1f575f13e68 <line:186:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | | | `-DeclRefExpr 0x1f575f13d00 <col:17> 'int ()' Function 0x1f575f18f10 'ERR_add_error_data' 'int ()'
|   |   |   | | | |-IntegerLiteral 0x1f575f13d20 <col:36> 'int' 4
|   |   |   | | | |-ImplicitCastExpr 0x1f575f13ec8 <line:187:36> 'char *' <ArrayToPointerDecay>
|   |   |   | | | | `-StringLiteral 0x1f575f13d48 <col:36> 'char [10]' lvalue "hostname="
|   |   |   | | | |-ImplicitCastExpr 0x1f575f13ee0 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   | | | | `-MemberExpr 0x1f575f13da8 <col:49, col:52> 'char *' lvalue ->param_hostname 0x1f575f116d8
|   |   |   | | | |   `-ImplicitCastExpr 0x1f575f13d90 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | | |     `-DeclRefExpr 0x1f575f13d70 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   | | | |-ImplicitCastExpr 0x1f575f13ef8 <line:188:36> 'char *' <ArrayToPointerDecay>
|   |   |   | | | | `-StringLiteral 0x1f575f13dd8 <col:36> 'char [10]' lvalue " service="
|   |   |   | | | `-ImplicitCastExpr 0x1f575f13f10 <col:49, col:52> 'char *' <LValueToRValue>
|   |   |   | | |   `-MemberExpr 0x1f575f13e38 <col:49, col:52> 'char *' lvalue ->param_service 0x1f575f11748
|   |   |   | | |     `-ImplicitCastExpr 0x1f575f13e20 <col:49> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   | | |       `-DeclRefExpr 0x1f575f13e00 <col:49> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   | | |-BinaryOperator 0x1f575f13f90 <line:190:17, col:23> 'int' '='
|   |   |   | | | |-DeclRefExpr 0x1f575f13f48 <col:17> 'int' lvalue Var 0x1f575f18718 'ret' 'int'
|   |   |   | | | `-IntegerLiteral 0x1f575f13f68 <col:23> 'int' 0
|   |   |   | | `-GotoStmt 0x1f575f13fb0 <line:191:17, col:22> 'exit_loop' 0x1f575f14238
|   |   |   | `-BinaryOperator 0x1f575f14080 <line:193:17, line:55:42> 'int' '='
|   |   |   |   |-MemberExpr 0x1f575f14028 <line:193:17, col:20> 'int' lvalue ->state 0x1f575f115f8
|   |   |   |   | `-ImplicitCastExpr 0x1f575f14010 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |   |   |   `-DeclRefExpr 0x1f575f13ff0 <col:17> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f18598 'c' 'BIO_CONNECT *'
|   |   |   |   `-IntegerLiteral 0x1f575f14058 <line:55:42> 'int' 5
|   |   |   |-BreakStmt 0x1f575f1b158 <line:194:13>
|   |   |   |-CaseStmt 0x1f575f1b1a0 <line:196:9, line:197:19>
|   |   |   | |-ConstantExpr 0x1f575f1b188 <line:55:42> 'int'
|   |   |   | | `-IntegerLiteral 0x1f575f1b160 <col:42> 'int' 5
|   |   |   | `-BinaryOperator 0x1f575f1b210 <line:197:13, col:19> 'int' '='
|   |   |   |   |-DeclRefExpr 0x1f575f1b1c8 <col:13> 'int' lvalue Var 0x1f575f18718 'ret' 'int'
|   |   |   |   `-IntegerLiteral 0x1f575f1b1e8 <col:19> 'int' 1
|   |   |   |-GotoStmt 0x1f575f1b230 <line:198:13, col:18> 'exit_loop' 0x1f575f14238
|   |   |   `-DefaultStmt 0x1f575f1b260 <line:199:9, line:201:18>
|   |   |     `-GotoStmt 0x1f575f1b248 <col:13, col:18> 'exit_loop' 0x1f575f14238
|   |   `-IfStmt 0x1f575f1b660 <line:204:9, line:207:9>
|   |     |-OpaqueValueExpr 0x1f575f1b648 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1f575f1b630 <line:204:25, line:207:9>
|   |       `-IfStmt 0x1f575f1b618 <line:205:13, line:206:22>
|   |         |-OpaqueValueExpr 0x1f575f1b600 <<invalid sloc>> '_Bool'
|   |         `-GotoStmt 0x1f575f1b5e8 <col:17, col:22> 'end' 0x1f575f1b598
|   |-LabelStmt 0x1f575f1b828 <line:211:2, col:11> 'exit_loop'
|   | `-NullStmt 0x1f575f1b820 <col:11>
|   `-LabelStmt 0x1f575f1b8a8 <line:214:2, line:215:16> 'end'
|     `-ReturnStmt 0x1f575f1b898 <col:5, col:16>
|       `-ImplicitCastExpr 0x1f575f1b880 <col:12, col:16> 'int' <LValueToRValue>
|         `-ParenExpr 0x1f575f1b860 <col:12, col:16> 'int' lvalue
|           `-DeclRefExpr 0x1f575f1b840 <col:13> 'int' lvalue Var 0x1f575f18718 'ret' 'int'
|-FunctionDecl 0x1f575f1b988 prev 0x1f575f18100 <line:218:1, line:227:1> line:218:14 used BIO_CONNECT_new 'BIO_CONNECT *(void)'
| `-CompoundStmt 0x1f575f1c050 <line:219:1, line:227:1>
|   |-DeclStmt 0x1f575f1baa0 <line:220:5, col:21>
|   | `-VarDecl 0x1f575f1ba38 <col:5, col:18> col:18 used ret 'BIO_CONNECT *'
|   |-IfStmt 0x1f575f1beb8 <line:222:5, line:223:21>
|   | |-BinaryOperator 0x1f575f1bdc8 <line:222:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ParenExpr 0x1f575f1bd08 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:222:9, col:44> 'BIO_CONNECT *'
|   | | | `-BinaryOperator 0x1f575f1bce8 <col:10, col:43> 'BIO_CONNECT *' '='
|   | | |   |-DeclRefExpr 0x1f575f1bab8 <col:10> 'BIO_CONNECT *' lvalue Var 0x1f575f1ba38 'ret' 'BIO_CONNECT *'
|   | | |   `-ImplicitCastExpr 0x1f575f1bcd0 <col:16, col:43> 'BIO_CONNECT *' <IntegralToPointer>
|   | | |     `-CallExpr 0x1f575f1bca8 <col:16, col:43> 'int'
|   | | |       |-ImplicitCastExpr 0x1f575f1bc90 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   | | |       | `-DeclRefExpr 0x1f575f1bbe0 <col:16> 'int ()' Function 0x1f575f1bb18 'OPENSSL_zalloc' 'int ()'
|   | | |       `-UnaryExprOrTypeTraitExpr 0x1f575f1bc70 <col:31, col:42> 'unsigned long long' sizeof
|   | | |         `-ParenExpr 0x1f575f1bc50 <col:37, col:42> 'BIO_CONNECT':'struct bio_connect_st' lvalue
|   | | |           `-UnaryOperator 0x1f575f1bc38 <col:38, col:39> 'BIO_CONNECT':'struct bio_connect_st' lvalue prefix '*' cannot overflow
|   | | |             `-ImplicitCastExpr 0x1f575f1bc20 <col:39> 'BIO_CONNECT *' <LValueToRValue>
|   | | |               `-DeclRefExpr 0x1f575f1bc00 <col:39> 'BIO_CONNECT *' lvalue Var 0x1f575f1ba38 'ret' 'BIO_CONNECT *' non_odr_use_unevaluated
|   | | `-ImplicitCastExpr 0x1f575f1bdb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_CONNECT *' <BitCast>
|   | |   `-ParenExpr 0x1f575f1bd90 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f575f1bd68 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f575f1bd28 <col:26> 'int' 0
|   | `-ReturnStmt 0x1f575f1bea8 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:223:9, col:21>
|   |   `-ImplicitCastExpr 0x1f575f1be90 <col:16, col:21> 'BIO_CONNECT *' <NullToPointer>
|   |     `-ParenExpr 0x1f575f1be70 <col:16, col:21> 'void *'
|   |       `-ParenExpr 0x1f575f1be50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1f575f1be28 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1f575f1bde8 <col:26> 'int' 0
|   |-BinaryOperator 0x1f575f1bf60 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:224:5, line:51:42> 'int' '='
|   | |-MemberExpr 0x1f575f1bf08 <line:224:5, col:10> 'int' lvalue ->state 0x1f575f115f8
|   | | `-ImplicitCastExpr 0x1f575f1bef0 <col:5> 'BIO_CONNECT *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1f575f1bed0 <col:5> 'BIO_CONNECT *' lvalue Var 0x1f575f1ba38 'ret' 'BIO_CONNECT *'
|   | `-IntegerLiteral 0x1f575f1bf38 <line:51:42> 'int' 1
|   `-ReturnStmt 0x1f575f1c040 <line:226:5, col:16>
|     `-ImplicitCastExpr 0x1f575f1c028 <col:12, col:16> 'BIO_CONNECT *' <LValueToRValue>
|       `-ParenExpr 0x1f575f1c008 <col:12, col:16> 'BIO_CONNECT *' lvalue
|         `-DeclRefExpr 0x1f575f1bfe8 <col:13> 'BIO_CONNECT *' lvalue Var 0x1f575f1ba38 'ret' 'BIO_CONNECT *'
|-FunctionDecl 0x1f575f1c168 prev 0x1f575f182d8 <line:229:1, line:238:1> line:229:6 used BIO_CONNECT_free 'void (BIO_CONNECT *)'
| |-ParmVarDecl 0x1f575f1c090 <col:23, col:36> col:36 used a 'BIO_CONNECT *'
| `-CompoundStmt 0x1f575f1c7c0 <line:230:1, line:238:1>
|   |-IfStmt 0x1f575f1c318 <line:231:5, line:232:9>
|   | |-BinaryOperator 0x1f575f1c2e8 <line:231:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1f575f1c2b8 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:231:9> 'BIO_CONNECT *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f575f1c210 <col:9> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f1c090 'a' 'BIO_CONNECT *'
|   | | `-ImplicitCastExpr 0x1f575f1c2d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_CONNECT *' <BitCast>
|   | |   `-ParenExpr 0x1f575f1c298 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f575f1c270 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f575f1c230 <col:26> 'int' 0
|   | `-ReturnStmt 0x1f575f1c308 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:232:9>
|   |-CallExpr 0x1f575f1c4c0 <line:234:5, col:35> 'int'
|   | |-ImplicitCastExpr 0x1f575f1c4a8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f575f1c420 <col:5> 'int ()' Function 0x1f575f1c358 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1f575f1c4e8 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1f575f1c478 <col:18, col:21> 'char *' lvalue ->param_hostname 0x1f575f116d8
|   |     `-ImplicitCastExpr 0x1f575f1c460 <col:18> 'BIO_CONNECT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f575f1c440 <col:18> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f1c090 'a' 'BIO_CONNECT *'
|   |-CallExpr 0x1f575f1c5a0 <line:235:5, col:34> 'int'
|   | |-ImplicitCastExpr 0x1f575f1c588 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1f575f1c500 <col:5> 'int ()' Function 0x1f575f1c358 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1f575f1c5c8 <col:18, col:21> 'char *' <LValueToRValue>
|   |   `-MemberExpr 0x1f575f1c558 <col:18, col:21> 'char *' lvalue ->param_service 0x1f575f11748
|   |     `-ImplicitCastExpr 0x1f575f1c540 <col:18> 'BIO_CONNECT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f575f1c520 <col:18> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f1c090 'a' 'BIO_CONNECT *'
|   `-CallExpr 0x1f575f1c780 <line:237:5, col:19> 'int'
|     |-ImplicitCastExpr 0x1f575f1c768 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1f575f1c728 <col:5> 'int ()' Function 0x1f575f1c358 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x1f575f1c7a8 <col:18> 'BIO_CONNECT *' <LValueToRValue>
|       `-DeclRefExpr 0x1f575f1c748 <col:18> 'BIO_CONNECT *' lvalue ParmVar 0x1f575f1c090 'a' 'BIO_CONNECT *'
|-FunctionDecl 0x1f575f1c8c0 <line:240:1, line:243:1> line:240:19 invalid BIO_s_connect 'const int *(void)'
| `-CompoundStmt 0x1f575f1c978 <line:241:1, line:243:1>
|-FunctionDecl 0x1f575f1ca38 <line:245:1, line:254:1> line:245:12 invalid conn_new 'int (int *)' static
| |-ParmVarDecl 0x1f575f1c9a0 <col:21, col:26> col:26 invalid bi 'int *'
| `-CompoundStmt 0x1f575f1cdb8 <line:246:1, line:254:1>
|   `-IfStmt 0x1f575f1cd90 <line:250:5, line:253:18> has_else
|     |-OpaqueValueExpr 0x1f575f1cd78 <<invalid sloc>> '_Bool'
|     |-ReturnStmt 0x1f575f1cd10 <line:251:9, col:18>
|     | `-ParenExpr 0x1f575f1ccf0 <col:16, col:18> 'int'
|     |   `-IntegerLiteral 0x1f575f1ccc8 <col:17> 'int' 0
|     `-ReturnStmt 0x1f575f1cd68 <line:253:9, col:18>
|       `-ParenExpr 0x1f575f1cd48 <col:16, col:18> 'int'
|         `-IntegerLiteral 0x1f575f1cd20 <col:17> 'int' 1
|-FunctionDecl 0x1f575f1ce78 <line:256:1, line:268:1> line:256:13 invalid conn_close_socket 'void (int *)' static
| |-ParmVarDecl 0x1f575f1cde8 <col:31, col:36> col:36 invalid bio 'int *'
| `-CompoundStmt 0x1f575f1d2c0 <line:257:1, line:268:1>
|   |-DeclStmt 0x1f575f1cfb0 <line:258:5, col:19>
|   | `-VarDecl 0x1f575f1cf48 <col:5, col:18> col:18 used c 'BIO_CONNECT *'
|   `-IfStmt 0x1f575f1d2a8 <line:261:5, line:267:5>
|     |-OpaqueValueExpr 0x1f575f1d290 <<invalid sloc>> '_Bool'
|     `-CompoundStmt 0x1f575f1d280 <line:261:42, line:267:5>
|-FunctionDecl 0x1f575f1d390 <line:270:1, line:286:1> line:270:12 invalid conn_free 'int (int *)' static
| |-ParmVarDecl 0x1f575f1d2f8 <col:22, col:27> col:27 invalid a 'int *'
| `-CompoundStmt 0x1f575f1d898 <line:271:1, line:286:1>
|   |-DeclStmt 0x1f575f1d4c8 <line:272:5, col:22>
|   | `-VarDecl 0x1f575f1d460 <col:5, col:18> col:18 used data 'BIO_CONNECT *'
|   |-IfStmt 0x1f575f1d5d8 <line:274:5, line:275:18>
|   | |-OpaqueValueExpr 0x1f575f1d5c0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1f575f1d5b0 <col:9, col:18>
|   |   `-ParenExpr 0x1f575f1d590 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1f575f1d568 <col:17> 'int' 0
|   |-IfStmt 0x1f575f1d828 <line:278:5, line:284:5>
|   | |-OpaqueValueExpr 0x1f575f1d810 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1f575f1d7f8 <line:278:22, line:284:5>
|   |   `-CallExpr 0x1f575f1d6e0 <line:280:9, col:30> 'void'
|   |     |-ImplicitCastExpr 0x1f575f1d6c8 <col:9> 'void (*)(BIO_CONNECT *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f575f1d628 <col:9> 'void (BIO_CONNECT *)' Function 0x1f575f1c168 'BIO_CONNECT_free' 'void (BIO_CONNECT *)'
|   |     `-ImplicitCastExpr 0x1f575f1d708 <col:26> 'BIO_CONNECT *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f575f1d648 <col:26> 'BIO_CONNECT *' lvalue Var 0x1f575f1d460 'data' 'BIO_CONNECT *'
|   `-ReturnStmt 0x1f575f1d888 <line:285:5, col:14>
|     `-ParenExpr 0x1f575f1d868 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1f575f1d840 <col:13> 'int' 1
|-FunctionDecl 0x1f575f1da88 <line:288:1, line:310:1> line:288:12 invalid conn_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1f575f1d8e0 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x1f575f1d960 <col:30, col:36> col:36 used out 'char *'
| |-ParmVarDecl 0x1f575f1d9e0 <col:41, col:45> col:45 used outl 'int'
| `-CompoundStmt 0x1f575f165b0 <line:289:1, line:310:1>
|   |-DeclStmt 0x1f575f1dc00 <line:290:5, col:16>
|   | `-VarDecl 0x1f575f1db70 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1f575f1dbd8 <col:15> 'int' 0
|   |-DeclStmt 0x1f575f1dc90 <line:291:5, col:22>
|   | `-VarDecl 0x1f575f1dc28 <col:5, col:18> col:18 used data 'BIO_CONNECT *'
|   |-IfStmt 0x1f575f1df18 <line:294:5, line:298:5>
|   | |-BinaryOperator 0x1f575f1dd88 <line:294:9, line:55:42> 'int' '!='
|   | | |-ImplicitCastExpr 0x1f575f1dd70 <line:294:9, col:15> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1f575f1dd18 <col:9, col:15> 'int' lvalue ->state 0x1f575f115f8
|   | | |   `-ImplicitCastExpr 0x1f575f1dd00 <col:9> 'BIO_CONNECT *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1f575f1dce0 <col:9> 'BIO_CONNECT *' lvalue Var 0x1f575f1dc28 'data' 'BIO_CONNECT *'
|   | | `-IntegerLiteral 0x1f575f1dd48 <line:55:42> 'int' 5
|   | `-CompoundStmt 0x1f575f1df00 <line:294:39, line:298:5>
|   |   `-IfStmt 0x1f575f1dee8 <line:296:9, line:297:24>
|   |     |-BinaryOperator 0x1f575f1de60 <line:296:13, col:20> 'int' '<='
|   |     | |-ImplicitCastExpr 0x1f575f1de48 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1f575f1de00 <col:13> 'int' lvalue Var 0x1f575f1db70 'ret' 'int'
|   |     | `-IntegerLiteral 0x1f575f1de20 <col:20> 'int' 0
|   |     `-ReturnStmt 0x1f575f1ded8 <line:297:13, col:24>
|   |       `-ImplicitCastExpr 0x1f575f1dec0 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x1f575f1dea0 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x1f575f1de80 <col:21> 'int' lvalue Var 0x1f575f1db70 'ret' 'int'
|   |-IfStmt 0x1f575f16530 <line:300:5, line:308:5>
|   | |-BinaryOperator 0x1f575f1e020 <line:300:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1f575f1dff0 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:300:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f575f1df30 <col:9> 'char *' lvalue ParmVar 0x1f575f1d960 'out' 'char *'
|   | | `-ImplicitCastExpr 0x1f575f1e008 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1f575f1dfd0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1f575f1dfa8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1f575f1df68 <col:26> 'int' 0
|   | `-CompoundStmt 0x1f575f16510 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:300:22, line:308:5>
|   |   |-CallExpr 0x1f575f160f8 <line:301:9, col:28> 'int'
|   |   | `-ImplicitCastExpr 0x1f575f160e0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x1f575f1e130 <col:9> 'int ()' Function 0x1f575f1e068 'clear_socket_error' 'int ()'
|   |   `-IfStmt 0x1f575f164f8 <line:304:9, line:307:9>
|   |     |-BinaryOperator 0x1f575f16320 <line:304:13, col:20> 'int' '<='
|   |     | |-ImplicitCastExpr 0x1f575f16308 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1f575f162c0 <col:13> 'int' lvalue Var 0x1f575f1db70 'ret' 'int'
|   |     | `-IntegerLiteral 0x1f575f162e0 <col:20> 'int' 0
|   |     `-CompoundStmt 0x1f575f164e8 <col:23, line:307:9>
|   `-ReturnStmt 0x1f575f165a0 <line:309:5, col:16>
|     `-ImplicitCastExpr 0x1f575f16588 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1f575f16568 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1f575f16548 <col:13> 'int' lvalue Var 0x1f575f1db70 'ret' 'int'
|-FunctionDecl 0x1f575f167a8 <line:312:1, line:332:1> line:312:12 invalid conn_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1f575f16600 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x1f575f16680 <col:31, col:43> col:43 used in 'const char *'
| |-ParmVarDecl 0x1f575f16700 <col:47, col:51> col:51 used inl 'int'
| `-CompoundStmt 0x1f575f241e8 <line:313:1, line:332:1>
|   |-DeclStmt 0x1f575f168f8 <line:314:5, col:12>
|   | `-VarDecl 0x1f575f16890 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x1f575f16988 <line:315:5, col:22>
|   | `-VarDecl 0x1f575f16920 <col:5, col:18> col:18 used data 'BIO_CONNECT *'
|   |-IfStmt 0x1f575f16c10 <line:318:5, line:322:5>
|   | |-BinaryOperator 0x1f575f16a80 <line:318:9, line:55:42> 'int' '!='
|   | | |-ImplicitCastExpr 0x1f575f16a68 <line:318:9, col:15> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1f575f16a10 <col:9, col:15> 'int' lvalue ->state 0x1f575f115f8
|   | | |   `-ImplicitCastExpr 0x1f575f169f8 <col:9> 'BIO_CONNECT *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1f575f169d8 <col:9> 'BIO_CONNECT *' lvalue Var 0x1f575f16920 'data' 'BIO_CONNECT *'
|   | | `-IntegerLiteral 0x1f575f16a40 <line:55:42> 'int' 5
|   | `-CompoundStmt 0x1f575f16bf8 <line:318:39, line:322:5>
|   |   `-IfStmt 0x1f575f16be0 <line:320:9, line:321:24>
|   |     |-BinaryOperator 0x1f575f16b58 <line:320:13, col:20> 'int' '<='
|   |     | |-ImplicitCastExpr 0x1f575f16b40 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1f575f16af8 <col:13> 'int' lvalue Var 0x1f575f16890 'ret' 'int'
|   |     | `-IntegerLiteral 0x1f575f16b18 <col:20> 'int' 0
|   |     `-ReturnStmt 0x1f575f16bd0 <line:321:13, col:24>
|   |       `-ImplicitCastExpr 0x1f575f16bb8 <col:20, col:24> 'int' <LValueToRValue>
|   |         `-ParenExpr 0x1f575f16b98 <col:20, col:24> 'int' lvalue
|   |           `-DeclRefExpr 0x1f575f16b78 <col:21> 'int' lvalue Var 0x1f575f16890 'ret' 'int'
|   |-CallExpr 0x1f575f16c60 <line:324:5, col:24> 'int'
|   | `-ImplicitCastExpr 0x1f575f16c48 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x1f575f16c28 <col:5> 'int ()' Function 0x1f575f1e068 'clear_socket_error' 'int ()'
|   |-IfStmt 0x1f575f17078 <line:327:5, line:330:5>
|   | |-BinaryOperator 0x1f575f16ea0 <line:327:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x1f575f16e88 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1f575f16e40 <col:9> 'int' lvalue Var 0x1f575f16890 'ret' 'int'
|   | | `-IntegerLiteral 0x1f575f16e60 <col:16> 'int' 0
|   | `-CompoundStmt 0x1f575f17068 <col:19, line:330:5>
|   `-ReturnStmt 0x1f575f241d8 <line:331:5, col:16>
|     `-ImplicitCastExpr 0x1f575f241c0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1f575f170b0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1f575f17090 <col:13> 'int' lvalue Var 0x1f575f16890 'ret' 'int'
|-FunctionDecl 0x1f575f24470 <line:334:1, line:499:1> line:334:13 invalid conn_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1f575f24240 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x1f575f242c0 <col:31, col:35> col:35 used cmd 'int'
| |-ParmVarDecl 0x1f575f24340 <col:40, col:45> col:45 used num 'long'
| |-ParmVarDecl 0x1f575f243c0 <col:50, col:56> col:56 used ptr 'void *'
| `-CompoundStmt 0x1f575f26330 <line:335:1, line:499:1>
|   |-DeclStmt 0x1f575f245c8 <line:337:5, col:12>
|   | `-VarDecl 0x1f575f24560 <col:5, col:10> col:10 used ip 'int *'
|   |-DeclStmt 0x1f575f24728 <line:338:5, col:29>
|   | `-VarDecl 0x1f575f24620 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\bio\bss_conn.c:338:18 used pptr 'const char **' cinit
|   |   `-ImplicitCastExpr 0x1f575f24710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char **' <NullToPointer>
|   |     `-ParenExpr 0x1f575f246f0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1f575f246c8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1f575f24688 <col:26> 'int' 0
|   |-DeclStmt 0x1f575f24800 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:339:5, col:17>
|   | `-VarDecl 0x1f575f24758 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1f575f247e8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1f575f247c0 <col:16> 'int' 1
|   |-DeclStmt 0x1f575f24890 <line:340:5, col:22>
|   | `-VarDecl 0x1f575f24828 <col:5, col:18> col:18 used data 'BIO_CONNECT *'
|   |-SwitchStmt 0x1f575f24930 <line:344:5, line:497:5>
|   | |-ImplicitCastExpr 0x1f575f24918 <line:344:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1f575f248e0 <col:13> 'int' lvalue ParmVar 0x1f575f242c0 'cmd' 'int'
|   | `-CompoundStmt 0x1f575f261e0 <col:18, line:497:5>
|   |   |-BinaryOperator 0x1f575f249c8 <line:346:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x1f575f24950 <col:9> 'long' lvalue Var 0x1f575f24758 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1f575f249b0 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1f575f24988 <col:15> 'int' 0
|   |   |-BinaryOperator 0x1f575f24a78 <line:347:9, line:51:42> 'int' '='
|   |   | |-MemberExpr 0x1f575f24a20 <line:347:9, col:15> 'int' lvalue ->state 0x1f575f115f8
|   |   | | `-ImplicitCastExpr 0x1f575f24a08 <col:9> 'BIO_CONNECT *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f575f249e8 <col:9> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   | `-IntegerLiteral 0x1f575f24a50 <line:51:42> 'int' 1
|   |   |-BreakStmt 0x1f575f24bd8 <line:352:9>
|   |   |-IfStmt 0x1f575f24d70 <line:355:9, line:358:19> has_else
|   |   | |-BinaryOperator 0x1f575f24c88 <line:355:13, line:55:42> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1f575f24c70 <line:355:13, col:19> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1f575f24c18 <col:13, col:19> 'int' lvalue ->state 0x1f575f115f8
|   |   | | |   `-ImplicitCastExpr 0x1f575f24c00 <col:13> 'BIO_CONNECT *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1f575f24be0 <col:13> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   | | `-IntegerLiteral 0x1f575f24c48 <line:55:42> 'int' 5
|   |   | |-NullStmt 0x1f575f24d68 <line:356:13>
|   |   | `-BinaryOperator 0x1f575f24d48 <line:358:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x1f575f24ce8 <col:13> 'long' lvalue Var 0x1f575f24758 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1f575f24d30 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1f575f24d08 <col:19> 'int' 1
|   |   |-BreakStmt 0x1f575f24d98 <line:359:9>
|   |   |-IfStmt 0x1f575f25998 <line:361:9, line:391:9> has_else
|   |   | |-BinaryOperator 0x1f575f24e78 <line:361:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1f575f24e60 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:361:13> 'void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1f575f24da0 <col:13> 'void *' lvalue ParmVar 0x1f575f243c0 'ptr' 'void *'
|   |   | | `-ParenExpr 0x1f575f24e40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   `-CStyleCastExpr 0x1f575f24e18 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     `-IntegerLiteral 0x1f575f24dd8 <col:26> 'int' 0
|   |   | |-CompoundStmt 0x1f575f258e0 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:361:26, line:389:9>
|   |   | | |-BinaryOperator 0x1f575f24f48 <line:362:13, col:35> 'const char **' '='
|   |   | | | |-DeclRefExpr 0x1f575f24e98 <col:13> 'const char **' lvalue Var 0x1f575f24620 'pptr' 'const char **'
|   |   | | | `-CStyleCastExpr 0x1f575f24f20 <col:20, col:35> 'const char **' <BitCast>
|   |   | | |   `-ImplicitCastExpr 0x1f575f24f08 <col:35> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | | |     `-DeclRefExpr 0x1f575f24ed0 <col:35> 'void *' lvalue ParmVar 0x1f575f243c0 'ptr' 'void *'
|   |   | | `-IfStmt 0x1f575f258b8 <line:363:13, line:388:13> has_else
|   |   | |   |-BinaryOperator 0x1f575f24ff8 <line:363:17, col:24> 'int' '=='
|   |   | |   | |-ImplicitCastExpr 0x1f575f24fc8 <col:17> 'long' <LValueToRValue>
|   |   | |   | | `-DeclRefExpr 0x1f575f24f68 <col:17> 'long' lvalue ParmVar 0x1f575f24340 'num' 'long'
|   |   | |   | `-ImplicitCastExpr 0x1f575f24fe0 <col:24> 'long' <IntegralCast>
|   |   | |   |   `-IntegerLiteral 0x1f575f24fa0 <col:24> 'int' 0
|   |   | |   |-CompoundStmt 0x1f575f25120 <col:27, line:365:13>
|   |   | |   | `-BinaryOperator 0x1f575f25100 <line:364:17, col:31> 'const char *' '='
|   |   | |   |   |-UnaryOperator 0x1f575f25050 <col:17, col:18> 'const char *' lvalue prefix '*' cannot overflow
|   |   | |   |   | `-ImplicitCastExpr 0x1f575f25038 <col:18> 'const char **' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x1f575f25018 <col:18> 'const char **' lvalue Var 0x1f575f24620 'pptr' 'const char **'
|   |   | |   |   `-ImplicitCastExpr 0x1f575f250e8 <col:25, col:31> 'const char *' <NoOp>
|   |   | |   |     `-ImplicitCastExpr 0x1f575f250d0 <col:25, col:31> 'char *' <LValueToRValue>
|   |   | |   |       `-MemberExpr 0x1f575f250a0 <col:25, col:31> 'char *' lvalue ->param_hostname 0x1f575f116d8
|   |   | |   |         `-ImplicitCastExpr 0x1f575f25088 <col:25> 'BIO_CONNECT *' <LValueToRValue>
|   |   | |   |           `-DeclRefExpr 0x1f575f25068 <col:25> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   | |   `-IfStmt 0x1f575f25890 <line:365:20, line:388:13> has_else
|   |   | |     |-BinaryOperator 0x1f575f251d0 <line:365:24, col:31> 'int' '=='
|   |   | |     | |-ImplicitCastExpr 0x1f575f25180 <col:24> 'long' <LValueToRValue>
|   |   | |     | | `-DeclRefExpr 0x1f575f25138 <col:24> 'long' lvalue ParmVar 0x1f575f24340 'num' 'long'
|   |   | |     | `-ImplicitCastExpr 0x1f575f25198 <col:31> 'long' <IntegralCast>
|   |   | |     |   `-IntegerLiteral 0x1f575f25158 <col:31> 'int' 1
|   |   | |     |-CompoundStmt 0x1f575f252f8 <col:34, line:367:13>
|   |   | |     | `-BinaryOperator 0x1f575f252d8 <line:366:17, col:31> 'const char *' '='
|   |   | |     |   |-UnaryOperator 0x1f575f25228 <col:17, col:18> 'const char *' lvalue prefix '*' cannot overflow
|   |   | |     |   | `-ImplicitCastExpr 0x1f575f25210 <col:18> 'const char **' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x1f575f251f0 <col:18> 'const char **' lvalue Var 0x1f575f24620 'pptr' 'const char **'
|   |   | |     |   `-ImplicitCastExpr 0x1f575f252c0 <col:25, col:31> 'const char *' <NoOp>
|   |   | |     |     `-ImplicitCastExpr 0x1f575f252a8 <col:25, col:31> 'char *' <LValueToRValue>
|   |   | |     |       `-MemberExpr 0x1f575f25278 <col:25, col:31> 'char *' lvalue ->param_service 0x1f575f11748
|   |   | |     |         `-ImplicitCastExpr 0x1f575f25260 <col:25> 'BIO_CONNECT *' <LValueToRValue>
|   |   | |     |           `-DeclRefExpr 0x1f575f25240 <col:25> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   | |     `-IfStmt 0x1f575f25868 <line:367:20, line:388:13> has_else
|   |   | |       |-BinaryOperator 0x1f575f25388 <line:367:24, col:31> 'int' '=='
|   |   | |       | |-ImplicitCastExpr 0x1f575f25358 <col:24> 'long' <LValueToRValue>
|   |   | |       | | `-DeclRefExpr 0x1f575f25310 <col:24> 'long' lvalue ParmVar 0x1f575f24340 'num' 'long'
|   |   | |       | `-ImplicitCastExpr 0x1f575f25370 <col:31> 'long' <IntegralCast>
|   |   | |       |   `-IntegerLiteral 0x1f575f25330 <col:31> 'int' 2
|   |   | |       |-CompoundStmt 0x1f575f25450 <col:34, line:369:13>
|   |   | |       `-IfStmt 0x1f575f25840 <col:20, line:388:13> has_else
|   |   | |         |-BinaryOperator 0x1f575f254d8 <line:369:24, col:31> 'int' '=='
|   |   | |         | |-ImplicitCastExpr 0x1f575f254a8 <col:24> 'long' <LValueToRValue>
|   |   | |         | | `-DeclRefExpr 0x1f575f25460 <col:24> 'long' lvalue ParmVar 0x1f575f24340 'num' 'long'
|   |   | |         | `-ImplicitCastExpr 0x1f575f254c0 <col:31> 'long' <IntegralCast>
|   |   | |         |   `-IntegerLiteral 0x1f575f25480 <col:31> 'int' 3
|   |   | |         |-CompoundStmt 0x1f575f25798 <col:34, line:386:13>
|   |   | |         `-CompoundStmt 0x1f575f25828 <col:20, line:388:13>
|   |   | |           `-BinaryOperator 0x1f575f25808 <line:387:17, col:23> 'long' '='
|   |   | |             |-DeclRefExpr 0x1f575f257a8 <col:17> 'long' lvalue Var 0x1f575f24758 'ret' 'long'
|   |   | |             `-ImplicitCastExpr 0x1f575f257f0 <col:23> 'long' <IntegralCast>
|   |   | |               `-IntegerLiteral 0x1f575f257c8 <col:23> 'int' 0
|   |   | `-CompoundStmt 0x1f575f25980 <line:389:16, line:391:9>
|   |   |   `-BinaryOperator 0x1f575f25960 <line:390:13, col:19> 'long' '='
|   |   |     |-DeclRefExpr 0x1f575f25900 <col:13> 'long' lvalue Var 0x1f575f24758 'ret' 'long'
|   |   |     `-ImplicitCastExpr 0x1f575f25948 <col:19> 'long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x1f575f25920 <col:19> 'int' 0
|   |   |-BreakStmt 0x1f575f259c0 <line:392:9>
|   |   |-IfStmt 0x1f575f1eff8 <line:394:9, line:427:9>
|   |   | |-BinaryOperator 0x1f575f25a88 <line:394:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1f575f25a70 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:394:13> 'void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1f575f259c8 <col:13> 'void *' lvalue ParmVar 0x1f575f243c0 'ptr' 'void *'
|   |   | | `-ParenExpr 0x1f575f25a50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   `-CStyleCastExpr 0x1f575f25a28 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     `-IntegerLiteral 0x1f575f259e8 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x1f575f1efe0 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:394:26, line:427:9>
|   |   |   `-IfStmt 0x1f575f1efb8 <line:396:13, line:426:13> has_else
|   |   |     |-BinaryOperator 0x1f575f25b48 <line:396:17, col:24> 'int' '=='
|   |   |     | |-ImplicitCastExpr 0x1f575f25b18 <col:17> 'long' <LValueToRValue>
|   |   |     | | `-DeclRefExpr 0x1f575f25ad0 <col:17> 'long' lvalue ParmVar 0x1f575f24340 'num' 'long'
|   |   |     | `-ImplicitCastExpr 0x1f575f25b30 <col:24> 'long' <IntegralCast>
|   |   |     |   `-IntegerLiteral 0x1f575f25af0 <col:24> 'int' 0
|   |   |     |-CompoundStmt 0x1f575f1e210 <col:27, line:410:13>
|   |   |     | |-DeclStmt 0x1f575f25c68 <line:397:17, col:57>
|   |   |     | | `-VarDecl 0x1f575f25b80 <col:17, col:44> col:23 used hold_service 'char *' cinit
|   |   |     | |   `-ImplicitCastExpr 0x1f575f25c50 <col:38, col:44> 'char *' <LValueToRValue>
|   |   |     | |     `-MemberExpr 0x1f575f25c20 <col:38, col:44> 'char *' lvalue ->param_service 0x1f575f11748
|   |   |     | |       `-ImplicitCastExpr 0x1f575f25c08 <col:38> 'BIO_CONNECT *' <LValueToRValue>
|   |   |     | |         `-DeclRefExpr 0x1f575f25be8 <col:38> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   |     | |-CallExpr 0x1f575f25d20 <line:402:17, col:50> 'int'
|   |   |     | | |-ImplicitCastExpr 0x1f575f25d08 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | | | `-DeclRefExpr 0x1f575f25c80 <col:17> 'int ()' Function 0x1f575f1c358 'OPENSSL_free' 'int ()'
|   |   |     | | `-ImplicitCastExpr 0x1f575f25d48 <col:30, col:36> 'char *' <LValueToRValue>
|   |   |     | |   `-MemberExpr 0x1f575f25cd8 <col:30, col:36> 'char *' lvalue ->param_hostname 0x1f575f116d8
|   |   |     | |     `-ImplicitCastExpr 0x1f575f25cc0 <col:30> 'BIO_CONNECT *' <LValueToRValue>
|   |   |     | |       `-DeclRefExpr 0x1f575f25ca0 <col:30> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   |     | |-BinaryOperator 0x1f575f25e68 <line:403:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'char *' '='
|   |   |     | | |-MemberExpr 0x1f575f25d98 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:403:17, col:23> 'char *' lvalue ->param_hostname 0x1f575f116d8
|   |   |     | | | `-ImplicitCastExpr 0x1f575f25d80 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |     | | |   `-DeclRefExpr 0x1f575f25d60 <col:17> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   |     | | `-ImplicitCastExpr 0x1f575f25e50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |   |     | |   `-ParenExpr 0x1f575f25e30 <col:17, col:27> 'void *'
|   |   |     | |     `-CStyleCastExpr 0x1f575f25e08 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     | |       `-IntegerLiteral 0x1f575f25dc8 <col:26> 'int' 0
|   |   |     | `-IfStmt 0x1f575f1e1f8 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:408:17, line:409:46>
|   |   |     |   |-BinaryOperator 0x1f575f261a8 <line:408:21, col:43> 'int' '!='
|   |   |     |   | |-ImplicitCastExpr 0x1f575f26178 <col:21> 'char *' <LValueToRValue>
|   |   |     |   | | `-DeclRefExpr 0x1f575f260d8 <col:21> 'char *' lvalue Var 0x1f575f25b80 'hold_service' 'char *'
|   |   |     |   | `-ImplicitCastExpr 0x1f575f26190 <col:37, col:43> 'char *' <LValueToRValue>
|   |   |     |   |   `-MemberExpr 0x1f575f26148 <col:37, col:43> 'char *' lvalue ->param_service 0x1f575f11748
|   |   |     |   |     `-ImplicitCastExpr 0x1f575f26130 <col:37> 'BIO_CONNECT *' <LValueToRValue>
|   |   |     |   |       `-DeclRefExpr 0x1f575f26110 <col:37> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   |     |   `-CallExpr 0x1f575f1e1b8 <line:409:21, col:46> 'int'
|   |   |     |     |-ImplicitCastExpr 0x1f575f1e1a0 <col:21> 'int (*)()' <FunctionToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x1f575f1e160 <col:21> 'int ()' Function 0x1f575f1c358 'OPENSSL_free' 'int ()'
|   |   |     |     `-ImplicitCastExpr 0x1f575f1e1e0 <col:34> 'char *' <LValueToRValue>
|   |   |     |       `-DeclRefExpr 0x1f575f1e180 <col:34> 'char *' lvalue Var 0x1f575f25b80 'hold_service' 'char *'
|   |   |     `-IfStmt 0x1f575f1ef90 <line:410:20, line:426:13> has_else
|   |   |       |-BinaryOperator 0x1f575f1e2b8 <line:410:24, col:31> 'int' '=='
|   |   |       | |-ImplicitCastExpr 0x1f575f1e288 <col:24> 'long' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x1f575f1e240 <col:24> 'long' lvalue ParmVar 0x1f575f24340 'num' 'long'
|   |   |       | `-ImplicitCastExpr 0x1f575f1e2a0 <col:31> 'long' <IntegralCast>
|   |   |       |   `-IntegerLiteral 0x1f575f1e260 <col:31> 'int' 1
|   |   |       |-CompoundStmt 0x1f575f1e5e0 <col:34, line:413:13>
|   |   |       | |-CallExpr 0x1f575f1e378 <line:411:17, col:49> 'int'
|   |   |       | | |-ImplicitCastExpr 0x1f575f1e360 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | | | `-DeclRefExpr 0x1f575f1e2d8 <col:17> 'int ()' Function 0x1f575f1c358 'OPENSSL_free' 'int ()'
|   |   |       | | `-ImplicitCastExpr 0x1f575f1e3a0 <col:30, col:36> 'char *' <LValueToRValue>
|   |   |       | |   `-MemberExpr 0x1f575f1e330 <col:30, col:36> 'char *' lvalue ->param_service 0x1f575f11748
|   |   |       | |     `-ImplicitCastExpr 0x1f575f1e318 <col:30> 'BIO_CONNECT *' <LValueToRValue>
|   |   |       | |       `-DeclRefExpr 0x1f575f1e2f8 <col:30> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   |       | `-BinaryOperator 0x1f575f1e5c0 <line:412:17, col:53> 'char *' '='
|   |   |       |   |-MemberExpr 0x1f575f1e3f0 <col:17, col:23> 'char *' lvalue ->param_service 0x1f575f11748
|   |   |       |   | `-ImplicitCastExpr 0x1f575f1e3d8 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |       |   |   `-DeclRefExpr 0x1f575f1e3b8 <col:17> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   |       |   `-ImplicitCastExpr 0x1f575f1e5a8 <col:39, col:53> 'char *' <IntegralToPointer>
|   |   |       |     `-CallExpr 0x1f575f1e568 <col:39, col:53> 'int'
|   |   |       |       |-ImplicitCastExpr 0x1f575f1e550 <col:39> 'int (*)()' <FunctionToPointerDecay>
|   |   |       |       | `-DeclRefExpr 0x1f575f1e510 <col:39> 'int ()' Function 0x1f575f1e448 'BUF_strdup' 'int ()'
|   |   |       |       `-ImplicitCastExpr 0x1f575f1e590 <col:50> 'void *' <LValueToRValue>
|   |   |       |         `-DeclRefExpr 0x1f575f1e530 <col:50> 'void *' lvalue ParmVar 0x1f575f243c0 'ptr' 'void *'
|   |   |       `-IfStmt 0x1f575f1ef68 <line:413:20, line:426:13> has_else
|   |   |         |-BinaryOperator 0x1f575f1e678 <line:413:24, col:31> 'int' '=='
|   |   |         | |-ImplicitCastExpr 0x1f575f1e648 <col:24> 'long' <LValueToRValue>
|   |   |         | | `-DeclRefExpr 0x1f575f1e600 <col:24> 'long' lvalue ParmVar 0x1f575f24340 'num' 'long'
|   |   |         | `-ImplicitCastExpr 0x1f575f1e660 <col:31> 'long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x1f575f1e620 <col:31> 'int' 2
|   |   |         |-CompoundStmt 0x1f575f1eca8 <col:34, line:422:13>
|   |   |         | |-DeclStmt 0x1f575f1e718 <line:414:17, col:61>
|   |   |         | | `-VarDecl 0x1f575f1e6b0 <col:17, col:33> col:33 invalid addr 'const int *'
|   |   |         | `-IfStmt 0x1f575f1ec90 <line:415:17, line:421:17>
|   |   |         |   |-ImplicitCastExpr 0x1f575f1e750 <line:415:21> 'long' <LValueToRValue>
|   |   |         |   | `-DeclRefExpr 0x1f575f1e730 <col:21> 'long' lvalue Var 0x1f575f24758 'ret' 'long'
|   |   |         |   `-CompoundStmt 0x1f575f1ec80 <col:26, line:421:17>
|   |   |         `-IfStmt 0x1f575f1ef40 <line:422:20, line:426:13> has_else
|   |   |           |-BinaryOperator 0x1f575f1ed40 <line:422:24, col:31> 'int' '=='
|   |   |           | |-ImplicitCastExpr 0x1f575f1ed10 <col:24> 'long' <LValueToRValue>
|   |   |           | | `-DeclRefExpr 0x1f575f1ecc8 <col:24> 'long' lvalue ParmVar 0x1f575f24340 'num' 'long'
|   |   |           | `-ImplicitCastExpr 0x1f575f1ed28 <col:31> 'long' <IntegralCast>
|   |   |           |   `-IntegerLiteral 0x1f575f1ece8 <col:31> 'int' 3
|   |   |           |-CompoundStmt 0x1f575f1ee90 <col:34, line:424:13>
|   |   |           | `-BinaryOperator 0x1f575f1ee70 <line:423:17, col:48> 'int' '='
|   |   |           |   |-MemberExpr 0x1f575f1ed98 <col:17, col:23> 'int' lvalue ->connect_family 0x1f575f11668
|   |   |           |   | `-ImplicitCastExpr 0x1f575f1ed80 <col:17> 'BIO_CONNECT *' <LValueToRValue>
|   |   |           |   |   `-DeclRefExpr 0x1f575f1ed60 <col:17> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   |           |   `-ImplicitCastExpr 0x1f575f1ee58 <col:40, col:48> 'int' <LValueToRValue>
|   |   |           |     `-UnaryOperator 0x1f575f1ee40 <col:40, col:48> 'int' lvalue prefix '*' cannot overflow
|   |   |           |       `-CStyleCastExpr 0x1f575f1ee18 <col:41, col:48> 'int *' <BitCast>
|   |   |           |         `-ImplicitCastExpr 0x1f575f1ee00 <col:48> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   |           |           `-DeclRefExpr 0x1f575f1edc8 <col:48> 'void *' lvalue ParmVar 0x1f575f243c0 'ptr' 'void *'
|   |   |           `-CompoundStmt 0x1f575f1ef28 <line:424:20, line:426:13>
|   |   |             `-BinaryOperator 0x1f575f1ef08 <line:425:17, col:23> 'long' '='
|   |   |               |-DeclRefExpr 0x1f575f1eea8 <col:17> 'long' lvalue Var 0x1f575f24758 'ret' 'long'
|   |   |               `-ImplicitCastExpr 0x1f575f1eef0 <col:23> 'long' <IntegralCast>
|   |   |                 `-IntegerLiteral 0x1f575f1eec8 <col:23> 'int' 0
|   |   |-BreakStmt 0x1f575f1f010 <line:428:9>
|   |   |-BreakStmt 0x1f575f231e0 <line:434:9>
|   |   |-BinaryOperator 0x1f575f232c8 <line:436:9, col:35> 'int' '='
|   |   | |-MemberExpr 0x1f575f23220 <col:9, col:15> 'int' lvalue ->connect_mode 0x1f575f117b8
|   |   | | `-ImplicitCastExpr 0x1f575f23208 <col:9> 'BIO_CONNECT *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1f575f231e8 <col:9> 'BIO_CONNECT *' lvalue Var 0x1f575f24828 'data' 'BIO_CONNECT *'
|   |   | `-CStyleCastExpr 0x1f575f232a0 <col:30, col:35> 'int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x1f575f23288 <col:35> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x1f575f23250 <col:35> 'long' lvalue ParmVar 0x1f575f24340 'num' 'long'
|   |   |-BreakStmt 0x1f575f232e8 <line:437:9>
|   |   |-IfStmt 0x1f575f235f0 <line:439:9, line:445:20> has_else
|   |   | |-OpaqueValueExpr 0x1f575f235d8 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1f575f23528 <line:439:22, line:444:9>
|   |   | | `-BinaryOperator 0x1f575f233a0 <line:440:13, col:25> 'int *' '='
|   |   | |   |-DeclRefExpr 0x1f575f232f0 <col:13> 'int *' lvalue Var 0x1f575f24560 'ip' 'int *'
|   |   | |   `-CStyleCastExpr 0x1f575f23378 <col:18, col:25> 'int *' <BitCast>
|   |   | |     `-ImplicitCastExpr 0x1f575f23360 <col:25> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |       `-DeclRefExpr 0x1f575f23328 <col:25> 'void *' lvalue ParmVar 0x1f575f243c0 'ptr' 'void *'
|   |   | `-BinaryOperator 0x1f575f235b8 <line:445:13, col:20> 'long' '='
|   |   |   |-DeclRefExpr 0x1f575f23540 <col:13> 'long' lvalue Var 0x1f575f24758 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1f575f235a0 <col:19, col:20> 'long' <IntegralCast>
|   |   |     `-UnaryOperator 0x1f575f23588 <col:19, col:20> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x1f575f23560 <col:20> 'int' 1
|   |   |-BreakStmt 0x1f575f23618 <line:446:9>
|   |   |-BreakStmt 0x1f575f23640 <line:449:9>
|   |   |-BreakStmt 0x1f575f236c0 <line:452:9>
|   |   |-BinaryOperator 0x1f575f23728 <line:455:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x1f575f236c8 <col:9> 'long' lvalue Var 0x1f575f24758 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1f575f23710 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x1f575f236e8 <col:15> 'int' 0
|   |   |-BreakStmt 0x1f575f23748 <line:456:9>
|   |   |-BreakStmt 0x1f575f23750 <line:458:9>
|   |   |-CompoundStmt 0x1f575f23f80 <line:460:9, line:473:9>
|   |   |-BreakStmt 0x1f575f23f90 <line:474:9>
|   |   |-CompoundStmt 0x1f575f24018 <line:476:9, line:484:9>
|   |   | `-BinaryOperator 0x1f575f23ff8 <line:482:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x1f575f23f98 <col:13> 'long' lvalue Var 0x1f575f24758 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1f575f23fe0 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1f575f23fb8 <col:19> 'int' 0
|   |   |-BreakStmt 0x1f575f24030 <line:485:9>
|   |   |-CompoundStmt 0x1f575f24070 <line:487:9, line:492:9>
|   |   |-BreakStmt 0x1f575f24080 <line:493:9>
|   |   |-DefaultStmt 0x1f575f24108 <line:494:5, line:495:15>
|   |   | `-BinaryOperator 0x1f575f240e8 <col:9, col:15> 'long' '='
|   |   |   |-DeclRefExpr 0x1f575f24088 <col:9> 'long' lvalue Var 0x1f575f24758 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1f575f240d0 <col:15> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1f575f240a8 <col:15> 'int' 0
|   |   `-BreakStmt 0x1f575f24128 <line:496:9>
|   `-ReturnStmt 0x1f575f26320 <line:498:5, col:16>
|     `-ImplicitCastExpr 0x1f575f26308 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x1f575f262e8 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x1f575f262c8 <col:13> 'long' lvalue Var 0x1f575f24758 'ret' 'long'
|-FunctionDecl 0x1f575f26530 <line:501:1, line:519:1> line:501:13 invalid conn_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1f575f26388 <col:32, col:37> col:37 invalid b 'int *'
| |-ParmVarDecl 0x1f575f26408 <col:40, col:44> col:44 used cmd 'int'
| |-ParmVarDecl 0x1f575f26488 <col:49, col:62> col:62 invalid fp 'int *'
| `-CompoundStmt 0x1f575f269b8 <line:502:1, line:519:1>
|   |-DeclStmt 0x1f575f266c0 <line:503:5, col:17>
|   | `-VarDecl 0x1f575f26618 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1f575f266a8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1f575f26680 <col:16> 'int' 1
|   |-DeclStmt 0x1f575f26750 <line:504:5, col:22>
|   | `-VarDecl 0x1f575f266e8 <col:5, col:18> col:18 used data 'BIO_CONNECT *'
|   |-SwitchStmt 0x1f575f267f0 <line:508:5, line:517:5>
|   | |-ImplicitCastExpr 0x1f575f267d8 <line:508:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1f575f267a0 <col:13> 'int' lvalue ParmVar 0x1f575f26408 'cmd' 'int'
|   | `-CompoundStmt 0x1f575f26920 <col:18, line:517:5>
|   |   |-CompoundStmt 0x1f575f26848 <line:510:9, line:512:9>
|   |   |-BreakStmt 0x1f575f26858 <line:513:9>
|   |   |-DefaultStmt 0x1f575f268f8 <line:514:5, line:515:15>
|   |   | `-BinaryOperator 0x1f575f268d8 <col:9, col:15> 'long' '='
|   |   |   |-DeclRefExpr 0x1f575f26860 <col:9> 'long' lvalue Var 0x1f575f26618 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x1f575f268c0 <col:15> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1f575f26898 <col:15> 'int' 0
|   |   `-BreakStmt 0x1f575f26918 <line:516:9>
|   `-ReturnStmt 0x1f575f269a8 <line:518:5, col:16>
|     `-ImplicitCastExpr 0x1f575f26990 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x1f575f26970 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x1f575f26950 <col:13> 'long' lvalue Var 0x1f575f26618 'ret' 'long'
|-FunctionDecl 0x1f575f26b20 <line:521:1, line:528:1> line:521:12 invalid conn_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1f575f26a00 <col:22, col:27> col:27 invalid bp 'int *'
| |-ParmVarDecl 0x1f575f26a80 <col:31, col:43> col:43 used str 'const char *'
| `-CompoundStmt 0x1f575f270b8 <line:522:1, line:528:1>
|   |-DeclStmt 0x1f575f26d00 <line:523:5, col:15>
|   | |-VarDecl 0x1f575f26c00 <col:5, col:9> col:9 used n 'int'
|   | `-VarDecl 0x1f575f26c80 <col:5, col:12> col:12 used ret 'int'
|   |-BinaryOperator 0x1f575f26fb8 <line:525:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x1f575f26d18 <col:5> 'int' lvalue Var 0x1f575f26c00 'n' 'int'
|   | `-ImplicitCastExpr 0x1f575f26fa0 <col:9, col:19> 'int' <IntegralCast>
|   |   `-CallExpr 0x1f575f26f60 <col:9, col:19> 'unsigned long long'
|   |     |-ImplicitCastExpr 0x1f575f26f48 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1f575f26e90 <col:9> 'unsigned long long (const char *)' Function 0x1f575f26d80 'strlen' 'unsigned long long (const char *)'
|   |     `-ImplicitCastExpr 0x1f575f26f88 <col:16> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1f575f26ec8 <col:16> 'const char *' lvalue ParmVar 0x1f575f26a80 'str' 'const char *'
|   `-ReturnStmt 0x1f575f270a8 <line:527:5, col:16>
|     `-ImplicitCastExpr 0x1f575f27090 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1f575f27070 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1f575f27050 <col:13> 'int' lvalue Var 0x1f575f26c80 'ret' 'int'
|-FunctionDecl 0x1f575f26d80 <line:525:9> col:9 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1f575f26e20 <<invalid sloc>> <invalid sloc> 'const char *'
`-FunctionDecl 0x1f575f20180 <line:530:1, line:541:1> line:530:6 invalid BIO_new_connect 'int *(const char *)'
  |-ParmVarDecl 0x1f575f270f8 <col:22, col:34> col:34 used str 'const char *'
  `-CompoundStmt 0x1f575f206f8 <line:531:1, line:541:1>
    |-IfStmt 0x1f575f204c0 <line:535:5, line:536:21>
    | |-OpaqueValueExpr 0x1f575f204a8 <<invalid sloc>> '_Bool'
    | `-ReturnStmt 0x1f575f20498 <col:9, col:21>
    |   `-ImplicitCastExpr 0x1f575f20480 <col:16, col:21> 'int *' <NullToPointer>
    |     `-ParenExpr 0x1f575f20460 <col:16, col:21> 'void *'
    |       `-ParenExpr 0x1f575f20440 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
    |         `-CStyleCastExpr 0x1f575f20418 <col:18, col:26> 'void *' <NullToPointer>
    |           `-IntegerLiteral 0x1f575f203d8 <col:26> 'int' 0
    `-ReturnStmt 0x1f575f206e8 <.//openssl//file_jk/after\crypto\bio\bss_conn.c:540:5, col:17>
      `-ImplicitCastExpr 0x1f575f206d0 <col:12, col:17> 'int *' <NullToPointer>
        `-ParenExpr 0x1f575f206b0 <col:12, col:17> 'void *'
          `-ParenExpr 0x1f575f20690 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
            `-CStyleCastExpr 0x1f575f20668 <col:18, col:26> 'void *' <NullToPointer>
              `-IntegerLiteral 0x1f575f20628 <col:26> 'int' 0
