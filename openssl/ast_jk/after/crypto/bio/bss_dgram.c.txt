TranslationUnitDecl 0x163d85b4c78 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x163d85b5510 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x163d85b5210 '__int128'
|-TypedefDecl 0x163d85b5580 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x163d85b5230 'unsigned __int128'
|-TypedefDecl 0x163d85b58b8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x163d85b5670 'struct __NSConstantString_tag'
|   `-Record 0x163d85b55d8 '__NSConstantString_tag'
|-TypedefDecl 0x163d85b5928 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x163d85b4e50 'unsigned long long'
|-TypedefDecl 0x163d85b59c0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x163d85b5980 'char *'
|   `-BuiltinType 0x163d85b4d10 'char'
|-TypedefDecl 0x163d85b5a30 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x163d85b5980 'char *'
|   `-BuiltinType 0x163d85b4d10 'char'
|-TypedefDecl 0x163d85b5af0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x163d85b4e50 'unsigned long long'
|-TypedefDecl 0x163d85b5b60 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x163d85b5980 'char *'
|   `-BuiltinType 0x163d85b4d10 'char'
|-FunctionDecl 0x163d9f6f420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x163d9f6f4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x163d9f6f530 <col:21> Implicit
|-FunctionDecl 0x163d9f6f588 prev 0x163d9f6f420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x163d9f6f2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x163d9f6f678 <col:21> Inherited Implicit
|-TypedefDecl 0x163d9f6f6b8 prev 0x163d85b5928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x163d85b4e50 'unsigned long long'
|-TypedefDecl 0x163d9f6f760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x163d9f6f730 'size_t' sugar
|   |-Typedef 0x163d9f6f6b8 'size_t'
|   `-BuiltinType 0x163d85b4e50 'unsigned long long'
|-TypedefDecl 0x163d9f6f7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x163d85b4db0 'long long'
|-TypedefDecl 0x163d9f6f840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x163d85b4db0 'long long'
|-TypedefDecl 0x163d9f6f8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x163d85b4df0 'unsigned short'
|-TypedefDecl 0x163d9f6f920 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x163d85b4df0 'unsigned short'
|-TypedefDecl 0x163d9f6f990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x163d85b4df0 'unsigned short'
|-TypedefDecl 0x163d9f6fa00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x163d85b4d70 'int'
|-TypedefDecl 0x163d9f6fa70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x163d85b4d90 'long'
|-TypedefDecl 0x163d9f6fae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x163d85b4db0 'long long'
|-TypedefDecl 0x163d9f6fb70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x163d9f6fb40 '__time64_t' sugar
|   |-Typedef 0x163d9f6fae0 '__time64_t'
|   `-BuiltinType 0x163d85b4db0 'long long'
|-FunctionDecl 0x163d9f6fce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x163d9f6ff08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x163d9fa4230 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x163d9f70048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x163d9f700c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x163d9f70138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x163d9f701b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x163d9fa3fd0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x163d9fa4310 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x163d9fa43d0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x163d9fa4540 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x163d9fa44f0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x163d9fa4490 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x163d9fa43b0 'struct threadlocaleinfostruct'
|       `-Record 0x163d9fb40d0 'threadlocaleinfostruct'
|-TypedefDecl 0x163d9fa4650 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x163d9fa4600 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x163d9fa45a0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x163d9fa4470 'struct threadmbcinfostruct'
|       `-Record 0x163d9fa43d0 'threadmbcinfostruct'
|-RecordDecl 0x163d9fa46a8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x163d9fa4760 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x163d9fa4820 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x163d9fa48b0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x163d9fa4940 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x163d9fa49f8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x163d9fa49a0 'struct localeinfo_struct' sugar
|   `-RecordType 0x163d9fa4800 'struct localeinfo_struct'
|     `-Record 0x163d9fa4760 'localeinfo_struct'
|-TypedefDecl 0x163d9fa4ad0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x163d9fa4a80 'struct localeinfo_struct *'
|   `-ElaboratedType 0x163d9fa49a0 'struct localeinfo_struct' sugar
|     `-RecordType 0x163d9fa4800 'struct localeinfo_struct'
|       `-Record 0x163d9fa4760 'localeinfo_struct'
|-RecordDecl 0x163d9fa4b48 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x163d9fa4c00 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x163d9fa4c78 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x163d9fa4d38 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x163d9fa4dd0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x163d9fa4e40 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x163d9fa4ef8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x163d9fa4ea0 'struct localerefcount' sugar
|   `-RecordType 0x163d9fa4be0 'struct localerefcount'
|     `-Record 0x163d9fa4b48 'localerefcount'
|-RecordDecl 0x163d9fb40d0 prev 0x163d9fa4310 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x163d9fb4150 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x163d9fb41c8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x163d9fb4238 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x163d9fb42a8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x163d9fb4318 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x163d9fb44d8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x163d9fb4548 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x163d9fb45b8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x163d9fb4628 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x163d9fb4698 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x163d9fb4708 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x163d9fb4760 parent 0x163d85b4c78 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x163d9fb48f0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x163d9fb4960 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x163d9fb49d0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x163d9fb4a40 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x163d9fb4ae0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x163d9fb4b50 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x163d9fb4c60 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x163d9fb4d98 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x163d9fb4e48 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x163d9fb4df0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x163d9fa43b0 'struct threadlocaleinfostruct'
|     `-Record 0x163d9fb40d0 'threadlocaleinfostruct'
|-RecordDecl 0x163d9fb4ee0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x163d9fb4fa0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x163d9fb5018 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x163d9fb10a0 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x163d9fb1110 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x163d9fb1180 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x163d9fb11f0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x163d9fb1260 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x163d9fb12d0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x163d9fb1340 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x163d9fb13f0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x163d9fb13a0 'struct _iobuf' sugar
|   `-RecordType 0x163d9fb4f80 'struct _iobuf'
|     `-Record 0x163d9fb4ee0 '_iobuf'
|-FunctionDecl 0x163d9fb1628 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x163d9fb16f8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x163d85b4db0 'long long'
|-FunctionDecl 0x163d9fb18d8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163d9fb1760 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x163d9fb1bd0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x163d9fb19b0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x163d9fb1a28 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x163d9fb1f80 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x163d9fb1cb0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x163d9fb1d30 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x163d9fb1db0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x163d9fb5250 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x163d9fb50e0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x163d9fb5480 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x163d9fb5340 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x163d9fb5630 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163d9fb5550 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x163d9fb5820 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x163d9fb5b18 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x163d9fb58f0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x163d9fb5970 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x163d9fb5cd0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163d9fb5bf0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x163d9fb5e80 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163d9fb5da0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x163d9fb6030 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163d9fb5f50 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x163d9fb7208 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163d9fb7128 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x163d9fb7398 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x163d9fb7700 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x163d9fb7460 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x163d9fb7558 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x163d9fb7ab8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x163d9fb77e0 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x163d9fb7860 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x163d9fb78d8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x163d9fb7c78 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163d9fb7b98 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x163d9fb7f40 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x163d9fb7d50 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x163d9fb7dd0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x163d9fbb140 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x163d9fbb538 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x163d9fbb5d8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x163d9fbb640 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x163d9fbb6b8 prev 0x163d9fbb538 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x163d9fbb310 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x163d9fbb390 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x163d9fbb768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163d9fbbbe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x163d9fbb910 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x163d9fbb990 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x163d9fbba10 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x163d9fbbf00 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x163d9fbbfa0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x163d9fbc008 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x163d9fbc080 <col:40> Implicit printf 2 3
|-FunctionDecl 0x163d9fba130 prev 0x163d9fbbf00 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x163d9fbbcc0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x163d9fbbd40 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x163d9fba228 <col:40> Inherited printf 2 3
|-FunctionDecl 0x163d9fba3f0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x163d9fba270 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x163d9fba2f0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x163d9fba648 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x163d9fba4d0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x163d9fba548 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x163d9fba878 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x163d9fba728 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x163d9fbab70 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x163d9fba950 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x163d9fba9c8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x163d9fbb008 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x163d9fbb0a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x163d9fb8110 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x163d9fb8178 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x163d9fb81e0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x163d9fb8268 prev 0x163d9fbb008 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x163d9fbac50 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x163d9fbacc8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163d9fbad40 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163d9fbadb8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x163d9fb8770 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x163d9fb8358 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x163d9fb83d0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163d9fb8448 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163d9fb84c0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163d9fb8538 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x163d9fb8c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x163d9fb8960 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x163d9fb89e0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x163d9fb8a58 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x163d9fb8ce8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163d9fbc1f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x163d9fb8e30 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x163d9fb8eb0 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x163d9fb8f30 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x163d9fb8fa8 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x163d9fbc5a0 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x163d9fbc640 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x163d9fbc6a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x163d9fbc720 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x163d9fbc788 prev 0x163d9fbc5a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x163d9fbc3d8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x163d9fbc458 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x163d9fbc968 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x163d9fbc838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163d9fbcda8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163d9fbcaa8 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x163d9fbcb28 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x163d9fbcbc0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x163d9fbce60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163d9fbd160 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x163d9fbcfa0 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x163d9fbd020 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x163d9fbd450 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163d9fbd238 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x163d9fbd2b8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x163d9fbd330 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163d9fbd7b0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x163d9fbd530 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x163d9fbd608 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x163d9fbdb68 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x163d9fbd888 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x163d9fbd908 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x163d9fbd988 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x163d9fbddc8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x163d9fbdc48 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x163d9fbf1c8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x163d9fbde98 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x163d9fbdf18 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x163d9fbdf98 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x163d9fbf428 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x163d9fbf2a8 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x163d9fbf8e8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x163d9fbf988 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x163d9fbf9f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x163d9fbfa58 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x163d9fbfac0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x163d9fbfb48 prev 0x163d9fbf8e8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x163d9fbf530 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x163d9fbf5a8 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163d9fbf620 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163d9fbf698 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x163d9fbfd10 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163d9fbfc30 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x163d9fbfea0 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x163d9fc0028 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x163d9fc0350 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x163d9fc00f8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x163d9fc01a0 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x163d9fc0678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x163d9fc0530 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x163d9fc0720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163d9fc0940 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163d9fc0860 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x163d9fc0b60 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x163d9fc0a18 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x163d9fc0d10 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163d9fc0c30 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x163d9fc0f60 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x163d9fc0de8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x163d9fc0e68 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x163d9fc11a0 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x163d9fc1240 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x163d9fc12b0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x163d9fc1318 prev 0x163d9fc11a0 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x163d9fc1040 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x163d9fc1408 <col:40> Inherited printf 1 2
|-FunctionDecl 0x163d9fc1538 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x163d9fc1458 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x163d9fc1788 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x163d9fc1610 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x163d9fc1688 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x163d9fc1948 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x163d9fc1868 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x163d9fc1b68 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x163d9fc1a20 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x163d9fc1db8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x163d9fc1c40 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x163d9fc1cb8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x163d9fc1f78 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x163d9fc1e98 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x163da0120e0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x163d9fc2050 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x163d9fc20d0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x163da0122a0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x163da0121c0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x163da012530 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x163da012450 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x163da0125d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x163da0127d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x163da0126f8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x163da012960 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x163da012c08 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x163da012ca8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x163da012d18 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x163da012d80 prev 0x163da012c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x163da012af0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x163da012f58 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x163da012e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da00f2f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da00f0b8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x163da00f130 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x163da00f3a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da00f5c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x163da00f4e8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x163da00f818 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da00f6a0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x163da00f718 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da00fbd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x163da00f9b0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x163da00fa30 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x163da00fc88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da00feb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x163da00fdd0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x163da010138 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x163da00fff0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x163da010320 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x163da010770 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x163da0103e8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x163da010468 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x163da0104e8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x163da010560 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x163da010bf0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x163da010860 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x163da0108d8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da010950 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da0109d0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x163da014030 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x163da010ce0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x163da010d58 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da010dd8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x163da0141f8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x163da014118 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x163da0145d0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x163da014670 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x163da0146d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x163da014750 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x163da0147b8 prev 0x163da0145d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x163da014390 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x163da014410 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x163da014998 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x163da014868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da014d88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da014aa8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x163da014b28 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x163da014ba0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x163da014e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da00d0c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x163da014f88 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x163da00cfc0 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x163da00d3b8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da00d1a0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x163da00d220 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x163da00d298 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da00d848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x163da00d560 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x163da00d5d8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da00d658 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x163da00d900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da00ded0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da00db40 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x163da00dbb8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da00dc38 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x163da00dcb0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x163da015040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da0153a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x163da015188 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x163da015200 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da015280 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x163da015738 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da015488 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x163da015500 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da015580 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x163da0155f8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da015998 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x163da015a38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da015cf0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x163da015b80 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x163da013020 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x163da015dc8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x163da015e40 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x163da0132a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x163da0131c0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x163da013348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da013608 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x163da013490 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x163da013508 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x163da013a20 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x163da013ac0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x163da013b28 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x163da013b90 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x163da013c10 <col:40> Implicit printf 2 0
|-FunctionDecl 0x163da013c78 prev 0x163da013a20 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x163da0136e0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x163da013760 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x163da0137d8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x163da013d78 <col:40> Inherited printf 2 0
|-FunctionDecl 0x163da011000 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x163da0110a0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x163da011108 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x163da011170 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x163da0111f0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x163da011258 prev 0x163da011000 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x163da013dc0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x163da013e40 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x163da013eb8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x163da011358 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x163da0115b8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x163da0113a0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x163da011420 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x163da011498 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da0118b0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x163da011698 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x163da011718 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x163da011790 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da011bf8 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x163da011c98 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x163da011d00 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x163da011d78 <col:40> Implicit printf 1 0
|-FunctionDecl 0x163da011de0 prev 0x163da011bf8 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x163da011998 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x163da011a10 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x163da011ed8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x163da00e108 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x163da00e1a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x163da00e210 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x163da00e288 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x163da00e2f0 prev 0x163da00e108 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x163da011f28 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x163da00dfd0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x163da00e3e8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x163da00e5b0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x163da00e438 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x163da00e4b0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da00e808 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x163da00e690 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x163da00e708 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da00ed68 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x163da00ee08 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x163da00ee70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x163da00eed8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x163da00ef40 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x163da018070 <col:77> Implicit printf 3 0
|-FunctionDecl 0x163da0180d8 prev 0x163da00ed68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x163da00e9a8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x163da00ea20 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da00eaa0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x163da00eb18 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x163da0182c8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x163da018198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da018738 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x163da018318 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x163da018390 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da018408 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da018488 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x163da018500 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da018b78 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x163da018830 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x163da0188a8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da018920 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da0189a0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x163da018a18 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da018f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x163da018d30 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x163da018da8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da018e28 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x163da019000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da0174d0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x163da017220 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x163da017298 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da017318 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x163da017390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x163da017590 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da017988 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x163da0176d8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x163da017750 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da0177d0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x163da017848 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da017d48 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x163da017a78 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x163da017af8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x163da017b70 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da019120 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x163da0191c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x163da019228 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x163da0192a0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x163da019308 prev 0x163da019120 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x163da017ef0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x163da017f70 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x163da0194e8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x163da0193b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da019910 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x163da0199b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x163da019a18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x163da019a80 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x163da019b00 <col:94> Implicit printf 2 0
|-FunctionDecl 0x163da019b68 prev 0x163da019910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x163da0195f8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x163da019678 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x163da0196f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x163da019d50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x163da019c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da01d0c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x163da01d160 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x163da01d1c8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x163da01d230 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x163da01d2b0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x163da01d318 prev 0x163da01d0c0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x163da019da0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x163da019e20 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x163da019e98 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x163da01d418 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x163da01d5e0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x163da01d468 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x163da01d4e0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01d8d8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x163da01d6c0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x163da01d738 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da01d7b8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x163da01dc70 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x163da01d9c0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x163da01da38 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da01dab8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x163da01db30 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01ded8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x163da01dd58 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x163da01ddd8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x163da016050 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x163da01dfb8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x163da016340 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x163da016128 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x163da0161a0 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da016220 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x163da016638 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x163da016420 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x163da0164a0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x163da016518 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da016898 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x163da016720 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x163da016798 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da016c28 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x163da016978 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x163da0169f0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da016a70 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x163da016ae8 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da016df8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x163da016d18 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x163da01b0a0 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x163da016ed0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x163da016f48 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01b260 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x163da01b180 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x163da01b3f0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x163da01b638 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da01b4c0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x163da01b538 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da01b890 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da01b718 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x163da01b790 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da01bae8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da01b970 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x163da01b9e8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da01be98 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da01bbc8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x163da01bc40 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da01bcb8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01a1b0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da01bf80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x163da01bff8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da01a090 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01a4a8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da01a298 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x163da01a310 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da01a388 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01a7a0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da01a588 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x163da01a608 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x163da01a680 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da01aa98 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da01a880 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x163da01a900 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x163da01a978 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da01ad90 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da01ab78 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x163da01abf8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x163da01ac70 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da01e230 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da01ae70 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x163da01aef0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x163da01af68 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da01afe0 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01e5c8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da01e318 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x163da01e398 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x163da01e410 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da01e488 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01e960 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da01e6b0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x163da01e730 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x163da01e7a8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da01e820 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01edf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da01eb10 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x163da01eb90 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x163da01ec08 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x163da01eeb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da020400 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da01eff8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x163da0200f0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da020170 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x163da0201e8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da0207a0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da0204f0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x163da020568 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da0205e8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x163da020660 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da020cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da020990 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x163da020a10 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x163da020a88 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x163da020b00 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x163da020db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da023358 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da020ef8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x163da020f70 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da020ff0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x163da021068 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da023120 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da023798 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da023450 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x163da0234c8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da023548 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x163da0235c0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da023638 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da023a08 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da023890 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x163da023908 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da023c60 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da023ae8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x163da023b60 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da023f50 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da023d40 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x163da023db8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da023e30 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01f210 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da024038 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x163da0240b0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da01f0f0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01f668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da01f3b8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x163da01f430 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da01f4b0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x163da01f528 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x163da01f728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da01fb20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da01f870 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x163da01f8e8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da01f968 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x163da01f9e0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da022110 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x163da01fc10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x163da01fc88 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da01fd00 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da01fd80 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x163da01fdf8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da022650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da022308 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x163da022380 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da022400 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x163da022478 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x163da0224f0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x163da022718 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da022b98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da022868 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x163da0228e0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da022960 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x163da0229d8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da022a50 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01c110 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da022c90 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x163da022d08 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da022d80 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da022e00 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x163da022e78 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da022ef0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da01c4d0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x163da01c208 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x163da01c280 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x163da01c300 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x163da01c740 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x163da01c5d0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x163da01c958 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x163da01cc38 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x163da01ca20 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x163da01ca98 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x163da01ce80 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x163da01cd10 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x163da02b1a0 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x163da01cf50 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x163da02b328 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x163da02b560 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x163da02b3f0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x163da02b468 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x163da02b710 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x163da02b638 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x163da02b9b8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x163da02b7e0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x163da02b858 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x163da02bd60 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x163da02ba90 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x163da02bb10 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x163da02bb88 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x163da02c060 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x163da02be40 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x163da02beb8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x163da028328 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x163da02c138 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x163da028180 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x163da028630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x163da0284c0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x163da0286d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da028998 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x163da028818 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x163da028ca0 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da028a68 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x163da028ae0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x163da028ef0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da028d78 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x163da028df0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x163da029180 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x163da028fc8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x163da029330 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x163da029250 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x163da0294e0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x163da029400 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x163da029878 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da0295b0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x163da029628 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da0296a0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da029b68 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da029958 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x163da0299d0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da029a48 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da029e58 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da029c48 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x163da029cc0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da029d38 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da027160 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da029f38 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x163da029fb0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da02a028 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da027460 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da027240 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da0272b8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da0276b0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da027538 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da0275b0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da027900 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da027788 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da027800 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da027b50 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da0279d8 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da027a50 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da027f08 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da027c28 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x163da027ca0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da027d18 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x163da02a3a0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da027fe8 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x163da028060 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da0280d8 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da02a190 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da02a758 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da02a488 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x163da02a500 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da02a578 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da02aa48 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da02a838 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x163da02a8b0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da02a928 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da02ad38 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da02ab28 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da02aba0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da02ac18 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x163da02b0c0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da02ae18 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da02ae90 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da02af08 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da02af80 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da0244e0 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da024158 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da0241d0 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da024248 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da0242c0 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x163da0249e8 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da0245c8 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da024640 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da0246b8 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da024730 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da0247a8 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da024da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da024b98 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x163da024c10 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da024c88 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x163da024e60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da025370 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da025060 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x163da025140 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da0251b8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da025230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x163da025430 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da0256e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da025570 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x163da0255e8 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x163da0258a0 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x163da0257c0 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x163da025b80 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da025970 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x163da0259e8 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da025a60 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da025dd8 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da025c60 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da025cd8 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da02dff0 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da025eb0 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da025f28 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da025fa0 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x163da02e378 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da02e0d0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da02e148 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da02e1c0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da02e238 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da02e540 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x163da02e460 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x163da02e788 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da02e610 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da02e688 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da02ea90 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da02e860 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da02e8d8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da02ece0 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da02eb68 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da02ebe0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da02ef30 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da02edb8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da02ee30 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da037378 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da0370a8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da037120 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da037198 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da037668 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da037458 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da0374d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da037548 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da037958 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da037748 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da0377c0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da037838 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da037d18 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da037a38 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x163da037ab0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da037b28 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da031020 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da037df8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x163da037e70 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da037ee8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da031310 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da031100 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x163da031178 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da0311f0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da031760 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da0313f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x163da031468 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da0314e0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da031558 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da031af0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da031848 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x163da0318c0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da031938 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da0319b0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da031e80 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da031bd8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x163da031c50 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da031cc8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da031d40 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da034360 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da031f68 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da034050 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da0340c8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da034140 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da0346f0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da034448 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da0344c0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da034538 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da0345b0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da034a80 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da0347d8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da034850 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da0348c8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da034940 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da034f88 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da034b68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da034be0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da034c58 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da034cd0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da034d48 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da030378 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da030038 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da0300b0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da030128 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da0301a0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da030218 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da0307a8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da030468 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da0304e0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da030558 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da0305d0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da030648 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da030a10 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da030898 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da030910 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da030c60 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da030ae8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da030b60 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da030f48 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da030d38 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da030db0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da030e28 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da038428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da038180 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da0381f8 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da038270 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da0382e8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x163da0384e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da038a58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da038630 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da0386a8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da038720 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da038798 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da038810 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da038f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da038c50 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da038cc8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da038d40 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da038db8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x163da038e30 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x163da032030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da032640 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da032178 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x163da0321f0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da032268 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da0322e0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da032358 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da0323d0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da032b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da032908 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x163da032980 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x163da032bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x163da032d08 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x163da0332a8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da032fc0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x163da033050 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da0330c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x163da033360 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x163da033478 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x163da033a18 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da033738 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x163da0337b0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da033828 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x163da033ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x163da033bf0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x163da035270 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da033eb0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x163da033f28 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da033fa0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x163da035060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x163da035330 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x163da035450 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x163da035758 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x163da035578 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x163da0355f0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da035668 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x163da036310 <line:37:1, line:44:1>
|   |-DeclStmt 0x163da0358a0 <line:38:5, col:21>
|   | `-VarDecl 0x163da035838 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x163da035938 <line:39:5, col:13>
|   | `-VarDecl 0x163da0358d0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x163da035c90 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x163da035c78 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x163da035b90 <col:34> '<builtin fn type>' Function 0x163da035a28 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x163da035bc8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x163da035838 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x163da035c00 <col:29> 'const wchar_t *' lvalue ParmVar 0x163da035668 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x163da035f50 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x163da035cc0 <col:5> 'int' lvalue Var 0x163da0358d0 '_Ret' 'int'
|   | `-CallExpr 0x163da035e90 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x163da035e78 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x163da035cf8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x163da034f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x163da035ed8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x163da035d18 <col:27> 'wchar_t *' lvalue ParmVar 0x163da035578 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x163da035ef0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x163da035d38 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x163da0355f0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x163da035f08 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x163da035d58 <col:44> 'const wchar_t *' lvalue ParmVar 0x163da035668 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x163da035f20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x163da035de0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x163da035db8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x163da035d78 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x163da035f38 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x163da035e00 <col:59> 'va_list':'char *' lvalue Var 0x163da035838 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x163da0362a0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x163da036288 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x163da0361d8 <col:34> '<builtin fn type>' Function 0x163da036070 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x163da036210 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x163da035838 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x163da036300 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x163da0362e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x163da0362c8 <col:12> 'int' lvalue Var 0x163da0358d0 '_Ret' 'int'
|-FunctionDecl 0x163da035a28 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x163da035ac8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x163da035b38 <col:34> Implicit
|-FunctionDecl 0x163da036070 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x163da036110 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x163da036180 <col:34> Implicit
|-FunctionDecl 0x163da036608 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x163da036360 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x163da0363d8 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da036450 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da0364c8 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x163da0368f0 <line:50:1, line:52:1>
|   `-ReturnStmt 0x163da0368e0 <line:51:5, col:62>
|     `-CallExpr 0x163da036820 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x163da036808 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x163da0366e0 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x163da034f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x163da036868 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x163da036700 <col:27> 'wchar_t *' lvalue ParmVar 0x163da036360 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x163da036880 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x163da036720 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x163da0363d8 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x163da036898 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x163da036740 <col:44> 'const wchar_t *' lvalue ParmVar 0x163da036450 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x163da0368b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x163da0367c8 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x163da0367a0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x163da036760 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x163da0368c8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x163da0367e8 <col:59> 'va_list':'char *' lvalue ParmVar 0x163da0364c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x163da036b90 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x163da036918 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x163da036990 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da036a08 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da036a80 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x163da039148 <line:61:1, line:68:1>
|   |-DeclStmt 0x163da036ce0 <line:62:5, col:21>
|   | `-VarDecl 0x163da036c78 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x163da036d78 <line:63:5, col:13>
|   | `-VarDecl 0x163da036d10 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x163da036e20 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x163da036e08 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x163da036d90 <col:34> '<builtin fn type>' Function 0x163da035a28 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x163da036db0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x163da036c78 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x163da036de8 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x163da036a80 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x163da037020 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x163da036e50 <col:5> 'int' lvalue Var 0x163da036d10 '_Ret' 'int'
|   | `-CallExpr 0x163da036f60 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x163da036f48 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x163da036e88 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x163da034f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x163da036fa8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x163da036ea8 <col:27> 'wchar_t *' lvalue ParmVar 0x163da036918 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x163da036fc0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x163da036ec8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x163da036990 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x163da036fd8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x163da036ee8 <col:44> 'const wchar_t *' lvalue ParmVar 0x163da036a08 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x163da036ff0 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x163da036f08 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x163da036a80 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x163da037008 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x163da036f28 <col:64> 'va_list':'char *' lvalue Var 0x163da036c78 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x163da0390d8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x163da0390c0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x163da037040 <col:34> '<builtin fn type>' Function 0x163da036070 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x163da0390a0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x163da036c78 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x163da039138 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x163da039120 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x163da039100 <col:12> 'int' lvalue Var 0x163da036d10 '_Ret' 'int'
|-FunctionDecl 0x163da0394d8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x163da039198 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x163da039210 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da039288 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da039300 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x163da039378 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x163da039760 <line:74:1, line:76:1>
|   `-ReturnStmt 0x163da039750 <line:75:5, col:67>
|     `-CallExpr 0x163da039690 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x163da039678 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x163da0395b8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x163da034f88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x163da0396d8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x163da0395d8 <col:27> 'wchar_t *' lvalue ParmVar 0x163da039198 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x163da0396f0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x163da0395f8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x163da039210 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x163da039708 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x163da039618 <col:44> 'const wchar_t *' lvalue ParmVar 0x163da039288 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x163da039720 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x163da039638 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x163da039300 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x163da039738 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x163da039658 <col:64> 'va_list':'char *' lvalue ParmVar 0x163da039378 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x163da0399a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x163da039788 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x163da039800 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x163da039bf8 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x163da039a80 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da039af8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da039ee0 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x163da039cd0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da039d48 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x163da039dc0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x163da03c248 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da03c0d0 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x163da03c148 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x163da03c2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da03c708 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da03c4f8 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x163da03c570 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da03c5e8 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x163da03c7c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da03ca78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da03c900 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x163da03c978 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x163da03cd60 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da03cb50 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x163da03cbc8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da03cc40 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da03e160 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da03cf00 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x163da03cf78 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x163da03e210 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da03e6e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da03e410 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x163da03e488 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da03e500 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x163da03e7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da03ea58 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da03e8e0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x163da03e958 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x163da03ed40 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da03eb30 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x163da03eba8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da03ec20 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da03a198 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da03eee0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x163da03ef58 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da03efd0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x163da03a250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da03a7d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da03a450 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x163da03a4c8 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da03a540 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da03a5b8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x163da03a890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da03abe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x163da03a9d0 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x163da03aa48 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da03aac0 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x163da03af68 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da03acc0 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x163da03ad38 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da03adb0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da03ae28 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da03f2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x163da03f1d0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x163da03f358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da03f6d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da03f558 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x163da03f5d0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x163da03f780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da03f9a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x163da03f8c0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x163da03fbe8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x163da03fa70 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x163da03fae8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x163da03fee8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x163da03fcc8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x163da03fd40 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x163da0402b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x163da040080 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x163da040110 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x163da040368 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da040770 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x163da0404b0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x163da040528 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x163da0405a0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x163da040bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x163da040910 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x163da040988 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x163da040a00 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x163da040c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da042178 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x163da040dd0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x163da040e48 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x163da040ec0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x163da040f38 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x163da0423d0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x163da042260 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x163da042610 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x163da0424a0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x163da042518 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x163da0427c8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x163da0426e8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x163da042ab8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x163da042898 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x163da042910 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x163da042d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x163da042c50 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x163da042dd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x163da042fe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x163da042f10 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x163da03b1b8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x163da0430b8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x163da03b0c0 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x163da03b400 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x163da03b290 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x163da03b308 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x163da03b5b0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x163da03b4d8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x163da03b758 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x163da03b680 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x163da03b908 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163da03b828 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x163da03bab8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x163da03b9d8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x163da03be30 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x163da03bb90 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x163da03bc08 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da03bc80 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da03bcf8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x163da04b390 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x163da03bf20 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x163da03bf98 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da03c010 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da04b1c0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da04b238 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x163da04b6a0 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x163da04b480 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x163da04b500 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x163da04b580 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x163da04b860 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x163da04b780 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x163da04bb50 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x163da04b930 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x163da04b9b0 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x163da04ba30 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x163da04bd10 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x163da04bc30 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x163da04c088 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x163da04bde8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x163da04be60 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x163da04bed8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x163da04bf50 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x163da049318 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x163da0491a0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x163da049218 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x163da049650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x163da0494d0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x163da049550 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x163da049700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x163da0499b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x163da049a58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x163da049d98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x163da049c20 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x163da049ca0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x163da049e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x163da048190 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x163da048230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x163da0484d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x163da0483f0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x163da048578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x163da0487f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x163da048898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x163da048b40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x163da048a60 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x163da048be8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x163da048ec8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x163da048de8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x163da048f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x163da0442c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x163da044150 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x163da0441c8 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x163da044378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x163da044638 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x163da0446d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x163da044910 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x163da044b20 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x163da0449e0 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x163da044d70 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x163da044bf8 <col:34, col:40> col:40 _Value 'int *'
|-RecordDecl 0x163da044e30 <.//openssl//file_jk/after\crypto\bio/bio_lcl.h:64:1, line:71:1> line:64:8 struct bio_addrinfo_st definition
| |-FieldDecl 0x163da044f08 <line:65:5, col:9> col:9 bai_family 'int'
| |-FieldDecl 0x163da044f78 <line:66:5, col:9> col:9 bai_socktype 'int'
| |-FieldDecl 0x163da044fe8 <line:67:5, col:9> col:9 bai_protocol 'int'
| |-FieldDecl 0x163da045050 <line:68:5, col:12> col:12 bai_addrlen 'size_t':'unsigned long long'
| |-RecordDecl 0x163da0450a8 parent 0x163d85b4c78 <line:69:5, col:12> col:12 struct sockaddr
| |-FieldDecl 0x163da0557a0 <col:5, col:22> col:22 bai_addr 'struct sockaddr *'
| `-FieldDecl 0x163da0558b0 <line:70:5, col:29> col:29 bai_next 'struct bio_addrinfo_st *'
|-RecordDecl 0x163da055908 <line:74:1, line:83:1> line:74:7 invalid union bio_addr_st definition
| |-FieldDecl 0x163da055a10 <line:75:5, col:21> col:21 invalid sa 'struct sockaddr':'struct sockaddr'
| |-RecordDecl 0x163da055a68 parent 0x163d85b4c78 <line:79:5, col:12> col:12 struct sockaddr_in
| `-FieldDecl 0x163da055b88 <col:5, col:24> col:24 invalid s_in 'struct sockaddr_in':'struct sockaddr_in'
|-RecordDecl 0x163da055be0 <line:91:9, line:112:1> line:91:16 struct bio_f_buffer_ctx_struct definition
| |-FieldDecl 0x163da055cb8 <line:104:5, col:9> col:9 ibuf_size 'int'
| |-FieldDecl 0x163da055d28 <line:105:5, col:9> col:9 obuf_size 'int'
| |-FieldDecl 0x163da055d98 <line:106:5, col:11> col:11 ibuf 'char *'
| |-FieldDecl 0x163da055e08 <line:107:5, col:9> col:9 ibuf_len 'int'
| |-FieldDecl 0x163da055e78 <line:108:5, col:9> col:9 ibuf_off 'int'
| |-FieldDecl 0x163da055ee8 <line:109:5, col:11> col:11 obuf 'char *'
| |-FieldDecl 0x163da055f58 <line:110:5, col:9> col:9 obuf_len 'int'
| `-FieldDecl 0x163da055fc8 <line:111:5, col:9> col:9 obuf_off 'int'
|-TypedefDecl 0x163da056078 <line:91:1, line:112:3> col:3 BIO_F_BUFFER_CTX 'struct bio_f_buffer_ctx_struct':'struct bio_f_buffer_ctx_struct'
| `-ElaboratedType 0x163da056020 'struct bio_f_buffer_ctx_struct' sugar
|   `-RecordType 0x163da055c80 'struct bio_f_buffer_ctx_struct'
|     `-Record 0x163da055be0 'bio_f_buffer_ctx_struct'
|-RecordDecl 0x163da0560e8 <line:114:1, line:132:1> line:114:8 invalid struct bio_st definition
| |-FieldDecl 0x163da0561b8 <line:115:5, col:23> col:23 invalid method 'const int *'
| |-FieldDecl 0x163da056780 <line:117:5, col:74> col:12 callback 'long (*)(struct bio_st *, int, const char *, int, long, long)'
| |-FieldDecl 0x163da0567f0 <line:118:5, col:11> col:11 cb_arg 'char *'
| |-FieldDecl 0x163da056860 <line:119:5, col:9> col:9 init 'int'
| |-FieldDecl 0x163da0568d0 <line:120:5, col:9> col:9 shutdown 'int'
| |-FieldDecl 0x163da056940 <line:121:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x163da0569b0 <line:122:5, col:9> col:9 retry_reason 'int'
| |-FieldDecl 0x163da056a20 <line:123:5, col:9> col:9 num 'int'
| |-FieldDecl 0x163da056a90 <line:124:5, col:11> col:11 ptr 'void *'
| |-FieldDecl 0x163da056b10 <line:125:5, col:20> col:20 next_bio 'struct bio_st *'
| |-FieldDecl 0x163da056b90 <line:126:5, col:20> col:20 prev_bio 'struct bio_st *'
| |-FieldDecl 0x163da056c00 <line:127:5, col:9> col:9 references 'int'
| |-FieldDecl 0x163da056c70 <line:128:5, col:14> col:14 invalid num_read 'int'
| |-FieldDecl 0x163da056ce0 <line:129:5, col:14> col:14 invalid num_write 'int'
| |-FieldDecl 0x163da056d50 <line:130:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x163da056dc0 <line:131:5, col:20> col:20 invalid lock 'int *'
|-VarDecl 0x163da056e30 <line:139:1, col:23> col:23 invalid bio_lookup_lock 'int *' extern
|-FunctionDecl 0x163da0570c0 <line:141:1, col:58> col:5 invalid BIO_ADDR_make 'int (int *, const struct sockaddr *)'
| |-ParmVarDecl 0x163da056eb0 <col:19, col:29> col:29 invalid ap 'int *'
| `-ParmVarDecl 0x163da056fa0 <col:33, col:56> col:56 sa 'const struct sockaddr *'
|-FunctionDecl 0x163da057290 <line:142:1, col:60> col:24 invalid BIO_ADDR_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x163da057188 <col:42, col:58> col:58 invalid ap 'const int *'
|-FunctionDecl 0x163da057490 <line:143:1, col:56> col:18 invalid BIO_ADDR_sockaddr_noconst 'struct sockaddr *(int *)'
| `-ParmVarDecl 0x163da057350 <col:44, col:54> col:54 invalid ap 'int *'
|-FunctionDecl 0x163da057620 <line:144:1, col:52> col:11 invalid BIO_ADDR_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x163da057550 <col:34, col:50> col:50 invalid ap 'const int *'
|-FunctionDecl 0x163da051728 <line:145:1, col:61> col:11 invalid BIO_ADDRINFO_sockaddr_size 'int (const int *)'
| `-ParmVarDecl 0x163da051690 <col:38, col:58> col:58 invalid bai 'const int *'
|-FunctionDecl 0x163da051890 <line:146:1, col:69> col:24 invalid BIO_ADDRINFO_sockaddr 'const struct sockaddr *(const int *)'
| `-ParmVarDecl 0x163da0517e8 <col:46, col:66> col:66 invalid bai 'const int *'
|-VarDecl 0x163da051950 <line:149:1, col:23> col:23 invalid bio_type_lock 'int *' extern
|-FunctionDecl 0x163da051a50 <line:151:1, col:31> col:6 bio_sock_cleanup_int 'void (void)'
|-FunctionDecl 0x163da051d10 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:48:1, col:56> col:12 invalid dgram_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x163da051b20 <col:24, col:29> col:29 invalid h 'int *'
| |-ParmVarDecl 0x163da051ba0 <col:32, col:44> col:44 buf 'const char *'
| `-ParmVarDecl 0x163da051c20 <col:49, col:53> col:53 num 'int'
|-FunctionDecl 0x163da051fd0 <line:49:1, col:50> col:12 invalid dgram_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x163da051de0 <col:23, col:28> col:28 invalid h 'int *'
| |-ParmVarDecl 0x163da051e60 <col:31, col:37> col:37 buf 'char *'
| `-ParmVarDecl 0x163da051ee0 <col:42, col:46> col:46 size 'int'
|-FunctionDecl 0x163da052200 <line:50:1, col:46> col:12 invalid dgram_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x163da0520a0 <col:23, col:28> col:28 invalid h 'int *'
| `-ParmVarDecl 0x163da052120 <col:31, col:43> col:43 str 'const char *'
|-FunctionDecl 0x163da052540 <line:51:1, col:62> col:13 invalid dgram_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x163da0522c8 <col:24, col:29> col:29 invalid h 'int *'
| |-ParmVarDecl 0x163da052348 <col:32, col:36> col:36 cmd 'int'
| |-ParmVarDecl 0x163da0523c8 <col:41, col:46> col:46 arg1 'long'
| `-ParmVarDecl 0x163da052448 <col:52, col:58> col:58 arg2 'void *'
|-FunctionDecl 0x163da05e7d8 <line:52:1, col:28> col:12 invalid dgram_new 'int (int *)' static
| `-ParmVarDecl 0x163da05e740 <col:22, col:27> col:27 invalid h 'int *'
|-FunctionDecl 0x163da05e930 <line:53:1, col:32> col:12 invalid dgram_free 'int (int *)' static
| `-ParmVarDecl 0x163da05e898 <col:23, col:28> col:28 invalid data 'int *'
|-FunctionDecl 0x163da05ea88 <line:54:1, col:32> col:12 invalid dgram_clear 'int (int *)' static
| `-ParmVarDecl 0x163da05e9f0 <col:24, col:29> col:29 invalid bio 'int *'
|-FunctionDecl 0x163da05ecf0 <line:57:1, col:61> col:12 invalid dgram_sctp_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x163da05eb48 <col:29, col:34> col:34 invalid h 'int *'
| |-ParmVarDecl 0x163da05ebc8 <col:37, col:49> col:49 buf 'const char *'
| `-ParmVarDecl 0x163da05ec48 <col:54, col:58> col:58 num 'int'
|-FunctionDecl 0x163da05ef68 <line:58:1, col:55> col:12 invalid dgram_sctp_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x163da05edc0 <col:28, col:33> col:33 invalid h 'int *'
| |-ParmVarDecl 0x163da05ee40 <col:36, col:42> col:42 buf 'char *'
| `-ParmVarDecl 0x163da05eec0 <col:47, col:51> col:51 size 'int'
|-FunctionDecl 0x163da05f158 <line:59:1, col:51> col:12 invalid dgram_sctp_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x163da05f038 <col:28, col:33> col:33 invalid h 'int *'
| `-ParmVarDecl 0x163da05f0b8 <col:36, col:48> col:48 str 'const char *'
|-FunctionDecl 0x163da05f450 <line:60:1, col:67> col:13 invalid dgram_sctp_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x163da05f220 <col:29, col:34> col:34 invalid h 'int *'
| |-ParmVarDecl 0x163da05f2a0 <col:37, col:41> col:41 cmd 'int'
| |-ParmVarDecl 0x163da05f320 <col:46, col:51> col:51 arg1 'long'
| `-ParmVarDecl 0x163da05f3a0 <col:57, col:63> col:63 arg2 'void *'
|-FunctionDecl 0x163da05f5c0 <line:61:1, col:33> col:12 invalid dgram_sctp_new 'int (int *)' static
| `-ParmVarDecl 0x163da05f528 <col:27, col:32> col:32 invalid h 'int *'
|-FunctionDecl 0x163da0586e0 <line:62:1, col:37> col:12 invalid dgram_sctp_free 'int (int *)' static
| `-ParmVarDecl 0x163da05f680 <col:28, col:33> col:33 invalid data 'int *'
|-FunctionDecl 0x163da058850 <line:69:1, col:40> col:12 used BIO_dgram_should_retry 'int (int)' static
| `-ParmVarDecl 0x163da0587a0 <col:35, col:39> col:39 s 'int'
|-FunctionDecl 0x163da058b98 <line:71:1, col:47> col:13 get_current_time 'void (struct timeval *)' static
| `-ParmVarDecl 0x163da058a90 <col:30, col:46> col:46 t 'struct timeval *'
|-VarDecl 0x163da058c70 <line:73:1, col:25> col:25 invalid methods_dgramp 'const int' static
|-VarDecl 0x163da058e68 <line:87:1, col:25> col:25 invalid methods_dgramp_sctp 'const int' static
|-RecordDecl 0x163da059048 <line:101:9, line:109:1> line:101:16 invalid struct bio_dgram_data_st definition
| |-FieldDecl 0x163da059118 <line:102:5, col:14> col:14 invalid peer 'int'
| |-FieldDecl 0x163da059188 <line:103:5, col:18> col:18 referenced connected 'unsigned int'
| |-FieldDecl 0x163da0591f8 <line:104:5, col:18> col:18 referenced _errno 'unsigned int'
| |-FieldDecl 0x163da059268 <line:105:5, col:18> col:18 referenced mtu 'unsigned int'
| |-RecordDecl 0x163da0592c0 parent 0x163d85b4c78 <line:106:5, col:12> col:12 struct timeval
| |-FieldDecl 0x163da0593e8 <col:5, col:20> col:20 invalid next_timeout 'struct timeval':'struct timeval'
| |-FieldDecl 0x163da059490 <line:107:5, col:20> col:20 invalid socket_timeout 'struct timeval':'struct timeval'
| `-FieldDecl 0x163da059500 <line:108:5, col:18> col:18 referenced peekmode 'unsigned int'
|-TypedefDecl 0x163da0595b8 <line:101:1, line:109:3> col:3 referenced bio_dgram_data 'struct bio_dgram_data_st':'struct bio_dgram_data_st'
| `-ElaboratedType 0x163da059560 'struct bio_dgram_data_st' sugar
|   `-RecordType 0x163da0590e0 'struct bio_dgram_data_st'
|     `-Record 0x163da059048 'bio_dgram_data_st'
|-RecordDecl 0x163da059628 <line:112:9, line:116:1> line:112:16 invalid struct bio_dgram_sctp_save_message_st definition
| |-FieldDecl 0x163da059708 <line:113:5, col:10> col:10 invalid bio 'int *'
| |-FieldDecl 0x163da059778 <line:114:5, col:11> col:11 data 'char *'
| `-FieldDecl 0x163da0597e8 <line:115:5, col:9> col:9 length 'int'
|-TypedefDecl 0x163da059898 <line:112:1, line:116:3> col:3 bio_dgram_sctp_save_message 'struct bio_dgram_sctp_save_message_st':'struct bio_dgram_sctp_save_message_st'
| `-ElaboratedType 0x163da059840 'struct bio_dgram_sctp_save_message_st' sugar
|   `-RecordType 0x163da0596c0 'struct bio_dgram_sctp_save_message_st'
|     `-Record 0x163da059628 'bio_dgram_sctp_save_message_st'
|-RecordDecl 0x163da059908 <line:118:9, line:133:1> line:118:16 invalid struct bio_dgram_sctp_data_st definition
| |-FieldDecl 0x163da0599d8 <line:119:5, col:14> col:14 invalid peer 'int'
| |-FieldDecl 0x163da059a48 <line:120:5, col:18> col:18 connected 'unsigned int'
| |-FieldDecl 0x163da059ab8 <line:121:5, col:18> col:18 referenced _errno 'unsigned int'
| |-FieldDecl 0x163da059b28 <line:122:5, col:18> col:18 referenced mtu 'unsigned int'
| |-RecordDecl 0x163da059b80 parent 0x163d85b4c78 <line:123:5, col:12> col:12 struct bio_dgram_sctp_sndinfo
| |-FieldDecl 0x163da059ca8 <col:5, col:35> col:35 invalid sndinfo 'struct bio_dgram_sctp_sndinfo':'struct bio_dgram_sctp_sndinfo'
| |-RecordDecl 0x163da059d00 parent 0x163d85b4c78 <line:124:5, col:12> col:12 struct bio_dgram_sctp_rcvinfo
| |-FieldDecl 0x163da059e28 <col:5, col:35> col:35 invalid rcvinfo 'struct bio_dgram_sctp_rcvinfo':'struct bio_dgram_sctp_rcvinfo'
| |-RecordDecl 0x163da059e80 parent 0x163d85b4c78 <line:125:5, col:12> col:12 struct bio_dgram_sctp_prinfo
| |-FieldDecl 0x163da059fa8 <col:5, col:34> col:34 invalid prinfo 'struct bio_dgram_sctp_prinfo':'struct bio_dgram_sctp_prinfo'
| |-FieldDecl 0x163da05a290 <line:126:5, col:69> col:12 referenced handle_notifications 'void (*)(int *, void *, void *)'
| |-FieldDecl 0x163da05a300 <line:127:5, col:11> col:11 referenced notification_context 'void *'
| |-FieldDecl 0x163da05a370 <line:128:5, col:9> col:9 referenced in_handshake 'int'
| |-FieldDecl 0x163da05a3e0 <line:129:5, col:9> col:9 referenced ccs_rcvd 'int'
| |-FieldDecl 0x163da05a450 <line:130:5, col:9> col:9 referenced ccs_sent 'int'
| |-FieldDecl 0x163da05a4c0 <line:131:5, col:9> col:9 referenced save_shutdown 'int'
| `-FieldDecl 0x163da05a530 <line:132:5, col:9> col:9 referenced peer_auth_tested 'int'
|-TypedefDecl 0x163da05a5e8 <line:118:1, line:133:3> col:3 referenced bio_dgram_sctp_data 'struct bio_dgram_sctp_data_st':'struct bio_dgram_sctp_data_st'
| `-ElaboratedType 0x163da05a590 'struct bio_dgram_sctp_data_st' sugar
|   `-RecordType 0x163da0599a0 'struct bio_dgram_sctp_data_st'
|     `-Record 0x163da059908 'bio_dgram_sctp_data_st'
|-FunctionDecl 0x163da0617c0 <line:136:1, line:139:1> line:136:19 invalid BIO_s_datagram 'const int *(void)'
| `-CompoundStmt 0x163da061878 <line:137:1, line:139:1>
|-FunctionDecl 0x163da061a30 <line:141:1, line:150:1> line:141:6 invalid BIO_new_dgram 'int *(int, int)'
| |-ParmVarDecl 0x163da0618a0 <col:20, col:24> col:24 used fd 'int'
| |-ParmVarDecl 0x163da061920 <col:28, col:32> col:32 used close_flag 'int'
| `-CompoundStmt 0x163da061f10 <line:142:1, line:150:1>
|   `-IfStmt 0x163da061da8 <line:146:5, line:147:21>
|     |-OpaqueValueExpr 0x163da061d90 <<invalid sloc>> '_Bool'
|     `-ReturnStmt 0x163da061d80 <col:9, col:21>
|       `-ImplicitCastExpr 0x163da061d68 <col:16, col:21> 'int *' <NullToPointer>
|         `-ParenExpr 0x163da061d48 <col:16, col:21> 'void *'
|           `-ParenExpr 0x163da061d28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|             `-CStyleCastExpr 0x163da061d00 <col:18, col:26> 'void *' <NullToPointer>
|               `-IntegerLiteral 0x163da061cc0 <col:26> 'int' 0
|-FunctionDecl 0x163da061fd8 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:152:1, line:160:1> line:152:12 invalid dgram_new 'int (int *)' static
| |-ParmVarDecl 0x163da061f40 <col:22, col:27> col:27 invalid bi 'int *'
| `-CompoundStmt 0x163da0625a0 <line:153:1, line:160:1>
|   |-DeclStmt 0x163da0623b0 <line:154:5, col:57>
|   | `-VarDecl 0x163da062128 <col:5, col:56> col:21 used data 'bio_dgram_data *' cinit
|   |   `-ImplicitCastExpr 0x163da062398 <col:28, col:56> 'bio_dgram_data *' <IntegralToPointer>
|   |     `-CallExpr 0x163da062370 <col:28, col:56> 'int'
|   |       |-ImplicitCastExpr 0x163da062358 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x163da062280 <col:28> 'int ()' Function 0x163da0621b8 'OPENSSL_zalloc' 'int ()'
|   |       `-UnaryExprOrTypeTraitExpr 0x163da062310 <col:43, col:55> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x163da0622f0 <col:49, col:55> 'bio_dgram_data':'struct bio_dgram_data_st' lvalue
|   |           `-UnaryOperator 0x163da0622d8 <col:50, col:51> 'bio_dgram_data':'struct bio_dgram_data_st' lvalue prefix '*' cannot overflow
|   |             `-ImplicitCastExpr 0x163da0622c0 <col:51> 'bio_dgram_data *' <LValueToRValue>
|   |               `-DeclRefExpr 0x163da0622a0 <col:51> 'bio_dgram_data *' lvalue Var 0x163da062128 'data' 'bio_dgram_data *' non_odr_use_unevaluated
|   |-IfStmt 0x163da062510 <line:156:5, line:157:16>
|   | |-BinaryOperator 0x163da0624b8 <line:156:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x163da062488 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:156:9> 'bio_dgram_data *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da0623c8 <col:9> 'bio_dgram_data *' lvalue Var 0x163da062128 'data' 'bio_dgram_data *'
|   | | `-ImplicitCastExpr 0x163da0624a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'bio_dgram_data *' <BitCast>
|   | |   `-ParenExpr 0x163da062468 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x163da062440 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x163da062400 <col:26> 'int' 0
|   | `-ReturnStmt 0x163da062500 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:157:9, col:16>
|   |   `-IntegerLiteral 0x163da0624d8 <col:16> 'int' 0
|   `-ReturnStmt 0x163da062590 <line:159:5, col:14>
|     `-ParenExpr 0x163da062570 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x163da062548 <col:13> 'int' 1
|-FunctionDecl 0x163da062678 <line:162:1, line:175:1> line:162:12 invalid dgram_free 'int (int *)' static
| |-ParmVarDecl 0x163da0625e0 <col:23, col:28> col:28 invalid a 'int *'
| `-CompoundStmt 0x163da062b90 <line:163:1, line:175:1>
|   |-DeclStmt 0x163da0627e8 <line:164:5, col:25>
|   | `-VarDecl 0x163da062780 <col:5, col:21> col:21 used data 'bio_dgram_data *'
|   |-IfStmt 0x163da0628f8 <line:166:5, line:167:18>
|   | |-OpaqueValueExpr 0x163da0628e0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x163da0628d0 <col:9, col:18>
|   |   `-ParenExpr 0x163da0628b0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x163da062888 <col:17> 'int' 0
|   |-IfStmt 0x163da062960 <line:168:5, line:169:16>
|   | |-OpaqueValueExpr 0x163da062948 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x163da062938 <col:9, col:16>
|   |   `-IntegerLiteral 0x163da062910 <col:16> 'int' 0
|   |-CallExpr 0x163da062af8 <line:172:5, col:22> 'int'
|   | |-ImplicitCastExpr 0x163da062ae0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x163da062aa0 <col:5> 'int ()' Function 0x163da0629d8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x163da062b20 <col:18> 'bio_dgram_data *' <LValueToRValue>
|   |   `-DeclRefExpr 0x163da062ac0 <col:18> 'bio_dgram_data *' lvalue Var 0x163da062780 'data' 'bio_dgram_data *'
|   `-ReturnStmt 0x163da062b80 <line:174:5, col:14>
|     `-ParenExpr 0x163da062b60 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x163da062b38 <col:13> 'int' 1
|-FunctionDecl 0x163da062c78 <line:177:1, line:189:1> line:177:12 invalid dgram_clear 'int (int *)' static
| |-ParmVarDecl 0x163da062be0 <col:24, col:29> col:29 invalid a 'int *'
| `-CompoundStmt 0x163da063088 <line:178:1, line:189:1>
|   |-IfStmt 0x163da062e30 <line:179:5, line:180:18>
|   | |-OpaqueValueExpr 0x163da062e18 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x163da062e08 <col:9, col:18>
|   |   `-ParenExpr 0x163da062de8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x163da062dc0 <col:17> 'int' 0
|   |-IfStmt 0x163da063018 <line:181:5, line:187:5>
|   | |-OpaqueValueExpr 0x163da063000 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x163da062fe8 <line:181:22, line:187:5>
|   |   `-IfStmt 0x163da062f80 <line:182:9, line:184:9>
|   |     |-OpaqueValueExpr 0x163da062f68 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x163da062f58 <line:182:22, line:184:9>
|   `-ReturnStmt 0x163da063078 <line:188:5, col:14>
|     `-ParenExpr 0x163da063058 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x163da063030 <col:13> 'int' 1
|-FunctionDecl 0x163da063188 <line:191:1, line:269:1> line:191:13 invalid dgram_adjust_rcv_timeout 'void (int *)' static
| |-ParmVarDecl 0x163da0630c8 <col:38, col:43> col:43 invalid b 'int *'
| `-CompoundStmt 0x163da063248 <line:192:1, line:269:1>
|-FunctionDecl 0x163da063300 <line:271:1, line:294:1> line:271:13 invalid dgram_reset_rcv_timeout 'void (int *)' static
| |-ParmVarDecl 0x163da063270 <col:37, col:42> col:42 invalid b 'int *'
| `-CompoundStmt 0x163da0633c0 <line:272:1, line:294:1>
|-FunctionDecl 0x163da063590 <line:296:1, line:328:1> line:296:12 invalid dgram_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x163da0633e8 <col:23, col:28> col:28 invalid b 'int *'
| |-ParmVarDecl 0x163da063468 <col:31, col:37> col:37 used out 'char *'
| |-ParmVarDecl 0x163da0634e8 <col:42, col:46> col:46 used outl 'int'
| `-CompoundStmt 0x163da05d8c0 <line:297:1, line:328:1>
|   |-DeclStmt 0x163da063708 <line:298:5, col:16>
|   | `-VarDecl 0x163da063678 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x163da0636e0 <col:15> 'int' 0
|   |-DeclStmt 0x163da064808 <line:299:5, col:52>
|   | `-VarDecl 0x163da0647a0 <col:5, col:21> col:21 used data 'bio_dgram_data *'
|   |-DeclStmt 0x163da0648c8 <line:300:5, col:18>
|   | `-VarDecl 0x163da064838 <col:5, col:17> col:9 used flags 'int' cinit
|   |   `-IntegerLiteral 0x163da0648a0 <col:17> 'int' 0
|   |-IfStmt 0x163da05d840 <line:305:5, line:326:5>
|   | |-BinaryOperator 0x163da0649d0 <line:305:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x163da0649a0 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:305:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da0648e0 <col:9> 'char *' lvalue ParmVar 0x163da063468 'out' 'char *'
|   | | `-ImplicitCastExpr 0x163da0649b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x163da064980 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x163da064958 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x163da064918 <col:26> 'int' 0
|   | `-CompoundStmt 0x163da05d820 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:305:22, line:326:5>
|   |   |-CallExpr 0x163da064b18 <line:306:9, col:28> 'int'
|   |   | `-ImplicitCastExpr 0x163da064b00 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x163da064ae0 <col:9> 'int ()' Function 0x163da064a18 'clear_socket_error' 'int ()'
|   |   `-IfStmt 0x163da05d808 <line:318:9, line:323:9>
|   |     |-BinaryOperator 0x163da065440 <line:318:13, col:19> 'int' '<'
|   |     | |-ImplicitCastExpr 0x163da065428 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x163da0653e0 <col:13> 'int' lvalue Var 0x163da063678 'ret' 'int'
|   |     | `-IntegerLiteral 0x163da065400 <col:19> 'int' 0
|   |     `-CompoundStmt 0x163da05d7f0 <col:22, line:323:9>
|   |       `-IfStmt 0x163da05d7d8 <line:319:13, line:322:13>
|   |         |-CallExpr 0x163da0654e0 <line:319:17, col:43> 'int'
|   |         | |-ImplicitCastExpr 0x163da0654c8 <col:17> 'int (*)(int)' <FunctionToPointerDecay>
|   |         | | `-DeclRefExpr 0x163da065460 <col:17> 'int (int)' Function 0x163da058850 'BIO_dgram_should_retry' 'int (int)'
|   |         | `-ImplicitCastExpr 0x163da065508 <col:40> 'int' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x163da065480 <col:40> 'int' lvalue Var 0x163da063678 'ret' 'int'
|   |         `-CompoundStmt 0x163da05d7c0 <col:46, line:322:13>
|   |           `-BinaryOperator 0x163da05d7a0 <line:321:17, col:54> 'unsigned int' '='
|   |             |-MemberExpr 0x163da065668 <col:17, col:23> 'unsigned int' lvalue ->_errno 0x163da0591f8
|   |             | `-ImplicitCastExpr 0x163da065650 <col:17> 'bio_dgram_data *' <LValueToRValue>
|   |             |   `-DeclRefExpr 0x163da065630 <col:17> 'bio_dgram_data *' lvalue Var 0x163da0647a0 'data' 'bio_dgram_data *'
|   |             `-ImplicitCastExpr 0x163da05d788 <col:32, col:54> 'unsigned int' <IntegralCast>
|   |               `-CallExpr 0x163da05d768 <col:32, col:54> 'int'
|   |                 `-ImplicitCastExpr 0x163da05d750 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   |                   `-DeclRefExpr 0x163da05d730 <col:32> 'int ()' Function 0x163da0656c0 'get_last_socket_error' 'int ()'
|   `-ReturnStmt 0x163da05d8b0 <line:327:5, col:16>
|     `-ImplicitCastExpr 0x163da05d898 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x163da05d878 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x163da05d858 <col:13> 'int' lvalue Var 0x163da063678 'ret' 'int'
|-FunctionDecl 0x163da064b80 <line:307:9> col:9 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x163da064c20 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x163da064c88 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x163da064cf0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x163da05dab8 <line:330:1, line:358:1> line:330:12 invalid dgram_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x163da05d910 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x163da05d990 <col:32, col:44> col:44 used in 'const char *'
| |-ParmVarDecl 0x163da05da10 <col:48, col:52> col:52 used inl 'int'
| `-CompoundStmt 0x163da05e680 <line:331:1, line:358:1>
|   |-DeclStmt 0x163da05dc08 <line:332:5, col:12>
|   | `-VarDecl 0x163da05dba0 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x163da05dc98 <line:333:5, col:52>
|   | `-VarDecl 0x163da05dc30 <col:5, col:21> col:21 used data 'bio_dgram_data *'
|   |-CallExpr 0x163da05dce8 <line:334:5, col:24> 'int'
|   | `-ImplicitCastExpr 0x163da05dcd0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x163da05dcb0 <col:5> 'int ()' Function 0x163da064a18 'clear_socket_error' 'int ()'
|   |-IfStmt 0x163da05e250 <line:336:5, line:348:5> has_else
|   | |-ImplicitCastExpr 0x163da05dd88 <line:336:9, col:15> 'unsigned int' <LValueToRValue>
|   | | `-MemberExpr 0x163da05dd58 <col:9, col:15> 'unsigned int' lvalue ->connected 0x163da059188
|   | |   `-ImplicitCastExpr 0x163da05dd40 <col:9> 'bio_dgram_data *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x163da05dd08 <col:9> 'bio_dgram_data *' lvalue Var 0x163da05dc30 'data' 'bio_dgram_data *'
|   | |-NullStmt 0x163da05e248 <line:337:9>
|   | `-CompoundStmt 0x163da05e230 <line:338:10, line:348:5>
|   |   `-DeclStmt 0x163da05e010 <line:339:9, col:58>
|   |     `-VarDecl 0x163da05df70 <col:9, col:13> col:13 used peerlen 'int'
|   |-IfStmt 0x163da05e600 <line:351:5, line:356:5>
|   | |-BinaryOperator 0x163da05e2f8 <line:351:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x163da05e2e0 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da05e298 <col:9> 'int' lvalue Var 0x163da05dba0 'ret' 'int'
|   | | `-IntegerLiteral 0x163da05e2b8 <col:16> 'int' 0
|   | `-CompoundStmt 0x163da05e5e8 <col:19, line:356:5>
|   |   `-IfStmt 0x163da05e5d0 <line:352:9, line:355:9>
|   |     |-CallExpr 0x163da05e370 <line:352:13, col:39> 'int'
|   |     | |-ImplicitCastExpr 0x163da05e358 <col:13> 'int (*)(int)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x163da05e318 <col:13> 'int (int)' Function 0x163da058850 'BIO_dgram_should_retry' 'int (int)'
|   |     | `-ImplicitCastExpr 0x163da05e398 <col:36> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x163da05e338 <col:36> 'int' lvalue Var 0x163da05dba0 'ret' 'int'
|   |     `-CompoundStmt 0x163da05e5b8 <col:42, line:355:9>
|   |       `-BinaryOperator 0x163da05e598 <line:354:13, col:50> 'unsigned int' '='
|   |         |-MemberExpr 0x163da05e4f8 <col:13, col:19> 'unsigned int' lvalue ->_errno 0x163da0591f8
|   |         | `-ImplicitCastExpr 0x163da05e4e0 <col:13> 'bio_dgram_data *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x163da05e4c0 <col:13> 'bio_dgram_data *' lvalue Var 0x163da05dc30 'data' 'bio_dgram_data *'
|   |         `-ImplicitCastExpr 0x163da05e580 <col:28, col:50> 'unsigned int' <IntegralCast>
|   |           `-CallExpr 0x163da05e560 <col:28, col:50> 'int'
|   |             `-ImplicitCastExpr 0x163da05e548 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   |               `-DeclRefExpr 0x163da05e528 <col:28> 'int ()' Function 0x163da0656c0 'get_last_socket_error' 'int ()'
|   `-ReturnStmt 0x163da05e670 <line:357:5, col:16>
|     `-ImplicitCastExpr 0x163da05e658 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x163da05e638 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x163da05e618 <col:13> 'int' lvalue Var 0x163da05dba0 'ret' 'int'
|-FunctionDecl 0x163da0688f0 <line:360:1, line:397:1> line:360:13 used dgram_get_mtu_overhead 'long (bio_dgram_data *)' static
| |-ParmVarDecl 0x163da0687e0 <col:36, col:52> col:52 used data 'bio_dgram_data *'
| `-CompoundStmt 0x163da068d70 <line:361:1, line:397:1>
|   |-DeclStmt 0x163da068a30 <line:362:5, col:13>
|   | `-VarDecl 0x163da0689c8 <col:5, col:10> col:10 used ret 'long'
|   `-ReturnStmt 0x163da068d60 <line:396:5, col:12>
|     `-ImplicitCastExpr 0x163da068d48 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x163da068d28 <col:12> 'long' lvalue Var 0x163da0689c8 'ret' 'long'
|-FunctionDecl 0x163da068fd8 <line:399:1, line:802:1> line:399:13 invalid dgram_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x163da068da8 <col:24, col:29> col:29 invalid b 'int *'
| |-ParmVarDecl 0x163da068e28 <col:32, col:36> col:36 used cmd 'int'
| |-ParmVarDecl 0x163da068ea8 <col:41, col:46> col:46 used num 'long'
| |-ParmVarDecl 0x163da068f28 <col:51, col:57> col:57 used ptr 'void *'
| `-CompoundStmt 0x163da069c90 <line:400:1, line:802:1>
|   |-DeclStmt 0x163da069170 <line:401:5, col:17>
|   | `-VarDecl 0x163da0690c8 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x163da069158 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x163da069130 <col:16> 'int' 1
|   |-DeclStmt 0x163da069208 <line:402:5, col:12>
|   | `-VarDecl 0x163da0691a0 <col:5, col:10> col:10 used ip 'int *'
|   |-DeclStmt 0x163da069338 <line:403:5, col:32>
|   | `-VarDecl 0x163da069230 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\bio\bss_dgram.c:403:21 used data 'bio_dgram_data *' cinit
|   |   `-ImplicitCastExpr 0x163da069320 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'bio_dgram_data *' <NullToPointer>
|   |     `-ParenExpr 0x163da069300 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x163da0692d8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x163da069298 <col:26> 'int' 0
|   |-DeclStmt 0x163da0693f8 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:404:5, col:24>
|   | `-VarDecl 0x163da069368 <col:5, col:23> col:9 used sockopt_val 'int' cinit
|   |   `-IntegerLiteral 0x163da0693d0 <col:23> 'int' 0
|   |-DeclStmt 0x163da069490 <line:405:5, col:16>
|   | `-VarDecl 0x163da069428 <col:5, col:9> col:9 used d_errno 'int'
|   |-SwitchStmt 0x163da069530 <line:415:5, line:800:5>
|   | |-ImplicitCastExpr 0x163da069518 <line:415:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x163da0694e0 <col:13> 'int' lvalue ParmVar 0x163da068e28 'cmd' 'int'
|   | `-CompoundStmt 0x163da069ab8 <col:18, line:800:5>
|   |   |-BinaryOperator 0x163da0695c8 <line:417:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x163da069550 <col:9> 'long' lvalue ParmVar 0x163da068ea8 'num' 'long'
|   |   | `-ImplicitCastExpr 0x163da0695b0 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x163da069588 <col:15> 'int' 0
|   |   |-BinaryOperator 0x163da069660 <line:418:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x163da0695e8 <col:9> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da069648 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x163da069620 <col:15> 'int' 0
|   |   |-BreakStmt 0x163da069680 <line:419:9>
|   |   |-BinaryOperator 0x163da0696e8 <line:421:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x163da069688 <col:9> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da0696d0 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x163da0696a8 <col:15> 'int' 0
|   |   |-BreakStmt 0x163da069708 <line:422:9>
|   |   |-BreakStmt 0x163da065850 <line:428:9>
|   |   |-IfStmt 0x163da065b58 <line:430:9, line:436:20> has_else
|   |   | |-OpaqueValueExpr 0x163da065b40 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x163da065a90 <line:430:22, line:435:9>
|   |   | | `-BinaryOperator 0x163da065908 <line:431:13, col:25> 'int *' '='
|   |   | |   |-DeclRefExpr 0x163da065858 <col:13> 'int *' lvalue Var 0x163da0691a0 'ip' 'int *'
|   |   | |   `-CStyleCastExpr 0x163da0658e0 <col:18, col:25> 'int *' <BitCast>
|   |   | |     `-ImplicitCastExpr 0x163da0658c8 <col:25> 'void *' <LValueToRValue> part_of_explicit_cast
|   |   | |       `-DeclRefExpr 0x163da065890 <col:25> 'void *' lvalue ParmVar 0x163da068f28 'ptr' 'void *'
|   |   | `-BinaryOperator 0x163da065b20 <line:436:13, col:20> 'long' '='
|   |   |   |-DeclRefExpr 0x163da065aa8 <col:13> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x163da065b08 <col:19, col:20> 'long' <IntegralCast>
|   |   |     `-UnaryOperator 0x163da065af0 <col:19, col:20> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x163da065ac8 <col:20> 'int' 1
|   |   |-BreakStmt 0x163da065b80 <line:437:9>
|   |   |-BreakStmt 0x163da065ba8 <line:440:9>
|   |   |-BreakStmt 0x163da065c28 <line:443:9>
|   |   |-BinaryOperator 0x163da065c90 <line:446:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x163da065c30 <col:9> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da065c78 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x163da065c50 <col:15> 'int' 0
|   |   |-BreakStmt 0x163da065cb0 <line:447:9>
|   |   |-BinaryOperator 0x163da065d18 <line:450:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x163da065cb8 <col:9> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da065d00 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x163da065cd8 <col:15> 'int' 1
|   |   |-BreakStmt 0x163da065d38 <line:451:9>
|   |   |-BreakStmt 0x163da065d78 <line:454:9>
|   |   |-BinaryOperator 0x163da065df8 <line:484:9, col:16> 'long' '='
|   |   | |-DeclRefExpr 0x163da065d80 <col:9> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da065de0 <col:15, col:16> 'long' <IntegralCast>
|   |   |   `-UnaryOperator 0x163da065dc8 <col:15, col:16> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x163da065da0 <col:16> 'int' 1
|   |   |-BreakStmt 0x163da065e18 <line:486:9>
|   |   |-BinaryOperator 0x163da065e80 <line:533:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x163da065e20 <col:9> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da065e68 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x163da065e40 <col:15> 'int' 0
|   |   |-BreakStmt 0x163da065ea0 <line:535:9>
|   |   |-BinaryOperator 0x163da065fd8 <line:537:9, col:43> 'long' '='
|   |   | |-DeclRefExpr 0x163da065ea8 <col:9> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | `-UnaryOperator 0x163da065fc0 <col:15, col:43> 'long' prefix '-'
|   |   |   `-CallExpr 0x163da065f80 <col:16, col:43> 'long'
|   |   |     |-ImplicitCastExpr 0x163da065f68 <col:16> 'long (*)(bio_dgram_data *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x163da065ec8 <col:16> 'long (bio_dgram_data *)' Function 0x163da0688f0 'dgram_get_mtu_overhead' 'long (bio_dgram_data *)'
|   |   |     `-ImplicitCastExpr 0x163da065fa8 <col:39> 'bio_dgram_data *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x163da065ee8 <col:39> 'bio_dgram_data *' lvalue Var 0x163da069230 'data' 'bio_dgram_data *'
|   |   |-BreakStmt 0x163da0661f0 <line:560:9>
|   |   |-ReturnStmt 0x163da066290 <line:562:9, col:22>
|   |   | `-ImplicitCastExpr 0x163da066278 <col:16, col:22> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x163da066260 <col:16, col:22> 'unsigned int' <LValueToRValue>
|   |   |     `-MemberExpr 0x163da066230 <col:16, col:22> 'unsigned int' lvalue ->mtu 0x163da059268
|   |   |       `-ImplicitCastExpr 0x163da066218 <col:16> 'bio_dgram_data *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x163da0661f8 <col:16> 'bio_dgram_data *' lvalue Var 0x163da069230 'data' 'bio_dgram_data *'
|   |   |-BinaryOperator 0x163da066358 <line:564:9, col:21> 'unsigned int' '='
|   |   | |-MemberExpr 0x163da0662d8 <col:9, col:15> 'unsigned int' lvalue ->mtu 0x163da059268
|   |   | | `-ImplicitCastExpr 0x163da0662c0 <col:9> 'bio_dgram_data *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x163da0662a0 <col:9> 'bio_dgram_data *' lvalue Var 0x163da069230 'data' 'bio_dgram_data *'
|   |   | `-ImplicitCastExpr 0x163da066340 <col:21> 'unsigned int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x163da066328 <col:21> 'long' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x163da066308 <col:21> 'long' lvalue ParmVar 0x163da068ea8 'num' 'long'
|   |   |-BinaryOperator 0x163da0663d0 <line:565:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x163da066378 <col:9> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da0663b8 <col:15> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x163da066398 <col:15> 'long' lvalue ParmVar 0x163da068ea8 'num' 'long'
|   |   |-BreakStmt 0x163da0663f0 <line:566:9>
|   |   |-IfStmt 0x163da066788 <line:568:9, line:574:9> has_else
|   |   | |-BinaryOperator 0x163da0664b8 <line:568:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x163da0664a0 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:568:13> 'void *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x163da0663f8 <col:13> 'void *' lvalue ParmVar 0x163da068f28 'ptr' 'void *'
|   |   | | `-ParenExpr 0x163da066480 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |   | |   `-CStyleCastExpr 0x163da066458 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |     `-IntegerLiteral 0x163da066418 <col:26> 'int' 0
|   |   | |-CompoundStmt 0x163da0665d8 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:568:26, line:571:9>
|   |   | | `-BinaryOperator 0x163da066580 <line:569:13, col:31> 'unsigned int' '='
|   |   | |   |-MemberExpr 0x163da066510 <col:13, col:19> 'unsigned int' lvalue ->connected 0x163da059188
|   |   | |   | `-ImplicitCastExpr 0x163da0664f8 <col:13> 'bio_dgram_data *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x163da0664d8 <col:13> 'bio_dgram_data *' lvalue Var 0x163da069230 'data' 'bio_dgram_data *'
|   |   | |   `-ImplicitCastExpr 0x163da066568 <col:31> 'unsigned int' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x163da066540 <col:31> 'int' 1
|   |   | `-CompoundStmt 0x163da066770 <line:571:16, line:574:9>
|   |   |   `-BinaryOperator 0x163da066698 <line:572:13, col:31> 'unsigned int' '='
|   |   |     |-MemberExpr 0x163da066628 <col:13, col:19> 'unsigned int' lvalue ->connected 0x163da059188
|   |   |     | `-ImplicitCastExpr 0x163da066610 <col:13> 'bio_dgram_data *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x163da0665f0 <col:13> 'bio_dgram_data *' lvalue Var 0x163da069230 'data' 'bio_dgram_data *'
|   |   |     `-ImplicitCastExpr 0x163da066680 <col:31> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x163da066658 <col:31> 'int' 0
|   |   |-BreakStmt 0x163da063790 <line:575:9>
|   |   |-IfStmt 0x163da0639b0 <line:580:9, line:581:19>
|   |   | |-BinaryOperator 0x163da063918 <line:580:13, col:31> 'int' '||'
|   |   | | |-BinaryOperator 0x163da063868 <col:13, col:20> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x163da063838 <col:13> 'long' <LValueToRValue>
|   |   | | | | `-DeclRefExpr 0x163da0637f0 <col:13> 'long' lvalue ParmVar 0x163da068ea8 'num' 'long'
|   |   | | | `-ImplicitCastExpr 0x163da063850 <col:20> 'long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x163da063810 <col:20> 'int' 0
|   |   | | `-BinaryOperator 0x163da0638f8 <col:25, col:31> 'int' '>'
|   |   | |   |-ImplicitCastExpr 0x163da0638c8 <col:25> 'long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x163da063888 <col:25> 'long' lvalue ParmVar 0x163da068ea8 'num' 'long'
|   |   | |   `-ImplicitCastExpr 0x163da0638e0 <col:31> 'long' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x163da0638a8 <col:31> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | `-BinaryOperator 0x163da063990 <line:581:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x163da063938 <col:13> 'long' lvalue ParmVar 0x163da068ea8 'num' 'long'
|   |   |   `-ImplicitCastExpr 0x163da063978 <col:19> 'long' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x163da063958 <col:19> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   |-BreakStmt 0x163da063d28 <line:583:9>
|   |   |-BreakStmt 0x163da063d68 <line:586:9>
|   |   |-BreakStmt 0x163da063e08 <line:589:9>
|   |   |-BinaryOperator 0x163da063f48 <line:710:9, col:42> 'int' '='
|   |   | |-DeclRefExpr 0x163da063e10 <col:9> 'int' lvalue Var 0x163da069428 'd_errno' 'int'
|   |   | `-ParenExpr 0x163da063f28 <col:19, col:42> 'int'
|   |   |   `-BinaryOperator 0x163da063f08 <col:20, D:\Microsoft Visual Studio 12.0\VC\include\errno.h:50:25> 'int' '=='
|   |   |     |-ImplicitCastExpr 0x163da063ed8 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:710:20, col:26> 'unsigned int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x163da063e80 <col:20, col:26> 'unsigned int' lvalue ->_errno 0x163da0591f8
|   |   |     |   `-ImplicitCastExpr 0x163da063e68 <col:20> 'bio_dgram_data *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x163da063e48 <col:20> 'bio_dgram_data *' lvalue Var 0x163da069230 'data' 'bio_dgram_data *'
|   |   |     `-ImplicitCastExpr 0x163da063ef0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:50:25> 'unsigned int' <IntegralCast>
|   |   |       `-IntegerLiteral 0x163da063eb0 <col:25> 'int' 11
|   |   |-IfStmt 0x163da064188 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:712:9, line:716:19> has_else
|   |   | |-ImplicitCastExpr 0x163da063f88 <line:712:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x163da063f68 <col:13> 'int' lvalue Var 0x163da069428 'd_errno' 'int'
|   |   | |-CompoundStmt 0x163da0640e8 <col:22, line:715:9>
|   |   | | |-BinaryOperator 0x163da064000 <line:713:13, col:19> 'long' '='
|   |   | | | |-DeclRefExpr 0x163da063fa0 <col:13> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | | | `-ImplicitCastExpr 0x163da063fe8 <col:19> 'long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x163da063fc0 <col:19> 'int' 1
|   |   | | `-BinaryOperator 0x163da0640c8 <line:714:13, col:28> 'unsigned int' '='
|   |   | |   |-MemberExpr 0x163da064058 <col:13, col:19> 'unsigned int' lvalue ->_errno 0x163da0591f8
|   |   | |   | `-ImplicitCastExpr 0x163da064040 <col:13> 'bio_dgram_data *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x163da064020 <col:13> 'bio_dgram_data *' lvalue Var 0x163da069230 'data' 'bio_dgram_data *'
|   |   | |   `-ImplicitCastExpr 0x163da0640b0 <col:28> 'unsigned int' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x163da064088 <col:28> 'int' 0
|   |   | `-BinaryOperator 0x163da064168 <line:716:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x163da064108 <col:13> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x163da064150 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x163da064128 <col:19> 'int' 0
|   |   |-BreakStmt 0x163da0641b0 <line:717:9>
|   |   |-IfStmt 0x163da064480 <line:720:9, line:724:19> has_else
|   |   | |-BinaryOperator 0x163da064278 <line:720:13, D:\Microsoft Visual Studio 12.0\VC\include\errno.h:107:25> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x163da064248 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:720:13, col:19> 'unsigned int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x163da0641f0 <col:13, col:19> 'unsigned int' lvalue ->_errno 0x163da0591f8
|   |   | | |   `-ImplicitCastExpr 0x163da0641d8 <col:13> 'bio_dgram_data *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x163da0641b8 <col:13> 'bio_dgram_data *' lvalue Var 0x163da069230 'data' 'bio_dgram_data *'
|   |   | | `-ImplicitCastExpr 0x163da064260 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:107:25> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x163da064220 <col:25> 'int' 115
|   |   | |-CompoundStmt 0x163da0643e0 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:720:39, line:723:9>
|   |   | | |-BinaryOperator 0x163da0642f8 <line:721:13, col:19> 'long' '='
|   |   | | | |-DeclRefExpr 0x163da064298 <col:13> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | | | `-ImplicitCastExpr 0x163da0642e0 <col:19> 'long' <IntegralCast>
|   |   | | |   `-IntegerLiteral 0x163da0642b8 <col:19> 'int' 1
|   |   | | `-BinaryOperator 0x163da0643c0 <line:722:13, col:28> 'unsigned int' '='
|   |   | |   |-MemberExpr 0x163da064350 <col:13, col:19> 'unsigned int' lvalue ->_errno 0x163da0591f8
|   |   | |   | `-ImplicitCastExpr 0x163da064338 <col:13> 'bio_dgram_data *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x163da064318 <col:13> 'bio_dgram_data *' lvalue Var 0x163da069230 'data' 'bio_dgram_data *'
|   |   | |   `-ImplicitCastExpr 0x163da0643a8 <col:28> 'unsigned int' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x163da064380 <col:28> 'int' 0
|   |   | `-BinaryOperator 0x163da064460 <line:724:13, col:19> 'long' '='
|   |   |   |-DeclRefExpr 0x163da064400 <col:13> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x163da064448 <col:19> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x163da064420 <col:19> 'int' 0
|   |   |-BreakStmt 0x163da0644a8 <line:725:9>
|   |   |-BinaryOperator 0x163da0645a0 <line:728:9, col:33> 'int' '='
|   |   | |-DeclRefExpr 0x163da0644b0 <col:9> 'int' lvalue Var 0x163da069368 'sockopt_val' 'int'
|   |   | `-ConditionalOperator 0x163da064570 <col:23, col:33> 'int'
|   |   |   |-ImplicitCastExpr 0x163da064558 <col:23> 'long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x163da0644e8 <col:23> 'long' lvalue ParmVar 0x163da068ea8 'num' 'long'
|   |   |   |-IntegerLiteral 0x163da064508 <col:29> 'int' 1
|   |   |   `-IntegerLiteral 0x163da064530 <col:33> 'int' 0
|   |   |-BreakStmt 0x163da069820 <line:781:9>
|   |   |-BinaryOperator 0x163da0698e0 <line:783:9, col:42> 'long' '='
|   |   | |-DeclRefExpr 0x163da069828 <col:9> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   | `-CallExpr 0x163da0698a0 <col:15, col:42> 'long'
|   |   |   |-ImplicitCastExpr 0x163da069888 <col:15> 'long (*)(bio_dgram_data *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x163da069848 <col:15> 'long (bio_dgram_data *)' Function 0x163da0688f0 'dgram_get_mtu_overhead' 'long (bio_dgram_data *)'
|   |   |   `-ImplicitCastExpr 0x163da0698c8 <col:38> 'bio_dgram_data *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x163da069868 <col:38> 'bio_dgram_data *' lvalue Var 0x163da069230 'data' 'bio_dgram_data *'
|   |   |-BreakStmt 0x163da069900 <line:784:9>
|   |   |-BinaryOperator 0x163da0699e8 <line:795:9, col:40> 'unsigned int' '='
|   |   | |-MemberExpr 0x163da069940 <col:9, col:15> 'unsigned int' lvalue ->peekmode 0x163da059500
|   |   | | `-ImplicitCastExpr 0x163da069928 <col:9> 'bio_dgram_data *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x163da069908 <col:9> 'bio_dgram_data *' lvalue Var 0x163da069230 'data' 'bio_dgram_data *'
|   |   | `-CStyleCastExpr 0x163da0699c0 <col:26, col:40> 'unsigned int' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x163da0699a8 <col:40> 'long' <LValueToRValue> part_of_explicit_cast
|   |   |     `-DeclRefExpr 0x163da069970 <col:40> 'long' lvalue ParmVar 0x163da068ea8 'num' 'long'
|   |   |-BreakStmt 0x163da069a08 <line:796:9>
|   |   |-DefaultStmt 0x163da069a90 <line:797:5, line:798:15>
|   |   | `-BinaryOperator 0x163da069a70 <col:9, col:15> 'long' '='
|   |   |   |-DeclRefExpr 0x163da069a10 <col:9> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|   |   |   `-ImplicitCastExpr 0x163da069a58 <col:15> 'long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x163da069a30 <col:15> 'int' 0
|   |   `-BreakStmt 0x163da069ab0 <line:799:9>
|   `-ReturnStmt 0x163da069c80 <line:801:5, col:16>
|     `-ImplicitCastExpr 0x163da069c68 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x163da069c48 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x163da069c28 <col:13> 'long' lvalue Var 0x163da0690c8 'ret' 'long'
|-FunctionDecl 0x163da063a10 <line:582:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x163da063ab0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x163da063b18 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x163da063b80 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x163da069e10 <line:804:1, line:811:1> line:804:12 invalid dgram_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x163da069cf0 <col:23, col:28> col:28 invalid bp 'int *'
| |-ParmVarDecl 0x163da069d70 <col:32, col:44> col:44 used str 'const char *'
| `-CompoundStmt 0x163da06a3a8 <line:805:1, line:811:1>
|   |-DeclStmt 0x163da069ff0 <line:806:5, col:15>
|   | |-VarDecl 0x163da069ef0 <col:5, col:9> col:9 used n 'int'
|   | `-VarDecl 0x163da069f70 <col:5, col:12> col:12 used ret 'int'
|   |-BinaryOperator 0x163da06a2a8 <line:808:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x163da06a008 <col:5> 'int' lvalue Var 0x163da069ef0 'n' 'int'
|   | `-ImplicitCastExpr 0x163da06a290 <col:9, col:19> 'int' <IntegralCast>
|   |   `-CallExpr 0x163da06a250 <col:9, col:19> 'unsigned long long'
|   |     |-ImplicitCastExpr 0x163da06a238 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x163da06a180 <col:9> 'unsigned long long (const char *)' Function 0x163da06a070 'strlen' 'unsigned long long (const char *)'
|   |     `-ImplicitCastExpr 0x163da06a278 <col:16> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x163da06a1b8 <col:16> 'const char *' lvalue ParmVar 0x163da069d70 'str' 'const char *'
|   `-ReturnStmt 0x163da06a398 <line:810:5, col:16>
|     `-ImplicitCastExpr 0x163da06a380 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x163da06a360 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x163da06a340 <col:13> 'int' lvalue Var 0x163da069f70 'ret' 'int'
|-FunctionDecl 0x163da06a070 <line:808:9> col:9 implicit used strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x163da06a110 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x163da06a470 <line:814:1, line:817:1> line:814:19 invalid BIO_s_datagram_sctp 'const int *(void)'
| `-CompoundStmt 0x163da06a528 <line:815:1, line:817:1>
|-FunctionDecl 0x163da06a6a0 <line:819:1, line:938:1> line:819:6 invalid BIO_new_dgram_sctp 'int *(int, int)'
| |-ParmVarDecl 0x163da06a550 <col:25, col:29> col:29 used fd 'int'
| |-ParmVarDecl 0x163da06a5d0 <col:33, col:37> col:37 used close_flag 'int'
| `-CompoundStmt 0x163da06d790 <line:820:1, line:938:1>
|   |-DeclStmt 0x163da06b8d0 <line:822:5, col:28>
|   | |-VarDecl 0x163da06a780 <col:5, col:9> col:9 used ret 'int'
|   | `-VarDecl 0x163da06b828 <col:5, col:23> col:14 used optval 'int' cinit
|   |   `-IntegerLiteral 0x163da06b890 <col:23> 'int' 20000
|   |-DeclStmt 0x163da06ba50 <line:823:5, col:40>
|   | |-VarDecl 0x163da06b900 <col:5, col:21> col:9 used auth_data 'int' cinit
|   | | `-IntegerLiteral 0x163da06b968 <col:21> 'int' 0
|   | `-VarDecl 0x163da06b9a8 <col:5, col:39> col:24 used auth_forward 'int' cinit
|   |   `-IntegerLiteral 0x163da06ba10 <col:39> 'int' 0
|   |-DeclStmt 0x163da06bb18 <line:824:5, col:21>
|   | `-VarDecl 0x163da06bab0 <col:5, col:20> col:20 used p 'unsigned char *'
|   |-DeclStmt 0x163da06bcc8 <line:825:5, col:31>
|   | |-RecordDecl 0x163da06bb30 <col:5, col:12> col:12 struct sctp_authchunk
|   | `-VarDecl 0x163da06bc48 <col:5, col:27> col:27 invalid auth 'struct sctp_authchunk':'struct sctp_authchunk'
|   |-DeclStmt 0x163da06bee0 <line:826:5, col:39>
|   | |-RecordDecl 0x163da06bce0 <col:5, col:12> col:12 struct sctp_authchunks
|   | `-VarDecl 0x163da06be60 <col:5, col:29> col:29 used authchunks 'struct sctp_authchunks *'
|   |-IfStmt 0x163da06c088 <line:837:5, line:838:21>
|   | |-OpaqueValueExpr 0x163da06c070 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x163da06c060 <col:9, col:21>
|   |   `-ImplicitCastExpr 0x163da06c048 <col:16, col:21> 'int *' <NullToPointer>
|   |     `-ParenExpr 0x163da06c028 <col:16, col:21> 'void *'
|   |       `-ParenExpr 0x163da06c008 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x163da06bfe0 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x163da06bfa0 <col:26> 'int' 0
|   |-IfStmt 0x163da06c558 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:846:5, line:849:5>
|   | |-BinaryOperator 0x163da06c340 <line:846:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x163da06c328 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da06c2e0 <col:9> 'int' lvalue Var 0x163da06a780 'ret' 'int'
|   | | `-IntegerLiteral 0x163da06c300 <col:15> 'int' 0
|   | `-CompoundStmt 0x163da06c540 <col:18, line:849:5>
|   |   `-ReturnStmt 0x163da06c530 <line:848:9, col:21>
|   |     `-ImplicitCastExpr 0x163da06c518 <col:16, col:21> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x163da06c4f8 <col:16, col:21> 'void *'
|   |         `-ParenExpr 0x163da06c4d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |           `-CStyleCastExpr 0x163da06c4b0 <col:18, col:26> 'void *' <NullToPointer>
|   |             `-IntegerLiteral 0x163da06c470 <col:26> 'int' 0
|   |-IfStmt 0x163da06c7a0 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:854:5, line:857:5>
|   | |-BinaryOperator 0x163da06c678 <line:854:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x163da06c660 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da06c618 <col:9> 'int' lvalue Var 0x163da06a780 'ret' 'int'
|   | | `-IntegerLiteral 0x163da06c638 <col:15> 'int' 0
|   | `-CompoundStmt 0x163da06c788 <col:18, line:857:5>
|   |   `-ReturnStmt 0x163da06c778 <line:856:9, col:21>
|   |     `-ImplicitCastExpr 0x163da06c760 <col:16, col:21> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x163da06c740 <col:16, col:21> 'void *'
|   |         `-ParenExpr 0x163da06c720 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |           `-CStyleCastExpr 0x163da06c6f8 <col:18, col:26> 'void *' <NullToPointer>
|   |             `-IntegerLiteral 0x163da06c6b8 <col:26> 'int' 0
|   |-IfStmt 0x163da06ca58 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:866:5, line:869:5>
|   | |-BinaryOperator 0x163da06c930 <line:866:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x163da06c900 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:866:9> 'struct sctp_authchunks *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da06c858 <col:9> 'struct sctp_authchunks *' lvalue Var 0x163da06be60 'authchunks' 'struct sctp_authchunks *'
|   | | `-ImplicitCastExpr 0x163da06c918 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct sctp_authchunks *' <BitCast>
|   | |   `-ParenExpr 0x163da06c8e0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x163da06c8b8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x163da06c878 <col:26> 'int' 0
|   | `-CompoundStmt 0x163da06ca40 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:866:29, line:869:5>
|   |   `-ReturnStmt 0x163da06ca30 <line:868:9, col:21>
|   |     `-ImplicitCastExpr 0x163da06ca18 <col:16, col:21> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x163da06c9f8 <col:16, col:21> 'void *'
|   |         `-ParenExpr 0x163da06c9d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |           `-CStyleCastExpr 0x163da06c9b0 <col:18, col:26> 'void *' <NullToPointer>
|   |             `-IntegerLiteral 0x163da06c970 <col:26> 'int' 0
|   |-IfStmt 0x163da06ce08 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:872:5, line:876:5>
|   | |-BinaryOperator 0x163da06cc40 <line:872:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x163da06cc28 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da06cbe0 <col:9> 'int' lvalue Var 0x163da06a780 'ret' 'int'
|   | | `-IntegerLiteral 0x163da06cc00 <col:15> 'int' 0
|   | `-CompoundStmt 0x163da06cde8 <col:18, line:876:5>
|   |   |-CallExpr 0x163da06ccb8 <line:873:9, col:32> 'int'
|   |   | |-ImplicitCastExpr 0x163da06cca0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x163da06cc60 <col:9> 'int ()' Function 0x163da0629d8 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x163da06cce0 <col:22> 'struct sctp_authchunks *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x163da06cc80 <col:22> 'struct sctp_authchunks *' lvalue Var 0x163da06be60 'authchunks' 'struct sctp_authchunks *'
|   |   `-ReturnStmt 0x163da06cdd8 <line:875:9, col:21>
|   |     `-ImplicitCastExpr 0x163da06cdc0 <col:16, col:21> 'int *' <NullToPointer>
|   |       `-ParenExpr 0x163da06cda0 <col:16, col:21> 'void *'
|   |         `-ParenExpr 0x163da06cd80 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|   |           `-CStyleCastExpr 0x163da06cd58 <col:18, col:26> 'void *' <NullToPointer>
|   |             `-IntegerLiteral 0x163da06cd18 <col:26> 'int' 0
|   |-CallExpr 0x163da06d280 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:887:5, col:28> 'int'
|   | |-ImplicitCastExpr 0x163da06d268 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x163da06d228 <col:5> 'int ()' Function 0x163da0629d8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x163da06d2a8 <col:18> 'struct sctp_authchunks *' <LValueToRValue>
|   |   `-DeclRefExpr 0x163da06d248 <col:18> 'struct sctp_authchunks *' lvalue Var 0x163da06be60 'authchunks' 'struct sctp_authchunks *'
|   |-CallExpr 0x163da06d408 <line:889:5, col:29> 'int'
|   | |-ImplicitCastExpr 0x163da06d3f0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x163da06d3b0 <col:5> 'int ()' Function 0x163da06d2e8 'OPENSSL_assert' 'int ()'
|   | `-ImplicitCastExpr 0x163da06d430 <col:20> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x163da06d3d0 <col:20> 'int' lvalue Var 0x163da06b900 'auth_data' 'int'
|   |-CallExpr 0x163da06d4a0 <line:890:5, col:32> 'int'
|   | |-ImplicitCastExpr 0x163da06d488 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x163da06d448 <col:5> 'int ()' Function 0x163da06d2e8 'OPENSSL_assert' 'int ()'
|   | `-ImplicitCastExpr 0x163da06d4c8 <col:20> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x163da06d468 <col:20> 'int' lvalue Var 0x163da06b9a8 'auth_forward' 'int'
|   `-IfStmt 0x163da06d778 <line:932:5, line:935:5>
|     |-BinaryOperator 0x163da06d650 <line:932:9, col:15> 'int' '<'
|     | |-ImplicitCastExpr 0x163da06d638 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x163da06d5f0 <col:9> 'int' lvalue Var 0x163da06a780 'ret' 'int'
|     | `-IntegerLiteral 0x163da06d610 <col:15> 'int' 0
|     `-CompoundStmt 0x163da06d760 <col:18, line:935:5>
|       `-ReturnStmt 0x163da06d750 <line:934:9, col:21>
|         `-ImplicitCastExpr 0x163da06d738 <col:16, col:21> 'int *' <NullToPointer>
|           `-ParenExpr 0x163da06d718 <col:16, col:21> 'void *'
|             `-ParenExpr 0x163da06d6f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void *'
|               `-CStyleCastExpr 0x163da06d6d0 <col:18, col:26> 'void *' <NullToPointer>
|                 `-IntegerLiteral 0x163da06d690 <col:26> 'int' 0
|-FunctionDecl 0x163da067880 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:940:1, line:943:1> line:940:5 invalid BIO_dgram_is_sctp 'int (int *)'
| |-ParmVarDecl 0x163da0677e8 <col:23, col:28> col:28 invalid bio 'int *'
| `-CompoundStmt 0x163da067a50 <line:941:1, line:943:1>
|-FunctionDecl 0x163da067b10 <line:945:1, line:961:1> line:945:12 invalid dgram_sctp_new 'int (int *)' static
| |-ParmVarDecl 0x163da067a78 <col:27, col:32> col:32 invalid bi 'int *'
| `-CompoundStmt 0x163da068110 <line:946:1, line:961:1>
|   |-DeclStmt 0x163da067d60 <line:947:5, col:37>
|   | `-VarDecl 0x163da067c58 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\bio\bss_dgram.c:947:26 used data 'bio_dgram_sctp_data *' cinit
|   |   `-ImplicitCastExpr 0x163da067d48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'bio_dgram_sctp_data *' <NullToPointer>
|   |     `-ParenExpr 0x163da067d28 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x163da067d00 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x163da067cc0 <col:26> 'int' 0
|   |-BinaryOperator 0x163da067f08 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:951:5, col:40> 'bio_dgram_sctp_data *' '='
|   | |-DeclRefExpr 0x163da067dc8 <col:5> 'bio_dgram_sctp_data *' lvalue Var 0x163da067c58 'data' 'bio_dgram_sctp_data *'
|   | `-ImplicitCastExpr 0x163da067ef0 <col:12, col:40> 'bio_dgram_sctp_data *' <IntegralToPointer>
|   |   `-CallExpr 0x163da067ec8 <col:12, col:40> 'int'
|   |     |-ImplicitCastExpr 0x163da067eb0 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x163da067e00 <col:12> 'int ()' Function 0x163da0621b8 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x163da067e90 <col:27, col:39> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x163da067e70 <col:33, col:39> 'bio_dgram_sctp_data':'struct bio_dgram_sctp_data_st' lvalue
|   |         `-UnaryOperator 0x163da067e58 <col:34, col:35> 'bio_dgram_sctp_data':'struct bio_dgram_sctp_data_st' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x163da067e40 <col:35> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |             `-DeclRefExpr 0x163da067e20 <col:35> 'bio_dgram_sctp_data *' lvalue Var 0x163da067c58 'data' 'bio_dgram_sctp_data *' non_odr_use_unevaluated
|   |-IfStmt 0x163da068058 <line:952:5, line:953:16>
|   | |-BinaryOperator 0x163da068000 <line:952:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x163da067fd0 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:952:9> 'bio_dgram_sctp_data *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da067f28 <col:9> 'bio_dgram_sctp_data *' lvalue Var 0x163da067c58 'data' 'bio_dgram_sctp_data *'
|   | | `-ImplicitCastExpr 0x163da067fe8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'bio_dgram_sctp_data *' <BitCast>
|   | |   `-ParenExpr 0x163da067fb0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x163da067f88 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x163da067f48 <col:26> 'int' 0
|   | `-ReturnStmt 0x163da068048 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:953:9, col:16>
|   |   `-IntegerLiteral 0x163da068020 <col:16> 'int' 0
|   `-ReturnStmt 0x163da068100 <line:960:5, col:14>
|     `-ParenExpr 0x163da0680e0 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x163da0680b8 <col:13> 'int' 1
|-FunctionDecl 0x163da0681f0 <line:963:1, line:977:1> line:963:12 invalid dgram_sctp_free 'int (int *)' static
| |-ParmVarDecl 0x163da068158 <col:28, col:33> col:33 invalid a 'int *'
| `-CompoundStmt 0x163da0686f0 <line:964:1, line:977:1>
|   |-DeclStmt 0x163da068328 <line:965:5, col:30>
|   | `-VarDecl 0x163da0682c0 <col:5, col:26> col:26 used data 'bio_dgram_sctp_data *'
|   |-IfStmt 0x163da068438 <line:967:5, line:968:18>
|   | |-OpaqueValueExpr 0x163da068420 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x163da068410 <col:9, col:18>
|   |   `-ParenExpr 0x163da0683f0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x163da0683c8 <col:17> 'int' 0
|   |-IfStmt 0x163da0684a0 <line:969:5, line:970:16>
|   | |-OpaqueValueExpr 0x163da068488 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x163da068478 <col:9, col:16>
|   |   `-IntegerLiteral 0x163da068450 <col:16> 'int' 0
|   |-IfStmt 0x163da068680 <line:973:5, line:974:26>
|   | |-BinaryOperator 0x163da0685c8 <line:973:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x163da068598 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:973:9> 'bio_dgram_sctp_data *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da0684f0 <col:9> 'bio_dgram_sctp_data *' lvalue Var 0x163da0682c0 'data' 'bio_dgram_sctp_data *'
|   | | `-ImplicitCastExpr 0x163da0685b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'bio_dgram_sctp_data *' <BitCast>
|   | |   `-ParenExpr 0x163da068578 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x163da068550 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x163da068510 <col:26> 'int' 0
|   | `-CallExpr 0x163da068640 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:974:9, col:26> 'int'
|   |   |-ImplicitCastExpr 0x163da068628 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x163da0685e8 <col:9> 'int ()' Function 0x163da0629d8 'OPENSSL_free' 'int ()'
|   |   `-ImplicitCastExpr 0x163da068668 <col:22> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |     `-DeclRefExpr 0x163da068608 <col:22> 'bio_dgram_sctp_data *' lvalue Var 0x163da0682c0 'data' 'bio_dgram_sctp_data *'
|   `-ReturnStmt 0x163da0686e0 <line:976:5, col:14>
|     `-ParenExpr 0x163da0686c0 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x163da068698 <col:13> 'int' 1
|-FunctionDecl 0x163da06d958 <line:997:1, line:1214:1> line:997:12 invalid dgram_sctp_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x163da068740 <col:28, col:33> col:33 invalid b 'int *'
| |-ParmVarDecl 0x163da06d830 <col:36, col:42> col:42 used out 'char *'
| |-ParmVarDecl 0x163da06d8b0 <col:47, col:51> col:51 used outl 'int'
| `-CompoundStmt 0x163da075bb0 <line:998:1, line:1214:1>
|   |-DeclStmt 0x163da06dca0 <line:999:5, col:34>
|   | |-VarDecl 0x163da06da40 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x163da06daa8 <col:15> 'int' 0
|   | |-VarDecl 0x163da06dae8 <col:5, col:22> col:18 used n 'int' cinit
|   | | `-IntegerLiteral 0x163da06db50 <col:22> 'int' 0
|   | |-VarDecl 0x163da06db90 <col:5, col:25> col:25 used i 'int'
|   | `-VarDecl 0x163da06dc10 <col:5, col:28> col:28 used optval 'int'
|   |-DeclStmt 0x163da06dd30 <line:1001:5, col:63>
|   | `-VarDecl 0x163da06dcc8 <col:5, col:26> col:26 used data 'bio_dgram_sctp_data *'
|   |-DeclStmt 0x163da06df40 <line:1002:5, col:33>
|   | |-RecordDecl 0x163da06dd48 <col:5, col:11> col:11 union sctp_notification
|   | `-VarDecl 0x163da06dec0 <col:5, col:30> col:30 used snp 'union sctp_notification *'
|   |-DeclStmt 0x163da06e0e8 <line:1003:5, col:22>
|   | |-RecordDecl 0x163da06df58 <col:5, col:12> col:12 struct msghdr
|   | `-VarDecl 0x163da06e068 <col:5, col:19> col:19 invalid msg 'struct msghdr':'struct msghdr'
|   |-DeclStmt 0x163da06e298 <line:1004:5, col:21>
|   | |-RecordDecl 0x163da06e100 <col:5, col:12> col:12 struct iovec
|   | `-VarDecl 0x163da06e218 <col:5, col:18> col:18 invalid iov 'struct iovec':'struct iovec'
|   |-DeclStmt 0x163da06e4b0 <line:1005:5, col:25>
|   | |-RecordDecl 0x163da06e2b0 <col:5, col:12> col:12 struct cmsghdr
|   | `-VarDecl 0x163da06e430 <col:5, col:21> col:21 used cmsg 'struct cmsghdr *'
|   |-DeclStmt 0x163da06e5d0 <line:1006:5, col:22>
|   | `-VarDecl 0x163da06e568 <col:5, col:21> col:10 used cmsgbuf 'char [512]'
|   |-IfStmt 0x163da075b30 <line:1008:5, line:1212:5>
|   | |-BinaryOperator 0x163da06e6d8 <line:1008:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x163da06e6a8 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1008:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da06e5e8 <col:9> 'char *' lvalue ParmVar 0x163da06d830 'out' 'char *'
|   | | `-ImplicitCastExpr 0x163da06e6c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x163da06e688 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x163da06e660 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x163da06e620 <col:26> 'int' 0
|   | `-CompoundStmt 0x163da075b00 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1008:22, line:1212:5>
|   |   |-CallExpr 0x163da06e730 <line:1009:9, col:28> 'int'
|   |   | `-ImplicitCastExpr 0x163da06e718 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   |   `-DeclRefExpr 0x163da06e6f8 <col:9> 'int ()' Function 0x163da064a18 'clear_socket_error' 'int ()'
|   |   |-IfStmt 0x163da071628 <line:1124:9, line:1166:9>
|   |   | |-OpaqueValueExpr 0x163da071610 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x163da0715d8 <line:1124:52, line:1166:9>
|   |   |   |-IfStmt 0x163da070fd0 <line:1131:13, line:1132:25>
|   |   |   | |-BinaryOperator 0x163da070f60 <line:1131:17, col:24> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x163da070f30 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x163da070ef0 <col:17> 'int' lvalue Var 0x163da06da40 'ret' 'int'
|   |   |   | | `-ImplicitCastExpr 0x163da070f48 <col:24> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x163da070f10 <col:24> 'int' lvalue ParmVar 0x163da06d8b0 'outl' 'int'
|   |   |   | `-ReturnStmt 0x163da070fc0 <line:1132:17, col:25>
|   |   |   |   `-UnaryOperator 0x163da070fa8 <col:24, col:25> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x163da070f80 <col:25> 'int' 1
|   |   |   |-IfStmt 0x163da0711d8 <line:1140:13, line:1141:47>
|   |   |   | |-BinaryOperator 0x163da0710d8 <line:1140:17, col:24> 'int' '>='
|   |   |   | | |-ImplicitCastExpr 0x163da0710c0 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x163da071078 <col:17> 'int' lvalue Var 0x163da06da40 'ret' 'int'
|   |   |   | | `-IntegerLiteral 0x163da071098 <col:24> 'int' 0
|   |   |   | `-CallExpr 0x163da0711b0 <line:1141:17, col:47> 'int'
|   |   |   |   |-ImplicitCastExpr 0x163da071198 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x163da0710f8 <col:17> 'int ()' Function 0x163da06d2e8 'OPENSSL_assert' 'int ()'
|   |   |   |   `-BinaryOperator 0x163da071178 <col:32, col:42> 'int' '>='
|   |   |   |     |-ImplicitCastExpr 0x163da071160 <col:32> 'int' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x163da071118 <col:32> 'int' lvalue Var 0x163da06dc10 'optval' 'int'
|   |   |   |     `-IntegerLiteral 0x163da071138 <col:42> 'int' 18445
|   |   |   |-IfStmt 0x163da0713c8 <line:1151:13, line:1152:47>
|   |   |   | |-BinaryOperator 0x163da0712c8 <line:1151:17, col:24> 'int' '>='
|   |   |   | | |-ImplicitCastExpr 0x163da0712b0 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x163da071268 <col:17> 'int' lvalue Var 0x163da06da40 'ret' 'int'
|   |   |   | | `-IntegerLiteral 0x163da071288 <col:24> 'int' 0
|   |   |   | `-CallExpr 0x163da0713a0 <line:1152:17, col:47> 'int'
|   |   |   |   |-ImplicitCastExpr 0x163da071388 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x163da0712e8 <col:17> 'int ()' Function 0x163da06d2e8 'OPENSSL_assert' 'int ()'
|   |   |   |   `-BinaryOperator 0x163da071368 <col:32, col:42> 'int' '>='
|   |   |   |     |-ImplicitCastExpr 0x163da071350 <col:32> 'int' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x163da071308 <col:32> 'int' lvalue Var 0x163da06dc10 'optval' 'int'
|   |   |   |     `-IntegerLiteral 0x163da071328 <col:42> 'int' 18445
|   |   |   |-CallExpr 0x163da0714d0 <line:1163:13, col:32> 'void *'
|   |   |   | |-ImplicitCastExpr 0x163da0714b8 <col:13> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x163da071400 <col:13> 'void *(void *, int, unsigned long long)' Function 0x163da064b80 'memset' 'void *(void *, int, unsigned long long)'
|   |   |   | |-ImplicitCastExpr 0x163da071520 <col:20> 'void *' <BitCast>
|   |   |   | | `-ImplicitCastExpr 0x163da071508 <col:20> 'char *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x163da071420 <col:20> 'char *' lvalue ParmVar 0x163da06d830 'out' 'char *'
|   |   |   | |-IntegerLiteral 0x163da071440 <col:25> 'int' 0
|   |   |   | `-ImplicitCastExpr 0x163da071550 <col:28> 'unsigned long long' <IntegralCast>
|   |   |   |   `-ImplicitCastExpr 0x163da071538 <col:28> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x163da071468 <col:28> 'int' lvalue ParmVar 0x163da06d8b0 'outl' 'int'
|   |   |   `-ReturnStmt 0x163da0715c8 <line:1165:13, col:21>
|   |   |     `-UnaryOperator 0x163da0715b0 <col:20, col:21> 'int' prefix '-'
|   |   |       `-IntegerLiteral 0x163da071588 <col:21> 'int' 1
|   |   |-IfStmt 0x163da074920 <line:1169:9, line:1174:9>
|   |   | |-BinaryOperator 0x163da0716c0 <line:1169:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x163da0716a8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x163da071660 <col:13> 'int' lvalue Var 0x163da06da40 'ret' 'int'
|   |   | | `-IntegerLiteral 0x163da071680 <col:19> 'int' 0
|   |   | `-CompoundStmt 0x163da074908 <col:22, line:1174:9>
|   |   |   `-IfStmt 0x163da0748f0 <line:1170:13, line:1173:13>
|   |   |     |-CallExpr 0x163da071738 <line:1170:17, col:43> 'int'
|   |   |     | |-ImplicitCastExpr 0x163da071720 <col:17> 'int (*)(int)' <FunctionToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x163da0716e0 <col:17> 'int (int)' Function 0x163da058850 'BIO_dgram_should_retry' 'int (int)'
|   |   |     | `-ImplicitCastExpr 0x163da071760 <col:40> 'int' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x163da071700 <col:40> 'int' lvalue Var 0x163da06da40 'ret' 'int'
|   |   |     `-CompoundStmt 0x163da0748d8 <col:46, line:1173:13>
|   |   |       `-BinaryOperator 0x163da0748b8 <line:1172:17, col:54> 'unsigned int' '='
|   |   |         |-MemberExpr 0x163da0717d0 <col:17, col:23> 'unsigned int' lvalue ->_errno 0x163da059ab8
|   |   |         | `-ImplicitCastExpr 0x163da0717b8 <col:17> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   |         |   `-DeclRefExpr 0x163da071798 <col:17> 'bio_dgram_sctp_data *' lvalue Var 0x163da06dcc8 'data' 'bio_dgram_sctp_data *'
|   |   |         `-ImplicitCastExpr 0x163da0748a0 <col:32, col:54> 'unsigned int' <IntegralCast>
|   |   |           `-CallExpr 0x163da071838 <col:32, col:54> 'int'
|   |   |             `-ImplicitCastExpr 0x163da071820 <col:32> 'int (*)()' <FunctionToPointerDecay>
|   |   |               `-DeclRefExpr 0x163da071800 <col:32> 'int ()' Function 0x163da0656c0 'get_last_socket_error' 'int ()'
|   |   `-IfStmt 0x163da075ae8 <line:1177:9, line:1211:9>
|   |     |-UnaryOperator 0x163da0749b8 <line:1177:13, col:20> 'int' prefix '!' cannot overflow
|   |     | `-ImplicitCastExpr 0x163da0749a0 <col:14, col:20> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x163da074970 <col:14, col:20> 'int' lvalue ->peer_auth_tested 0x163da05a530
|   |     |     `-ImplicitCastExpr 0x163da074958 <col:14> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x163da074938 <col:14> 'bio_dgram_sctp_data *' lvalue Var 0x163da06dcc8 'data' 'bio_dgram_sctp_data *'
|   |     `-CompoundStmt 0x163da075aa0 <col:38, line:1211:9>
|   |       |-DeclStmt 0x163da074bc0 <line:1178:13, col:52>
|   |       | |-VarDecl 0x163da0749e8 <col:13, col:17> col:17 used ii 'int'
|   |       | |-VarDecl 0x163da074a68 <col:13, col:33> col:21 used auth_data 'int' cinit
|   |       | | `-IntegerLiteral 0x163da074ad0 <col:33> 'int' 0
|   |       | `-VarDecl 0x163da074b10 <col:13, col:51> col:36 used auth_forward 'int' cinit
|   |       |   `-IntegerLiteral 0x163da074b78 <col:51> 'int' 0
|   |       |-DeclStmt 0x163da074c58 <line:1179:13, col:29>
|   |       | `-VarDecl 0x163da074bf0 <col:13, col:28> col:28 used p 'unsigned char *'
|   |       |-DeclStmt 0x163da074e70 <line:1180:13, col:47>
|   |       | |-RecordDecl 0x163da074c70 <col:13, col:20> col:20 struct sctp_authchunks
|   |       | `-VarDecl 0x163da074df0 <col:13, col:37> col:37 used authchunks 'struct sctp_authchunks *'
|   |       |-IfStmt 0x163da075268 <line:1185:13, line:1188:13>
|   |       | |-BinaryOperator 0x163da0750d0 <line:1185:17, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |       | | |-ImplicitCastExpr 0x163da0750a0 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1185:17> 'struct sctp_authchunks *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x163da074ff8 <col:17> 'struct sctp_authchunks *' lvalue Var 0x163da074df0 'authchunks' 'struct sctp_authchunks *'
|   |       | | `-ImplicitCastExpr 0x163da0750b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct sctp_authchunks *' <BitCast>
|   |       | |   `-ParenExpr 0x163da075080 <col:17, col:27> 'void *'
|   |       | |     `-CStyleCastExpr 0x163da075058 <col:18, col:26> 'void *' <NullToPointer>
|   |       | |       `-IntegerLiteral 0x163da075018 <col:26> 'int' 0
|   |       | `-CompoundStmt 0x163da075250 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1185:37, line:1188:13>
|   |       |   `-ReturnStmt 0x163da075240 <line:1187:17, col:25>
|   |       |     `-UnaryOperator 0x163da075228 <col:24, col:25> 'int' prefix '-'
|   |       |       `-IntegerLiteral 0x163da075200 <col:25> 'int' 1
|   |       |-CallExpr 0x163da075840 <line:1203:13, col:36> 'int'
|   |       | |-ImplicitCastExpr 0x163da075828 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |       | | `-DeclRefExpr 0x163da0757e8 <col:13> 'int ()' Function 0x163da0629d8 'OPENSSL_free' 'int ()'
|   |       | `-ImplicitCastExpr 0x163da075868 <col:26> 'struct sctp_authchunks *' <LValueToRValue>
|   |       |   `-DeclRefExpr 0x163da075808 <col:26> 'struct sctp_authchunks *' lvalue Var 0x163da074df0 'authchunks' 'struct sctp_authchunks *'
|   |       |-IfStmt 0x163da0759d8 <line:1205:13, line:1208:13>
|   |       | |-BinaryOperator 0x163da075930 <line:1205:17, col:32> 'int' '||'
|   |       | | |-UnaryOperator 0x163da0758c8 <col:17, col:18> 'int' prefix '!' cannot overflow
|   |       | | | `-ImplicitCastExpr 0x163da0758b0 <col:18> 'int' <LValueToRValue>
|   |       | | |   `-DeclRefExpr 0x163da075880 <col:18> 'int' lvalue Var 0x163da074a68 'auth_data' 'int'
|   |       | | `-UnaryOperator 0x163da075918 <col:31, col:32> 'int' prefix '!' cannot overflow
|   |       | |   `-ImplicitCastExpr 0x163da075900 <col:32> 'int' <LValueToRValue>
|   |       | |     `-DeclRefExpr 0x163da0758e0 <col:32> 'int' lvalue Var 0x163da074b10 'auth_forward' 'int'
|   |       | `-CompoundStmt 0x163da0759c0 <col:46, line:1208:13>
|   |       |   `-ReturnStmt 0x163da0759b0 <line:1207:17, col:25>
|   |       |     `-UnaryOperator 0x163da075998 <col:24, col:25> 'int' prefix '-'
|   |       |       `-IntegerLiteral 0x163da075970 <col:25> 'int' 1
|   |       `-BinaryOperator 0x163da075a80 <line:1210:13, col:38> 'int' '='
|   |         |-MemberExpr 0x163da075a28 <col:13, col:19> 'int' lvalue ->peer_auth_tested 0x163da05a530
|   |         | `-ImplicitCastExpr 0x163da075a10 <col:13> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x163da0759f0 <col:13> 'bio_dgram_sctp_data *' lvalue Var 0x163da06dcc8 'data' 'bio_dgram_sctp_data *'
|   |         `-IntegerLiteral 0x163da075a58 <col:38> 'int' 1
|   `-ReturnStmt 0x163da075ba0 <line:1213:5, col:16>
|     `-ImplicitCastExpr 0x163da075b88 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x163da075b68 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x163da075b48 <col:13> 'int' lvalue Var 0x163da06da40 'ret' 'int'
|-FunctionDecl 0x163da075dc8 <line:1224:1, line:1330:1> line:1224:12 invalid dgram_sctp_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x163da075c20 <col:29, col:34> col:34 invalid b 'int *'
| |-ParmVarDecl 0x163da075ca0 <col:37, col:49> col:49 used in 'const char *'
| |-ParmVarDecl 0x163da075d20 <col:53, col:57> col:57 used inl 'int'
| `-CompoundStmt 0x163da074128 <line:1225:1, line:1330:1>
|   |-DeclStmt 0x163da075f18 <line:1226:5, col:12>
|   | `-VarDecl 0x163da075eb0 <col:5, col:9> col:9 used ret 'int'
|   |-DeclStmt 0x163da075fa8 <line:1227:5, col:63>
|   | `-VarDecl 0x163da075f40 <col:5, col:26> col:26 used data 'bio_dgram_sctp_data *'
|   |-DeclStmt 0x163da076128 <line:1228:5, col:60>
|   | `-VarDecl 0x163da076070 <col:5, col:36> col:36 used sinfo 'struct bio_dgram_sctp_sndinfo *'
|   |-DeclStmt 0x163da076290 <line:1229:5, col:58>
|   | `-VarDecl 0x163da0761f0 <col:5, col:35> col:35 used pinfo 'struct bio_dgram_sctp_prinfo *'
|   |-DeclStmt 0x163da076330 <line:1230:5, col:50>
|   | `-VarDecl 0x163da0762c8 <col:5, col:35> col:35 invalid handshake_sinfo 'struct bio_dgram_sctp_sndinfo':'struct bio_dgram_sctp_sndinfo'
|   |-DeclStmt 0x163da076500 <line:1231:5, col:24>
|   | |-RecordDecl 0x163da076348 <col:5, col:12> col:12 struct iovec
|   | `-VarDecl 0x163da076480 <col:5, col:18> col:18 invalid iov 'int'
|   |-DeclStmt 0x163da0766a8 <line:1232:5, col:22>
|   | |-RecordDecl 0x163da076518 <col:5, col:12> col:12 struct msghdr
|   | `-VarDecl 0x163da076628 <col:5, col:19> col:19 invalid msg 'struct msghdr':'struct msghdr'
|   |-DeclStmt 0x163da072898 <line:1233:5, col:25>
|   | |-RecordDecl 0x163da0766c0 <col:5, col:12> col:12 struct cmsghdr
|   | `-VarDecl 0x163da076840 <col:5, col:21> col:21 used cmsg 'struct cmsghdr *'
|   |-DeclStmt 0x163da072b50 <line:1240:5, col:61>
|   | `-VarDecl 0x163da072ae8 <col:5, col:10> col:10 invalid cmsgbuf 'char'
|   |-DeclStmt 0x163da072c88 <line:1241:5, col:39>
|   | `-VarDecl 0x163da072c20 <col:5, col:29> col:29 used sndrcvinfo 'struct sctp_sndrcvinfo *'
|   |-CallExpr 0x163da072cd8 <line:1244:5, col:24> 'int'
|   | `-ImplicitCastExpr 0x163da072cc0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x163da072ca0 <col:5> 'int ()' Function 0x163da064a18 'clear_socket_error' 'int ()'
|   |-IfStmt 0x163da072e98 <line:1250:5, line:1256:5>
|   | |-BinaryOperator 0x163da072de8 <line:1250:9, col:18> 'int' '!='
|   | | |-ImplicitCastExpr 0x163da072dd0 <col:9, col:13> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x163da072db8 <col:9, col:13> 'char' <LValueToRValue>
|   | | |   `-ArraySubscriptExpr 0x163da072d70 <col:9, col:13> 'const char' lvalue
|   | | |     |-ImplicitCastExpr 0x163da072d58 <col:9> 'const char *' <LValueToRValue>
|   | | |     | `-DeclRefExpr 0x163da072cf8 <col:9> 'const char *' lvalue ParmVar 0x163da075ca0 'in' 'const char *'
|   | | |     `-IntegerLiteral 0x163da072d30 <col:12> 'int' 0
|   | | `-IntegerLiteral 0x163da072d90 <col:18> 'int' 23
|   | `-CompoundStmt 0x163da072e88 <col:22, line:1256:5>
|   |-IfStmt 0x163da0732c0 <line:1259:5, line:1268:5>
|   | |-ImplicitCastExpr 0x163da072f18 <line:1259:9, col:15> 'int' <LValueToRValue>
|   | | `-MemberExpr 0x163da072ee8 <col:9, col:15> 'int' lvalue ->save_shutdown 0x163da05a4c0
|   | |   `-ImplicitCastExpr 0x163da072ed0 <col:9> 'bio_dgram_sctp_data *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x163da072eb0 <col:9> 'bio_dgram_sctp_data *' lvalue Var 0x163da075f40 'data' 'bio_dgram_sctp_data *'
|   | `-CompoundStmt 0x163da0732a0 <col:30, line:1268:5>
|   |   |-IfStmt 0x163da073148 <line:1261:9, line:1262:21>
|   |   | |-BinaryOperator 0x163da0730d8 <line:1261:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x163da0730c0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x163da073078 <col:13> 'int' lvalue Var 0x163da075eb0 'ret' 'int'
|   |   | | `-IntegerLiteral 0x163da073098 <col:19> 'int' 0
|   |   | `-ReturnStmt 0x163da073138 <line:1262:13, col:21>
|   |   |   `-UnaryOperator 0x163da073120 <col:20, col:21> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x163da0730f8 <col:21> 'int' 1
|   |   `-IfStmt 0x163da073288 <line:1263:9, line:1267:9>
|   |     |-BinaryOperator 0x163da0731c0 <line:1263:13, col:20> 'int' '=='
|   |     | |-ImplicitCastExpr 0x163da0731a8 <col:13> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x163da073160 <col:13> 'int' lvalue Var 0x163da075eb0 'ret' 'int'
|   |     | `-IntegerLiteral 0x163da073180 <col:20> 'int' 0
|   |     `-CompoundStmt 0x163da073270 <col:23, line:1267:9>
|   |       `-ReturnStmt 0x163da073260 <line:1266:13, col:21>
|   |         `-UnaryOperator 0x163da073248 <col:20, col:21> 'int' prefix '-'
|   |           `-IntegerLiteral 0x163da073220 <col:21> 'int' 1
|   |-BinaryOperator 0x163da073938 <line:1307:5, col:58> 'struct sctp_sndrcvinfo *' '='
|   | |-DeclRefExpr 0x163da073710 <col:5> 'struct sctp_sndrcvinfo *' lvalue Var 0x163da072c20 'sndrcvinfo' 'struct sctp_sndrcvinfo *'
|   | `-CStyleCastExpr 0x163da073910 <col:18, col:58> 'struct sctp_sndrcvinfo *' <IntegralToPointer>
|   |   `-CallExpr 0x163da0738a8 <col:44, col:58> 'int'
|   |     |-ImplicitCastExpr 0x163da073890 <col:44> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x163da073838 <col:44> 'int ()' Function 0x163da073770 'CMSG_DATA' 'int ()'
|   |     `-ImplicitCastExpr 0x163da0738d0 <col:54> 'struct cmsghdr *' <LValueToRValue>
|   |       `-DeclRefExpr 0x163da073858 <col:54> 'struct cmsghdr *' lvalue Var 0x163da076840 'cmsg' 'struct cmsghdr *'
|   |-IfStmt 0x163da0740a8 <line:1323:5, line:1328:5>
|   | |-BinaryOperator 0x163da073e90 <line:1323:9, col:16> 'int' '<='
|   | | |-ImplicitCastExpr 0x163da073e78 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da073e30 <col:9> 'int' lvalue Var 0x163da075eb0 'ret' 'int'
|   | | `-IntegerLiteral 0x163da073e50 <col:16> 'int' 0
|   | `-CompoundStmt 0x163da074090 <col:19, line:1328:5>
|   |   `-IfStmt 0x163da074078 <line:1324:9, line:1327:9>
|   |     |-CallExpr 0x163da073f08 <line:1324:13, col:39> 'int'
|   |     | |-ImplicitCastExpr 0x163da073ef0 <col:13> 'int (*)(int)' <FunctionToPointerDecay>
|   |     | | `-DeclRefExpr 0x163da073eb0 <col:13> 'int (int)' Function 0x163da058850 'BIO_dgram_should_retry' 'int (int)'
|   |     | `-ImplicitCastExpr 0x163da073f30 <col:36> 'int' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x163da073ed0 <col:36> 'int' lvalue Var 0x163da075eb0 'ret' 'int'
|   |     `-CompoundStmt 0x163da074060 <col:42, line:1327:9>
|   |       `-BinaryOperator 0x163da074040 <line:1326:13, col:50> 'unsigned int' '='
|   |         |-MemberExpr 0x163da073fa0 <col:13, col:19> 'unsigned int' lvalue ->_errno 0x163da059ab8
|   |         | `-ImplicitCastExpr 0x163da073f88 <col:13> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x163da073f68 <col:13> 'bio_dgram_sctp_data *' lvalue Var 0x163da075f40 'data' 'bio_dgram_sctp_data *'
|   |         `-ImplicitCastExpr 0x163da074028 <col:28, col:50> 'unsigned int' <IntegralCast>
|   |           `-CallExpr 0x163da074008 <col:28, col:50> 'int'
|   |             `-ImplicitCastExpr 0x163da073ff0 <col:28> 'int (*)()' <FunctionToPointerDecay>
|   |               `-DeclRefExpr 0x163da073fd0 <col:28> 'int ()' Function 0x163da0656c0 'get_last_socket_error' 'int ()'
|   `-ReturnStmt 0x163da074118 <line:1329:5, col:16>
|     `-ImplicitCastExpr 0x163da074100 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x163da0740e0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x163da0740c0 <col:13> 'int' lvalue Var 0x163da075eb0 'ret' 'int'
|-FunctionDecl 0x163da074400 <line:1332:1, line:1566:1> line:1332:13 invalid dgram_sctp_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x163da0741d0 <col:29, col:34> col:34 invalid b 'int *'
| |-ParmVarDecl 0x163da074250 <col:37, col:41> col:41 used cmd 'int'
| |-ParmVarDecl 0x163da0742d0 <col:46, col:51> col:51 used num 'long'
| |-ParmVarDecl 0x163da074350 <col:56, col:62> col:62 used ptr 'void *'
| `-CompoundStmt 0x163da078518 <line:1333:1, line:1566:1>
|   |-DeclStmt 0x163da074598 <line:1334:5, col:17>
|   | `-VarDecl 0x163da0744f0 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x163da074580 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x163da074558 <col:16> 'int' 1
|   |-DeclStmt 0x163da0746c8 <line:1335:5, col:37>
|   | `-VarDecl 0x163da0745c0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\bio\bss_dgram.c:1335:26 used data 'bio_dgram_sctp_data *' cinit
|   |   `-ImplicitCastExpr 0x163da0746b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'bio_dgram_sctp_data *' <NullToPointer>
|   |     `-ParenExpr 0x163da074690 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x163da074668 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x163da074628 <col:26> 'int' 0
|   |-DeclStmt 0x163da074878 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1337:5, col:36>
|   | |-RecordDecl 0x163da0746e0 <col:5, col:12> col:12 struct sctp_authkeyid
|   | `-VarDecl 0x163da0747f8 <col:5, col:27> col:27 invalid authkeyid 'struct sctp_authkeyid':'struct sctp_authkeyid'
|   |-DeclStmt 0x163da06eae0 <line:1338:5, col:40>
|   | |-RecordDecl 0x163da06e840 <col:5, col:12> col:12 struct sctp_authkey
|   | `-VarDecl 0x163da06e9c0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\bio\bss_dgram.c:1338:26 used authkey 'struct sctp_authkey *' cinit
|   |   `-ImplicitCastExpr 0x163da06eab0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct sctp_authkey *' <NullToPointer>
|   |     `-ParenExpr 0x163da06ea90 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x163da06ea68 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x163da06ea28 <col:26> 'int' 0
|   |-SwitchStmt 0x163da06eb80 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1342:5, line:1564:5>
|   | |-ImplicitCastExpr 0x163da06eb68 <line:1342:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x163da06eb30 <col:13> 'int' lvalue ParmVar 0x163da074250 'cmd' 'int'
|   | `-CompoundStmt 0x163da078368 <col:18, line:1564:5>
|   |   |-BinaryOperator 0x163da06ec48 <line:1348:9, col:21> 'unsigned int' '='
|   |   | |-MemberExpr 0x163da06ebd8 <col:9, col:15> 'unsigned int' lvalue ->mtu 0x163da059b28
|   |   | | `-ImplicitCastExpr 0x163da06ebc0 <col:9> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x163da06eba0 <col:9> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   | `-ImplicitCastExpr 0x163da06ec30 <col:21> 'unsigned int' <IntegralCast>
|   |   |   `-IntegerLiteral 0x163da06ec08 <col:21> 'int' 16384
|   |   |-BinaryOperator 0x163da06ed38 <line:1349:9, col:21> 'long' '='
|   |   | |-DeclRefExpr 0x163da06ec68 <col:9> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da06ed20 <col:15, col:21> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x163da06ed08 <col:15, col:21> 'unsigned int' <LValueToRValue>
|   |   |     `-MemberExpr 0x163da06ecd8 <col:15, col:21> 'unsigned int' lvalue ->mtu 0x163da059b28
|   |   |       `-ImplicitCastExpr 0x163da06ecc0 <col:15> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x163da06eca0 <col:15> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   |-BreakStmt 0x163da06ed58 <line:1350:9>
|   |   |-BinaryOperator 0x163da06ee08 <line:1356:9, col:21> 'unsigned int' '='
|   |   | |-MemberExpr 0x163da06ed98 <col:9, col:15> 'unsigned int' lvalue ->mtu 0x163da059b28
|   |   | | `-ImplicitCastExpr 0x163da06ed80 <col:9> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x163da06ed60 <col:9> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   | `-ImplicitCastExpr 0x163da06edf0 <col:21> 'unsigned int' <IntegralCast>
|   |   |   `-IntegerLiteral 0x163da06edc8 <col:21> 'int' 16384
|   |   |-BinaryOperator 0x163da06eee0 <line:1357:9, col:21> 'long' '='
|   |   | |-DeclRefExpr 0x163da06ee28 <col:9> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da06eec8 <col:15, col:21> 'long' <IntegralCast>
|   |   |   `-ImplicitCastExpr 0x163da06eeb0 <col:15, col:21> 'unsigned int' <LValueToRValue>
|   |   |     `-MemberExpr 0x163da06ee80 <col:15, col:21> 'unsigned int' lvalue ->mtu 0x163da059b28
|   |   |       `-ImplicitCastExpr 0x163da06ee68 <col:15> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x163da06ee48 <col:15> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   |-BreakStmt 0x163da06ef00 <line:1358:9>
|   |   |-BinaryOperator 0x163da06ef80 <line:1362:9, col:16> 'long' '='
|   |   | |-DeclRefExpr 0x163da06ef08 <col:9> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da06ef68 <col:15, col:16> 'long' <IntegralCast>
|   |   |   `-UnaryOperator 0x163da06ef50 <col:15, col:16> 'int' prefix '-'
|   |   |     `-IntegerLiteral 0x163da06ef28 <col:16> 'int' 1
|   |   |-BreakStmt 0x163da06efa0 <line:1363:9>
|   |   |-BreakStmt 0x163da06efa8 <line:1368:9>
|   |   |-BinaryOperator 0x163da06f010 <line:1373:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x163da06efb0 <col:9> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da06eff8 <col:15> 'long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x163da06efd0 <col:15> 'int' 0
|   |   |-BreakStmt 0x163da06f030 <line:1374:9>
|   |   |-IfStmt 0x163da06f248 <line:1376:9, line:1379:34> has_else
|   |   | |-BinaryOperator 0x163da06f0c8 <line:1376:13, col:19> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x163da06f098 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x163da06f038 <col:13> 'long' lvalue ParmVar 0x163da0742d0 'num' 'long'
|   |   | | `-ImplicitCastExpr 0x163da06f0b0 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x163da06f070 <col:19> 'int' 0
|   |   | |-BinaryOperator 0x163da06f178 <line:1377:13, col:34> 'int' '='
|   |   | | |-MemberExpr 0x163da06f120 <col:13, col:19> 'int' lvalue ->in_handshake 0x163da05a370
|   |   | | | `-ImplicitCastExpr 0x163da06f108 <col:13> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x163da06f0e8 <col:13> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   | | `-IntegerLiteral 0x163da06f150 <col:34> 'int' 1
|   |   | `-BinaryOperator 0x163da06f228 <line:1379:13, col:34> 'int' '='
|   |   |   |-MemberExpr 0x163da06f1d0 <col:13, col:19> 'int' lvalue ->in_handshake 0x163da05a370
|   |   |   | `-ImplicitCastExpr 0x163da06f1b8 <col:13> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x163da06f198 <col:13> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   |   `-IntegerLiteral 0x163da06f200 <col:34> 'int' 0
|   |   |-BreakStmt 0x163da06f368 <line:1384:9>
|   |   |-IfStmt 0x163da06f4a0 <line:1395:9, line:1396:13>
|   |   | |-BinaryOperator 0x163da06f478 <line:1395:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x163da06f448 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x163da06f400 <col:13> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x163da06f460 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x163da06f420 <col:19> 'int' 0
|   |   | `-BreakStmt 0x163da06f498 <line:1396:13>
|   |   |-IfStmt 0x163da06f748 <line:1401:9, line:1404:9>
|   |   | |-BinaryOperator 0x163da06f668 <line:1401:13, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x163da06f638 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1401:13> 'struct sctp_authkey *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x163da06f590 <col:13> 'struct sctp_authkey *' lvalue Var 0x163da06e9c0 'authkey' 'struct sctp_authkey *'
|   |   | | `-ImplicitCastExpr 0x163da06f650 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct sctp_authkey *' <BitCast>
|   |   | |   `-ParenExpr 0x163da06f618 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x163da06f5f0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x163da06f5b0 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x163da06f728 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1401:30, line:1404:9>
|   |   |   |-BinaryOperator 0x163da06f700 <line:1402:13, col:20> 'long' '='
|   |   |   | |-DeclRefExpr 0x163da06f688 <col:13> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   |   | `-ImplicitCastExpr 0x163da06f6e8 <col:19, col:20> 'long' <IntegralCast>
|   |   |   |   `-UnaryOperator 0x163da06f6d0 <col:19, col:20> 'int' prefix '-'
|   |   |   |     `-IntegerLiteral 0x163da06f6a8 <col:20> 'int' 1
|   |   |   `-BreakStmt 0x163da06f720 <line:1403:13>
|   |   |-CallExpr 0x163da06fa48 <line:1419:9, col:29> 'int'
|   |   | |-ImplicitCastExpr 0x163da06fa30 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x163da06f9f0 <col:9> 'int ()' Function 0x163da0629d8 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x163da06fa70 <col:22> 'struct sctp_authkey *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x163da06fa10 <col:22> 'struct sctp_authkey *' lvalue Var 0x163da06e9c0 'authkey' 'struct sctp_authkey *'
|   |   |-BinaryOperator 0x163da06fb48 <line:1420:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'struct sctp_authkey *' '='
|   |   | |-DeclRefExpr 0x163da06fa88 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1420:9> 'struct sctp_authkey *' lvalue Var 0x163da06e9c0 'authkey' 'struct sctp_authkey *'
|   |   | `-ImplicitCastExpr 0x163da06fb30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'struct sctp_authkey *' <NullToPointer>
|   |   |   `-ParenExpr 0x163da06fb10 <col:17, col:27> 'void *'
|   |   |     `-CStyleCastExpr 0x163da06fae8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |       `-IntegerLiteral 0x163da06faa8 <col:26> 'int' 0
|   |   |-IfStmt 0x163da06fc08 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1421:9, line:1422:13>
|   |   | |-BinaryOperator 0x163da06fbe0 <line:1421:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x163da06fbb0 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x163da06fb68 <col:13> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x163da06fbc8 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x163da06fb88 <col:19> 'int' 0
|   |   | `-BreakStmt 0x163da06fc00 <line:1422:13>
|   |   |-IfStmt 0x163da06fd20 <line:1427:9, line:1428:13>
|   |   | |-BinaryOperator 0x163da06fcf8 <line:1427:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x163da06fcc8 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x163da06fc80 <col:13> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x163da06fce0 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x163da06fca0 <col:19> 'int' 0
|   |   | `-BreakStmt 0x163da06fd18 <line:1428:13>
|   |   |-BreakStmt 0x163da06fd38 <line:1430:9>
|   |   |-IfStmt 0x163da06fe40 <line:1439:9, line:1440:13>
|   |   | |-BinaryOperator 0x163da06fe18 <line:1439:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x163da06fde8 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x163da06fda0 <col:13> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x163da06fe00 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x163da06fdc0 <col:19> 'int' 0
|   |   | `-BreakStmt 0x163da06fe38 <line:1440:13>
|   |   |-IfStmt 0x163da06ff80 <line:1446:9, line:1447:13>
|   |   | |-BinaryOperator 0x163da06ff58 <line:1446:13, col:19> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x163da06ff28 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x163da06fee0 <col:13> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x163da06ff40 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x163da06ff00 <col:19> 'int' 0
|   |   | `-BreakStmt 0x163da06ff78 <line:1447:13>
|   |   |-BinaryOperator 0x163da070028 <line:1453:9, col:26> 'int' '='
|   |   | |-MemberExpr 0x163da06ffd0 <col:9, col:15> 'int' lvalue ->ccs_sent 0x163da05a450
|   |   | | `-ImplicitCastExpr 0x163da06ffb8 <col:9> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x163da06ff98 <col:9> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   | `-IntegerLiteral 0x163da070000 <col:26> 'int' 1
|   |   |-IfStmt 0x163da070130 <line:1463:9, line:1464:30>
|   |   | |-OpaqueValueExpr 0x163da070118 <<invalid sloc>> '_Bool'
|   |   | `-BinaryOperator 0x163da0700f8 <col:13, col:30> 'int' '='
|   |   |   |-MemberExpr 0x163da0700a0 <col:13, col:19> 'int' lvalue ->ccs_rcvd 0x163da05a3e0
|   |   |   | `-ImplicitCastExpr 0x163da070088 <col:13> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x163da070068 <col:13> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   |   `-IntegerLiteral 0x163da0700d0 <col:30> 'int' 1
|   |   |-IfStmt 0x163da070778 <line:1469:9, line:1502:9>
|   |   | |-BinaryOperator 0x163da0702d8 <line:1469:13, col:54> 'int' '&&'
|   |   | | |-BinaryOperator 0x163da0701f0 <col:13, col:31> 'int' '=='
|   |   | | | |-ImplicitCastExpr 0x163da0701d8 <col:13, col:19> 'int' <LValueToRValue>
|   |   | | | | `-MemberExpr 0x163da070180 <col:13, col:19> 'int' lvalue ->ccs_rcvd 0x163da05a3e0
|   |   | | | |   `-ImplicitCastExpr 0x163da070168 <col:13> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   | | | |     `-DeclRefExpr 0x163da070148 <col:13> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   | | | `-IntegerLiteral 0x163da0701b0 <col:31> 'int' 1
|   |   | | `-BinaryOperator 0x163da0702b8 <col:36, col:54> 'int' '=='
|   |   | |   |-ImplicitCastExpr 0x163da0702a0 <col:36, col:42> 'int' <LValueToRValue>
|   |   | |   | `-MemberExpr 0x163da070248 <col:36, col:42> 'int' lvalue ->ccs_sent 0x163da05a450
|   |   | |   |   `-ImplicitCastExpr 0x163da070230 <col:36> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x163da070210 <col:36> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   | |   `-IntegerLiteral 0x163da070278 <col:54> 'int' 1
|   |   | `-CompoundStmt 0x163da070748 <col:57, line:1502:9>
|   |   |   |-IfStmt 0x163da0703f8 <line:1475:13, line:1476:17>
|   |   |   | |-BinaryOperator 0x163da0703d0 <line:1475:17, col:23> 'int' '<'
|   |   |   | | |-ImplicitCastExpr 0x163da0703a0 <col:17> 'long' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x163da070358 <col:17> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   |   | | `-ImplicitCastExpr 0x163da0703b8 <col:23> 'long' <IntegralCast>
|   |   |   | |   `-IntegerLiteral 0x163da070378 <col:23> 'int' 0
|   |   |   | `-BreakStmt 0x163da0703f0 <line:1476:17>
|   |   |   |-IfStmt 0x163da0705d0 <line:1491:13, line:1497:13>
|   |   |   | |-OpaqueValueExpr 0x163da0705b8 <<invalid sloc>> '_Bool'
|   |   |   | `-CompoundStmt 0x163da0705a0 <line:1491:48, line:1497:13>
|   |   |   |   `-IfStmt 0x163da070588 <line:1495:17, line:1496:21>
|   |   |   |     |-BinaryOperator 0x163da070560 <line:1495:21, col:27> 'int' '<'
|   |   |   |     | |-ImplicitCastExpr 0x163da070530 <col:21> 'long' <LValueToRValue>
|   |   |   |     | | `-DeclRefExpr 0x163da0704e8 <col:21> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   |   |     | `-ImplicitCastExpr 0x163da070548 <col:27> 'long' <IntegralCast>
|   |   |   |     |   `-IntegerLiteral 0x163da070508 <col:27> 'int' 0
|   |   |   |     `-BreakStmt 0x163da070580 <line:1496:21>
|   |   |   |-BinaryOperator 0x163da070678 <line:1500:13, col:30> 'int' '='
|   |   |   | |-MemberExpr 0x163da070620 <col:13, col:19> 'int' lvalue ->ccs_rcvd 0x163da05a3e0
|   |   |   | | `-ImplicitCastExpr 0x163da070608 <col:13> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x163da0705e8 <col:13> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   |   | `-IntegerLiteral 0x163da070650 <col:30> 'int' 0
|   |   |   `-BinaryOperator 0x163da070728 <line:1501:13, col:30> 'int' '='
|   |   |     |-MemberExpr 0x163da0706d0 <col:13, col:19> 'int' lvalue ->ccs_sent 0x163da05a450
|   |   |     | `-ImplicitCastExpr 0x163da0706b8 <col:13> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x163da070698 <col:13> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   |     `-IntegerLiteral 0x163da070700 <col:30> 'int' 0
|   |   |-BreakStmt 0x163da070790 <line:1503:9>
|   |   |-BinaryOperator 0x163da0779a0 <line:1510:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x163da077948 <col:9> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da077988 <col:15> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x163da077968 <col:15> 'long' lvalue ParmVar 0x163da0742d0 'num' 'long'
|   |   |-BreakStmt 0x163da0779c0 <line:1511:9>
|   |   |-BreakStmt 0x163da077ae0 <line:1518:9>
|   |   |-BinaryOperator 0x163da077c90 <line:1526:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x163da077c38 <col:9> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da077c78 <col:15> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x163da077c58 <col:15> 'long' lvalue ParmVar 0x163da0742d0 'num' 'long'
|   |   |-BreakStmt 0x163da077cb0 <line:1527:9>
|   |   |-BreakStmt 0x163da077dd0 <line:1534:9>
|   |   |-BinaryOperator 0x163da077f48 <line:1541:9, col:15> 'long' '='
|   |   | |-DeclRefExpr 0x163da077ef0 <col:9> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x163da077f30 <col:15> 'long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x163da077f10 <col:15> 'long' lvalue ParmVar 0x163da0742d0 'num' 'long'
|   |   |-BreakStmt 0x163da077f68 <line:1542:9>
|   |   |-BreakStmt 0x163da078088 <line:1549:9>
|   |   |-IfStmt 0x163da078288 <line:1552:9, line:1555:35> has_else
|   |   | |-BinaryOperator 0x163da078108 <line:1552:13, col:19> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x163da0780d8 <col:13> 'long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x163da078090 <col:13> 'long' lvalue ParmVar 0x163da0742d0 'num' 'long'
|   |   | | `-ImplicitCastExpr 0x163da0780f0 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x163da0780b0 <col:19> 'int' 0
|   |   | |-BinaryOperator 0x163da0781b8 <line:1553:13, col:35> 'int' '='
|   |   | | |-MemberExpr 0x163da078160 <col:13, col:19> 'int' lvalue ->save_shutdown 0x163da05a4c0
|   |   | | | `-ImplicitCastExpr 0x163da078148 <col:13> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x163da078128 <col:13> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   | | `-IntegerLiteral 0x163da078190 <col:35> 'int' 1
|   |   | `-BinaryOperator 0x163da078268 <line:1555:13, col:35> 'int' '='
|   |   |   |-MemberExpr 0x163da078210 <col:13, col:19> 'int' lvalue ->save_shutdown 0x163da05a4c0
|   |   |   | `-ImplicitCastExpr 0x163da0781f8 <col:13> 'bio_dgram_sctp_data *' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x163da0781d8 <col:13> 'bio_dgram_sctp_data *' lvalue Var 0x163da0745c0 'data' 'bio_dgram_sctp_data *'
|   |   |   `-IntegerLiteral 0x163da078240 <col:35> 'int' 0
|   |   |-BreakStmt 0x163da0782b0 <line:1556:9>
|   |   |-DefaultStmt 0x163da078340 <line:1558:5, col:12>
|   |   | `-NullStmt 0x163da078338 <col:12>
|   |   `-BreakStmt 0x163da078360 <line:1563:9>
|   `-ReturnStmt 0x163da078508 <line:1565:5, col:16>
|     `-ImplicitCastExpr 0x163da0784f0 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x163da0784d0 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x163da0784b0 <col:13> 'long' lvalue Var 0x163da0744f0 'ret' 'long'
|-FunctionDecl 0x163da076940 <line:1568:1, line:1584:1> line:1568:5 invalid BIO_dgram_sctp_notification_cb 'int (int *, void (*)(int *, void *, void *), void *)'
| |-ParmVarDecl 0x163da078570 <col:36, col:41> col:41 invalid b 'int *'
| |-ParmVarDecl 0x163da0787a0 <line:1569:36, line:1572:75> line:1569:43 used handle_notifications 'void (*)(int *, void *, void *)'
| |-ParmVarDecl 0x163da078820 <line:1573:36, col:42> col:42 used context 'void *'
| `-CompoundStmt 0x163da076e30 <line:1574:1, line:1584:1>
|   |-DeclStmt 0x163da076a88 <line:1575:5, col:63>
|   | `-VarDecl 0x163da076a20 <col:5, col:26> col:26 used data 'bio_dgram_sctp_data *'
|   |-IfStmt 0x163da076dd0 <line:1577:5, line:1581:17> has_else
|   | |-BinaryOperator 0x163da076b90 <line:1577:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x163da076b60 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1577:9> 'void (*)(int *, void *, void *)' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da076aa0 <col:9> 'void (*)(int *, void *, void *)' lvalue ParmVar 0x163da0787a0 'handle_notifications' 'void (*)(int *, void *, void *)'
|   | | `-ImplicitCastExpr 0x163da076b78 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'void (*)(int *, void *, void *)' <BitCast>
|   | |   `-ParenExpr 0x163da076b40 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x163da076b18 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x163da076ad8 <col:26> 'int' 0
|   | |-CompoundStmt 0x163da076d60 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1577:39, line:1580:5>
|   | | |-BinaryOperator 0x163da076c68 <line:1578:9, col:38> 'void (*)(int *, void *, void *)' '='
|   | | | |-MemberExpr 0x163da076c00 <col:9, col:15> 'void (*)(int *, void *, void *)' lvalue ->handle_notifications 0x163da05a290
|   | | | | `-ImplicitCastExpr 0x163da076be8 <col:9> 'bio_dgram_sctp_data *' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x163da076bb0 <col:9> 'bio_dgram_sctp_data *' lvalue Var 0x163da076a20 'data' 'bio_dgram_sctp_data *'
|   | | | `-ImplicitCastExpr 0x163da076c50 <col:38> 'void (*)(int *, void *, void *)' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x163da076c30 <col:38> 'void (*)(int *, void *, void *)' lvalue ParmVar 0x163da0787a0 'handle_notifications' 'void (*)(int *, void *, void *)'
|   | | `-BinaryOperator 0x163da076d40 <line:1579:9, col:38> 'void *' '='
|   | |   |-MemberExpr 0x163da076cc0 <col:9, col:15> 'void *' lvalue ->notification_context 0x163da05a300
|   | |   | `-ImplicitCastExpr 0x163da076ca8 <col:9> 'bio_dgram_sctp_data *' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x163da076c88 <col:9> 'bio_dgram_sctp_data *' lvalue Var 0x163da076a20 'data' 'bio_dgram_sctp_data *'
|   | |   `-ImplicitCastExpr 0x163da076d28 <col:38> 'void *' <LValueToRValue>
|   | |     `-DeclRefExpr 0x163da076cf0 <col:38> 'void *' lvalue ParmVar 0x163da078820 'context' 'void *'
|   | `-ReturnStmt 0x163da076dc0 <line:1581:9, col:17>
|   |   `-UnaryOperator 0x163da076da8 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x163da076d80 <col:17> 'int' 1
|   `-ReturnStmt 0x163da076e20 <line:1583:5, col:12>
|     `-IntegerLiteral 0x163da076df8 <col:12> 'int' 0
|-FunctionDecl 0x163da076f08 <line:1599:1, line:1755:1> line:1599:5 invalid BIO_dgram_sctp_wait_for_dry 'int (int *)'
| |-ParmVarDecl 0x163da076e70 <col:33, col:38> col:38 invalid b 'int *'
| `-CompoundStmt 0x163da080960 <line:1600:1, line:1755:1>
|   |-DeclStmt 0x163da077070 <line:1601:5, col:19>
|   | `-VarDecl 0x163da076fe0 <col:5, col:18> col:9 used is_dry 'int' cinit
|   |   `-IntegerLiteral 0x163da077048 <col:18> 'int' 0
|   |-DeclStmt 0x163da077130 <line:1602:5, col:22>
|   | `-VarDecl 0x163da0770a0 <col:5, col:21> col:9 used sockflags 'int' cinit
|   |   `-IntegerLiteral 0x163da077108 <col:21> 'int' 0
|   |-DeclStmt 0x163da077260 <line:1603:5, col:15>
|   | |-VarDecl 0x163da077160 <col:5, col:9> col:9 used n 'int'
|   | `-VarDecl 0x163da0771e0 <col:5, col:12> col:12 used ret 'int'
|   |-DeclStmt 0x163da077408 <line:1604:5, col:32>
|   | |-RecordDecl 0x163da077278 <col:5, col:11> col:11 union sctp_notification
|   | `-VarDecl 0x163da077388 <col:5, col:29> col:29 invalid snp 'union sctp_notification':'union sctp_notification'
|   |-DeclStmt 0x163da0775b8 <line:1605:5, col:22>
|   | |-RecordDecl 0x163da077420 <col:5, col:12> col:12 struct msghdr
|   | `-VarDecl 0x163da077538 <col:5, col:19> col:19 invalid msg 'struct msghdr':'struct msghdr'
|   |-DeclStmt 0x163da077768 <line:1606:5, col:21>
|   | |-RecordDecl 0x163da0775d0 <col:5, col:12> col:12 struct iovec
|   | `-VarDecl 0x163da0776e8 <col:5, col:18> col:18 invalid iov 'struct iovec':'struct iovec'
|   |-DeclStmt 0x163da07a980 <line:1610:5, col:38>
|   | |-RecordDecl 0x163da077780 <col:5, col:12> col:12 struct sctp_event_subscribe
|   | `-VarDecl 0x163da07a900 <col:5, col:33> col:33 invalid event 'struct sctp_event_subscribe':'struct sctp_event_subscribe'
|   |-DeclStmt 0x163da07aa10 <line:1613:5, col:63>
|   | `-VarDecl 0x163da07a9a8 <col:5, col:26> col:26 used data 'bio_dgram_sctp_data *'
|   |-IfStmt 0x163da07aba8 <line:1627:5, line:1628:17>
|   | |-BinaryOperator 0x163da07ab38 <line:1627:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x163da07ab20 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da07aad8 <col:9> 'int' lvalue Var 0x163da0771e0 'ret' 'int'
|   | | `-IntegerLiteral 0x163da07aaf8 <col:15> 'int' 0
|   | `-ReturnStmt 0x163da07ab98 <line:1628:9, col:17>
|   |   `-UnaryOperator 0x163da07ab80 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x163da07ab58 <col:17> 'int' 1
|   |-IfStmt 0x163da07ad18 <line:1636:5, line:1637:17>
|   | |-BinaryOperator 0x163da07aca8 <line:1636:9, col:15> 'int' '<'
|   | | |-ImplicitCastExpr 0x163da07ac90 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da07ac48 <col:9> 'int' lvalue Var 0x163da0771e0 'ret' 'int'
|   | | `-IntegerLiteral 0x163da07ac68 <col:15> 'int' 0
|   | `-ReturnStmt 0x163da07ad08 <line:1637:9, col:17>
|   |   `-UnaryOperator 0x163da07acf0 <col:16, col:17> 'int' prefix '-'
|   |     `-IntegerLiteral 0x163da07acc8 <col:17> 'int' 1
|   |-IfStmt 0x163da07b380 <line:1652:5, line:1658:5>
|   | |-BinaryOperator 0x163da07b038 <line:1652:9, col:14> 'int' '<='
|   | | |-ImplicitCastExpr 0x163da07b020 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x163da07afd8 <col:9> 'int' lvalue Var 0x163da077160 'n' 'int'
|   | | `-IntegerLiteral 0x163da07aff8 <col:14> 'int' 0
|   | `-CompoundStmt 0x163da07b368 <col:17, line:1658:5>
|   |   `-IfStmt 0x163da07b340 <line:1653:9, line:1657:20> has_else
|   |     |-BinaryOperator 0x163da07b298 <line:1653:13, line:1654:55> 'int' '&&'
|   |     | |-BinaryOperator 0x163da07b1b8 <line:1653:13, col:58> 'int' '&&'
|   |     | | |-ParenExpr 0x163da07b0d8 <col:13, col:19> 'int'
|   |     | | | `-BinaryOperator 0x163da07b0b8 <col:14, col:18> 'int' '<'
|   |     | | |   |-ImplicitCastExpr 0x163da07b0a0 <col:14> 'int' <LValueToRValue>
|   |     | | |   | `-DeclRefExpr 0x163da07b058 <col:14> 'int' lvalue Var 0x163da077160 'n' 'int'
|   |     | | |   `-IntegerLiteral 0x163da07b078 <col:18> 'int' 0
|   |     | | `-ParenExpr 0x163da07b198 <col:24, col:58> 'int'
|   |     | |   `-BinaryOperator 0x163da07b178 <col:25, D:\Microsoft Visual Studio 12.0\VC\include\errno.h:50:25> 'int' '!='
|   |     | |     |-CallExpr 0x163da07b130 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1653:25, col:47> 'int'
|   |     | |     | `-ImplicitCastExpr 0x163da07b118 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |     | |     |   `-DeclRefExpr 0x163da07b0f8 <col:25> 'int ()' Function 0x163da0656c0 'get_last_socket_error' 'int ()'
|   |     | |     `-IntegerLiteral 0x163da07b150 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:50:25> 'int' 11
|   |     | `-ParenExpr 0x163da07b278 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1654:16, col:55> 'int'
|   |     |   `-BinaryOperator 0x163da07b258 <col:17, D:\Microsoft Visual Studio 12.0\VC\include\errno.h:132:25> 'int' '!='
|   |     |     |-CallExpr 0x163da07b210 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1654:17, col:39> 'int'
|   |     |     | `-ImplicitCastExpr 0x163da07b1f8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |     |     |   `-DeclRefExpr 0x163da07b1d8 <col:17> 'int ()' Function 0x163da0656c0 'get_last_socket_error' 'int ()'
|   |     |     `-IntegerLiteral 0x163da07b230 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:132:25> 'int' 140
|   |     |-ReturnStmt 0x163da07b2f8 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1655:13, col:21>
|   |     | `-UnaryOperator 0x163da07b2e0 <col:20, col:21> 'int' prefix '-'
|   |     |   `-IntegerLiteral 0x163da07b2b8 <col:21> 'int' 1
|   |     `-ReturnStmt 0x163da07b330 <line:1657:13, col:20>
|   |       `-IntegerLiteral 0x163da07b308 <col:20> 'int' 0
|   `-ReturnStmt 0x163da079890 <line:1754:5, col:12>
|     `-ImplicitCastExpr 0x163da079878 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x163da079858 <col:12> 'int' lvalue Var 0x163da076fe0 'is_dry' 'int'
|-FunctionDecl 0x163da080a80 <line:1757:1, line:1814:1> line:1757:5 invalid BIO_dgram_sctp_msg_waiting 'int (int *)'
| |-ParmVarDecl 0x163da0809e8 <col:32, col:37> col:37 invalid b 'int *'
| `-CompoundStmt 0x163da079c48 <line:1758:1, line:1814:1>
|   |-DeclStmt 0x163da080c58 <line:1759:5, col:21>
|   | |-VarDecl 0x163da080b58 <col:5, col:9> col:9 used n 'int'
|   | `-VarDecl 0x163da080bd8 <col:5, col:12> col:12 used sockflags 'int'
|   |-DeclStmt 0x163da080e08 <line:1760:5, col:32>
|   | |-RecordDecl 0x163da080c70 <col:5, col:11> col:11 union sctp_notification
|   | `-VarDecl 0x163da080d88 <col:5, col:29> col:29 invalid snp 'union sctp_notification':'union sctp_notification'
|   |-DeclStmt 0x163da080fb8 <line:1761:5, col:22>
|   | |-RecordDecl 0x163da080e20 <col:5, col:12> col:12 struct msghdr
|   | `-VarDecl 0x163da080f38 <col:5, col:19> col:19 invalid msg 'struct msghdr':'struct msghdr'
|   |-DeclStmt 0x163da081168 <line:1762:5, col:21>
|   | |-RecordDecl 0x163da080fd0 <col:5, col:12> col:12 struct iovec
|   | `-VarDecl 0x163da0810e8 <col:5, col:18> col:18 invalid iov 'struct iovec':'struct iovec'
|   |-DeclStmt 0x163da0811f8 <line:1763:5, col:63>
|   | `-VarDecl 0x163da081190 <col:5, col:26> col:26 used data 'bio_dgram_sctp_data *'
|   `-IfStmt 0x163da079c20 <line:1810:5, line:1813:16> has_else
|     |-BinaryOperator 0x163da079b90 <line:1810:9, col:13> 'int' '>'
|     | |-ImplicitCastExpr 0x163da079b78 <col:9> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x163da079b30 <col:9> 'int' lvalue Var 0x163da080b58 'n' 'int'
|     | `-IntegerLiteral 0x163da079b50 <col:13> 'int' 0
|     |-ReturnStmt 0x163da079bd8 <line:1811:9, col:16>
|     | `-IntegerLiteral 0x163da079bb0 <col:16> 'int' 1
|     `-ReturnStmt 0x163da079c10 <line:1813:9, col:16>
|       `-IntegerLiteral 0x163da079be8 <col:16> 'int' 0
|-FunctionDecl 0x163da079dc0 <line:1816:1, line:1823:1> line:1816:12 invalid dgram_sctp_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x163da079ca0 <col:28, col:33> col:33 invalid bp 'int *'
| |-ParmVarDecl 0x163da079d20 <col:37, col:49> col:49 used str 'const char *'
| `-CompoundStmt 0x163da07a1d0 <line:1817:1, line:1823:1>
|   |-DeclStmt 0x163da079fa0 <line:1818:5, col:15>
|   | |-VarDecl 0x163da079ea0 <col:5, col:9> col:9 used n 'int'
|   | `-VarDecl 0x163da079f20 <col:5, col:12> col:12 used ret 'int'
|   |-BinaryOperator 0x163da07a0d0 <line:1820:5, col:19> 'int' '='
|   | |-DeclRefExpr 0x163da079fb8 <col:5> 'int' lvalue Var 0x163da079ea0 'n' 'int'
|   | `-ImplicitCastExpr 0x163da07a0b8 <col:9, col:19> 'int' <IntegralCast>
|   |   `-CallExpr 0x163da07a078 <col:9, col:19> 'unsigned long long'
|   |     |-ImplicitCastExpr 0x163da07a060 <col:9> 'unsigned long long (*)(const char *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x163da079ff0 <col:9> 'unsigned long long (const char *)' Function 0x163da06a070 'strlen' 'unsigned long long (const char *)'
|   |     `-ImplicitCastExpr 0x163da07a0a0 <col:16> 'const char *' <LValueToRValue>
|   |       `-DeclRefExpr 0x163da07a010 <col:16> 'const char *' lvalue ParmVar 0x163da079d20 'str' 'const char *'
|   `-ReturnStmt 0x163da07a1c0 <line:1822:5, col:16>
|     `-ImplicitCastExpr 0x163da07a1a8 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x163da07a188 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x163da07a168 <col:13> 'int' lvalue Var 0x163da079f20 'ret' 'int'
|-FunctionDecl 0x163da07a2c0 prev 0x163da058850 <line:1826:1, line:1844:1> line:1826:12 used BIO_dgram_should_retry 'int (int)' static
| |-ParmVarDecl 0x163da07a210 <col:35, col:39> col:39 used i 'int'
| `-CompoundStmt 0x163da07a870 <line:1827:1, line:1844:1>
|   |-DeclStmt 0x163da07a3e8 <line:1828:5, col:12>
|   | `-VarDecl 0x163da07a380 <col:5, col:9> col:9 used err 'int'
|   |-IfStmt 0x163da07a800 <line:1830:5, line:1842:5>
|   | |-BinaryOperator 0x163da07a558 <line:1830:9, col:29> 'int' '||'
|   | | |-ParenExpr 0x163da07a480 <col:9, col:16> 'int'
|   | | | `-BinaryOperator 0x163da07a460 <col:10, col:15> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x163da07a448 <col:10> 'int' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x163da07a400 <col:10> 'int' lvalue ParmVar 0x163da07a210 'i' 'int'
|   | | |   `-IntegerLiteral 0x163da07a420 <col:15> 'int' 0
|   | | `-ParenExpr 0x163da07a538 <col:21, col:29> 'int'
|   | |   `-BinaryOperator 0x163da07a518 <col:22, col:28> 'int' '=='
|   | |     |-ImplicitCastExpr 0x163da07a500 <col:22> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x163da07a4a0 <col:22> 'int' lvalue ParmVar 0x163da07a210 'i' 'int'
|   | |     `-UnaryOperator 0x163da07a4e8 <col:27, col:28> 'int' prefix '-'
|   | |       `-IntegerLiteral 0x163da07a4c0 <col:28> 'int' 1
|   | `-CompoundStmt 0x163da07a7e0 <col:32, line:1842:5>
|   |   |-BinaryOperator 0x163da07a608 <line:1831:9, col:37> 'int' '='
|   |   | |-DeclRefExpr 0x163da07a578 <col:9> 'int' lvalue Var 0x163da07a380 'err' 'int'
|   |   | `-CallExpr 0x163da07a5e8 <col:15, col:37> 'int'
|   |   |   `-ImplicitCastExpr 0x163da07a5d0 <col:15> 'int (*)()' <FunctionToPointerDecay>
|   |   |     `-DeclRefExpr 0x163da07a5b0 <col:15> 'int ()' Function 0x163da0656c0 'get_last_socket_error' 'int ()'
|   |   `-ReturnStmt 0x163da07a7d0 <line:1841:9, col:47>
|   |     `-ParenExpr 0x163da07a7b0 <col:16, col:47> 'int'
|   |       `-CallExpr 0x163da07a770 <col:17, col:46> 'int'
|   |         |-ImplicitCastExpr 0x163da07a758 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x163da07a718 <col:17> 'int ()' Function 0x163da07a650 'BIO_dgram_non_fatal_error' 'int ()'
|   |         `-ImplicitCastExpr 0x163da07a798 <col:43> 'int' <LValueToRValue>
|   |           `-DeclRefExpr 0x163da07a738 <col:43> 'int' lvalue Var 0x163da07a380 'err' 'int'
|   `-ReturnStmt 0x163da07a860 <line:1843:5, col:14>
|     `-ParenExpr 0x163da07a840 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x163da07a818 <col:13> 'int' 0
|-FunctionDecl 0x163da081a20 prev 0x163da07a650 <line:1846:1, line:1893:1> line:1846:5 used BIO_dgram_non_fatal_error 'int (int)'
| |-ParmVarDecl 0x163da081970 <col:31, col:35> col:35 used err 'int'
| `-CompoundStmt 0x163da081e88 <line:1847:1, line:1893:1>
|   |-SwitchStmt 0x163da081b00 <line:1848:5, line:1891:5>
|   | |-ImplicitCastExpr 0x163da081ae8 <line:1848:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x163da081ac8 <col:13> 'int' lvalue ParmVar 0x163da081970 'err' 'int'
|   | `-CompoundStmt 0x163da081e10 <col:18, line:1891:5>
|   |   |-CaseStmt 0x163da081b60 <line:1861:5, line:1887:18>
|   |   | |-ConstantExpr 0x163da081b48 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:132:25> 'int'
|   |   | | `-IntegerLiteral 0x163da081b20 <col:25> 'int' 140
|   |   | `-CaseStmt 0x163da081bc8 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1866:5, line:1887:18>
|   |   |   |-ConstantExpr 0x163da081bb0 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:43:25> 'int'
|   |   |   | `-IntegerLiteral 0x163da081b88 <col:25> 'int' 4
|   |   |   `-CaseStmt 0x163da081c30 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1871:5, line:1887:18>
|   |   |     |-ConstantExpr 0x163da081c18 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:50:25> 'int'
|   |   |     | `-IntegerLiteral 0x163da081bf0 <col:25> 'int' 11
|   |   |     `-CaseStmt 0x163da081c98 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1876:5, line:1887:18>
|   |   |       |-ConstantExpr 0x163da081c80 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:126:25> 'int'
|   |   |       | `-IntegerLiteral 0x163da081c58 <col:25> 'int' 134
|   |   |       `-CaseStmt 0x163da081d00 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1880:5, line:1887:18>
|   |   |         |-ConstantExpr 0x163da081ce8 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:104:25> 'int'
|   |   |         | `-IntegerLiteral 0x163da081cc0 <col:25> 'int' 112
|   |   |         `-CaseStmt 0x163da081d68 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1884:5, line:1887:18>
|   |   |           |-ConstantExpr 0x163da081d50 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:95:25> 'int'
|   |   |           | `-IntegerLiteral 0x163da081d28 <col:25> 'int' 103
|   |   |           `-ReturnStmt 0x163da081dd8 <.//openssl//file_jk/after\crypto\bio\bss_dgram.c:1887:9, col:18>
|   |   |             `-ParenExpr 0x163da081db8 <col:16, col:18> 'int'
|   |   |               `-IntegerLiteral 0x163da081d90 <col:17> 'int' 1
|   |   `-DefaultStmt 0x163da081df0 <line:1889:5, line:1890:9>
|   |     `-BreakStmt 0x163da081de8 <col:9>
|   `-ReturnStmt 0x163da081e78 <line:1892:5, col:14>
|     `-ParenExpr 0x163da081e58 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x163da081e30 <col:13> 'int' 0
`-FunctionDecl 0x163da082038 <line:1895:1, line:1921:1> line:1895:13 invalid get_current_time 'void (struct timeval *)' static
  |-ParmVarDecl 0x163da081f30 <col:30, col:46> col:46 used t 'struct timeval *'
  `-CompoundStmt 0x163da07d9c0 <line:1896:1, line:1921:1>
    |-DeclStmt 0x163da082368 <line:1899:5, line:1902:10>
    | |-RecordDecl 0x163da0820f8 <line:1899:5, line:1902:5> line:1899:5 invalid union definition
    | | |-FieldDecl 0x163da0821c8 <line:1900:9, col:26> col:26 referenced ul 'unsigned long long'
    | | `-FieldDecl 0x163da082238 <line:1901:9, col:18> col:18 invalid ft 'int'
    | `-VarDecl 0x163da0822e8 <line:1899:5, line:1902:7> col:7 used now 'union (anonymous union at .//openssl//file_jk/after\crypto\bio\bss_dgram.c:1899:5)':'union (anonymous at .//openssl//file_jk/after\crypto\bio\bss_dgram.c:1899:5)'
    `-CompoundAssignOperator 0x163da082650 <line:1909:5, col:15> 'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
      |-MemberExpr 0x163da0825f8 <col:5, col:9> 'unsigned long long' lvalue .ul 0x163da0821c8
      | `-DeclRefExpr 0x163da0825d8 <col:5> 'union (anonymous union at .//openssl//file_jk/after\crypto\bio\bss_dgram.c:1899:5)':'union (anonymous at .//openssl//file_jk/after\crypto\bio\bss_dgram.c:1899:5)' lvalue Var 0x163da0822e8 'now' 'union (anonymous union at .//openssl//file_jk/after\crypto\bio\bss_dgram.c:1899:5)':'union (anonymous at .//openssl//file_jk/after\crypto\bio\bss_dgram.c:1899:5)'
      `-IntegerLiteral 0x163da082628 <col:15> 'unsigned long long' 116444736000000000
