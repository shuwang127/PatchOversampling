TranslationUnitDecl 0x1b5e566f648 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1b5e566fee0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1b5e566fbe0 '__int128'
|-TypedefDecl 0x1b5e566ff50 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1b5e566fc00 'unsigned __int128'
|-TypedefDecl 0x1b5e5670288 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1b5e5670040 'struct __NSConstantString_tag'
|   `-Record 0x1b5e566ffa8 '__NSConstantString_tag'
|-TypedefDecl 0x1b5e56702f8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1b5e566f820 'unsigned long long'
|-TypedefDecl 0x1b5e5670390 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1b5e5670350 'char *'
|   `-BuiltinType 0x1b5e566f6e0 'char'
|-TypedefDecl 0x1b5e5670400 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1b5e5670350 'char *'
|   `-BuiltinType 0x1b5e566f6e0 'char'
|-TypedefDecl 0x1b5e56704c0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1b5e566f820 'unsigned long long'
|-TypedefDecl 0x1b5e5670530 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1b5e5670350 'char *'
|   `-BuiltinType 0x1b5e566f6e0 'char'
|-FunctionDecl 0x1b5e705bdc0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b5e705be60 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1b5e705bed0 <col:21> Implicit
|-FunctionDecl 0x1b5e705bf28 prev 0x1b5e705bdc0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b5e705bc50 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1b5e705c018 <col:21> Inherited Implicit
|-TypedefDecl 0x1b5e705c058 prev 0x1b5e56702f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1b5e566f820 'unsigned long long'
|-TypedefDecl 0x1b5e705c100 <line:503:1, col:16> col:16 rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1b5e705c0d0 'size_t' sugar
|   |-Typedef 0x1b5e705c058 'size_t'
|   `-BuiltinType 0x1b5e566f820 'unsigned long long'
|-TypedefDecl 0x1b5e705c170 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1b5e566f780 'long long'
|-TypedefDecl 0x1b5e705c1e0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1b5e566f780 'long long'
|-TypedefDecl 0x1b5e705c250 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1b5e566f7c0 'unsigned short'
|-TypedefDecl 0x1b5e705c2c0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1b5e566f7c0 'unsigned short'
|-TypedefDecl 0x1b5e705c330 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1b5e566f7c0 'unsigned short'
|-TypedefDecl 0x1b5e705c3a0 <line:563:1, col:13> col:13 errno_t 'int'
| `-BuiltinType 0x1b5e566f740 'int'
|-TypedefDecl 0x1b5e705c410 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1b5e566f760 'long'
|-TypedefDecl 0x1b5e705c480 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1b5e566f780 'long long'
|-TypedefDecl 0x1b5e705c510 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1b5e705c4e0 '__time64_t' sugar
|   |-Typedef 0x1b5e705c480 '__time64_t'
|   `-BuiltinType 0x1b5e566f780 'long long'
|-FunctionDecl 0x1b5e705c688 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1b5e705c8a8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1b5e709a1f0 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1b5e705c9e8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1b5e705ca60 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1b5e705cad8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1b5e705cb58 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1b5e7099f90 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1b5e709a2d0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1b5e709a390 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1b5e709a500 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1b5e709a4b0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1b5e709a450 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1b5e709a370 'struct threadlocaleinfostruct'
|       `-Record 0x1b5e709cfc0 'threadlocaleinfostruct'
|-TypedefDecl 0x1b5e709a610 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1b5e709a5c0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1b5e709a560 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1b5e709a430 'struct threadmbcinfostruct'
|       `-Record 0x1b5e709a390 'threadmbcinfostruct'
|-RecordDecl 0x1b5e709a668 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1b5e709a720 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1b5e709a7e0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b5e709a870 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1b5e709a900 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1b5e709a9b8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1b5e709a960 'struct localeinfo_struct' sugar
|   `-RecordType 0x1b5e709a7c0 'struct localeinfo_struct'
|     `-Record 0x1b5e709a720 'localeinfo_struct'
|-TypedefDecl 0x1b5e709aa90 <line:2078:1, line:2082:21> col:21 _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1b5e709aa40 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1b5e709a960 'struct localeinfo_struct' sugar
|     `-RecordType 0x1b5e709a7c0 'struct localeinfo_struct'
|       `-Record 0x1b5e709a720 'localeinfo_struct'
|-RecordDecl 0x1b5e709ab08 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1b5e709abc0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b5e709ac38 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1b5e709acf8 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1b5e709ad90 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1b5e709ae00 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1b5e709aeb8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1b5e709ae60 'struct localerefcount' sugar
|   `-RecordType 0x1b5e709aba0 'struct localerefcount'
|     `-Record 0x1b5e709ab08 'localerefcount'
|-RecordDecl 0x1b5e709cfc0 prev 0x1b5e709a2d0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1b5e709d040 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b5e709d0b8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1b5e709d128 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1b5e709d198 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1b5e709d208 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1b5e709d3c8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1b5e709d438 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1b5e709d4a8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1b5e709d518 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1b5e709d588 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1b5e709d5f8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1b5e709d650 parent 0x1b5e566f648 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1b5e709d7e0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1b5e709d850 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1b5e709d8c0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1b5e709d930 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1b5e709d9d0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1b5e709da40 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1b5e709db50 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1b5e709dc88 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1b5e709dd38 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1b5e709dce0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1b5e709a370 'struct threadlocaleinfostruct'
|     `-Record 0x1b5e709cfc0 'threadlocaleinfostruct'
|-FunctionDecl 0x1b5e70a5120 <D:\Microsoft Visual Studio 12.0\VC\include\assert.h:35:9, col:112> col:22 _wassert 'void (const wchar_t *, const wchar_t *, unsigned int) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, unsigned int)'
| |-ParmVarDecl 0x1b5e709ddb8 <col:38, col:54> col:54 _Message 'const wchar_t *'
| |-ParmVarDecl 0x1b5e709de30 <col:71, col:86> col:86 _File 'const wchar_t *'
| `-ParmVarDecl 0x1b5e709deb0 <col:98, col:107> col:107 _Line 'unsigned int'
|-FunctionDecl 0x1b5e70a5480 <.//openssl//file_jk/after\crypto\bn/bn_lcl.h:220:1, line:221:37> line:220:10 invalid bn_mul_add_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1b5e70a5208 <col:27, col:37> col:37 invalid rp 'int *'
| |-ParmVarDecl 0x1b5e70a5288 <col:41, col:57> col:57 invalid ap 'const int *'
| |-ParmVarDecl 0x1b5e70a5308 <col:61, col:65> col:65 num 'int'
| `-ParmVarDecl 0x1b5e70a5388 <line:221:27, col:36> col:36 invalid w 'int'
|-FunctionDecl 0x1b5e70a5788 <line:222:1, col:76> col:10 invalid bn_mul_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1b5e70a5558 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1b5e70a55d8 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1b5e70a5658 <col:57, col:61> col:61 num 'int'
| `-ParmVarDecl 0x1b5e70a56d8 <col:66, col:75> col:75 invalid w 'int'
|-FunctionDecl 0x1b5e70a5a48 <line:223:1, col:60> col:6 invalid bn_sqr_words 'void (int *, const int *, int)'
| |-ParmVarDecl 0x1b5e70a5860 <col:19, col:29> col:29 invalid rp 'int *'
| |-ParmVarDecl 0x1b5e70a58e0 <col:33, col:49> col:49 invalid ap 'const int *'
| `-ParmVarDecl 0x1b5e70a5960 <col:53, col:57> col:57 num 'int'
|-FunctionDecl 0x1b5e70a5d00 <line:224:1, col:57> col:10 invalid bn_div_words 'int (int, int, int)'
| |-ParmVarDecl 0x1b5e70a5b18 <col:23, col:32> col:32 invalid h 'int'
| |-ParmVarDecl 0x1b5e70a5b98 <col:35, col:44> col:44 invalid l 'int'
| `-ParmVarDecl 0x1b5e70a5c18 <col:47, col:56> col:56 invalid d 'int'
|-FunctionDecl 0x1b5e70a90c8 <line:225:1, line:226:30> line:225:10 invalid bn_add_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1b5e70a5dd0 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1b5e70a5e50 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1b5e70a5ed0 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1b5e70a5f50 <line:226:23, col:27> col:27 num 'int'
|-FunctionDecl 0x1b5e70a93d0 <line:227:1, line:228:30> line:227:10 invalid bn_sub_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1b5e70a91a0 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1b5e70a9220 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1b5e70a92a0 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1b5e70a9320 <line:228:23, col:27> col:27 num 'int'
|-RecordDecl 0x1b5e70a9490 <line:230:1, line:238:1> line:230:8 invalid struct bignum_st definition
| |-FieldDecl 0x1b5e70a9568 <line:231:5, col:15> col:15 invalid d 'int *'
| |-FieldDecl 0x1b5e70a95d8 <line:233:5, col:9> col:9 top 'int'
| |-FieldDecl 0x1b5e70a9648 <line:235:5, col:9> col:9 dmax 'int'
| |-FieldDecl 0x1b5e70a96b8 <line:236:5, col:9> col:9 neg 'int'
| `-FieldDecl 0x1b5e70a9728 <line:237:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1b5e70a9780 <line:241:1, line:252:1> line:241:8 invalid struct bn_mont_ctx_st definition
| |-FieldDecl 0x1b5e70a9858 <line:242:5, col:9> col:9 ri 'int'
| |-FieldDecl 0x1b5e70a98c8 <line:243:5, col:12> col:12 invalid RR 'int'
| |-FieldDecl 0x1b5e70a9938 <line:245:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1b5e70a99a8 <line:246:5, col:12> col:12 invalid Ni 'int'
| |-FieldDecl 0x1b5e70a9aa0 <line:248:5, <invalid sloc>> col:14 invalid n0 'int [2]'
| `-FieldDecl 0x1b5e70a9b10 <line:251:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1b5e70a9b68 <line:258:1, line:264:1> line:258:8 invalid struct bn_recp_ctx_st definition
| |-FieldDecl 0x1b5e70a9c38 <line:259:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1b5e70a9ca8 <line:260:5, col:12> col:12 invalid Nr 'int'
| |-FieldDecl 0x1b5e70a9d18 <line:261:5, col:9> col:9 num_bits 'int'
| |-FieldDecl 0x1b5e70a9d88 <line:262:5, col:9> col:9 shift 'int'
| `-FieldDecl 0x1b5e70a9df8 <line:263:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1b5e70a9e50 <line:267:1, line:276:1> line:267:8 struct bn_gencb_st definition
| |-FieldDecl 0x1b5e70a9f28 <line:268:5, col:18> col:18 ver 'unsigned int'
| |-FieldDecl 0x1b5e70a9f98 <line:269:5, col:11> col:11 arg 'void *'
| |-RecordDecl 0x1b5e70a9ff0 <line:270:5, line:275:5> line:270:5 union definition
| | |-FieldDecl 0x1b5e70aa360 <line:272:9, col:39> col:16 cb_1 'void (*)(int, int, void *)'
| | `-FieldDecl 0x1b5e70aa658 <line:274:9, col:42> col:15 cb_2 'int (*)(int, int, int *)'
| `-FieldDecl 0x1b5e70aa708 <line:270:5, line:275:7> col:7 cb 'union (anonymous union at .//openssl//file_jk/after\crypto\bn/bn_lcl.h:270:5)':'union bn_gencb_st::(anonymous at .//openssl//file_jk/after\crypto\bn/bn_lcl.h:270:5)'
|-FunctionDecl 0x1b5e70aa898 <line:649:1, col:40> col:6 invalid BN_RECP_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1b5e70aa7d8 <col:23, col:36> col:36 invalid recp 'int *'
|-FunctionDecl 0x1b5e70aa9e8 <line:650:1, col:39> col:6 invalid BN_MONT_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1b5e70aa958 <col:23, col:36> col:36 invalid ctx 'int *'
|-FunctionDecl 0x1b5e70aab38 <line:652:1, col:23> col:6 invalid bn_init 'void (int *)'
| `-ParmVarDecl 0x1b5e70aaaa8 <col:14, col:22> col:22 invalid a 'int *'
|-FunctionDecl 0x1b5e70aaef8 <line:653:1, col:73> col:6 invalid bn_mul_normal 'void (int *, int *, int, int *, int)'
| |-ParmVarDecl 0x1b5e70aabf8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70aac78 <col:33, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x1b5e70aacf8 <col:46, col:50> col:50 na 'int'
| |-ParmVarDecl 0x1b5e70aad78 <col:54, col:64> col:64 invalid b 'int *'
| `-ParmVarDecl 0x1b5e70aadf8 <col:67, col:71> col:71 nb 'int'
|-FunctionDecl 0x1b5e70b1268 <line:654:1, col:57> col:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1b5e70aafd8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70b1100 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1b5e70b1180 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1b5e70b14d8 <line:655:1, col:57> col:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1b5e70b1338 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70b13b8 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1b5e70b1438 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1b5e70b1818 <line:656:1, col:72> col:6 invalid bn_sqr_normal 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1b5e70b15a8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70b1628 <col:33, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x1b5e70b16a8 <col:52, col:56> col:56 n 'int'
| `-ParmVarDecl 0x1b5e70b1728 <col:59, col:69> col:69 invalid tmp 'int *'
|-FunctionDecl 0x1b5e70b1a48 <line:657:1, col:50> col:6 invalid bn_sqr_comba8 'void (int *, const int *)'
| |-ParmVarDecl 0x1b5e70b18f0 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1b5e70b1970 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1b5e70b1c28 <line:658:1, col:50> col:6 invalid bn_sqr_comba4 'void (int *, const int *)'
| |-ParmVarDecl 0x1b5e70b1b10 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1b5e70b1b90 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1b5e70b1ee0 <line:659:1, col:61> col:5 invalid bn_cmp_words 'int (const int *, const int *, int)'
| |-ParmVarDecl 0x1b5e70b1cf0 <col:18, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x1b5e70b1d70 <col:37, col:53> col:53 invalid b 'const int *'
| `-ParmVarDecl 0x1b5e70b1df0 <col:56, col:60> col:60 n 'int'
|-FunctionDecl 0x1b5e70b0270 <line:660:1, col:75> col:5 invalid bn_cmp_part_words 'int (const int *, const int *, int, int)'
| |-ParmVarDecl 0x1b5e70b1fb0 <col:23, col:39> col:39 invalid a 'const int *'
| |-ParmVarDecl 0x1b5e70b2030 <col:42, col:58> col:58 invalid b 'const int *'
| |-ParmVarDecl 0x1b5e70b00f0 <col:61, col:65> col:65 cl 'int'
| `-ParmVarDecl 0x1b5e70b0170 <col:69, col:73> col:73 dl 'int'
|-FunctionDecl 0x1b5e70b0768 <line:661:1, line:662:52> line:661:6 invalid bn_mul_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1b5e70b0348 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70b03c8 <col:36, col:46> col:46 invalid a 'int *'
| |-ParmVarDecl 0x1b5e70b0448 <col:49, col:59> col:59 invalid b 'int *'
| |-ParmVarDecl 0x1b5e70b04c8 <col:62, col:66> col:66 n2 'int'
| |-ParmVarDecl 0x1b5e70b0548 <line:662:23, col:27> col:27 dna 'int'
| |-ParmVarDecl 0x1b5e70b05c8 <col:32, col:36> col:36 dnb 'int'
| `-ParmVarDecl 0x1b5e70b0648 <col:41, col:51> col:51 invalid t 'int *'
|-FunctionDecl 0x1b5e70b0c18 <line:663:1, line:664:64> line:663:6 invalid bn_mul_part_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1b5e70b0858 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70b08d8 <col:41, col:51> col:51 invalid a 'int *'
| |-ParmVarDecl 0x1b5e70b0958 <col:54, col:64> col:64 invalid b 'int *'
| |-ParmVarDecl 0x1b5e70b09d8 <line:664:28, col:32> col:32 n 'int'
| |-ParmVarDecl 0x1b5e70b0a58 <col:35, col:39> col:39 tna 'int'
| |-ParmVarDecl 0x1b5e70b0ad8 <col:44, col:48> col:48 tnb 'int'
| `-ParmVarDecl 0x1b5e70b0b58 <col:53, col:63> col:63 invalid t 'int *'
|-FunctionDecl 0x1b5e70b0f30 <line:665:1, col:74> col:6 invalid bn_sqr_recursive 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1b5e70b0d08 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70b0d88 <col:36, col:52> col:52 invalid a 'const int *'
| |-ParmVarDecl 0x1b5e70b0e08 <col:55, col:59> col:59 n2 'int'
| `-ParmVarDecl 0x1b5e70b0e88 <col:63, col:73> col:73 invalid t 'int *'
|-FunctionDecl 0x1b5e70ab228 <line:666:1, col:68> col:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
| |-ParmVarDecl 0x1b5e70b1008 <col:24, col:34> col:34 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70b1088 <col:37, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x1b5e70ab0b8 <col:50, col:60> col:60 invalid b 'int *'
| `-ParmVarDecl 0x1b5e70ab138 <col:63, col:67> col:67 n 'int'
|-FunctionDecl 0x1b5e70ab608 <line:667:1, line:668:38> line:667:6 invalid bn_mul_low_recursive 'void (int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1b5e70ab300 <col:27, col:37> col:37 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70ab380 <col:40, col:50> col:50 invalid a 'int *'
| |-ParmVarDecl 0x1b5e70ab400 <col:53, col:63> col:63 invalid b 'int *'
| |-ParmVarDecl 0x1b5e70ab480 <col:66, col:70> col:70 n2 'int'
| `-ParmVarDecl 0x1b5e70ab500 <line:668:27, col:37> col:37 invalid t 'int *'
|-FunctionDecl 0x1b5e70aba78 <line:669:1, line:670:29> line:669:6 invalid bn_mul_high 'void (int *, int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1b5e70ab6e8 <col:18, col:28> col:28 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70ab768 <col:31, col:41> col:41 invalid a 'int *'
| |-ParmVarDecl 0x1b5e70ab7e8 <col:44, col:54> col:54 invalid b 'int *'
| |-ParmVarDecl 0x1b5e70ab868 <col:57, col:67> col:67 invalid l 'int *'
| |-ParmVarDecl 0x1b5e70ab8e8 <col:70, col:74> col:74 n2 'int'
| `-ParmVarDecl 0x1b5e70ab968 <line:670:18, col:28> col:28 invalid t 'int *'
|-FunctionDecl 0x1b5e70abe70 <line:671:1, line:672:42> line:671:10 invalid bn_add_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1b5e70abb60 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70abbe0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1b5e70abc60 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1b5e70abce0 <line:672:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1b5e70abd60 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1b5e70ac268 <line:673:1, line:674:42> line:673:10 invalid bn_sub_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1b5e70abf50 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1b5e70abfd0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1b5e70ac0b0 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1b5e70ac130 <line:674:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1b5e70ac1b0 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1b5e70ac6e0 <line:675:1, line:676:64> line:675:5 invalid bn_mul_mont 'int (int *, const int *, const int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1b5e70ac348 <col:17, col:27> col:27 invalid rp 'int *'
| |-ParmVarDecl 0x1b5e70ac3c8 <col:31, col:47> col:47 invalid ap 'const int *'
| |-ParmVarDecl 0x1b5e70ac448 <col:51, col:67> col:67 invalid bp 'const int *'
| |-ParmVarDecl 0x1b5e70ac4c8 <line:676:17, col:33> col:33 invalid np 'const int *'
| |-ParmVarDecl 0x1b5e70ac548 <col:37, col:53> col:53 invalid n0 'const int *'
| `-ParmVarDecl 0x1b5e70ac5c8 <col:57, col:61> col:61 num 'int'
|-FunctionDecl 0x1b5e70acad0 <line:678:1, line:680:38> line:678:9 invalid int_bn_mod_inverse 'int *(int *, const int *, const int *, int *, int *)'
| |-ParmVarDecl 0x1b5e70ac7c8 <col:28, col:36> col:36 invalid in 'int *'
| |-ParmVarDecl 0x1b5e70ac848 <line:679:28, col:42> col:42 invalid a 'const int *'
| |-ParmVarDecl 0x1b5e70ac8c8 <col:45, col:59> col:59 invalid n 'const int *'
| |-ParmVarDecl 0x1b5e70ac948 <col:62, col:70> col:70 invalid ctx 'int *'
| `-ParmVarDecl 0x1b5e70ac9c8 <line:680:28, col:33> col:33 noinv 'int *'
|-FunctionDecl 0x1b5e70acec0 <line:682:1, line:683:75> line:682:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x1b5e70acbb0 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x1b5e70acc30 <col:39, col:43> col:43 bits 'int'
| |-ParmVarDecl 0x1b5e70accb0 <line:683:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x1b5e70acd30 <col:45, col:59> col:59 invalid rem 'const int *'
| `-ParmVarDecl 0x1b5e70acdb0 <col:64, col:72> col:72 invalid ctx 'int *'
|-FunctionDecl 0x1b5e70ad1b0 <line:684:1, col:66> col:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x1b5e70acfa0 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x1b5e70ad020 <col:45, col:49> col:49 bits 'int'
| `-ParmVarDecl 0x1b5e70ad0c0 <col:55, col:63> col:63 invalid ctx 'int *'
|-FunctionDecl 0x1b5e70ad428 <line:685:1, col:68> col:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x1b5e70ad280 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x1b5e70ad300 <col:47, col:51> col:51 bits 'int'
| `-ParmVarDecl 0x1b5e70ad380 <col:57, col:65> col:65 invalid ctx 'int *'
`-VarDecl 0x1b5e70ad4f8 <line:687:1, col:20> col:20 invalid BIGNUM 'int' static
