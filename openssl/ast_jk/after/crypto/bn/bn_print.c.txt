TranslationUnitDecl 0x1ea5bb32868 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1ea5bb33100 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1ea5bb32e00 '__int128'
|-TypedefDecl 0x1ea5bb33170 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1ea5bb32e20 'unsigned __int128'
|-TypedefDecl 0x1ea5bb334a8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1ea5bb33260 'struct __NSConstantString_tag'
|   `-Record 0x1ea5bb331c8 '__NSConstantString_tag'
|-TypedefDecl 0x1ea5bb33518 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1ea5bb32a40 'unsigned long long'
|-TypedefDecl 0x1ea5bb335b0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1ea5bb33570 'char *'
|   `-BuiltinType 0x1ea5bb32900 'char'
|-TypedefDecl 0x1ea5bb33620 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1ea5bb33570 'char *'
|   `-BuiltinType 0x1ea5bb32900 'char'
|-TypedefDecl 0x1ea5bb336e0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1ea5bb32a40 'unsigned long long'
|-TypedefDecl 0x1ea5bb33750 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1ea5bb33570 'char *'
|   `-BuiltinType 0x1ea5bb32900 'char'
|-FunctionDecl 0x1ea5d681440 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ea5d6814e0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1ea5d681550 <col:21> Implicit
|-FunctionDecl 0x1ea5d6815a8 prev 0x1ea5d681440 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1ea5d6812d0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1ea5d681698 <col:21> Inherited Implicit
|-TypedefDecl 0x1ea5d6816d8 prev 0x1ea5bb33518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1ea5bb32a40 'unsigned long long'
|-TypedefDecl 0x1ea5d681780 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1ea5d681750 'size_t' sugar
|   |-Typedef 0x1ea5d6816d8 'size_t'
|   `-BuiltinType 0x1ea5bb32a40 'unsigned long long'
|-TypedefDecl 0x1ea5d6817f0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1ea5bb329a0 'long long'
|-TypedefDecl 0x1ea5d681860 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1ea5bb329a0 'long long'
|-TypedefDecl 0x1ea5d6818d0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1ea5bb329e0 'unsigned short'
|-TypedefDecl 0x1ea5d681940 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1ea5bb329e0 'unsigned short'
|-TypedefDecl 0x1ea5d6819b0 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x1ea5bb329e0 'unsigned short'
|-TypedefDecl 0x1ea5d681a20 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1ea5bb32960 'int'
|-TypedefDecl 0x1ea5d681a90 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1ea5bb32980 'long'
|-TypedefDecl 0x1ea5d681b00 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1ea5bb329a0 'long long'
|-TypedefDecl 0x1ea5d681b90 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1ea5d681b60 '__time64_t' sugar
|   |-Typedef 0x1ea5d681b00 '__time64_t'
|   `-BuiltinType 0x1ea5bb329a0 'long long'
|-FunctionDecl 0x1ea5d681d08 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1ea5d681f28 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1ea5d6b5100 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1ea5d682068 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d6820e0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d682158 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d6821d8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1ea5d6b4ea0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1ea5d6b51e0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1ea5d6b52a0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1ea5d6b5410 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1ea5d6b53c0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1ea5d6b5360 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1ea5d6b5280 'struct threadlocaleinfostruct'
|       `-Record 0x1ea5d6bbf10 'threadlocaleinfostruct'
|-TypedefDecl 0x1ea5d6b5520 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1ea5d6b54d0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1ea5d6b5470 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1ea5d6b5340 'struct threadmbcinfostruct'
|       `-Record 0x1ea5d6b52a0 'threadmbcinfostruct'
|-RecordDecl 0x1ea5d6b5578 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1ea5d6b5630 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1ea5d6b56f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ea5d6b5780 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1ea5d6b5810 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1ea5d6b58c8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1ea5d6b5870 'struct localeinfo_struct' sugar
|   `-RecordType 0x1ea5d6b56d0 'struct localeinfo_struct'
|     `-Record 0x1ea5d6b5630 'localeinfo_struct'
|-TypedefDecl 0x1ea5d6b59a0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1ea5d6b5950 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1ea5d6b5870 'struct localeinfo_struct' sugar
|     `-RecordType 0x1ea5d6b56d0 'struct localeinfo_struct'
|       `-Record 0x1ea5d6b5630 'localeinfo_struct'
|-RecordDecl 0x1ea5d6b5a18 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1ea5d6b5ad0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ea5d6b5b48 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1ea5d6b5c08 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1ea5d6b5ca0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1ea5d6b5d10 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1ea5d6b5dc8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1ea5d6b5d70 'struct localerefcount' sugar
|   `-RecordType 0x1ea5d6b5ab0 'struct localerefcount'
|     `-Record 0x1ea5d6b5a18 'localerefcount'
|-RecordDecl 0x1ea5d6bbf10 prev 0x1ea5d6b51e0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1ea5d6bbf90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ea5d6bc008 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1ea5d6bc078 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1ea5d6bc0e8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1ea5d6bc158 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1ea5d6bc318 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1ea5d6bc388 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1ea5d6bc3f8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1ea5d6bc468 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1ea5d6bc4d8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1ea5d6bc548 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1ea5d6bc5a0 parent 0x1ea5bb32868 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1ea5d6bc730 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1ea5d6bc7a0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1ea5d6bc810 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1ea5d6bc880 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1ea5d6bc920 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1ea5d6bc990 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1ea5d6bcaa0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1ea5d6bcbd8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1ea5d6bcc88 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1ea5d6bcc30 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1ea5d6b5280 'struct threadlocaleinfostruct'
|     `-Record 0x1ea5d6bbf10 'threadlocaleinfostruct'
|-RecordDecl 0x1ea5d6bcd20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1ea5d6bcde0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1ea5d6bce58 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1ea5d6bcf20 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1ea5d6bcf90 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1ea5d6bd000 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1ea5d6bd070 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1ea5d6bd0e0 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1ea5d6bd150 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1ea5d6bd1c0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1ea5d6bd270 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1ea5d6bd220 'struct _iobuf' sugar
|   `-RecordType 0x1ea5d6bcdc0 'struct _iobuf'
|     `-Record 0x1ea5d6bcd20 '_iobuf'
|-FunctionDecl 0x1ea5d6bd4a8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1ea5d6bd578 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1ea5bb329a0 'long long'
|-FunctionDecl 0x1ea5d6bd758 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d6bd5e0 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1ea5d6bda50 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea5d6bd830 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1ea5d6bd8a8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ea5d6bde00 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1ea5d6bdb30 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1ea5d6bdbb0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1ea5d6bdc30 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1ea5d6c9150 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ea5d6c8fe0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1ea5d6c9380 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1ea5d6c9240 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ea5d6c9530 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d6c9450 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1ea5d6c9720 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea5d6c9a18 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ea5d6c97f0 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1ea5d6c9870 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1ea5d6c9bd0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d6c9af0 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1ea5d6c9d80 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d6c9ca0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1ea5d6c9f30 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d6c9e50 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ea5d6c60b8 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d6c5fd8 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1ea5d6c6248 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea5d6c65b0 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1ea5d6c6310 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ea5d6c6408 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1ea5d6c6968 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1ea5d6c6690 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1ea5d6c6710 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1ea5d6c6788 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1ea5d6c6b28 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d6c6a48 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ea5d6c6df0 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ea5d6c6c00 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1ea5d6c6c80 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1ea5d6c3f90 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea5d6c4388 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1ea5d6c4428 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1ea5d6c4490 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1ea5d6c4508 prev 0x1ea5d6c4388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ea5d6c4160 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1ea5d6c41e0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1ea5d6c45b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d6c4a30 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1ea5d6c4760 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1ea5d6c47e0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1ea5d6c4860 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1ea5d6c4d50 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1ea5d6c4df0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ea5d6c4e58 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ea5d6c4ed0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1ea5d6cd020 prev 0x1ea5d6c4d50 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ea5d6c4b10 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d6c4b90 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1ea5d6cd118 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1ea5d6cd2e0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ea5d6cd160 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ea5d6cd1e0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ea5d6cd538 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea5d6cd3c0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1ea5d6cd438 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1ea5d6cd768 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea5d6cd618 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1ea5d6cda60 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1ea5d6cd840 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1ea5d6cd8b8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1ea5d6cdef8 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ea5d6cdf98 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1ea5d6c7fd0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ea5d6c8038 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ea5d6c80a0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ea5d6c8128 prev 0x1ea5d6cdef8 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ea5d6cdb40 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1ea5d6cdbb8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d6cdc30 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d6cdca8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1ea5d6c8630 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ea5d6c8218 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1ea5d6c8290 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d6c8308 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d6c8380 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d6c83f8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1ea5d6c8af0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ea5d6c8820 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1ea5d6c88a0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1ea5d6c8918 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1ea5d6c8ba8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d6cf0e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1ea5d6c8cf0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ea5d6c8d70 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1ea5d6c8df0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1ea5d6c8e68 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1ea5d6cf490 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ea5d6cf530 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ea5d6cf598 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ea5d6cf610 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ea5d6cf678 prev 0x1ea5d6cf490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ea5d6cf2c8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d6cf348 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1ea5d6cf858 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ea5d6cf728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d6cfc98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d6cf998 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d6cfa18 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d6cfab0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea5d6cfd50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d6ce030 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ea5d6cfe90 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ea5d6cff10 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1ea5d6ce320 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d6ce108 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d6ce188 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d6ce200 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d6ce680 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1ea5d6ce400 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1ea5d6ce4d8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1ea5d6cea38 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ea5d6ce758 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d6ce7d8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1ea5d6ce858 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1ea5d6cec98 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ea5d6ceb18 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1ea5d6d10a8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ea5d6ced68 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d6cede8 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1ea5d6cee68 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1ea5d6d1308 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ea5d6d1188 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ea5d6d17c8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1ea5d6d1868 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1ea5d6d18d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ea5d6d1938 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1ea5d6d19a0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1ea5d6d1a28 prev 0x1ea5d6d17c8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1ea5d6d1410 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1ea5d6d1488 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d6d1500 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d6d1578 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1ea5d6d1bf0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d6d1b10 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1ea5d6d1d80 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea5d6d1f08 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea5d6ca1b0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1ea5d6d1fd8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1ea5d6ca000 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ea5d6ca4d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ea5d6ca390 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1ea5d6ca580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d6ca7a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d6ca6c0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1ea5d6ca9c0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1ea5d6ca878 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1ea5d6cab70 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d6caa90 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1ea5d6cadc0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1ea5d6cac48 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1ea5d6cacc8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1ea5d6d0050 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1ea5d6d00f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ea5d6d0160 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1ea5d6d01c8 prev 0x1ea5d6d0050 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1ea5d6caea0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1ea5d6d02b8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1ea5d6d03e8 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ea5d6d0308 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1ea5d6d0638 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea5d6d04c0 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1ea5d6d0538 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ea5d6d07f8 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea5d6d0718 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1ea5d6d0a18 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ea5d6d08d0 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1ea5d6d0c68 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea5d6d0af0 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1ea5d6d0b68 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1ea5d6d0e28 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ea5d6d0d48 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1ea5d723020 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1ea5d6d0f00 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1ea5d6d0f80 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1ea5d7231e0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1ea5d723100 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1ea5d723470 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1ea5d723390 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1ea5d723518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1ea5d723710 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ea5d723638 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1ea5d7238a0 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea5d723b48 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ea5d723be8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ea5d723c58 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1ea5d723cc0 prev 0x1ea5d723b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1ea5d723a30 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1ea5d723e98 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1ea5d723d68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d71c1f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d71bfb8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d71c030 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea5d71c2a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d71c4c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ea5d71c3e8 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1ea5d71c718 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d71c5a0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d71c618 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d71cad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1ea5d71c8b0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d71c930 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1ea5d71cb88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d71cdb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea5d71ccd0 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1ea5d71d038 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1ea5d71cef0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1ea5d71d220 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1ea5d71d670 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1ea5d71d2e8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d71d368 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1ea5d71d3e8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1ea5d71d460 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1ea5d71daf0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea5d71d760 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d71d7d8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d71d850 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d71d8d0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1ea5d723f60 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea5d71dbe0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d71dc58 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d71dcd8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1ea5d724128 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ea5d724048 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1ea5d724500 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1ea5d7245a0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ea5d724608 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1ea5d724680 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1ea5d7246e8 prev 0x1ea5d724500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1ea5d7242c0 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1ea5d724340 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1ea5d7248c8 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1ea5d724798 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d724cb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d7249d8 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1ea5d724a58 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d724ad0 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea5d724d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d71e000 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1ea5d724eb8 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1ea5d71df00 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1ea5d71e2f8 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d71e0e0 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1ea5d71e160 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d71e1d8 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d71e788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea5d71e4a0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1ea5d71e518 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d71e598 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1ea5d71e840 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d71ee10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d71ea80 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1ea5d71eaf8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d71eb78 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d71ebf0 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea5d71ef10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d71f270 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea5d71f058 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1ea5d71f0d0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d71f150 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1ea5d71f608 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d71f358 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1ea5d71f3d0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d71f450 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d71f4c8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d71f868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1ea5d71f908 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d71fbc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1ea5d71fa50 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1ea5d720f30 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1ea5d71fc98 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1ea5d71fd10 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1ea5d7211b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1ea5d7210d0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1ea5d721258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d721518 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea5d7213a0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1ea5d721418 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1ea5d721930 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea5d7219d0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1ea5d721a38 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ea5d721aa0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea5d721b20 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1ea5d721b88 prev 0x1ea5d721930 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ea5d7215f0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d721670 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d7216e8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ea5d721c88 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1ea5d71ff20 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea5d71ffc0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1ea5d720028 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ea5d720090 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea5d720110 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ea5d720178 prev 0x1ea5d71ff20 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ea5d721cd0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d721d50 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d721dc8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ea5d720278 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ea5d7204d8 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ea5d7202c0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d720340 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d7203b8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d7207d0 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ea5d7205b8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d720638 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d7206b0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d720b18 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea5d720bb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ea5d720c20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea5d720c98 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1ea5d720d00 prev 0x1ea5d720b18 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ea5d7208b8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d720930 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ea5d720df8 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1ea5d7250a8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea5d725148 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ea5d7251b0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea5d725228 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1ea5d725290 prev 0x1ea5d7250a8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ea5d720e48 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d724f70 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ea5d725388 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1ea5d725550 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ea5d7253d8 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d725450 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d7257a8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ea5d725630 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d7256a8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d725d08 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea5d725da8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ea5d725e10 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1ea5d725e78 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ea5d725ee0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea5d725f80 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1ea5d725fe8 prev 0x1ea5d725d08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ea5d725948 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d7259c0 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d725a40 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d725ab8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1ea5d7261d8 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1ea5d7260a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d726648 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea5d726228 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d7262a0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d726318 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d726398 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d726410 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d726a88 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea5d726740 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d7267b8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d726830 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7268b0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d726928 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d726e58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea5d726c40 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ea5d726cb8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d726d38 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1ea5d726f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d7223b0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea5d722100 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1ea5d722178 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7221f8 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d722270 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ea5d722470 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d722868 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea5d7225b8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d722630 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7226b0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d722728 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d722c28 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1ea5d722958 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1ea5d7229d8 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d722a50 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72d090 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1ea5d72d130 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ea5d72d198 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1ea5d72d210 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1ea5d72d278 prev 0x1ea5d72d090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1ea5d722dd0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ea5d722e50 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1ea5d72d458 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1ea5d72d328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d72d880 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea5d72d920 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1ea5d72d988 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1ea5d72d9f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea5d72da70 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1ea5d72dad8 prev 0x1ea5d72d880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1ea5d72d568 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1ea5d72d5e8 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d72d660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1ea5d72dcc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1ea5d72db90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d72bfe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1ea5d72c080 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ea5d72c0e8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1ea5d72c150 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1ea5d72c1d0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1ea5d72c238 prev 0x1ea5d72bfe0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1ea5d72dd10 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1ea5d72dd90 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d72de08 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1ea5d72c338 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1ea5d72c500 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ea5d72c388 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d72c400 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72c7f8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea5d72c5e0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d72c658 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d72c6d8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1ea5d72cb90 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea5d72c8e0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d72c958 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d72c9d8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d72ca50 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72cdf8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1ea5d72cc78 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ea5d72ccf8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1ea5d72e000 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ea5d72ced8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1ea5d72e2f0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1ea5d72e0d8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1ea5d72e150 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d72e1d0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1ea5d72e5e8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1ea5d72e3d0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d72e450 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d72e4c8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72e848 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ea5d72e6d0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d72e748 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72ebd8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1ea5d72e928 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1ea5d72e9a0 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d72ea20 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d72ea98 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72eda8 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1ea5d72ecc8 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1ea5d726f90 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1ea5d72ee80 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d72eef8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d727150 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea5d727070 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1ea5d7272e0 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea5d727528 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d7273b0 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d727428 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d727780 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d727608 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d727680 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7279d8 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d727860 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d7278d8 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d727d88 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d727ab8 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d727b30 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d727ba8 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72a0e0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d727e70 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d727ee8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d729fc0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72a3d8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d72a1c8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d72a240 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d72a2b8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72a6d0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d72a4b8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d72a538 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d72a5b0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d72a9c8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d72a7b0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d72a830 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d72a8a8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d72acc0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d72aaa8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d72ab28 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d72aba0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d72f170 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d72ada0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d72ae20 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d72ae98 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d72af10 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72f508 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d72f258 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d72f2d8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d72f350 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d72f3c8 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72f8a0 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d72f5f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d72f670 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d72f6e8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d72f760 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d72fd38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d72fa50 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d72fad0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d72fb48 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea5d72fdf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d72b2e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d72ff38 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d72afd0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d72b050 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d72b0c8 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d72b680 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d72b3d0 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d72b448 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d72b4c8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d72b540 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d72bbd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d72b870 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d72b8f0 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d72b968 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ea5d72b9e0 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ea5d72bc90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d7281d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d72bdd8 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d72be50 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d72bed0 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d72bf48 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d727fa0 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d728618 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d7282d0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d728348 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7283c8 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d728440 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d7284b8 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d728888 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d728710 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d728788 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d728ae0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d728968 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d7289e0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d728dd0 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d728bc0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d728c38 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d728cb0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d731160 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d728eb8 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d728f30 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d731040 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d7315b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d731308 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d731380 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d731400 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d731478 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea5d731678 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d731a70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d7317c0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d731838 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7318b8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d731930 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d736080 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d731b60 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d731bd8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d731c50 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d731cd0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1ea5d731d48 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7365c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d736278 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d7362f0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d736370 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d7363e8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ea5d736460 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ea5d736688 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d736b08 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d7367d8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d736850 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7368d0 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1ea5d736948 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d7369c0 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d7370f0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d736c00 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1ea5d736c78 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d736cf0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d736d70 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1ea5d736de8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d736e60 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d7374b0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1ea5d7371e8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d737260 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d7372e0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1ea5d737720 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ea5d7375b0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1ea5d737938 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ea5d737c18 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ea5d737a00 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d737a78 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ea5d737e60 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ea5d737cf0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ea5d734060 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ea5d737f30 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1ea5d7341e8 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1ea5d734420 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ea5d7342b0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d734328 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1ea5d7345d0 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1ea5d7344f8 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1ea5d734878 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ea5d7346a0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d734718 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1ea5d734c20 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1ea5d734950 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ea5d7349d0 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1ea5d734a48 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1ea5d734f20 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ea5d734d00 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d734d78 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ea5d7321f8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1ea5d734ff8 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1ea5d732050 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ea5d732500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ea5d732390 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1ea5d7325a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d732868 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ea5d7326e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1ea5d732b70 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d732938 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1ea5d7329b0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d732dc0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d732c48 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1ea5d732cc0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d730020 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea5d732e98 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d7301d0 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea5d7300f0 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d730380 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea5d7302a0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d730718 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d730450 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d7304c8 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d730540 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d730a08 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d7307f8 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d730870 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d7308e8 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d730cf8 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d730ae8 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d730b60 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d730bd8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d7380a0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d730dd8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d730e50 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d730ec8 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d7383a0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d738180 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d7381f8 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d7385f0 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d738478 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d7384f0 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d738840 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d7386c8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d738740 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d738a90 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d738918 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d738990 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d738e48 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d738b68 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ea5d738be0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d738c58 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d733260 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d738f28 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1ea5d738fa0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d739018 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d733050 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d733618 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d733348 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d7333c0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d733438 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d733908 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d7336f8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d733770 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d7337e8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d733bf8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d7339e8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d733a60 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d733ad8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d733f80 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d733cd8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d733d50 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d733dc8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d733e40 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d739460 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d7390d8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d739150 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7391c8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d739240 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d739968 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d739548 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d7395c0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d739638 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7396b0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d739728 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d739d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d739b18 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea5d739b90 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d739c08 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ea5d739de0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d73a2f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d739fe0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea5d73a0c0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d73a138 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d73a1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1ea5d73a3b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d73a668 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d73a4f0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1ea5d73a568 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d73a820 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea5d73a740 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d73ab00 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d73a8f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d73a968 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d73a9e0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d73ad58 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d73abe0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d73ac58 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d73cf10 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d73ae30 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d73aea8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d73af20 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d73d298 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d73cff0 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d73d068 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d73d0e0 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d73d158 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d73d460 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea5d73d380 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d73d6a8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d73d530 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d73d5a8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d73d9b0 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d73d780 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d73d7f8 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d73dc00 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d73da88 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d73db00 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d73de50 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d73dcd8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d73dd50 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d742258 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d741f88 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d742000 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d742078 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d742548 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d742338 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d7423b0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d742428 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d742838 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d742628 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d7426a0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d742718 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d742bf8 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d742918 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d742990 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d742a08 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d743f80 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d742cd8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d742d50 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d742dc8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d744270 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d744060 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d7440d8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d744150 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7446c0 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d744350 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d7443c8 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d744440 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d7444b8 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d744a50 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d7447a8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d744820 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d744898 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d744910 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d744de0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d744b38 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d744bb0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d744c28 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d744ca0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d743280 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d744ec8 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d742f70 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d742fe8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d743060 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d743610 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d743368 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d7433e0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d743458 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d7434d0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7439a0 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d7436f8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d743770 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7437e8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d743860 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d743ea8 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d743a88 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d743b00 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d743b78 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d743bf0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d743c68 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d73e288 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d73df48 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d73dfc0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d73e038 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d73e0b0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d73e128 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d73e6b8 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d73e378 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d73e3f0 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d73e468 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d73e4e0 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d73e558 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d73e920 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d73e7a8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d73e820 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d73eb70 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d73e9f8 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d73ea70 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d73ee58 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d73ec48 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d73ecc0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d73ed38 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d747348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d7470a0 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d747118 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d747190 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d747208 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea5d747408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d747978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d747550 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d7475c8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d747640 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7476b8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d747730 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d747eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d747b70 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d747be8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d747c60 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d747cd8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ea5d747d50 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1ea5d744f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d7455a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d7450d8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1ea5d745150 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7451c8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d745240 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d7452b8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d745330 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d745aa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d745868 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea5d7458e0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1ea5d745b50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ea5d745c68 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ea5d7401a8 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d745f20 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea5d73ff50 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d73ffc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ea5d740260 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ea5d740378 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ea5d740918 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d740638 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea5d7406b0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d740728 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1ea5d7409d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ea5d740af0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ea5d741160 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d740db0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1ea5d740e28 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d740ea0 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ea5d740f50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1ea5d741220 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1ea5d741340 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1ea5d741648 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1ea5d741468 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ea5d7414e0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d741558 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1ea5d749270 <line:37:1, line:44:1>
|   |-DeclStmt 0x1ea5d741790 <line:38:5, col:21>
|   | `-VarDecl 0x1ea5d741728 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ea5d741828 <line:39:5, col:13>
|   | `-VarDecl 0x1ea5d7417c0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ea5d741b80 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ea5d741b68 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ea5d741a80 <col:34> '<builtin fn type>' Function 0x1ea5d741918 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ea5d741ab8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1ea5d741728 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ea5d741af0 <col:29> 'const wchar_t *' lvalue ParmVar 0x1ea5d741558 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1ea5d741e40 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1ea5d741bb0 <col:5> 'int' lvalue Var 0x1ea5d7417c0 '_Ret' 'int'
|   | `-CallExpr 0x1ea5d741d80 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1ea5d741d68 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ea5d741be8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ea5d743ea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ea5d741dc8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea5d741c08 <col:27> 'wchar_t *' lvalue ParmVar 0x1ea5d741468 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ea5d741de0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea5d741c28 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ea5d7414e0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ea5d741df8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea5d741c48 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ea5d741558 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ea5d741e10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1ea5d741cd0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1ea5d741ca8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1ea5d741c68 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1ea5d741e28 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ea5d741cf0 <col:59> 'va_list':'char *' lvalue Var 0x1ea5d741728 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ea5d749200 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ea5d7491e8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ea5d749138 <col:34> '<builtin fn type>' Function 0x1ea5d748fd0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ea5d749170 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1ea5d741728 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ea5d749260 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1ea5d749248 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ea5d749228 <col:12> 'int' lvalue Var 0x1ea5d7417c0 '_Ret' 'int'
|-FunctionDecl 0x1ea5d741918 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1ea5d7419b8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ea5d741a28 <col:34> Implicit
|-FunctionDecl 0x1ea5d748fd0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1ea5d749070 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1ea5d7490e0 <col:34> Implicit
|-FunctionDecl 0x1ea5d749568 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1ea5d7492c0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ea5d749338 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d7493b0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d749428 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ea5d749850 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1ea5d749840 <line:51:5, col:62>
|     `-CallExpr 0x1ea5d749780 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1ea5d749768 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ea5d749640 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ea5d743ea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ea5d7497c8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea5d749660 <col:27> 'wchar_t *' lvalue ParmVar 0x1ea5d7492c0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ea5d7497e0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea5d749680 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ea5d749338 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ea5d7497f8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea5d7496a0 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ea5d7493b0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ea5d749810 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1ea5d749728 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1ea5d749700 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1ea5d7496c0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1ea5d749828 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ea5d749748 <col:59> 'va_list':'char *' lvalue ParmVar 0x1ea5d749428 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ea5d749af0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1ea5d749878 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ea5d7498f0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d749968 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d7499e0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1ea5d74c0a8 <line:61:1, line:68:1>
|   |-DeclStmt 0x1ea5d749c40 <line:62:5, col:21>
|   | `-VarDecl 0x1ea5d749bd8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1ea5d749cd8 <line:63:5, col:13>
|   | `-VarDecl 0x1ea5d749c70 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1ea5d749d80 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1ea5d749d68 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ea5d749cf0 <col:34> '<builtin fn type>' Function 0x1ea5d741918 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1ea5d749d10 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1ea5d749bd8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1ea5d749d48 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ea5d7499e0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1ea5d749f80 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1ea5d749db0 <col:5> 'int' lvalue Var 0x1ea5d749c70 '_Ret' 'int'
|   | `-CallExpr 0x1ea5d749ec0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1ea5d749ea8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1ea5d749de8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ea5d743ea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1ea5d749f08 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea5d749e08 <col:27> 'wchar_t *' lvalue ParmVar 0x1ea5d749878 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1ea5d749f20 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea5d749e28 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ea5d7498f0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1ea5d749f38 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea5d749e48 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ea5d749968 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1ea5d749f50 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea5d749e68 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ea5d7499e0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1ea5d749f68 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ea5d749e88 <col:64> 'va_list':'char *' lvalue Var 0x1ea5d749bd8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1ea5d74c038 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1ea5d74c020 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1ea5d749fa0 <col:34> '<builtin fn type>' Function 0x1ea5d748fd0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1ea5d74c000 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1ea5d749bd8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1ea5d74c098 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1ea5d74c080 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1ea5d74c060 <col:12> 'int' lvalue Var 0x1ea5d749c70 '_Ret' 'int'
|-FunctionDecl 0x1ea5d74c438 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1ea5d74c0f8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1ea5d74c170 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d74c1e8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74c260 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1ea5d74c2d8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1ea5d74c6c0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1ea5d74c6b0 <line:75:5, col:67>
|     `-CallExpr 0x1ea5d74c5f0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1ea5d74c5d8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1ea5d74c518 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1ea5d743ea8 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1ea5d74c638 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea5d74c538 <col:27> 'wchar_t *' lvalue ParmVar 0x1ea5d74c0f8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1ea5d74c650 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea5d74c558 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1ea5d74c170 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1ea5d74c668 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea5d74c578 <col:44> 'const wchar_t *' lvalue ParmVar 0x1ea5d74c1e8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1ea5d74c680 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1ea5d74c598 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1ea5d74c260 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1ea5d74c698 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1ea5d74c5b8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1ea5d74c2d8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1ea5d74c908 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ea5d74c6e8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d74c760 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1ea5d74cb58 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1ea5d74c9e0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d74ca58 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d74ce40 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1ea5d74cc30 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74cca8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1ea5d74cd20 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1ea5d74d188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d74d010 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d74d088 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ea5d74d238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d74d648 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d74d438 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d74d4b0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74d528 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea5d74d700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d74d9b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d74d840 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1ea5d74d8b8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d74dca0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d74da90 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d74db08 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d74db80 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d74a050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d74de40 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74deb8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ea5d74a100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d74a5d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d74a300 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74a378 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74a3f0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea5d74a690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d74a948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d74a7d0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d74a848 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d74ac30 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d74aa20 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74aa98 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d74ab10 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d74b0d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d74add0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74ae48 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d74aec0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ea5d74b190 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d74b710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d74b390 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74b408 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d74b480 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74b4f8 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea5d74b7d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d74bb20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d74b910 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74b988 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d74ba00 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d74bea8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d74bc00 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74bc78 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d74bcf0 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d74bd68 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d746150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1ea5d746070 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1ea5d7461f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d746570 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d7463f8 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d746470 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1ea5d746620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d746840 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1ea5d746760 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1ea5d746a88 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1ea5d746910 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d746988 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d746d88 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1ea5d746b68 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1ea5d746be0 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ea5d74e1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ea5d746f20 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74e020 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1ea5d74e278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d74e680 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ea5d74e3c0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1ea5d74e438 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d74e4b0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ea5d74eae0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ea5d74e820 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74e898 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74e910 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1ea5d74eb98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d7550d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1ea5d74ece0 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1ea5d74ed58 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1ea5d74edd0 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d74ee48 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1ea5d755330 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1ea5d7551c0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1ea5d755570 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1ea5d755400 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1ea5d755478 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1ea5d755728 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1ea5d755648 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1ea5d755a18 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1ea5d7557f8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1ea5d755870 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1ea5d755c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1ea5d755bb0 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1ea5d755d30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1ea5d755f48 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1ea5d755e70 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1ea5d750138 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1ea5d756018 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d750040 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ea5d750380 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1ea5d750210 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d750288 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1ea5d750530 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ea5d750458 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1ea5d7506d8 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1ea5d750600 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1ea5d750888 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d7507a8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1ea5d750a38 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1ea5d750958 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1ea5d750db0 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ea5d750b10 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1ea5d750b88 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d750c00 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d750c78 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1ea5d74f200 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ea5d750ea0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1ea5d750f18 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d750f90 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d74f030 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d74f0a8 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1ea5d74f510 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1ea5d74f2f0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d74f370 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1ea5d74f3f0 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1ea5d74f6d0 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1ea5d74f5f0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1ea5d74f9c0 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1ea5d74f7a0 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1ea5d74f820 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1ea5d74f8a0 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1ea5d74fb80 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1ea5d74faa0 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1ea5d74fef8 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1ea5d74fc58 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1ea5d74fcd0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1ea5d74fd48 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1ea5d74fdc0 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1ea5d757228 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea5d7570b0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1ea5d757128 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1ea5d757560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1ea5d7573e0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1ea5d757460 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1ea5d757610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1ea5d7578c8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ea5d757968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1ea5d757ca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1ea5d757b30 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1ea5d757bb0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1ea5d757d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1ea5d753070 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ea5d753110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1ea5d7533b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ea5d7532d0 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1ea5d753458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1ea5d7536d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ea5d753778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1ea5d753a20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1ea5d753940 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1ea5d753ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1ea5d753da8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1ea5d753cc8 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1ea5d753e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1ea5d758238 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1ea5d7580c0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1ea5d758138 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1ea5d7582e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1ea5d7585a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1ea5d758648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1ea5d758880 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x1ea5d758950 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x1ea5d758a50 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x1ea5d758c48 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x1ea5d758d10 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x1ea5d758f90 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x1ea5d758da8 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x1ea5d758e28 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x1ea5d752338 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x1ea5d752060 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x1ea5d7520e0 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x1ea5d752158 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d752500 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x1ea5d7525a0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d752610 <col:55> Implicit
| `-PureAttr 0x1ea5d752668 <col:55> Implicit
|-FunctionDecl 0x1ea5d752690 prev 0x1ea5d752500 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x1ea5d752420 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ea5d752780 <col:55> Inherited Implicit
| `-PureAttr 0x1ea5d7527a8 <col:55> Inherited Implicit
|-FunctionDecl 0x1ea5d752a10 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d7527e8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d752860 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d752bd0 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x1ea5d752c70 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d752ce0 <col:55> Implicit
| `-PureAttr 0x1ea5d752d38 <col:55> Implicit
|-FunctionDecl 0x1ea5d752d60 prev 0x1ea5d752bd0 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x1ea5d752af0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ea5d752e50 <col:55> Inherited Implicit
| `-PureAttr 0x1ea5d752e78 <col:55> Inherited Implicit
|-FunctionDecl 0x1ea5d75b0f0 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d752eb8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d752f30 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d75b2b0 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x1ea5d75b350 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d75b3c0 <col:55> Implicit
| `-PureAttr 0x1ea5d75b418 <col:55> Implicit
|-FunctionDecl 0x1ea5d75b440 prev 0x1ea5d75b2b0 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x1ea5d75b1d0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ea5d75b530 <col:55> Inherited Implicit
| `-PureAttr 0x1ea5d75b558 <col:55> Inherited Implicit
|-FunctionDecl 0x1ea5d75b710 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d75b598 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d75b610 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d75b8d0 <line:127:55> col:55 implicit used isdigit 'int (int)' extern
| |-ParmVarDecl 0x1ea5d75b970 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d75b9e0 <col:55> Implicit
| `-PureAttr 0x1ea5d75ba38 <col:55> Implicit
|-FunctionDecl 0x1ea5d75ba60 prev 0x1ea5d75b8d0 <col:43, col:74> col:55 used isdigit 'int (int)'
| |-ParmVarDecl 0x1ea5d75b7f0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ea5d75bb50 <col:55> Inherited Implicit
| `-PureAttr 0x1ea5d75bb78 <col:55> Inherited Implicit
|-FunctionDecl 0x1ea5d75bd30 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d75bbb8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d75bc30 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d75bef0 <line:129:36> col:36 implicit used isxdigit 'int (int)' extern
| |-ParmVarDecl 0x1ea5d75bf90 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d75c000 <col:36> Implicit
| `-PureAttr 0x1ea5d75c058 <col:36> Implicit
|-FunctionDecl 0x1ea5d754080 prev 0x1ea5d75bef0 <col:24, col:56> col:36 used isxdigit 'int (int)'
| |-ParmVarDecl 0x1ea5d75be10 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x1ea5d754170 <col:36> Inherited Implicit
| `-PureAttr 0x1ea5d754198 <col:36> Inherited Implicit
|-FunctionDecl 0x1ea5d754350 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d7541d8 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x1ea5d754250 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d754510 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x1ea5d7545b0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d754620 <col:55> Implicit
| `-PureAttr 0x1ea5d754678 <col:55> Implicit
|-FunctionDecl 0x1ea5d7546a0 prev 0x1ea5d754510 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x1ea5d754430 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ea5d754790 <col:55> Inherited Implicit
| `-PureAttr 0x1ea5d7547b8 <col:55> Inherited Implicit
|-FunctionDecl 0x1ea5d754970 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d7547f8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d754870 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d754b30 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x1ea5d754bd0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d754c40 <col:36> Implicit
| `-PureAttr 0x1ea5d754c98 <col:36> Implicit
|-FunctionDecl 0x1ea5d754cc0 prev 0x1ea5d754b30 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x1ea5d754a50 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ea5d754db0 <col:36> Inherited Implicit
| `-PureAttr 0x1ea5d754dd8 <col:36> Inherited Implicit
|-FunctionDecl 0x1ea5d754f90 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d754e18 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d754e90 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d763d50 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x1ea5d763df0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d763e60 <col:36> Implicit
| `-PureAttr 0x1ea5d763eb8 <col:36> Implicit
|-FunctionDecl 0x1ea5d763ee0 prev 0x1ea5d763d50 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x1ea5d763c70 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ea5d763fd0 <col:36> Inherited Implicit
| `-PureAttr 0x1ea5d763ff8 <col:36> Inherited Implicit
|-FunctionDecl 0x1ea5d7641b0 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d764038 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d7640b0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d764370 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x1ea5d764410 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d764480 <col:55> Implicit
| `-PureAttr 0x1ea5d7644d8 <col:55> Implicit
|-FunctionDecl 0x1ea5d764500 prev 0x1ea5d764370 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x1ea5d764290 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ea5d7645f0 <col:55> Inherited Implicit
| `-PureAttr 0x1ea5d764618 <col:55> Inherited Implicit
|-FunctionDecl 0x1ea5d7647d0 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d764658 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d7646d0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d764990 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x1ea5d764a30 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d764aa0 <col:36> Implicit
| `-PureAttr 0x1ea5d764af8 <col:36> Implicit
|-FunctionDecl 0x1ea5d764b20 prev 0x1ea5d764990 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x1ea5d7648b0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ea5d764c10 <col:36> Inherited Implicit
| `-PureAttr 0x1ea5d764c38 <col:36> Inherited Implicit
|-FunctionDecl 0x1ea5d761de0 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d761c68 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d761ce0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d761fa0 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x1ea5d762040 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d7620b0 <col:36> Implicit
| `-PureAttr 0x1ea5d762108 <col:36> Implicit
|-FunctionDecl 0x1ea5d762130 prev 0x1ea5d761fa0 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x1ea5d761ec0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ea5d762220 <col:36> Inherited Implicit
| `-PureAttr 0x1ea5d762248 <col:36> Inherited Implicit
|-FunctionDecl 0x1ea5d762400 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d762288 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d762300 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7625c0 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x1ea5d762660 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d7626d0 <col:36> Implicit
| `-PureAttr 0x1ea5d762728 <col:36> Implicit
|-FunctionDecl 0x1ea5d762750 prev 0x1ea5d7625c0 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x1ea5d7624e0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x1ea5d762840 <col:36> Inherited Implicit
| `-PureAttr 0x1ea5d762868 <col:36> Inherited Implicit
|-FunctionDecl 0x1ea5d762a20 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d7628a8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d762920 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d762c60 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x1ea5d762d00 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d762d70 <col:55> Implicit
| `-PureAttr 0x1ea5d762dc8 <col:55> Implicit
|-FunctionDecl 0x1ea5d762df0 prev 0x1ea5d762c60 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x1ea5d762b00 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ea5d762ee0 <col:55> Inherited Implicit
| `-PureAttr 0x1ea5d762f08 <col:55> Inherited Implicit
|-FunctionDecl 0x1ea5d763028 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x1ea5d7630c8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1ea5d763138 <col:55> Implicit
| `-PureAttr 0x1ea5d763190 <col:55> Implicit
|-FunctionDecl 0x1ea5d7631b8 prev 0x1ea5d763028 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x1ea5d762f48 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x1ea5d7632a8 <col:55> Inherited Implicit
| `-PureAttr 0x1ea5d7632d0 <col:55> Inherited Implicit
|-FunctionDecl 0x1ea5d7633f0 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea5d763310 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1ea5d763640 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d7634c8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d763540 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d763800 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea5d763720 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x1ea5d763a50 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d7638d8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x1ea5d763950 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d766ca0 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea5d763b30 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ea5d766e58 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea5d766d78 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ea5d767010 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea5d766f30 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x1ea5d7671c8 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea5d7670e8 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x1ea5d767418 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d767298 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d767710 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d7674e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d767560 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7678c8 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d7677e8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d767b10 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d767998 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d767a10 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d764cb8 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d767be8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d764f00 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d764d88 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d764e00 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7650b8 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d764fd8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d765300 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d765188 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d765200 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7654b8 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d7653d8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d765700 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d765588 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d765600 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7658b8 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d7657d8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d765b00 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d765988 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d765a00 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d765cc8 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d765bd8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d765f10 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d765d98 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d765e10 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7660c8 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d765fe8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d766310 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d766198 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d766210 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7664c8 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d7663e8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d766710 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d766598 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d766610 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7668c8 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d7667e8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d766b10 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d766998 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d766a10 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d767ce8 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d766be8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d767f30 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d767db8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d767e30 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7680e8 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d768008 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d768330 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d7681b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d768230 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7684e8 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d768408 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d768700 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1ea5d7685b8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d7689e8 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d7687d0 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d768848 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d768b98 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x1ea5d768ac0 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d760db0 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d760c40 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d760cb8 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d7610b0 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1ea5d760e88 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d760f00 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x1ea5d761458 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d761188 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1ea5d761200 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d761278 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d761618 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d761538 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d761860 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d7616e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d761760 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d761a18 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x1ea5d761938 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x1ea5d76cd40 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x1ea5d761ae8 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1ea5d761b60 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d76cf00 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1ea5d76ce20 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x1ea5d76d150 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x1ea5d76cfd8 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x1ea5d76d050 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d76d460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x1ea5d76d2e8 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x1ea5d76d360 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x1ea5d76d510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x1ea5d76d658 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1ea5d76d7a8 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1ea5d76d9d8 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1ea5d76d870 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1ea5d774dc8 <.//openssl//file_jk/after\crypto\bn/bn_lcl.h:220:1, line:221:37> line:220:10 invalid bn_mul_add_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1ea5d76dab0 <col:27, col:37> col:37 invalid rp 'int *'
| |-ParmVarDecl 0x1ea5d76db30 <col:41, col:57> col:57 invalid ap 'const int *'
| |-ParmVarDecl 0x1ea5d76dbb0 <col:61, col:65> col:65 num 'int'
| `-ParmVarDecl 0x1ea5d76dc30 <line:221:27, col:36> col:36 invalid w 'int'
|-FunctionDecl 0x1ea5d7750d0 <line:222:1, col:76> col:10 invalid bn_mul_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1ea5d774ea0 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1ea5d774f20 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1ea5d774fa0 <col:57, col:61> col:61 num 'int'
| `-ParmVarDecl 0x1ea5d775020 <col:66, col:75> col:75 invalid w 'int'
|-FunctionDecl 0x1ea5d775388 <line:223:1, col:60> col:6 invalid bn_sqr_words 'void (int *, const int *, int)'
| |-ParmVarDecl 0x1ea5d7751a8 <col:19, col:29> col:29 invalid rp 'int *'
| |-ParmVarDecl 0x1ea5d775228 <col:33, col:49> col:49 invalid ap 'const int *'
| `-ParmVarDecl 0x1ea5d7752a8 <col:53, col:57> col:57 num 'int'
|-FunctionDecl 0x1ea5d775640 <line:224:1, col:57> col:10 invalid bn_div_words 'int (int, int, int)'
| |-ParmVarDecl 0x1ea5d775458 <col:23, col:32> col:32 invalid h 'int'
| |-ParmVarDecl 0x1ea5d7754d8 <col:35, col:44> col:44 invalid l 'int'
| `-ParmVarDecl 0x1ea5d775558 <col:47, col:56> col:56 invalid d 'int'
|-FunctionDecl 0x1ea5d775990 <line:225:1, line:226:30> line:225:10 invalid bn_add_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1ea5d775710 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1ea5d775790 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1ea5d775810 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1ea5d775890 <line:226:23, col:27> col:27 num 'int'
|-FunctionDecl 0x1ea5d775c98 <line:227:1, line:228:30> line:227:10 invalid bn_sub_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1ea5d775a68 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1ea5d775ae8 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1ea5d775b68 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1ea5d775be8 <line:228:23, col:27> col:27 num 'int'
|-RecordDecl 0x1ea5d775d90 <line:230:1, line:238:1> line:230:8 invalid struct bignum_st definition
| |-FieldDecl 0x1ea5d775e68 <line:231:5, col:15> col:15 invalid d 'int *'
| |-FieldDecl 0x1ea5d775ed8 <line:233:5, col:9> col:9 top 'int'
| |-FieldDecl 0x1ea5d775f48 <line:235:5, col:9> col:9 dmax 'int'
| |-FieldDecl 0x1ea5d775fb8 <line:236:5, col:9> col:9 neg 'int'
| `-FieldDecl 0x1ea5d776028 <line:237:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1ea5d776080 <line:241:1, line:252:1> line:241:8 invalid struct bn_mont_ctx_st definition
| |-FieldDecl 0x1ea5d776158 <line:242:5, col:9> col:9 ri 'int'
| |-FieldDecl 0x1ea5d7761c8 <line:243:5, col:12> col:12 invalid RR 'int'
| |-FieldDecl 0x1ea5d776238 <line:245:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1ea5d7762a8 <line:246:5, col:12> col:12 invalid Ni 'int'
| |-FieldDecl 0x1ea5d7763a0 <line:248:5, <invalid sloc>> col:14 invalid n0 'int [2]'
| `-FieldDecl 0x1ea5d776410 <line:251:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1ea5d776468 <line:258:1, line:264:1> line:258:8 invalid struct bn_recp_ctx_st definition
| |-FieldDecl 0x1ea5d776538 <line:259:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1ea5d7765a8 <line:260:5, col:12> col:12 invalid Nr 'int'
| |-FieldDecl 0x1ea5d776618 <line:261:5, col:9> col:9 num_bits 'int'
| |-FieldDecl 0x1ea5d776688 <line:262:5, col:9> col:9 shift 'int'
| `-FieldDecl 0x1ea5d7766f8 <line:263:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1ea5d776750 <line:267:1, line:276:1> line:267:8 struct bn_gencb_st definition
| |-FieldDecl 0x1ea5d776828 <line:268:5, col:18> col:18 ver 'unsigned int'
| |-FieldDecl 0x1ea5d776898 <line:269:5, col:11> col:11 arg 'void *'
| |-RecordDecl 0x1ea5d7768f0 <line:270:5, line:275:5> line:270:5 union definition
| | |-FieldDecl 0x1ea5d776c40 <line:272:9, col:39> col:16 cb_1 'void (*)(int, int, void *)'
| | `-FieldDecl 0x1ea5d776fa8 <line:274:9, col:42> col:15 cb_2 'int (*)(int, int, int *)'
| `-FieldDecl 0x1ea5d777058 <line:270:5, line:275:7> col:7 cb 'union (anonymous union at .//openssl//file_jk/after\crypto\bn/bn_lcl.h:270:5)':'union bn_gencb_st::(anonymous at .//openssl//file_jk/after\crypto\bn/bn_lcl.h:270:5)'
|-FunctionDecl 0x1ea5d7771e8 <line:649:1, col:40> col:6 invalid BN_RECP_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1ea5d777128 <col:23, col:36> col:36 invalid recp 'int *'
|-FunctionDecl 0x1ea5d777338 <line:650:1, col:39> col:6 invalid BN_MONT_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1ea5d7772a8 <col:23, col:36> col:36 invalid ctx 'int *'
|-FunctionDecl 0x1ea5d777488 <line:652:1, col:23> col:6 invalid bn_init 'void (int *)'
| `-ParmVarDecl 0x1ea5d7773f8 <col:14, col:22> col:22 invalid a 'int *'
|-FunctionDecl 0x1ea5d777848 <line:653:1, col:73> col:6 invalid bn_mul_normal 'void (int *, int *, int, int *, int)'
| |-ParmVarDecl 0x1ea5d777548 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d7775c8 <col:33, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x1ea5d777648 <col:46, col:50> col:50 na 'int'
| |-ParmVarDecl 0x1ea5d7776c8 <col:54, col:64> col:64 invalid b 'int *'
| `-ParmVarDecl 0x1ea5d777748 <col:67, col:71> col:71 nb 'int'
|-FunctionDecl 0x1ea5d777b08 <line:654:1, col:57> col:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1ea5d777928 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d7779a8 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1ea5d777a28 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1ea5d77ce00 <line:655:1, col:57> col:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1ea5d777bd8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d777c58 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1ea5d777cd8 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1ea5d77d148 <line:656:1, col:72> col:6 invalid bn_sqr_normal 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1ea5d77ced0 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d77cf50 <col:33, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x1ea5d77cfd0 <col:52, col:56> col:56 n 'int'
| `-ParmVarDecl 0x1ea5d77d050 <col:59, col:69> col:69 invalid tmp 'int *'
|-FunctionDecl 0x1ea5d77d378 <line:657:1, col:50> col:6 invalid bn_sqr_comba8 'void (int *, const int *)'
| |-ParmVarDecl 0x1ea5d77d220 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1ea5d77d2a0 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1ea5d77d558 <line:658:1, col:50> col:6 invalid bn_sqr_comba4 'void (int *, const int *)'
| |-ParmVarDecl 0x1ea5d77d440 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1ea5d77d4c0 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1ea5d77d810 <line:659:1, col:61> col:5 invalid bn_cmp_words 'int (const int *, const int *, int)'
| |-ParmVarDecl 0x1ea5d77d620 <col:18, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x1ea5d77d6a0 <col:37, col:53> col:53 invalid b 'const int *'
| `-ParmVarDecl 0x1ea5d77d720 <col:56, col:60> col:60 n 'int'
|-FunctionDecl 0x1ea5d77db60 <line:660:1, col:75> col:5 invalid bn_cmp_part_words 'int (const int *, const int *, int, int)'
| |-ParmVarDecl 0x1ea5d77d8e0 <col:23, col:39> col:39 invalid a 'const int *'
| |-ParmVarDecl 0x1ea5d77d960 <col:42, col:58> col:58 invalid b 'const int *'
| |-ParmVarDecl 0x1ea5d77d9e0 <col:61, col:65> col:65 cl 'int'
| `-ParmVarDecl 0x1ea5d77da60 <col:69, col:73> col:73 dl 'int'
|-FunctionDecl 0x1ea5d77c098 <line:661:1, line:662:52> line:661:6 invalid bn_mul_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1ea5d77dc38 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d77dcb8 <col:36, col:46> col:46 invalid a 'int *'
| |-ParmVarDecl 0x1ea5d77dd38 <col:49, col:59> col:59 invalid b 'int *'
| |-ParmVarDecl 0x1ea5d77bdf0 <col:62, col:66> col:66 n2 'int'
| |-ParmVarDecl 0x1ea5d77be70 <line:662:23, col:27> col:27 dna 'int'
| |-ParmVarDecl 0x1ea5d77bef0 <col:32, col:36> col:36 dnb 'int'
| `-ParmVarDecl 0x1ea5d77bf70 <col:41, col:51> col:51 invalid t 'int *'
|-FunctionDecl 0x1ea5d77c548 <line:663:1, line:664:64> line:663:6 invalid bn_mul_part_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1ea5d77c188 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d77c208 <col:41, col:51> col:51 invalid a 'int *'
| |-ParmVarDecl 0x1ea5d77c288 <col:54, col:64> col:64 invalid b 'int *'
| |-ParmVarDecl 0x1ea5d77c308 <line:664:28, col:32> col:32 n 'int'
| |-ParmVarDecl 0x1ea5d77c388 <col:35, col:39> col:39 tna 'int'
| |-ParmVarDecl 0x1ea5d77c408 <col:44, col:48> col:48 tnb 'int'
| `-ParmVarDecl 0x1ea5d77c488 <col:53, col:63> col:63 invalid t 'int *'
|-FunctionDecl 0x1ea5d77c860 <line:665:1, col:74> col:6 invalid bn_sqr_recursive 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1ea5d77c638 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d77c6b8 <col:36, col:52> col:52 invalid a 'const int *'
| |-ParmVarDecl 0x1ea5d77c738 <col:55, col:59> col:59 n2 'int'
| `-ParmVarDecl 0x1ea5d77c7b8 <col:63, col:73> col:73 invalid t 'int *'
|-FunctionDecl 0x1ea5d77cba8 <line:666:1, col:68> col:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
| |-ParmVarDecl 0x1ea5d77c938 <col:24, col:34> col:34 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d77c9b8 <col:37, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x1ea5d77ca38 <col:50, col:60> col:60 invalid b 'int *'
| `-ParmVarDecl 0x1ea5d77cab8 <col:63, col:67> col:67 n 'int'
|-FunctionDecl 0x1ea5d77dfa8 <line:667:1, line:668:38> line:667:6 invalid bn_mul_low_recursive 'void (int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1ea5d77cc80 <col:27, col:37> col:37 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d77cd00 <col:40, col:50> col:50 invalid a 'int *'
| |-ParmVarDecl 0x1ea5d77cd80 <col:53, col:63> col:63 invalid b 'int *'
| |-ParmVarDecl 0x1ea5d77de28 <col:66, col:70> col:70 n2 'int'
| `-ParmVarDecl 0x1ea5d77dea8 <line:668:27, col:37> col:37 invalid t 'int *'
|-FunctionDecl 0x1ea5d77e418 <line:669:1, line:670:29> line:669:6 invalid bn_mul_high 'void (int *, int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1ea5d77e088 <col:18, col:28> col:28 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d77e108 <col:31, col:41> col:41 invalid a 'int *'
| |-ParmVarDecl 0x1ea5d77e188 <col:44, col:54> col:54 invalid b 'int *'
| |-ParmVarDecl 0x1ea5d77e208 <col:57, col:67> col:67 invalid l 'int *'
| |-ParmVarDecl 0x1ea5d77e288 <col:70, col:74> col:74 n2 'int'
| `-ParmVarDecl 0x1ea5d77e308 <line:670:18, col:28> col:28 invalid t 'int *'
|-FunctionDecl 0x1ea5d77e810 <line:671:1, line:672:42> line:671:10 invalid bn_add_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1ea5d77e500 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d77e580 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1ea5d77e600 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1ea5d77e680 <line:672:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1ea5d77e700 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1ea5d77eba8 <line:673:1, line:674:42> line:673:10 invalid bn_sub_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1ea5d77e8f0 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1ea5d77e970 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1ea5d77e9f0 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1ea5d77ea70 <line:674:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1ea5d77eaf0 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1ea5d782070 <line:675:1, line:676:64> line:675:5 invalid bn_mul_mont 'int (int *, const int *, const int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1ea5d77ec88 <col:17, col:27> col:27 invalid rp 'int *'
| |-ParmVarDecl 0x1ea5d77ed08 <col:31, col:47> col:47 invalid ap 'const int *'
| |-ParmVarDecl 0x1ea5d77ed88 <col:51, col:67> col:67 invalid bp 'const int *'
| |-ParmVarDecl 0x1ea5d781e50 <line:676:17, col:33> col:33 invalid np 'const int *'
| |-ParmVarDecl 0x1ea5d781ed0 <col:37, col:53> col:53 invalid n0 'const int *'
| `-ParmVarDecl 0x1ea5d781f50 <col:57, col:61> col:61 num 'int'
|-FunctionDecl 0x1ea5d782460 <line:678:1, line:680:38> line:678:9 invalid int_bn_mod_inverse 'int *(int *, const int *, const int *, int *, int *)'
| |-ParmVarDecl 0x1ea5d782158 <col:28, col:36> col:36 invalid in 'int *'
| |-ParmVarDecl 0x1ea5d7821d8 <line:679:28, col:42> col:42 invalid a 'const int *'
| |-ParmVarDecl 0x1ea5d782258 <col:45, col:59> col:59 invalid n 'const int *'
| |-ParmVarDecl 0x1ea5d7822d8 <col:62, col:70> col:70 invalid ctx 'int *'
| `-ParmVarDecl 0x1ea5d782358 <line:680:28, col:33> col:33 noinv 'int *'
|-FunctionDecl 0x1ea5d782850 <line:682:1, line:683:75> line:682:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x1ea5d782540 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x1ea5d7825c0 <col:39, col:43> col:43 bits 'int'
| |-ParmVarDecl 0x1ea5d782640 <line:683:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x1ea5d7826c0 <col:45, col:59> col:59 invalid rem 'const int *'
| `-ParmVarDecl 0x1ea5d782740 <col:64, col:72> col:72 invalid ctx 'int *'
|-FunctionDecl 0x1ea5d782b20 <line:684:1, col:66> col:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x1ea5d782930 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x1ea5d7829b0 <col:45, col:49> col:49 bits 'int'
| `-ParmVarDecl 0x1ea5d782a30 <col:55, col:63> col:63 invalid ctx 'int *'
|-FunctionDecl 0x1ea5d782d98 <line:685:1, col:68> col:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x1ea5d782bf0 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x1ea5d782c70 <col:47, col:51> col:51 bits 'int'
| `-ParmVarDecl 0x1ea5d782cf0 <col:57, col:65> col:65 invalid ctx 'int *'
|-VarDecl 0x1ea5d77ee38 <line:687:1, col:20> col:20 invalid BIGNUM 'int' static
|-FunctionDecl 0x1ea5d77ef80 <.//openssl//file_jk/after\crypto\bn\bn_print.c:20:1, line:50:1> line:20:7 invalid BN_bn2hex 'char *(const int *)'
| |-ParmVarDecl 0x1ea5d77eeb8 <col:17, col:31> col:31 invalid a 'const int *'
| `-CompoundStmt 0x1ea5d77b590 <line:21:1, line:50:1>
|   |-DeclStmt 0x1ea5d77f290 <line:22:5, col:23>
|   | |-VarDecl 0x1ea5d77f058 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x1ea5d77f0d8 <col:5, col:12> col:12 used j 'int'
|   | |-VarDecl 0x1ea5d77f158 <col:5, col:15> col:15 used v 'int'
|   | `-VarDecl 0x1ea5d77f1d8 <col:5, col:22> col:18 used z 'int' cinit
|   |   `-IntegerLiteral 0x1ea5d77f240 <col:22> 'int' 0
|   |-DeclStmt 0x1ea5d77f328 <line:23:5, col:14>
|   | `-VarDecl 0x1ea5d77f2c0 <col:5, col:11> col:11 used buf 'char *'
|   |-DeclStmt 0x1ea5d77f3c0 <line:24:5, col:12>
|   | `-VarDecl 0x1ea5d77f358 <col:5, col:11> col:11 used p 'char *'
|   |-IfStmt 0x1ea5d77f750 <line:26:5, line:27:34>
|   | |-OpaqueValueExpr 0x1ea5d77f738 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ea5d77f728 <col:9, col:34>
|   |   `-ImplicitCastExpr 0x1ea5d77f710 <col:16, col:34> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x1ea5d77f6d0 <col:16, col:34> 'int'
|   |       |-ImplicitCastExpr 0x1ea5d77f6b8 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x1ea5d77f608 <col:16> 'int ()' Function 0x1ea5d77f540 'OPENSSL_strdup' 'int ()'
|   |       `-ImplicitCastExpr 0x1ea5d77f6f8 <col:31> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x1ea5d77f668 <col:31> 'char [2]' lvalue "0"
|   |-IfStmt 0x1ea5d77fb88 <line:29:5, line:32:5>
|   | |-BinaryOperator 0x1ea5d77f9d8 <line:29:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ea5d77f9a8 <.//openssl//file_jk/after\crypto\bn\bn_print.c:29:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ea5d77f900 <col:9> 'char *' lvalue Var 0x1ea5d77f2c0 'buf' 'char *'
|   | | `-ImplicitCastExpr 0x1ea5d77f9c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1ea5d77f988 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1ea5d77f960 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1ea5d77f920 <col:26> 'int' 0
|   | `-CompoundStmt 0x1ea5d77fb70 <.//openssl//file_jk/after\crypto\bn\bn_print.c:29:22, line:32:5>
|   |   `-GotoStmt 0x1ea5d77fb58 <line:31:9, col:14> 'err' 0x1ea5d77fb08
|   |-BinaryOperator 0x1ea5d77fc10 <line:33:5, col:9> 'char *' '='
|   | |-DeclRefExpr 0x1ea5d77fba0 <col:5> 'char *' lvalue Var 0x1ea5d77f358 'p' 'char *'
|   | `-ImplicitCastExpr 0x1ea5d77fbf8 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ea5d77fbd8 <col:9> 'char *' lvalue Var 0x1ea5d77f2c0 'buf' 'char *'
|   |-IfStmt 0x1ea5d77fd08 <line:34:5, line:35:18>
|   | |-OpaqueValueExpr 0x1ea5d77fcf0 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x1ea5d77fcd0 <col:9, col:18> 'char' '='
|   |   |-UnaryOperator 0x1ea5d77fc88 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | `-ParenExpr 0x1ea5d77fc68 <col:10, col:14> 'char *'
|   |   |   `-UnaryOperator 0x1ea5d77fc50 <col:11, col:12> 'char *' postfix '++'
|   |   |     `-DeclRefExpr 0x1ea5d77fc30 <col:11> 'char *' lvalue Var 0x1ea5d77f358 'p' 'char *'
|   |   `-ImplicitCastExpr 0x1ea5d77fcb8 <col:18> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x1ea5d77fca0 <col:18> 'int' 45
|   |-ForStmt 0x1ea5d77b438 <line:36:5, line:46:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1ea5d77fde0 <line:36:26, col:31> 'int' '>='
|   | | |-ImplicitCastExpr 0x1ea5d77fdc8 <col:26> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ea5d77fd80 <col:26> 'int' lvalue Var 0x1ea5d77f058 'i' 'int'
|   | | `-IntegerLiteral 0x1ea5d77fda0 <col:31> 'int' 0
|   | |-UnaryOperator 0x1ea5d77ade0 <col:34, col:35> 'int' postfix '--'
|   | | `-DeclRefExpr 0x1ea5d77fe00 <col:34> 'int' lvalue Var 0x1ea5d77f058 'i' 'int'
|   | `-CompoundStmt 0x1ea5d77b420 <col:39, line:46:5>
|   |   `-ForStmt 0x1ea5d77b3e8 <line:37:9, line:45:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1ea5d77aeb8 <line:37:32, col:37> 'int' '>='
|   |     | |-ImplicitCastExpr 0x1ea5d77aea0 <col:32> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1ea5d77ae58 <col:32> 'int' lvalue Var 0x1ea5d77f0d8 'j' 'int'
|   |     | `-IntegerLiteral 0x1ea5d77ae78 <col:37> 'int' 0
|   |     |-CompoundAssignOperator 0x1ea5d77af20 <col:40, col:45> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-DeclRefExpr 0x1ea5d77aed8 <col:40> 'int' lvalue Var 0x1ea5d77f0d8 'j' 'int'
|   |     | `-IntegerLiteral 0x1ea5d77aef8 <col:45> 'int' 8
|   |     `-CompoundStmt 0x1ea5d77b3d0 <col:48, line:45:9>
|   |       `-IfStmt 0x1ea5d77b3b8 <line:40:13, line:44:13>
|   |         |-BinaryOperator 0x1ea5d77b138 <line:40:17, col:29> 'int' '||'
|   |         | |-ImplicitCastExpr 0x1ea5d77b120 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1ea5d77b048 <col:17> 'int' lvalue Var 0x1ea5d77f1d8 'z' 'int'
|   |         | `-ParenExpr 0x1ea5d77b100 <col:22, col:29> 'int'
|   |         |   `-BinaryOperator 0x1ea5d77b0e0 <col:23, col:28> 'int' '!='
|   |         |     |-ImplicitCastExpr 0x1ea5d77b0c8 <col:23> 'int' <LValueToRValue>
|   |         |     | `-DeclRefExpr 0x1ea5d77b080 <col:23> 'int' lvalue Var 0x1ea5d77f158 'v' 'int'
|   |         |     `-IntegerLiteral 0x1ea5d77b0a0 <col:28> 'int' 0
|   |         `-CompoundStmt 0x1ea5d77b3a0 <col:32, line:44:13>
|   |           `-BinaryOperator 0x1ea5d77b380 <line:43:17, col:21> 'int' '='
|   |             |-DeclRefExpr 0x1ea5d77b338 <col:17> 'int' lvalue Var 0x1ea5d77f1d8 'z' 'int'
|   |             `-IntegerLiteral 0x1ea5d77b358 <col:21> 'int' 1
|   |-BinaryOperator 0x1ea5d77b4f0 <line:47:5, col:10> 'char' '='
|   | |-UnaryOperator 0x1ea5d77b4a8 <col:5, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x1ea5d77b490 <col:6> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1ea5d77b470 <col:6> 'char *' lvalue Var 0x1ea5d77f358 'p' 'char *'
|   | `-ImplicitCastExpr 0x1ea5d77b4d8 <col:10> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x1ea5d77b4c0 <col:10> 'int' 0
|   `-LabelStmt 0x1ea5d77b578 <line:48:2, line:49:16> 'err'
|     `-ReturnStmt 0x1ea5d77b568 <col:5, col:16>
|       `-ImplicitCastExpr 0x1ea5d77b550 <col:12, col:16> 'char *' <LValueToRValue>
|         `-ParenExpr 0x1ea5d77b530 <col:12, col:16> 'char *' lvalue
|           `-DeclRefExpr 0x1ea5d77b510 <col:13> 'char *' lvalue Var 0x1ea5d77f2c0 'buf' 'char *'
|-FunctionDecl 0x1ea5d77b6a0 <line:53:1, line:122:1> line:53:7 invalid BN_bn2dec 'char *(const int *)'
| |-ParmVarDecl 0x1ea5d77b608 <col:17, col:31> col:31 invalid a 'const int *'
| `-CompoundStmt 0x1ea5d7839f0 <line:54:1, line:122:1>
|   |-DeclStmt 0x1ea5d77b950 <line:55:5, col:27>
|   | |-VarDecl 0x1ea5d77b778 <col:5, col:13> col:9 used i 'int' cinit
|   | | `-IntegerLiteral 0x1ea5d77b7e0 <col:13> 'int' 0
|   | |-VarDecl 0x1ea5d77b820 <col:5, col:16> col:16 used num 'int'
|   | `-VarDecl 0x1ea5d77b8a0 <col:5, col:26> col:21 used ok 'int' cinit
|   |   `-IntegerLiteral 0x1ea5d77b908 <col:26> 'int' 0
|   |-DeclStmt 0x1ea5d77ba88 <line:56:5, col:21>
|   | `-VarDecl 0x1ea5d77b980 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\bn\bn_print.c:56:11 used buf 'char *' cinit
|   |   `-ImplicitCastExpr 0x1ea5d77ba70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x1ea5d77ba50 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1ea5d77ba28 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1ea5d77b9e8 <col:26> 'int' 0
|   |-DeclStmt 0x1ea5d77bb20 <.//openssl//file_jk/after\crypto\bn\bn_print.c:57:5, col:12>
|   | `-VarDecl 0x1ea5d77bab8 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x1ea5d77bcc8 <line:60:5, col:20>
|   | `-VarDecl 0x1ea5d77bc60 <col:5, col:9> col:9 used bn_data_num 'int'
|   |-BinaryOperator 0x1ea5d7840e8 <line:69:5, col:37> 'int' '='
|   | |-DeclRefExpr 0x1ea5d783ee0 <col:5> 'int' lvalue Var 0x1ea5d77b820 'num' 'int'
|   | `-BinaryOperator 0x1ea5d7840c8 <col:11, col:37> 'int' '+'
|   |   |-ParenExpr 0x1ea5d784080 <col:11, col:33> 'int'
|   |   | `-BinaryOperator 0x1ea5d784060 <col:12, col:32> 'int' '+'
|   |   |   |-BinaryOperator 0x1ea5d784018 <col:12, col:25> 'int' '+'
|   |   |   | |-BinaryOperator 0x1ea5d783f78 <col:12, col:16> 'int' '/'
|   |   |   | | |-ImplicitCastExpr 0x1ea5d783f60 <col:12> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1ea5d783f18 <col:12> 'int' lvalue Var 0x1ea5d77b778 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x1ea5d783f38 <col:16> 'int' 10
|   |   |   | `-BinaryOperator 0x1ea5d783ff8 <col:21, col:25> 'int' '/'
|   |   |   |   |-ImplicitCastExpr 0x1ea5d783fe0 <col:21> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x1ea5d783f98 <col:21> 'int' lvalue Var 0x1ea5d77b778 'i' 'int'
|   |   |   |   `-IntegerLiteral 0x1ea5d783fb8 <col:25> 'int' 1000
|   |   |   `-IntegerLiteral 0x1ea5d784038 <col:32> 'int' 1
|   |   `-IntegerLiteral 0x1ea5d7840a0 <col:37> 'int' 1
|   |-BinaryOperator 0x1ea5d7842f8 <line:72:5, col:33> 'char *' '='
|   | |-DeclRefExpr 0x1ea5d7841c8 <col:5> 'char *' lvalue Var 0x1ea5d77b980 'buf' 'char *'
|   | `-ImplicitCastExpr 0x1ea5d7842e0 <col:11, col:33> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x1ea5d7842b8 <col:11, col:33> 'int'
|   |     |-ImplicitCastExpr 0x1ea5d7842a0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1ea5d784200 <col:11> 'int ()' Function 0x1ea5d77f7c8 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1ea5d784280 <col:26, col:32> 'int' '+'
|   |       |-ImplicitCastExpr 0x1ea5d784268 <col:26> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1ea5d784220 <col:26> 'int' lvalue Var 0x1ea5d77b820 'num' 'int'
|   |       `-IntegerLiteral 0x1ea5d784240 <col:32> 'int' 3
|   |-IfStmt 0x1ea5d784570 <line:73:5, line:76:5>
|   | |-OpaqueValueExpr 0x1ea5d784558 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1ea5d784540 <line:73:45, line:76:5>
|   |   `-GotoStmt 0x1ea5d784528 <line:75:9, col:14> 'err' 0x1ea5d7844d8
|   |-IfStmt 0x1ea5d784750 <line:77:5, line:78:14>
|   | |-OpaqueValueExpr 0x1ea5d784738 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ea5d784720 <col:9, col:14> 'err' 0x1ea5d7844d8
|   |-BinaryOperator 0x1ea5d7847d8 <line:81:5, col:9> 'char *' '='
|   | |-DeclRefExpr 0x1ea5d784768 <col:5> 'char *' lvalue Var 0x1ea5d77bab8 'p' 'char *'
|   | `-ImplicitCastExpr 0x1ea5d7847c0 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ea5d7847a0 <col:9> 'char *' lvalue Var 0x1ea5d77b980 'buf' 'char *'
|   |-IfStmt 0x1ea5d783528 <line:83:5, line:113:5> has_else
|   | |-OpaqueValueExpr 0x1ea5d783510 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1ea5d784998 <line:83:24, line:86:5>
|   | | |-BinaryOperator 0x1ea5d7848b8 <line:84:9, col:18> 'char' '='
|   | | | |-UnaryOperator 0x1ea5d784870 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   | | | | `-ParenExpr 0x1ea5d784850 <col:10, col:14> 'char *'
|   | | | |   `-UnaryOperator 0x1ea5d784838 <col:11, col:12> 'char *' postfix '++'
|   | | | |     `-DeclRefExpr 0x1ea5d784818 <col:11> 'char *' lvalue Var 0x1ea5d77bab8 'p' 'char *'
|   | | | `-ImplicitCastExpr 0x1ea5d7848a0 <col:18> 'char' <IntegralCast>
|   | | |   `-CharacterLiteral 0x1ea5d784888 <col:18> 'int' 48
|   | | `-BinaryOperator 0x1ea5d784978 <line:85:9, col:18> 'char' '='
|   | |   |-UnaryOperator 0x1ea5d784930 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   | |   | `-ParenExpr 0x1ea5d784910 <col:10, col:14> 'char *'
|   | |   |   `-UnaryOperator 0x1ea5d7848f8 <col:11, col:12> 'char *' postfix '++'
|   | |   |     `-DeclRefExpr 0x1ea5d7848d8 <col:11> 'char *' lvalue Var 0x1ea5d77bab8 'p' 'char *'
|   | |   `-ImplicitCastExpr 0x1ea5d784960 <col:18> 'char' <IntegralCast>
|   | |     `-CharacterLiteral 0x1ea5d784948 <col:18> 'int' 0
|   | `-CompoundStmt 0x1ea5d7834f0 <line:86:12, line:113:5>
|   |   |-IfStmt 0x1ea5d784b80 <line:87:9, line:88:20>
|   |   | |-OpaqueValueExpr 0x1ea5d784b68 <<invalid sloc>> '_Bool'
|   |   | `-BinaryOperator 0x1ea5d784b48 <col:13, col:20> 'char' '='
|   |   |   |-UnaryOperator 0x1ea5d784b00 <col:13, col:15> 'char' lvalue prefix '*' cannot overflow
|   |   |   | `-UnaryOperator 0x1ea5d784ae8 <col:14, col:15> 'char *' postfix '++'
|   |   |   |   `-DeclRefExpr 0x1ea5d784ac8 <col:14> 'char *' lvalue Var 0x1ea5d77bab8 'p' 'char *'
|   |   |   `-ImplicitCastExpr 0x1ea5d784b30 <col:20> 'char' <IntegralCast>
|   |   |     `-CharacterLiteral 0x1ea5d784b18 <col:20> 'int' 45
|   |   `-WhileStmt 0x1ea5d7831e8 <line:105:9, line:106:14>
|   |     |-ImplicitCastExpr 0x1ea5d783198 <line:105:16, col:17> 'char' <LValueToRValue>
|   |     | `-UnaryOperator 0x1ea5d783180 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow
|   |     |   `-ImplicitCastExpr 0x1ea5d783168 <col:17> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x1ea5d783148 <col:17> 'char *' lvalue Var 0x1ea5d77bab8 'p' 'char *'
|   |     `-UnaryOperator 0x1ea5d7831d0 <line:106:13, col:14> 'char *' postfix '++'
|   |       `-DeclRefExpr 0x1ea5d7831b0 <col:13> 'char *' lvalue Var 0x1ea5d77bab8 'p' 'char *'
|   |-BinaryOperator 0x1ea5d7835b0 <line:114:5, col:10> 'int' '='
|   | |-DeclRefExpr 0x1ea5d783550 <col:5> 'int' lvalue Var 0x1ea5d77b8a0 'ok' 'int'
|   | `-IntegerLiteral 0x1ea5d783588 <col:10> 'int' 1
|   |-LabelStmt 0x1ea5d7836e8 <line:115:2, col:5> 'err'
|   | `-NullStmt 0x1ea5d7836e0 <col:5>
|   |-IfStmt 0x1ea5d783890 <line:118:5, line:119:16>
|   | |-ImplicitCastExpr 0x1ea5d783830 <line:118:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1ea5d783810 <col:9> 'int' lvalue Var 0x1ea5d77b8a0 'ok' 'int'
|   | `-ReturnStmt 0x1ea5d783880 <line:119:9, col:16>
|   |   `-ImplicitCastExpr 0x1ea5d783868 <col:16> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ea5d783848 <col:16> 'char *' lvalue Var 0x1ea5d77b980 'buf' 'char *'
|   |-CallExpr 0x1ea5d783900 <line:120:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x1ea5d7838e8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1ea5d7838a8 <col:5> 'int ()' Function 0x1ea5d7835f8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1ea5d783928 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ea5d7838c8 <col:18> 'char *' lvalue Var 0x1ea5d77b980 'buf' 'char *'
|   `-ReturnStmt 0x1ea5d7839e0 <line:121:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x1ea5d7839c8 <col:17, col:27> 'char *' <NullToPointer>
|       `-ParenExpr 0x1ea5d7839a8 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x1ea5d783980 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x1ea5d783940 <col:26> 'int' 0
|-FunctionDecl 0x1ea5d783c20 <.//openssl//file_jk/after\crypto\bn\bn_print.c:124:1, line:195:1> line:124:5 invalid BN_hex2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x1ea5d783ac8 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x1ea5d783b48 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x1ea5d786178 <line:125:1, line:195:1>
|   |-DeclStmt 0x1ea5d7891e8 <line:128:5, col:34>
|   | |-VarDecl 0x1ea5d783d88 <col:5, col:15> col:9 used neg 'int' cinit
|   | | `-IntegerLiteral 0x1ea5d783df0 <col:15> 'int' 0
|   | |-VarDecl 0x1ea5d788ec0 <col:5, col:18> col:18 used h 'int'
|   | |-VarDecl 0x1ea5d788f40 <col:5, col:21> col:21 used m 'int'
|   | |-VarDecl 0x1ea5d788fc0 <col:5, col:24> col:24 used i 'int'
|   | |-VarDecl 0x1ea5d789040 <col:5, col:27> col:27 used j 'int'
|   | |-VarDecl 0x1ea5d7890c0 <col:5, col:30> col:30 used k 'int'
|   | `-VarDecl 0x1ea5d789140 <col:5, col:33> col:33 used c 'int'
|   |-DeclStmt 0x1ea5d789280 <line:129:5, col:12>
|   | `-VarDecl 0x1ea5d789218 <col:5, col:9> col:9 used num 'int'
|   |-IfStmt 0x1ea5d789548 <line:131:5, line:132:18>
|   | |-BinaryOperator 0x1ea5d7894d0 <line:131:9, col:35> 'int' '||'
|   | | |-ParenExpr 0x1ea5d7893a8 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1ea5d789388 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1ea5d789358 <.//openssl//file_jk/after\crypto\bn\bn_print.c:131:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1ea5d789298 <col:10> 'const char *' lvalue ParmVar 0x1ea5d783b48 'a' 'const char *'
|   | | |   `-ImplicitCastExpr 0x1ea5d789370 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x1ea5d789338 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x1ea5d789310 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x1ea5d7892d0 <col:26> 'int' 0
|   | | `-ParenExpr 0x1ea5d7894b0 <.//openssl//file_jk/after\crypto\bn\bn_print.c:131:24, col:35> 'int'
|   | |   `-BinaryOperator 0x1ea5d789490 <col:25, col:31> 'int' '=='
|   | |     |-ImplicitCastExpr 0x1ea5d789478 <col:25, col:26> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x1ea5d789460 <col:25, col:26> 'char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x1ea5d789430 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
|   | |     |     `-ImplicitCastExpr 0x1ea5d789418 <col:26> 'const char *' <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x1ea5d7893f8 <col:26> 'const char *' lvalue ParmVar 0x1ea5d783b48 'a' 'const char *'
|   | |     `-CharacterLiteral 0x1ea5d789448 <col:31> 'int' 0
|   | `-ReturnStmt 0x1ea5d789538 <line:132:9, col:18>
|   |   `-ParenExpr 0x1ea5d789518 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1ea5d7894f0 <col:17> 'int' 0
|   |-IfStmt 0x1ea5d7896f0 <line:134:5, line:137:5>
|   | |-BinaryOperator 0x1ea5d7895f8 <line:134:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ea5d7895e0 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1ea5d7895c8 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x1ea5d789598 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x1ea5d789580 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1ea5d789560 <col:10> 'const char *' lvalue ParmVar 0x1ea5d783b48 'a' 'const char *'
|   | | `-CharacterLiteral 0x1ea5d7895b0 <col:15> 'int' 45
|   | `-CompoundStmt 0x1ea5d7896d0 <col:20, line:137:5>
|   |   |-BinaryOperator 0x1ea5d789678 <line:135:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ea5d789618 <col:9> 'int' lvalue Var 0x1ea5d783d88 'neg' 'int'
|   |   | `-IntegerLiteral 0x1ea5d789650 <col:15> 'int' 1
|   |   `-UnaryOperator 0x1ea5d7896b8 <line:136:9, col:10> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x1ea5d789698 <col:9> 'const char *' lvalue ParmVar 0x1ea5d783b48 'a' 'const char *'
|   |-ForStmt 0x1ea5d789a60 <line:139:5, line:140:9>
|   | |-BinaryOperator 0x1ea5d789768 <line:139:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1ea5d789708 <col:10> 'int' lvalue Var 0x1ea5d788fc0 'i' 'int'
|   | | `-IntegerLiteral 0x1ea5d789740 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1ea5d789a00 <col:17, col:65> 'int' '&&'
|   | | |-BinaryOperator 0x1ea5d789850 <col:17, col:32> 'int' '<='
|   | | | |-ImplicitCastExpr 0x1ea5d789838 <col:17> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ea5d789788 <col:17> 'int' lvalue Var 0x1ea5d788fc0 'i' 'int'
|   | | | `-ParenExpr 0x1ea5d789818 <col:22, col:32> 'int'
|   | | |   `-BinaryOperator 0x1ea5d7897f8 <<built-in>:30:21, .//openssl//file_jk/after\crypto\bn\bn_print.c:139:31> 'int' '/'
|   | | |     |-IntegerLiteral 0x1ea5d7897a8 <<built-in>:30:21> 'int' 2147483647
|   | | |     `-IntegerLiteral 0x1ea5d7897d0 <.//openssl//file_jk/after\crypto\bn\bn_print.c:139:31> 'int' 4
|   | | `-CallExpr 0x1ea5d7899c0 <col:37, col:65> 'int'
|   | |   |-ImplicitCastExpr 0x1ea5d7899a8 <col:37> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1ea5d789870 <col:37> 'int (int)' Function 0x1ea5d754080 'isxdigit' 'int (int)'
|   | |   `-ImplicitCastExpr 0x1ea5d7899e8 <col:46, col:64> 'int' <IntegralCast>
|   | |     `-CStyleCastExpr 0x1ea5d789950 <col:46, col:64> 'unsigned char' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x1ea5d789938 <col:61, col:64> 'char' <LValueToRValue> part_of_explicit_cast
|   | |         `-ArraySubscriptExpr 0x1ea5d789900 <col:61, col:64> 'const char' lvalue
|   | |           |-ImplicitCastExpr 0x1ea5d7898d0 <col:61> 'const char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x1ea5d789890 <col:61> 'const char *' lvalue ParmVar 0x1ea5d783b48 'a' 'const char *'
|   | |           `-ImplicitCastExpr 0x1ea5d7898e8 <col:63> 'int' <LValueToRValue>
|   | |             `-DeclRefExpr 0x1ea5d7898b0 <col:63> 'int' lvalue Var 0x1ea5d788fc0 'i' 'int'
|   | |-UnaryOperator 0x1ea5d789a40 <col:68, col:69> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1ea5d789a20 <col:68> 'int' lvalue Var 0x1ea5d788fc0 'i' 'int'
|   | `-ContinueStmt 0x1ea5d789a58 <line:140:9>
|   |-IfStmt 0x1ea5d789c68 <line:142:5, line:143:14>
|   | |-BinaryOperator 0x1ea5d789be0 <line:142:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x1ea5d789af8 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1ea5d789ae0 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ea5d789a98 <col:9> 'int' lvalue Var 0x1ea5d788fc0 'i' 'int'
|   | | | `-IntegerLiteral 0x1ea5d789ab8 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1ea5d789bc0 <col:19, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x1ea5d789ba8 <col:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1ea5d789b18 <col:19> 'int' lvalue Var 0x1ea5d788fc0 'i' 'int'
|   | |   `-BinaryOperator 0x1ea5d789b88 <<built-in>:30:21, .//openssl//file_jk/after\crypto\bn\bn_print.c:142:31> 'int' '/'
|   | |     |-IntegerLiteral 0x1ea5d789b38 <<built-in>:30:21> 'int' 2147483647
|   | |     `-IntegerLiteral 0x1ea5d789b60 <.//openssl//file_jk/after\crypto\bn\bn_print.c:142:31> 'int' 4
|   | `-GotoStmt 0x1ea5d789c50 <line:143:9, col:14> 'err' 0x1ea5d789c00
|   |-BinaryOperator 0x1ea5d789d48 <line:145:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x1ea5d789c80 <col:5> 'int' lvalue Var 0x1ea5d789218 'num' 'int'
|   | `-BinaryOperator 0x1ea5d789d28 <col:11, col:15> 'int' '+'
|   |   |-ImplicitCastExpr 0x1ea5d789cf8 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea5d789cb8 <col:11> 'int' lvalue Var 0x1ea5d788fc0 'i' 'int'
|   |   `-ImplicitCastExpr 0x1ea5d789d10 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ea5d789cd8 <col:15> 'int' lvalue Var 0x1ea5d783d88 'neg' 'int'
|   |-IfStmt 0x1ea5d789e70 <line:146:5, line:147:20>
|   | |-OpaqueValueExpr 0x1ea5d789e58 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ea5d789e48 <col:9, col:20>
|   |   `-ImplicitCastExpr 0x1ea5d789e30 <col:16, col:20> 'int' <LValueToRValue>
|   |     `-ParenExpr 0x1ea5d789e10 <col:16, col:20> 'int' lvalue
|   |       `-DeclRefExpr 0x1ea5d789df0 <col:17> 'int' lvalue Var 0x1ea5d789218 'num' 'int'
|   |-IfStmt 0x1ea5d78a2d8 <line:150:5, line:156:5> has_else
|   | |-OpaqueValueExpr 0x1ea5d78a2c0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1ea5d78a188 <line:150:22, line:153:5>
|   | | `-IfStmt 0x1ea5d78a170 <line:151:9, line:152:22>
|   | |   |-OpaqueValueExpr 0x1ea5d78a158 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x1ea5d78a148 <col:13, col:22>
|   | |     `-ParenExpr 0x1ea5d78a128 <col:20, col:22> 'int'
|   | |       `-IntegerLiteral 0x1ea5d78a100 <col:21> 'int' 0
|   | `-CompoundStmt 0x1ea5d78a2b0 <line:153:12, line:156:5>
|   |-IfStmt 0x1ea5d78a548 <line:159:5, line:160:14>
|   | |-OpaqueValueExpr 0x1ea5d78a530 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ea5d78a518 <col:9, col:14> 'err' 0x1ea5d789c00
|   |-BinaryOperator 0x1ea5d78a5d0 <line:162:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x1ea5d78a560 <col:5> 'int' lvalue Var 0x1ea5d789040 'j' 'int'
|   | `-ImplicitCastExpr 0x1ea5d78a5b8 <col:9> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x1ea5d78a598 <col:9> 'int' lvalue Var 0x1ea5d788fc0 'i' 'int'
|   |-BinaryOperator 0x1ea5d78a650 <line:163:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x1ea5d78a5f0 <col:5> 'int' lvalue Var 0x1ea5d788f40 'm' 'int'
|   | `-IntegerLiteral 0x1ea5d78a628 <col:9> 'int' 0
|   |-BinaryOperator 0x1ea5d78a6d0 <line:164:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x1ea5d78a670 <col:5> 'int' lvalue Var 0x1ea5d788ec0 'h' 'int'
|   | `-IntegerLiteral 0x1ea5d78a6a8 <col:9> 'int' 0
|   |-WhileStmt 0x1ea5d78ae98 <line:165:5, line:181:5>
|   | |-BinaryOperator 0x1ea5d78a750 <line:165:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x1ea5d78a738 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ea5d78a6f0 <col:12> 'int' lvalue Var 0x1ea5d789040 'j' 'int'
|   | | `-IntegerLiteral 0x1ea5d78a710 <col:16> 'int' 0
|   | `-CompoundStmt 0x1ea5d78ae80 <col:19, line:181:5>
|   |   `-ForStmt 0x1ea5d78ae00 <line:168:9, line:179:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x1ea5d78add0 <line:168:18, line:179:9>
|   |       |-BinaryOperator 0x1ea5d78a998 <line:169:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x1ea5d78a848 <col:13> 'int' lvalue Var 0x1ea5d789140 'c' 'int'
|   |       | `-ImplicitCastExpr 0x1ea5d78a980 <col:17, col:24> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x1ea5d78a968 <col:17, col:24> 'char' <LValueToRValue>
|   |       |     `-ArraySubscriptExpr 0x1ea5d78a948 <col:17, col:24> 'const char' lvalue
|   |       |       |-ImplicitCastExpr 0x1ea5d78a930 <col:17> 'const char *' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x1ea5d78a880 <col:17> 'const char *' lvalue ParmVar 0x1ea5d783b48 'a' 'const char *'
|   |       |       `-BinaryOperator 0x1ea5d78a910 <col:19, col:23> 'int' '-'
|   |       |         |-ImplicitCastExpr 0x1ea5d78a8e0 <col:19> 'int' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x1ea5d78a8a0 <col:19> 'int' lvalue Var 0x1ea5d789040 'j' 'int'
|   |       |         `-ImplicitCastExpr 0x1ea5d78a8f8 <col:23> 'int' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x1ea5d78a8c0 <col:23> 'int' lvalue Var 0x1ea5d788f40 'm' 'int'
|   |       |-BinaryOperator 0x1ea5d78ab78 <line:170:13, col:38> 'int' '='
|   |       | |-DeclRefExpr 0x1ea5d78a9b8 <col:13> 'int' lvalue Var 0x1ea5d7890c0 'k' 'int'
|   |       | `-CallExpr 0x1ea5d78ab38 <col:17, col:38> 'int'
|   |       |   |-ImplicitCastExpr 0x1ea5d78ab20 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x1ea5d78aae0 <col:17> 'int ()' Function 0x1ea5d78aa18 'OPENSSL_hexchar2int' 'int ()'
|   |       |   `-ImplicitCastExpr 0x1ea5d78ab60 <col:37> 'int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x1ea5d78ab00 <col:37> 'int' lvalue Var 0x1ea5d789140 'c' 'int'
|   |       |-IfStmt 0x1ea5d78ac80 <line:171:13, line:172:21>
|   |       | |-BinaryOperator 0x1ea5d78abf8 <line:171:17, col:21> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x1ea5d78abe0 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1ea5d78ab98 <col:17> 'int' lvalue Var 0x1ea5d7890c0 'k' 'int'
|   |       | | `-IntegerLiteral 0x1ea5d78abb8 <col:21> 'int' 0
|   |       | `-BinaryOperator 0x1ea5d78ac60 <line:172:17, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x1ea5d78ac18 <col:17> 'int' lvalue Var 0x1ea5d7890c0 'k' 'int'
|   |       |   `-IntegerLiteral 0x1ea5d78ac38 <col:21> 'int' 0
|   |       `-IfStmt 0x1ea5d78adb8 <line:175:13, line:178:13>
|   |         |-BinaryOperator 0x1ea5d78ad40 <line:175:17, col:24> 'int' '<='
|   |         | |-UnaryOperator 0x1ea5d78ad00 <col:17, col:19> 'int' prefix '--'
|   |         | | `-DeclRefExpr 0x1ea5d78ace0 <col:19> 'int' lvalue Var 0x1ea5d788f40 'm' 'int'
|   |         | `-IntegerLiteral 0x1ea5d78ad18 <col:24> 'int' 0
|   |         `-CompoundStmt 0x1ea5d78ada0 <col:27, line:178:13>
|   |           `-BreakStmt 0x1ea5d78ad98 <line:177:17>
|   |-NullStmt 0x1ea5d785fa0 <line:186:22>
|   |-ReturnStmt 0x1ea5d786048 <line:190:5, col:16>
|   | `-ImplicitCastExpr 0x1ea5d786030 <col:12, col:16> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x1ea5d786010 <col:12, col:16> 'int' lvalue
|   |     `-DeclRefExpr 0x1ea5d785ff0 <col:13> 'int' lvalue Var 0x1ea5d789218 'num' 'int'
|   |-LabelStmt 0x1ea5d786108 <line:191:2, col:5> 'err'
|   | `-NullStmt 0x1ea5d786100 <col:5>
|   `-ReturnStmt 0x1ea5d786168 <line:194:5, col:14>
|     `-ParenExpr 0x1ea5d786148 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1ea5d786120 <col:13> 'int' 0
|-FunctionDecl 0x1ea5d786358 <line:197:1, line:265:1> line:197:5 invalid BN_dec2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x1ea5d786238 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x1ea5d7862b8 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x1ea5d78af78 <line:198:1, line:265:1>
|   |-DeclStmt 0x1ea5d786670 <line:201:5, col:22>
|   | |-VarDecl 0x1ea5d7864c0 <col:5, col:15> col:9 used neg 'int' cinit
|   | | `-IntegerLiteral 0x1ea5d786528 <col:15> 'int' 0
|   | |-VarDecl 0x1ea5d786568 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x1ea5d7865e8 <col:5, col:21> col:21 used j 'int'
|   |-DeclStmt 0x1ea5d786708 <line:202:5, col:12>
|   | `-VarDecl 0x1ea5d7866a0 <col:5, col:9> col:9 used num 'int'
|   |-IfStmt 0x1ea5d7869a0 <line:204:5, line:205:18>
|   | |-BinaryOperator 0x1ea5d786928 <line:204:9, col:35> 'int' '||'
|   | | |-ParenExpr 0x1ea5d786830 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x1ea5d786810 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1ea5d7867e0 <.//openssl//file_jk/after\crypto\bn\bn_print.c:204:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1ea5d786720 <col:10> 'const char *' lvalue ParmVar 0x1ea5d7862b8 'a' 'const char *'
|   | | |   `-ImplicitCastExpr 0x1ea5d7867f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x1ea5d7867c0 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x1ea5d786798 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x1ea5d786758 <col:26> 'int' 0
|   | | `-ParenExpr 0x1ea5d786908 <.//openssl//file_jk/after\crypto\bn\bn_print.c:204:24, col:35> 'int'
|   | |   `-BinaryOperator 0x1ea5d7868e8 <col:25, col:31> 'int' '=='
|   | |     |-ImplicitCastExpr 0x1ea5d7868d0 <col:25, col:26> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x1ea5d7868b8 <col:25, col:26> 'char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x1ea5d786888 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
|   | |     |     `-ImplicitCastExpr 0x1ea5d786870 <col:26> 'const char *' <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x1ea5d786850 <col:26> 'const char *' lvalue ParmVar 0x1ea5d7862b8 'a' 'const char *'
|   | |     `-CharacterLiteral 0x1ea5d7868a0 <col:31> 'int' 0
|   | `-ReturnStmt 0x1ea5d786990 <line:205:9, col:18>
|   |   `-ParenExpr 0x1ea5d786970 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1ea5d786948 <col:17> 'int' 0
|   |-IfStmt 0x1ea5d786b48 <line:206:5, line:209:5>
|   | |-BinaryOperator 0x1ea5d786a50 <line:206:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ea5d786a38 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1ea5d786a20 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x1ea5d7869f0 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x1ea5d7869d8 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1ea5d7869b8 <col:10> 'const char *' lvalue ParmVar 0x1ea5d7862b8 'a' 'const char *'
|   | | `-CharacterLiteral 0x1ea5d786a08 <col:15> 'int' 45
|   | `-CompoundStmt 0x1ea5d786b28 <col:20, line:209:5>
|   |   |-BinaryOperator 0x1ea5d786ad0 <line:207:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1ea5d786a70 <col:9> 'int' lvalue Var 0x1ea5d7864c0 'neg' 'int'
|   |   | `-IntegerLiteral 0x1ea5d786aa8 <col:15> 'int' 1
|   |   `-UnaryOperator 0x1ea5d786b10 <line:208:9, col:10> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x1ea5d786af0 <col:9> 'const char *' lvalue ParmVar 0x1ea5d7862b8 'a' 'const char *'
|   |-ForStmt 0x1ea5d78bef0 <line:211:5, line:212:9>
|   | |-BinaryOperator 0x1ea5d786bc0 <line:211:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1ea5d786b60 <col:10> 'int' lvalue Var 0x1ea5d786568 'i' 'int'
|   | | `-IntegerLiteral 0x1ea5d786b98 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1ea5d786e28 <col:17, col:64> 'int' '&&'
|   | | |-BinaryOperator 0x1ea5d786ca8 <col:17, col:32> 'int' '<='
|   | | | |-ImplicitCastExpr 0x1ea5d786c90 <col:17> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ea5d786be0 <col:17> 'int' lvalue Var 0x1ea5d786568 'i' 'int'
|   | | | `-ParenExpr 0x1ea5d786c70 <col:22, col:32> 'int'
|   | | |   `-BinaryOperator 0x1ea5d786c50 <<built-in>:30:21, .//openssl//file_jk/after\crypto\bn\bn_print.c:211:31> 'int' '/'
|   | | |     |-IntegerLiteral 0x1ea5d786c00 <<built-in>:30:21> 'int' 2147483647
|   | | |     `-IntegerLiteral 0x1ea5d786c28 <.//openssl//file_jk/after\crypto\bn\bn_print.c:211:31> 'int' 4
|   | | `-CallExpr 0x1ea5d786de8 <col:37, col:64> 'int'
|   | |   |-ImplicitCastExpr 0x1ea5d786dd0 <col:37> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x1ea5d786cc8 <col:37> 'int (int)' Function 0x1ea5d75ba60 'isdigit' 'int (int)'
|   | |   `-ImplicitCastExpr 0x1ea5d786e10 <col:45, col:63> 'int' <IntegralCast>
|   | |     `-CStyleCastExpr 0x1ea5d786da8 <col:45, col:63> 'unsigned char' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x1ea5d786d90 <col:60, col:63> 'char' <LValueToRValue> part_of_explicit_cast
|   | |         `-ArraySubscriptExpr 0x1ea5d786d58 <col:60, col:63> 'const char' lvalue
|   | |           |-ImplicitCastExpr 0x1ea5d786d28 <col:60> 'const char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x1ea5d786ce8 <col:60> 'const char *' lvalue ParmVar 0x1ea5d7862b8 'a' 'const char *'
|   | |           `-ImplicitCastExpr 0x1ea5d786d40 <col:62> 'int' <LValueToRValue>
|   | |             `-DeclRefExpr 0x1ea5d786d08 <col:62> 'int' lvalue Var 0x1ea5d786568 'i' 'int'
|   | |-UnaryOperator 0x1ea5d786e68 <col:67, col:68> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1ea5d786e48 <col:67> 'int' lvalue Var 0x1ea5d786568 'i' 'int'
|   | `-ContinueStmt 0x1ea5d786e80 <line:212:9>
|   |-IfStmt 0x1ea5d78c0f8 <line:214:5, line:215:14>
|   | |-BinaryOperator 0x1ea5d78c070 <line:214:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x1ea5d78bf88 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1ea5d78bf70 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x1ea5d78bf28 <col:9> 'int' lvalue Var 0x1ea5d786568 'i' 'int'
|   | | | `-IntegerLiteral 0x1ea5d78bf48 <col:14> 'int' 0
|   | | `-BinaryOperator 0x1ea5d78c050 <col:19, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x1ea5d78c038 <col:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1ea5d78bfa8 <col:19> 'int' lvalue Var 0x1ea5d786568 'i' 'int'
|   | |   `-BinaryOperator 0x1ea5d78c018 <<built-in>:30:21, .//openssl//file_jk/after\crypto\bn\bn_print.c:214:31> 'int' '/'
|   | |     |-IntegerLiteral 0x1ea5d78bfc8 <<built-in>:30:21> 'int' 2147483647
|   | |     `-IntegerLiteral 0x1ea5d78bff0 <.//openssl//file_jk/after\crypto\bn\bn_print.c:214:31> 'int' 4
|   | `-GotoStmt 0x1ea5d78c0e0 <line:215:9, col:14> 'err' 0x1ea5d78c090
|   |-BinaryOperator 0x1ea5d78c1d8 <line:217:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x1ea5d78c110 <col:5> 'int' lvalue Var 0x1ea5d7866a0 'num' 'int'
|   | `-BinaryOperator 0x1ea5d78c1b8 <col:11, col:15> 'int' '+'
|   |   |-ImplicitCastExpr 0x1ea5d78c188 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1ea5d78c148 <col:11> 'int' lvalue Var 0x1ea5d786568 'i' 'int'
|   |   `-ImplicitCastExpr 0x1ea5d78c1a0 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ea5d78c168 <col:15> 'int' lvalue Var 0x1ea5d7864c0 'neg' 'int'
|   |-IfStmt 0x1ea5d78c300 <line:218:5, line:219:20>
|   | |-OpaqueValueExpr 0x1ea5d78c2e8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ea5d78c2d8 <col:9, col:20>
|   |   `-ImplicitCastExpr 0x1ea5d78c2c0 <col:16, col:20> 'int' <LValueToRValue>
|   |     `-ParenExpr 0x1ea5d78c2a0 <col:16, col:20> 'int' lvalue
|   |       `-DeclRefExpr 0x1ea5d78c280 <col:17> 'int' lvalue Var 0x1ea5d7866a0 'num' 'int'
|   |-IfStmt 0x1ea5d78c568 <line:225:5, line:231:5> has_else
|   | |-OpaqueValueExpr 0x1ea5d78c550 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1ea5d78c508 <line:225:22, line:228:5>
|   | | `-IfStmt 0x1ea5d78c4f0 <line:226:9, line:227:22>
|   | |   |-OpaqueValueExpr 0x1ea5d78c4d8 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x1ea5d78c4c8 <col:13, col:22>
|   | |     `-ParenExpr 0x1ea5d78c4a8 <col:20, col:22> 'int'
|   | |       `-IntegerLiteral 0x1ea5d78c480 <col:21> 'int' 0
|   | `-CompoundStmt 0x1ea5d78c540 <line:228:12, line:231:5>
|   |-IfStmt 0x1ea5d78c6e8 <line:234:5, line:235:14>
|   | |-OpaqueValueExpr 0x1ea5d78c6d0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ea5d78c6b8 <col:9, col:14> 'err' 0x1ea5d78c090
|   |-IfStmt 0x1ea5d78c7f8 <line:238:5, line:239:13>
|   | |-OpaqueValueExpr 0x1ea5d78c7e0 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x1ea5d78c7c0 <col:9, col:13> 'int' '='
|   |   |-DeclRefExpr 0x1ea5d78c778 <col:9> 'int' lvalue Var 0x1ea5d7865e8 'j' 'int'
|   |   `-IntegerLiteral 0x1ea5d78c798 <col:13> 'int' 0
|   |-WhileStmt 0x1ea5d78cd70 <line:241:5, line:252:5>
|   | |-BinaryOperator 0x1ea5d78c898 <line:241:12, col:19> 'int' '>='
|   | | |-UnaryOperator 0x1ea5d78c858 <col:12, col:14> 'int' prefix '--'
|   | | | `-DeclRefExpr 0x1ea5d78c838 <col:14> 'int' lvalue Var 0x1ea5d786568 'i' 'int'
|   | | `-IntegerLiteral 0x1ea5d78c870 <col:19> 'int' 0
|   | `-CompoundStmt 0x1ea5d78cd50 <col:22, line:252:5>
|   |   |-UnaryOperator 0x1ea5d78c9b8 <line:244:9, col:10> 'const char *' postfix '++'
|   |   | `-DeclRefExpr 0x1ea5d78c998 <col:9> 'const char *' lvalue ParmVar 0x1ea5d7862b8 'a' 'const char *'
|   |   `-IfStmt 0x1ea5d78cd38 <line:245:9, line:251:9>
|   |     |-OpaqueValueExpr 0x1ea5d78cd20 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1ea5d78cd00 <line:245:32, line:251:9>
|   |       |-IfStmt 0x1ea5d78cc58 <line:246:13, line:248:22>
|   |       | |-OpaqueValueExpr 0x1ea5d78cc40 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x1ea5d78cc28 <col:17, col:22> 'err' 0x1ea5d78c090
|   |       `-BinaryOperator 0x1ea5d78cce0 <line:250:13, col:17> 'int' '='
|   |         |-DeclRefExpr 0x1ea5d78cc98 <col:13> 'int' lvalue Var 0x1ea5d7865e8 'j' 'int'
|   |         `-IntegerLiteral 0x1ea5d78ccb8 <col:17> 'int' 0
|   |-NullStmt 0x1ea5d78cda8 <line:256:22>
|   |-ReturnStmt 0x1ea5d78ce50 <line:260:5, col:16>
|   | `-ImplicitCastExpr 0x1ea5d78ce38 <col:12, col:16> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x1ea5d78ce18 <col:12, col:16> 'int' lvalue
|   |     `-DeclRefExpr 0x1ea5d78cdf8 <col:13> 'int' lvalue Var 0x1ea5d7866a0 'num' 'int'
|   |-LabelStmt 0x1ea5d78af08 <line:261:2, col:5> 'err'
|   | `-NullStmt 0x1ea5d78af00 <col:5>
|   `-ReturnStmt 0x1ea5d78af68 <line:264:5, col:14>
|     `-ParenExpr 0x1ea5d78af48 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x1ea5d78af20 <col:13> 'int' 0
|-FunctionDecl 0x1ea5d78b148 <line:267:1, line:285:1> line:267:5 invalid BN_asc2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x1ea5d78b028 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x1ea5d78b0a8 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x1ea5d78ba38 <line:268:1, line:285:1>
|   |-DeclStmt 0x1ea5d78b2e0 <line:269:5, col:22>
|   | `-VarDecl 0x1ea5d78b228 <col:5, col:21> col:17 used p 'const char *' cinit
|   |   `-ImplicitCastExpr 0x1ea5d78b2c8 <col:21> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1ea5d78b290 <col:21> 'const char *' lvalue ParmVar 0x1ea5d78b0a8 'a' 'const char *'
|   |-IfStmt 0x1ea5d78b400 <line:271:5, line:272:10>
|   | |-BinaryOperator 0x1ea5d78b3a8 <line:271:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x1ea5d78b390 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x1ea5d78b378 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x1ea5d78b348 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x1ea5d78b330 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x1ea5d78b2f8 <col:10> 'const char *' lvalue Var 0x1ea5d78b228 'p' 'const char *'
|   | | `-CharacterLiteral 0x1ea5d78b360 <col:15> 'int' 45
|   | `-UnaryOperator 0x1ea5d78b3e8 <line:272:9, col:10> 'const char *' postfix '++'
|   |   `-DeclRefExpr 0x1ea5d78b3c8 <col:9> 'const char *' lvalue Var 0x1ea5d78b228 'p' 'const char *'
|   |-IfStmt 0x1ea5d78b8d0 <line:274:5, line:280:5> has_else
|   | |-BinaryOperator 0x1ea5d78b710 <line:274:9, col:51> 'int' '&&'
|   | | |-BinaryOperator 0x1ea5d78b4e0 <col:9, col:17> 'int' '=='
|   | | | |-ImplicitCastExpr 0x1ea5d78b4c8 <col:9, col:12> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x1ea5d78b4b0 <col:9, col:12> 'char' <LValueToRValue>
|   | | | |   `-ArraySubscriptExpr 0x1ea5d78b478 <col:9, col:12> 'const char' lvalue
|   | | | |     |-ImplicitCastExpr 0x1ea5d78b460 <col:9> 'const char *' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x1ea5d78b418 <col:9> 'const char *' lvalue Var 0x1ea5d78b228 'p' 'const char *'
|   | | | |     `-IntegerLiteral 0x1ea5d78b438 <col:11> 'int' 0
|   | | | `-CharacterLiteral 0x1ea5d78b498 <col:17> 'int' 48
|   | | `-ParenExpr 0x1ea5d78b6f0 <col:24, col:51> 'int'
|   | |   `-BinaryOperator 0x1ea5d78b6d0 <col:25, col:48> 'int' '||'
|   | |     |-BinaryOperator 0x1ea5d78b5c8 <col:25, col:33> 'int' '=='
|   | |     | |-ImplicitCastExpr 0x1ea5d78b5b0 <col:25, col:28> 'int' <IntegralCast>
|   | |     | | `-ImplicitCastExpr 0x1ea5d78b598 <col:25, col:28> 'char' <LValueToRValue>
|   | |     | |   `-ArraySubscriptExpr 0x1ea5d78b560 <col:25, col:28> 'const char' lvalue
|   | |     | |     |-ImplicitCastExpr 0x1ea5d78b548 <col:25> 'const char *' <LValueToRValue>
|   | |     | |     | `-DeclRefExpr 0x1ea5d78b500 <col:25> 'const char *' lvalue Var 0x1ea5d78b228 'p' 'const char *'
|   | |     | |     `-IntegerLiteral 0x1ea5d78b520 <col:27> 'int' 1
|   | |     | `-CharacterLiteral 0x1ea5d78b580 <col:33> 'int' 88
|   | |     `-BinaryOperator 0x1ea5d78b6b0 <col:40, col:48> 'int' '=='
|   | |       |-ImplicitCastExpr 0x1ea5d78b698 <col:40, col:43> 'int' <IntegralCast>
|   | |       | `-ImplicitCastExpr 0x1ea5d78b680 <col:40, col:43> 'char' <LValueToRValue>
|   | |       |   `-ArraySubscriptExpr 0x1ea5d78b648 <col:40, col:43> 'const char' lvalue
|   | |       |     |-ImplicitCastExpr 0x1ea5d78b630 <col:40> 'const char *' <LValueToRValue>
|   | |       |     | `-DeclRefExpr 0x1ea5d78b5e8 <col:40> 'const char *' lvalue Var 0x1ea5d78b228 'p' 'const char *'
|   | |       |     `-IntegerLiteral 0x1ea5d78b608 <col:42> 'int' 1
|   | |       `-CharacterLiteral 0x1ea5d78b668 <col:48> 'int' 120
|   | |-CompoundStmt 0x1ea5d78b818 <col:54, line:277:5>
|   | | `-IfStmt 0x1ea5d78b800 <line:275:9, line:276:20>
|   | |   |-OpaqueValueExpr 0x1ea5d78b7e8 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x1ea5d78b7d8 <col:13, col:20>
|   | |     `-IntegerLiteral 0x1ea5d78b7b0 <col:20> 'int' 0
|   | `-CompoundStmt 0x1ea5d78b8b8 <line:277:12, line:280:5>
|   |   `-IfStmt 0x1ea5d78b8a0 <line:278:9, line:279:20>
|   |     |-OpaqueValueExpr 0x1ea5d78b888 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x1ea5d78b878 <col:13, col:20>
|   |       `-IntegerLiteral 0x1ea5d78b850 <col:20> 'int' 0
|   `-ReturnStmt 0x1ea5d78ba28 <line:284:5, col:12>
|     `-IntegerLiteral 0x1ea5d78ba00 <col:12> 'int' 1
|-FunctionDecl 0x1ea5d78bc10 <line:288:1, line:299:1> line:288:5 invalid BN_print_fp 'int (FILE *, const int *)'
| |-ParmVarDecl 0x1ea5d78ba78 <col:17, col:23> col:23 used fp 'FILE *'
| |-ParmVarDecl 0x1ea5d78baf8 <col:27, col:41> col:41 invalid a 'const int *'
| `-CompoundStmt 0x1ea5d7854f8 <line:289:1, line:299:1>
|   |-DeclStmt 0x1ea5d78bd58 <line:291:5, col:12>
|   | `-VarDecl 0x1ea5d78bcf0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x1ea5d7850d8 <line:293:5, line:294:18>
|   | |-OpaqueValueExpr 0x1ea5d7850c0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1ea5d7850b0 <col:9, col:18>
|   |   `-ParenExpr 0x1ea5d785090 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1ea5d785068 <col:17> 'int' 0
|   `-ReturnStmt 0x1ea5d7854e8 <line:298:5, col:16>
|     `-ImplicitCastExpr 0x1ea5d7854d0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1ea5d7854b0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1ea5d785490 <col:13> 'int' lvalue Var 0x1ea5d78bcf0 'ret' 'int'
|-FunctionDecl 0x1ea5d785690 <line:302:1, line:325:1> line:302:5 invalid BN_print 'int (int *, const int *)'
| |-ParmVarDecl 0x1ea5d785538 <col:14, col:19> col:19 invalid bp 'int *'
| |-ParmVarDecl 0x1ea5d7855b8 <col:23, col:37> col:37 invalid a 'const int *'
| `-CompoundStmt 0x1ea5d787550 <line:303:1, line:325:1>
|   |-DeclStmt 0x1ea5d7859a8 <line:304:5, col:23>
|   | |-VarDecl 0x1ea5d785770 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x1ea5d7857f0 <col:5, col:12> col:12 used j 'int'
|   | |-VarDecl 0x1ea5d785870 <col:5, col:15> col:15 used v 'int'
|   | `-VarDecl 0x1ea5d7858f0 <col:5, col:22> col:18 used z 'int' cinit
|   |   `-IntegerLiteral 0x1ea5d785958 <col:22> 'int' 0
|   |-DeclStmt 0x1ea5d785a68 <line:305:5, col:16>
|   | `-VarDecl 0x1ea5d7859d8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1ea5d785a40 <col:15> 'int' 0
|   |-IfStmt 0x1ea5d785c80 <line:307:5, line:308:14>
|   | |-OpaqueValueExpr 0x1ea5d785c68 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ea5d785c50 <col:9, col:14> 'end' 0x1ea5d785c00
|   |-IfStmt 0x1ea5d785d78 <line:309:5, line:310:14>
|   | |-OpaqueValueExpr 0x1ea5d785d60 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1ea5d785d48 <col:9, col:14> 'end' 0x1ea5d785c00
|   |-ForStmt 0x1ea5d787418 <line:311:5, line:321:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1ea5d785e50 <line:311:26, col:31> 'int' '>='
|   | | |-ImplicitCastExpr 0x1ea5d785e38 <col:26> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1ea5d785df0 <col:26> 'int' lvalue Var 0x1ea5d785770 'i' 'int'
|   | | `-IntegerLiteral 0x1ea5d785e10 <col:31> 'int' 0
|   | |-UnaryOperator 0x1ea5d786ec0 <col:34, col:35> 'int' postfix '--'
|   | | `-DeclRefExpr 0x1ea5d786ea0 <col:34> 'int' lvalue Var 0x1ea5d785770 'i' 'int'
|   | `-CompoundStmt 0x1ea5d787400 <col:39, line:321:5>
|   |   `-ForStmt 0x1ea5d7873c8 <line:312:9, line:320:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1ea5d786f98 <line:312:32, col:37> 'int' '>='
|   |     | |-ImplicitCastExpr 0x1ea5d786f80 <col:32> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1ea5d786f38 <col:32> 'int' lvalue Var 0x1ea5d7857f0 'j' 'int'
|   |     | `-IntegerLiteral 0x1ea5d786f58 <col:37> 'int' 0
|   |     |-CompoundAssignOperator 0x1ea5d787000 <col:40, col:45> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-DeclRefExpr 0x1ea5d786fb8 <col:40> 'int' lvalue Var 0x1ea5d7857f0 'j' 'int'
|   |     | `-IntegerLiteral 0x1ea5d786fd8 <col:45> 'int' 4
|   |     `-CompoundStmt 0x1ea5d7873b0 <col:48, line:320:9>
|   |       `-IfStmt 0x1ea5d787398 <line:315:13, line:319:13>
|   |         |-BinaryOperator 0x1ea5d787218 <line:315:17, col:29> 'int' '||'
|   |         | |-ImplicitCastExpr 0x1ea5d787200 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1ea5d787128 <col:17> 'int' lvalue Var 0x1ea5d7858f0 'z' 'int'
|   |         | `-ParenExpr 0x1ea5d7871e0 <col:22, col:29> 'int'
|   |         |   `-BinaryOperator 0x1ea5d7871c0 <col:23, col:28> 'int' '!='
|   |         |     |-ImplicitCastExpr 0x1ea5d7871a8 <col:23> 'int' <LValueToRValue>
|   |         |     | `-DeclRefExpr 0x1ea5d787160 <col:23> 'int' lvalue Var 0x1ea5d785870 'v' 'int'
|   |         |     `-IntegerLiteral 0x1ea5d787180 <col:28> 'int' 0
|   |         `-CompoundStmt 0x1ea5d787378 <col:32, line:319:13>
|   |           |-IfStmt 0x1ea5d7872f8 <line:316:17, line:317:26>
|   |           | |-OpaqueValueExpr 0x1ea5d7872e0 <<invalid sloc>> '_Bool'
|   |           | `-GotoStmt 0x1ea5d7872c8 <col:21, col:26> 'end' 0x1ea5d785c00
|   |           `-BinaryOperator 0x1ea5d787358 <line:318:17, col:21> 'int' '='
|   |             |-DeclRefExpr 0x1ea5d787310 <col:17> 'int' lvalue Var 0x1ea5d7858f0 'z' 'int'
|   |             `-IntegerLiteral 0x1ea5d787330 <col:21> 'int' 1
|   |-BinaryOperator 0x1ea5d7874b0 <line:322:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1ea5d787450 <col:5> 'int' lvalue Var 0x1ea5d7859d8 'ret' 'int'
|   | `-IntegerLiteral 0x1ea5d787488 <col:11> 'int' 1
|   `-LabelStmt 0x1ea5d787538 <line:323:2, line:324:16> 'end'
|     `-ReturnStmt 0x1ea5d787528 <col:5, col:16>
|       `-ImplicitCastExpr 0x1ea5d787510 <col:12, col:16> 'int' <LValueToRValue>
|         `-ParenExpr 0x1ea5d7874f0 <col:12, col:16> 'int' lvalue
|           `-DeclRefExpr 0x1ea5d7874d0 <col:13> 'int' lvalue Var 0x1ea5d7859d8 'ret' 'int'
`-FunctionDecl 0x1ea5d787660 <line:327:1, line:343:1> line:327:7 BN_options 'char *(void)'
  `-CompoundStmt 0x1ea5d787b98 <line:328:1, line:343:1>
    |-DeclStmt 0x1ea5d7877c0 <line:329:5, col:24>
    | `-VarDecl 0x1ea5d787730 <col:5, col:23> col:16 used init 'int' static cinit
    |   `-IntegerLiteral 0x1ea5d787798 <col:23> 'int' 0
    |-DeclStmt 0x1ea5d7878e0 <line:330:5, col:25>
    | `-VarDecl 0x1ea5d787878 <col:5, col:24> col:17 used data 'char [16]' static
    |-IfStmt 0x1ea5d787b18 <line:332:5, line:341:5>
    | |-UnaryOperator 0x1ea5d787948 <line:332:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x1ea5d787930 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x1ea5d7878f8 <col:10> 'int' lvalue Var 0x1ea5d787730 'init' 'int'
    | `-CompoundStmt 0x1ea5d787b00 <col:16, line:341:5>
    |   `-UnaryOperator 0x1ea5d787980 <line:333:9, col:13> 'int' postfix '++'
    |     `-DeclRefExpr 0x1ea5d787960 <col:9> 'int' lvalue Var 0x1ea5d787730 'init' 'int'
    `-ReturnStmt 0x1ea5d787b88 <line:342:5, col:17>
      `-ImplicitCastExpr 0x1ea5d787b70 <col:12, col:17> 'char *' <ArrayToPointerDecay>
        `-ParenExpr 0x1ea5d787b50 <col:12, col:17> 'char [16]' lvalue
          `-DeclRefExpr 0x1ea5d787b30 <col:13> 'char [16]' lvalue Var 0x1ea5d787878 'data' 'char [16]'
