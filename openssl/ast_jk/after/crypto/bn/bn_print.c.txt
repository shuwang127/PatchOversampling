TranslationUnitDecl 0x20b40985ac8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x20b40986360 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x20b40986060 '__int128'
|-TypedefDecl 0x20b409863d0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x20b40986080 'unsigned __int128'
|-TypedefDecl 0x20b40986708 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x20b409864c0 'struct __NSConstantString_tag'
|   `-Record 0x20b40986428 '__NSConstantString_tag'
|-TypedefDecl 0x20b40986778 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x20b40985ca0 'unsigned long long'
|-TypedefDecl 0x20b40986810 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x20b409867d0 'char *'
|   `-BuiltinType 0x20b40985b60 'char'
|-TypedefDecl 0x20b40986880 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x20b409867d0 'char *'
|   `-BuiltinType 0x20b40985b60 'char'
|-TypedefDecl 0x20b40986940 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x20b40985ca0 'unsigned long long'
|-TypedefDecl 0x20b409869b0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x20b409867d0 'char *'
|   `-BuiltinType 0x20b40985b60 'char'
|-FunctionDecl 0x20b42468d90 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20b42468e30 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x20b42468ea0 <col:21> Implicit
|-FunctionDecl 0x20b42468ef8 prev 0x20b42468d90 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x20b42468c20 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x20b42468fe8 <col:21> Inherited Implicit
|-TypedefDecl 0x20b42469028 prev 0x20b40986778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x20b40985ca0 'unsigned long long'
|-TypedefDecl 0x20b424690d0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x20b424690a0 'size_t' sugar
|   |-Typedef 0x20b42469028 'size_t'
|   `-BuiltinType 0x20b40985ca0 'unsigned long long'
|-TypedefDecl 0x20b42469140 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x20b40985c00 'long long'
|-TypedefDecl 0x20b424691b0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x20b40985c00 'long long'
|-TypedefDecl 0x20b42469220 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x20b40985c40 'unsigned short'
|-TypedefDecl 0x20b42469290 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x20b40985c40 'unsigned short'
|-TypedefDecl 0x20b42469300 <line:542:1, col:24> col:24 referenced wctype_t 'unsigned short'
| `-BuiltinType 0x20b40985c40 'unsigned short'
|-TypedefDecl 0x20b42469370 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x20b40985bc0 'int'
|-TypedefDecl 0x20b424693e0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x20b40985be0 'long'
|-TypedefDecl 0x20b42469450 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x20b40985c00 'long long'
|-TypedefDecl 0x20b424694e0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x20b424694b0 '__time64_t' sugar
|   |-Typedef 0x20b42469450 '__time64_t'
|   `-BuiltinType 0x20b40985c00 'long long'
|-FunctionDecl 0x20b42469658 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x20b42469878 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x20b424a6120 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x20b424699b8 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x20b42469a30 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x20b42469aa8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x20b42469b28 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x20b424a5ec0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x20b424a6200 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x20b424a62c0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x20b424a6430 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x20b424a63e0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x20b424a6380 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x20b424a62a0 'struct threadlocaleinfostruct'
|       `-Record 0x20b424ba000 'threadlocaleinfostruct'
|-TypedefDecl 0x20b424a6540 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x20b424a64f0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x20b424a6490 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x20b424a6360 'struct threadmbcinfostruct'
|       `-Record 0x20b424a62c0 'threadmbcinfostruct'
|-RecordDecl 0x20b424a6598 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x20b424a6650 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x20b424a6710 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20b424a67a0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x20b424a6830 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x20b424a68e8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x20b424a6890 'struct localeinfo_struct' sugar
|   `-RecordType 0x20b424a66f0 'struct localeinfo_struct'
|     `-Record 0x20b424a6650 'localeinfo_struct'
|-TypedefDecl 0x20b424a69c0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x20b424a6970 'struct localeinfo_struct *'
|   `-ElaboratedType 0x20b424a6890 'struct localeinfo_struct' sugar
|     `-RecordType 0x20b424a66f0 'struct localeinfo_struct'
|       `-Record 0x20b424a6650 'localeinfo_struct'
|-RecordDecl 0x20b424a6a38 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x20b424a6af0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20b424a6b68 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x20b424a6c28 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x20b424a6cc0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x20b424a6d30 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x20b424a6de8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x20b424a6d90 'struct localerefcount' sugar
|   `-RecordType 0x20b424a6ad0 'struct localerefcount'
|     `-Record 0x20b424a6a38 'localerefcount'
|-RecordDecl 0x20b424ba000 prev 0x20b424a6200 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x20b424ba080 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20b424ba0f8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x20b424ba168 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x20b424ba1d8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x20b424ba248 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x20b424ba408 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x20b424ba478 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x20b424ba4e8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x20b424ba558 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x20b424ba5c8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x20b424ba638 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x20b424ba690 parent 0x20b40985ac8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x20b424ba820 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x20b424ba890 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x20b424ba900 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x20b424ba970 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x20b424baa10 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x20b424baa80 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x20b424bab90 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x20b424bacc8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x20b424bad78 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x20b424bad20 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x20b424a62a0 'struct threadlocaleinfostruct'
|     `-Record 0x20b424ba000 'threadlocaleinfostruct'
|-RecordDecl 0x20b424bae10 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x20b424baed0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x20b424baf48 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x20b424b2f90 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x20b424b3000 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x20b424b3070 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x20b424b30e0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x20b424b3150 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x20b424b31c0 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x20b424b3230 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x20b424b32e0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x20b424b3290 'struct _iobuf' sugar
|   `-RecordType 0x20b424baeb0 'struct _iobuf'
|     `-Record 0x20b424bae10 '_iobuf'
|-FunctionDecl 0x20b424b3518 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x20b424b35e8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x20b40985c00 'long long'
|-FunctionDecl 0x20b424b37c8 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b424b3650 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x20b424b3ac0 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20b424b38a0 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x20b424b3918 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x20b424b3e70 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x20b424b3ba0 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x20b424b3c20 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x20b424b3ca0 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x20b424b9160 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20b424b8ff0 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x20b424b9390 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x20b424b9250 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x20b424b9540 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b424b9460 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x20b424b9730 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20b424b9a28 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x20b424b9800 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x20b424b9880 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x20b424b9be0 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b424b9b00 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x20b424b9d90 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b424b9cb0 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x20b424b9f40 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b424b9e60 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x20b424bc128 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b424bc048 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x20b424bc2b8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20b424bc620 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x20b424bc380 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x20b424bc478 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x20b424bc9d8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x20b424bc700 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x20b424bc780 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x20b424bc7f8 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x20b424bcb98 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b424bcab8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x20b424bce60 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x20b424bcc70 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x20b424bccf0 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x20b424bd030 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20b424bd428 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x20b424bd4c8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x20b424bd530 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x20b424bd5a8 prev 0x20b424bd428 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x20b424bd200 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x20b424bd280 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x20b424bd658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b424bdad0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x20b424bd800 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x20b424bd880 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x20b424bd900 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x20b424bddf0 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x20b424bde90 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x20b424bdef8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20b424bdf70 <col:40> Implicit printf 2 3
|-FunctionDecl 0x20b424b5fc0 prev 0x20b424bddf0 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20b424bdbb0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20b424bdc30 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x20b424b60b8 <col:40> Inherited printf 2 3
|-FunctionDecl 0x20b424b6280 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20b424b6100 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20b424b6180 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20b424b64d8 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20b424b6360 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x20b424b63d8 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x20b424b6708 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20b424b65b8 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x20b424b6a00 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x20b424b67e0 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x20b424b6858 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x20b424b6e98 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x20b424b6f38 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x20b424c40a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20b424c4108 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x20b424c4170 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x20b424c41f8 prev 0x20b424b6e98 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20b424b6ae0 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x20b424b6b58 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b424b6bd0 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b424b6c48 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x20b424c4700 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20b424c42e8 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x20b424c4360 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b424c43d8 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b424c4450 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b424c44c8 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x20b424c4bc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x20b424c48f0 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x20b424c4970 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x20b424c49e8 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x20b424c4c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b424be0e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x20b424c4dc0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x20b424c4e40 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x20b424c4ec0 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x20b424c4f38 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x20b424be490 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x20b424be530 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x20b424be598 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20b424be610 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x20b424be678 prev 0x20b424be490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x20b424be2c8 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x20b424be348 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x20b424be858 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x20b424be728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b424bec98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b424be998 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x20b424bea18 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x20b424beab0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20b424bed50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b424bf050 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20b424bee90 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x20b424bef10 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x20b424bf340 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b424bf128 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20b424bf1a8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20b424bf220 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b424bf6a0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x20b424bf420 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x20b424bf4f8 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x20b424bfa58 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x20b424bf778 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x20b424bf7f8 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x20b424bf878 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x20b424bfcb8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20b424bfb38 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x20b424c00a8 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x20b424bfd88 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20b424bfe08 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x20b424bfe88 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x20b424c0308 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x20b424c0188 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x20b424c07c8 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x20b424c0868 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x20b424c08d0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20b424c0938 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x20b424c09a0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x20b424c0a28 prev 0x20b424c07c8 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x20b424c0410 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x20b424c0488 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b424c0500 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b424c0578 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x20b424c0bf0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b424c0b10 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x20b424c0d80 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20b424c0f08 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20b424c2240 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x20b424c0fd8 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x20b424c2090 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20b424c2568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20b424c2420 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x20b424c2610 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b424c2830 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b424c2750 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x20b424c2a50 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x20b424c2908 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x20b424c2c00 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b424c2b20 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x20b424c2e50 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x20b424c2cd8 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x20b424c2d58 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x20b424c3090 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x20b424c3130 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20b424c31a0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x20b424c3208 prev 0x20b424c3090 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x20b424c2f30 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x20b424c32f8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x20b424c3428 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20b424c3348 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x20b424c3678 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20b424c3500 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x20b424c3578 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x20b424c3838 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20b424c3758 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x20b424c3a58 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20b424c3910 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x20b424c3ca8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20b424c3b30 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x20b424c3ba8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x20b424c3e68 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20b424c3d88 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x20b42512ef0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x20b424c3f40 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x20b424c3fc0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x20b425130b0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x20b42512fd0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x20b42513340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x20b42513260 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x20b425133e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x20b425135e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20b42513508 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x20b42513770 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20b42513a18 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x20b42513ab8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20b42513b28 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x20b42513b90 prev 0x20b42513a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x20b42513900 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x20b42513d68 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x20b42513c38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42514140 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42513f08 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x20b42513f80 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20b425141f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42514418 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20b42514338 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x20b42514668 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425144f0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x20b42514568 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42514a28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x20b42514800 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x20b42514880 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x20b42514ad8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42514d00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20b42514c20 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x20b4250ff38 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x20b4250fdf0 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x20b42510120 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x20b42510570 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x20b425101e8 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20b42510268 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x20b425102e8 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x20b42510360 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x20b425109f0 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x20b42510660 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x20b425106d8 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42510750 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b425107d0 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x20b42510e00 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20b42510ae0 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20b42510b58 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b42510bd8 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x20b42510fc8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20b42510ee8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x20b425113a0 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x20b42511440 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20b425114a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x20b42511520 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x20b42511588 prev 0x20b425113a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x20b42511160 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x20b425111e0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x20b42511768 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x20b42511638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42511b58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42511878 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x20b425118f8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x20b42511970 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20b42511c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42514f40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x20b42511d58 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x20b42514e40 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x20b42515238 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42515020 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x20b425150a0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x20b42515118 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b425156c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20b425153e0 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x20b42515458 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b425154d8 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x20b42515780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42515d50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425159c0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x20b42515a38 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42515ab8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x20b42515b30 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20b42517e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b425181d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20b42517fb8 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x20b42518030 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b425180b0 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x20b42518568 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425182b8 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x20b42518330 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b425183b0 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x20b42518428 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b425187c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x20b42518868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42518b20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x20b425189b0 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x20b42511e10 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x20b42518bf8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x20b42518c70 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x20b42512090 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x20b42511fb0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x20b42512138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b425123f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20b42512280 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x20b425122f8 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x20b42512810 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20b425128b0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x20b42512918 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20b42512980 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20b42512a00 <col:40> Implicit printf 2 0
|-FunctionDecl 0x20b42512a68 prev 0x20b42512810 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20b425124d0 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x20b42512550 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x20b425125c8 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20b42512b68 <col:40> Inherited printf 2 0
|-FunctionDecl 0x20b42515e50 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20b42515ef0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x20b42515f58 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20b42515fc0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20b42516040 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x20b425160a8 prev 0x20b42515e50 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20b42512bb0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x20b42512c30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20b42512ca8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20b425161a8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20b42516408 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20b425161f0 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20b42516270 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x20b425162e8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42516700 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20b425164e8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20b42516568 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x20b425165e0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42516a48 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20b42516ae8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20b42516b50 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20b42516bc8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x20b42516c30 prev 0x20b42516a48 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20b425167e8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x20b42516860 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20b42516d28 <col:40> Inherited printf 1 0
|-FunctionDecl 0x20b4251bfe8 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20b4251c088 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20b4251c0f0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20b4251c168 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x20b4251c1d0 prev 0x20b4251bfe8 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20b42516d78 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x20b4251beb0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20b4251c2c8 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x20b4251c490 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20b4251c318 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x20b4251c390 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251c6e8 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20b4251c570 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20b4251c5e8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251cc48 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20b4251cce8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20b4251cd50 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x20b4251cdb8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20b4251ce20 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20b4251cec0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x20b4251cf28 prev 0x20b4251cc48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20b4251c888 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x20b4251c900 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4251c980 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20b4251c9f8 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x20b4251d118 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x20b4251cfe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b4251d588 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20b4251d168 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x20b4251d1e0 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4251d258 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4251d2d8 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x20b4251d350 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251d9c8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20b4251d680 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x20b4251d6f8 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4251d770 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4251d7f0 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x20b4251d868 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251dd98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20b4251db80 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20b4251dbf8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4251dc78 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x20b4251de50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b425192f0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20b42519040 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x20b425190b8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42519138 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x20b425191b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20b425193b0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b425197a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20b425194f8 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x20b42519570 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b425195f0 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20b42519668 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42519b68 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x20b42519898 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x20b42519918 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x20b42519990 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42519f30 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x20b42519fd0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20b4251a038 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x20b4251a0b0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x20b4251a118 prev 0x20b42519f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x20b42519d10 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20b42519d90 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x20b4251a2f8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x20b4251a1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b4251a720 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x20b4251a7c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x20b4251a828 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x20b4251a890 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20b4251a910 <col:94> Implicit printf 2 0
|-FunctionDecl 0x20b4251a978 prev 0x20b4251a720 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x20b4251a408 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x20b4251a488 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x20b4251a500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x20b4251ab60 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x20b4251aa30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b4251aea0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x20b4251af40 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20b4251afa8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x20b4251b010 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x20b4251b090 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x20b4251b0f8 prev 0x20b4251aea0 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x20b4251abb0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x20b4251ac30 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x20b4251aca8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x20b4251b1f8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x20b4251b3c0 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20b4251b248 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x20b4251b2c0 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251b6b8 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20b4251b4a0 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20b4251b518 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b4251b598 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x20b4251ba50 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20b4251b7a0 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x20b4251b818 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4251b898 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x20b4251b910 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251bcb8 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x20b4251bb38 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x20b4251bbb8 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x20b4251ded0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20b4251bd98 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x20b4251e1c0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x20b4251dfa8 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x20b4251e020 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b4251e0a0 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x20b4251e4b8 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x20b4251e2a0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20b4251e320 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x20b4251e398 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251e718 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20b4251e5a0 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x20b4251e618 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251eaa8 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x20b4251e7f8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x20b4251e870 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4251e8f0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x20b4251e968 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251ec78 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x20b4251eb98 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x20b42523f30 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x20b4251ed50 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x20b4251edc8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b425240f0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20b42524010 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x20b42524280 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20b425244c8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42524350 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x20b425243c8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42524720 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425245a8 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20b42524620 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42524978 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42524800 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20b42524878 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42524d28 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42524a58 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x20b42524ad0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42524b48 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42525060 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42524e10 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20b42524e88 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42524f40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42525358 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42525148 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20b425251c0 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42525238 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42525650 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42525438 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20b425254b8 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x20b42525530 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42525948 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42525730 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20b425257b0 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20b42525828 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42525c40 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42525a28 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20b42525aa8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x20b42525b20 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4251f040 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42525d20 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20b42525da0 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x20b42525e18 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42525e90 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251f3d8 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b4251f128 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20b4251f1a8 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x20b4251f220 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b4251f298 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251f770 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b4251f4c0 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20b4251f540 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x20b4251f5b8 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b4251f630 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4251fc08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b4251f920 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x20b4251f9a0 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x20b4251fa18 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20b4251fcc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42523230 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b4251fe08 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x20b42522f20 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42522fa0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x20b42523018 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b425235d0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42523320 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x20b42523398 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42523418 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x20b42523490 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42523b20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b425237c0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x20b42523840 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x20b425238b8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20b42523930 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20b42523be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42527198 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42523d28 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x20b42523da0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42523e20 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x20b42523e98 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42526f60 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b425275d8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42527290 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20b42527308 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42527388 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x20b42527400 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42527478 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42527848 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425276d0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x20b42527748 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42527aa0 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42527928 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x20b425279a0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42527d90 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42527b80 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x20b42527bf8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42527c70 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42526080 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42527e78 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x20b42527ef0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42525f60 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b425264d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42526228 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x20b425262a0 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42526320 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x20b42526398 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20b42526598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42526990 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425266e0 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x20b42526758 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b425267d8 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x20b42526850 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4251fef0 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42526a80 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x20b42526af8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42526b70 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42526bf0 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x20b42526c68 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42520430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b425200e8 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x20b42520160 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b425201e0 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x20b42520258 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20b425202d0 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20b425204f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42520978 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42520648 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x20b425206c0 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42520740 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x20b425207b8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42520830 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42527fd0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42520a70 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x20b42520ae8 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42520b60 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42520be0 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x20b42520c58 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42520cd0 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42528390 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x20b425280c8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20b42528140 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x20b425281c0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x20b42528600 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20b42528490 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x20b42528818 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x20b42528af8 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20b425288e0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20b42528958 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x20b42528d40 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x20b42528bd0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20b42520f00 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20b42528e10 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x20b42521088 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x20b425212c0 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20b42521150 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20b425211c8 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x20b42521470 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x20b42521398 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x20b42521718 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x20b42521540 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b425215b8 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x20b42521ac0 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x20b425217f0 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20b42521870 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x20b425218e8 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x20b42521dc0 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20b42521ba0 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x20b42521c18 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20b425220c8 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x20b42521e98 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x20b42521f20 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20b425223d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20b42522260 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x20b42522478 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42522738 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x20b425225b8 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x20b42522a40 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b42522808 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x20b42522880 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x20b42522c90 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b42522b18 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x20b42522b90 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20b4252cfc0 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20b42522d68 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x20b4252d170 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20b4252d090 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x20b4252d320 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20b4252d240 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x20b4252d6b8 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252d3f0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x20b4252d468 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252d4e0 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252d9a8 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252d798 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x20b4252d810 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252d888 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252dc98 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252da88 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20b4252db00 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252db78 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252dfd0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252dd78 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x20b4252ddf0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252de68 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252e2d0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252e0b0 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252e128 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252e520 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252e3a8 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252e420 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252e770 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252e5f8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252e670 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252e9c0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252e848 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252e8c0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252ed78 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b4252ea98 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20b4252eb10 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b4252eb88 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x20b4252a1a0 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252ee58 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x20b4252eed0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4252ef48 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42529f90 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252a558 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252a288 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20b4252a300 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252a378 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252a848 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252a638 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x20b4252a6b0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252a728 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252ab38 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b4252a928 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b4252a9a0 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b4252aa18 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x20b4252aec0 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252ac18 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b4252ac90 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4252ad08 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252ad80 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252b350 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b4252afc8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b4252b040 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4252b0b8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b4252b130 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x20b4252b858 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252b438 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b4252b4b0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4252b528 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4252b5a0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252b618 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252bc18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b4252ba08 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20b4252ba80 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4252baf8 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20b4252bcd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b4252c1e0 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252bed0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20b4252bfb0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4252c028 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b4252c0a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x20b4252c2a0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b4252c558 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b4252c3e0 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x20b4252c458 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x20b4252c710 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20b4252c630 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x20b4252c9f0 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252c7e0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20b4252c858 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252c8d0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4252cc48 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4252cad0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4252cb48 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42536e80 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b4252cd20 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b4252cd98 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b4252ce10 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x20b42537208 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b42536f60 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b42536fd8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42537050 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b425370c8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b425373d0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20b425372f0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x20b42537618 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b425374a0 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42537518 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42537920 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425376f0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42537768 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42537b70 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425379f8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42537a70 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42537dc0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42537c48 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42537cc0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42538188 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42537eb8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42537f30 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42537fa8 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42538478 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42538268 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b425382e0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42538358 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42538768 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42538558 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b425385d0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42538648 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42538b28 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42538848 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x20b425388c0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42538938 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42533e50 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42538c08 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20b42538c80 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42538cf8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42534140 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42533f30 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20b42533fa8 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42534020 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42534590 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42534220 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20b42534298 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42534310 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42534388 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42534920 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42534678 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x20b425346f0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42534768 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b425347e0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42534cb0 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42534a08 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x20b42534a80 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42534af8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42534b70 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42535170 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42534d98 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b42534e60 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42534ed8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42534f50 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42535500 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42535258 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b425352d0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42535348 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b425353c0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42535890 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425355e8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b42535660 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b425356d8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42535750 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42535d98 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42535978 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b425359f0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42535a68 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42535ae0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42535b58 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b425361d8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42535e98 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b42535f10 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42535f88 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42536000 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42536078 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42536608 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b425362c8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b42536340 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b425363b8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42536430 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b425364a8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b42536870 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425366f8 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42536770 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42536ac0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42536948 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b425369c0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42536da8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42536b98 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42536c10 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42536c88 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b425311b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42530f10 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b42530f88 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42531000 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42531078 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20b42531278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b425317e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425313c0 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b42531438 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b425314b0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42531528 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b425315a0 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42531d20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b425319e0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b42531a58 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42531ad0 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42531b48 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20b42531bc0 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x20b42538ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b425394b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42538fe8 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x20b42539060 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b425390d8 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42539150 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b425391c8 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b42539240 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b425399b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b42539778 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20b425397f0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x20b42539a60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20b42539b78 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20b42532098 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b42539e30 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20b42531e40 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42531eb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20b42532150 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20b42532268 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20b42532808 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42532528 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20b425325a0 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42532618 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x20b425328c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20b425329e0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20b4253e100 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b42532ca0 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x20b42532d18 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42532d90 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20b4253def0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x20b4253e1c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x20b4253e2e0 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x20b4253e5e8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x20b4253e408 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x20b4253e480 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4253e4f8 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x20b4253a150 <line:37:1, line:44:1>
|   |-DeclStmt 0x20b4253e730 <line:38:5, col:21>
|   | `-VarDecl 0x20b4253e6c8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20b4253e7c8 <line:39:5, col:13>
|   | `-VarDecl 0x20b4253e760 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x20b4253eb20 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20b4253eb08 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20b4253ea20 <col:34> '<builtin fn type>' Function 0x20b4253e8b8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x20b4253ea58 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x20b4253e6c8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x20b4253ea90 <col:29> 'const wchar_t *' lvalue ParmVar 0x20b4253e4f8 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x20b4253ede0 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x20b4253eb50 <col:5> 'int' lvalue Var 0x20b4253e760 '_Ret' 'int'
|   | `-CallExpr 0x20b4253ed20 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x20b4253ed08 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20b4253eb88 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20b42535d98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x20b4253ed68 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20b4253eba8 <col:27> 'wchar_t *' lvalue ParmVar 0x20b4253e408 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x20b4253ed80 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20b4253ebc8 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20b4253e480 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x20b4253ed98 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20b4253ebe8 <col:44> 'const wchar_t *' lvalue ParmVar 0x20b4253e4f8 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x20b4253edb0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x20b4253ec70 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x20b4253ec48 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x20b4253ec08 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x20b4253edc8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20b4253ec90 <col:59> 'va_list':'char *' lvalue Var 0x20b4253e6c8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x20b4253a0e0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20b4253a0c8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20b4253a018 <col:34> '<builtin fn type>' Function 0x20b42539eb0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20b4253a050 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x20b4253e6c8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x20b4253a140 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x20b4253a128 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20b4253a108 <col:12> 'int' lvalue Var 0x20b4253e760 '_Ret' 'int'
|-FunctionDecl 0x20b4253e8b8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x20b4253e958 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20b4253e9c8 <col:34> Implicit
|-FunctionDecl 0x20b42539eb0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x20b42539f50 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x20b42539fc0 <col:34> Implicit
|-FunctionDecl 0x20b4253a448 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x20b4253a1a0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x20b4253a218 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4253a290 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b4253a308 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20b4253a730 <line:50:1, line:52:1>
|   `-ReturnStmt 0x20b4253a720 <line:51:5, col:62>
|     `-CallExpr 0x20b4253a660 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x20b4253a648 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20b4253a520 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20b42535d98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20b4253a6a8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20b4253a540 <col:27> 'wchar_t *' lvalue ParmVar 0x20b4253a1a0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20b4253a6c0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20b4253a560 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20b4253a218 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20b4253a6d8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20b4253a580 <col:44> 'const wchar_t *' lvalue ParmVar 0x20b4253a290 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20b4253a6f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x20b4253a608 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x20b4253a5e0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x20b4253a5a0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x20b4253a708 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20b4253a628 <col:59> 'va_list':'char *' lvalue ParmVar 0x20b4253a308 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20b4253a9d0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x20b4253a758 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x20b4253a7d0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4253a848 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b4253a8c0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x20b4253af68 <line:61:1, line:68:1>
|   |-DeclStmt 0x20b4253ab20 <line:62:5, col:21>
|   | `-VarDecl 0x20b4253aab8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x20b4253abb8 <line:63:5, col:13>
|   | `-VarDecl 0x20b4253ab50 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x20b4253ac60 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x20b4253ac48 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20b4253abd0 <col:34> '<builtin fn type>' Function 0x20b4253e8b8 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x20b4253abf0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x20b4253aab8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x20b4253ac28 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20b4253a8c0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x20b4253ae60 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x20b4253ac90 <col:5> 'int' lvalue Var 0x20b4253ab50 '_Ret' 'int'
|   | `-CallExpr 0x20b4253ada0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x20b4253ad88 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x20b4253acc8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20b42535d98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x20b4253ade8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20b4253ace8 <col:27> 'wchar_t *' lvalue ParmVar 0x20b4253a758 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x20b4253ae00 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20b4253ad08 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20b4253a7d0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x20b4253ae18 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20b4253ad28 <col:44> 'const wchar_t *' lvalue ParmVar 0x20b4253a848 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x20b4253ae30 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20b4253ad48 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20b4253a8c0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x20b4253ae48 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20b4253ad68 <col:64> 'va_list':'char *' lvalue Var 0x20b4253aab8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x20b4253aef8 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x20b4253aee0 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x20b4253ae80 <col:34> '<builtin fn type>' Function 0x20b42539eb0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x20b4253aec0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x20b4253aab8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x20b4253af58 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x20b4253af40 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x20b4253af20 <col:12> 'int' lvalue Var 0x20b4253ab50 '_Ret' 'int'
|-FunctionDecl 0x20b4253b2f8 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x20b4253afb8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x20b4253b030 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4253b0a8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b4253b120 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x20b4253b198 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x20b4253b580 <line:74:1, line:76:1>
|   `-ReturnStmt 0x20b4253b570 <line:75:5, col:67>
|     `-CallExpr 0x20b4253b4b0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x20b4253b498 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x20b4253b3d8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x20b42535d98 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x20b4253b4f8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20b4253b3f8 <col:27> 'wchar_t *' lvalue ParmVar 0x20b4253afb8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x20b4253b510 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x20b4253b418 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x20b4253b030 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x20b4253b528 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x20b4253b438 <col:44> 'const wchar_t *' lvalue ParmVar 0x20b4253b0a8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x20b4253b540 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x20b4253b458 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x20b4253b120 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x20b4253b558 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x20b4253b478 <col:64> 'va_list':'char *' lvalue ParmVar 0x20b4253b198 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x20b4253b7c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20b4253b5a8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x20b4253b620 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x20b4253ba18 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x20b4253b8a0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4253b918 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b4253bd00 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x20b4253baf0 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b4253bb68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x20b4253bbe0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x20b425430b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b42542f40 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x20b42542fb8 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20b42543168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42543578 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42543368 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x20b425433e0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42543458 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20b42543630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b425438e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b42543770 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x20b425437e8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x20b42543bd0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425439c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x20b42543a38 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42543ab0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42541fa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b42543d70 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20b42543de8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20b42542050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42542528 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42542250 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20b425422c8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42542340 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20b425425e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42542898 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b42542720 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x20b42542798 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x20b42542b80 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42542970 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20b425429e8 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42542a60 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4253fff8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b42542d20 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20b42542d98 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42542e10 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20b425400b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42540630 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b425402b0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20b42540328 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b425403a0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b42540418 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20b425406f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42540a40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x20b42540830 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20b425408a8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b42540920 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x20b42540dc8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b42540b20 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x20b42540b98 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42540c10 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b42540c88 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4253c080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x20b4253bfa0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x20b4253c128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b4253c4a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b4253c328 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x20b4253c3a0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x20b4253c550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b4253c770 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x20b4253c690 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x20b4253c9b8 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x20b4253c840 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x20b4253c8b8 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4253ccb8 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x20b4253ca98 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x20b4253cb10 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x20b425440f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20b4253ce50 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20b42543f50 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x20b425441a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b425445b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20b425442f0 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x20b42544368 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x20b425443e0 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x20b42544a10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20b42544750 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20b425447c8 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x20b42544840 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x20b42544ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42545fb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x20b42544c10 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x20b42544c88 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x20b42544d00 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x20b42544d78 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x20b42546210 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x20b425460a0 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x20b42546450 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x20b425462e0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x20b42546358 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x20b42546608 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x20b42546528 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x20b425468f8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x20b425466d8 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x20b42546750 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x20b42546b68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x20b42546a90 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x20b42546c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x20b42546e28 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x20b42546d50 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x20b4253eff8 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x20b42546ef8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x20b4253ef00 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20b4253f240 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x20b4253f0d0 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b4253f148 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x20b4253f3f0 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20b4253f318 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x20b4253f598 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x20b4253f4c0 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x20b4253f748 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b4253f668 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x20b4253f8f8 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x20b4253f818 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x20b4253fc70 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20b4253f9d0 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x20b4253fa48 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4253fac0 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b4253fb38 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x20b42548160 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20b4253fd60 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x20b4253fdd8 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b4253fe50 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42547f90 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b42548008 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x20b42548470 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x20b42548250 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x20b425482d0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x20b42548350 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x20b42548630 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x20b42548550 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x20b42548920 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x20b42548700 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x20b42548780 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x20b42548800 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x20b42548ae0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x20b42548a00 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x20b42548e58 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x20b42548bb8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x20b42548c30 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x20b42548ca8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x20b42548d20 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x20b42541098 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20b42540f20 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x20b42540f98 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x20b425413d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x20b42541250 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x20b425412d0 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x20b42541480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x20b42541738 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20b425417d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x20b42541b18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x20b425419a0 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x20b42541a20 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x20b42541bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x20b4254afc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20b4254b060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x20b4254b300 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x20b4254b220 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x20b4254b3a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x20b4254b628 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20b4254b6c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x20b4254b970 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x20b4254b890 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x20b4254ba18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x20b4254bcf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x20b4254bc18 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x20b4254bda0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x20b4254c148 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x20b4254bfd0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x20b4254c048 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x20b4254c1f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x20b4254c4b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x20b4254c558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x20b4254c790 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:49:9, col:58> col:40 __pctype_func 'const unsigned short *(void) __attribute__((cdecl))':'const unsigned short *(void)'
|-VarDecl 0x20b4254c860 <line:51:9, col:38> col:38 _pctype 'const unsigned short *' extern
|-VarDecl 0x20b4254c960 <line:62:9, col:45> col:37 _wctype 'const unsigned short []' extern
|-FunctionDecl 0x20b4254cb58 <line:73:9, col:53> col:34 __pwctype_func 'const wctype_t *(void) __attribute__((cdecl))':'const wctype_t *(void)'
|-VarDecl 0x20b4254cc20 <line:75:9, col:32> col:32 _pwctype 'const wctype_t *' extern
|-FunctionDecl 0x20b4254cea0 <line:119:24, col:72> col:36 _isctype 'int (int, int) __attribute__((cdecl))':'int (int, int)'
| |-ParmVarDecl 0x20b4254ccb8 <col:50, col:54> col:54 _C 'int'
| `-ParmVarDecl 0x20b4254cd38 <col:63, col:67> col:67 _Type 'int'
|-FunctionDecl 0x20b42549278 <line:120:24, col:102> col:36 _isctype_l 'int (int, int, _locale_t) __attribute__((cdecl))':'int (int, int, _locale_t)'
| |-ParmVarDecl 0x20b42548fa0 <col:52, col:56> col:56 _C 'int'
| |-ParmVarDecl 0x20b42549020 <col:65, col:69> col:69 _Type 'int'
| `-ParmVarDecl 0x20b42549098 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42549440 <line:121:55> col:55 implicit isalpha 'int (int)' extern
| |-ParmVarDecl 0x20b425494e0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b42549550 <col:55> Implicit
| `-PureAttr 0x20b425495a8 <col:55> Implicit
|-FunctionDecl 0x20b425495d0 prev 0x20b42549440 <col:43, col:74> col:55 isalpha 'int (int)'
| |-ParmVarDecl 0x20b42549360 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20b425496c0 <col:55> Inherited Implicit
| `-PureAttr 0x20b425496e8 <col:55> Inherited Implicit
|-FunctionDecl 0x20b42549950 <line:122:24, col:86> col:36 _isalpha_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b42549728 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b425497a0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42549b10 <line:123:55> col:55 implicit isupper 'int (int)' extern
| |-ParmVarDecl 0x20b42549bb0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b42549c20 <col:55> Implicit
| `-PureAttr 0x20b42549c78 <col:55> Implicit
|-FunctionDecl 0x20b42549ca0 prev 0x20b42549b10 <col:43, col:74> col:55 isupper 'int (int)'
| |-ParmVarDecl 0x20b42549a30 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20b42549d90 <col:55> Inherited Implicit
| `-PureAttr 0x20b42549db8 <col:55> Inherited Implicit
|-FunctionDecl 0x20b4254dff0 <line:124:24, col:86> col:36 _isupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b42549df8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b42549e70 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4254e1b0 <line:125:55> col:55 implicit islower 'int (int)' extern
| |-ParmVarDecl 0x20b4254e250 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b4254e2c0 <col:55> Implicit
| `-PureAttr 0x20b4254e318 <col:55> Implicit
|-FunctionDecl 0x20b4254e340 prev 0x20b4254e1b0 <col:43, col:74> col:55 islower 'int (int)'
| |-ParmVarDecl 0x20b4254e0d0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20b4254e430 <col:55> Inherited Implicit
| `-PureAttr 0x20b4254e458 <col:55> Inherited Implicit
|-FunctionDecl 0x20b4254e610 <line:126:24, col:86> col:36 _islower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b4254e498 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b4254e510 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4254e7d0 <line:127:55> col:55 implicit used isdigit 'int (int)' extern
| |-ParmVarDecl 0x20b4254e870 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b4254e8e0 <col:55> Implicit
| `-PureAttr 0x20b4254e938 <col:55> Implicit
|-FunctionDecl 0x20b4254e960 prev 0x20b4254e7d0 <col:43, col:74> col:55 used isdigit 'int (int)'
| |-ParmVarDecl 0x20b4254e6f0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20b4254ea50 <col:55> Inherited Implicit
| `-PureAttr 0x20b4254ea78 <col:55> Inherited Implicit
|-FunctionDecl 0x20b4254ec30 <line:128:24, col:86> col:36 _isdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b4254eab8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b4254eb30 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4254edf0 <line:129:36> col:36 implicit used isxdigit 'int (int)' extern
| |-ParmVarDecl 0x20b4254ee90 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b4254ef00 <col:36> Implicit
| `-PureAttr 0x20b4254ef58 <col:36> Implicit
|-FunctionDecl 0x20b4254f000 prev 0x20b4254edf0 <col:24, col:56> col:36 used isxdigit 'int (int)'
| |-ParmVarDecl 0x20b4254ed10 <col:50, col:54> col:54 _C 'int'
| |-NoThrowAttr 0x20b4254f0f0 <col:36> Inherited Implicit
| `-PureAttr 0x20b4254f118 <col:36> Inherited Implicit
|-FunctionDecl 0x20b4254f2d0 <line:130:24, col:87> col:36 _isxdigit_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b4254f158 <col:53, col:57> col:57 _C 'int'
| `-ParmVarDecl 0x20b4254f1d0 <col:70, col:80> col:80 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4254f490 <line:131:55> col:55 implicit isspace 'int (int)' extern
| |-ParmVarDecl 0x20b4254f530 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b4254f5a0 <col:55> Implicit
| `-PureAttr 0x20b4254f5f8 <col:55> Implicit
|-FunctionDecl 0x20b4254f620 prev 0x20b4254f490 <col:43, col:74> col:55 isspace 'int (int)'
| |-ParmVarDecl 0x20b4254f3b0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20b4254f710 <col:55> Inherited Implicit
| `-PureAttr 0x20b4254f738 <col:55> Inherited Implicit
|-FunctionDecl 0x20b4254f8f0 <line:132:24, col:86> col:36 _isspace_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b4254f778 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b4254f7f0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4254fab0 <line:133:36> col:36 implicit ispunct 'int (int)' extern
| |-ParmVarDecl 0x20b4254fb50 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b4254fbc0 <col:36> Implicit
| `-PureAttr 0x20b4254fc18 <col:36> Implicit
|-FunctionDecl 0x20b4254fc40 prev 0x20b4254fab0 <col:24, col:55> col:36 ispunct 'int (int)'
| |-ParmVarDecl 0x20b4254f9d0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20b4254fd30 <col:36> Inherited Implicit
| `-PureAttr 0x20b4254fd58 <col:36> Inherited Implicit
|-FunctionDecl 0x20b4254ff10 <line:134:24, col:86> col:36 _ispunct_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b4254fd98 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b4254fe10 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b425540a0 <line:135:36> col:36 implicit isblank 'int (int)' extern
| |-ParmVarDecl 0x20b42554140 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b425541b0 <col:36> Implicit
| `-PureAttr 0x20b42554208 <col:36> Implicit
|-FunctionDecl 0x20b42554230 prev 0x20b425540a0 <col:24, col:55> col:36 isblank 'int (int)'
| |-ParmVarDecl 0x20b42553fc0 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20b42554320 <col:36> Inherited Implicit
| `-PureAttr 0x20b42554348 <col:36> Inherited Implicit
|-FunctionDecl 0x20b42554500 <line:136:24, col:86> col:36 _isblank_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b42554388 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b42554400 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b425546c0 <line:137:55> col:55 implicit isalnum 'int (int)' extern
| |-ParmVarDecl 0x20b42554760 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b425547d0 <col:55> Implicit
| `-PureAttr 0x20b42554828 <col:55> Implicit
|-FunctionDecl 0x20b42554850 prev 0x20b425546c0 <col:43, col:74> col:55 isalnum 'int (int)'
| |-ParmVarDecl 0x20b425545e0 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20b42554940 <col:55> Inherited Implicit
| `-PureAttr 0x20b42554968 <col:55> Inherited Implicit
|-FunctionDecl 0x20b42554b20 <line:138:24, col:86> col:36 _isalnum_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b425549a8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b42554a20 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42554ce0 <line:139:36> col:36 implicit isprint 'int (int)' extern
| |-ParmVarDecl 0x20b42554d80 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b42554df0 <col:36> Implicit
| `-PureAttr 0x20b42554e48 <col:36> Implicit
|-FunctionDecl 0x20b42554e70 prev 0x20b42554ce0 <col:24, col:55> col:36 isprint 'int (int)'
| |-ParmVarDecl 0x20b42554c00 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20b42554f60 <col:36> Inherited Implicit
| `-PureAttr 0x20b42554f88 <col:36> Inherited Implicit
|-FunctionDecl 0x20b42552130 <line:140:24, col:86> col:36 _isprint_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b42551fb8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b42552030 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b425522f0 <line:141:36> col:36 implicit isgraph 'int (int)' extern
| |-ParmVarDecl 0x20b42552390 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b42552400 <col:36> Implicit
| `-PureAttr 0x20b42552458 <col:36> Implicit
|-FunctionDecl 0x20b42552480 prev 0x20b425522f0 <col:24, col:55> col:36 isgraph 'int (int)'
| |-ParmVarDecl 0x20b42552210 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20b42552570 <col:36> Inherited Implicit
| `-PureAttr 0x20b42552598 <col:36> Inherited Implicit
|-FunctionDecl 0x20b42552750 <line:142:24, col:86> col:36 _isgraph_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b425525d8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b42552650 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42552910 <line:143:36> col:36 implicit iscntrl 'int (int)' extern
| |-ParmVarDecl 0x20b425529b0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b42552a20 <col:36> Implicit
| `-PureAttr 0x20b42552a78 <col:36> Implicit
|-FunctionDecl 0x20b42552aa0 prev 0x20b42552910 <col:24, col:55> col:36 iscntrl 'int (int)'
| |-ParmVarDecl 0x20b42552830 <col:49, col:53> col:53 _C 'int'
| |-NoThrowAttr 0x20b42552b90 <col:36> Inherited Implicit
| `-PureAttr 0x20b42552bb8 <col:36> Inherited Implicit
|-FunctionDecl 0x20b42552d70 <line:144:24, col:86> col:36 _iscntrl_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b42552bf8 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b42552c70 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42558000 <line:145:55> col:55 implicit toupper 'int (int)' extern
| |-ParmVarDecl 0x20b425580a0 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b42558110 <col:55> Implicit
| `-PureAttr 0x20b42558168 <col:55> Implicit
|-FunctionDecl 0x20b42558190 prev 0x20b42558000 <col:43, col:74> col:55 toupper 'int (int)'
| |-ParmVarDecl 0x20b42552e50 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20b42558280 <col:55> Inherited Implicit
| `-PureAttr 0x20b425582a8 <col:55> Inherited Implicit
|-FunctionDecl 0x20b425583c8 <line:146:55> col:55 implicit tolower 'int (int)' extern
| |-ParmVarDecl 0x20b42558468 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x20b425584d8 <col:55> Implicit
| `-PureAttr 0x20b42558530 <col:55> Implicit
|-FunctionDecl 0x20b42558558 prev 0x20b425583c8 <col:43, col:74> col:55 tolower 'int (int)'
| |-ParmVarDecl 0x20b425582e8 <col:68, col:72> col:72 _C 'int'
| |-NoThrowAttr 0x20b42558648 <col:55> Inherited Implicit
| `-PureAttr 0x20b42558670 <col:55> Inherited Implicit
|-FunctionDecl 0x20b42558790 <line:147:43, col:75> col:55 _tolower 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20b425586b0 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x20b425589e0 <line:148:24, col:86> col:36 _tolower_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b42558868 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b425588e0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42558ba0 <line:149:43, col:75> col:55 _toupper 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20b42558ac0 <col:69, col:73> col:73 _C 'int'
|-FunctionDecl 0x20b42558df0 <line:150:24, col:86> col:36 _toupper_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b42558c78 <col:52, col:56> col:56 _C 'int'
| `-ParmVarDecl 0x20b42558cf0 <col:69, col:79> col:79 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42554fd0 <line:151:24, col:57> col:36 __isascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20b42558ed0 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x20b42555188 <line:152:24, col:57> col:36 __toascii 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20b425550a8 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x20b42555340 <line:153:24, col:57> col:36 __iscsymf 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20b42555260 <col:51, col:55> col:55 _C 'int'
|-FunctionDecl 0x20b425554f8 <line:154:24, col:56> col:36 __iscsym 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20b42555418 <col:50, col:54> col:54 _C 'int'
|-FunctionDecl 0x20b42555748 <line:164:24, col:59> col:36 iswalpha 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b425555c8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42555a40 <line:165:24, col:90> col:36 _iswalpha_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b42555818 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42555890 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42555bf8 <line:166:24, col:59> col:36 iswupper 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b42555b18 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42555e40 <line:167:24, col:90> col:36 _iswupper_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b42555cc8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42555d40 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42556018 <line:168:24, col:59> col:36 iswlower 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b42555f18 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42556260 <line:169:24, col:90> col:36 _iswlower_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b425560e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42556160 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42556418 <line:170:24, col:59> col:36 iswdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b42556338 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42556660 <line:171:24, col:90> col:36 _iswdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b425564e8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42556560 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42556818 <line:172:24, col:60> col:36 iswxdigit 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b42556738 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42556a60 <line:173:24, col:91> col:36 _iswxdigit_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b425568e8 <col:54, col:61> col:61 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42556960 <col:74, col:84> col:84 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42556c18 <line:174:24, col:59> col:36 iswspace 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b42556b38 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42556e60 <line:175:24, col:90> col:36 _iswspace_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b42556ce8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42556d60 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42559048 <line:176:24, col:59> col:36 iswpunct 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b42556f38 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42559290 <line:177:24, col:90> col:36 _iswpunct_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b42559118 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42559190 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42559448 <line:178:24, col:59> col:36 iswblank 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b42559368 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42559690 <line:179:24, col:90> col:36 _iswblank_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b42559518 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42559590 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42559848 <line:180:24, col:59> col:36 iswalnum 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b42559768 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42559a90 <line:181:24, col:90> col:36 _iswalnum_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b42559918 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42559990 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42559c48 <line:182:24, col:59> col:36 iswprint 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b42559b68 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42559e90 <line:183:24, col:90> col:36 _iswprint_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b42559d18 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42559d90 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4255a058 <line:184:24, col:59> col:36 iswgraph 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b42559f68 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b4255a2a0 <line:185:24, col:90> col:36 _iswgraph_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b4255a128 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b4255a1a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4255a458 <line:186:24, col:59> col:36 iswcntrl 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b4255a378 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b4255a6a0 <line:187:24, col:90> col:36 _iswcntrl_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b4255a528 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b4255a5a0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4255a858 <line:188:24, col:59> col:36 iswascii 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b4255a778 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b4255aa70 <line:190:24, col:62> col:39 towupper 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x20b4255a928 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b4255ad58 <line:191:24, col:93> col:39 _towupper_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b4255ab40 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b4255abb8 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b4255af08 <line:192:24, col:62> col:39 towlower 'wint_t (wint_t) __attribute__((cdecl))':'wint_t (wint_t)'
| `-ParmVarDecl 0x20b4255ae30 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42553120 <line:193:24, col:93> col:39 _towlower_l 'wint_t (wint_t, _locale_t) __attribute__((cdecl))':'wint_t (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b42552fb0 <col:56, col:63> col:63 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42553028 <col:76, col:86> col:86 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42553420 <line:194:24, col:80> col:36 iswctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x20b425531f8 <col:50, col:57> col:57 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42553270 <col:66, col:75> col:75 _Type 'wctype_t':'unsigned short'
|-FunctionDecl 0x20b425537c8 <line:195:24, col:111> col:36 _iswctype_l 'int (wint_t, wctype_t, _locale_t) __attribute__((cdecl))':'int (wint_t, wctype_t, _locale_t)'
| |-ParmVarDecl 0x20b425534f8 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x20b42553570 <col:69, col:78> col:78 _Type 'wctype_t':'unsigned short'
| `-ParmVarDecl 0x20b425535e8 <col:94, col:104> col:104 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42553988 <line:197:24, col:61> col:36 __iswcsymf 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b425538a8 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b42553bd0 <line:198:24, col:90> col:36 _iswcsymf_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b42553a58 <col:53, col:60> col:60 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42553ad0 <col:73, col:83> col:83 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42553d88 <line:199:24, col:60> col:36 __iswcsym 'int (wint_t) __attribute__((cdecl))':'int (wint_t)'
| `-ParmVarDecl 0x20b42553ca8 <col:51, col:58> col:58 _C 'wint_t':'unsigned short'
|-FunctionDecl 0x20b425600c0 <line:200:24, col:89> col:36 _iswcsym_l 'int (wint_t, _locale_t) __attribute__((cdecl))':'int (wint_t, _locale_t)'
| |-ParmVarDecl 0x20b42553e58 <col:52, col:59> col:59 _C 'wint_t':'unsigned short'
| `-ParmVarDecl 0x20b42553ed0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42560280 <line:203:24, col:58> col:36 isleadbyte 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x20b425601a0 <col:52, col:56> col:56 _C 'int'
|-FunctionDecl 0x20b425604d0 <line:204:24, col:89> col:36 _isleadbyte_l 'int (int, _locale_t) __attribute__((cdecl))':'int (int, _locale_t)'
| |-ParmVarDecl 0x20b42560358 <col:55, col:59> col:59 _C 'int'
| `-ParmVarDecl 0x20b425603d0 <col:72, col:82> col:82 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b425607e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:205:90> col:45 is_wctype 'int (wint_t, wctype_t) __attribute__((cdecl))':'int (wint_t, wctype_t)'
| |-ParmVarDecl 0x20b42560668 <col:60, col:67> col:67 _C 'wint_t':'unsigned short'
| |-ParmVarDecl 0x20b425606e0 <col:76, col:85> col:85 _Type 'wctype_t':'unsigned short'
| `-DeprecatedAttr 0x20b42560890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using iswctype instead. See online help for details." ""
|-VarDecl 0x20b425609d8 <D:\Microsoft Visual Studio 12.0\VC\include\ctype.h:235:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x20b42560b28 <line:239:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x20b42560d58 <line:240:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x20b42560bf0 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x20b42566128 <.//openssl//file_jk/after\crypto\bn/bn_lcl.h:220:1, line:221:37> line:220:10 invalid bn_mul_add_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x20b42560e30 <col:27, col:37> col:37 invalid rp 'int *'
| |-ParmVarDecl 0x20b42560eb0 <col:41, col:57> col:57 invalid ap 'const int *'
| |-ParmVarDecl 0x20b42560f30 <col:61, col:65> col:65 num 'int'
| `-ParmVarDecl 0x20b42560fb0 <line:221:27, col:36> col:36 invalid w 'int'
|-FunctionDecl 0x20b42566430 <line:222:1, col:76> col:10 invalid bn_mul_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x20b42566200 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x20b42566280 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x20b42566300 <col:57, col:61> col:61 num 'int'
| `-ParmVarDecl 0x20b42566380 <col:66, col:75> col:75 invalid w 'int'
|-FunctionDecl 0x20b425666e8 <line:223:1, col:60> col:6 invalid bn_sqr_words 'void (int *, const int *, int)'
| |-ParmVarDecl 0x20b42566508 <col:19, col:29> col:29 invalid rp 'int *'
| |-ParmVarDecl 0x20b42566588 <col:33, col:49> col:49 invalid ap 'const int *'
| `-ParmVarDecl 0x20b42566608 <col:53, col:57> col:57 num 'int'
|-FunctionDecl 0x20b425669a0 <line:224:1, col:57> col:10 invalid bn_div_words 'int (int, int, int)'
| |-ParmVarDecl 0x20b425667b8 <col:23, col:32> col:32 invalid h 'int'
| |-ParmVarDecl 0x20b42566838 <col:35, col:44> col:44 invalid l 'int'
| `-ParmVarDecl 0x20b425668b8 <col:47, col:56> col:56 invalid d 'int'
|-FunctionDecl 0x20b42566cf0 <line:225:1, line:226:30> line:225:10 invalid bn_add_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x20b42566a70 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x20b42566af0 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x20b42566b70 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x20b42566bf0 <line:226:23, col:27> col:27 num 'int'
|-FunctionDecl 0x20b42566ff8 <line:227:1, line:228:30> line:227:10 invalid bn_sub_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x20b42566dc8 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x20b42566e48 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x20b42566ec8 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x20b42566f48 <line:228:23, col:27> col:27 num 'int'
|-RecordDecl 0x20b4256c140 <line:230:1, line:238:1> line:230:8 invalid struct bignum_st definition
| |-FieldDecl 0x20b4256c218 <line:231:5, col:15> col:15 invalid d 'int *'
| |-FieldDecl 0x20b4256c288 <line:233:5, col:9> col:9 top 'int'
| |-FieldDecl 0x20b4256c2f8 <line:235:5, col:9> col:9 dmax 'int'
| |-FieldDecl 0x20b4256c368 <line:236:5, col:9> col:9 neg 'int'
| `-FieldDecl 0x20b4256c3d8 <line:237:5, col:9> col:9 flags 'int'
|-RecordDecl 0x20b4256c430 <line:241:1, line:252:1> line:241:8 invalid struct bn_mont_ctx_st definition
| |-FieldDecl 0x20b4256c508 <line:242:5, col:9> col:9 ri 'int'
| |-FieldDecl 0x20b4256c578 <line:243:5, col:12> col:12 invalid RR 'int'
| |-FieldDecl 0x20b4256c5e8 <line:245:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x20b4256c658 <line:246:5, col:12> col:12 invalid Ni 'int'
| |-FieldDecl 0x20b4256c750 <line:248:5, <invalid sloc>> col:14 invalid n0 'int [2]'
| `-FieldDecl 0x20b4256c7c0 <line:251:5, col:9> col:9 flags 'int'
|-RecordDecl 0x20b4256c818 <line:258:1, line:264:1> line:258:8 invalid struct bn_recp_ctx_st definition
| |-FieldDecl 0x20b4256c8e8 <line:259:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x20b4256c958 <line:260:5, col:12> col:12 invalid Nr 'int'
| |-FieldDecl 0x20b4256c9c8 <line:261:5, col:9> col:9 num_bits 'int'
| |-FieldDecl 0x20b4256ca38 <line:262:5, col:9> col:9 shift 'int'
| `-FieldDecl 0x20b4256caa8 <line:263:5, col:9> col:9 flags 'int'
|-RecordDecl 0x20b4256cb00 <line:267:1, line:276:1> line:267:8 struct bn_gencb_st definition
| |-FieldDecl 0x20b4256cbd8 <line:268:5, col:18> col:18 ver 'unsigned int'
| |-FieldDecl 0x20b4256cc48 <line:269:5, col:11> col:11 arg 'void *'
| |-RecordDecl 0x20b4256cca0 <line:270:5, line:275:5> line:270:5 union definition
| | |-FieldDecl 0x20b4256cff0 <line:272:9, col:39> col:16 cb_1 'void (*)(int, int, void *)'
| | `-FieldDecl 0x20b4256d358 <line:274:9, col:42> col:15 cb_2 'int (*)(int, int, int *)'
| `-FieldDecl 0x20b4256d408 <line:270:5, line:275:7> col:7 cb 'union (anonymous union at .//openssl//file_jk/after\crypto\bn/bn_lcl.h:270:5)':'union bn_gencb_st::(anonymous at .//openssl//file_jk/after\crypto\bn/bn_lcl.h:270:5)'
|-FunctionDecl 0x20b4256d598 <line:649:1, col:40> col:6 invalid BN_RECP_CTX_init 'void (int *)'
| `-ParmVarDecl 0x20b4256d4d8 <col:23, col:36> col:36 invalid recp 'int *'
|-FunctionDecl 0x20b4256d6e8 <line:650:1, col:39> col:6 invalid BN_MONT_CTX_init 'void (int *)'
| `-ParmVarDecl 0x20b4256d658 <col:23, col:36> col:36 invalid ctx 'int *'
|-FunctionDecl 0x20b4256d838 <line:652:1, col:23> col:6 invalid bn_init 'void (int *)'
| `-ParmVarDecl 0x20b4256d7a8 <col:14, col:22> col:22 invalid a 'int *'
|-FunctionDecl 0x20b4256dbf8 <line:653:1, col:73> col:6 invalid bn_mul_normal 'void (int *, int *, int, int *, int)'
| |-ParmVarDecl 0x20b4256d8f8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x20b4256d978 <col:33, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x20b4256d9f8 <col:46, col:50> col:50 na 'int'
| |-ParmVarDecl 0x20b4256da78 <col:54, col:64> col:64 invalid b 'int *'
| `-ParmVarDecl 0x20b4256daf8 <col:67, col:71> col:71 nb 'int'
|-FunctionDecl 0x20b4256deb8 <line:654:1, col:57> col:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
| |-ParmVarDecl 0x20b4256dcd8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x20b4256dd58 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x20b4256ddd8 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x20b42568100 <line:655:1, col:57> col:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
| |-ParmVarDecl 0x20b4256df88 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x20b4256e008 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x20b4256e088 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x20b42568448 <line:656:1, col:72> col:6 invalid bn_sqr_normal 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x20b425681d0 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x20b42568250 <col:33, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x20b425682d0 <col:52, col:56> col:56 n 'int'
| `-ParmVarDecl 0x20b42568350 <col:59, col:69> col:69 invalid tmp 'int *'
|-FunctionDecl 0x20b42568678 <line:657:1, col:50> col:6 invalid bn_sqr_comba8 'void (int *, const int *)'
| |-ParmVarDecl 0x20b42568520 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x20b425685a0 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x20b42568858 <line:658:1, col:50> col:6 invalid bn_sqr_comba4 'void (int *, const int *)'
| |-ParmVarDecl 0x20b42568740 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x20b425687c0 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x20b42568b10 <line:659:1, col:61> col:5 invalid bn_cmp_words 'int (const int *, const int *, int)'
| |-ParmVarDecl 0x20b42568920 <col:18, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x20b425689a0 <col:37, col:53> col:53 invalid b 'const int *'
| `-ParmVarDecl 0x20b42568a20 <col:56, col:60> col:60 n 'int'
|-FunctionDecl 0x20b42568e60 <line:660:1, col:75> col:5 invalid bn_cmp_part_words 'int (const int *, const int *, int, int)'
| |-ParmVarDecl 0x20b42568be0 <col:23, col:39> col:39 invalid a 'const int *'
| |-ParmVarDecl 0x20b42568c60 <col:42, col:58> col:58 invalid b 'const int *'
| |-ParmVarDecl 0x20b42568ce0 <col:61, col:65> col:65 cl 'int'
| `-ParmVarDecl 0x20b42568d60 <col:69, col:73> col:73 dl 'int'
|-FunctionDecl 0x20b42570428 <line:661:1, line:662:52> line:661:6 invalid bn_mul_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x20b42568f38 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x20b42568fb8 <col:36, col:46> col:46 invalid a 'int *'
| |-ParmVarDecl 0x20b42569038 <col:49, col:59> col:59 invalid b 'int *'
| |-ParmVarDecl 0x20b42570180 <col:62, col:66> col:66 n2 'int'
| |-ParmVarDecl 0x20b42570200 <line:662:23, col:27> col:27 dna 'int'
| |-ParmVarDecl 0x20b42570280 <col:32, col:36> col:36 dnb 'int'
| `-ParmVarDecl 0x20b42570300 <col:41, col:51> col:51 invalid t 'int *'
|-FunctionDecl 0x20b425708d8 <line:663:1, line:664:64> line:663:6 invalid bn_mul_part_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x20b42570518 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x20b42570598 <col:41, col:51> col:51 invalid a 'int *'
| |-ParmVarDecl 0x20b42570618 <col:54, col:64> col:64 invalid b 'int *'
| |-ParmVarDecl 0x20b42570698 <line:664:28, col:32> col:32 n 'int'
| |-ParmVarDecl 0x20b42570718 <col:35, col:39> col:39 tna 'int'
| |-ParmVarDecl 0x20b42570798 <col:44, col:48> col:48 tnb 'int'
| `-ParmVarDecl 0x20b42570818 <col:53, col:63> col:63 invalid t 'int *'
|-FunctionDecl 0x20b42570bf0 <line:665:1, col:74> col:6 invalid bn_sqr_recursive 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x20b425709c8 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x20b42570a48 <col:36, col:52> col:52 invalid a 'const int *'
| |-ParmVarDecl 0x20b42570ac8 <col:55, col:59> col:59 n2 'int'
| `-ParmVarDecl 0x20b42570b48 <col:63, col:73> col:73 invalid t 'int *'
|-FunctionDecl 0x20b42570f38 <line:666:1, col:68> col:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
| |-ParmVarDecl 0x20b42570cc8 <col:24, col:34> col:34 invalid r 'int *'
| |-ParmVarDecl 0x20b42570d48 <col:37, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x20b42570dc8 <col:50, col:60> col:60 invalid b 'int *'
| `-ParmVarDecl 0x20b42570e48 <col:63, col:67> col:67 n 'int'
|-FunctionDecl 0x20b42571328 <line:667:1, line:668:38> line:667:6 invalid bn_mul_low_recursive 'void (int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x20b42571010 <col:27, col:37> col:37 invalid r 'int *'
| |-ParmVarDecl 0x20b42571090 <col:40, col:50> col:50 invalid a 'int *'
| |-ParmVarDecl 0x20b42571110 <col:53, col:63> col:63 invalid b 'int *'
| |-ParmVarDecl 0x20b425711a8 <col:66, col:70> col:70 n2 'int'
| `-ParmVarDecl 0x20b42571228 <line:668:27, col:37> col:37 invalid t 'int *'
|-FunctionDecl 0x20b42571798 <line:669:1, line:670:29> line:669:6 invalid bn_mul_high 'void (int *, int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x20b42571408 <col:18, col:28> col:28 invalid r 'int *'
| |-ParmVarDecl 0x20b42571488 <col:31, col:41> col:41 invalid a 'int *'
| |-ParmVarDecl 0x20b42571508 <col:44, col:54> col:54 invalid b 'int *'
| |-ParmVarDecl 0x20b42571588 <col:57, col:67> col:67 invalid l 'int *'
| |-ParmVarDecl 0x20b42571608 <col:70, col:74> col:74 n2 'int'
| `-ParmVarDecl 0x20b42571688 <line:670:18, col:28> col:28 invalid t 'int *'
|-FunctionDecl 0x20b42571b90 <line:671:1, line:672:42> line:671:10 invalid bn_add_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x20b42571880 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x20b42571900 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x20b42571980 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x20b42571a00 <line:672:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x20b42571a80 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x20b42571f28 <line:673:1, line:674:42> line:673:10 invalid bn_sub_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x20b42571c70 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x20b42571cf0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x20b42571d70 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x20b42571df0 <line:674:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x20b42571e70 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x20b4256a340 <line:675:1, line:676:64> line:675:5 invalid bn_mul_mont 'int (int *, const int *, const int *, const int *, const int *, int)'
| |-ParmVarDecl 0x20b42572008 <col:17, col:27> col:27 invalid rp 'int *'
| |-ParmVarDecl 0x20b42572088 <col:31, col:47> col:47 invalid ap 'const int *'
| |-ParmVarDecl 0x20b42572108 <col:51, col:67> col:67 invalid bp 'const int *'
| |-ParmVarDecl 0x20b4256a120 <line:676:17, col:33> col:33 invalid np 'const int *'
| |-ParmVarDecl 0x20b4256a1a0 <col:37, col:53> col:53 invalid n0 'const int *'
| `-ParmVarDecl 0x20b4256a220 <col:57, col:61> col:61 num 'int'
|-FunctionDecl 0x20b4256a730 <line:678:1, line:680:38> line:678:9 invalid int_bn_mod_inverse 'int *(int *, const int *, const int *, int *, int *)'
| |-ParmVarDecl 0x20b4256a428 <col:28, col:36> col:36 invalid in 'int *'
| |-ParmVarDecl 0x20b4256a4a8 <line:679:28, col:42> col:42 invalid a 'const int *'
| |-ParmVarDecl 0x20b4256a528 <col:45, col:59> col:59 invalid n 'const int *'
| |-ParmVarDecl 0x20b4256a5a8 <col:62, col:70> col:70 invalid ctx 'int *'
| `-ParmVarDecl 0x20b4256a628 <line:680:28, col:33> col:33 noinv 'int *'
|-FunctionDecl 0x20b4256ab20 <line:682:1, line:683:75> line:682:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x20b4256a810 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x20b4256a890 <col:39, col:43> col:43 bits 'int'
| |-ParmVarDecl 0x20b4256a910 <line:683:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x20b4256a990 <col:45, col:59> col:59 invalid rem 'const int *'
| `-ParmVarDecl 0x20b4256aa10 <col:64, col:72> col:72 invalid ctx 'int *'
|-FunctionDecl 0x20b4256adf0 <line:684:1, col:66> col:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x20b4256ac00 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x20b4256ac80 <col:45, col:49> col:49 bits 'int'
| `-ParmVarDecl 0x20b4256ad00 <col:55, col:63> col:63 invalid ctx 'int *'
|-FunctionDecl 0x20b4256b068 <line:685:1, col:68> col:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x20b4256aec0 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x20b4256af40 <col:47, col:51> col:51 bits 'int'
| `-ParmVarDecl 0x20b4256afc0 <col:57, col:65> col:65 invalid ctx 'int *'
|-VarDecl 0x20b42577208 <line:687:1, col:20> col:20 invalid BIGNUM 'int' static
|-FunctionDecl 0x20b42577350 <.//openssl//file_jk/after\crypto\bn\bn_print.c:20:1, line:50:1> line:20:7 invalid BN_bn2hex 'char *(const int *)'
| |-ParmVarDecl 0x20b42577288 <col:17, col:31> col:31 invalid a 'const int *'
| `-CompoundStmt 0x20b42573960 <line:21:1, line:50:1>
|   |-DeclStmt 0x20b42577660 <line:22:5, col:23>
|   | |-VarDecl 0x20b42577428 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x20b425774a8 <col:5, col:12> col:12 used j 'int'
|   | |-VarDecl 0x20b42577528 <col:5, col:15> col:15 used v 'int'
|   | `-VarDecl 0x20b425775a8 <col:5, col:22> col:18 used z 'int' cinit
|   |   `-IntegerLiteral 0x20b42577610 <col:22> 'int' 0
|   |-DeclStmt 0x20b425776f8 <line:23:5, col:14>
|   | `-VarDecl 0x20b42577690 <col:5, col:11> col:11 used buf 'char *'
|   |-DeclStmt 0x20b42577790 <line:24:5, col:12>
|   | `-VarDecl 0x20b42577728 <col:5, col:11> col:11 used p 'char *'
|   |-IfStmt 0x20b42577b20 <line:26:5, line:27:34>
|   | |-OpaqueValueExpr 0x20b42577b08 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20b42577af8 <col:9, col:34>
|   |   `-ImplicitCastExpr 0x20b42577ae0 <col:16, col:34> 'char *' <IntegralToPointer>
|   |     `-CallExpr 0x20b42577aa0 <col:16, col:34> 'int'
|   |       |-ImplicitCastExpr 0x20b42577a88 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x20b425779d8 <col:16> 'int ()' Function 0x20b42577910 'OPENSSL_strdup' 'int ()'
|   |       `-ImplicitCastExpr 0x20b42577ac8 <col:31> 'char *' <ArrayToPointerDecay>
|   |         `-StringLiteral 0x20b42577a38 <col:31> 'char [2]' lvalue "0"
|   |-IfStmt 0x20b42577f58 <line:29:5, line:32:5>
|   | |-BinaryOperator 0x20b42577da8 <line:29:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x20b42577d78 <.//openssl//file_jk/after\crypto\bn\bn_print.c:29:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20b42577cd0 <col:9> 'char *' lvalue Var 0x20b42577690 'buf' 'char *'
|   | | `-ImplicitCastExpr 0x20b42577d90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x20b42577d58 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x20b42577d30 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x20b42577cf0 <col:26> 'int' 0
|   | `-CompoundStmt 0x20b42577f40 <.//openssl//file_jk/after\crypto\bn\bn_print.c:29:22, line:32:5>
|   |   `-GotoStmt 0x20b42577f28 <line:31:9, col:14> 'err' 0x20b42577ed8
|   |-BinaryOperator 0x20b42577fe0 <line:33:5, col:9> 'char *' '='
|   | |-DeclRefExpr 0x20b42577f70 <col:5> 'char *' lvalue Var 0x20b42577728 'p' 'char *'
|   | `-ImplicitCastExpr 0x20b42577fc8 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x20b42577fa8 <col:9> 'char *' lvalue Var 0x20b42577690 'buf' 'char *'
|   |-IfStmt 0x20b425780d8 <line:34:5, line:35:18>
|   | |-OpaqueValueExpr 0x20b425780c0 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x20b425780a0 <col:9, col:18> 'char' '='
|   |   |-UnaryOperator 0x20b42578058 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   |   | `-ParenExpr 0x20b42578038 <col:10, col:14> 'char *'
|   |   |   `-UnaryOperator 0x20b42578020 <col:11, col:12> 'char *' postfix '++'
|   |   |     `-DeclRefExpr 0x20b42578000 <col:11> 'char *' lvalue Var 0x20b42577728 'p' 'char *'
|   |   `-ImplicitCastExpr 0x20b42578088 <col:18> 'char' <IntegralCast>
|   |     `-CharacterLiteral 0x20b42578070 <col:18> 'int' 45
|   |-ForStmt 0x20b42573808 <line:36:5, line:46:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x20b425781b0 <line:36:26, col:31> 'int' '>='
|   | | |-ImplicitCastExpr 0x20b42578198 <col:26> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20b42578150 <col:26> 'int' lvalue Var 0x20b42577428 'i' 'int'
|   | | `-IntegerLiteral 0x20b42578170 <col:31> 'int' 0
|   | |-UnaryOperator 0x20b425731b0 <col:34, col:35> 'int' postfix '--'
|   | | `-DeclRefExpr 0x20b425781d0 <col:34> 'int' lvalue Var 0x20b42577428 'i' 'int'
|   | `-CompoundStmt 0x20b425737f0 <col:39, line:46:5>
|   |   `-ForStmt 0x20b425737b8 <line:37:9, line:45:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x20b42573288 <line:37:32, col:37> 'int' '>='
|   |     | |-ImplicitCastExpr 0x20b42573270 <col:32> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x20b42573228 <col:32> 'int' lvalue Var 0x20b425774a8 'j' 'int'
|   |     | `-IntegerLiteral 0x20b42573248 <col:37> 'int' 0
|   |     |-CompoundAssignOperator 0x20b425732f0 <col:40, col:45> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-DeclRefExpr 0x20b425732a8 <col:40> 'int' lvalue Var 0x20b425774a8 'j' 'int'
|   |     | `-IntegerLiteral 0x20b425732c8 <col:45> 'int' 8
|   |     `-CompoundStmt 0x20b425737a0 <col:48, line:45:9>
|   |       `-IfStmt 0x20b42573788 <line:40:13, line:44:13>
|   |         |-BinaryOperator 0x20b42573508 <line:40:17, col:29> 'int' '||'
|   |         | |-ImplicitCastExpr 0x20b425734f0 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x20b42573418 <col:17> 'int' lvalue Var 0x20b425775a8 'z' 'int'
|   |         | `-ParenExpr 0x20b425734d0 <col:22, col:29> 'int'
|   |         |   `-BinaryOperator 0x20b425734b0 <col:23, col:28> 'int' '!='
|   |         |     |-ImplicitCastExpr 0x20b42573498 <col:23> 'int' <LValueToRValue>
|   |         |     | `-DeclRefExpr 0x20b42573450 <col:23> 'int' lvalue Var 0x20b42577528 'v' 'int'
|   |         |     `-IntegerLiteral 0x20b42573470 <col:28> 'int' 0
|   |         `-CompoundStmt 0x20b42573770 <col:32, line:44:13>
|   |           `-BinaryOperator 0x20b42573750 <line:43:17, col:21> 'int' '='
|   |             |-DeclRefExpr 0x20b42573708 <col:17> 'int' lvalue Var 0x20b425775a8 'z' 'int'
|   |             `-IntegerLiteral 0x20b42573728 <col:21> 'int' 1
|   |-BinaryOperator 0x20b425738c0 <line:47:5, col:10> 'char' '='
|   | |-UnaryOperator 0x20b42573878 <col:5, col:6> 'char' lvalue prefix '*' cannot overflow
|   | | `-ImplicitCastExpr 0x20b42573860 <col:6> 'char *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x20b42573840 <col:6> 'char *' lvalue Var 0x20b42577728 'p' 'char *'
|   | `-ImplicitCastExpr 0x20b425738a8 <col:10> 'char' <IntegralCast>
|   |   `-CharacterLiteral 0x20b42573890 <col:10> 'int' 0
|   `-LabelStmt 0x20b42573948 <line:48:2, line:49:16> 'err'
|     `-ReturnStmt 0x20b42573938 <col:5, col:16>
|       `-ImplicitCastExpr 0x20b42573920 <col:12, col:16> 'char *' <LValueToRValue>
|         `-ParenExpr 0x20b42573900 <col:12, col:16> 'char *' lvalue
|           `-DeclRefExpr 0x20b425738e0 <col:13> 'char *' lvalue Var 0x20b42577690 'buf' 'char *'
|-FunctionDecl 0x20b42573a70 <line:53:1, line:122:1> line:53:7 invalid BN_bn2dec 'char *(const int *)'
| |-ParmVarDecl 0x20b425739d8 <col:17, col:31> col:31 invalid a 'const int *'
| `-CompoundStmt 0x20b42572d30 <line:54:1, line:122:1>
|   |-DeclStmt 0x20b42573d20 <line:55:5, col:27>
|   | |-VarDecl 0x20b42573b48 <col:5, col:13> col:9 used i 'int' cinit
|   | | `-IntegerLiteral 0x20b42573bb0 <col:13> 'int' 0
|   | |-VarDecl 0x20b42573bf0 <col:5, col:16> col:16 used num 'int'
|   | `-VarDecl 0x20b42573c70 <col:5, col:26> col:21 used ok 'int' cinit
|   |   `-IntegerLiteral 0x20b42573cd8 <col:26> 'int' 0
|   |-DeclStmt 0x20b42573e58 <line:56:5, col:21>
|   | `-VarDecl 0x20b42573d50 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> .//openssl//file_jk/after\crypto\bn\bn_print.c:56:11 used buf 'char *' cinit
|   |   `-ImplicitCastExpr 0x20b42573e40 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <NullToPointer>
|   |     `-ParenExpr 0x20b42573e20 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x20b42573df8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x20b42573db8 <col:26> 'int' 0
|   |-DeclStmt 0x20b42573ef0 <.//openssl//file_jk/after\crypto\bn\bn_print.c:57:5, col:12>
|   | `-VarDecl 0x20b42573e88 <col:5, col:11> col:11 used p 'char *'
|   |-DeclStmt 0x20b42574098 <line:60:5, col:20>
|   | `-VarDecl 0x20b42574030 <col:5, col:9> col:9 used bn_data_num 'int'
|   |-BinaryOperator 0x20b42574438 <line:69:5, col:37> 'int' '='
|   | |-DeclRefExpr 0x20b42574230 <col:5> 'int' lvalue Var 0x20b42573bf0 'num' 'int'
|   | `-BinaryOperator 0x20b42574418 <col:11, col:37> 'int' '+'
|   |   |-ParenExpr 0x20b425743d0 <col:11, col:33> 'int'
|   |   | `-BinaryOperator 0x20b425743b0 <col:12, col:32> 'int' '+'
|   |   |   |-BinaryOperator 0x20b42574368 <col:12, col:25> 'int' '+'
|   |   |   | |-BinaryOperator 0x20b425742c8 <col:12, col:16> 'int' '/'
|   |   |   | | |-ImplicitCastExpr 0x20b425742b0 <col:12> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x20b42574268 <col:12> 'int' lvalue Var 0x20b42573b48 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x20b42574288 <col:16> 'int' 10
|   |   |   | `-BinaryOperator 0x20b42574348 <col:21, col:25> 'int' '/'
|   |   |   |   |-ImplicitCastExpr 0x20b42574330 <col:21> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x20b425742e8 <col:21> 'int' lvalue Var 0x20b42573b48 'i' 'int'
|   |   |   |   `-IntegerLiteral 0x20b42574308 <col:25> 'int' 1000
|   |   |   `-IntegerLiteral 0x20b42574388 <col:32> 'int' 1
|   |   `-IntegerLiteral 0x20b425743f0 <col:37> 'int' 1
|   |-BinaryOperator 0x20b42574648 <line:72:5, col:33> 'char *' '='
|   | |-DeclRefExpr 0x20b42574518 <col:5> 'char *' lvalue Var 0x20b42573d50 'buf' 'char *'
|   | `-ImplicitCastExpr 0x20b42574630 <col:11, col:33> 'char *' <IntegralToPointer>
|   |   `-CallExpr 0x20b42574608 <col:11, col:33> 'int'
|   |     |-ImplicitCastExpr 0x20b425745f0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x20b42574550 <col:11> 'int ()' Function 0x20b42577b98 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x20b425745d0 <col:26, col:32> 'int' '+'
|   |       |-ImplicitCastExpr 0x20b425745b8 <col:26> 'int' <LValueToRValue>
|   |       | `-DeclRefExpr 0x20b42574570 <col:26> 'int' lvalue Var 0x20b42573bf0 'num' 'int'
|   |       `-IntegerLiteral 0x20b42574590 <col:32> 'int' 3
|   |-IfStmt 0x20b425748c0 <line:73:5, line:76:5>
|   | |-OpaqueValueExpr 0x20b425748a8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x20b42574890 <line:73:45, line:76:5>
|   |   `-GotoStmt 0x20b42574878 <line:75:9, col:14> 'err' 0x20b42574828
|   |-IfStmt 0x20b42574aa0 <line:77:5, line:78:14>
|   | |-OpaqueValueExpr 0x20b42574a88 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x20b42574a70 <col:9, col:14> 'err' 0x20b42574828
|   |-BinaryOperator 0x20b42574b28 <line:81:5, col:9> 'char *' '='
|   | |-DeclRefExpr 0x20b42574ab8 <col:5> 'char *' lvalue Var 0x20b42573e88 'p' 'char *'
|   | `-ImplicitCastExpr 0x20b42574b10 <col:9> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x20b42574af0 <col:9> 'char *' lvalue Var 0x20b42573d50 'buf' 'char *'
|   |-IfStmt 0x20b42572868 <line:83:5, line:113:5> has_else
|   | |-OpaqueValueExpr 0x20b42572850 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x20b42574ce8 <line:83:24, line:86:5>
|   | | |-BinaryOperator 0x20b42574c08 <line:84:9, col:18> 'char' '='
|   | | | |-UnaryOperator 0x20b42574bc0 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   | | | | `-ParenExpr 0x20b42574ba0 <col:10, col:14> 'char *'
|   | | | |   `-UnaryOperator 0x20b42574b88 <col:11, col:12> 'char *' postfix '++'
|   | | | |     `-DeclRefExpr 0x20b42574b68 <col:11> 'char *' lvalue Var 0x20b42573e88 'p' 'char *'
|   | | | `-ImplicitCastExpr 0x20b42574bf0 <col:18> 'char' <IntegralCast>
|   | | |   `-CharacterLiteral 0x20b42574bd8 <col:18> 'int' 48
|   | | `-BinaryOperator 0x20b42574cc8 <line:85:9, col:18> 'char' '='
|   | |   |-UnaryOperator 0x20b42574c80 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow
|   | |   | `-ParenExpr 0x20b42574c60 <col:10, col:14> 'char *'
|   | |   |   `-UnaryOperator 0x20b42574c48 <col:11, col:12> 'char *' postfix '++'
|   | |   |     `-DeclRefExpr 0x20b42574c28 <col:11> 'char *' lvalue Var 0x20b42573e88 'p' 'char *'
|   | |   `-ImplicitCastExpr 0x20b42574cb0 <col:18> 'char' <IntegralCast>
|   | |     `-CharacterLiteral 0x20b42574c98 <col:18> 'int' 0
|   | `-CompoundStmt 0x20b42572830 <line:86:12, line:113:5>
|   |   |-IfStmt 0x20b42574ed0 <line:87:9, line:88:20>
|   |   | |-OpaqueValueExpr 0x20b42574eb8 <<invalid sloc>> '_Bool'
|   |   | `-BinaryOperator 0x20b42574e98 <col:13, col:20> 'char' '='
|   |   |   |-UnaryOperator 0x20b42574e50 <col:13, col:15> 'char' lvalue prefix '*' cannot overflow
|   |   |   | `-UnaryOperator 0x20b42574e38 <col:14, col:15> 'char *' postfix '++'
|   |   |   |   `-DeclRefExpr 0x20b42574e18 <col:14> 'char *' lvalue Var 0x20b42573e88 'p' 'char *'
|   |   |   `-ImplicitCastExpr 0x20b42574e80 <col:20> 'char' <IntegralCast>
|   |   |     `-CharacterLiteral 0x20b42574e68 <col:20> 'int' 45
|   |   `-WhileStmt 0x20b42572528 <line:105:9, line:106:14>
|   |     |-ImplicitCastExpr 0x20b425724d8 <line:105:16, col:17> 'char' <LValueToRValue>
|   |     | `-UnaryOperator 0x20b425724c0 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow
|   |     |   `-ImplicitCastExpr 0x20b425724a8 <col:17> 'char *' <LValueToRValue>
|   |     |     `-DeclRefExpr 0x20b42572488 <col:17> 'char *' lvalue Var 0x20b42573e88 'p' 'char *'
|   |     `-UnaryOperator 0x20b42572510 <line:106:13, col:14> 'char *' postfix '++'
|   |       `-DeclRefExpr 0x20b425724f0 <col:13> 'char *' lvalue Var 0x20b42573e88 'p' 'char *'
|   |-BinaryOperator 0x20b425728f0 <line:114:5, col:10> 'int' '='
|   | |-DeclRefExpr 0x20b42572890 <col:5> 'int' lvalue Var 0x20b42573c70 'ok' 'int'
|   | `-IntegerLiteral 0x20b425728c8 <col:10> 'int' 1
|   |-LabelStmt 0x20b42572a28 <line:115:2, col:5> 'err'
|   | `-NullStmt 0x20b42572a20 <col:5>
|   |-IfStmt 0x20b42572bd0 <line:118:5, line:119:16>
|   | |-ImplicitCastExpr 0x20b42572b70 <line:118:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x20b42572b50 <col:9> 'int' lvalue Var 0x20b42573c70 'ok' 'int'
|   | `-ReturnStmt 0x20b42572bc0 <line:119:9, col:16>
|   |   `-ImplicitCastExpr 0x20b42572ba8 <col:16> 'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20b42572b88 <col:16> 'char *' lvalue Var 0x20b42573d50 'buf' 'char *'
|   |-CallExpr 0x20b42572c40 <line:120:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x20b42572c28 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x20b42572be8 <col:5> 'int ()' Function 0x20b42572938 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x20b42572c68 <col:18> 'char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x20b42572c08 <col:18> 'char *' lvalue Var 0x20b42573d50 'buf' 'char *'
|   `-ReturnStmt 0x20b42572d20 <line:121:5, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27>
|     `-ImplicitCastExpr 0x20b42572d08 <col:17, col:27> 'char *' <NullToPointer>
|       `-ParenExpr 0x20b42572ce8 <col:17, col:27> 'void *'
|         `-CStyleCastExpr 0x20b42572cc0 <col:18, col:26> 'void *' <NullToPointer>
|           `-IntegerLiteral 0x20b42572c80 <col:26> 'int' 0
|-FunctionDecl 0x20b42572f60 <.//openssl//file_jk/after\crypto\bn\bn_print.c:124:1, line:195:1> line:124:5 invalid BN_hex2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x20b42572e08 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x20b42572e88 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x20b4257b518 <line:125:1, line:195:1>
|   |-DeclStmt 0x20b42578528 <line:128:5, col:34>
|   | |-VarDecl 0x20b425730c8 <col:5, col:15> col:9 used neg 'int' cinit
|   | | `-IntegerLiteral 0x20b42573130 <col:15> 'int' 0
|   | |-VarDecl 0x20b42578200 <col:5, col:18> col:18 used h 'int'
|   | |-VarDecl 0x20b42578280 <col:5, col:21> col:21 used m 'int'
|   | |-VarDecl 0x20b42578300 <col:5, col:24> col:24 used i 'int'
|   | |-VarDecl 0x20b42578380 <col:5, col:27> col:27 used j 'int'
|   | |-VarDecl 0x20b42578400 <col:5, col:30> col:30 used k 'int'
|   | `-VarDecl 0x20b42578480 <col:5, col:33> col:33 used c 'int'
|   |-DeclStmt 0x20b425785c0 <line:129:5, col:12>
|   | `-VarDecl 0x20b42578558 <col:5, col:9> col:9 used num 'int'
|   |-IfStmt 0x20b42578888 <line:131:5, line:132:18>
|   | |-BinaryOperator 0x20b42578810 <line:131:9, col:35> 'int' '||'
|   | | |-ParenExpr 0x20b425786e8 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x20b425786c8 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x20b42578698 <.//openssl//file_jk/after\crypto\bn\bn_print.c:131:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x20b425785d8 <col:10> 'const char *' lvalue ParmVar 0x20b42572e88 'a' 'const char *'
|   | | |   `-ImplicitCastExpr 0x20b425786b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x20b42578678 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x20b42578650 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x20b42578610 <col:26> 'int' 0
|   | | `-ParenExpr 0x20b425787f0 <.//openssl//file_jk/after\crypto\bn\bn_print.c:131:24, col:35> 'int'
|   | |   `-BinaryOperator 0x20b425787d0 <col:25, col:31> 'int' '=='
|   | |     |-ImplicitCastExpr 0x20b425787b8 <col:25, col:26> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x20b425787a0 <col:25, col:26> 'char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x20b42578770 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
|   | |     |     `-ImplicitCastExpr 0x20b42578758 <col:26> 'const char *' <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x20b42578738 <col:26> 'const char *' lvalue ParmVar 0x20b42572e88 'a' 'const char *'
|   | |     `-CharacterLiteral 0x20b42578788 <col:31> 'int' 0
|   | `-ReturnStmt 0x20b42578878 <line:132:9, col:18>
|   |   `-ParenExpr 0x20b42578858 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x20b42578830 <col:17> 'int' 0
|   |-IfStmt 0x20b42578a30 <line:134:5, line:137:5>
|   | |-BinaryOperator 0x20b42578938 <line:134:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x20b42578920 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x20b42578908 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x20b425788d8 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x20b425788c0 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x20b425788a0 <col:10> 'const char *' lvalue ParmVar 0x20b42572e88 'a' 'const char *'
|   | | `-CharacterLiteral 0x20b425788f0 <col:15> 'int' 45
|   | `-CompoundStmt 0x20b42578a10 <col:20, line:137:5>
|   |   |-BinaryOperator 0x20b425789b8 <line:135:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x20b42578958 <col:9> 'int' lvalue Var 0x20b425730c8 'neg' 'int'
|   |   | `-IntegerLiteral 0x20b42578990 <col:15> 'int' 1
|   |   `-UnaryOperator 0x20b425789f8 <line:136:9, col:10> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x20b425789d8 <col:9> 'const char *' lvalue ParmVar 0x20b42572e88 'a' 'const char *'
|   |-ForStmt 0x20b42578da0 <line:139:5, line:140:9>
|   | |-BinaryOperator 0x20b42578aa8 <line:139:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x20b42578a48 <col:10> 'int' lvalue Var 0x20b42578300 'i' 'int'
|   | | `-IntegerLiteral 0x20b42578a80 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x20b42578d40 <col:17, col:65> 'int' '&&'
|   | | |-BinaryOperator 0x20b42578b90 <col:17, col:32> 'int' '<='
|   | | | |-ImplicitCastExpr 0x20b42578b78 <col:17> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x20b42578ac8 <col:17> 'int' lvalue Var 0x20b42578300 'i' 'int'
|   | | | `-ParenExpr 0x20b42578b58 <col:22, col:32> 'int'
|   | | |   `-BinaryOperator 0x20b42578b38 <<built-in>:30:21, .//openssl//file_jk/after\crypto\bn\bn_print.c:139:31> 'int' '/'
|   | | |     |-IntegerLiteral 0x20b42578ae8 <<built-in>:30:21> 'int' 2147483647
|   | | |     `-IntegerLiteral 0x20b42578b10 <.//openssl//file_jk/after\crypto\bn\bn_print.c:139:31> 'int' 4
|   | | `-CallExpr 0x20b42578d00 <col:37, col:65> 'int'
|   | |   |-ImplicitCastExpr 0x20b42578ce8 <col:37> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x20b42578bb0 <col:37> 'int (int)' Function 0x20b4254f000 'isxdigit' 'int (int)'
|   | |   `-ImplicitCastExpr 0x20b42578d28 <col:46, col:64> 'int' <IntegralCast>
|   | |     `-CStyleCastExpr 0x20b42578c90 <col:46, col:64> 'unsigned char' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x20b42578c78 <col:61, col:64> 'char' <LValueToRValue> part_of_explicit_cast
|   | |         `-ArraySubscriptExpr 0x20b42578c40 <col:61, col:64> 'const char' lvalue
|   | |           |-ImplicitCastExpr 0x20b42578c10 <col:61> 'const char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x20b42578bd0 <col:61> 'const char *' lvalue ParmVar 0x20b42572e88 'a' 'const char *'
|   | |           `-ImplicitCastExpr 0x20b42578c28 <col:63> 'int' <LValueToRValue>
|   | |             `-DeclRefExpr 0x20b42578bf0 <col:63> 'int' lvalue Var 0x20b42578300 'i' 'int'
|   | |-UnaryOperator 0x20b42578d80 <col:68, col:69> 'int' postfix '++'
|   | | `-DeclRefExpr 0x20b42578d60 <col:68> 'int' lvalue Var 0x20b42578300 'i' 'int'
|   | `-ContinueStmt 0x20b42578d98 <line:140:9>
|   |-IfStmt 0x20b42578fa8 <line:142:5, line:143:14>
|   | |-BinaryOperator 0x20b42578f20 <line:142:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x20b42578e38 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x20b42578e20 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x20b42578dd8 <col:9> 'int' lvalue Var 0x20b42578300 'i' 'int'
|   | | | `-IntegerLiteral 0x20b42578df8 <col:14> 'int' 0
|   | | `-BinaryOperator 0x20b42578f00 <col:19, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x20b42578ee8 <col:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x20b42578e58 <col:19> 'int' lvalue Var 0x20b42578300 'i' 'int'
|   | |   `-BinaryOperator 0x20b42578ec8 <<built-in>:30:21, .//openssl//file_jk/after\crypto\bn\bn_print.c:142:31> 'int' '/'
|   | |     |-IntegerLiteral 0x20b42578e78 <<built-in>:30:21> 'int' 2147483647
|   | |     `-IntegerLiteral 0x20b42578ea0 <.//openssl//file_jk/after\crypto\bn\bn_print.c:142:31> 'int' 4
|   | `-GotoStmt 0x20b42578f90 <line:143:9, col:14> 'err' 0x20b42578f40
|   |-BinaryOperator 0x20b42579088 <line:145:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x20b42578fc0 <col:5> 'int' lvalue Var 0x20b42578558 'num' 'int'
|   | `-BinaryOperator 0x20b42579068 <col:11, col:15> 'int' '+'
|   |   |-ImplicitCastExpr 0x20b42579038 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20b42578ff8 <col:11> 'int' lvalue Var 0x20b42578300 'i' 'int'
|   |   `-ImplicitCastExpr 0x20b42579050 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x20b42579018 <col:15> 'int' lvalue Var 0x20b425730c8 'neg' 'int'
|   |-IfStmt 0x20b425791b0 <line:146:5, line:147:20>
|   | |-OpaqueValueExpr 0x20b42579198 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20b42579188 <col:9, col:20>
|   |   `-ImplicitCastExpr 0x20b42579170 <col:16, col:20> 'int' <LValueToRValue>
|   |     `-ParenExpr 0x20b42579150 <col:16, col:20> 'int' lvalue
|   |       `-DeclRefExpr 0x20b42579130 <col:17> 'int' lvalue Var 0x20b42578558 'num' 'int'
|   |-IfStmt 0x20b425755d8 <line:150:5, line:156:5> has_else
|   | |-OpaqueValueExpr 0x20b425755c0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x20b42575488 <line:150:22, line:153:5>
|   | | `-IfStmt 0x20b42575470 <line:151:9, line:152:22>
|   | |   |-OpaqueValueExpr 0x20b42575458 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x20b42575448 <col:13, col:22>
|   | |     `-ParenExpr 0x20b42575428 <col:20, col:22> 'int'
|   | |       `-IntegerLiteral 0x20b42575400 <col:21> 'int' 0
|   | `-CompoundStmt 0x20b425755b0 <line:153:12, line:156:5>
|   |-IfStmt 0x20b42575848 <line:159:5, line:160:14>
|   | |-OpaqueValueExpr 0x20b42575830 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x20b42575818 <col:9, col:14> 'err' 0x20b42578f40
|   |-BinaryOperator 0x20b425758d0 <line:162:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x20b42575860 <col:5> 'int' lvalue Var 0x20b42578380 'j' 'int'
|   | `-ImplicitCastExpr 0x20b425758b8 <col:9> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x20b42575898 <col:9> 'int' lvalue Var 0x20b42578300 'i' 'int'
|   |-BinaryOperator 0x20b42575950 <line:163:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x20b425758f0 <col:5> 'int' lvalue Var 0x20b42578280 'm' 'int'
|   | `-IntegerLiteral 0x20b42575928 <col:9> 'int' 0
|   |-BinaryOperator 0x20b425759d0 <line:164:5, col:9> 'int' '='
|   | |-DeclRefExpr 0x20b42575970 <col:5> 'int' lvalue Var 0x20b42578200 'h' 'int'
|   | `-IntegerLiteral 0x20b425759a8 <col:9> 'int' 0
|   |-WhileStmt 0x20b42576198 <line:165:5, line:181:5>
|   | |-BinaryOperator 0x20b42575a50 <line:165:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x20b42575a38 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20b425759f0 <col:12> 'int' lvalue Var 0x20b42578380 'j' 'int'
|   | | `-IntegerLiteral 0x20b42575a10 <col:16> 'int' 0
|   | `-CompoundStmt 0x20b42576180 <col:19, line:181:5>
|   |   `-ForStmt 0x20b42576100 <line:168:9, line:179:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     `-CompoundStmt 0x20b425760d0 <line:168:18, line:179:9>
|   |       |-BinaryOperator 0x20b42575c98 <line:169:13, col:24> 'int' '='
|   |       | |-DeclRefExpr 0x20b42575b48 <col:13> 'int' lvalue Var 0x20b42578480 'c' 'int'
|   |       | `-ImplicitCastExpr 0x20b42575c80 <col:17, col:24> 'int' <IntegralCast>
|   |       |   `-ImplicitCastExpr 0x20b42575c68 <col:17, col:24> 'char' <LValueToRValue>
|   |       |     `-ArraySubscriptExpr 0x20b42575c48 <col:17, col:24> 'const char' lvalue
|   |       |       |-ImplicitCastExpr 0x20b42575c30 <col:17> 'const char *' <LValueToRValue>
|   |       |       | `-DeclRefExpr 0x20b42575b80 <col:17> 'const char *' lvalue ParmVar 0x20b42572e88 'a' 'const char *'
|   |       |       `-BinaryOperator 0x20b42575c10 <col:19, col:23> 'int' '-'
|   |       |         |-ImplicitCastExpr 0x20b42575be0 <col:19> 'int' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x20b42575ba0 <col:19> 'int' lvalue Var 0x20b42578380 'j' 'int'
|   |       |         `-ImplicitCastExpr 0x20b42575bf8 <col:23> 'int' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x20b42575bc0 <col:23> 'int' lvalue Var 0x20b42578280 'm' 'int'
|   |       |-BinaryOperator 0x20b42575e78 <line:170:13, col:38> 'int' '='
|   |       | |-DeclRefExpr 0x20b42575cb8 <col:13> 'int' lvalue Var 0x20b42578400 'k' 'int'
|   |       | `-CallExpr 0x20b42575e38 <col:17, col:38> 'int'
|   |       |   |-ImplicitCastExpr 0x20b42575e20 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |       |   | `-DeclRefExpr 0x20b42575de0 <col:17> 'int ()' Function 0x20b42575d18 'OPENSSL_hexchar2int' 'int ()'
|   |       |   `-ImplicitCastExpr 0x20b42575e60 <col:37> 'int' <LValueToRValue>
|   |       |     `-DeclRefExpr 0x20b42575e00 <col:37> 'int' lvalue Var 0x20b42578480 'c' 'int'
|   |       |-IfStmt 0x20b42575f80 <line:171:13, line:172:21>
|   |       | |-BinaryOperator 0x20b42575ef8 <line:171:17, col:21> 'int' '<'
|   |       | | |-ImplicitCastExpr 0x20b42575ee0 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x20b42575e98 <col:17> 'int' lvalue Var 0x20b42578400 'k' 'int'
|   |       | | `-IntegerLiteral 0x20b42575eb8 <col:21> 'int' 0
|   |       | `-BinaryOperator 0x20b42575f60 <line:172:17, col:21> 'int' '='
|   |       |   |-DeclRefExpr 0x20b42575f18 <col:17> 'int' lvalue Var 0x20b42578400 'k' 'int'
|   |       |   `-IntegerLiteral 0x20b42575f38 <col:21> 'int' 0
|   |       `-IfStmt 0x20b425760b8 <line:175:13, line:178:13>
|   |         |-BinaryOperator 0x20b42576040 <line:175:17, col:24> 'int' '<='
|   |         | |-UnaryOperator 0x20b42576000 <col:17, col:19> 'int' prefix '--'
|   |         | | `-DeclRefExpr 0x20b42575fe0 <col:19> 'int' lvalue Var 0x20b42578280 'm' 'int'
|   |         | `-IntegerLiteral 0x20b42576018 <col:24> 'int' 0
|   |         `-CompoundStmt 0x20b425760a0 <col:27, line:178:13>
|   |           `-BreakStmt 0x20b42576098 <line:177:17>
|   |-NullStmt 0x20b4257b340 <line:186:22>
|   |-ReturnStmt 0x20b4257b3e8 <line:190:5, col:16>
|   | `-ImplicitCastExpr 0x20b4257b3d0 <col:12, col:16> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x20b4257b3b0 <col:12, col:16> 'int' lvalue
|   |     `-DeclRefExpr 0x20b4257b390 <col:13> 'int' lvalue Var 0x20b42578558 'num' 'int'
|   |-LabelStmt 0x20b4257b4a8 <line:191:2, col:5> 'err'
|   | `-NullStmt 0x20b4257b4a0 <col:5>
|   `-ReturnStmt 0x20b4257b508 <line:194:5, col:14>
|     `-ParenExpr 0x20b4257b4e8 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x20b4257b4c0 <col:13> 'int' 0
|-FunctionDecl 0x20b4257b6f8 <line:197:1, line:265:1> line:197:5 invalid BN_dec2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x20b4257b5d8 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x20b4257b658 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x20b42576278 <line:198:1, line:265:1>
|   |-DeclStmt 0x20b4257ba10 <line:201:5, col:22>
|   | |-VarDecl 0x20b4257b860 <col:5, col:15> col:9 used neg 'int' cinit
|   | | `-IntegerLiteral 0x20b4257b8c8 <col:15> 'int' 0
|   | |-VarDecl 0x20b4257b908 <col:5, col:18> col:18 used i 'int'
|   | `-VarDecl 0x20b4257b988 <col:5, col:21> col:21 used j 'int'
|   |-DeclStmt 0x20b4257baa8 <line:202:5, col:12>
|   | `-VarDecl 0x20b4257ba40 <col:5, col:9> col:9 used num 'int'
|   |-IfStmt 0x20b4257bd40 <line:204:5, line:205:18>
|   | |-BinaryOperator 0x20b4257bcc8 <line:204:9, col:35> 'int' '||'
|   | | |-ParenExpr 0x20b4257bbd0 <col:9, col:19> 'int'
|   | | | `-BinaryOperator 0x20b4257bbb0 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x20b4257bb80 <.//openssl//file_jk/after\crypto\bn\bn_print.c:204:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x20b4257bac0 <col:10> 'const char *' lvalue ParmVar 0x20b4257b658 'a' 'const char *'
|   | | |   `-ImplicitCastExpr 0x20b4257bb98 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x20b4257bb60 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x20b4257bb38 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x20b4257baf8 <col:26> 'int' 0
|   | | `-ParenExpr 0x20b4257bca8 <.//openssl//file_jk/after\crypto\bn\bn_print.c:204:24, col:35> 'int'
|   | |   `-BinaryOperator 0x20b4257bc88 <col:25, col:31> 'int' '=='
|   | |     |-ImplicitCastExpr 0x20b4257bc70 <col:25, col:26> 'int' <IntegralCast>
|   | |     | `-ImplicitCastExpr 0x20b4257bc58 <col:25, col:26> 'char' <LValueToRValue>
|   | |     |   `-UnaryOperator 0x20b4257bc28 <col:25, col:26> 'const char' lvalue prefix '*' cannot overflow
|   | |     |     `-ImplicitCastExpr 0x20b4257bc10 <col:26> 'const char *' <LValueToRValue>
|   | |     |       `-DeclRefExpr 0x20b4257bbf0 <col:26> 'const char *' lvalue ParmVar 0x20b4257b658 'a' 'const char *'
|   | |     `-CharacterLiteral 0x20b4257bc40 <col:31> 'int' 0
|   | `-ReturnStmt 0x20b4257bd30 <line:205:9, col:18>
|   |   `-ParenExpr 0x20b4257bd10 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x20b4257bce8 <col:17> 'int' 0
|   |-IfStmt 0x20b4257bee8 <line:206:5, line:209:5>
|   | |-BinaryOperator 0x20b4257bdf0 <line:206:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x20b4257bdd8 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x20b4257bdc0 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x20b4257bd90 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x20b4257bd78 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x20b4257bd58 <col:10> 'const char *' lvalue ParmVar 0x20b4257b658 'a' 'const char *'
|   | | `-CharacterLiteral 0x20b4257bda8 <col:15> 'int' 45
|   | `-CompoundStmt 0x20b4257bec8 <col:20, line:209:5>
|   |   |-BinaryOperator 0x20b4257be70 <line:207:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x20b4257be10 <col:9> 'int' lvalue Var 0x20b4257b860 'neg' 'int'
|   |   | `-IntegerLiteral 0x20b4257be48 <col:15> 'int' 1
|   |   `-UnaryOperator 0x20b4257beb0 <line:208:9, col:10> 'const char *' postfix '++'
|   |     `-DeclRefExpr 0x20b4257be90 <col:9> 'const char *' lvalue ParmVar 0x20b4257b658 'a' 'const char *'
|   |-ForStmt 0x20b4257a220 <line:211:5, line:212:9>
|   | |-BinaryOperator 0x20b4257bf60 <line:211:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x20b4257bf00 <col:10> 'int' lvalue Var 0x20b4257b908 'i' 'int'
|   | | `-IntegerLiteral 0x20b4257bf38 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x20b4257c1c8 <col:17, col:64> 'int' '&&'
|   | | |-BinaryOperator 0x20b4257c048 <col:17, col:32> 'int' '<='
|   | | | |-ImplicitCastExpr 0x20b4257c030 <col:17> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x20b4257bf80 <col:17> 'int' lvalue Var 0x20b4257b908 'i' 'int'
|   | | | `-ParenExpr 0x20b4257c010 <col:22, col:32> 'int'
|   | | |   `-BinaryOperator 0x20b4257bff0 <<built-in>:30:21, .//openssl//file_jk/after\crypto\bn\bn_print.c:211:31> 'int' '/'
|   | | |     |-IntegerLiteral 0x20b4257bfa0 <<built-in>:30:21> 'int' 2147483647
|   | | |     `-IntegerLiteral 0x20b4257bfc8 <.//openssl//file_jk/after\crypto\bn\bn_print.c:211:31> 'int' 4
|   | | `-CallExpr 0x20b4257c188 <col:37, col:64> 'int'
|   | |   |-ImplicitCastExpr 0x20b4257c170 <col:37> 'int (*)(int)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x20b4257c068 <col:37> 'int (int)' Function 0x20b4254e960 'isdigit' 'int (int)'
|   | |   `-ImplicitCastExpr 0x20b4257c1b0 <col:45, col:63> 'int' <IntegralCast>
|   | |     `-CStyleCastExpr 0x20b4257c148 <col:45, col:63> 'unsigned char' <IntegralCast>
|   | |       `-ImplicitCastExpr 0x20b4257c130 <col:60, col:63> 'char' <LValueToRValue> part_of_explicit_cast
|   | |         `-ArraySubscriptExpr 0x20b4257c0f8 <col:60, col:63> 'const char' lvalue
|   | |           |-ImplicitCastExpr 0x20b4257c0c8 <col:60> 'const char *' <LValueToRValue>
|   | |           | `-DeclRefExpr 0x20b4257c088 <col:60> 'const char *' lvalue ParmVar 0x20b4257b658 'a' 'const char *'
|   | |           `-ImplicitCastExpr 0x20b4257c0e0 <col:62> 'int' <LValueToRValue>
|   | |             `-DeclRefExpr 0x20b4257c0a8 <col:62> 'int' lvalue Var 0x20b4257b908 'i' 'int'
|   | |-UnaryOperator 0x20b4257c208 <col:67, col:68> 'int' postfix '++'
|   | | `-DeclRefExpr 0x20b4257c1e8 <col:67> 'int' lvalue Var 0x20b4257b908 'i' 'int'
|   | `-ContinueStmt 0x20b4257c220 <line:212:9>
|   |-IfStmt 0x20b4257a428 <line:214:5, line:215:14>
|   | |-BinaryOperator 0x20b4257a3a0 <line:214:9, col:31> 'int' '||'
|   | | |-BinaryOperator 0x20b4257a2b8 <col:9, col:14> 'int' '=='
|   | | | |-ImplicitCastExpr 0x20b4257a2a0 <col:9> 'int' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x20b4257a258 <col:9> 'int' lvalue Var 0x20b4257b908 'i' 'int'
|   | | | `-IntegerLiteral 0x20b4257a278 <col:14> 'int' 0
|   | | `-BinaryOperator 0x20b4257a380 <col:19, col:31> 'int' '>'
|   | |   |-ImplicitCastExpr 0x20b4257a368 <col:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x20b4257a2d8 <col:19> 'int' lvalue Var 0x20b4257b908 'i' 'int'
|   | |   `-BinaryOperator 0x20b4257a348 <<built-in>:30:21, .//openssl//file_jk/after\crypto\bn\bn_print.c:214:31> 'int' '/'
|   | |     |-IntegerLiteral 0x20b4257a2f8 <<built-in>:30:21> 'int' 2147483647
|   | |     `-IntegerLiteral 0x20b4257a320 <.//openssl//file_jk/after\crypto\bn\bn_print.c:214:31> 'int' 4
|   | `-GotoStmt 0x20b4257a410 <line:215:9, col:14> 'err' 0x20b4257a3c0
|   |-BinaryOperator 0x20b4257a508 <line:217:5, col:15> 'int' '='
|   | |-DeclRefExpr 0x20b4257a440 <col:5> 'int' lvalue Var 0x20b4257ba40 'num' 'int'
|   | `-BinaryOperator 0x20b4257a4e8 <col:11, col:15> 'int' '+'
|   |   |-ImplicitCastExpr 0x20b4257a4b8 <col:11> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x20b4257a478 <col:11> 'int' lvalue Var 0x20b4257b908 'i' 'int'
|   |   `-ImplicitCastExpr 0x20b4257a4d0 <col:15> 'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x20b4257a498 <col:15> 'int' lvalue Var 0x20b4257b860 'neg' 'int'
|   |-IfStmt 0x20b4257a630 <line:218:5, line:219:20>
|   | |-OpaqueValueExpr 0x20b4257a618 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20b4257a608 <col:9, col:20>
|   |   `-ImplicitCastExpr 0x20b4257a5f0 <col:16, col:20> 'int' <LValueToRValue>
|   |     `-ParenExpr 0x20b4257a5d0 <col:16, col:20> 'int' lvalue
|   |       `-DeclRefExpr 0x20b4257a5b0 <col:17> 'int' lvalue Var 0x20b4257ba40 'num' 'int'
|   |-IfStmt 0x20b4257a898 <line:225:5, line:231:5> has_else
|   | |-OpaqueValueExpr 0x20b4257a880 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x20b4257a838 <line:225:22, line:228:5>
|   | | `-IfStmt 0x20b4257a820 <line:226:9, line:227:22>
|   | |   |-OpaqueValueExpr 0x20b4257a808 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x20b4257a7f8 <col:13, col:22>
|   | |     `-ParenExpr 0x20b4257a7d8 <col:20, col:22> 'int'
|   | |       `-IntegerLiteral 0x20b4257a7b0 <col:21> 'int' 0
|   | `-CompoundStmt 0x20b4257a870 <line:228:12, line:231:5>
|   |-IfStmt 0x20b4257aa18 <line:234:5, line:235:14>
|   | |-OpaqueValueExpr 0x20b4257aa00 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x20b4257a9e8 <col:9, col:14> 'err' 0x20b4257a3c0
|   |-IfStmt 0x20b4257ab28 <line:238:5, line:239:13>
|   | |-OpaqueValueExpr 0x20b4257ab10 <<invalid sloc>> '_Bool'
|   | `-BinaryOperator 0x20b4257aaf0 <col:9, col:13> 'int' '='
|   |   |-DeclRefExpr 0x20b4257aaa8 <col:9> 'int' lvalue Var 0x20b4257b988 'j' 'int'
|   |   `-IntegerLiteral 0x20b4257aac8 <col:13> 'int' 0
|   |-WhileStmt 0x20b4257b0a0 <line:241:5, line:252:5>
|   | |-BinaryOperator 0x20b4257abc8 <line:241:12, col:19> 'int' '>='
|   | | |-UnaryOperator 0x20b4257ab88 <col:12, col:14> 'int' prefix '--'
|   | | | `-DeclRefExpr 0x20b4257ab68 <col:14> 'int' lvalue Var 0x20b4257b908 'i' 'int'
|   | | `-IntegerLiteral 0x20b4257aba0 <col:19> 'int' 0
|   | `-CompoundStmt 0x20b4257b080 <col:22, line:252:5>
|   |   |-UnaryOperator 0x20b4257ace8 <line:244:9, col:10> 'const char *' postfix '++'
|   |   | `-DeclRefExpr 0x20b4257acc8 <col:9> 'const char *' lvalue ParmVar 0x20b4257b658 'a' 'const char *'
|   |   `-IfStmt 0x20b4257b068 <line:245:9, line:251:9>
|   |     |-OpaqueValueExpr 0x20b4257b050 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x20b4257b030 <line:245:32, line:251:9>
|   |       |-IfStmt 0x20b4257af88 <line:246:13, line:248:22>
|   |       | |-OpaqueValueExpr 0x20b4257af70 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x20b4257af58 <col:17, col:22> 'err' 0x20b4257a3c0
|   |       `-BinaryOperator 0x20b4257b010 <line:250:13, col:17> 'int' '='
|   |         |-DeclRefExpr 0x20b4257afc8 <col:13> 'int' lvalue Var 0x20b4257b988 'j' 'int'
|   |         `-IntegerLiteral 0x20b4257afe8 <col:17> 'int' 0
|   |-NullStmt 0x20b4257b0d8 <line:256:22>
|   |-ReturnStmt 0x20b4257b180 <line:260:5, col:16>
|   | `-ImplicitCastExpr 0x20b4257b168 <col:12, col:16> 'int' <LValueToRValue>
|   |   `-ParenExpr 0x20b4257b148 <col:12, col:16> 'int' lvalue
|   |     `-DeclRefExpr 0x20b4257b128 <col:13> 'int' lvalue Var 0x20b4257ba40 'num' 'int'
|   |-LabelStmt 0x20b42576208 <line:261:2, col:5> 'err'
|   | `-NullStmt 0x20b42576200 <col:5>
|   `-ReturnStmt 0x20b42576268 <line:264:5, col:14>
|     `-ParenExpr 0x20b42576248 <col:12, col:14> 'int'
|       `-IntegerLiteral 0x20b42576220 <col:13> 'int' 0
|-FunctionDecl 0x20b42576448 <line:267:1, line:285:1> line:267:5 invalid BN_asc2bn 'int (int **, const char *)'
| |-ParmVarDecl 0x20b42576328 <col:15, col:24> col:24 invalid bn 'int **'
| |-ParmVarDecl 0x20b425763a8 <col:28, col:40> col:40 used a 'const char *'
| `-CompoundStmt 0x20b42576d38 <line:268:1, line:285:1>
|   |-DeclStmt 0x20b425765e0 <line:269:5, col:22>
|   | `-VarDecl 0x20b42576528 <col:5, col:21> col:17 used p 'const char *' cinit
|   |   `-ImplicitCastExpr 0x20b425765c8 <col:21> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x20b42576590 <col:21> 'const char *' lvalue ParmVar 0x20b425763a8 'a' 'const char *'
|   |-IfStmt 0x20b42576700 <line:271:5, line:272:10>
|   | |-BinaryOperator 0x20b425766a8 <line:271:9, col:15> 'int' '=='
|   | | |-ImplicitCastExpr 0x20b42576690 <col:9, col:10> 'int' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x20b42576678 <col:9, col:10> 'char' <LValueToRValue>
|   | | |   `-UnaryOperator 0x20b42576648 <col:9, col:10> 'const char' lvalue prefix '*' cannot overflow
|   | | |     `-ImplicitCastExpr 0x20b42576630 <col:10> 'const char *' <LValueToRValue>
|   | | |       `-DeclRefExpr 0x20b425765f8 <col:10> 'const char *' lvalue Var 0x20b42576528 'p' 'const char *'
|   | | `-CharacterLiteral 0x20b42576660 <col:15> 'int' 45
|   | `-UnaryOperator 0x20b425766e8 <line:272:9, col:10> 'const char *' postfix '++'
|   |   `-DeclRefExpr 0x20b425766c8 <col:9> 'const char *' lvalue Var 0x20b42576528 'p' 'const char *'
|   |-IfStmt 0x20b42576bd0 <line:274:5, line:280:5> has_else
|   | |-BinaryOperator 0x20b42576a10 <line:274:9, col:51> 'int' '&&'
|   | | |-BinaryOperator 0x20b425767e0 <col:9, col:17> 'int' '=='
|   | | | |-ImplicitCastExpr 0x20b425767c8 <col:9, col:12> 'int' <IntegralCast>
|   | | | | `-ImplicitCastExpr 0x20b425767b0 <col:9, col:12> 'char' <LValueToRValue>
|   | | | |   `-ArraySubscriptExpr 0x20b42576778 <col:9, col:12> 'const char' lvalue
|   | | | |     |-ImplicitCastExpr 0x20b42576760 <col:9> 'const char *' <LValueToRValue>
|   | | | |     | `-DeclRefExpr 0x20b42576718 <col:9> 'const char *' lvalue Var 0x20b42576528 'p' 'const char *'
|   | | | |     `-IntegerLiteral 0x20b42576738 <col:11> 'int' 0
|   | | | `-CharacterLiteral 0x20b42576798 <col:17> 'int' 48
|   | | `-ParenExpr 0x20b425769f0 <col:24, col:51> 'int'
|   | |   `-BinaryOperator 0x20b425769d0 <col:25, col:48> 'int' '||'
|   | |     |-BinaryOperator 0x20b425768c8 <col:25, col:33> 'int' '=='
|   | |     | |-ImplicitCastExpr 0x20b425768b0 <col:25, col:28> 'int' <IntegralCast>
|   | |     | | `-ImplicitCastExpr 0x20b42576898 <col:25, col:28> 'char' <LValueToRValue>
|   | |     | |   `-ArraySubscriptExpr 0x20b42576860 <col:25, col:28> 'const char' lvalue
|   | |     | |     |-ImplicitCastExpr 0x20b42576848 <col:25> 'const char *' <LValueToRValue>
|   | |     | |     | `-DeclRefExpr 0x20b42576800 <col:25> 'const char *' lvalue Var 0x20b42576528 'p' 'const char *'
|   | |     | |     `-IntegerLiteral 0x20b42576820 <col:27> 'int' 1
|   | |     | `-CharacterLiteral 0x20b42576880 <col:33> 'int' 88
|   | |     `-BinaryOperator 0x20b425769b0 <col:40, col:48> 'int' '=='
|   | |       |-ImplicitCastExpr 0x20b42576998 <col:40, col:43> 'int' <IntegralCast>
|   | |       | `-ImplicitCastExpr 0x20b42576980 <col:40, col:43> 'char' <LValueToRValue>
|   | |       |   `-ArraySubscriptExpr 0x20b42576948 <col:40, col:43> 'const char' lvalue
|   | |       |     |-ImplicitCastExpr 0x20b42576930 <col:40> 'const char *' <LValueToRValue>
|   | |       |     | `-DeclRefExpr 0x20b425768e8 <col:40> 'const char *' lvalue Var 0x20b42576528 'p' 'const char *'
|   | |       |     `-IntegerLiteral 0x20b42576908 <col:42> 'int' 1
|   | |       `-CharacterLiteral 0x20b42576968 <col:48> 'int' 120
|   | |-CompoundStmt 0x20b42576b18 <col:54, line:277:5>
|   | | `-IfStmt 0x20b42576b00 <line:275:9, line:276:20>
|   | |   |-OpaqueValueExpr 0x20b42576ae8 <<invalid sloc>> '_Bool'
|   | |   `-ReturnStmt 0x20b42576ad8 <col:13, col:20>
|   | |     `-IntegerLiteral 0x20b42576ab0 <col:20> 'int' 0
|   | `-CompoundStmt 0x20b42576bb8 <line:277:12, line:280:5>
|   |   `-IfStmt 0x20b42576ba0 <line:278:9, line:279:20>
|   |     |-OpaqueValueExpr 0x20b42576b88 <<invalid sloc>> '_Bool'
|   |     `-ReturnStmt 0x20b42576b78 <col:13, col:20>
|   |       `-IntegerLiteral 0x20b42576b50 <col:20> 'int' 0
|   `-ReturnStmt 0x20b42576d28 <line:284:5, col:12>
|     `-IntegerLiteral 0x20b42576d00 <col:12> 'int' 1
|-FunctionDecl 0x20b42576f10 <line:288:1, line:299:1> line:288:5 invalid BN_print_fp 'int (FILE *, const int *)'
| |-ParmVarDecl 0x20b42576d78 <col:17, col:23> col:23 used fp 'FILE *'
| |-ParmVarDecl 0x20b42576df8 <col:27, col:41> col:41 invalid a 'const int *'
| `-CompoundStmt 0x20b42582918 <line:289:1, line:299:1>
|   |-DeclStmt 0x20b42577058 <line:291:5, col:12>
|   | `-VarDecl 0x20b42576ff0 <col:5, col:9> col:9 used ret 'int'
|   |-IfStmt 0x20b425824f8 <line:293:5, line:294:18>
|   | |-OpaqueValueExpr 0x20b425824e0 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x20b425824d0 <col:9, col:18>
|   |   `-ParenExpr 0x20b425824b0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x20b42582488 <col:17> 'int' 0
|   `-ReturnStmt 0x20b42582908 <line:298:5, col:16>
|     `-ImplicitCastExpr 0x20b425828f0 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x20b425828d0 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x20b425828b0 <col:13> 'int' lvalue Var 0x20b42576ff0 'ret' 'int'
|-FunctionDecl 0x20b42582ab0 <line:302:1, line:325:1> line:302:5 invalid BN_print 'int (int *, const int *)'
| |-ParmVarDecl 0x20b42582958 <col:14, col:19> col:19 invalid bp 'int *'
| |-ParmVarDecl 0x20b425829d8 <col:23, col:37> col:37 invalid a 'const int *'
| `-CompoundStmt 0x20b42580930 <line:303:1, line:325:1>
|   |-DeclStmt 0x20b42582dc8 <line:304:5, col:23>
|   | |-VarDecl 0x20b42582b90 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x20b42582c10 <col:5, col:12> col:12 used j 'int'
|   | |-VarDecl 0x20b42582c90 <col:5, col:15> col:15 used v 'int'
|   | `-VarDecl 0x20b42582d10 <col:5, col:22> col:18 used z 'int' cinit
|   |   `-IntegerLiteral 0x20b42582d78 <col:22> 'int' 0
|   |-DeclStmt 0x20b42582e88 <line:305:5, col:16>
|   | `-VarDecl 0x20b42582df8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x20b42582e60 <col:15> 'int' 0
|   |-IfStmt 0x20b425830a0 <line:307:5, line:308:14>
|   | |-OpaqueValueExpr 0x20b42583088 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x20b42583070 <col:9, col:14> 'end' 0x20b42583020
|   |-IfStmt 0x20b42583198 <line:309:5, line:310:14>
|   | |-OpaqueValueExpr 0x20b42583180 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x20b42583168 <col:9, col:14> 'end' 0x20b42583020
|   |-ForStmt 0x20b425807f8 <line:311:5, line:321:5>
|   | |-<<<NULL>>>
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x20b42583270 <line:311:26, col:31> 'int' '>='
|   | | |-ImplicitCastExpr 0x20b42583258 <col:26> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x20b42583210 <col:26> 'int' lvalue Var 0x20b42582b90 'i' 'int'
|   | | `-IntegerLiteral 0x20b42583230 <col:31> 'int' 0
|   | |-UnaryOperator 0x20b425802a0 <col:34, col:35> 'int' postfix '--'
|   | | `-DeclRefExpr 0x20b42580280 <col:34> 'int' lvalue Var 0x20b42582b90 'i' 'int'
|   | `-CompoundStmt 0x20b425807e0 <col:39, line:321:5>
|   |   `-ForStmt 0x20b425807a8 <line:312:9, line:320:9>
|   |     |-<<<NULL>>>
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x20b42580378 <line:312:32, col:37> 'int' '>='
|   |     | |-ImplicitCastExpr 0x20b42580360 <col:32> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x20b42580318 <col:32> 'int' lvalue Var 0x20b42582c10 'j' 'int'
|   |     | `-IntegerLiteral 0x20b42580338 <col:37> 'int' 0
|   |     |-CompoundAssignOperator 0x20b425803e0 <col:40, col:45> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     | |-DeclRefExpr 0x20b42580398 <col:40> 'int' lvalue Var 0x20b42582c10 'j' 'int'
|   |     | `-IntegerLiteral 0x20b425803b8 <col:45> 'int' 4
|   |     `-CompoundStmt 0x20b42580790 <col:48, line:320:9>
|   |       `-IfStmt 0x20b42580778 <line:315:13, line:319:13>
|   |         |-BinaryOperator 0x20b425805f8 <line:315:17, col:29> 'int' '||'
|   |         | |-ImplicitCastExpr 0x20b425805e0 <col:17> 'int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x20b42580508 <col:17> 'int' lvalue Var 0x20b42582d10 'z' 'int'
|   |         | `-ParenExpr 0x20b425805c0 <col:22, col:29> 'int'
|   |         |   `-BinaryOperator 0x20b425805a0 <col:23, col:28> 'int' '!='
|   |         |     |-ImplicitCastExpr 0x20b42580588 <col:23> 'int' <LValueToRValue>
|   |         |     | `-DeclRefExpr 0x20b42580540 <col:23> 'int' lvalue Var 0x20b42582c90 'v' 'int'
|   |         |     `-IntegerLiteral 0x20b42580560 <col:28> 'int' 0
|   |         `-CompoundStmt 0x20b42580758 <col:32, line:319:13>
|   |           |-IfStmt 0x20b425806d8 <line:316:17, line:317:26>
|   |           | |-OpaqueValueExpr 0x20b425806c0 <<invalid sloc>> '_Bool'
|   |           | `-GotoStmt 0x20b425806a8 <col:21, col:26> 'end' 0x20b42583020
|   |           `-BinaryOperator 0x20b42580738 <line:318:17, col:21> 'int' '='
|   |             |-DeclRefExpr 0x20b425806f0 <col:17> 'int' lvalue Var 0x20b42582d10 'z' 'int'
|   |             `-IntegerLiteral 0x20b42580710 <col:21> 'int' 1
|   |-BinaryOperator 0x20b42580890 <line:322:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x20b42580830 <col:5> 'int' lvalue Var 0x20b42582df8 'ret' 'int'
|   | `-IntegerLiteral 0x20b42580868 <col:11> 'int' 1
|   `-LabelStmt 0x20b42580918 <line:323:2, line:324:16> 'end'
|     `-ReturnStmt 0x20b42580908 <col:5, col:16>
|       `-ImplicitCastExpr 0x20b425808f0 <col:12, col:16> 'int' <LValueToRValue>
|         `-ParenExpr 0x20b425808d0 <col:12, col:16> 'int' lvalue
|           `-DeclRefExpr 0x20b425808b0 <col:13> 'int' lvalue Var 0x20b42582df8 'ret' 'int'
`-FunctionDecl 0x20b42580a40 <line:327:1, line:343:1> line:327:7 BN_options 'char *(void)'
  `-CompoundStmt 0x20b42580f78 <line:328:1, line:343:1>
    |-DeclStmt 0x20b42580ba0 <line:329:5, col:24>
    | `-VarDecl 0x20b42580b10 <col:5, col:23> col:16 used init 'int' static cinit
    |   `-IntegerLiteral 0x20b42580b78 <col:23> 'int' 0
    |-DeclStmt 0x20b42580cc0 <line:330:5, col:25>
    | `-VarDecl 0x20b42580c58 <col:5, col:24> col:17 used data 'char [16]' static
    |-IfStmt 0x20b42580ef8 <line:332:5, line:341:5>
    | |-UnaryOperator 0x20b42580d28 <line:332:9, col:10> 'int' prefix '!' cannot overflow
    | | `-ImplicitCastExpr 0x20b42580d10 <col:10> 'int' <LValueToRValue>
    | |   `-DeclRefExpr 0x20b42580cd8 <col:10> 'int' lvalue Var 0x20b42580b10 'init' 'int'
    | `-CompoundStmt 0x20b42580ee0 <col:16, line:341:5>
    |   `-UnaryOperator 0x20b42580d60 <line:333:9, col:13> 'int' postfix '++'
    |     `-DeclRefExpr 0x20b42580d40 <col:9> 'int' lvalue Var 0x20b42580b10 'init' 'int'
    `-ReturnStmt 0x20b42580f68 <line:342:5, col:17>
      `-ImplicitCastExpr 0x20b42580f50 <col:12, col:17> 'char *' <ArrayToPointerDecay>
        `-ParenExpr 0x20b42580f30 <col:12, col:17> 'char [16]' lvalue
          `-DeclRefExpr 0x20b42580f10 <col:13> 'char [16]' lvalue Var 0x20b42580c58 'data' 'char [16]'
