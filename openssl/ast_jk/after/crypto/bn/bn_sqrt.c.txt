TranslationUnitDecl 0x1a852831688 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1a852831f20 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1a852831c20 '__int128'
|-TypedefDecl 0x1a852831f90 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1a852831c40 'unsigned __int128'
|-TypedefDecl 0x1a8528322c8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1a852832080 'struct __NSConstantString_tag'
|   `-Record 0x1a852831fe8 '__NSConstantString_tag'
|-TypedefDecl 0x1a852832338 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1a852831860 'unsigned long long'
|-TypedefDecl 0x1a8528323d0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1a852832390 'char *'
|   `-BuiltinType 0x1a852831720 'char'
|-TypedefDecl 0x1a852832440 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1a852832390 'char *'
|   `-BuiltinType 0x1a852831720 'char'
|-FunctionDecl 0x1a85410ed80 <.//openssl//file_jk/after\crypto\bn/bn_lcl.h:220:1, line:221:37> line:220:10 invalid bn_mul_add_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1a8528324e0 <col:27, col:37> col:37 invalid rp 'int *'
| |-ParmVarDecl 0x1a852832560 <col:41, col:57> col:57 invalid ap 'const int *'
| |-ParmVarDecl 0x1a8528325e0 <col:61, col:65> col:65 num 'int'
| `-ParmVarDecl 0x1a85410ec80 <line:221:27, col:36> col:36 invalid w 'int'
|-FunctionDecl 0x1a85410f088 <line:222:1, col:76> col:10 invalid bn_mul_words 'int (int *, const int *, int, int)'
| |-ParmVarDecl 0x1a85410ee58 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1a85410eed8 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1a85410ef58 <col:57, col:61> col:61 num 'int'
| `-ParmVarDecl 0x1a85410efd8 <col:66, col:75> col:75 invalid w 'int'
|-FunctionDecl 0x1a85410f348 <line:223:1, col:60> col:6 invalid bn_sqr_words 'void (int *, const int *, int)'
| |-ParmVarDecl 0x1a85410f160 <col:19, col:29> col:29 invalid rp 'int *'
| |-ParmVarDecl 0x1a85410f1e0 <col:33, col:49> col:49 invalid ap 'const int *'
| `-ParmVarDecl 0x1a85410f260 <col:53, col:57> col:57 num 'int'
|-FunctionDecl 0x1a85410f600 <line:224:1, col:57> col:10 invalid bn_div_words 'int (int, int, int)'
| |-ParmVarDecl 0x1a85410f418 <col:23, col:32> col:32 invalid h 'int'
| |-ParmVarDecl 0x1a85410f498 <col:35, col:44> col:44 invalid l 'int'
| `-ParmVarDecl 0x1a85410f518 <col:47, col:56> col:56 invalid d 'int'
|-FunctionDecl 0x1a85410f950 <line:225:1, line:226:30> line:225:10 invalid bn_add_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1a85410f6d0 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1a85410f750 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1a85410f7d0 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1a85410f850 <line:226:23, col:27> col:27 num 'int'
|-FunctionDecl 0x1a854110ca0 <line:227:1, line:228:30> line:227:10 invalid bn_sub_words 'int (int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1a85410fa28 <col:23, col:33> col:33 invalid rp 'int *'
| |-ParmVarDecl 0x1a85410faa8 <col:37, col:53> col:53 invalid ap 'const int *'
| |-ParmVarDecl 0x1a85410fb28 <col:57, col:73> col:73 invalid bp 'const int *'
| `-ParmVarDecl 0x1a85410fba8 <line:228:23, col:27> col:27 num 'int'
|-RecordDecl 0x1a854110d60 <line:230:1, line:238:1> line:230:8 invalid struct bignum_st definition
| |-FieldDecl 0x1a854110e38 <line:231:5, col:15> col:15 invalid d 'int *'
| |-FieldDecl 0x1a854110ea8 <line:233:5, col:9> col:9 top 'int'
| |-FieldDecl 0x1a854110f18 <line:235:5, col:9> col:9 dmax 'int'
| |-FieldDecl 0x1a854110f88 <line:236:5, col:9> col:9 neg 'int'
| `-FieldDecl 0x1a854110ff8 <line:237:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1a854111050 <line:241:1, line:252:1> line:241:8 invalid struct bn_mont_ctx_st definition
| |-FieldDecl 0x1a854111128 <line:242:5, col:9> col:9 ri 'int'
| |-FieldDecl 0x1a854111198 <line:243:5, col:12> col:12 invalid RR 'int'
| |-FieldDecl 0x1a854111208 <line:245:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1a854111278 <line:246:5, col:12> col:12 invalid Ni 'int'
| |-FieldDecl 0x1a854111370 <line:248:5, <invalid sloc>> col:14 invalid n0 'int [2]'
| `-FieldDecl 0x1a8541113e0 <line:251:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1a854111438 <line:258:1, line:264:1> line:258:8 invalid struct bn_recp_ctx_st definition
| |-FieldDecl 0x1a854111508 <line:259:5, col:12> col:12 invalid N 'int'
| |-FieldDecl 0x1a854111578 <line:260:5, col:12> col:12 invalid Nr 'int'
| |-FieldDecl 0x1a8541115e8 <line:261:5, col:9> col:9 num_bits 'int'
| |-FieldDecl 0x1a854111658 <line:262:5, col:9> col:9 shift 'int'
| `-FieldDecl 0x1a8541116c8 <line:263:5, col:9> col:9 flags 'int'
|-RecordDecl 0x1a854111720 <line:267:1, line:276:1> line:267:8 struct bn_gencb_st definition
| |-FieldDecl 0x1a8541117f8 <line:268:5, col:18> col:18 ver 'unsigned int'
| |-FieldDecl 0x1a854111868 <line:269:5, col:11> col:11 arg 'void *'
| |-RecordDecl 0x1a8541118c0 <line:270:5, line:275:5> line:270:5 union definition
| | |-FieldDecl 0x1a854111c10 <line:272:9, col:39> col:16 cb_1 'void (*)(int, int, void *)'
| | `-FieldDecl 0x1a85410ff18 <line:274:9, col:42> col:15 cb_2 'int (*)(int, int, int *)'
| `-FieldDecl 0x1a85410ffc8 <line:270:5, line:275:7> col:7 cb 'union (anonymous union at .//openssl//file_jk/after\crypto\bn/bn_lcl.h:270:5)':'union bn_gencb_st::(anonymous at .//openssl//file_jk/after\crypto\bn/bn_lcl.h:270:5)'
|-FunctionDecl 0x1a854110158 <line:649:1, col:40> col:6 invalid BN_RECP_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1a854110098 <col:23, col:36> col:36 invalid recp 'int *'
|-FunctionDecl 0x1a8541102a8 <line:650:1, col:39> col:6 invalid BN_MONT_CTX_init 'void (int *)'
| `-ParmVarDecl 0x1a854110218 <col:23, col:36> col:36 invalid ctx 'int *'
|-FunctionDecl 0x1a8541103f8 <line:652:1, col:23> col:6 invalid bn_init 'void (int *)'
| `-ParmVarDecl 0x1a854110368 <col:14, col:22> col:22 invalid a 'int *'
|-FunctionDecl 0x1a8541107b8 <line:653:1, col:73> col:6 invalid bn_mul_normal 'void (int *, int *, int, int *, int)'
| |-ParmVarDecl 0x1a8541104b8 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1a854110538 <col:33, col:43> col:43 invalid a 'int *'
| |-ParmVarDecl 0x1a8541105b8 <col:46, col:50> col:50 na 'int'
| |-ParmVarDecl 0x1a854110638 <col:54, col:64> col:64 invalid b 'int *'
| `-ParmVarDecl 0x1a8541106b8 <col:67, col:71> col:71 nb 'int'
|-FunctionDecl 0x1a854110a78 <line:654:1, col:57> col:6 invalid bn_mul_comba8 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1a854110898 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1a854110918 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1a854110998 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1a854112d60 <line:655:1, col:57> col:6 invalid bn_mul_comba4 'void (int *, int *, int *)'
| |-ParmVarDecl 0x1a854110b48 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1a854110bc8 <col:33, col:43> col:43 invalid a 'int *'
| `-ParmVarDecl 0x1a854112cc0 <col:46, col:56> col:56 invalid b 'int *'
|-FunctionDecl 0x1a8541130a8 <line:656:1, col:72> col:6 invalid bn_sqr_normal 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1a854112e30 <col:20, col:30> col:30 invalid r 'int *'
| |-ParmVarDecl 0x1a854112eb0 <col:33, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x1a854112f30 <col:52, col:56> col:56 n 'int'
| `-ParmVarDecl 0x1a854112fb0 <col:59, col:69> col:69 invalid tmp 'int *'
|-FunctionDecl 0x1a8541132d8 <line:657:1, col:50> col:6 invalid bn_sqr_comba8 'void (int *, const int *)'
| |-ParmVarDecl 0x1a854113180 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1a854113200 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1a8541134b8 <line:658:1, col:50> col:6 invalid bn_sqr_comba4 'void (int *, const int *)'
| |-ParmVarDecl 0x1a8541133a0 <col:20, col:30> col:30 invalid r 'int *'
| `-ParmVarDecl 0x1a854113420 <col:33, col:49> col:49 invalid a 'const int *'
|-FunctionDecl 0x1a854113770 <line:659:1, col:61> col:5 invalid bn_cmp_words 'int (const int *, const int *, int)'
| |-ParmVarDecl 0x1a854113580 <col:18, col:34> col:34 invalid a 'const int *'
| |-ParmVarDecl 0x1a854113600 <col:37, col:53> col:53 invalid b 'const int *'
| `-ParmVarDecl 0x1a854113680 <col:56, col:60> col:60 n 'int'
|-FunctionDecl 0x1a854113ac0 <line:660:1, col:75> col:5 invalid bn_cmp_part_words 'int (const int *, const int *, int, int)'
| |-ParmVarDecl 0x1a854113840 <col:23, col:39> col:39 invalid a 'const int *'
| |-ParmVarDecl 0x1a8541138c0 <col:42, col:58> col:58 invalid b 'const int *'
| |-ParmVarDecl 0x1a854113940 <col:61, col:65> col:65 cl 'int'
| `-ParmVarDecl 0x1a8541139c0 <col:69, col:73> col:73 dl 'int'
|-FunctionDecl 0x1a854124338 <line:661:1, line:662:52> line:661:6 invalid bn_mul_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1a854113b98 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1a854113c18 <col:36, col:46> col:46 invalid a 'int *'
| |-ParmVarDecl 0x1a854124010 <col:49, col:59> col:59 invalid b 'int *'
| |-ParmVarDecl 0x1a854124090 <col:62, col:66> col:66 n2 'int'
| |-ParmVarDecl 0x1a854124110 <line:662:23, col:27> col:27 dna 'int'
| |-ParmVarDecl 0x1a854124190 <col:32, col:36> col:36 dnb 'int'
| `-ParmVarDecl 0x1a854124210 <col:41, col:51> col:51 invalid t 'int *'
|-FunctionDecl 0x1a8541247e8 <line:663:1, line:664:64> line:663:6 invalid bn_mul_part_recursive 'void (int *, int *, int *, int, int, int, int *)'
| |-ParmVarDecl 0x1a854124428 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1a8541244a8 <col:41, col:51> col:51 invalid a 'int *'
| |-ParmVarDecl 0x1a854124528 <col:54, col:64> col:64 invalid b 'int *'
| |-ParmVarDecl 0x1a8541245a8 <line:664:28, col:32> col:32 n 'int'
| |-ParmVarDecl 0x1a854124628 <col:35, col:39> col:39 tna 'int'
| |-ParmVarDecl 0x1a8541246a8 <col:44, col:48> col:48 tnb 'int'
| `-ParmVarDecl 0x1a854124728 <col:53, col:63> col:63 invalid t 'int *'
|-FunctionDecl 0x1a854124b00 <line:665:1, col:74> col:6 invalid bn_sqr_recursive 'void (int *, const int *, int, int *)'
| |-ParmVarDecl 0x1a8541248d8 <col:23, col:33> col:33 invalid r 'int *'
| |-ParmVarDecl 0x1a854124958 <col:36, col:52> col:52 invalid a 'const int *'
| |-ParmVarDecl 0x1a8541249d8 <col:55, col:59> col:59 n2 'int'
| `-ParmVarDecl 0x1a854124a58 <col:63, col:73> col:73 invalid t 'int *'
|-FunctionDecl 0x1a854124e48 <line:666:1, col:68> col:6 invalid bn_mul_low_normal 'void (int *, int *, int *, int)'
| |-ParmVarDecl 0x1a854124bd8 <col:24, col:34> col:34 invalid r 'int *'
| |-ParmVarDecl 0x1a854124c58 <col:37, col:47> col:47 invalid a 'int *'
| |-ParmVarDecl 0x1a854124cd8 <col:50, col:60> col:60 invalid b 'int *'
| `-ParmVarDecl 0x1a854124d58 <col:63, col:67> col:67 n 'int'
|-FunctionDecl 0x1a854122208 <line:667:1, line:668:38> line:667:6 invalid bn_mul_low_recursive 'void (int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1a854124f20 <col:27, col:37> col:37 invalid r 'int *'
| |-ParmVarDecl 0x1a854124fa0 <col:40, col:50> col:50 invalid a 'int *'
| |-ParmVarDecl 0x1a854122008 <col:53, col:63> col:63 invalid b 'int *'
| |-ParmVarDecl 0x1a854122088 <col:66, col:70> col:70 n2 'int'
| `-ParmVarDecl 0x1a854122108 <line:668:27, col:37> col:37 invalid t 'int *'
|-FunctionDecl 0x1a854122678 <line:669:1, line:670:29> line:669:6 invalid bn_mul_high 'void (int *, int *, int *, int *, int, int *)'
| |-ParmVarDecl 0x1a8541222e8 <col:18, col:28> col:28 invalid r 'int *'
| |-ParmVarDecl 0x1a854122368 <col:31, col:41> col:41 invalid a 'int *'
| |-ParmVarDecl 0x1a8541223e8 <col:44, col:54> col:54 invalid b 'int *'
| |-ParmVarDecl 0x1a854122468 <col:57, col:67> col:67 invalid l 'int *'
| |-ParmVarDecl 0x1a8541224e8 <col:70, col:74> col:74 n2 'int'
| `-ParmVarDecl 0x1a854122568 <line:670:18, col:28> col:28 invalid t 'int *'
|-FunctionDecl 0x1a854122a70 <line:671:1, line:672:42> line:671:10 invalid bn_add_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1a854122760 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1a8541227e0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1a854122860 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1a8541228e0 <line:672:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1a854122960 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1a854122e08 <line:673:1, line:674:42> line:673:10 invalid bn_sub_part_words 'int (int *, const int *, const int *, int, int)'
| |-ParmVarDecl 0x1a854122b50 <col:28, col:38> col:38 invalid r 'int *'
| |-ParmVarDecl 0x1a854122bd0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1a854122c50 <col:60, col:76> col:76 invalid b 'const int *'
| |-ParmVarDecl 0x1a854122cd0 <line:674:28, col:32> col:32 cl 'int'
| `-ParmVarDecl 0x1a854122d50 <col:36, col:40> col:40 dl 'int'
|-FunctionDecl 0x1a854120270 <line:675:1, line:676:64> line:675:5 invalid bn_mul_mont 'int (int *, const int *, const int *, const int *, const int *, int)'
| |-ParmVarDecl 0x1a854122ee8 <col:17, col:27> col:27 invalid rp 'int *'
| |-ParmVarDecl 0x1a854122f68 <col:31, col:47> col:47 invalid ap 'const int *'
| |-ParmVarDecl 0x1a85411ffd0 <col:51, col:67> col:67 invalid bp 'const int *'
| |-ParmVarDecl 0x1a854120050 <line:676:17, col:33> col:33 invalid np 'const int *'
| |-ParmVarDecl 0x1a8541200d0 <col:37, col:53> col:53 invalid n0 'const int *'
| `-ParmVarDecl 0x1a854120150 <col:57, col:61> col:61 num 'int'
|-FunctionDecl 0x1a854120660 <line:678:1, line:680:38> line:678:9 invalid int_bn_mod_inverse 'int *(int *, const int *, const int *, int *, int *)'
| |-ParmVarDecl 0x1a854120358 <col:28, col:36> col:36 invalid in 'int *'
| |-ParmVarDecl 0x1a8541203d8 <line:679:28, col:42> col:42 invalid a 'const int *'
| |-ParmVarDecl 0x1a854120458 <col:45, col:59> col:59 invalid n 'const int *'
| |-ParmVarDecl 0x1a8541204d8 <col:62, col:70> col:70 invalid ctx 'int *'
| `-ParmVarDecl 0x1a854120558 <line:680:28, col:33> col:33 noinv 'int *'
|-FunctionDecl 0x1a854120a50 <line:682:1, line:683:75> line:682:5 invalid bn_probable_prime_dh 'int (int *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x1a854120740 <col:26, col:34> col:34 invalid rnd 'int *'
| |-ParmVarDecl 0x1a8541207c0 <col:39, col:43> col:43 bits 'int'
| |-ParmVarDecl 0x1a854120840 <line:683:26, col:40> col:40 invalid add 'const int *'
| |-ParmVarDecl 0x1a8541208c0 <col:45, col:59> col:59 invalid rem 'const int *'
| `-ParmVarDecl 0x1a854120940 <col:64, col:72> col:72 invalid ctx 'int *'
|-FunctionDecl 0x1a854120d20 <line:684:1, col:66> col:5 invalid bn_probable_prime_dh_retry 'int (int *, int, int *)'
| |-ParmVarDecl 0x1a854120b30 <col:32, col:40> col:40 invalid rnd 'int *'
| |-ParmVarDecl 0x1a854120bb0 <col:45, col:49> col:49 bits 'int'
| `-ParmVarDecl 0x1a854120c30 <col:55, col:63> col:63 invalid ctx 'int *'
|-FunctionDecl 0x1a854126030 <line:685:1, col:68> col:5 invalid bn_probable_prime_dh_coprime 'int (int *, int, int *)'
| |-ParmVarDecl 0x1a854120df0 <col:34, col:42> col:42 invalid rnd 'int *'
| |-ParmVarDecl 0x1a854120e70 <col:47, col:51> col:51 bits 'int'
| `-ParmVarDecl 0x1a854120ef0 <col:57, col:65> col:65 invalid ctx 'int *'
`-VarDecl 0x1a854126100 <line:687:1, col:20> col:20 invalid BIGNUM 'int' static
