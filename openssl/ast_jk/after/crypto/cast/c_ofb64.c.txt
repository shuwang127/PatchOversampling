TranslationUnitDecl 0x25c9976c938 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x25c9976d1d0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x25c9976ced0 '__int128'
|-TypedefDecl 0x25c9976d240 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x25c9976cef0 'unsigned __int128'
|-TypedefDecl 0x25c9976d578 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x25c9976d330 'struct __NSConstantString_tag'
|   `-Record 0x25c9976d298 '__NSConstantString_tag'
|-TypedefDecl 0x25c9976d5e8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x25c9976cb10 'unsigned long long'
|-TypedefDecl 0x25c9976d680 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x25c9976d640 'char *'
|   `-BuiltinType 0x25c9976c9d0 'char'
|-TypedefDecl 0x25c9976d6f0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x25c9976d640 'char *'
|   `-BuiltinType 0x25c9976c9d0 'char'
|-VarDecl 0x25c9976d830 <.//openssl//file_jk/after\crypto\cast/cast_lcl.h:183:1, <invalid sloc>> col:24 invalid CAST_S_table0 'const int [256]' extern
|-VarDecl 0x25c9b056ee0 <line:184:1, <invalid sloc>> col:24 invalid CAST_S_table1 'const int [256]' extern
|-VarDecl 0x25c9b056fb0 <line:185:1, <invalid sloc>> col:24 invalid CAST_S_table2 'const int [256]' extern
|-VarDecl 0x25c9b057080 <line:186:1, <invalid sloc>> col:24 invalid CAST_S_table3 'const int [256]' extern
|-VarDecl 0x25c9b057150 <line:187:1, <invalid sloc>> col:24 invalid CAST_S_table4 'const int [256]' extern
|-VarDecl 0x25c9b057220 <line:188:1, <invalid sloc>> col:24 invalid CAST_S_table5 'const int [256]' extern
|-VarDecl 0x25c9b0572f0 <line:189:1, <invalid sloc>> col:24 invalid CAST_S_table6 'const int [256]' extern
|-VarDecl 0x25c9b0573c0 <line:190:1, <invalid sloc>> col:24 invalid CAST_S_table7 'const int [256]' extern
`-FunctionDecl 0x25c9b057868 <.//openssl//file_jk/after\crypto\cast\c_ofb64.c:18:1, line:61:1> line:18:6 invalid CAST_ofb64_encrypt 'void (const unsigned char *, unsigned char *, long, const int *, unsigned char *, int *)'
  |-ParmVarDecl 0x25c9b057470 <col:25, col:46> col:46 used in 'const unsigned char *'
  |-ParmVarDecl 0x25c9b057520 <col:50, col:65> col:65 used out 'unsigned char *'
  |-ParmVarDecl 0x25c9b0575a0 <line:19:25, col:30> col:30 used length 'long'
  |-ParmVarDecl 0x25c9b057620 <col:38, col:54> col:54 invalid schedule 'const int *'
  |-ParmVarDecl 0x25c9b0576a0 <line:20:25, col:40> col:40 used ivec 'unsigned char *'
  |-ParmVarDecl 0x25c9b057750 <col:46, col:51> col:51 used num 'int *'
  `-CompoundStmt 0x25c9b059b38 <line:21:1, line:61:1>
    |-DeclStmt 0x25c9b0579d0 <line:22:5, col:33>
    | `-VarDecl 0x25c9b057968 <col:5, col:24> col:24 invalid v0 'int' register
    |-DeclStmt 0x25c9b057ae8 <line:23:5, col:26>
    | `-VarDecl 0x25c9b057a00 <col:5, col:23> col:18 used n 'int' register cinit
    |   `-ImplicitCastExpr 0x25c9b057ad0 <col:22, col:23> 'int' <LValueToRValue>
    |     `-UnaryOperator 0x25c9b057ab8 <col:22, col:23> 'int' lvalue prefix '*' cannot overflow
    |       `-ImplicitCastExpr 0x25c9b057aa0 <col:23> 'int *' <LValueToRValue>
    |         `-DeclRefExpr 0x25c9b057a68 <col:23> 'int *' lvalue ParmVar 0x25c9b057750 'num' 'int *'
    |-DeclStmt 0x25c9b057bd0 <line:24:5, col:29>
    | `-VarDecl 0x25c9b057b18 <col:5, col:23> col:19 used l 'long' register cinit
    |   `-ImplicitCastExpr 0x25c9b057bb8 <col:23> 'long' <LValueToRValue>
    |     `-DeclRefExpr 0x25c9b057b80 <col:23> 'long' lvalue ParmVar 0x25c9b0575a0 'length' 'long'
    |-DeclStmt 0x25c9b057cf8 <line:25:5, col:23>
    | `-VarDecl 0x25c9b057c90 <col:5, col:22> col:19 used d 'unsigned char [8]'
    |-DeclStmt 0x25c9b057d90 <line:26:5, col:22>
    | `-VarDecl 0x25c9b057d28 <col:5, col:20> col:20 used dp 'char *' register
    |-DeclStmt 0x25c9b057e28 <line:28:5, col:22>
    | `-VarDecl 0x25c9b057dc0 <col:5, col:20> col:20 used iv 'unsigned char *'
    |-DeclStmt 0x25c9b057f18 <line:29:5, col:17>
    | `-VarDecl 0x25c9b057e58 <col:5, col:16> col:9 used save 'int' cinit
    |   `-IntegerLiteral 0x25c9b057ef0 <col:16> 'int' 0
    |-BinaryOperator 0x25c9b057fb8 <line:31:5, col:10> 'unsigned char *' '='
    | |-DeclRefExpr 0x25c9b057f30 <col:5> 'unsigned char *' lvalue Var 0x25c9b057dc0 'iv' 'unsigned char *'
    | `-ImplicitCastExpr 0x25c9b057fa0 <col:10> 'unsigned char *' <LValueToRValue>
    |   `-DeclRefExpr 0x25c9b057f68 <col:10> 'unsigned char *' lvalue ParmVar 0x25c9b0576a0 'ivec' 'unsigned char *'
    |-BinaryOperator 0x25c9b058ce0 <line:36:5, col:18> 'char *' '='
    | |-DeclRefExpr 0x25c9b058c18 <col:5> 'char *' lvalue Var 0x25c9b057d28 'dp' 'char *'
    | `-CStyleCastExpr 0x25c9b058cb8 <col:10, col:18> 'char *' <BitCast>
    |   `-ImplicitCastExpr 0x25c9b058ca0 <col:18> 'unsigned char *' <ArrayToPointerDecay> part_of_explicit_cast
    |     `-DeclRefExpr 0x25c9b058c50 <col:18> 'unsigned char [8]' lvalue Var 0x25c9b057c90 'd' 'unsigned char [8]'
    |-WhileStmt 0x25c9b059220 <line:39:5, line:51:5>
    | |-UnaryOperator 0x25c9b0563d8 <line:39:12, col:13> 'long' postfix '--'
    | | `-DeclRefExpr 0x25c9b0563a0 <col:12> 'long' lvalue Var 0x25c9b057b18 'l' 'long'
    | `-CompoundStmt 0x25c9b0591f8 <col:17, line:51:5>
    |   |-IfStmt 0x25c9b056e30 <line:40:9, line:48:9>
    |   | |-BinaryOperator 0x25c9b056468 <line:40:13, col:18> 'int' '=='
    |   | | |-ImplicitCastExpr 0x25c9b056450 <col:13> 'int' <LValueToRValue>
    |   | | | `-DeclRefExpr 0x25c9b0563f0 <col:13> 'int' lvalue Var 0x25c9b057a00 'n' 'int'
    |   | | `-IntegerLiteral 0x25c9b056428 <col:18> 'int' 0
    |   | `-CompoundStmt 0x25c9b056e10 <col:21, line:48:9>
    |   |   |-BinaryOperator 0x25c9b0566a0 <line:42:13, col:26> 'char *' '='
    |   |   | |-DeclRefExpr 0x25c9b056608 <col:13> 'char *' lvalue Var 0x25c9b057d28 'dp' 'char *'
    |   |   | `-CStyleCastExpr 0x25c9b056678 <col:18, col:26> 'char *' <BitCast>
    |   |   |   `-ImplicitCastExpr 0x25c9b056660 <col:26> 'unsigned char *' <ArrayToPointerDecay> part_of_explicit_cast
    |   |   |     `-DeclRefExpr 0x25c9b056628 <col:26> 'unsigned char [8]' lvalue Var 0x25c9b057c90 'd' 'unsigned char [8]'
    |   |   `-UnaryOperator 0x25c9b056df8 <line:47:13, col:17> 'int' postfix '++'
    |   |     `-DeclRefExpr 0x25c9b056dc0 <col:13> 'int' lvalue Var 0x25c9b057e58 'save' 'int'
    |   |-BinaryOperator 0x25c9b0590b0 <line:49:9, col:33> 'unsigned char' '='
    |   | |-UnaryOperator 0x25c9b056eb8 <col:9, col:16> 'unsigned char' lvalue prefix '*' cannot overflow
    |   | | `-ParenExpr 0x25c9b056e98 <col:10, col:16> 'unsigned char *'
    |   | |   `-UnaryOperator 0x25c9b056e80 <col:11, col:14> 'unsigned char *' postfix '++'
    |   | |     `-DeclRefExpr 0x25c9b056e48 <col:11> 'unsigned char *' lvalue ParmVar 0x25c9b057520 'out' 'unsigned char *'
    |   | `-ImplicitCastExpr 0x25c9b059098 <col:20, col:33> 'unsigned char' <IntegralCast>
    |   |   `-BinaryOperator 0x25c9b059078 <col:20, col:33> 'int' '^'
    |   |     |-ImplicitCastExpr 0x25c9b059030 <col:20, col:26> 'int' <IntegralCast>
    |   |     | `-ImplicitCastExpr 0x25c9b059018 <col:20, col:26> 'unsigned char' <LValueToRValue>
    |   |     |   `-UnaryOperator 0x25c9b058f70 <col:20, col:26> 'const unsigned char' lvalue prefix '*' cannot overflow
    |   |     |     `-ParenExpr 0x25c9b058f50 <col:21, col:26> 'const unsigned char *'
    |   |     |       `-UnaryOperator 0x25c9b058f38 <col:22, col:24> 'const unsigned char *' postfix '++'
    |   |     |         `-DeclRefExpr 0x25c9b058f00 <col:22> 'const unsigned char *' lvalue ParmVar 0x25c9b057470 'in' 'const unsigned char *'
    |   |     `-ImplicitCastExpr 0x25c9b059060 <col:30, col:33> 'int' <IntegralCast>
    |   |       `-ImplicitCastExpr 0x25c9b059048 <col:30, col:33> 'unsigned char' <LValueToRValue>
    |   |         `-ArraySubscriptExpr 0x25c9b058ff8 <col:30, col:33> 'unsigned char' lvalue
    |   |           |-ImplicitCastExpr 0x25c9b058fc8 <col:30> 'unsigned char *' <ArrayToPointerDecay>
    |   |           | `-DeclRefExpr 0x25c9b058f88 <col:30> 'unsigned char [8]' lvalue Var 0x25c9b057c90 'd' 'unsigned char [8]'
    |   |           `-ImplicitCastExpr 0x25c9b058fe0 <col:32> 'int' <LValueToRValue>
    |   |             `-DeclRefExpr 0x25c9b058fa8 <col:32> 'int' lvalue Var 0x25c9b057a00 'n' 'int'
    |   `-BinaryOperator 0x25c9b0591d8 <line:50:9, col:23> 'int' '='
    |     |-DeclRefExpr 0x25c9b0590d0 <col:9> 'int' lvalue Var 0x25c9b057a00 'n' 'int'
    |     `-BinaryOperator 0x25c9b0591b8 <col:13, col:23> 'int' '&'
    |       |-ParenExpr 0x25c9b059170 <col:13, col:19> 'int'
    |       | `-BinaryOperator 0x25c9b059150 <col:14, col:18> 'int' '+'
    |       |   |-ImplicitCastExpr 0x25c9b059138 <col:14> 'int' <LValueToRValue>
    |       |   | `-DeclRefExpr 0x25c9b0590f0 <col:14> 'int' lvalue Var 0x25c9b057a00 'n' 'int'
    |       |   `-IntegerLiteral 0x25c9b059110 <col:18> 'int' 1
    |       `-IntegerLiteral 0x25c9b059190 <col:23> 'int' 7
    |-IfStmt 0x25c9b059a00 <line:52:5, line:58:5>
    | |-ImplicitCastExpr 0x25c9b059258 <line:52:9> 'int' <LValueToRValue>
    | | `-DeclRefExpr 0x25c9b059238 <col:9> 'int' lvalue Var 0x25c9b057e58 'save' 'int'
    | `-CompoundStmt 0x25c9b0599e8 <col:15, line:58:5>
    |   `-BinaryOperator 0x25c9b059318 <line:55:9, col:14> 'unsigned char *' '='
    |     |-DeclRefExpr 0x25c9b0592c0 <col:9> 'unsigned char *' lvalue Var 0x25c9b057dc0 'iv' 'unsigned char *'
    |     `-ImplicitCastExpr 0x25c9b059300 <col:14> 'unsigned char *' <LValueToRValue>
    |       `-DeclRefExpr 0x25c9b0592e0 <col:14> 'unsigned char *' lvalue ParmVar 0x25c9b0576a0 'ivec' 'unsigned char *'
    `-BinaryOperator 0x25c9b059b18 <line:60:5, col:12> 'int' '='
      |-UnaryOperator 0x25c9b059ac8 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x25c9b059ab0 <col:6> 'int *' <LValueToRValue>
      |   `-DeclRefExpr 0x25c9b059a90 <col:6> 'int *' lvalue ParmVar 0x25c9b057750 'num' 'int *'
      `-ImplicitCastExpr 0x25c9b059b00 <col:12> 'int' <LValueToRValue>
        `-DeclRefExpr 0x25c9b059ae0 <col:12> 'int' lvalue Var 0x25c9b057a00 'n' 'int'
