TranslationUnitDecl 0x1b16e175fb8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1b16e176850 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1b16e176550 '__int128'
|-TypedefDecl 0x1b16e1768c0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1b16e176570 'unsigned __int128'
|-TypedefDecl 0x1b16e176bf8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1b16e1769b0 'struct __NSConstantString_tag'
|   `-Record 0x1b16e176918 '__NSConstantString_tag'
|-TypedefDecl 0x1b16e176c68 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1b16e176190 'unsigned long long'
|-TypedefDecl 0x1b16e176d00 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1b16e176cc0 'char *'
|   `-BuiltinType 0x1b16e176050 'char'
|-TypedefDecl 0x1b16e176d70 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1b16e176cc0 'char *'
|   `-BuiltinType 0x1b16e176050 'char'
|-TypedefDecl 0x1b16e176e30 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1b16e176190 'unsigned long long'
|-TypedefDecl 0x1b16e176ea0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1b16e176cc0 'char *'
|   `-BuiltinType 0x1b16e176050 'char'
|-FunctionDecl 0x1b16fc7e910 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b16fc7e9b0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1b16fc7ea20 <col:21> Implicit
|-FunctionDecl 0x1b16fc7ea78 prev 0x1b16fc7e910 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1b16fc7e7a0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1b16fc7eb68 <col:21> Inherited Implicit
|-TypedefDecl 0x1b16fc7eba8 prev 0x1b16e176c68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1b16e176190 'unsigned long long'
|-TypedefDecl 0x1b16fc7ec50 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1b16fc7ec20 'size_t' sugar
|   |-Typedef 0x1b16fc7eba8 'size_t'
|   `-BuiltinType 0x1b16e176190 'unsigned long long'
|-TypedefDecl 0x1b16fc7ecc0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1b16e1760f0 'long long'
|-TypedefDecl 0x1b16fc7ed30 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1b16e1760f0 'long long'
|-TypedefDecl 0x1b16fc7eda0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1b16e176130 'unsigned short'
|-TypedefDecl 0x1b16fc7ee10 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1b16e176130 'unsigned short'
|-TypedefDecl 0x1b16fc7ee80 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1b16e176130 'unsigned short'
|-TypedefDecl 0x1b16fc7eef0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1b16e1760b0 'int'
|-TypedefDecl 0x1b16fc7ef60 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1b16e1760d0 'long'
|-TypedefDecl 0x1b16fc7efd0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1b16e1760f0 'long long'
|-TypedefDecl 0x1b16fc7f060 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1b16fc7f030 '__time64_t' sugar
|   |-Typedef 0x1b16fc7efd0 '__time64_t'
|   `-BuiltinType 0x1b16e1760f0 'long long'
|-FunctionDecl 0x1b16fc7f1d8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1b16fc7f3f8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1b16fcb5550 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1b16fc7f538 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1b16fc7f5b0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1b16fc7f628 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1b16fc7f6a8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1b16fcb52f0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1b16fcb5630 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1b16fcb56f0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1b16fcb5860 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1b16fcb5810 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1b16fcb57b0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1b16fcb56d0 'struct threadlocaleinfostruct'
|       `-Record 0x1b16fcc7410 'threadlocaleinfostruct'
|-TypedefDecl 0x1b16fcb5970 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1b16fcb5920 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1b16fcb58c0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1b16fcb5790 'struct threadmbcinfostruct'
|       `-Record 0x1b16fcb56f0 'threadmbcinfostruct'
|-RecordDecl 0x1b16fcb59c8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1b16fcb5a80 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1b16fcb5b40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b16fcb5bd0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1b16fcb5c60 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1b16fcb5d18 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1b16fcb5cc0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1b16fcb5b20 'struct localeinfo_struct'
|     `-Record 0x1b16fcb5a80 'localeinfo_struct'
|-TypedefDecl 0x1b16fcb5df0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1b16fcb5da0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1b16fcb5cc0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1b16fcb5b20 'struct localeinfo_struct'
|       `-Record 0x1b16fcb5a80 'localeinfo_struct'
|-RecordDecl 0x1b16fcb5e68 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1b16fcb5f20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b16fcb5f98 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1b16fcb6058 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1b16fcb60f0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1b16fcb6160 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1b16fcb6218 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1b16fcb61c0 'struct localerefcount' sugar
|   `-RecordType 0x1b16fcb5f00 'struct localerefcount'
|     `-Record 0x1b16fcb5e68 'localerefcount'
|-RecordDecl 0x1b16fcc7410 prev 0x1b16fcb5630 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1b16fcc7490 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1b16fcc7508 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1b16fcc7578 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1b16fcc75e8 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1b16fcc7658 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1b16fcc7818 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1b16fcc7888 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1b16fcc78f8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1b16fcc7968 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1b16fcc79d8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1b16fcc7a48 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1b16fcc7aa0 parent 0x1b16e175fb8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1b16fcc7c30 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1b16fcc7ca0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1b16fcc7d10 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1b16fcc7d80 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1b16fcc7e20 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1b16fcc7e90 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1b16fcc7fa0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1b16fcc80d8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1b16fcc8188 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1b16fcc8130 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1b16fcb56d0 'struct threadlocaleinfostruct'
|     `-Record 0x1b16fcc7410 'threadlocaleinfostruct'
|-FunctionDecl 0x1b16fcc05b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1b16fcc8210 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1b16fcc82c0 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1b16fcc8340 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1b16fcc03a0 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcc0978 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1b16fcc0a18 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1b16fcc0a80 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1b16fcc0ae8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b16fcc0b68 prev 0x1b16fcc0978 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1b16fcc06a0 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1b16fcc0720 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1b16fcc0798 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcc0f28 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1b16fcc0c50 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1b16fcc0cd0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1b16fcc0d48 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcc8470 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fcc1010 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1b16fcc1090 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1b16fcc1108 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fcc11a0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fcc8778 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1b16fcc8818 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1b16fcc8880 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1b16fcc88e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b16fcc8968 prev 0x1b16fcc8778 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1b16fcc8560 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1b16fcc85e0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1b16fcc8658 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcc8d28 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1b16fcc8dc8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b16fcc8e30 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1b16fcc8e98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b16fcc8f18 prev 0x1b16fcc8d28 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1b16fcc8a50 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1b16fcc8ad0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1b16fcc8b48 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcc43e0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1b16fcc9028 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1b16fcc90c0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b16fcc9140 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1b16fcc91b8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b16fcc47a8 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1b16fcc4848 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b16fcc48b0 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1b16fcc4918 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b16fcc4998 prev 0x1b16fcc47a8 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1b16fcc44d0 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1b16fcc4550 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1b16fcc45c8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcc4e18 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1b16fcc4eb8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b16fcc4f20 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1b16fcc4f88 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1b16fcc4ff0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b16fcc5078 prev 0x1b16fcc4e18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1b16fcc4b60 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1b16fcc4be0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1b16fcc4c60 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1b16fcc4cd8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fcc5138 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1b16fcc5588 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1b16fcc5300 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1b16fcc53f0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1b16fcc5468 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fcc5640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1b16fcc5a30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1b16fcc5768 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1b16fcc57e0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fcc5860 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1b16fcc5e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1b16fcc5c10 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1b16fcc5c90 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1b16fcc5eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fcc62c0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1b16fcc5ff8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1b16fcc6070 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fcc60f0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1b16fcc1670 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1b16fcc1710 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1b16fcc1778 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b16fcc17f0 prev 0x1b16fcc1670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1b16fcc1488 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1b16fcc1508 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1b16fcc18a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fcc1bf8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1b16fcc19e8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1b16fcc1a60 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fcc1ae0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1b16fcc1f20 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1b16fcc1fc0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1b16fcc2028 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b16fcc20a0 prev 0x1b16fcc1f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1b16fcc1da0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1b16fcc1e20 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1b16fcc2150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fccc530 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1b16fccc5d0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b16fccc638 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b16fccc6b0 prev 0x1b16fccc530 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1b16fcc2298 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1b16fcc2318 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1b16fccc900 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1b16fccc9a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b16fccca10 prev 0x1b16fccc900 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1b16fccc790 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1b16fcccd08 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1b16fcccae8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1b16fcccb60 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcccf58 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1b16fcccde8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1b16fccce60 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1b16fccd288 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1b16fccd278 <line:132:5, col:51>
|     `-ConditionalOperator 0x1b16fccd248 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1b16fccd0b8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1b16fccd098 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1b16fccd068 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1b16fccd020 <col:13> 'const char *' lvalue ParmVar 0x1b16fcccde8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1b16fccd080 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1b16fccd040 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1b16fccd230 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1b16fccd0d8 <col:24> 'int' 0
|       `-CallExpr 0x1b16fccd1d0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1b16fccd1b8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1b16fccd100 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1b16fcccd08 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1b16fccd200 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1b16fccd120 <col:36> 'const char *' lvalue ParmVar 0x1b16fcccde8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1b16fccd218 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1b16fccd140 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1b16fccce60 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fccf5c8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1b16fccd2b8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1b16fccd330 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b16fccd3b0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1b16fccf490 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b16fccf8d0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1b16fccf970 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1b16fccf9d8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1b16fccfa40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b16fccfac0 prev 0x1b16fccf8d0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1b16fccf6b8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1b16fccf738 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1b16fccf7b0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fccfcf8 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1b16fccfba8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1b16fccffc0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1b16fcd0060 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b16fcd00c8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1b16fcd0140 prev 0x1b16fccffc0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1b16fccfdd0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1b16fccfe50 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1b16fcd03a0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b16fcd0220 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1b16fcd02a0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1b16fcc95b0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b16fcc9430 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1b16fcc94b0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1b16fcc9968 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1b16fcc9690 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fcc9710 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1b16fcc9788 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fcc9bd0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b16fcc9a50 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1b16fcc9ad0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1b16fcc9ec8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1b16fcc9cb0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fcc9d30 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1b16fcc9da8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fcca130 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b16fcc9fb0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1b16fcca030 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1b16fcd14b0 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1b16fcca210 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fcca290 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1b16fcca308 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fcd1868 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b16fcd1598 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fcd1618 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1b16fcd1690 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcd1cd0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fcd1950 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fcd19d0 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1b16fcd1a48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fcd1ac0 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fcd1fd8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b16fcd1dc0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fcd1e40 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1b16fcd1eb8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcd2370 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fcd20c0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fcd2140 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1b16fcd21b8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fcd2230 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fcca668 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1b16fcca708 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b16fcca770 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b16fcca7e8 prev 0x1b16fcca668 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1b16fcca440 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1b16fcca4c0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1b16fccaaa0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1b16fcca9c0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1b16fccab48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fccaf20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1b16fccac90 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1b16fccad08 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fccad88 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1b16fccb238 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1b16fccb2d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1b16fccb348 prev 0x1b16fccb238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1b16fccb100 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1b16fccb3f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fcd27d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1b16fcd25c0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1b16fcd2638 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fcd26b8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1b16fcd2ad8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1b16fcd28b8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1b16fcd2930 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcd2dc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b16fcd2c78 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1b16fcd2e70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fcd3280 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fcd2fb8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1b16fcd3030 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fcd30a8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fccd620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1b16fcd3428 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1b16fccd470 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b16fccd6d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fccdb88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1b16fccd818 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1b16fccd890 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b16fccd910 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1b16fccd988 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b16fcce008 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b16fcce0a8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b16fcce110 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b16fcce178 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b16fcce1f8 prev 0x1b16fcce008 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b16fccdd38 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1b16fccddb8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1b16fccde30 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fcce2b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fcce630 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b16fcce6d0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1b16fcce738 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b16fcce7a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b16fcce820 prev 0x1b16fcce630 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b16fcce3f8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fcce498 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1b16fcce510 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcceb20 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b16fcce908 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fcce988 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1b16fccea00 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fcceeb8 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fccec08 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fccec88 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1b16fcced00 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fcced78 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fccf250 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1b16fccefa8 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1b16fccf020 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b16fccf0a0 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1b16fccf118 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b16fccb5e8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b16fccb688 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b16fccb6f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b16fccb758 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b16fccb7d8 prev 0x1b16fccb5e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b16fccf400 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1b16fccb450 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1b16fccb4c8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fccb890 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fccbd48 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1b16fccb9d8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1b16fccba50 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b16fccbad0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1b16fccbb48 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fccc1c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1b16fccbef8 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1b16fccbf78 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1b16fccbff0 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fccc280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fcd3640 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1b16fcd36e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b16fcd3748 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b16fcd37c0 prev 0x1b16fcd3640 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1b16fccc3c8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1b16fcd34d0 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1b16fcd3a20 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1b16fcd3ac0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b16fcd3b28 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1b16fcd3ba0 prev 0x1b16fcd3a20 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1b16fcd38a0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1b16fcd3920 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1b16fcd3d60 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1b16fcd3c80 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1b16fcd3fb0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1b16fcd4050 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b16fcd40b8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b16fcd4130 prev 0x1b16fcd3fb0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1b16fcd3e38 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1b16fcd3eb8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1b16fcd4390 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1b16fcd4430 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b16fd47fc0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b16fd48038 prev 0x1b16fcd4390 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1b16fcd4210 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1b16fcd4290 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1b16fd48358 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1b16fd483f8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1b16fd48460 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b16fd484d8 prev 0x1b16fd48358 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1b16fd481d8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1b16fd48258 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1b16fd48588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd48968 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1b16fd486d0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1b16fd48750 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1b16fd487d0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1b16fd48bc0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1b16fd48a50 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1b16fd48ac8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd48e40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b16fd48d60 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1b16fd48ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd4d318 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fd4d110 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1b16fd4d188 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd4d200 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fd4d638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1b16fd4d4c0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1b16fd4d538 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b16fd4d6e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd4db00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1b16fd4dba0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1b16fd4dc08 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1b16fd4dc70 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b16fd4dcf0 prev 0x1b16fd4db00 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1b16fd4d830 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1b16fd4d8b0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1b16fd4d928 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd4e158 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fd4ddd8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1b16fd4de58 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1b16fd4ded0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd4df48 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fd4e400 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1b16fd4e4a0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1b16fd4e510 prev 0x1b16fd4e400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1b16fd4e320 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1b16fd4e5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1b16fd4e900 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b16fd4e780 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fd4e800 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1b16fd4e9b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1b16fd4ecf8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1b16fd4eb78 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fd4ebf8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1b16fd4eda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1b16fd4a018 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b16fd4ef70 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1b16fd4a0c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1b16fd4a4d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1b16fd4a2c0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1b16fd4a340 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1b16fd4a3b8 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fd4a590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1b16fd4a970 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1b16fd4a758 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1b16fd4a7d8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1b16fd4a850 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fd4aa28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1b16fd4acd0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b16fd4abf0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1b16fd4ad78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1b16fd4c100 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1b16fd4af40 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1b16fd4c000 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1b16fd4c1b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1b16fd4c458 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1b16fd4c378 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1b16fd4c500 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1b16fd4c790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1b16fd4c620 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1b16fd4cb20 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd4c860 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b16fd4c8d8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd4c950 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1b16fd4ced8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd4ccc0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b16fd4cd38 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1b16fd4cf88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd492e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1b16fd49388 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1b16fd493f0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1b16fd49468 prev 0x1b16fd492e8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1b16fd490c8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd49140 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b16fd49760 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1b16fd49800 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1b16fd49868 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1b16fd498e0 prev 0x1b16fd49760 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1b16fd49540 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd495b8 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b16fd49bc0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd499b8 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b16fd49a30 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd49aa8 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1b16fd49ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd49d60 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b16fd49dd8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1b16fd49f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd4b308 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd4b0e8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd4b160 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1b16fd4b550 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1b16fd4b5f0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1b16fd4b660 prev 0x1b16fd4b550 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1b16fd4b3e0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1b16fd4b948 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b16fd4b730 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd4b7a8 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd4bb90 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1b16fd4ba20 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd4ba98 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1b16fd4bf28 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1b16fd4bf18 <line:307:5, col:56>
|     `-ConditionalOperator 0x1b16fd4bee8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1b16fd4bd50 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1b16fd4bd30 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1b16fd4bd00 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1b16fd4bc58 <col:13> 'const wchar_t *' lvalue ParmVar 0x1b16fd4ba20 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1b16fd4bd18 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1b16fd4bce0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1b16fd4bcb8 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1b16fd4bc78 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1b16fd4bed0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1b16fd4bd70 <col:29> 'int' 0
|       `-CallExpr 0x1b16fd4be70 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1b16fd4be58 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1b16fd4bd98 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1b16fd4b948 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1b16fd4bea0 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1b16fd4bdb8 <col:41> 'const wchar_t *' lvalue ParmVar 0x1b16fd4ba20 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1b16fd4beb8 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1b16fd4bdd8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1b16fd4ba98 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd52358 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1b16fd4bf50 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b16fd52060 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b16fd520d8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd52150 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b16fd527c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b16fd52500 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b16fd52578 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd525f0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fd52878 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd52c88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1b16fd52d28 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1b16fd52d90 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1b16fd52df8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1b16fd52e78 prev 0x1b16fd52c88 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1b16fd529b8 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd52a30 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd52aa8 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd501f0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1b16fd52f58 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b16fd52fd0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1b16fd50040 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd500b8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1b16fd505a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b16fd50398 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1b16fd50410 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd50488 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fd50658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd509b8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd50798 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd50810 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1b16fd50c00 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1b16fd50a90 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd50b08 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b16fd50e48 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd50cd8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd50d50 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1b16fd550f0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd50f20 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd50f98 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1b16fd553f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd55288 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b16fd55300 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1b16fd554a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd55910 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1b16fd555e8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b16fd55660 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd55740 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1b16fd55c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1b16fd55ab8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1b16fd55cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd530e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1b16fd55e18 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1b16fd55e90 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd55f10 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1b16fd53390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1b16fd532b8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1b16fd53438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd53800 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd53578 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1b16fd535f0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd53668 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1b16fd53a58 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd538e0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd53958 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b16fd53df8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b16fd53b30 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd53ba8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd53c20 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fd510d8 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b16fd53ed8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd53f50 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd53fc8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd51530 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fd511b8 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd51230 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd512a8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd51320 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fd51988 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1b16fd51618 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b16fd51690 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1b16fd51708 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1b16fd51780 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd51df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1b16fd51b30 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b16fd51ba8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1b16fd51c20 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fd51ea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd4f140 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1b16fd51fe8 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1b16fd4f4d0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1b16fd4f210 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b16fd4f288 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd4f300 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1b16fd4f888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1b16fd4f670 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b16fd4f6e8 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1b16fd4f938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd4fc98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1b16fd4fa78 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1b16fd4faf0 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd4ff08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b16fd4fe30 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1b16fd4ffb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd57470 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fd571a8 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b16fd57220 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd57298 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fd57828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b16fd57610 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1b16fd57688 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b16fd578d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd57b88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1b16fd57a18 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1b16fd57a90 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd57df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b16fd57d20 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1b16fd57ea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd5b280 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fd57fe0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b16fd5b0f0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd5b168 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fd5b590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b16fd5b420 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1b16fd5b498 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1b16fd5b640 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1b16fd5ba40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b16fd5b780 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b16fd5b7f8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd5b870 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd5be88 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fd5bb20 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1b16fd5bb98 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd5bc10 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd5bc88 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fd54080 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd5bf70 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd5bfe8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b16fd54368 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b16fd54158 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd541d0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd54248 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fd545c0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd54448 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd544c0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1b16fd548a8 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1b16fd54698 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd54710 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd54788 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fd54b98 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b16fd54988 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd54a00 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd54a78 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd54f20 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fd54c78 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd54cf0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd54d68 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd54de0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fd5e2b8 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b16fd55008 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd5e120 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1b16fd5e198 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1b16fd5e640 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1b16fd5e398 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd5e410 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd5e488 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1b16fd5e500 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1b16fd5e8a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1b16fd5e7c8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1b16fd5e948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1b16fd5ec80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd5eb08 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd5eb80 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1b16fd5ed30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1b16fd580c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1b16fd5eef0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd5ef68 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd5efe0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fd58178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1b16fd58540 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1b16fd58338 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b16fd583b0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1b16fd58428 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1b16fd585f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1b16fd58890 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b16fd587b8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1b16fd58938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1b16fd58c68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1b16fd58af8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1b16fd58b70 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1b16fd58d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1b16fd58fb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b16fd58ed8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1b16fd59058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1b16fd5a330 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1b16fd5a258 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1b16fd5a3d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1b16fd5a710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1b16fd5a598 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1b16fd5a610 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1b16fd5a7c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-TypedefDecl 0x1b16fd5a8e8 <.//openssl//file_jk/after\crypto\chacha\chacha_enc.c:16:1, col:22> col:22 referenced u32 'unsigned int'
| `-BuiltinType 0x1b16e176150 'unsigned int'
|-TypedefDecl 0x1b16fd5a958 <line:17:1, col:23> col:23 referenced u8 'unsigned char'
| `-BuiltinType 0x1b16e176110 'unsigned char'
|-RecordDecl 0x1b16fd5a9b0 <line:18:9, line:21:1> line:18:9 union definition
| |-FieldDecl 0x1b16fd5ab68 <line:19:5, col:13> col:9 referenced u 'u32 [16]'
| `-FieldDecl 0x1b16fd5acb8 <line:20:5, col:12> col:8 referenced c 'u8 [64]'
|-TypedefDecl 0x1b16fd5ad68 <line:18:1, line:21:3> col:3 referenced chacha_buf 'union chacha_buf':'chacha_buf'
| `-ElaboratedType 0x1b16fd5ad10 'union chacha_buf' sugar
|   `-RecordType 0x1b16fd5aa50 'chacha_buf'
|     `-Record 0x1b16fd5a9b0 ''
|-FunctionDecl 0x1b16fd5d178 <line:41:1, line:70:1> line:41:13 used chacha20_core 'void (chacha_buf *, const u32 *)' static
| |-ParmVarDecl 0x1b16fd5ae68 <col:27, col:39> col:39 used output 'chacha_buf *'
| |-ParmVarDecl 0x1b16fd5b000 <col:47, col:65> col:57 used input 'const u32 *':'const u32 *'
| `-CompoundStmt 0x1b16fd13240 <line:42:1, line:70:1>
|   |-DeclStmt 0x1b16fd5d308 <line:43:5, col:14>
|   | `-VarDecl 0x1b16fd5d2a0 <col:5, col:13> col:9 used x 'u32 [16]'
|   |-DeclStmt 0x1b16fd5d3a0 <line:44:5, col:10>
|   | `-VarDecl 0x1b16fd5d338 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x1b16fd5d708 <line:45:5, line:48:24>
|   | |-RecordDecl 0x1b16fd5d3b8 <line:45:11, line:48:5> line:45:11 union definition
|   | | |-FieldDecl 0x1b16fd5d488 <line:46:9, col:14> col:14 one 'long'
|   | | `-FieldDecl 0x1b16fd5d4f0 <line:47:9, col:14> col:14 referenced little 'char'
|   | `-VarDecl 0x1b16fd5d5a8 <line:45:5, line:48:23> col:7 used is_endian 'const union (anonymous union at .//openssl//file_jk/after\crypto\chacha\chacha_enc.c:45:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\chacha\chacha_enc.c:45:11)' cinit
|   |   `-InitListExpr 0x1b16fd5d690 <col:19, col:23> 'union (anonymous union at .//openssl//file_jk/after\crypto\chacha\chacha_enc.c:45:11)':'union (anonymous at .//openssl//file_jk/after\crypto\chacha\chacha_enc.c:45:11)' field Field 0x1b16fd5d488 'one' 'long'
|   |     `-ImplicitCastExpr 0x1b16fd5d6d8 <col:21> 'long' <IntegralCast>
|   |       `-IntegerLiteral 0x1b16fd5d610 <col:21> 'int' 1
|   |-CallExpr 0x1b16fd5d8d0 <line:50:5, col:31> 'void *'
|   | |-ImplicitCastExpr 0x1b16fd5d8b8 <col:5> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1b16fd5d720 <col:5> 'void *(void *, const void *, unsigned long long)' Function 0x1b16fcc8f18 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   | |-ImplicitCastExpr 0x1b16fd5d920 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1b16fd5d908 <col:12> 'u32 *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x1b16fd5d740 <col:12> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   | |-ImplicitCastExpr 0x1b16fd5d950 <col:15> 'const void *' <BitCast>
|   | | `-ImplicitCastExpr 0x1b16fd5d938 <col:15> 'const u32 *':'const u32 *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1b16fd5d778 <col:15> 'const u32 *':'const u32 *' lvalue ParmVar 0x1b16fd5b000 'input' 'const u32 *':'const u32 *'
|   | `-UnaryExprOrTypeTraitExpr 0x1b16fd5d7d8 <col:22, col:30> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x1b16fd5d7b8 <col:28, col:30> 'u32 [16]' lvalue
|   |     `-DeclRefExpr 0x1b16fd5d798 <col:29> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]' non_odr_use_unevaluated
|   |-ForStmt 0x1b16fd0eaf0 <line:52:5, line:61:5>
|   | |-BinaryOperator 0x1b16fd5d9c8 <line:52:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1b16fd5d968 <col:10> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|   | | `-IntegerLiteral 0x1b16fd5d9a0 <col:14> 'int' 20
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1b16fd5da48 <col:18, col:22> 'int' '>'
|   | | |-ImplicitCastExpr 0x1b16fd5da30 <col:18> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1b16fd5d9e8 <col:18> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|   | | `-IntegerLiteral 0x1b16fd5da08 <col:22> 'int' 0
|   | |-CompoundAssignOperator 0x1b16fd5dab0 <col:25, col:30> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x1b16fd5da68 <col:25> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|   | | `-IntegerLiteral 0x1b16fd5da88 <col:30> 'int' 2
|   | `-CompoundStmt 0x1b16fd0eaa0 <col:33, line:61:5>
|   |   |-ParenExpr 0x1b16fd60728 <line:33:32, line:37:64> 'u32':'unsigned int'
|   |   | `-BinaryOperator 0x1b16fd60708 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   |-BinaryOperator 0x1b16fd60170 <line:34:17, line:37:28> 'u32':'unsigned int' ','
|   |   |   | |-BinaryOperator 0x1b16fd59f70 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | |-BinaryOperator 0x1b16fd599d8 <line:34:17, line:36:28> 'u32':'unsigned int' ','
|   |   |   | | | |-BinaryOperator 0x1b16fd59870 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | |-BinaryOperator 0x1b16fd592d8 <line:34:17, line:35:28> 'u32':'unsigned int' ','
|   |   |   | | | | | |-BinaryOperator 0x1b16fd59170 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | | | |-CompoundAssignOperator 0x1b16fd5dbf8 <line:34:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | | | | |-ArraySubscriptExpr 0x1b16fd5db40 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | | | |-ImplicitCastExpr 0x1b16fd5db28 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | | | | `-DeclRefExpr 0x1b16fd5dae0 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | | | `-IntegerLiteral 0x1b16fd5db00 <line:53:22> 'int' 0
|   |   |   | | | | | | | `-ImplicitCastExpr 0x1b16fd5dbe0 <line:34:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | | |   `-ArraySubscriptExpr 0x1b16fd5dbc0 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | |     |-ImplicitCastExpr 0x1b16fd5dba8 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | |     | `-DeclRefExpr 0x1b16fd5db60 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | |     `-IntegerLiteral 0x1b16fd5db80 <line:53:25> 'int' 4
|   |   |   | | | | | | `-BinaryOperator 0x1b16fd59150 <line:34:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | | | |   |-ArraySubscriptExpr 0x1b16fd5dc88 <line:34:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |   | |-ImplicitCastExpr 0x1b16fd5dc70 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |   | | `-DeclRefExpr 0x1b16fd5dc28 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |   | `-IntegerLiteral 0x1b16fd5dc48 <line:53:31> 'int' 12
|   |   |   | | | | | |   `-ParenExpr 0x1b16fd59130 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | | | |     `-BinaryOperator 0x1b16fd59110 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | | | |       |-ParenExpr 0x1b16fd5dea0 <col:24, col:35> 'unsigned int'
|   |   |   | | | | | |       | `-BinaryOperator 0x1b16fd5de80 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | | | |       |   |-ParenExpr 0x1b16fd5de18 <col:25, col:27> 'unsigned int'
|   |   |   | | | | | |       |   | `-ParenExpr 0x1b16fd5ddf8 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |       |   |   `-BinaryOperator 0x1b16fd5ddd8 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |       |   |     |-ImplicitCastExpr 0x1b16fd5dda8 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd5dd08 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd5dcf0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd5dca8 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |     |   `-IntegerLiteral 0x1b16fd5dcc8 <line:53:31> 'int' 12
|   |   |   | | | | | |       |   |     `-ImplicitCastExpr 0x1b16fd5ddc0 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd5dd88 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |         |-ImplicitCastExpr 0x1b16fd5dd70 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |         | `-DeclRefExpr 0x1b16fd5dd28 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |         `-IntegerLiteral 0x1b16fd5dd48 <line:53:22> 'int' 0
|   |   |   | | | | | |       |   `-ParenExpr 0x1b16fd5de60 <line:23:32, col:34> 'int'
|   |   |   | | | | | |       |     `-IntegerLiteral 0x1b16fd5de38 <line:34:59> 'int' 16
|   |   |   | | | | | |       `-ParenExpr 0x1b16fd590f0 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | | | |         `-BinaryOperator 0x1b16fd590d0 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | | | |           |-ParenExpr 0x1b16fd5e030 <col:40, col:42> 'unsigned int'
|   |   |   | | | | | |           | `-ParenExpr 0x1b16fd5e010 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |           |   `-BinaryOperator 0x1b16fd5dff0 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |           |     |-ImplicitCastExpr 0x1b16fd5dfc0 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |     | `-ArraySubscriptExpr 0x1b16fd5df20 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |     |   |-ImplicitCastExpr 0x1b16fd5df08 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |     |   | `-DeclRefExpr 0x1b16fd5dec0 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |     |   `-IntegerLiteral 0x1b16fd5dee0 <line:53:31> 'int' 12
|   |   |   | | | | | |           |     `-ImplicitCastExpr 0x1b16fd5dfd8 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |       `-ArraySubscriptExpr 0x1b16fd5dfa0 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |         |-ImplicitCastExpr 0x1b16fd5df88 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |         | `-DeclRefExpr 0x1b16fd5df40 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |         `-IntegerLiteral 0x1b16fd5df60 <line:53:22> 'int' 0
|   |   |   | | | | | |           `-ParenExpr 0x1b16fd5e0e0 <line:23:47, col:56> 'int'
|   |   |   | | | | | |             `-BinaryOperator 0x1b16fd5e0c0 <col:48, col:55> 'int' '-'
|   |   |   | | | | | |               |-IntegerLiteral 0x1b16fd5e050 <col:48> 'int' 32
|   |   |   | | | | | |               `-ParenExpr 0x1b16fd5e0a0 <col:53, col:55> 'int'
|   |   |   | | | | | |                 `-IntegerLiteral 0x1b16fd5e078 <line:34:59> 'int' 16
|   |   |   | | | | | `-CompoundAssignOperator 0x1b16fd592a8 <line:35:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | |   |-ArraySubscriptExpr 0x1b16fd591f0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | |   | |-ImplicitCastExpr 0x1b16fd591d8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |   | | `-DeclRefExpr 0x1b16fd59190 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |   | `-IntegerLiteral 0x1b16fd591b0 <line:53:28> 'int' 8
|   |   |   | | | | |   `-ImplicitCastExpr 0x1b16fd59290 <line:35:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | |     `-ArraySubscriptExpr 0x1b16fd59270 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | |       |-ImplicitCastExpr 0x1b16fd59258 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |       | `-DeclRefExpr 0x1b16fd59210 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |       `-IntegerLiteral 0x1b16fd59230 <line:53:31> 'int' 12
|   |   |   | | | | `-BinaryOperator 0x1b16fd59850 <line:35:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | |   |-ArraySubscriptExpr 0x1b16fd59358 <line:35:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | |   | |-ImplicitCastExpr 0x1b16fd59340 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |   | | `-DeclRefExpr 0x1b16fd592f8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |   | `-IntegerLiteral 0x1b16fd59318 <line:53:25> 'int' 4
|   |   |   | | | |   `-ParenExpr 0x1b16fd59830 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | |     `-BinaryOperator 0x1b16fd59810 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | |       |-ParenExpr 0x1b16fd59570 <col:24, col:35> 'unsigned int'
|   |   |   | | | |       | `-BinaryOperator 0x1b16fd59550 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | |       |   |-ParenExpr 0x1b16fd594e8 <col:25, col:27> 'unsigned int'
|   |   |   | | | |       |   | `-ParenExpr 0x1b16fd594c8 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |       |   |   `-BinaryOperator 0x1b16fd594a8 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |       |   |     |-ImplicitCastExpr 0x1b16fd59478 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd593d8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd593c0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd59378 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |     |   `-IntegerLiteral 0x1b16fd59398 <line:53:25> 'int' 4
|   |   |   | | | |       |   |     `-ImplicitCastExpr 0x1b16fd59490 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd59458 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |         |-ImplicitCastExpr 0x1b16fd59440 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |         | `-DeclRefExpr 0x1b16fd593f8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |         `-IntegerLiteral 0x1b16fd59418 <line:53:28> 'int' 8
|   |   |   | | | |       |   `-ParenExpr 0x1b16fd59530 <line:23:32, col:34> 'int'
|   |   |   | | | |       |     `-IntegerLiteral 0x1b16fd59508 <line:35:59> 'int' 12
|   |   |   | | | |       `-ParenExpr 0x1b16fd597f0 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | |         `-BinaryOperator 0x1b16fd597d0 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | |           |-ParenExpr 0x1b16fd59700 <col:40, col:42> 'unsigned int'
|   |   |   | | | |           | `-ParenExpr 0x1b16fd596e0 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |           |   `-BinaryOperator 0x1b16fd596c0 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |           |     |-ImplicitCastExpr 0x1b16fd59690 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |     | `-ArraySubscriptExpr 0x1b16fd595f0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |     |   |-ImplicitCastExpr 0x1b16fd595d8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |     |   | `-DeclRefExpr 0x1b16fd59590 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |     |   `-IntegerLiteral 0x1b16fd595b0 <line:53:25> 'int' 4
|   |   |   | | | |           |     `-ImplicitCastExpr 0x1b16fd596a8 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |       `-ArraySubscriptExpr 0x1b16fd59670 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |         |-ImplicitCastExpr 0x1b16fd59658 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |         | `-DeclRefExpr 0x1b16fd59610 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |         `-IntegerLiteral 0x1b16fd59630 <line:53:28> 'int' 8
|   |   |   | | | |           `-ParenExpr 0x1b16fd597b0 <line:23:47, col:56> 'int'
|   |   |   | | | |             `-BinaryOperator 0x1b16fd59790 <col:48, col:55> 'int' '-'
|   |   |   | | | |               |-IntegerLiteral 0x1b16fd59720 <col:48> 'int' 32
|   |   |   | | | |               `-ParenExpr 0x1b16fd59770 <col:53, col:55> 'int'
|   |   |   | | | |                 `-IntegerLiteral 0x1b16fd59748 <line:35:59> 'int' 12
|   |   |   | | | `-CompoundAssignOperator 0x1b16fd599a8 <line:36:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | |   |-ArraySubscriptExpr 0x1b16fd598f0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | |   | |-ImplicitCastExpr 0x1b16fd598d8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |   | | `-DeclRefExpr 0x1b16fd59890 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |   | `-IntegerLiteral 0x1b16fd598b0 <line:53:22> 'int' 0
|   |   |   | | |   `-ImplicitCastExpr 0x1b16fd59990 <line:36:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | |     `-ArraySubscriptExpr 0x1b16fd59970 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | |       |-ImplicitCastExpr 0x1b16fd59958 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |       | `-DeclRefExpr 0x1b16fd59910 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |       `-IntegerLiteral 0x1b16fd59930 <line:53:25> 'int' 4
|   |   |   | | `-BinaryOperator 0x1b16fd59f50 <line:36:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | |   |-ArraySubscriptExpr 0x1b16fd59a58 <line:36:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | |   | |-ImplicitCastExpr 0x1b16fd59a40 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |   | | `-DeclRefExpr 0x1b16fd599f8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |   | `-IntegerLiteral 0x1b16fd59a18 <line:53:31> 'int' 12
|   |   |   | |   `-ParenExpr 0x1b16fd59f30 <line:23:23, col:58> 'unsigned int'
|   |   |   | |     `-BinaryOperator 0x1b16fd59f10 <col:24, col:57> 'unsigned int' '|'
|   |   |   | |       |-ParenExpr 0x1b16fd59c70 <col:24, col:35> 'unsigned int'
|   |   |   | |       | `-BinaryOperator 0x1b16fd59c50 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | |       |   |-ParenExpr 0x1b16fd59be8 <col:25, col:27> 'unsigned int'
|   |   |   | |       |   | `-ParenExpr 0x1b16fd59bc8 <line:36:45, col:57> 'unsigned int'
|   |   |   | |       |   |   `-BinaryOperator 0x1b16fd59ba8 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |       |   |     |-ImplicitCastExpr 0x1b16fd59b78 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |     | `-ArraySubscriptExpr 0x1b16fd59ad8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |     |   |-ImplicitCastExpr 0x1b16fd59ac0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |     |   | `-DeclRefExpr 0x1b16fd59a78 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |     |   `-IntegerLiteral 0x1b16fd59a98 <line:53:31> 'int' 12
|   |   |   | |       |   |     `-ImplicitCastExpr 0x1b16fd59b90 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |       `-ArraySubscriptExpr 0x1b16fd59b58 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |         |-ImplicitCastExpr 0x1b16fd59b40 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |         | `-DeclRefExpr 0x1b16fd59af8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |         `-IntegerLiteral 0x1b16fd59b18 <line:53:22> 'int' 0
|   |   |   | |       |   `-ParenExpr 0x1b16fd59c30 <line:23:32, col:34> 'int'
|   |   |   | |       |     `-IntegerLiteral 0x1b16fd59c08 <line:36:60> 'int' 8
|   |   |   | |       `-ParenExpr 0x1b16fd59ef0 <line:23:39, col:57> 'unsigned int'
|   |   |   | |         `-BinaryOperator 0x1b16fd59ed0 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | |           |-ParenExpr 0x1b16fd59e00 <col:40, col:42> 'unsigned int'
|   |   |   | |           | `-ParenExpr 0x1b16fd59de0 <line:36:45, col:57> 'unsigned int'
|   |   |   | |           |   `-BinaryOperator 0x1b16fd59dc0 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |           |     |-ImplicitCastExpr 0x1b16fd59d90 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |     | `-ArraySubscriptExpr 0x1b16fd59cf0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |           |     |   |-ImplicitCastExpr 0x1b16fd59cd8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |     |   | `-DeclRefExpr 0x1b16fd59c90 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |     |   `-IntegerLiteral 0x1b16fd59cb0 <line:53:31> 'int' 12
|   |   |   | |           |     `-ImplicitCastExpr 0x1b16fd59da8 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |       `-ArraySubscriptExpr 0x1b16fd59d70 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |           |         |-ImplicitCastExpr 0x1b16fd59d58 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |         | `-DeclRefExpr 0x1b16fd59d10 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |         `-IntegerLiteral 0x1b16fd59d30 <line:53:22> 'int' 0
|   |   |   | |           `-ParenExpr 0x1b16fd59eb0 <line:23:47, col:56> 'int'
|   |   |   | |             `-BinaryOperator 0x1b16fd59e90 <col:48, col:55> 'int' '-'
|   |   |   | |               |-IntegerLiteral 0x1b16fd59e20 <col:48> 'int' 32
|   |   |   | |               `-ParenExpr 0x1b16fd59e70 <col:53, col:55> 'int'
|   |   |   | |                 `-IntegerLiteral 0x1b16fd59e48 <line:36:60> 'int' 8
|   |   |   | `-CompoundAssignOperator 0x1b16fd60140 <line:37:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   |   |-ArraySubscriptExpr 0x1b16fd59ff0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   |   | |-ImplicitCastExpr 0x1b16fd59fd8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x1b16fd59f90 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |   | `-IntegerLiteral 0x1b16fd59fb0 <line:53:28> 'int' 8
|   |   |   |   `-ImplicitCastExpr 0x1b16fd5a090 <line:37:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x1b16fd5a070 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   |       |-ImplicitCastExpr 0x1b16fd5a058 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   |       | `-DeclRefExpr 0x1b16fd5a010 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |       `-IntegerLiteral 0x1b16fd5a030 <line:53:31> 'int' 12
|   |   |   `-BinaryOperator 0x1b16fd606e8 <line:37:31, line:23:58> 'u32':'unsigned int' '='
|   |   |     |-ArraySubscriptExpr 0x1b16fd601f0 <line:37:31, col:34> 'u32':'unsigned int' lvalue
|   |   |     | |-ImplicitCastExpr 0x1b16fd601d8 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x1b16fd60190 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |     | `-IntegerLiteral 0x1b16fd601b0 <line:53:25> 'int' 4
|   |   |     `-ParenExpr 0x1b16fd606c8 <line:23:23, col:58> 'unsigned int'
|   |   |       `-BinaryOperator 0x1b16fd606a8 <col:24, col:57> 'unsigned int' '|'
|   |   |         |-ParenExpr 0x1b16fd60408 <col:24, col:35> 'unsigned int'
|   |   |         | `-BinaryOperator 0x1b16fd603e8 <col:25, col:34> 'unsigned int' '<<'
|   |   |         |   |-ParenExpr 0x1b16fd60380 <col:25, col:27> 'unsigned int'
|   |   |         |   | `-ParenExpr 0x1b16fd60360 <line:37:45, col:57> 'unsigned int'
|   |   |         |   |   `-BinaryOperator 0x1b16fd60340 <col:46, col:56> 'unsigned int' '^'
|   |   |         |   |     |-ImplicitCastExpr 0x1b16fd60310 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |     | `-ArraySubscriptExpr 0x1b16fd60270 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |         |   |     |   |-ImplicitCastExpr 0x1b16fd60258 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |     |   | `-DeclRefExpr 0x1b16fd60210 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |     |   `-IntegerLiteral 0x1b16fd60230 <line:53:25> 'int' 4
|   |   |         |   |     `-ImplicitCastExpr 0x1b16fd60328 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |       `-ArraySubscriptExpr 0x1b16fd602f0 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |         |   |         |-ImplicitCastExpr 0x1b16fd602d8 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |         | `-DeclRefExpr 0x1b16fd60290 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |         `-IntegerLiteral 0x1b16fd602b0 <line:53:28> 'int' 8
|   |   |         |   `-ParenExpr 0x1b16fd603c8 <line:23:32, col:34> 'int'
|   |   |         |     `-IntegerLiteral 0x1b16fd603a0 <line:37:60> 'int' 7
|   |   |         `-ParenExpr 0x1b16fd60688 <line:23:39, col:57> 'unsigned int'
|   |   |           `-BinaryOperator 0x1b16fd60668 <col:40, col:56> 'unsigned int' '>>'
|   |   |             |-ParenExpr 0x1b16fd60598 <col:40, col:42> 'unsigned int'
|   |   |             | `-ParenExpr 0x1b16fd60578 <line:37:45, col:57> 'unsigned int'
|   |   |             |   `-BinaryOperator 0x1b16fd60558 <col:46, col:56> 'unsigned int' '^'
|   |   |             |     |-ImplicitCastExpr 0x1b16fd60528 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |     | `-ArraySubscriptExpr 0x1b16fd60488 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |             |     |   |-ImplicitCastExpr 0x1b16fd60470 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |             |     |   | `-DeclRefExpr 0x1b16fd60428 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |     |   `-IntegerLiteral 0x1b16fd60448 <line:53:25> 'int' 4
|   |   |             |     `-ImplicitCastExpr 0x1b16fd60540 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |       `-ArraySubscriptExpr 0x1b16fd60508 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |             |         |-ImplicitCastExpr 0x1b16fd604f0 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |             |         | `-DeclRefExpr 0x1b16fd604a8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |         `-IntegerLiteral 0x1b16fd604c8 <line:53:28> 'int' 8
|   |   |             `-ParenExpr 0x1b16fd60648 <line:23:47, col:56> 'int'
|   |   |               `-BinaryOperator 0x1b16fd60628 <col:48, col:55> 'int' '-'
|   |   |                 |-IntegerLiteral 0x1b16fd605b8 <col:48> 'int' 32
|   |   |                 `-ParenExpr 0x1b16fd60608 <col:53, col:55> 'int'
|   |   |                   `-IntegerLiteral 0x1b16fd605e0 <line:37:60> 'int' 7
|   |   |-ParenExpr 0x1b16fd62348 <line:33:32, line:37:64> 'u32':'unsigned int'
|   |   | `-BinaryOperator 0x1b16fd62328 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   |-BinaryOperator 0x1b16fd5cd30 <line:34:17, line:37:28> 'u32':'unsigned int' ','
|   |   |   | |-BinaryOperator 0x1b16fd5cbc8 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | |-BinaryOperator 0x1b16fd5c630 <line:34:17, line:36:28> 'u32':'unsigned int' ','
|   |   |   | | | |-BinaryOperator 0x1b16fd5c4c8 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | |-BinaryOperator 0x1b16fd60f70 <line:34:17, line:35:28> 'u32':'unsigned int' ','
|   |   |   | | | | | |-BinaryOperator 0x1b16fd60e08 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | | | |-CompoundAssignOperator 0x1b16fd60860 <line:34:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | | | | |-ArraySubscriptExpr 0x1b16fd607a8 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | | | |-ImplicitCastExpr 0x1b16fd60790 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | | | | `-DeclRefExpr 0x1b16fd60748 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | | | `-IntegerLiteral 0x1b16fd60768 <line:54:22> 'int' 1
|   |   |   | | | | | | | `-ImplicitCastExpr 0x1b16fd60848 <line:34:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | | |   `-ArraySubscriptExpr 0x1b16fd60828 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | |     |-ImplicitCastExpr 0x1b16fd60810 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | |     | `-DeclRefExpr 0x1b16fd607c8 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | |     `-IntegerLiteral 0x1b16fd607e8 <line:54:25> 'int' 5
|   |   |   | | | | | | `-BinaryOperator 0x1b16fd60de8 <line:34:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | | | |   |-ArraySubscriptExpr 0x1b16fd608f0 <line:34:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |   | |-ImplicitCastExpr 0x1b16fd608d8 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |   | | `-DeclRefExpr 0x1b16fd60890 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |   | `-IntegerLiteral 0x1b16fd608b0 <line:54:31> 'int' 13
|   |   |   | | | | | |   `-ParenExpr 0x1b16fd60dc8 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | | | |     `-BinaryOperator 0x1b16fd60da8 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | | | |       |-ParenExpr 0x1b16fd60b08 <col:24, col:35> 'unsigned int'
|   |   |   | | | | | |       | `-BinaryOperator 0x1b16fd60ae8 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | | | |       |   |-ParenExpr 0x1b16fd60a80 <col:25, col:27> 'unsigned int'
|   |   |   | | | | | |       |   | `-ParenExpr 0x1b16fd60a60 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |       |   |   `-BinaryOperator 0x1b16fd60a40 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |       |   |     |-ImplicitCastExpr 0x1b16fd60a10 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd60970 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd60958 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd60910 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |     |   `-IntegerLiteral 0x1b16fd60930 <line:54:31> 'int' 13
|   |   |   | | | | | |       |   |     `-ImplicitCastExpr 0x1b16fd60a28 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd609f0 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |         |-ImplicitCastExpr 0x1b16fd609d8 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |         | `-DeclRefExpr 0x1b16fd60990 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |         `-IntegerLiteral 0x1b16fd609b0 <line:54:22> 'int' 1
|   |   |   | | | | | |       |   `-ParenExpr 0x1b16fd60ac8 <line:23:32, col:34> 'int'
|   |   |   | | | | | |       |     `-IntegerLiteral 0x1b16fd60aa0 <line:34:59> 'int' 16
|   |   |   | | | | | |       `-ParenExpr 0x1b16fd60d88 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | | | |         `-BinaryOperator 0x1b16fd60d68 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | | | |           |-ParenExpr 0x1b16fd60c98 <col:40, col:42> 'unsigned int'
|   |   |   | | | | | |           | `-ParenExpr 0x1b16fd60c78 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |           |   `-BinaryOperator 0x1b16fd60c58 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |           |     |-ImplicitCastExpr 0x1b16fd60c28 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |     | `-ArraySubscriptExpr 0x1b16fd60b88 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |     |   |-ImplicitCastExpr 0x1b16fd60b70 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |     |   | `-DeclRefExpr 0x1b16fd60b28 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |     |   `-IntegerLiteral 0x1b16fd60b48 <line:54:31> 'int' 13
|   |   |   | | | | | |           |     `-ImplicitCastExpr 0x1b16fd60c40 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |       `-ArraySubscriptExpr 0x1b16fd60c08 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |         |-ImplicitCastExpr 0x1b16fd60bf0 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |         | `-DeclRefExpr 0x1b16fd60ba8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |         `-IntegerLiteral 0x1b16fd60bc8 <line:54:22> 'int' 1
|   |   |   | | | | | |           `-ParenExpr 0x1b16fd60d48 <line:23:47, col:56> 'int'
|   |   |   | | | | | |             `-BinaryOperator 0x1b16fd60d28 <col:48, col:55> 'int' '-'
|   |   |   | | | | | |               |-IntegerLiteral 0x1b16fd60cb8 <col:48> 'int' 32
|   |   |   | | | | | |               `-ParenExpr 0x1b16fd60d08 <col:53, col:55> 'int'
|   |   |   | | | | | |                 `-IntegerLiteral 0x1b16fd60ce0 <line:34:59> 'int' 16
|   |   |   | | | | | `-CompoundAssignOperator 0x1b16fd60f40 <line:35:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | |   |-ArraySubscriptExpr 0x1b16fd60e88 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | |   | |-ImplicitCastExpr 0x1b16fd60e70 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |   | | `-DeclRefExpr 0x1b16fd60e28 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |   | `-IntegerLiteral 0x1b16fd60e48 <line:54:28> 'int' 9
|   |   |   | | | | |   `-ImplicitCastExpr 0x1b16fd60f28 <line:35:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | |     `-ArraySubscriptExpr 0x1b16fd60f08 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | |       |-ImplicitCastExpr 0x1b16fd60ef0 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |       | `-DeclRefExpr 0x1b16fd60ea8 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |       `-IntegerLiteral 0x1b16fd60ec8 <line:54:31> 'int' 13
|   |   |   | | | | `-BinaryOperator 0x1b16fd5c4a8 <line:35:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | |   |-ArraySubscriptExpr 0x1b16fd60ff0 <line:35:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | |   | |-ImplicitCastExpr 0x1b16fd60fd8 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |   | | `-DeclRefExpr 0x1b16fd60f90 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |   | `-IntegerLiteral 0x1b16fd60fb0 <line:54:25> 'int' 5
|   |   |   | | | |   `-ParenExpr 0x1b16fd5c488 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | |     `-BinaryOperator 0x1b16fd5c468 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | |       |-ParenExpr 0x1b16fd5c1c8 <col:24, col:35> 'unsigned int'
|   |   |   | | | |       | `-BinaryOperator 0x1b16fd5c1a8 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | |       |   |-ParenExpr 0x1b16fd5c140 <col:25, col:27> 'unsigned int'
|   |   |   | | | |       |   | `-ParenExpr 0x1b16fd5c120 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |       |   |   `-BinaryOperator 0x1b16fd5c100 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |       |   |     |-ImplicitCastExpr 0x1b16fd61110 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd61070 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd61058 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd61010 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |     |   `-IntegerLiteral 0x1b16fd61030 <line:54:25> 'int' 5
|   |   |   | | | |       |   |     `-ImplicitCastExpr 0x1b16fd61128 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd610f0 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |         |-ImplicitCastExpr 0x1b16fd610d8 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |         | `-DeclRefExpr 0x1b16fd61090 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |         `-IntegerLiteral 0x1b16fd610b0 <line:54:28> 'int' 9
|   |   |   | | | |       |   `-ParenExpr 0x1b16fd5c188 <line:23:32, col:34> 'int'
|   |   |   | | | |       |     `-IntegerLiteral 0x1b16fd5c160 <line:35:59> 'int' 12
|   |   |   | | | |       `-ParenExpr 0x1b16fd5c448 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | |         `-BinaryOperator 0x1b16fd5c428 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | |           |-ParenExpr 0x1b16fd5c358 <col:40, col:42> 'unsigned int'
|   |   |   | | | |           | `-ParenExpr 0x1b16fd5c338 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |           |   `-BinaryOperator 0x1b16fd5c318 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |           |     |-ImplicitCastExpr 0x1b16fd5c2e8 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |     | `-ArraySubscriptExpr 0x1b16fd5c248 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |     |   |-ImplicitCastExpr 0x1b16fd5c230 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |     |   | `-DeclRefExpr 0x1b16fd5c1e8 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |     |   `-IntegerLiteral 0x1b16fd5c208 <line:54:25> 'int' 5
|   |   |   | | | |           |     `-ImplicitCastExpr 0x1b16fd5c300 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |       `-ArraySubscriptExpr 0x1b16fd5c2c8 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |         |-ImplicitCastExpr 0x1b16fd5c2b0 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |         | `-DeclRefExpr 0x1b16fd5c268 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |         `-IntegerLiteral 0x1b16fd5c288 <line:54:28> 'int' 9
|   |   |   | | | |           `-ParenExpr 0x1b16fd5c408 <line:23:47, col:56> 'int'
|   |   |   | | | |             `-BinaryOperator 0x1b16fd5c3e8 <col:48, col:55> 'int' '-'
|   |   |   | | | |               |-IntegerLiteral 0x1b16fd5c378 <col:48> 'int' 32
|   |   |   | | | |               `-ParenExpr 0x1b16fd5c3c8 <col:53, col:55> 'int'
|   |   |   | | | |                 `-IntegerLiteral 0x1b16fd5c3a0 <line:35:59> 'int' 12
|   |   |   | | | `-CompoundAssignOperator 0x1b16fd5c600 <line:36:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | |   |-ArraySubscriptExpr 0x1b16fd5c548 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | |   | |-ImplicitCastExpr 0x1b16fd5c530 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |   | | `-DeclRefExpr 0x1b16fd5c4e8 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |   | `-IntegerLiteral 0x1b16fd5c508 <line:54:22> 'int' 1
|   |   |   | | |   `-ImplicitCastExpr 0x1b16fd5c5e8 <line:36:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | |     `-ArraySubscriptExpr 0x1b16fd5c5c8 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | |       |-ImplicitCastExpr 0x1b16fd5c5b0 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |       | `-DeclRefExpr 0x1b16fd5c568 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |       `-IntegerLiteral 0x1b16fd5c588 <line:54:25> 'int' 5
|   |   |   | | `-BinaryOperator 0x1b16fd5cba8 <line:36:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | |   |-ArraySubscriptExpr 0x1b16fd5c6b0 <line:36:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | |   | |-ImplicitCastExpr 0x1b16fd5c698 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |   | | `-DeclRefExpr 0x1b16fd5c650 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |   | `-IntegerLiteral 0x1b16fd5c670 <line:54:31> 'int' 13
|   |   |   | |   `-ParenExpr 0x1b16fd5cb88 <line:23:23, col:58> 'unsigned int'
|   |   |   | |     `-BinaryOperator 0x1b16fd5cb68 <col:24, col:57> 'unsigned int' '|'
|   |   |   | |       |-ParenExpr 0x1b16fd5c8c8 <col:24, col:35> 'unsigned int'
|   |   |   | |       | `-BinaryOperator 0x1b16fd5c8a8 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | |       |   |-ParenExpr 0x1b16fd5c840 <col:25, col:27> 'unsigned int'
|   |   |   | |       |   | `-ParenExpr 0x1b16fd5c820 <line:36:45, col:57> 'unsigned int'
|   |   |   | |       |   |   `-BinaryOperator 0x1b16fd5c800 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |       |   |     |-ImplicitCastExpr 0x1b16fd5c7d0 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |     | `-ArraySubscriptExpr 0x1b16fd5c730 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |     |   |-ImplicitCastExpr 0x1b16fd5c718 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |     |   | `-DeclRefExpr 0x1b16fd5c6d0 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |     |   `-IntegerLiteral 0x1b16fd5c6f0 <line:54:31> 'int' 13
|   |   |   | |       |   |     `-ImplicitCastExpr 0x1b16fd5c7e8 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |       `-ArraySubscriptExpr 0x1b16fd5c7b0 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |         |-ImplicitCastExpr 0x1b16fd5c798 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |         | `-DeclRefExpr 0x1b16fd5c750 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |         `-IntegerLiteral 0x1b16fd5c770 <line:54:22> 'int' 1
|   |   |   | |       |   `-ParenExpr 0x1b16fd5c888 <line:23:32, col:34> 'int'
|   |   |   | |       |     `-IntegerLiteral 0x1b16fd5c860 <line:36:60> 'int' 8
|   |   |   | |       `-ParenExpr 0x1b16fd5cb48 <line:23:39, col:57> 'unsigned int'
|   |   |   | |         `-BinaryOperator 0x1b16fd5cb28 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | |           |-ParenExpr 0x1b16fd5ca58 <col:40, col:42> 'unsigned int'
|   |   |   | |           | `-ParenExpr 0x1b16fd5ca38 <line:36:45, col:57> 'unsigned int'
|   |   |   | |           |   `-BinaryOperator 0x1b16fd5ca18 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |           |     |-ImplicitCastExpr 0x1b16fd5c9e8 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |     | `-ArraySubscriptExpr 0x1b16fd5c948 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |           |     |   |-ImplicitCastExpr 0x1b16fd5c930 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |     |   | `-DeclRefExpr 0x1b16fd5c8e8 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |     |   `-IntegerLiteral 0x1b16fd5c908 <line:54:31> 'int' 13
|   |   |   | |           |     `-ImplicitCastExpr 0x1b16fd5ca00 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |       `-ArraySubscriptExpr 0x1b16fd5c9c8 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |           |         |-ImplicitCastExpr 0x1b16fd5c9b0 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |         | `-DeclRefExpr 0x1b16fd5c968 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |         `-IntegerLiteral 0x1b16fd5c988 <line:54:22> 'int' 1
|   |   |   | |           `-ParenExpr 0x1b16fd5cb08 <line:23:47, col:56> 'int'
|   |   |   | |             `-BinaryOperator 0x1b16fd5cae8 <col:48, col:55> 'int' '-'
|   |   |   | |               |-IntegerLiteral 0x1b16fd5ca78 <col:48> 'int' 32
|   |   |   | |               `-ParenExpr 0x1b16fd5cac8 <col:53, col:55> 'int'
|   |   |   | |                 `-IntegerLiteral 0x1b16fd5caa0 <line:36:60> 'int' 8
|   |   |   | `-CompoundAssignOperator 0x1b16fd5cd00 <line:37:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   |   |-ArraySubscriptExpr 0x1b16fd5cc48 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   |   | |-ImplicitCastExpr 0x1b16fd5cc30 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x1b16fd5cbe8 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |   | `-IntegerLiteral 0x1b16fd5cc08 <line:54:28> 'int' 9
|   |   |   |   `-ImplicitCastExpr 0x1b16fd5cce8 <line:37:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x1b16fd5ccc8 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   |       |-ImplicitCastExpr 0x1b16fd5ccb0 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   |       | `-DeclRefExpr 0x1b16fd5cc68 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |       `-IntegerLiteral 0x1b16fd5cc88 <line:54:31> 'int' 13
|   |   |   `-BinaryOperator 0x1b16fd62308 <line:37:31, line:23:58> 'u32':'unsigned int' '='
|   |   |     |-ArraySubscriptExpr 0x1b16fd5cdb0 <line:37:31, col:34> 'u32':'unsigned int' lvalue
|   |   |     | |-ImplicitCastExpr 0x1b16fd5cd98 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x1b16fd5cd50 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |     | `-IntegerLiteral 0x1b16fd5cd70 <line:54:25> 'int' 5
|   |   |     `-ParenExpr 0x1b16fd622e8 <line:23:23, col:58> 'unsigned int'
|   |   |       `-BinaryOperator 0x1b16fd622c8 <col:24, col:57> 'unsigned int' '|'
|   |   |         |-ParenExpr 0x1b16fd5cfc8 <col:24, col:35> 'unsigned int'
|   |   |         | `-BinaryOperator 0x1b16fd5cfa8 <col:25, col:34> 'unsigned int' '<<'
|   |   |         |   |-ParenExpr 0x1b16fd5cf40 <col:25, col:27> 'unsigned int'
|   |   |         |   | `-ParenExpr 0x1b16fd5cf20 <line:37:45, col:57> 'unsigned int'
|   |   |         |   |   `-BinaryOperator 0x1b16fd5cf00 <col:46, col:56> 'unsigned int' '^'
|   |   |         |   |     |-ImplicitCastExpr 0x1b16fd5ced0 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |     | `-ArraySubscriptExpr 0x1b16fd5ce30 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |         |   |     |   |-ImplicitCastExpr 0x1b16fd5ce18 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |     |   | `-DeclRefExpr 0x1b16fd5cdd0 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |     |   `-IntegerLiteral 0x1b16fd5cdf0 <line:54:25> 'int' 5
|   |   |         |   |     `-ImplicitCastExpr 0x1b16fd5cee8 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |       `-ArraySubscriptExpr 0x1b16fd5ceb0 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |         |   |         |-ImplicitCastExpr 0x1b16fd5ce98 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |         | `-DeclRefExpr 0x1b16fd5ce50 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |         `-IntegerLiteral 0x1b16fd5ce70 <line:54:28> 'int' 9
|   |   |         |   `-ParenExpr 0x1b16fd5cf88 <line:23:32, col:34> 'int'
|   |   |         |     `-IntegerLiteral 0x1b16fd5cf60 <line:37:60> 'int' 7
|   |   |         `-ParenExpr 0x1b16fd622a8 <line:23:39, col:57> 'unsigned int'
|   |   |           `-BinaryOperator 0x1b16fd62288 <col:40, col:56> 'unsigned int' '>>'
|   |   |             |-ParenExpr 0x1b16fd621b8 <col:40, col:42> 'unsigned int'
|   |   |             | `-ParenExpr 0x1b16fd62198 <line:37:45, col:57> 'unsigned int'
|   |   |             |   `-BinaryOperator 0x1b16fd62178 <col:46, col:56> 'unsigned int' '^'
|   |   |             |     |-ImplicitCastExpr 0x1b16fd5d0e8 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |     | `-ArraySubscriptExpr 0x1b16fd5d048 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |             |     |   |-ImplicitCastExpr 0x1b16fd5d030 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |             |     |   | `-DeclRefExpr 0x1b16fd5cfe8 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |     |   `-IntegerLiteral 0x1b16fd5d008 <line:54:25> 'int' 5
|   |   |             |     `-ImplicitCastExpr 0x1b16fd62160 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |       `-ArraySubscriptExpr 0x1b16fd5d0c8 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |             |         |-ImplicitCastExpr 0x1b16fd5d0b0 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |             |         | `-DeclRefExpr 0x1b16fd5d068 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |         `-IntegerLiteral 0x1b16fd5d088 <line:54:28> 'int' 9
|   |   |             `-ParenExpr 0x1b16fd62268 <line:23:47, col:56> 'int'
|   |   |               `-BinaryOperator 0x1b16fd62248 <col:48, col:55> 'int' '-'
|   |   |                 |-IntegerLiteral 0x1b16fd621d8 <col:48> 'int' 32
|   |   |                 `-ParenExpr 0x1b16fd62228 <col:53, col:55> 'int'
|   |   |                   `-IntegerLiteral 0x1b16fd62200 <line:37:60> 'int' 7
|   |   |-ParenExpr 0x1b16fd65f90 <line:33:32, line:37:64> 'u32':'unsigned int'
|   |   | `-BinaryOperator 0x1b16fd65f70 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   |-BinaryOperator 0x1b16fd659d8 <line:34:17, line:37:28> 'u32':'unsigned int' ','
|   |   |   | |-BinaryOperator 0x1b16fd65870 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | |-BinaryOperator 0x1b16fd652d8 <line:34:17, line:36:28> 'u32':'unsigned int' ','
|   |   |   | | | |-BinaryOperator 0x1b16fd63128 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | |-BinaryOperator 0x1b16fd62b90 <line:34:17, line:35:28> 'u32':'unsigned int' ','
|   |   |   | | | | | |-BinaryOperator 0x1b16fd62a28 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | | | |-CompoundAssignOperator 0x1b16fd62480 <line:34:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | | | | |-ArraySubscriptExpr 0x1b16fd623c8 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | | | |-ImplicitCastExpr 0x1b16fd623b0 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | | | | `-DeclRefExpr 0x1b16fd62368 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | | | `-IntegerLiteral 0x1b16fd62388 <line:55:22> 'int' 2
|   |   |   | | | | | | | `-ImplicitCastExpr 0x1b16fd62468 <line:34:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | | |   `-ArraySubscriptExpr 0x1b16fd62448 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | |     |-ImplicitCastExpr 0x1b16fd62430 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | |     | `-DeclRefExpr 0x1b16fd623e8 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | |     `-IntegerLiteral 0x1b16fd62408 <line:55:25> 'int' 6
|   |   |   | | | | | | `-BinaryOperator 0x1b16fd62a08 <line:34:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | | | |   |-ArraySubscriptExpr 0x1b16fd62510 <line:34:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |   | |-ImplicitCastExpr 0x1b16fd624f8 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |   | | `-DeclRefExpr 0x1b16fd624b0 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |   | `-IntegerLiteral 0x1b16fd624d0 <line:55:32> 'int' 14
|   |   |   | | | | | |   `-ParenExpr 0x1b16fd629e8 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | | | |     `-BinaryOperator 0x1b16fd629c8 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | | | |       |-ParenExpr 0x1b16fd62728 <col:24, col:35> 'unsigned int'
|   |   |   | | | | | |       | `-BinaryOperator 0x1b16fd62708 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | | | |       |   |-ParenExpr 0x1b16fd626a0 <col:25, col:27> 'unsigned int'
|   |   |   | | | | | |       |   | `-ParenExpr 0x1b16fd62680 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |       |   |   `-BinaryOperator 0x1b16fd62660 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |       |   |     |-ImplicitCastExpr 0x1b16fd62630 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd62590 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd62578 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd62530 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |     |   `-IntegerLiteral 0x1b16fd62550 <line:55:32> 'int' 14
|   |   |   | | | | | |       |   |     `-ImplicitCastExpr 0x1b16fd62648 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd62610 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |         |-ImplicitCastExpr 0x1b16fd625f8 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |         | `-DeclRefExpr 0x1b16fd625b0 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |         `-IntegerLiteral 0x1b16fd625d0 <line:55:22> 'int' 2
|   |   |   | | | | | |       |   `-ParenExpr 0x1b16fd626e8 <line:23:32, col:34> 'int'
|   |   |   | | | | | |       |     `-IntegerLiteral 0x1b16fd626c0 <line:34:59> 'int' 16
|   |   |   | | | | | |       `-ParenExpr 0x1b16fd629a8 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | | | |         `-BinaryOperator 0x1b16fd62988 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | | | |           |-ParenExpr 0x1b16fd628b8 <col:40, col:42> 'unsigned int'
|   |   |   | | | | | |           | `-ParenExpr 0x1b16fd62898 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |           |   `-BinaryOperator 0x1b16fd62878 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |           |     |-ImplicitCastExpr 0x1b16fd62848 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |     | `-ArraySubscriptExpr 0x1b16fd627a8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |     |   |-ImplicitCastExpr 0x1b16fd62790 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |     |   | `-DeclRefExpr 0x1b16fd62748 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |     |   `-IntegerLiteral 0x1b16fd62768 <line:55:32> 'int' 14
|   |   |   | | | | | |           |     `-ImplicitCastExpr 0x1b16fd62860 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |       `-ArraySubscriptExpr 0x1b16fd62828 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |         |-ImplicitCastExpr 0x1b16fd62810 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |         | `-DeclRefExpr 0x1b16fd627c8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |         `-IntegerLiteral 0x1b16fd627e8 <line:55:22> 'int' 2
|   |   |   | | | | | |           `-ParenExpr 0x1b16fd62968 <line:23:47, col:56> 'int'
|   |   |   | | | | | |             `-BinaryOperator 0x1b16fd62948 <col:48, col:55> 'int' '-'
|   |   |   | | | | | |               |-IntegerLiteral 0x1b16fd628d8 <col:48> 'int' 32
|   |   |   | | | | | |               `-ParenExpr 0x1b16fd62928 <col:53, col:55> 'int'
|   |   |   | | | | | |                 `-IntegerLiteral 0x1b16fd62900 <line:34:59> 'int' 16
|   |   |   | | | | | `-CompoundAssignOperator 0x1b16fd62b60 <line:35:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | |   |-ArraySubscriptExpr 0x1b16fd62aa8 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | |   | |-ImplicitCastExpr 0x1b16fd62a90 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |   | | `-DeclRefExpr 0x1b16fd62a48 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |   | `-IntegerLiteral 0x1b16fd62a68 <line:55:28> 'int' 10
|   |   |   | | | | |   `-ImplicitCastExpr 0x1b16fd62b48 <line:35:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | |     `-ArraySubscriptExpr 0x1b16fd62b28 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | |       |-ImplicitCastExpr 0x1b16fd62b10 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |       | `-DeclRefExpr 0x1b16fd62ac8 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |       `-IntegerLiteral 0x1b16fd62ae8 <line:55:32> 'int' 14
|   |   |   | | | | `-BinaryOperator 0x1b16fd63108 <line:35:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | |   |-ArraySubscriptExpr 0x1b16fd62c10 <line:35:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | |   | |-ImplicitCastExpr 0x1b16fd62bf8 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |   | | `-DeclRefExpr 0x1b16fd62bb0 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |   | `-IntegerLiteral 0x1b16fd62bd0 <line:55:25> 'int' 6
|   |   |   | | | |   `-ParenExpr 0x1b16fd630e8 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | |     `-BinaryOperator 0x1b16fd630c8 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | |       |-ParenExpr 0x1b16fd62e28 <col:24, col:35> 'unsigned int'
|   |   |   | | | |       | `-BinaryOperator 0x1b16fd62e08 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | |       |   |-ParenExpr 0x1b16fd62da0 <col:25, col:27> 'unsigned int'
|   |   |   | | | |       |   | `-ParenExpr 0x1b16fd62d80 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |       |   |   `-BinaryOperator 0x1b16fd62d60 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |       |   |     |-ImplicitCastExpr 0x1b16fd62d30 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd62c90 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd62c78 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd62c30 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |     |   `-IntegerLiteral 0x1b16fd62c50 <line:55:25> 'int' 6
|   |   |   | | | |       |   |     `-ImplicitCastExpr 0x1b16fd62d48 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd62d10 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |         |-ImplicitCastExpr 0x1b16fd62cf8 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |         | `-DeclRefExpr 0x1b16fd62cb0 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |         `-IntegerLiteral 0x1b16fd62cd0 <line:55:28> 'int' 10
|   |   |   | | | |       |   `-ParenExpr 0x1b16fd62de8 <line:23:32, col:34> 'int'
|   |   |   | | | |       |     `-IntegerLiteral 0x1b16fd62dc0 <line:35:59> 'int' 12
|   |   |   | | | |       `-ParenExpr 0x1b16fd630a8 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | |         `-BinaryOperator 0x1b16fd63088 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | |           |-ParenExpr 0x1b16fd62fb8 <col:40, col:42> 'unsigned int'
|   |   |   | | | |           | `-ParenExpr 0x1b16fd62f98 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |           |   `-BinaryOperator 0x1b16fd62f78 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |           |     |-ImplicitCastExpr 0x1b16fd62f48 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |     | `-ArraySubscriptExpr 0x1b16fd62ea8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |     |   |-ImplicitCastExpr 0x1b16fd62e90 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |     |   | `-DeclRefExpr 0x1b16fd62e48 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |     |   `-IntegerLiteral 0x1b16fd62e68 <line:55:25> 'int' 6
|   |   |   | | | |           |     `-ImplicitCastExpr 0x1b16fd62f60 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |       `-ArraySubscriptExpr 0x1b16fd62f28 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |         |-ImplicitCastExpr 0x1b16fd62f10 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |         | `-DeclRefExpr 0x1b16fd62ec8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |         `-IntegerLiteral 0x1b16fd62ee8 <line:55:28> 'int' 10
|   |   |   | | | |           `-ParenExpr 0x1b16fd63068 <line:23:47, col:56> 'int'
|   |   |   | | | |             `-BinaryOperator 0x1b16fd63048 <col:48, col:55> 'int' '-'
|   |   |   | | | |               |-IntegerLiteral 0x1b16fd62fd8 <col:48> 'int' 32
|   |   |   | | | |               `-ParenExpr 0x1b16fd63028 <col:53, col:55> 'int'
|   |   |   | | | |                 `-IntegerLiteral 0x1b16fd63000 <line:35:59> 'int' 12
|   |   |   | | | `-CompoundAssignOperator 0x1b16fd652a8 <line:36:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | |   |-ArraySubscriptExpr 0x1b16fd651f0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | |   | |-ImplicitCastExpr 0x1b16fd651d8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |   | | `-DeclRefExpr 0x1b16fd65190 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |   | `-IntegerLiteral 0x1b16fd651b0 <line:55:22> 'int' 2
|   |   |   | | |   `-ImplicitCastExpr 0x1b16fd65290 <line:36:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | |     `-ArraySubscriptExpr 0x1b16fd65270 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | |       |-ImplicitCastExpr 0x1b16fd65258 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |       | `-DeclRefExpr 0x1b16fd65210 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |       `-IntegerLiteral 0x1b16fd65230 <line:55:25> 'int' 6
|   |   |   | | `-BinaryOperator 0x1b16fd65850 <line:36:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | |   |-ArraySubscriptExpr 0x1b16fd65358 <line:36:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | |   | |-ImplicitCastExpr 0x1b16fd65340 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |   | | `-DeclRefExpr 0x1b16fd652f8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |   | `-IntegerLiteral 0x1b16fd65318 <line:55:32> 'int' 14
|   |   |   | |   `-ParenExpr 0x1b16fd65830 <line:23:23, col:58> 'unsigned int'
|   |   |   | |     `-BinaryOperator 0x1b16fd65810 <col:24, col:57> 'unsigned int' '|'
|   |   |   | |       |-ParenExpr 0x1b16fd65570 <col:24, col:35> 'unsigned int'
|   |   |   | |       | `-BinaryOperator 0x1b16fd65550 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | |       |   |-ParenExpr 0x1b16fd654e8 <col:25, col:27> 'unsigned int'
|   |   |   | |       |   | `-ParenExpr 0x1b16fd654c8 <line:36:45, col:57> 'unsigned int'
|   |   |   | |       |   |   `-BinaryOperator 0x1b16fd654a8 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |       |   |     |-ImplicitCastExpr 0x1b16fd65478 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |     | `-ArraySubscriptExpr 0x1b16fd653d8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |     |   |-ImplicitCastExpr 0x1b16fd653c0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |     |   | `-DeclRefExpr 0x1b16fd65378 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |     |   `-IntegerLiteral 0x1b16fd65398 <line:55:32> 'int' 14
|   |   |   | |       |   |     `-ImplicitCastExpr 0x1b16fd65490 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |       `-ArraySubscriptExpr 0x1b16fd65458 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |         |-ImplicitCastExpr 0x1b16fd65440 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |         | `-DeclRefExpr 0x1b16fd653f8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |         `-IntegerLiteral 0x1b16fd65418 <line:55:22> 'int' 2
|   |   |   | |       |   `-ParenExpr 0x1b16fd65530 <line:23:32, col:34> 'int'
|   |   |   | |       |     `-IntegerLiteral 0x1b16fd65508 <line:36:60> 'int' 8
|   |   |   | |       `-ParenExpr 0x1b16fd657f0 <line:23:39, col:57> 'unsigned int'
|   |   |   | |         `-BinaryOperator 0x1b16fd657d0 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | |           |-ParenExpr 0x1b16fd65700 <col:40, col:42> 'unsigned int'
|   |   |   | |           | `-ParenExpr 0x1b16fd656e0 <line:36:45, col:57> 'unsigned int'
|   |   |   | |           |   `-BinaryOperator 0x1b16fd656c0 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |           |     |-ImplicitCastExpr 0x1b16fd65690 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |     | `-ArraySubscriptExpr 0x1b16fd655f0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |           |     |   |-ImplicitCastExpr 0x1b16fd655d8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |     |   | `-DeclRefExpr 0x1b16fd65590 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |     |   `-IntegerLiteral 0x1b16fd655b0 <line:55:32> 'int' 14
|   |   |   | |           |     `-ImplicitCastExpr 0x1b16fd656a8 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |       `-ArraySubscriptExpr 0x1b16fd65670 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |           |         |-ImplicitCastExpr 0x1b16fd65658 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |         | `-DeclRefExpr 0x1b16fd65610 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |         `-IntegerLiteral 0x1b16fd65630 <line:55:22> 'int' 2
|   |   |   | |           `-ParenExpr 0x1b16fd657b0 <line:23:47, col:56> 'int'
|   |   |   | |             `-BinaryOperator 0x1b16fd65790 <col:48, col:55> 'int' '-'
|   |   |   | |               |-IntegerLiteral 0x1b16fd65720 <col:48> 'int' 32
|   |   |   | |               `-ParenExpr 0x1b16fd65770 <col:53, col:55> 'int'
|   |   |   | |                 `-IntegerLiteral 0x1b16fd65748 <line:36:60> 'int' 8
|   |   |   | `-CompoundAssignOperator 0x1b16fd659a8 <line:37:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   |   |-ArraySubscriptExpr 0x1b16fd658f0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   |   | |-ImplicitCastExpr 0x1b16fd658d8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x1b16fd65890 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |   | `-IntegerLiteral 0x1b16fd658b0 <line:55:28> 'int' 10
|   |   |   |   `-ImplicitCastExpr 0x1b16fd65990 <line:37:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x1b16fd65970 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   |       |-ImplicitCastExpr 0x1b16fd65958 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   |       | `-DeclRefExpr 0x1b16fd65910 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |       `-IntegerLiteral 0x1b16fd65930 <line:55:32> 'int' 14
|   |   |   `-BinaryOperator 0x1b16fd65f50 <line:37:31, line:23:58> 'u32':'unsigned int' '='
|   |   |     |-ArraySubscriptExpr 0x1b16fd65a58 <line:37:31, col:34> 'u32':'unsigned int' lvalue
|   |   |     | |-ImplicitCastExpr 0x1b16fd65a40 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x1b16fd659f8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |     | `-IntegerLiteral 0x1b16fd65a18 <line:55:25> 'int' 6
|   |   |     `-ParenExpr 0x1b16fd65f30 <line:23:23, col:58> 'unsigned int'
|   |   |       `-BinaryOperator 0x1b16fd65f10 <col:24, col:57> 'unsigned int' '|'
|   |   |         |-ParenExpr 0x1b16fd65c70 <col:24, col:35> 'unsigned int'
|   |   |         | `-BinaryOperator 0x1b16fd65c50 <col:25, col:34> 'unsigned int' '<<'
|   |   |         |   |-ParenExpr 0x1b16fd65be8 <col:25, col:27> 'unsigned int'
|   |   |         |   | `-ParenExpr 0x1b16fd65bc8 <line:37:45, col:57> 'unsigned int'
|   |   |         |   |   `-BinaryOperator 0x1b16fd65ba8 <col:46, col:56> 'unsigned int' '^'
|   |   |         |   |     |-ImplicitCastExpr 0x1b16fd65b78 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |     | `-ArraySubscriptExpr 0x1b16fd65ad8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |         |   |     |   |-ImplicitCastExpr 0x1b16fd65ac0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |     |   | `-DeclRefExpr 0x1b16fd65a78 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |     |   `-IntegerLiteral 0x1b16fd65a98 <line:55:25> 'int' 6
|   |   |         |   |     `-ImplicitCastExpr 0x1b16fd65b90 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |       `-ArraySubscriptExpr 0x1b16fd65b58 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |         |   |         |-ImplicitCastExpr 0x1b16fd65b40 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |         | `-DeclRefExpr 0x1b16fd65af8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |         `-IntegerLiteral 0x1b16fd65b18 <line:55:28> 'int' 10
|   |   |         |   `-ParenExpr 0x1b16fd65c30 <line:23:32, col:34> 'int'
|   |   |         |     `-IntegerLiteral 0x1b16fd65c08 <line:37:60> 'int' 7
|   |   |         `-ParenExpr 0x1b16fd65ef0 <line:23:39, col:57> 'unsigned int'
|   |   |           `-BinaryOperator 0x1b16fd65ed0 <col:40, col:56> 'unsigned int' '>>'
|   |   |             |-ParenExpr 0x1b16fd65e00 <col:40, col:42> 'unsigned int'
|   |   |             | `-ParenExpr 0x1b16fd65de0 <line:37:45, col:57> 'unsigned int'
|   |   |             |   `-BinaryOperator 0x1b16fd65dc0 <col:46, col:56> 'unsigned int' '^'
|   |   |             |     |-ImplicitCastExpr 0x1b16fd65d90 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |     | `-ArraySubscriptExpr 0x1b16fd65cf0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |             |     |   |-ImplicitCastExpr 0x1b16fd65cd8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |             |     |   | `-DeclRefExpr 0x1b16fd65c90 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |     |   `-IntegerLiteral 0x1b16fd65cb0 <line:55:25> 'int' 6
|   |   |             |     `-ImplicitCastExpr 0x1b16fd65da8 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |       `-ArraySubscriptExpr 0x1b16fd65d70 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |             |         |-ImplicitCastExpr 0x1b16fd65d58 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |             |         | `-DeclRefExpr 0x1b16fd65d10 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |         `-IntegerLiteral 0x1b16fd65d30 <line:55:28> 'int' 10
|   |   |             `-ParenExpr 0x1b16fd65eb0 <line:23:47, col:56> 'int'
|   |   |               `-BinaryOperator 0x1b16fd65e90 <col:48, col:55> 'int' '-'
|   |   |                 |-IntegerLiteral 0x1b16fd65e20 <col:48> 'int' 32
|   |   |                 `-ParenExpr 0x1b16fd65e70 <col:53, col:55> 'int'
|   |   |                   `-IntegerLiteral 0x1b16fd65e48 <line:37:60> 'int' 7
|   |   |-ParenExpr 0x1b16fd63b90 <line:33:32, line:37:64> 'u32':'unsigned int'
|   |   | `-BinaryOperator 0x1b16fd63b70 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   |-BinaryOperator 0x1b16fd635d8 <line:34:17, line:37:28> 'u32':'unsigned int' ','
|   |   |   | |-BinaryOperator 0x1b16fd63470 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | |-BinaryOperator 0x1b16fd61eb0 <line:34:17, line:36:28> 'u32':'unsigned int' ','
|   |   |   | | | |-BinaryOperator 0x1b16fd61d48 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | |-BinaryOperator 0x1b16fd617b0 <line:34:17, line:35:28> 'u32':'unsigned int' ','
|   |   |   | | | | | |-BinaryOperator 0x1b16fd61648 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | | | |-CompoundAssignOperator 0x1b16fd660c8 <line:34:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | | | | |-ArraySubscriptExpr 0x1b16fd66010 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | | | |-ImplicitCastExpr 0x1b16fd65ff8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | | | | `-DeclRefExpr 0x1b16fd65fb0 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | | | `-IntegerLiteral 0x1b16fd65fd0 <line:56:22> 'int' 3
|   |   |   | | | | | | | `-ImplicitCastExpr 0x1b16fd660b0 <line:34:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | | |   `-ArraySubscriptExpr 0x1b16fd66090 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | |     |-ImplicitCastExpr 0x1b16fd66078 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | |     | `-DeclRefExpr 0x1b16fd66030 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | |     `-IntegerLiteral 0x1b16fd66050 <line:56:25> 'int' 7
|   |   |   | | | | | | `-BinaryOperator 0x1b16fd61628 <line:34:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | | | |   |-ArraySubscriptExpr 0x1b16fd66158 <line:34:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |   | |-ImplicitCastExpr 0x1b16fd66140 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |   | | `-DeclRefExpr 0x1b16fd660f8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |   | `-IntegerLiteral 0x1b16fd66118 <line:56:32> 'int' 15
|   |   |   | | | | | |   `-ParenExpr 0x1b16fd61608 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | | | |     `-BinaryOperator 0x1b16fd615e8 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | | | |       |-ParenExpr 0x1b16fd61348 <col:24, col:35> 'unsigned int'
|   |   |   | | | | | |       | `-BinaryOperator 0x1b16fd61328 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | | | |       |   |-ParenExpr 0x1b16fd612c0 <col:25, col:27> 'unsigned int'
|   |   |   | | | | | |       |   | `-ParenExpr 0x1b16fd612a0 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |       |   |   `-BinaryOperator 0x1b16fd61280 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |       |   |     |-ImplicitCastExpr 0x1b16fd61250 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd611b0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd61198 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd61150 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |     |   `-IntegerLiteral 0x1b16fd61170 <line:56:32> 'int' 15
|   |   |   | | | | | |       |   |     `-ImplicitCastExpr 0x1b16fd61268 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd61230 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |         |-ImplicitCastExpr 0x1b16fd61218 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |         | `-DeclRefExpr 0x1b16fd611d0 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |         `-IntegerLiteral 0x1b16fd611f0 <line:56:22> 'int' 3
|   |   |   | | | | | |       |   `-ParenExpr 0x1b16fd61308 <line:23:32, col:34> 'int'
|   |   |   | | | | | |       |     `-IntegerLiteral 0x1b16fd612e0 <line:34:59> 'int' 16
|   |   |   | | | | | |       `-ParenExpr 0x1b16fd615c8 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | | | |         `-BinaryOperator 0x1b16fd615a8 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | | | |           |-ParenExpr 0x1b16fd614d8 <col:40, col:42> 'unsigned int'
|   |   |   | | | | | |           | `-ParenExpr 0x1b16fd614b8 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |           |   `-BinaryOperator 0x1b16fd61498 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |           |     |-ImplicitCastExpr 0x1b16fd61468 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |     | `-ArraySubscriptExpr 0x1b16fd613c8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |     |   |-ImplicitCastExpr 0x1b16fd613b0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |     |   | `-DeclRefExpr 0x1b16fd61368 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |     |   `-IntegerLiteral 0x1b16fd61388 <line:56:32> 'int' 15
|   |   |   | | | | | |           |     `-ImplicitCastExpr 0x1b16fd61480 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |       `-ArraySubscriptExpr 0x1b16fd61448 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |         |-ImplicitCastExpr 0x1b16fd61430 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |         | `-DeclRefExpr 0x1b16fd613e8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |         `-IntegerLiteral 0x1b16fd61408 <line:56:22> 'int' 3
|   |   |   | | | | | |           `-ParenExpr 0x1b16fd61588 <line:23:47, col:56> 'int'
|   |   |   | | | | | |             `-BinaryOperator 0x1b16fd61568 <col:48, col:55> 'int' '-'
|   |   |   | | | | | |               |-IntegerLiteral 0x1b16fd614f8 <col:48> 'int' 32
|   |   |   | | | | | |               `-ParenExpr 0x1b16fd61548 <col:53, col:55> 'int'
|   |   |   | | | | | |                 `-IntegerLiteral 0x1b16fd61520 <line:34:59> 'int' 16
|   |   |   | | | | | `-CompoundAssignOperator 0x1b16fd61780 <line:35:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | |   |-ArraySubscriptExpr 0x1b16fd616c8 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | |   | |-ImplicitCastExpr 0x1b16fd616b0 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |   | | `-DeclRefExpr 0x1b16fd61668 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |   | `-IntegerLiteral 0x1b16fd61688 <line:56:28> 'int' 11
|   |   |   | | | | |   `-ImplicitCastExpr 0x1b16fd61768 <line:35:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | |     `-ArraySubscriptExpr 0x1b16fd61748 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | |       |-ImplicitCastExpr 0x1b16fd61730 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |       | `-DeclRefExpr 0x1b16fd616e8 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |       `-IntegerLiteral 0x1b16fd61708 <line:56:32> 'int' 15
|   |   |   | | | | `-BinaryOperator 0x1b16fd61d28 <line:35:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | |   |-ArraySubscriptExpr 0x1b16fd61830 <line:35:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | |   | |-ImplicitCastExpr 0x1b16fd61818 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |   | | `-DeclRefExpr 0x1b16fd617d0 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |   | `-IntegerLiteral 0x1b16fd617f0 <line:56:25> 'int' 7
|   |   |   | | | |   `-ParenExpr 0x1b16fd61d08 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | |     `-BinaryOperator 0x1b16fd61ce8 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | |       |-ParenExpr 0x1b16fd61a48 <col:24, col:35> 'unsigned int'
|   |   |   | | | |       | `-BinaryOperator 0x1b16fd61a28 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | |       |   |-ParenExpr 0x1b16fd619c0 <col:25, col:27> 'unsigned int'
|   |   |   | | | |       |   | `-ParenExpr 0x1b16fd619a0 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |       |   |   `-BinaryOperator 0x1b16fd61980 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |       |   |     |-ImplicitCastExpr 0x1b16fd61950 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd618b0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd61898 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd61850 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |     |   `-IntegerLiteral 0x1b16fd61870 <line:56:25> 'int' 7
|   |   |   | | | |       |   |     `-ImplicitCastExpr 0x1b16fd61968 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd61930 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |         |-ImplicitCastExpr 0x1b16fd61918 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |         | `-DeclRefExpr 0x1b16fd618d0 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |         `-IntegerLiteral 0x1b16fd618f0 <line:56:28> 'int' 11
|   |   |   | | | |       |   `-ParenExpr 0x1b16fd61a08 <line:23:32, col:34> 'int'
|   |   |   | | | |       |     `-IntegerLiteral 0x1b16fd619e0 <line:35:59> 'int' 12
|   |   |   | | | |       `-ParenExpr 0x1b16fd61cc8 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | |         `-BinaryOperator 0x1b16fd61ca8 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | |           |-ParenExpr 0x1b16fd61bd8 <col:40, col:42> 'unsigned int'
|   |   |   | | | |           | `-ParenExpr 0x1b16fd61bb8 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |           |   `-BinaryOperator 0x1b16fd61b98 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |           |     |-ImplicitCastExpr 0x1b16fd61b68 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |     | `-ArraySubscriptExpr 0x1b16fd61ac8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |     |   |-ImplicitCastExpr 0x1b16fd61ab0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |     |   | `-DeclRefExpr 0x1b16fd61a68 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |     |   `-IntegerLiteral 0x1b16fd61a88 <line:56:25> 'int' 7
|   |   |   | | | |           |     `-ImplicitCastExpr 0x1b16fd61b80 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |       `-ArraySubscriptExpr 0x1b16fd61b48 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |         |-ImplicitCastExpr 0x1b16fd61b30 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |         | `-DeclRefExpr 0x1b16fd61ae8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |         `-IntegerLiteral 0x1b16fd61b08 <line:56:28> 'int' 11
|   |   |   | | | |           `-ParenExpr 0x1b16fd61c88 <line:23:47, col:56> 'int'
|   |   |   | | | |             `-BinaryOperator 0x1b16fd61c68 <col:48, col:55> 'int' '-'
|   |   |   | | | |               |-IntegerLiteral 0x1b16fd61bf8 <col:48> 'int' 32
|   |   |   | | | |               `-ParenExpr 0x1b16fd61c48 <col:53, col:55> 'int'
|   |   |   | | | |                 `-IntegerLiteral 0x1b16fd61c20 <line:35:59> 'int' 12
|   |   |   | | | `-CompoundAssignOperator 0x1b16fd61e80 <line:36:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | |   |-ArraySubscriptExpr 0x1b16fd61dc8 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | |   | |-ImplicitCastExpr 0x1b16fd61db0 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |   | | `-DeclRefExpr 0x1b16fd61d68 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |   | `-IntegerLiteral 0x1b16fd61d88 <line:56:22> 'int' 3
|   |   |   | | |   `-ImplicitCastExpr 0x1b16fd61e68 <line:36:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | |     `-ArraySubscriptExpr 0x1b16fd61e48 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | |       |-ImplicitCastExpr 0x1b16fd61e30 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |       | `-DeclRefExpr 0x1b16fd61de8 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |       `-IntegerLiteral 0x1b16fd61e08 <line:56:25> 'int' 7
|   |   |   | | `-BinaryOperator 0x1b16fd63450 <line:36:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | |   |-ArraySubscriptExpr 0x1b16fd61f30 <line:36:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | |   | |-ImplicitCastExpr 0x1b16fd61f18 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |   | | `-DeclRefExpr 0x1b16fd61ed0 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |   | `-IntegerLiteral 0x1b16fd61ef0 <line:56:32> 'int' 15
|   |   |   | |   `-ParenExpr 0x1b16fd63430 <line:23:23, col:58> 'unsigned int'
|   |   |   | |     `-BinaryOperator 0x1b16fd63410 <col:24, col:57> 'unsigned int' '|'
|   |   |   | |       |-ParenExpr 0x1b16fd63170 <col:24, col:35> 'unsigned int'
|   |   |   | |       | `-BinaryOperator 0x1b16fd62128 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | |       |   |-ParenExpr 0x1b16fd620c0 <col:25, col:27> 'unsigned int'
|   |   |   | |       |   | `-ParenExpr 0x1b16fd620a0 <line:36:45, col:57> 'unsigned int'
|   |   |   | |       |   |   `-BinaryOperator 0x1b16fd62080 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |       |   |     |-ImplicitCastExpr 0x1b16fd62050 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |     | `-ArraySubscriptExpr 0x1b16fd61fb0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |     |   |-ImplicitCastExpr 0x1b16fd61f98 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |     |   | `-DeclRefExpr 0x1b16fd61f50 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |     |   `-IntegerLiteral 0x1b16fd61f70 <line:56:32> 'int' 15
|   |   |   | |       |   |     `-ImplicitCastExpr 0x1b16fd62068 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |       `-ArraySubscriptExpr 0x1b16fd62030 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |         |-ImplicitCastExpr 0x1b16fd62018 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |         | `-DeclRefExpr 0x1b16fd61fd0 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |         `-IntegerLiteral 0x1b16fd61ff0 <line:56:22> 'int' 3
|   |   |   | |       |   `-ParenExpr 0x1b16fd62108 <line:23:32, col:34> 'int'
|   |   |   | |       |     `-IntegerLiteral 0x1b16fd620e0 <line:36:60> 'int' 8
|   |   |   | |       `-ParenExpr 0x1b16fd633f0 <line:23:39, col:57> 'unsigned int'
|   |   |   | |         `-BinaryOperator 0x1b16fd633d0 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | |           |-ParenExpr 0x1b16fd63300 <col:40, col:42> 'unsigned int'
|   |   |   | |           | `-ParenExpr 0x1b16fd632e0 <line:36:45, col:57> 'unsigned int'
|   |   |   | |           |   `-BinaryOperator 0x1b16fd632c0 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |           |     |-ImplicitCastExpr 0x1b16fd63290 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |     | `-ArraySubscriptExpr 0x1b16fd631f0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |           |     |   |-ImplicitCastExpr 0x1b16fd631d8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |     |   | `-DeclRefExpr 0x1b16fd63190 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |     |   `-IntegerLiteral 0x1b16fd631b0 <line:56:32> 'int' 15
|   |   |   | |           |     `-ImplicitCastExpr 0x1b16fd632a8 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |       `-ArraySubscriptExpr 0x1b16fd63270 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |           |         |-ImplicitCastExpr 0x1b16fd63258 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |         | `-DeclRefExpr 0x1b16fd63210 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |         `-IntegerLiteral 0x1b16fd63230 <line:56:22> 'int' 3
|   |   |   | |           `-ParenExpr 0x1b16fd633b0 <line:23:47, col:56> 'int'
|   |   |   | |             `-BinaryOperator 0x1b16fd63390 <col:48, col:55> 'int' '-'
|   |   |   | |               |-IntegerLiteral 0x1b16fd63320 <col:48> 'int' 32
|   |   |   | |               `-ParenExpr 0x1b16fd63370 <col:53, col:55> 'int'
|   |   |   | |                 `-IntegerLiteral 0x1b16fd63348 <line:36:60> 'int' 8
|   |   |   | `-CompoundAssignOperator 0x1b16fd635a8 <line:37:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   |   |-ArraySubscriptExpr 0x1b16fd634f0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   |   | |-ImplicitCastExpr 0x1b16fd634d8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x1b16fd63490 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |   | `-IntegerLiteral 0x1b16fd634b0 <line:56:28> 'int' 11
|   |   |   |   `-ImplicitCastExpr 0x1b16fd63590 <line:37:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x1b16fd63570 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   |       |-ImplicitCastExpr 0x1b16fd63558 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   |       | `-DeclRefExpr 0x1b16fd63510 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |       `-IntegerLiteral 0x1b16fd63530 <line:56:32> 'int' 15
|   |   |   `-BinaryOperator 0x1b16fd63b50 <line:37:31, line:23:58> 'u32':'unsigned int' '='
|   |   |     |-ArraySubscriptExpr 0x1b16fd63658 <line:37:31, col:34> 'u32':'unsigned int' lvalue
|   |   |     | |-ImplicitCastExpr 0x1b16fd63640 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x1b16fd635f8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |     | `-IntegerLiteral 0x1b16fd63618 <line:56:25> 'int' 7
|   |   |     `-ParenExpr 0x1b16fd63b30 <line:23:23, col:58> 'unsigned int'
|   |   |       `-BinaryOperator 0x1b16fd63b10 <col:24, col:57> 'unsigned int' '|'
|   |   |         |-ParenExpr 0x1b16fd63870 <col:24, col:35> 'unsigned int'
|   |   |         | `-BinaryOperator 0x1b16fd63850 <col:25, col:34> 'unsigned int' '<<'
|   |   |         |   |-ParenExpr 0x1b16fd637e8 <col:25, col:27> 'unsigned int'
|   |   |         |   | `-ParenExpr 0x1b16fd637c8 <line:37:45, col:57> 'unsigned int'
|   |   |         |   |   `-BinaryOperator 0x1b16fd637a8 <col:46, col:56> 'unsigned int' '^'
|   |   |         |   |     |-ImplicitCastExpr 0x1b16fd63778 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |     | `-ArraySubscriptExpr 0x1b16fd636d8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |         |   |     |   |-ImplicitCastExpr 0x1b16fd636c0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |     |   | `-DeclRefExpr 0x1b16fd63678 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |     |   `-IntegerLiteral 0x1b16fd63698 <line:56:25> 'int' 7
|   |   |         |   |     `-ImplicitCastExpr 0x1b16fd63790 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |       `-ArraySubscriptExpr 0x1b16fd63758 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |         |   |         |-ImplicitCastExpr 0x1b16fd63740 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |         | `-DeclRefExpr 0x1b16fd636f8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |         `-IntegerLiteral 0x1b16fd63718 <line:56:28> 'int' 11
|   |   |         |   `-ParenExpr 0x1b16fd63830 <line:23:32, col:34> 'int'
|   |   |         |     `-IntegerLiteral 0x1b16fd63808 <line:37:60> 'int' 7
|   |   |         `-ParenExpr 0x1b16fd63af0 <line:23:39, col:57> 'unsigned int'
|   |   |           `-BinaryOperator 0x1b16fd63ad0 <col:40, col:56> 'unsigned int' '>>'
|   |   |             |-ParenExpr 0x1b16fd63a00 <col:40, col:42> 'unsigned int'
|   |   |             | `-ParenExpr 0x1b16fd639e0 <line:37:45, col:57> 'unsigned int'
|   |   |             |   `-BinaryOperator 0x1b16fd639c0 <col:46, col:56> 'unsigned int' '^'
|   |   |             |     |-ImplicitCastExpr 0x1b16fd63990 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |     | `-ArraySubscriptExpr 0x1b16fd638f0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |             |     |   |-ImplicitCastExpr 0x1b16fd638d8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |             |     |   | `-DeclRefExpr 0x1b16fd63890 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |     |   `-IntegerLiteral 0x1b16fd638b0 <line:56:25> 'int' 7
|   |   |             |     `-ImplicitCastExpr 0x1b16fd639a8 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |       `-ArraySubscriptExpr 0x1b16fd63970 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |             |         |-ImplicitCastExpr 0x1b16fd63958 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |             |         | `-DeclRefExpr 0x1b16fd63910 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |         `-IntegerLiteral 0x1b16fd63930 <line:56:28> 'int' 11
|   |   |             `-ParenExpr 0x1b16fd63ab0 <line:23:47, col:56> 'int'
|   |   |               `-BinaryOperator 0x1b16fd63a90 <col:48, col:55> 'int' '-'
|   |   |                 |-IntegerLiteral 0x1b16fd63a20 <col:48> 'int' 32
|   |   |                 `-ParenExpr 0x1b16fd63a70 <col:53, col:55> 'int'
|   |   |                   `-IntegerLiteral 0x1b16fd63a48 <line:37:60> 'int' 7
|   |   |-ParenExpr 0x1b16fd0f650 <line:33:32, line:37:64> 'u32':'unsigned int'
|   |   | `-BinaryOperator 0x1b16fd0f630 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   |-BinaryOperator 0x1b16fd0f098 <line:34:17, line:37:28> 'u32':'unsigned int' ','
|   |   |   | |-BinaryOperator 0x1b16fd65080 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | |-BinaryOperator 0x1b16fd64ae8 <line:34:17, line:36:28> 'u32':'unsigned int' ','
|   |   |   | | | |-BinaryOperator 0x1b16fd64980 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | |-BinaryOperator 0x1b16fd643e8 <line:34:17, line:35:28> 'u32':'unsigned int' ','
|   |   |   | | | | | |-BinaryOperator 0x1b16fd64280 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | | | |-CompoundAssignOperator 0x1b16fd63cc8 <line:34:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | | | | |-ArraySubscriptExpr 0x1b16fd63c10 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | | | |-ImplicitCastExpr 0x1b16fd63bf8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | | | | `-DeclRefExpr 0x1b16fd63bb0 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | | | `-IntegerLiteral 0x1b16fd63bd0 <line:57:22> 'int' 0
|   |   |   | | | | | | | `-ImplicitCastExpr 0x1b16fd63cb0 <line:34:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | | |   `-ArraySubscriptExpr 0x1b16fd63c90 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | |     |-ImplicitCastExpr 0x1b16fd63c78 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | |     | `-DeclRefExpr 0x1b16fd63c30 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | |     `-IntegerLiteral 0x1b16fd63c50 <line:57:25> 'int' 5
|   |   |   | | | | | | `-BinaryOperator 0x1b16fd64260 <line:34:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | | | |   |-ArraySubscriptExpr 0x1b16fd63d58 <line:34:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |   | |-ImplicitCastExpr 0x1b16fd63d40 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |   | | `-DeclRefExpr 0x1b16fd63cf8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |   | `-IntegerLiteral 0x1b16fd63d18 <line:57:32> 'int' 15
|   |   |   | | | | | |   `-ParenExpr 0x1b16fd64240 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | | | |     `-BinaryOperator 0x1b16fd64220 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | | | |       |-ParenExpr 0x1b16fd63f70 <col:24, col:35> 'unsigned int'
|   |   |   | | | | | |       | `-BinaryOperator 0x1b16fd63f50 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | | | |       |   |-ParenExpr 0x1b16fd63ee8 <col:25, col:27> 'unsigned int'
|   |   |   | | | | | |       |   | `-ParenExpr 0x1b16fd63ec8 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |       |   |   `-BinaryOperator 0x1b16fd63ea8 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |       |   |     |-ImplicitCastExpr 0x1b16fd63e78 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd63dd8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd63dc0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd63d78 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |     |   `-IntegerLiteral 0x1b16fd63d98 <line:57:32> 'int' 15
|   |   |   | | | | | |       |   |     `-ImplicitCastExpr 0x1b16fd63e90 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd63e58 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |         |-ImplicitCastExpr 0x1b16fd63e40 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |         | `-DeclRefExpr 0x1b16fd63df8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |         `-IntegerLiteral 0x1b16fd63e18 <line:57:22> 'int' 0
|   |   |   | | | | | |       |   `-ParenExpr 0x1b16fd63f30 <line:23:32, col:34> 'int'
|   |   |   | | | | | |       |     `-IntegerLiteral 0x1b16fd63f08 <line:34:59> 'int' 16
|   |   |   | | | | | |       `-ParenExpr 0x1b16fd64200 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | | | |         `-BinaryOperator 0x1b16fd641e0 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | | | |           |-ParenExpr 0x1b16fd64100 <col:40, col:42> 'unsigned int'
|   |   |   | | | | | |           | `-ParenExpr 0x1b16fd640e0 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |           |   `-BinaryOperator 0x1b16fd640c0 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |           |     |-ImplicitCastExpr 0x1b16fd64090 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |     | `-ArraySubscriptExpr 0x1b16fd63ff0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |     |   |-ImplicitCastExpr 0x1b16fd63fd8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |     |   | `-DeclRefExpr 0x1b16fd63f90 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |     |   `-IntegerLiteral 0x1b16fd63fb0 <line:57:32> 'int' 15
|   |   |   | | | | | |           |     `-ImplicitCastExpr 0x1b16fd640a8 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |       `-ArraySubscriptExpr 0x1b16fd64070 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |         |-ImplicitCastExpr 0x1b16fd64058 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |         | `-DeclRefExpr 0x1b16fd64010 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |         `-IntegerLiteral 0x1b16fd64030 <line:57:22> 'int' 0
|   |   |   | | | | | |           `-ParenExpr 0x1b16fd641c0 <line:23:47, col:56> 'int'
|   |   |   | | | | | |             `-BinaryOperator 0x1b16fd641a0 <col:48, col:55> 'int' '-'
|   |   |   | | | | | |               |-IntegerLiteral 0x1b16fd64120 <col:48> 'int' 32
|   |   |   | | | | | |               `-ParenExpr 0x1b16fd64180 <col:53, col:55> 'int'
|   |   |   | | | | | |                 `-IntegerLiteral 0x1b16fd64148 <line:34:59> 'int' 16
|   |   |   | | | | | `-CompoundAssignOperator 0x1b16fd643b8 <line:35:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | |   |-ArraySubscriptExpr 0x1b16fd64300 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | |   | |-ImplicitCastExpr 0x1b16fd642e8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |   | | `-DeclRefExpr 0x1b16fd642a0 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |   | `-IntegerLiteral 0x1b16fd642c0 <line:57:28> 'int' 10
|   |   |   | | | | |   `-ImplicitCastExpr 0x1b16fd643a0 <line:35:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | |     `-ArraySubscriptExpr 0x1b16fd64380 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | |       |-ImplicitCastExpr 0x1b16fd64368 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |       | `-DeclRefExpr 0x1b16fd64320 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |       `-IntegerLiteral 0x1b16fd64340 <line:57:32> 'int' 15
|   |   |   | | | | `-BinaryOperator 0x1b16fd64960 <line:35:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | |   |-ArraySubscriptExpr 0x1b16fd64468 <line:35:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | |   | |-ImplicitCastExpr 0x1b16fd64450 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |   | | `-DeclRefExpr 0x1b16fd64408 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |   | `-IntegerLiteral 0x1b16fd64428 <line:57:25> 'int' 5
|   |   |   | | | |   `-ParenExpr 0x1b16fd64940 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | |     `-BinaryOperator 0x1b16fd64920 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | |       |-ParenExpr 0x1b16fd64680 <col:24, col:35> 'unsigned int'
|   |   |   | | | |       | `-BinaryOperator 0x1b16fd64660 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | |       |   |-ParenExpr 0x1b16fd645f8 <col:25, col:27> 'unsigned int'
|   |   |   | | | |       |   | `-ParenExpr 0x1b16fd645d8 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |       |   |   `-BinaryOperator 0x1b16fd645b8 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |       |   |     |-ImplicitCastExpr 0x1b16fd64588 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd644e8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd644d0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd64488 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |     |   `-IntegerLiteral 0x1b16fd644a8 <line:57:25> 'int' 5
|   |   |   | | | |       |   |     `-ImplicitCastExpr 0x1b16fd645a0 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd64568 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |         |-ImplicitCastExpr 0x1b16fd64550 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |         | `-DeclRefExpr 0x1b16fd64508 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |         `-IntegerLiteral 0x1b16fd64528 <line:57:28> 'int' 10
|   |   |   | | | |       |   `-ParenExpr 0x1b16fd64640 <line:23:32, col:34> 'int'
|   |   |   | | | |       |     `-IntegerLiteral 0x1b16fd64618 <line:35:59> 'int' 12
|   |   |   | | | |       `-ParenExpr 0x1b16fd64900 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | |         `-BinaryOperator 0x1b16fd648e0 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | |           |-ParenExpr 0x1b16fd64810 <col:40, col:42> 'unsigned int'
|   |   |   | | | |           | `-ParenExpr 0x1b16fd647f0 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |           |   `-BinaryOperator 0x1b16fd647d0 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |           |     |-ImplicitCastExpr 0x1b16fd647a0 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |     | `-ArraySubscriptExpr 0x1b16fd64700 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |     |   |-ImplicitCastExpr 0x1b16fd646e8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |     |   | `-DeclRefExpr 0x1b16fd646a0 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |     |   `-IntegerLiteral 0x1b16fd646c0 <line:57:25> 'int' 5
|   |   |   | | | |           |     `-ImplicitCastExpr 0x1b16fd647b8 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |       `-ArraySubscriptExpr 0x1b16fd64780 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |         |-ImplicitCastExpr 0x1b16fd64768 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |         | `-DeclRefExpr 0x1b16fd64720 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |         `-IntegerLiteral 0x1b16fd64740 <line:57:28> 'int' 10
|   |   |   | | | |           `-ParenExpr 0x1b16fd648c0 <line:23:47, col:56> 'int'
|   |   |   | | | |             `-BinaryOperator 0x1b16fd648a0 <col:48, col:55> 'int' '-'
|   |   |   | | | |               |-IntegerLiteral 0x1b16fd64830 <col:48> 'int' 32
|   |   |   | | | |               `-ParenExpr 0x1b16fd64880 <col:53, col:55> 'int'
|   |   |   | | | |                 `-IntegerLiteral 0x1b16fd64858 <line:35:59> 'int' 12
|   |   |   | | | `-CompoundAssignOperator 0x1b16fd64ab8 <line:36:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | |   |-ArraySubscriptExpr 0x1b16fd64a00 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | |   | |-ImplicitCastExpr 0x1b16fd649e8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |   | | `-DeclRefExpr 0x1b16fd649a0 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |   | `-IntegerLiteral 0x1b16fd649c0 <line:57:22> 'int' 0
|   |   |   | | |   `-ImplicitCastExpr 0x1b16fd64aa0 <line:36:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | |     `-ArraySubscriptExpr 0x1b16fd64a80 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | |       |-ImplicitCastExpr 0x1b16fd64a68 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |       | `-DeclRefExpr 0x1b16fd64a20 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |       `-IntegerLiteral 0x1b16fd64a40 <line:57:25> 'int' 5
|   |   |   | | `-BinaryOperator 0x1b16fd65060 <line:36:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | |   |-ArraySubscriptExpr 0x1b16fd64b68 <line:36:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | |   | |-ImplicitCastExpr 0x1b16fd64b50 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |   | | `-DeclRefExpr 0x1b16fd64b08 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |   | `-IntegerLiteral 0x1b16fd64b28 <line:57:32> 'int' 15
|   |   |   | |   `-ParenExpr 0x1b16fd65040 <line:23:23, col:58> 'unsigned int'
|   |   |   | |     `-BinaryOperator 0x1b16fd65020 <col:24, col:57> 'unsigned int' '|'
|   |   |   | |       |-ParenExpr 0x1b16fd64d80 <col:24, col:35> 'unsigned int'
|   |   |   | |       | `-BinaryOperator 0x1b16fd64d60 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | |       |   |-ParenExpr 0x1b16fd64cf8 <col:25, col:27> 'unsigned int'
|   |   |   | |       |   | `-ParenExpr 0x1b16fd64cd8 <line:36:45, col:57> 'unsigned int'
|   |   |   | |       |   |   `-BinaryOperator 0x1b16fd64cb8 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |       |   |     |-ImplicitCastExpr 0x1b16fd64c88 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |     | `-ArraySubscriptExpr 0x1b16fd64be8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |     |   |-ImplicitCastExpr 0x1b16fd64bd0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |     |   | `-DeclRefExpr 0x1b16fd64b88 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |     |   `-IntegerLiteral 0x1b16fd64ba8 <line:57:32> 'int' 15
|   |   |   | |       |   |     `-ImplicitCastExpr 0x1b16fd64ca0 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |       `-ArraySubscriptExpr 0x1b16fd64c68 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |         |-ImplicitCastExpr 0x1b16fd64c50 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |         | `-DeclRefExpr 0x1b16fd64c08 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |         `-IntegerLiteral 0x1b16fd64c28 <line:57:22> 'int' 0
|   |   |   | |       |   `-ParenExpr 0x1b16fd64d40 <line:23:32, col:34> 'int'
|   |   |   | |       |     `-IntegerLiteral 0x1b16fd64d18 <line:36:60> 'int' 8
|   |   |   | |       `-ParenExpr 0x1b16fd65000 <line:23:39, col:57> 'unsigned int'
|   |   |   | |         `-BinaryOperator 0x1b16fd64fe0 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | |           |-ParenExpr 0x1b16fd64f10 <col:40, col:42> 'unsigned int'
|   |   |   | |           | `-ParenExpr 0x1b16fd64ef0 <line:36:45, col:57> 'unsigned int'
|   |   |   | |           |   `-BinaryOperator 0x1b16fd64ed0 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |           |     |-ImplicitCastExpr 0x1b16fd64ea0 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |     | `-ArraySubscriptExpr 0x1b16fd64e00 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |           |     |   |-ImplicitCastExpr 0x1b16fd64de8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |     |   | `-DeclRefExpr 0x1b16fd64da0 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |     |   `-IntegerLiteral 0x1b16fd64dc0 <line:57:32> 'int' 15
|   |   |   | |           |     `-ImplicitCastExpr 0x1b16fd64eb8 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |       `-ArraySubscriptExpr 0x1b16fd64e80 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |           |         |-ImplicitCastExpr 0x1b16fd64e68 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |         | `-DeclRefExpr 0x1b16fd64e20 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |         `-IntegerLiteral 0x1b16fd64e40 <line:57:22> 'int' 0
|   |   |   | |           `-ParenExpr 0x1b16fd64fc0 <line:23:47, col:56> 'int'
|   |   |   | |             `-BinaryOperator 0x1b16fd64fa0 <col:48, col:55> 'int' '-'
|   |   |   | |               |-IntegerLiteral 0x1b16fd64f30 <col:48> 'int' 32
|   |   |   | |               `-ParenExpr 0x1b16fd64f80 <col:53, col:55> 'int'
|   |   |   | |                 `-IntegerLiteral 0x1b16fd64f58 <line:36:60> 'int' 8
|   |   |   | `-CompoundAssignOperator 0x1b16fd0f068 <line:37:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   |   |-ArraySubscriptExpr 0x1b16fd65100 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   |   | |-ImplicitCastExpr 0x1b16fd650e8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x1b16fd650a0 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |   | `-IntegerLiteral 0x1b16fd650c0 <line:57:28> 'int' 10
|   |   |   |   `-ImplicitCastExpr 0x1b16fd0f050 <line:37:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x1b16fd0f030 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   |       |-ImplicitCastExpr 0x1b16fd65168 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   |       | `-DeclRefExpr 0x1b16fd65120 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |       `-IntegerLiteral 0x1b16fd65140 <line:57:32> 'int' 15
|   |   |   `-BinaryOperator 0x1b16fd0f610 <line:37:31, line:23:58> 'u32':'unsigned int' '='
|   |   |     |-ArraySubscriptExpr 0x1b16fd0f118 <line:37:31, col:34> 'u32':'unsigned int' lvalue
|   |   |     | |-ImplicitCastExpr 0x1b16fd0f100 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x1b16fd0f0b8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |     | `-IntegerLiteral 0x1b16fd0f0d8 <line:57:25> 'int' 5
|   |   |     `-ParenExpr 0x1b16fd0f5f0 <line:23:23, col:58> 'unsigned int'
|   |   |       `-BinaryOperator 0x1b16fd0f5d0 <col:24, col:57> 'unsigned int' '|'
|   |   |         |-ParenExpr 0x1b16fd0f330 <col:24, col:35> 'unsigned int'
|   |   |         | `-BinaryOperator 0x1b16fd0f310 <col:25, col:34> 'unsigned int' '<<'
|   |   |         |   |-ParenExpr 0x1b16fd0f2a8 <col:25, col:27> 'unsigned int'
|   |   |         |   | `-ParenExpr 0x1b16fd0f288 <line:37:45, col:57> 'unsigned int'
|   |   |         |   |   `-BinaryOperator 0x1b16fd0f268 <col:46, col:56> 'unsigned int' '^'
|   |   |         |   |     |-ImplicitCastExpr 0x1b16fd0f238 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |     | `-ArraySubscriptExpr 0x1b16fd0f198 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |         |   |     |   |-ImplicitCastExpr 0x1b16fd0f180 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |     |   | `-DeclRefExpr 0x1b16fd0f138 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |     |   `-IntegerLiteral 0x1b16fd0f158 <line:57:25> 'int' 5
|   |   |         |   |     `-ImplicitCastExpr 0x1b16fd0f250 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |       `-ArraySubscriptExpr 0x1b16fd0f218 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |         |   |         |-ImplicitCastExpr 0x1b16fd0f200 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |         | `-DeclRefExpr 0x1b16fd0f1b8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |         `-IntegerLiteral 0x1b16fd0f1d8 <line:57:28> 'int' 10
|   |   |         |   `-ParenExpr 0x1b16fd0f2f0 <line:23:32, col:34> 'int'
|   |   |         |     `-IntegerLiteral 0x1b16fd0f2c8 <line:37:60> 'int' 7
|   |   |         `-ParenExpr 0x1b16fd0f5b0 <line:23:39, col:57> 'unsigned int'
|   |   |           `-BinaryOperator 0x1b16fd0f590 <col:40, col:56> 'unsigned int' '>>'
|   |   |             |-ParenExpr 0x1b16fd0f4c0 <col:40, col:42> 'unsigned int'
|   |   |             | `-ParenExpr 0x1b16fd0f4a0 <line:37:45, col:57> 'unsigned int'
|   |   |             |   `-BinaryOperator 0x1b16fd0f480 <col:46, col:56> 'unsigned int' '^'
|   |   |             |     |-ImplicitCastExpr 0x1b16fd0f450 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |     | `-ArraySubscriptExpr 0x1b16fd0f3b0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |             |     |   |-ImplicitCastExpr 0x1b16fd0f398 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |             |     |   | `-DeclRefExpr 0x1b16fd0f350 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |     |   `-IntegerLiteral 0x1b16fd0f370 <line:57:25> 'int' 5
|   |   |             |     `-ImplicitCastExpr 0x1b16fd0f468 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |       `-ArraySubscriptExpr 0x1b16fd0f430 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |             |         |-ImplicitCastExpr 0x1b16fd0f418 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |             |         | `-DeclRefExpr 0x1b16fd0f3d0 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |         `-IntegerLiteral 0x1b16fd0f3f0 <line:57:28> 'int' 10
|   |   |             `-ParenExpr 0x1b16fd0f570 <line:23:47, col:56> 'int'
|   |   |               `-BinaryOperator 0x1b16fd0f550 <col:48, col:55> 'int' '-'
|   |   |                 |-IntegerLiteral 0x1b16fd0f4e0 <col:48> 'int' 32
|   |   |                 `-ParenExpr 0x1b16fd0f530 <col:53, col:55> 'int'
|   |   |                   `-IntegerLiteral 0x1b16fd0f508 <line:37:60> 'int' 7
|   |   |-ParenExpr 0x1b16fd0b228 <line:33:32, line:37:64> 'u32':'unsigned int'
|   |   | `-BinaryOperator 0x1b16fd0b208 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   |-BinaryOperator 0x1b16fd10cc0 <line:34:17, line:37:28> 'u32':'unsigned int' ','
|   |   |   | |-BinaryOperator 0x1b16fd10b58 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | |-BinaryOperator 0x1b16fd105c0 <line:34:17, line:36:28> 'u32':'unsigned int' ','
|   |   |   | | | |-BinaryOperator 0x1b16fd10458 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | |-BinaryOperator 0x1b16fd0fe98 <line:34:17, line:35:28> 'u32':'unsigned int' ','
|   |   |   | | | | | |-BinaryOperator 0x1b16fd0fd30 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | | | |-CompoundAssignOperator 0x1b16fd0f788 <line:34:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | | | | |-ArraySubscriptExpr 0x1b16fd0f6d0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | | | |-ImplicitCastExpr 0x1b16fd0f6b8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | | | | `-DeclRefExpr 0x1b16fd0f670 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | | | `-IntegerLiteral 0x1b16fd0f690 <line:58:22> 'int' 1
|   |   |   | | | | | | | `-ImplicitCastExpr 0x1b16fd0f770 <line:34:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | | |   `-ArraySubscriptExpr 0x1b16fd0f750 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | |     |-ImplicitCastExpr 0x1b16fd0f738 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | |     | `-DeclRefExpr 0x1b16fd0f6f0 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | |     `-IntegerLiteral 0x1b16fd0f710 <line:58:25> 'int' 6
|   |   |   | | | | | | `-BinaryOperator 0x1b16fd0fd10 <line:34:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | | | |   |-ArraySubscriptExpr 0x1b16fd0f818 <line:34:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |   | |-ImplicitCastExpr 0x1b16fd0f800 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |   | | `-DeclRefExpr 0x1b16fd0f7b8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |   | `-IntegerLiteral 0x1b16fd0f7d8 <line:58:32> 'int' 12
|   |   |   | | | | | |   `-ParenExpr 0x1b16fd0fcf0 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | | | |     `-BinaryOperator 0x1b16fd0fcd0 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | | | |       |-ParenExpr 0x1b16fd0fa30 <col:24, col:35> 'unsigned int'
|   |   |   | | | | | |       | `-BinaryOperator 0x1b16fd0fa10 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | | | |       |   |-ParenExpr 0x1b16fd0f9a8 <col:25, col:27> 'unsigned int'
|   |   |   | | | | | |       |   | `-ParenExpr 0x1b16fd0f988 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |       |   |   `-BinaryOperator 0x1b16fd0f968 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |       |   |     |-ImplicitCastExpr 0x1b16fd0f938 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd0f898 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd0f880 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd0f838 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |     |   `-IntegerLiteral 0x1b16fd0f858 <line:58:32> 'int' 12
|   |   |   | | | | | |       |   |     `-ImplicitCastExpr 0x1b16fd0f950 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd0f918 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |         |-ImplicitCastExpr 0x1b16fd0f900 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |         | `-DeclRefExpr 0x1b16fd0f8b8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |         `-IntegerLiteral 0x1b16fd0f8d8 <line:58:22> 'int' 1
|   |   |   | | | | | |       |   `-ParenExpr 0x1b16fd0f9f0 <line:23:32, col:34> 'int'
|   |   |   | | | | | |       |     `-IntegerLiteral 0x1b16fd0f9c8 <line:34:59> 'int' 16
|   |   |   | | | | | |       `-ParenExpr 0x1b16fd0fcb0 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | | | |         `-BinaryOperator 0x1b16fd0fc90 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | | | |           |-ParenExpr 0x1b16fd0fbc0 <col:40, col:42> 'unsigned int'
|   |   |   | | | | | |           | `-ParenExpr 0x1b16fd0fba0 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |           |   `-BinaryOperator 0x1b16fd0fb80 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |           |     |-ImplicitCastExpr 0x1b16fd0fb50 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |     | `-ArraySubscriptExpr 0x1b16fd0fab0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |     |   |-ImplicitCastExpr 0x1b16fd0fa98 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |     |   | `-DeclRefExpr 0x1b16fd0fa50 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |     |   `-IntegerLiteral 0x1b16fd0fa70 <line:58:32> 'int' 12
|   |   |   | | | | | |           |     `-ImplicitCastExpr 0x1b16fd0fb68 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |       `-ArraySubscriptExpr 0x1b16fd0fb30 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |         |-ImplicitCastExpr 0x1b16fd0fb18 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |         | `-DeclRefExpr 0x1b16fd0fad0 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |         `-IntegerLiteral 0x1b16fd0faf0 <line:58:22> 'int' 1
|   |   |   | | | | | |           `-ParenExpr 0x1b16fd0fc70 <line:23:47, col:56> 'int'
|   |   |   | | | | | |             `-BinaryOperator 0x1b16fd0fc50 <col:48, col:55> 'int' '-'
|   |   |   | | | | | |               |-IntegerLiteral 0x1b16fd0fbe0 <col:48> 'int' 32
|   |   |   | | | | | |               `-ParenExpr 0x1b16fd0fc30 <col:53, col:55> 'int'
|   |   |   | | | | | |                 `-IntegerLiteral 0x1b16fd0fc08 <line:34:59> 'int' 16
|   |   |   | | | | | `-CompoundAssignOperator 0x1b16fd0fe68 <line:35:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | |   |-ArraySubscriptExpr 0x1b16fd0fdb0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | |   | |-ImplicitCastExpr 0x1b16fd0fd98 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |   | | `-DeclRefExpr 0x1b16fd0fd50 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |   | `-IntegerLiteral 0x1b16fd0fd70 <line:58:28> 'int' 11
|   |   |   | | | | |   `-ImplicitCastExpr 0x1b16fd0fe50 <line:35:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | |     `-ArraySubscriptExpr 0x1b16fd0fe30 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | |       |-ImplicitCastExpr 0x1b16fd0fe18 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |       | `-DeclRefExpr 0x1b16fd0fdd0 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |       `-IntegerLiteral 0x1b16fd0fdf0 <line:58:32> 'int' 12
|   |   |   | | | | `-BinaryOperator 0x1b16fd10438 <line:35:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | |   |-ArraySubscriptExpr 0x1b16fd0ff18 <line:35:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | |   | |-ImplicitCastExpr 0x1b16fd0ff00 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |   | | `-DeclRefExpr 0x1b16fd0feb8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |   | `-IntegerLiteral 0x1b16fd0fed8 <line:58:25> 'int' 6
|   |   |   | | | |   `-ParenExpr 0x1b16fd10418 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | |     `-BinaryOperator 0x1b16fd103f8 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | |       |-ParenExpr 0x1b16fd10158 <col:24, col:35> 'unsigned int'
|   |   |   | | | |       | `-BinaryOperator 0x1b16fd10138 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | |       |   |-ParenExpr 0x1b16fd100d0 <col:25, col:27> 'unsigned int'
|   |   |   | | | |       |   | `-ParenExpr 0x1b16fd100b0 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |       |   |   `-BinaryOperator 0x1b16fd10090 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |       |   |     |-ImplicitCastExpr 0x1b16fd10060 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd0ff98 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd0ff80 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd0ff38 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |     |   `-IntegerLiteral 0x1b16fd0ff58 <line:58:25> 'int' 6
|   |   |   | | | |       |   |     `-ImplicitCastExpr 0x1b16fd10078 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd10040 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |         |-ImplicitCastExpr 0x1b16fd10000 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |         | `-DeclRefExpr 0x1b16fd0ffb8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |         `-IntegerLiteral 0x1b16fd0ffd8 <line:58:28> 'int' 11
|   |   |   | | | |       |   `-ParenExpr 0x1b16fd10118 <line:23:32, col:34> 'int'
|   |   |   | | | |       |     `-IntegerLiteral 0x1b16fd100f0 <line:35:59> 'int' 12
|   |   |   | | | |       `-ParenExpr 0x1b16fd103d8 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | |         `-BinaryOperator 0x1b16fd103b8 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | |           |-ParenExpr 0x1b16fd102e8 <col:40, col:42> 'unsigned int'
|   |   |   | | | |           | `-ParenExpr 0x1b16fd102c8 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |           |   `-BinaryOperator 0x1b16fd102a8 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |           |     |-ImplicitCastExpr 0x1b16fd10278 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |     | `-ArraySubscriptExpr 0x1b16fd101d8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |     |   |-ImplicitCastExpr 0x1b16fd101c0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |     |   | `-DeclRefExpr 0x1b16fd10178 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |     |   `-IntegerLiteral 0x1b16fd10198 <line:58:25> 'int' 6
|   |   |   | | | |           |     `-ImplicitCastExpr 0x1b16fd10290 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |       `-ArraySubscriptExpr 0x1b16fd10258 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |         |-ImplicitCastExpr 0x1b16fd10240 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |         | `-DeclRefExpr 0x1b16fd101f8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |         `-IntegerLiteral 0x1b16fd10218 <line:58:28> 'int' 11
|   |   |   | | | |           `-ParenExpr 0x1b16fd10398 <line:23:47, col:56> 'int'
|   |   |   | | | |             `-BinaryOperator 0x1b16fd10378 <col:48, col:55> 'int' '-'
|   |   |   | | | |               |-IntegerLiteral 0x1b16fd10308 <col:48> 'int' 32
|   |   |   | | | |               `-ParenExpr 0x1b16fd10358 <col:53, col:55> 'int'
|   |   |   | | | |                 `-IntegerLiteral 0x1b16fd10330 <line:35:59> 'int' 12
|   |   |   | | | `-CompoundAssignOperator 0x1b16fd10590 <line:36:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | |   |-ArraySubscriptExpr 0x1b16fd104d8 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | |   | |-ImplicitCastExpr 0x1b16fd104c0 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |   | | `-DeclRefExpr 0x1b16fd10478 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |   | `-IntegerLiteral 0x1b16fd10498 <line:58:22> 'int' 1
|   |   |   | | |   `-ImplicitCastExpr 0x1b16fd10578 <line:36:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | |     `-ArraySubscriptExpr 0x1b16fd10558 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | |       |-ImplicitCastExpr 0x1b16fd10540 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |       | `-DeclRefExpr 0x1b16fd104f8 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |       `-IntegerLiteral 0x1b16fd10518 <line:58:25> 'int' 6
|   |   |   | | `-BinaryOperator 0x1b16fd10b38 <line:36:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | |   |-ArraySubscriptExpr 0x1b16fd10640 <line:36:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | |   | |-ImplicitCastExpr 0x1b16fd10628 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |   | | `-DeclRefExpr 0x1b16fd105e0 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |   | `-IntegerLiteral 0x1b16fd10600 <line:58:32> 'int' 12
|   |   |   | |   `-ParenExpr 0x1b16fd10b18 <line:23:23, col:58> 'unsigned int'
|   |   |   | |     `-BinaryOperator 0x1b16fd10af8 <col:24, col:57> 'unsigned int' '|'
|   |   |   | |       |-ParenExpr 0x1b16fd10858 <col:24, col:35> 'unsigned int'
|   |   |   | |       | `-BinaryOperator 0x1b16fd10838 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | |       |   |-ParenExpr 0x1b16fd107d0 <col:25, col:27> 'unsigned int'
|   |   |   | |       |   | `-ParenExpr 0x1b16fd107b0 <line:36:45, col:57> 'unsigned int'
|   |   |   | |       |   |   `-BinaryOperator 0x1b16fd10790 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |       |   |     |-ImplicitCastExpr 0x1b16fd10760 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |     | `-ArraySubscriptExpr 0x1b16fd106c0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |     |   |-ImplicitCastExpr 0x1b16fd106a8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |     |   | `-DeclRefExpr 0x1b16fd10660 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |     |   `-IntegerLiteral 0x1b16fd10680 <line:58:32> 'int' 12
|   |   |   | |       |   |     `-ImplicitCastExpr 0x1b16fd10778 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |       `-ArraySubscriptExpr 0x1b16fd10740 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |         |-ImplicitCastExpr 0x1b16fd10728 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |         | `-DeclRefExpr 0x1b16fd106e0 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |         `-IntegerLiteral 0x1b16fd10700 <line:58:22> 'int' 1
|   |   |   | |       |   `-ParenExpr 0x1b16fd10818 <line:23:32, col:34> 'int'
|   |   |   | |       |     `-IntegerLiteral 0x1b16fd107f0 <line:36:60> 'int' 8
|   |   |   | |       `-ParenExpr 0x1b16fd10ad8 <line:23:39, col:57> 'unsigned int'
|   |   |   | |         `-BinaryOperator 0x1b16fd10ab8 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | |           |-ParenExpr 0x1b16fd109e8 <col:40, col:42> 'unsigned int'
|   |   |   | |           | `-ParenExpr 0x1b16fd109c8 <line:36:45, col:57> 'unsigned int'
|   |   |   | |           |   `-BinaryOperator 0x1b16fd109a8 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |           |     |-ImplicitCastExpr 0x1b16fd10978 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |     | `-ArraySubscriptExpr 0x1b16fd108d8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |           |     |   |-ImplicitCastExpr 0x1b16fd108c0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |     |   | `-DeclRefExpr 0x1b16fd10878 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |     |   `-IntegerLiteral 0x1b16fd10898 <line:58:32> 'int' 12
|   |   |   | |           |     `-ImplicitCastExpr 0x1b16fd10990 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |       `-ArraySubscriptExpr 0x1b16fd10958 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |           |         |-ImplicitCastExpr 0x1b16fd10940 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |         | `-DeclRefExpr 0x1b16fd108f8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |         `-IntegerLiteral 0x1b16fd10918 <line:58:22> 'int' 1
|   |   |   | |           `-ParenExpr 0x1b16fd10a98 <line:23:47, col:56> 'int'
|   |   |   | |             `-BinaryOperator 0x1b16fd10a78 <col:48, col:55> 'int' '-'
|   |   |   | |               |-IntegerLiteral 0x1b16fd10a08 <col:48> 'int' 32
|   |   |   | |               `-ParenExpr 0x1b16fd10a58 <col:53, col:55> 'int'
|   |   |   | |                 `-IntegerLiteral 0x1b16fd10a30 <line:36:60> 'int' 8
|   |   |   | `-CompoundAssignOperator 0x1b16fd10c90 <line:37:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   |   |-ArraySubscriptExpr 0x1b16fd10bd8 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   |   | |-ImplicitCastExpr 0x1b16fd10bc0 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x1b16fd10b78 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |   | `-IntegerLiteral 0x1b16fd10b98 <line:58:28> 'int' 11
|   |   |   |   `-ImplicitCastExpr 0x1b16fd10c78 <line:37:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x1b16fd10c58 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   |       |-ImplicitCastExpr 0x1b16fd10c40 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   |       | `-DeclRefExpr 0x1b16fd10bf8 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |       `-IntegerLiteral 0x1b16fd10c18 <line:58:32> 'int' 12
|   |   |   `-BinaryOperator 0x1b16fd0b1e8 <line:37:31, line:23:58> 'u32':'unsigned int' '='
|   |   |     |-ArraySubscriptExpr 0x1b16fd10d40 <line:37:31, col:34> 'u32':'unsigned int' lvalue
|   |   |     | |-ImplicitCastExpr 0x1b16fd10d28 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x1b16fd10ce0 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |     | `-IntegerLiteral 0x1b16fd10d00 <line:58:25> 'int' 6
|   |   |     `-ParenExpr 0x1b16fd0b1c8 <line:23:23, col:58> 'unsigned int'
|   |   |       `-BinaryOperator 0x1b16fd0b1a8 <col:24, col:57> 'unsigned int' '|'
|   |   |         |-ParenExpr 0x1b16fd10f58 <col:24, col:35> 'unsigned int'
|   |   |         | `-BinaryOperator 0x1b16fd10f38 <col:25, col:34> 'unsigned int' '<<'
|   |   |         |   |-ParenExpr 0x1b16fd10ed0 <col:25, col:27> 'unsigned int'
|   |   |         |   | `-ParenExpr 0x1b16fd10eb0 <line:37:45, col:57> 'unsigned int'
|   |   |         |   |   `-BinaryOperator 0x1b16fd10e90 <col:46, col:56> 'unsigned int' '^'
|   |   |         |   |     |-ImplicitCastExpr 0x1b16fd10e60 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |     | `-ArraySubscriptExpr 0x1b16fd10dc0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |         |   |     |   |-ImplicitCastExpr 0x1b16fd10da8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |     |   | `-DeclRefExpr 0x1b16fd10d60 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |     |   `-IntegerLiteral 0x1b16fd10d80 <line:58:25> 'int' 6
|   |   |         |   |     `-ImplicitCastExpr 0x1b16fd10e78 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |       `-ArraySubscriptExpr 0x1b16fd10e40 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |         |   |         |-ImplicitCastExpr 0x1b16fd10e28 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |         | `-DeclRefExpr 0x1b16fd10de0 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |         `-IntegerLiteral 0x1b16fd10e00 <line:58:28> 'int' 11
|   |   |         |   `-ParenExpr 0x1b16fd10f18 <line:23:32, col:34> 'int'
|   |   |         |     `-IntegerLiteral 0x1b16fd10ef0 <line:37:60> 'int' 7
|   |   |         `-ParenExpr 0x1b16fd0b188 <line:23:39, col:57> 'unsigned int'
|   |   |           `-BinaryOperator 0x1b16fd0b168 <col:40, col:56> 'unsigned int' '>>'
|   |   |             |-ParenExpr 0x1b16fd0b098 <col:40, col:42> 'unsigned int'
|   |   |             | `-ParenExpr 0x1b16fd0b078 <line:37:45, col:57> 'unsigned int'
|   |   |             |   `-BinaryOperator 0x1b16fd0b058 <col:46, col:56> 'unsigned int' '^'
|   |   |             |     |-ImplicitCastExpr 0x1b16fd0b028 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |     | `-ArraySubscriptExpr 0x1b16fd10fd8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |             |     |   |-ImplicitCastExpr 0x1b16fd10fc0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |             |     |   | `-DeclRefExpr 0x1b16fd10f78 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |     |   `-IntegerLiteral 0x1b16fd10f98 <line:58:25> 'int' 6
|   |   |             |     `-ImplicitCastExpr 0x1b16fd0b040 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |       `-ArraySubscriptExpr 0x1b16fd0b008 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |             |         |-ImplicitCastExpr 0x1b16fd0aff0 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |             |         | `-DeclRefExpr 0x1b16fd10ff8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |         `-IntegerLiteral 0x1b16fd11018 <line:58:28> 'int' 11
|   |   |             `-ParenExpr 0x1b16fd0b148 <line:23:47, col:56> 'int'
|   |   |               `-BinaryOperator 0x1b16fd0b128 <col:48, col:55> 'int' '-'
|   |   |                 |-IntegerLiteral 0x1b16fd0b0b8 <col:48> 'int' 32
|   |   |                 `-ParenExpr 0x1b16fd0b108 <col:53, col:55> 'int'
|   |   |                   `-IntegerLiteral 0x1b16fd0b0e0 <line:37:60> 'int' 7
|   |   |-ParenExpr 0x1b16fd0de50 <line:33:32, line:37:64> 'u32':'unsigned int'
|   |   | `-BinaryOperator 0x1b16fd0de30 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   |-BinaryOperator 0x1b16fd0d898 <line:34:17, line:37:28> 'u32':'unsigned int' ','
|   |   |   | |-BinaryOperator 0x1b16fd0d730 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | |-BinaryOperator 0x1b16fd0d198 <line:34:17, line:36:28> 'u32':'unsigned int' ','
|   |   |   | | | |-BinaryOperator 0x1b16fd0d030 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | |-BinaryOperator 0x1b16fd0ba70 <line:34:17, line:35:28> 'u32':'unsigned int' ','
|   |   |   | | | | | |-BinaryOperator 0x1b16fd0b908 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |   |   | | | | | | |-CompoundAssignOperator 0x1b16fd0b360 <line:34:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | | | | |-ArraySubscriptExpr 0x1b16fd0b2a8 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | | | |-ImplicitCastExpr 0x1b16fd0b290 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | | | | `-DeclRefExpr 0x1b16fd0b248 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | | | `-IntegerLiteral 0x1b16fd0b268 <line:59:22> 'int' 2
|   |   |   | | | | | | | `-ImplicitCastExpr 0x1b16fd0b348 <line:34:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | | |   `-ArraySubscriptExpr 0x1b16fd0b328 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | | | |     |-ImplicitCastExpr 0x1b16fd0b310 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | | |     | `-DeclRefExpr 0x1b16fd0b2c8 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | | |     `-IntegerLiteral 0x1b16fd0b2e8 <line:59:25> 'int' 7
|   |   |   | | | | | | `-BinaryOperator 0x1b16fd0b8e8 <line:34:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | | | |   |-ArraySubscriptExpr 0x1b16fd0b3f0 <line:34:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |   | |-ImplicitCastExpr 0x1b16fd0b3d8 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |   | | `-DeclRefExpr 0x1b16fd0b390 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |   | `-IntegerLiteral 0x1b16fd0b3b0 <line:59:31> 'int' 13
|   |   |   | | | | | |   `-ParenExpr 0x1b16fd0b8c8 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | | | |     `-BinaryOperator 0x1b16fd0b8a8 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | | | |       |-ParenExpr 0x1b16fd0b608 <col:24, col:35> 'unsigned int'
|   |   |   | | | | | |       | `-BinaryOperator 0x1b16fd0b5e8 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | | | |       |   |-ParenExpr 0x1b16fd0b580 <col:25, col:27> 'unsigned int'
|   |   |   | | | | | |       |   | `-ParenExpr 0x1b16fd0b560 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |       |   |   `-BinaryOperator 0x1b16fd0b540 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |       |   |     |-ImplicitCastExpr 0x1b16fd0b510 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd0b470 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd0b458 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd0b410 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |     |   `-IntegerLiteral 0x1b16fd0b430 <line:59:31> 'int' 13
|   |   |   | | | | | |       |   |     `-ImplicitCastExpr 0x1b16fd0b528 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd0b4f0 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |       |   |         |-ImplicitCastExpr 0x1b16fd0b4d8 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |       |   |         | `-DeclRefExpr 0x1b16fd0b490 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |       |   |         `-IntegerLiteral 0x1b16fd0b4b0 <line:59:22> 'int' 2
|   |   |   | | | | | |       |   `-ParenExpr 0x1b16fd0b5c8 <line:23:32, col:34> 'int'
|   |   |   | | | | | |       |     `-IntegerLiteral 0x1b16fd0b5a0 <line:34:59> 'int' 16
|   |   |   | | | | | |       `-ParenExpr 0x1b16fd0b888 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | | | |         `-BinaryOperator 0x1b16fd0b868 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | | | |           |-ParenExpr 0x1b16fd0b798 <col:40, col:42> 'unsigned int'
|   |   |   | | | | | |           | `-ParenExpr 0x1b16fd0b778 <line:34:45, col:57> 'unsigned int'
|   |   |   | | | | | |           |   `-BinaryOperator 0x1b16fd0b758 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | | | |           |     |-ImplicitCastExpr 0x1b16fd0b728 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |     | `-ArraySubscriptExpr 0x1b16fd0b688 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |     |   |-ImplicitCastExpr 0x1b16fd0b670 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |     |   | `-DeclRefExpr 0x1b16fd0b628 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |     |   `-IntegerLiteral 0x1b16fd0b648 <line:59:31> 'int' 13
|   |   |   | | | | | |           |     `-ImplicitCastExpr 0x1b16fd0b740 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | | |           |       `-ArraySubscriptExpr 0x1b16fd0b708 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | | | |           |         |-ImplicitCastExpr 0x1b16fd0b6f0 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | | |           |         | `-DeclRefExpr 0x1b16fd0b6a8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | | |           |         `-IntegerLiteral 0x1b16fd0b6c8 <line:59:22> 'int' 2
|   |   |   | | | | | |           `-ParenExpr 0x1b16fd0b848 <line:23:47, col:56> 'int'
|   |   |   | | | | | |             `-BinaryOperator 0x1b16fd0b828 <col:48, col:55> 'int' '-'
|   |   |   | | | | | |               |-IntegerLiteral 0x1b16fd0b7b8 <col:48> 'int' 32
|   |   |   | | | | | |               `-ParenExpr 0x1b16fd0b808 <col:53, col:55> 'int'
|   |   |   | | | | | |                 `-IntegerLiteral 0x1b16fd0b7e0 <line:34:59> 'int' 16
|   |   |   | | | | | `-CompoundAssignOperator 0x1b16fd0ba40 <line:35:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | | | |   |-ArraySubscriptExpr 0x1b16fd0b988 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | | | |   | |-ImplicitCastExpr 0x1b16fd0b970 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |   | | `-DeclRefExpr 0x1b16fd0b928 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |   | `-IntegerLiteral 0x1b16fd0b948 <line:59:28> 'int' 8
|   |   |   | | | | |   `-ImplicitCastExpr 0x1b16fd0ba28 <line:35:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | | |     `-ArraySubscriptExpr 0x1b16fd0ba08 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | | | |       |-ImplicitCastExpr 0x1b16fd0b9f0 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | | |       | `-DeclRefExpr 0x1b16fd0b9a8 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | | |       `-IntegerLiteral 0x1b16fd0b9c8 <line:59:31> 'int' 13
|   |   |   | | | | `-BinaryOperator 0x1b16fd0d010 <line:35:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | | | |   |-ArraySubscriptExpr 0x1b16fd0baf0 <line:35:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | | | |   | |-ImplicitCastExpr 0x1b16fd0bad8 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |   | | `-DeclRefExpr 0x1b16fd0ba90 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |   | `-IntegerLiteral 0x1b16fd0bab0 <line:59:25> 'int' 7
|   |   |   | | | |   `-ParenExpr 0x1b16fd0bfc8 <line:23:23, col:58> 'unsigned int'
|   |   |   | | | |     `-BinaryOperator 0x1b16fd0bfa8 <col:24, col:57> 'unsigned int' '|'
|   |   |   | | | |       |-ParenExpr 0x1b16fd0bd08 <col:24, col:35> 'unsigned int'
|   |   |   | | | |       | `-BinaryOperator 0x1b16fd0bce8 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | | | |       |   |-ParenExpr 0x1b16fd0bc80 <col:25, col:27> 'unsigned int'
|   |   |   | | | |       |   | `-ParenExpr 0x1b16fd0bc60 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |       |   |   `-BinaryOperator 0x1b16fd0bc40 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |       |   |     |-ImplicitCastExpr 0x1b16fd0bc10 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd0bb70 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd0bb58 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd0bb10 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |     |   `-IntegerLiteral 0x1b16fd0bb30 <line:59:25> 'int' 7
|   |   |   | | | |       |   |     `-ImplicitCastExpr 0x1b16fd0bc28 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd0bbf0 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |       |   |         |-ImplicitCastExpr 0x1b16fd0bbd8 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |       |   |         | `-DeclRefExpr 0x1b16fd0bb90 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |       |   |         `-IntegerLiteral 0x1b16fd0bbb0 <line:59:28> 'int' 8
|   |   |   | | | |       |   `-ParenExpr 0x1b16fd0bcc8 <line:23:32, col:34> 'int'
|   |   |   | | | |       |     `-IntegerLiteral 0x1b16fd0bca0 <line:35:59> 'int' 12
|   |   |   | | | |       `-ParenExpr 0x1b16fd0bf88 <line:23:39, col:57> 'unsigned int'
|   |   |   | | | |         `-BinaryOperator 0x1b16fd0bf68 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | | | |           |-ParenExpr 0x1b16fd0be98 <col:40, col:42> 'unsigned int'
|   |   |   | | | |           | `-ParenExpr 0x1b16fd0be78 <line:35:45, col:57> 'unsigned int'
|   |   |   | | | |           |   `-BinaryOperator 0x1b16fd0be58 <col:46, col:56> 'unsigned int' '^'
|   |   |   | | | |           |     |-ImplicitCastExpr 0x1b16fd0be28 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |     | `-ArraySubscriptExpr 0x1b16fd0bd88 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |     |   |-ImplicitCastExpr 0x1b16fd0bd70 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |     |   | `-DeclRefExpr 0x1b16fd0bd28 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |     |   `-IntegerLiteral 0x1b16fd0bd48 <line:59:25> 'int' 7
|   |   |   | | | |           |     `-ImplicitCastExpr 0x1b16fd0be40 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | | |           |       `-ArraySubscriptExpr 0x1b16fd0be08 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | | | |           |         |-ImplicitCastExpr 0x1b16fd0bdf0 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | | |           |         | `-DeclRefExpr 0x1b16fd0bda8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | | |           |         `-IntegerLiteral 0x1b16fd0bdc8 <line:59:28> 'int' 8
|   |   |   | | | |           `-ParenExpr 0x1b16fd0bf48 <line:23:47, col:56> 'int'
|   |   |   | | | |             `-BinaryOperator 0x1b16fd0bf28 <col:48, col:55> 'int' '-'
|   |   |   | | | |               |-IntegerLiteral 0x1b16fd0beb8 <col:48> 'int' 32
|   |   |   | | | |               `-ParenExpr 0x1b16fd0bf08 <col:53, col:55> 'int'
|   |   |   | | | |                 `-IntegerLiteral 0x1b16fd0bee0 <line:35:59> 'int' 12
|   |   |   | | | `-CompoundAssignOperator 0x1b16fd0d168 <line:36:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   | | |   |-ArraySubscriptExpr 0x1b16fd0d0b0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   | | |   | |-ImplicitCastExpr 0x1b16fd0d098 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |   | | `-DeclRefExpr 0x1b16fd0d050 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |   | `-IntegerLiteral 0x1b16fd0d070 <line:59:22> 'int' 2
|   |   |   | | |   `-ImplicitCastExpr 0x1b16fd0d150 <line:36:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | | |     `-ArraySubscriptExpr 0x1b16fd0d130 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   | | |       |-ImplicitCastExpr 0x1b16fd0d118 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   | | |       | `-DeclRefExpr 0x1b16fd0d0d0 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | | |       `-IntegerLiteral 0x1b16fd0d0f0 <line:59:25> 'int' 7
|   |   |   | | `-BinaryOperator 0x1b16fd0d710 <line:36:31, line:23:58> 'u32':'unsigned int' '='
|   |   |   | |   |-ArraySubscriptExpr 0x1b16fd0d218 <line:36:31, col:34> 'u32':'unsigned int' lvalue
|   |   |   | |   | |-ImplicitCastExpr 0x1b16fd0d200 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |   | | `-DeclRefExpr 0x1b16fd0d1b8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |   | `-IntegerLiteral 0x1b16fd0d1d8 <line:59:31> 'int' 13
|   |   |   | |   `-ParenExpr 0x1b16fd0d6f0 <line:23:23, col:58> 'unsigned int'
|   |   |   | |     `-BinaryOperator 0x1b16fd0d6d0 <col:24, col:57> 'unsigned int' '|'
|   |   |   | |       |-ParenExpr 0x1b16fd0d430 <col:24, col:35> 'unsigned int'
|   |   |   | |       | `-BinaryOperator 0x1b16fd0d410 <col:25, col:34> 'unsigned int' '<<'
|   |   |   | |       |   |-ParenExpr 0x1b16fd0d3a8 <col:25, col:27> 'unsigned int'
|   |   |   | |       |   | `-ParenExpr 0x1b16fd0d388 <line:36:45, col:57> 'unsigned int'
|   |   |   | |       |   |   `-BinaryOperator 0x1b16fd0d368 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |       |   |     |-ImplicitCastExpr 0x1b16fd0d338 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |     | `-ArraySubscriptExpr 0x1b16fd0d298 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |     |   |-ImplicitCastExpr 0x1b16fd0d280 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |     |   | `-DeclRefExpr 0x1b16fd0d238 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |     |   `-IntegerLiteral 0x1b16fd0d258 <line:59:31> 'int' 13
|   |   |   | |       |   |     `-ImplicitCastExpr 0x1b16fd0d350 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |       |   |       `-ArraySubscriptExpr 0x1b16fd0d318 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |       |   |         |-ImplicitCastExpr 0x1b16fd0d300 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |       |   |         | `-DeclRefExpr 0x1b16fd0d2b8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |       |   |         `-IntegerLiteral 0x1b16fd0d2d8 <line:59:22> 'int' 2
|   |   |   | |       |   `-ParenExpr 0x1b16fd0d3f0 <line:23:32, col:34> 'int'
|   |   |   | |       |     `-IntegerLiteral 0x1b16fd0d3c8 <line:36:60> 'int' 8
|   |   |   | |       `-ParenExpr 0x1b16fd0d6b0 <line:23:39, col:57> 'unsigned int'
|   |   |   | |         `-BinaryOperator 0x1b16fd0d690 <col:40, col:56> 'unsigned int' '>>'
|   |   |   | |           |-ParenExpr 0x1b16fd0d5c0 <col:40, col:42> 'unsigned int'
|   |   |   | |           | `-ParenExpr 0x1b16fd0d5a0 <line:36:45, col:57> 'unsigned int'
|   |   |   | |           |   `-BinaryOperator 0x1b16fd0d580 <col:46, col:56> 'unsigned int' '^'
|   |   |   | |           |     |-ImplicitCastExpr 0x1b16fd0d550 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |     | `-ArraySubscriptExpr 0x1b16fd0d4b0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |   | |           |     |   |-ImplicitCastExpr 0x1b16fd0d498 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |     |   | `-DeclRefExpr 0x1b16fd0d450 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |     |   `-IntegerLiteral 0x1b16fd0d470 <line:59:31> 'int' 13
|   |   |   | |           |     `-ImplicitCastExpr 0x1b16fd0d568 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |   | |           |       `-ArraySubscriptExpr 0x1b16fd0d530 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |   | |           |         |-ImplicitCastExpr 0x1b16fd0d518 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |   | |           |         | `-DeclRefExpr 0x1b16fd0d4d0 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   | |           |         `-IntegerLiteral 0x1b16fd0d4f0 <line:59:22> 'int' 2
|   |   |   | |           `-ParenExpr 0x1b16fd0d670 <line:23:47, col:56> 'int'
|   |   |   | |             `-BinaryOperator 0x1b16fd0d650 <col:48, col:55> 'int' '-'
|   |   |   | |               |-IntegerLiteral 0x1b16fd0d5e0 <col:48> 'int' 32
|   |   |   | |               `-ParenExpr 0x1b16fd0d630 <col:53, col:55> 'int'
|   |   |   | |                 `-IntegerLiteral 0x1b16fd0d608 <line:36:60> 'int' 8
|   |   |   | `-CompoundAssignOperator 0x1b16fd0d868 <line:37:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |   |   |   |-ArraySubscriptExpr 0x1b16fd0d7b0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |   |   |   | |-ImplicitCastExpr 0x1b16fd0d798 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x1b16fd0d750 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |   | `-IntegerLiteral 0x1b16fd0d770 <line:59:28> 'int' 8
|   |   |   |   `-ImplicitCastExpr 0x1b16fd0d850 <line:37:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |   |   |     `-ArraySubscriptExpr 0x1b16fd0d830 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |   |   |       |-ImplicitCastExpr 0x1b16fd0d818 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |   |   |       | `-DeclRefExpr 0x1b16fd0d7d0 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |   |       `-IntegerLiteral 0x1b16fd0d7f0 <line:59:31> 'int' 13
|   |   |   `-BinaryOperator 0x1b16fd0de10 <line:37:31, line:23:58> 'u32':'unsigned int' '='
|   |   |     |-ArraySubscriptExpr 0x1b16fd0d918 <line:37:31, col:34> 'u32':'unsigned int' lvalue
|   |   |     | |-ImplicitCastExpr 0x1b16fd0d900 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |   |     | | `-DeclRefExpr 0x1b16fd0d8b8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |     | `-IntegerLiteral 0x1b16fd0d8d8 <line:59:25> 'int' 7
|   |   |     `-ParenExpr 0x1b16fd0ddf0 <line:23:23, col:58> 'unsigned int'
|   |   |       `-BinaryOperator 0x1b16fd0ddd0 <col:24, col:57> 'unsigned int' '|'
|   |   |         |-ParenExpr 0x1b16fd0db30 <col:24, col:35> 'unsigned int'
|   |   |         | `-BinaryOperator 0x1b16fd0db10 <col:25, col:34> 'unsigned int' '<<'
|   |   |         |   |-ParenExpr 0x1b16fd0daa8 <col:25, col:27> 'unsigned int'
|   |   |         |   | `-ParenExpr 0x1b16fd0da88 <line:37:45, col:57> 'unsigned int'
|   |   |         |   |   `-BinaryOperator 0x1b16fd0da68 <col:46, col:56> 'unsigned int' '^'
|   |   |         |   |     |-ImplicitCastExpr 0x1b16fd0da38 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |     | `-ArraySubscriptExpr 0x1b16fd0d998 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |         |   |     |   |-ImplicitCastExpr 0x1b16fd0d980 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |     |   | `-DeclRefExpr 0x1b16fd0d938 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |     |   `-IntegerLiteral 0x1b16fd0d958 <line:59:25> 'int' 7
|   |   |         |   |     `-ImplicitCastExpr 0x1b16fd0da50 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |         |   |       `-ArraySubscriptExpr 0x1b16fd0da18 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |         |   |         |-ImplicitCastExpr 0x1b16fd0da00 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |         |   |         | `-DeclRefExpr 0x1b16fd0d9b8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |         |   |         `-IntegerLiteral 0x1b16fd0d9d8 <line:59:28> 'int' 8
|   |   |         |   `-ParenExpr 0x1b16fd0daf0 <line:23:32, col:34> 'int'
|   |   |         |     `-IntegerLiteral 0x1b16fd0dac8 <line:37:60> 'int' 7
|   |   |         `-ParenExpr 0x1b16fd0ddb0 <line:23:39, col:57> 'unsigned int'
|   |   |           `-BinaryOperator 0x1b16fd0dd90 <col:40, col:56> 'unsigned int' '>>'
|   |   |             |-ParenExpr 0x1b16fd0dcc0 <col:40, col:42> 'unsigned int'
|   |   |             | `-ParenExpr 0x1b16fd0dca0 <line:37:45, col:57> 'unsigned int'
|   |   |             |   `-BinaryOperator 0x1b16fd0dc80 <col:46, col:56> 'unsigned int' '^'
|   |   |             |     |-ImplicitCastExpr 0x1b16fd0dc50 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |     | `-ArraySubscriptExpr 0x1b16fd0dbb0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |   |             |     |   |-ImplicitCastExpr 0x1b16fd0db98 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |   |             |     |   | `-DeclRefExpr 0x1b16fd0db50 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |     |   `-IntegerLiteral 0x1b16fd0db70 <line:59:25> 'int' 7
|   |   |             |     `-ImplicitCastExpr 0x1b16fd0dc68 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |   |             |       `-ArraySubscriptExpr 0x1b16fd0dc30 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |   |             |         |-ImplicitCastExpr 0x1b16fd0dc18 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |   |             |         | `-DeclRefExpr 0x1b16fd0dbd0 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |   |             |         `-IntegerLiteral 0x1b16fd0dbf0 <line:59:28> 'int' 8
|   |   |             `-ParenExpr 0x1b16fd0dd70 <line:23:47, col:56> 'int'
|   |   |               `-BinaryOperator 0x1b16fd0dd50 <col:48, col:55> 'int' '-'
|   |   |                 |-IntegerLiteral 0x1b16fd0dce0 <col:48> 'int' 32
|   |   |                 `-ParenExpr 0x1b16fd0dd30 <col:53, col:55> 'int'
|   |   |                   `-IntegerLiteral 0x1b16fd0dd08 <line:37:60> 'int' 7
|   |   `-ParenExpr 0x1b16fd0ea80 <line:33:32, line:37:64> 'u32':'unsigned int'
|   |     `-BinaryOperator 0x1b16fd0ea60 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |       |-BinaryOperator 0x1b16fd0e4c8 <line:34:17, line:37:28> 'u32':'unsigned int' ','
|   |       | |-BinaryOperator 0x1b16fd0e360 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |       | | |-BinaryOperator 0x1b16fd11de8 <line:34:17, line:36:28> 'u32':'unsigned int' ','
|   |       | | | |-BinaryOperator 0x1b16fd11c80 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |       | | | | |-BinaryOperator 0x1b16fd116e8 <line:34:17, line:35:28> 'u32':'unsigned int' ','
|   |       | | | | | |-BinaryOperator 0x1b16fd11580 <line:34:17, line:23:58> 'u32':'unsigned int' ','
|   |       | | | | | | |-CompoundAssignOperator 0x1b16fd0df88 <line:34:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |       | | | | | | | |-ArraySubscriptExpr 0x1b16fd0ded0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |       | | | | | | | | |-ImplicitCastExpr 0x1b16fd0deb8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |       | | | | | | | | | `-DeclRefExpr 0x1b16fd0de70 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | | | | | | `-IntegerLiteral 0x1b16fd0de90 <line:60:22> 'int' 3
|   |       | | | | | | | `-ImplicitCastExpr 0x1b16fd0df70 <line:34:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |       | | | | | | |   `-ArraySubscriptExpr 0x1b16fd0df50 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |       | | | | | | |     |-ImplicitCastExpr 0x1b16fd0df38 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |       | | | | | | |     | `-DeclRefExpr 0x1b16fd0def0 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | | | | |     `-IntegerLiteral 0x1b16fd0df10 <line:60:25> 'int' 4
|   |       | | | | | | `-BinaryOperator 0x1b16fd11560 <line:34:31, line:23:58> 'u32':'unsigned int' '='
|   |       | | | | | |   |-ArraySubscriptExpr 0x1b16fd11068 <line:34:31, col:34> 'u32':'unsigned int' lvalue
|   |       | | | | | |   | |-ImplicitCastExpr 0x1b16fd11050 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |       | | | | | |   | | `-DeclRefExpr 0x1b16fd0dfb8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | | | |   | `-IntegerLiteral 0x1b16fd0dfd8 <line:60:31> 'int' 14
|   |       | | | | | |   `-ParenExpr 0x1b16fd11540 <line:23:23, col:58> 'unsigned int'
|   |       | | | | | |     `-BinaryOperator 0x1b16fd11520 <col:24, col:57> 'unsigned int' '|'
|   |       | | | | | |       |-ParenExpr 0x1b16fd11280 <col:24, col:35> 'unsigned int'
|   |       | | | | | |       | `-BinaryOperator 0x1b16fd11260 <col:25, col:34> 'unsigned int' '<<'
|   |       | | | | | |       |   |-ParenExpr 0x1b16fd111f8 <col:25, col:27> 'unsigned int'
|   |       | | | | | |       |   | `-ParenExpr 0x1b16fd111d8 <line:34:45, col:57> 'unsigned int'
|   |       | | | | | |       |   |   `-BinaryOperator 0x1b16fd111b8 <col:46, col:56> 'unsigned int' '^'
|   |       | | | | | |       |   |     |-ImplicitCastExpr 0x1b16fd11188 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |       | | | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd110e8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |       | | | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd110d0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |       | | | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd11088 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | | | |       |   |     |   `-IntegerLiteral 0x1b16fd110a8 <line:60:31> 'int' 14
|   |       | | | | | |       |   |     `-ImplicitCastExpr 0x1b16fd111a0 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |       | | | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd11168 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |       | | | | | |       |   |         |-ImplicitCastExpr 0x1b16fd11150 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |       | | | | | |       |   |         | `-DeclRefExpr 0x1b16fd11108 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | | | |       |   |         `-IntegerLiteral 0x1b16fd11128 <line:60:22> 'int' 3
|   |       | | | | | |       |   `-ParenExpr 0x1b16fd11240 <line:23:32, col:34> 'int'
|   |       | | | | | |       |     `-IntegerLiteral 0x1b16fd11218 <line:34:59> 'int' 16
|   |       | | | | | |       `-ParenExpr 0x1b16fd11500 <line:23:39, col:57> 'unsigned int'
|   |       | | | | | |         `-BinaryOperator 0x1b16fd114e0 <col:40, col:56> 'unsigned int' '>>'
|   |       | | | | | |           |-ParenExpr 0x1b16fd11410 <col:40, col:42> 'unsigned int'
|   |       | | | | | |           | `-ParenExpr 0x1b16fd113f0 <line:34:45, col:57> 'unsigned int'
|   |       | | | | | |           |   `-BinaryOperator 0x1b16fd113d0 <col:46, col:56> 'unsigned int' '^'
|   |       | | | | | |           |     |-ImplicitCastExpr 0x1b16fd113a0 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |       | | | | | |           |     | `-ArraySubscriptExpr 0x1b16fd11300 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |       | | | | | |           |     |   |-ImplicitCastExpr 0x1b16fd112e8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |       | | | | | |           |     |   | `-DeclRefExpr 0x1b16fd112a0 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | | | |           |     |   `-IntegerLiteral 0x1b16fd112c0 <line:60:31> 'int' 14
|   |       | | | | | |           |     `-ImplicitCastExpr 0x1b16fd113b8 <line:34:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |       | | | | | |           |       `-ArraySubscriptExpr 0x1b16fd11380 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |       | | | | | |           |         |-ImplicitCastExpr 0x1b16fd11368 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |       | | | | | |           |         | `-DeclRefExpr 0x1b16fd11320 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | | | |           |         `-IntegerLiteral 0x1b16fd11340 <line:60:22> 'int' 3
|   |       | | | | | |           `-ParenExpr 0x1b16fd114c0 <line:23:47, col:56> 'int'
|   |       | | | | | |             `-BinaryOperator 0x1b16fd114a0 <col:48, col:55> 'int' '-'
|   |       | | | | | |               |-IntegerLiteral 0x1b16fd11430 <col:48> 'int' 32
|   |       | | | | | |               `-ParenExpr 0x1b16fd11480 <col:53, col:55> 'int'
|   |       | | | | | |                 `-IntegerLiteral 0x1b16fd11458 <line:34:59> 'int' 16
|   |       | | | | | `-CompoundAssignOperator 0x1b16fd116b8 <line:35:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |       | | | | |   |-ArraySubscriptExpr 0x1b16fd11600 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |       | | | | |   | |-ImplicitCastExpr 0x1b16fd115e8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |       | | | | |   | | `-DeclRefExpr 0x1b16fd115a0 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | | |   | `-IntegerLiteral 0x1b16fd115c0 <line:60:28> 'int' 9
|   |       | | | | |   `-ImplicitCastExpr 0x1b16fd116a0 <line:35:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |       | | | | |     `-ArraySubscriptExpr 0x1b16fd11680 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |       | | | | |       |-ImplicitCastExpr 0x1b16fd11668 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |       | | | | |       | `-DeclRefExpr 0x1b16fd11620 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | | |       `-IntegerLiteral 0x1b16fd11640 <line:60:31> 'int' 14
|   |       | | | | `-BinaryOperator 0x1b16fd11c60 <line:35:31, line:23:58> 'u32':'unsigned int' '='
|   |       | | | |   |-ArraySubscriptExpr 0x1b16fd11768 <line:35:31, col:34> 'u32':'unsigned int' lvalue
|   |       | | | |   | |-ImplicitCastExpr 0x1b16fd11750 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |       | | | |   | | `-DeclRefExpr 0x1b16fd11708 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | |   | `-IntegerLiteral 0x1b16fd11728 <line:60:25> 'int' 4
|   |       | | | |   `-ParenExpr 0x1b16fd11c40 <line:23:23, col:58> 'unsigned int'
|   |       | | | |     `-BinaryOperator 0x1b16fd11c20 <col:24, col:57> 'unsigned int' '|'
|   |       | | | |       |-ParenExpr 0x1b16fd11980 <col:24, col:35> 'unsigned int'
|   |       | | | |       | `-BinaryOperator 0x1b16fd11960 <col:25, col:34> 'unsigned int' '<<'
|   |       | | | |       |   |-ParenExpr 0x1b16fd118f8 <col:25, col:27> 'unsigned int'
|   |       | | | |       |   | `-ParenExpr 0x1b16fd118d8 <line:35:45, col:57> 'unsigned int'
|   |       | | | |       |   |   `-BinaryOperator 0x1b16fd118b8 <col:46, col:56> 'unsigned int' '^'
|   |       | | | |       |   |     |-ImplicitCastExpr 0x1b16fd11888 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |       | | | |       |   |     | `-ArraySubscriptExpr 0x1b16fd117e8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |       | | | |       |   |     |   |-ImplicitCastExpr 0x1b16fd117d0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |       | | | |       |   |     |   | `-DeclRefExpr 0x1b16fd11788 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | |       |   |     |   `-IntegerLiteral 0x1b16fd117a8 <line:60:25> 'int' 4
|   |       | | | |       |   |     `-ImplicitCastExpr 0x1b16fd118a0 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |       | | | |       |   |       `-ArraySubscriptExpr 0x1b16fd11868 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |       | | | |       |   |         |-ImplicitCastExpr 0x1b16fd11850 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |       | | | |       |   |         | `-DeclRefExpr 0x1b16fd11808 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | |       |   |         `-IntegerLiteral 0x1b16fd11828 <line:60:28> 'int' 9
|   |       | | | |       |   `-ParenExpr 0x1b16fd11940 <line:23:32, col:34> 'int'
|   |       | | | |       |     `-IntegerLiteral 0x1b16fd11918 <line:35:59> 'int' 12
|   |       | | | |       `-ParenExpr 0x1b16fd11c00 <line:23:39, col:57> 'unsigned int'
|   |       | | | |         `-BinaryOperator 0x1b16fd11be0 <col:40, col:56> 'unsigned int' '>>'
|   |       | | | |           |-ParenExpr 0x1b16fd11b10 <col:40, col:42> 'unsigned int'
|   |       | | | |           | `-ParenExpr 0x1b16fd11af0 <line:35:45, col:57> 'unsigned int'
|   |       | | | |           |   `-BinaryOperator 0x1b16fd11ad0 <col:46, col:56> 'unsigned int' '^'
|   |       | | | |           |     |-ImplicitCastExpr 0x1b16fd11aa0 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |       | | | |           |     | `-ArraySubscriptExpr 0x1b16fd11a00 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |       | | | |           |     |   |-ImplicitCastExpr 0x1b16fd119e8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |       | | | |           |     |   | `-DeclRefExpr 0x1b16fd119a0 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | |           |     |   `-IntegerLiteral 0x1b16fd119c0 <line:60:25> 'int' 4
|   |       | | | |           |     `-ImplicitCastExpr 0x1b16fd11ab8 <line:35:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |       | | | |           |       `-ArraySubscriptExpr 0x1b16fd11a80 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |       | | | |           |         |-ImplicitCastExpr 0x1b16fd11a68 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |       | | | |           |         | `-DeclRefExpr 0x1b16fd11a20 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | | |           |         `-IntegerLiteral 0x1b16fd11a40 <line:60:28> 'int' 9
|   |       | | | |           `-ParenExpr 0x1b16fd11bc0 <line:23:47, col:56> 'int'
|   |       | | | |             `-BinaryOperator 0x1b16fd11ba0 <col:48, col:55> 'int' '-'
|   |       | | | |               |-IntegerLiteral 0x1b16fd11b30 <col:48> 'int' 32
|   |       | | | |               `-ParenExpr 0x1b16fd11b80 <col:53, col:55> 'int'
|   |       | | | |                 `-IntegerLiteral 0x1b16fd11b58 <line:35:59> 'int' 12
|   |       | | | `-CompoundAssignOperator 0x1b16fd11db8 <line:36:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |       | | |   |-ArraySubscriptExpr 0x1b16fd11d00 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |       | | |   | |-ImplicitCastExpr 0x1b16fd11ce8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |       | | |   | | `-DeclRefExpr 0x1b16fd11ca0 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | |   | `-IntegerLiteral 0x1b16fd11cc0 <line:60:22> 'int' 3
|   |       | | |   `-ImplicitCastExpr 0x1b16fd11da0 <line:36:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |       | | |     `-ArraySubscriptExpr 0x1b16fd11d80 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |       | | |       |-ImplicitCastExpr 0x1b16fd11d68 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |       | | |       | `-DeclRefExpr 0x1b16fd11d20 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | | |       `-IntegerLiteral 0x1b16fd11d40 <line:60:25> 'int' 4
|   |       | | `-BinaryOperator 0x1b16fd0e340 <line:36:31, line:23:58> 'u32':'unsigned int' '='
|   |       | |   |-ArraySubscriptExpr 0x1b16fd11e68 <line:36:31, col:34> 'u32':'unsigned int' lvalue
|   |       | |   | |-ImplicitCastExpr 0x1b16fd11e50 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |       | |   | | `-DeclRefExpr 0x1b16fd11e08 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | |   | `-IntegerLiteral 0x1b16fd11e28 <line:60:31> 'int' 14
|   |       | |   `-ParenExpr 0x1b16fd0e320 <line:23:23, col:58> 'unsigned int'
|   |       | |     `-BinaryOperator 0x1b16fd0e300 <col:24, col:57> 'unsigned int' '|'
|   |       | |       |-ParenExpr 0x1b16fd0e060 <col:24, col:35> 'unsigned int'
|   |       | |       | `-BinaryOperator 0x1b16fd0e040 <col:25, col:34> 'unsigned int' '<<'
|   |       | |       |   |-ParenExpr 0x1b16fd11ff8 <col:25, col:27> 'unsigned int'
|   |       | |       |   | `-ParenExpr 0x1b16fd11fd8 <line:36:45, col:57> 'unsigned int'
|   |       | |       |   |   `-BinaryOperator 0x1b16fd11fb8 <col:46, col:56> 'unsigned int' '^'
|   |       | |       |   |     |-ImplicitCastExpr 0x1b16fd11f88 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |       | |       |   |     | `-ArraySubscriptExpr 0x1b16fd11ee8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |       | |       |   |     |   |-ImplicitCastExpr 0x1b16fd11ed0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |       | |       |   |     |   | `-DeclRefExpr 0x1b16fd11e88 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | |       |   |     |   `-IntegerLiteral 0x1b16fd11ea8 <line:60:31> 'int' 14
|   |       | |       |   |     `-ImplicitCastExpr 0x1b16fd11fa0 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |       | |       |   |       `-ArraySubscriptExpr 0x1b16fd11f68 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |       | |       |   |         |-ImplicitCastExpr 0x1b16fd11f50 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |       | |       |   |         | `-DeclRefExpr 0x1b16fd11f08 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | |       |   |         `-IntegerLiteral 0x1b16fd11f28 <line:60:22> 'int' 3
|   |       | |       |   `-ParenExpr 0x1b16fd0e020 <line:23:32, col:34> 'int'
|   |       | |       |     `-IntegerLiteral 0x1b16fd12018 <line:36:60> 'int' 8
|   |       | |       `-ParenExpr 0x1b16fd0e2e0 <line:23:39, col:57> 'unsigned int'
|   |       | |         `-BinaryOperator 0x1b16fd0e2c0 <col:40, col:56> 'unsigned int' '>>'
|   |       | |           |-ParenExpr 0x1b16fd0e1f0 <col:40, col:42> 'unsigned int'
|   |       | |           | `-ParenExpr 0x1b16fd0e1d0 <line:36:45, col:57> 'unsigned int'
|   |       | |           |   `-BinaryOperator 0x1b16fd0e1b0 <col:46, col:56> 'unsigned int' '^'
|   |       | |           |     |-ImplicitCastExpr 0x1b16fd0e180 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |       | |           |     | `-ArraySubscriptExpr 0x1b16fd0e0e0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |       | |           |     |   |-ImplicitCastExpr 0x1b16fd0e0c8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |       | |           |     |   | `-DeclRefExpr 0x1b16fd0e080 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | |           |     |   `-IntegerLiteral 0x1b16fd0e0a0 <line:60:31> 'int' 14
|   |       | |           |     `-ImplicitCastExpr 0x1b16fd0e198 <line:36:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |       | |           |       `-ArraySubscriptExpr 0x1b16fd0e160 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |       | |           |         |-ImplicitCastExpr 0x1b16fd0e148 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |       | |           |         | `-DeclRefExpr 0x1b16fd0e100 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       | |           |         `-IntegerLiteral 0x1b16fd0e120 <line:60:22> 'int' 3
|   |       | |           `-ParenExpr 0x1b16fd0e2a0 <line:23:47, col:56> 'int'
|   |       | |             `-BinaryOperator 0x1b16fd0e280 <col:48, col:55> 'int' '-'
|   |       | |               |-IntegerLiteral 0x1b16fd0e210 <col:48> 'int' 32
|   |       | |               `-ParenExpr 0x1b16fd0e260 <col:53, col:55> 'int'
|   |       | |                 `-IntegerLiteral 0x1b16fd0e238 <line:36:60> 'int' 8
|   |       | `-CompoundAssignOperator 0x1b16fd0e498 <line:37:17, col:28> 'u32':'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'
|   |       |   |-ArraySubscriptExpr 0x1b16fd0e3e0 <col:17, col:20> 'u32':'unsigned int' lvalue
|   |       |   | |-ImplicitCastExpr 0x1b16fd0e3c8 <col:17> 'u32 *' <ArrayToPointerDecay>
|   |       |   | | `-DeclRefExpr 0x1b16fd0e380 <col:17> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       |   | `-IntegerLiteral 0x1b16fd0e3a0 <line:60:28> 'int' 9
|   |       |   `-ImplicitCastExpr 0x1b16fd0e480 <line:37:25, col:28> 'u32':'unsigned int' <LValueToRValue>
|   |       |     `-ArraySubscriptExpr 0x1b16fd0e460 <col:25, col:28> 'u32':'unsigned int' lvalue
|   |       |       |-ImplicitCastExpr 0x1b16fd0e448 <col:25> 'u32 *' <ArrayToPointerDecay>
|   |       |       | `-DeclRefExpr 0x1b16fd0e400 <col:25> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |       |       `-IntegerLiteral 0x1b16fd0e420 <line:60:31> 'int' 14
|   |       `-BinaryOperator 0x1b16fd0ea40 <line:37:31, line:23:58> 'u32':'unsigned int' '='
|   |         |-ArraySubscriptExpr 0x1b16fd0e548 <line:37:31, col:34> 'u32':'unsigned int' lvalue
|   |         | |-ImplicitCastExpr 0x1b16fd0e530 <col:31> 'u32 *' <ArrayToPointerDecay>
|   |         | | `-DeclRefExpr 0x1b16fd0e4e8 <col:31> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |         | `-IntegerLiteral 0x1b16fd0e508 <line:60:25> 'int' 4
|   |         `-ParenExpr 0x1b16fd0ea20 <line:23:23, col:58> 'unsigned int'
|   |           `-BinaryOperator 0x1b16fd0ea00 <col:24, col:57> 'unsigned int' '|'
|   |             |-ParenExpr 0x1b16fd0e760 <col:24, col:35> 'unsigned int'
|   |             | `-BinaryOperator 0x1b16fd0e740 <col:25, col:34> 'unsigned int' '<<'
|   |             |   |-ParenExpr 0x1b16fd0e6d8 <col:25, col:27> 'unsigned int'
|   |             |   | `-ParenExpr 0x1b16fd0e6b8 <line:37:45, col:57> 'unsigned int'
|   |             |   |   `-BinaryOperator 0x1b16fd0e698 <col:46, col:56> 'unsigned int' '^'
|   |             |   |     |-ImplicitCastExpr 0x1b16fd0e668 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |             |   |     | `-ArraySubscriptExpr 0x1b16fd0e5c8 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |             |   |     |   |-ImplicitCastExpr 0x1b16fd0e5b0 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |             |   |     |   | `-DeclRefExpr 0x1b16fd0e568 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |             |   |     |   `-IntegerLiteral 0x1b16fd0e588 <line:60:25> 'int' 4
|   |             |   |     `-ImplicitCastExpr 0x1b16fd0e680 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |             |   |       `-ArraySubscriptExpr 0x1b16fd0e648 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |             |   |         |-ImplicitCastExpr 0x1b16fd0e630 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |             |   |         | `-DeclRefExpr 0x1b16fd0e5e8 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |             |   |         `-IntegerLiteral 0x1b16fd0e608 <line:60:28> 'int' 9
|   |             |   `-ParenExpr 0x1b16fd0e720 <line:23:32, col:34> 'int'
|   |             |     `-IntegerLiteral 0x1b16fd0e6f8 <line:37:60> 'int' 7
|   |             `-ParenExpr 0x1b16fd0e9e0 <line:23:39, col:57> 'unsigned int'
|   |               `-BinaryOperator 0x1b16fd0e9c0 <col:40, col:56> 'unsigned int' '>>'
|   |                 |-ParenExpr 0x1b16fd0e8f0 <col:40, col:42> 'unsigned int'
|   |                 | `-ParenExpr 0x1b16fd0e8d0 <line:37:45, col:57> 'unsigned int'
|   |                 |   `-BinaryOperator 0x1b16fd0e8b0 <col:46, col:56> 'unsigned int' '^'
|   |                 |     |-ImplicitCastExpr 0x1b16fd0e880 <col:46, col:49> 'u32':'unsigned int' <LValueToRValue>
|   |                 |     | `-ArraySubscriptExpr 0x1b16fd0e7e0 <col:46, col:49> 'u32':'unsigned int' lvalue
|   |                 |     |   |-ImplicitCastExpr 0x1b16fd0e7c8 <col:46> 'u32 *' <ArrayToPointerDecay>
|   |                 |     |   | `-DeclRefExpr 0x1b16fd0e780 <col:46> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |                 |     |   `-IntegerLiteral 0x1b16fd0e7a0 <line:60:25> 'int' 4
|   |                 |     `-ImplicitCastExpr 0x1b16fd0e898 <line:37:53, col:56> 'u32':'unsigned int' <LValueToRValue>
|   |                 |       `-ArraySubscriptExpr 0x1b16fd0e860 <col:53, col:56> 'u32':'unsigned int' lvalue
|   |                 |         |-ImplicitCastExpr 0x1b16fd0e848 <col:53> 'u32 *' <ArrayToPointerDecay>
|   |                 |         | `-DeclRefExpr 0x1b16fd0e800 <col:53> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|   |                 |         `-IntegerLiteral 0x1b16fd0e820 <line:60:28> 'int' 9
|   |                 `-ParenExpr 0x1b16fd0e9a0 <line:23:47, col:56> 'int'
|   |                   `-BinaryOperator 0x1b16fd0e980 <col:48, col:55> 'int' '-'
|   |                     |-IntegerLiteral 0x1b16fd0e910 <col:48> 'int' 32
|   |                     `-ParenExpr 0x1b16fd0e960 <col:53, col:55> 'int'
|   |                       `-IntegerLiteral 0x1b16fd0e938 <line:37:60> 'int' 7
|   `-IfStmt 0x1b16fd13218 <line:63:5, line:69:5> has_else
|     |-ImplicitCastExpr 0x1b16fd0eb90 <line:63:9, col:19> 'char' <LValueToRValue>
|     | `-MemberExpr 0x1b16fd0eb60 <col:9, col:19> 'const char' lvalue .little 0x1b16fd5d4f0
|     |   `-DeclRefExpr 0x1b16fd0eb28 <col:9> 'const union (anonymous union at .//openssl//file_jk/after\crypto\chacha\chacha_enc.c:45:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\chacha\chacha_enc.c:45:11)' lvalue Var 0x1b16fd5d5a8 'is_endian' 'const union (anonymous union at .//openssl//file_jk/after\crypto\chacha\chacha_enc.c:45:11)':'const union (anonymous at .//openssl//file_jk/after\crypto\chacha\chacha_enc.c:45:11)'
|     |-CompoundStmt 0x1b16fd0ef68 <col:27, line:66:5>
|     | `-ForStmt 0x1b16fd0ef30 <line:64:9, line:65:42>
|     |   |-BinaryOperator 0x1b16fd0ebf0 <line:64:14, col:18> 'int' '='
|     |   | |-DeclRefExpr 0x1b16fd0eba8 <col:14> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|     |   | `-IntegerLiteral 0x1b16fd0ebc8 <col:18> 'int' 0
|     |   |-<<<NULL>>>
|     |   |-BinaryOperator 0x1b16fd0ec70 <col:21, col:25> 'int' '<'
|     |   | |-ImplicitCastExpr 0x1b16fd0ec58 <col:21> 'int' <LValueToRValue>
|     |   | | `-DeclRefExpr 0x1b16fd0ec10 <col:21> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|     |   | `-IntegerLiteral 0x1b16fd0ec30 <col:25> 'int' 16
|     |   |-UnaryOperator 0x1b16fd0ecb0 <col:29, col:31> 'int' prefix '++'
|     |   | `-DeclRefExpr 0x1b16fd0ec90 <col:31> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|     |   `-BinaryOperator 0x1b16fd0ef10 <line:65:13, col:42> 'u32':'unsigned int' '='
|     |     |-ArraySubscriptExpr 0x1b16fd0ed80 <col:13, col:24> 'u32':'unsigned int' lvalue
|     |     | |-ImplicitCastExpr 0x1b16fd0ed50 <col:13, col:21> 'u32 *' <ArrayToPointerDecay>
|     |     | | `-MemberExpr 0x1b16fd0ed00 <col:13, col:21> 'u32 [16]' lvalue ->u 0x1b16fd5ab68
|     |     | |   `-ImplicitCastExpr 0x1b16fd0ece8 <col:13> 'chacha_buf *' <LValueToRValue>
|     |     | |     `-DeclRefExpr 0x1b16fd0ecc8 <col:13> 'chacha_buf *' lvalue ParmVar 0x1b16fd5ae68 'output' 'chacha_buf *'
|     |     | `-ImplicitCastExpr 0x1b16fd0ed68 <col:23> 'int' <LValueToRValue>
|     |     |   `-DeclRefExpr 0x1b16fd0ed30 <col:23> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|     |     `-BinaryOperator 0x1b16fd0eef0 <col:28, col:42> 'unsigned int' '+'
|     |       |-ImplicitCastExpr 0x1b16fd0eec0 <col:28, col:31> 'u32':'unsigned int' <LValueToRValue>
|     |       | `-ArraySubscriptExpr 0x1b16fd0ee10 <col:28, col:31> 'u32':'unsigned int' lvalue
|     |       |   |-ImplicitCastExpr 0x1b16fd0ede0 <col:28> 'u32 *' <ArrayToPointerDecay>
|     |       |   | `-DeclRefExpr 0x1b16fd0eda0 <col:28> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|     |       |   `-ImplicitCastExpr 0x1b16fd0edf8 <col:30> 'int' <LValueToRValue>
|     |       |     `-DeclRefExpr 0x1b16fd0edc0 <col:30> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|     |       `-ImplicitCastExpr 0x1b16fd0eed8 <col:35, col:42> 'u32':'unsigned int' <LValueToRValue>
|     |         `-ArraySubscriptExpr 0x1b16fd0eea0 <col:35, col:42> 'const u32':'const unsigned int' lvalue
|     |           |-ImplicitCastExpr 0x1b16fd0ee70 <col:35> 'const u32 *':'const u32 *' <LValueToRValue>
|     |           | `-DeclRefExpr 0x1b16fd0ee30 <col:35> 'const u32 *':'const u32 *' lvalue ParmVar 0x1b16fd5b000 'input' 'const u32 *':'const u32 *'
|     |           `-ImplicitCastExpr 0x1b16fd0ee88 <col:41> 'int' <LValueToRValue>
|     |             `-DeclRefExpr 0x1b16fd0ee50 <col:41> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|     `-CompoundStmt 0x1b16fd13200 <line:66:12, line:69:5>
|       `-ForStmt 0x1b16fd131c8 <line:67:9, line:30:42>
|         |-BinaryOperator 0x1b16fd0efc8 <line:67:14, col:18> 'int' '='
|         | |-DeclRefExpr 0x1b16fd0ef80 <col:14> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|         | `-IntegerLiteral 0x1b16fd0efa0 <col:18> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x1b16fd120a0 <col:21, col:25> 'int' '<'
|         | |-ImplicitCastExpr 0x1b16fd12088 <col:21> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x1b16fd0efe8 <col:21> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|         | `-IntegerLiteral 0x1b16fd12060 <col:25> 'int' 16
|         |-UnaryOperator 0x1b16fd120e0 <col:29, col:31> 'int' prefix '++'
|         | `-DeclRefExpr 0x1b16fd120c0 <col:31> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|         `-DoStmt 0x1b16fd131a8 <line:25:30, line:30:42>
|           |-CompoundStmt 0x1b16fd13150 <line:25:33, line:30:33>
|           | |-BinaryOperator 0x1b16fd12528 <line:26:33, col:54> 'u8':'unsigned char' '='
|           | | |-ArraySubscriptExpr 0x1b16fd122b8 <col:33, col:38> 'u8':'unsigned char' lvalue
|           | | | |-ParenExpr 0x1b16fd12270 <col:33, col:35> 'u8 *'
|           | | | | `-BinaryOperator 0x1b16fd12250 <line:68:27, col:43> 'u8 *' '+'
|           | | | |   |-ImplicitCastExpr 0x1b16fd12238 <col:27, col:35> 'u8 *' <ArrayToPointerDecay>
|           | | | |   | `-MemberExpr 0x1b16fd12130 <col:27, col:35> 'u8 [64]' lvalue ->c 0x1b16fd5acb8
|           | | | |   |   `-ImplicitCastExpr 0x1b16fd12118 <col:27> 'chacha_buf *' <LValueToRValue>
|           | | | |   |     `-DeclRefExpr 0x1b16fd120f8 <col:27> 'chacha_buf *' lvalue ParmVar 0x1b16fd5ae68 'output' 'chacha_buf *'
|           | | | |   `-BinaryOperator 0x1b16fd121c0 <col:39, col:43> 'int' '*'
|           | | | |     |-IntegerLiteral 0x1b16fd12160 <col:39> 'int' 4
|           | | | |     `-ImplicitCastExpr 0x1b16fd121a8 <col:43> 'int' <LValueToRValue>
|           | | | |       `-DeclRefExpr 0x1b16fd12188 <col:43> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           | | | `-IntegerLiteral 0x1b16fd12290 <line:26:37> 'int' 0
|           | | `-CStyleCastExpr 0x1b16fd12500 <col:42, col:54> 'u8':'unsigned char' <IntegralCast>
|           | |   `-ParenExpr 0x1b16fd124e0 <col:46, col:54> 'unsigned int'
|           | |     `-BinaryOperator 0x1b16fd12490 <line:68:46, line:26:53> 'unsigned int' '>>'
|           | |       |-ParenExpr 0x1b16fd12448 <line:68:46, col:62> 'unsigned int'
|           | |       | `-BinaryOperator 0x1b16fd12428 <col:47, col:61> 'unsigned int' '+'
|           | |       |   |-ImplicitCastExpr 0x1b16fd123f8 <col:47, col:50> 'u32':'unsigned int' <LValueToRValue>
|           | |       |   | `-ArraySubscriptExpr 0x1b16fd12348 <col:47, col:50> 'u32':'unsigned int' lvalue
|           | |       |   |   |-ImplicitCastExpr 0x1b16fd12318 <col:47> 'u32 *' <ArrayToPointerDecay>
|           | |       |   |   | `-DeclRefExpr 0x1b16fd122d8 <col:47> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|           | |       |   |   `-ImplicitCastExpr 0x1b16fd12330 <col:49> 'int' <LValueToRValue>
|           | |       |   |     `-DeclRefExpr 0x1b16fd122f8 <col:49> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           | |       |   `-ImplicitCastExpr 0x1b16fd12410 <col:54, col:61> 'u32':'unsigned int' <LValueToRValue>
|           | |       |     `-ArraySubscriptExpr 0x1b16fd123d8 <col:54, col:61> 'const u32':'const unsigned int' lvalue
|           | |       |       |-ImplicitCastExpr 0x1b16fd123a8 <col:54> 'const u32 *':'const u32 *' <LValueToRValue>
|           | |       |       | `-DeclRefExpr 0x1b16fd12368 <col:54> 'const u32 *':'const u32 *' lvalue ParmVar 0x1b16fd5b000 'input' 'const u32 *':'const u32 *'
|           | |       |       `-ImplicitCastExpr 0x1b16fd123c0 <col:60> 'int' <LValueToRValue>
|           | |       |         `-DeclRefExpr 0x1b16fd12388 <col:60> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           | |       `-IntegerLiteral 0x1b16fd12468 <line:26:53> 'int' 0
|           | |-BinaryOperator 0x1b16fd12920 <line:27:33, col:54> 'u8':'unsigned char' '='
|           | | |-ArraySubscriptExpr 0x1b16fd126b0 <col:33, col:38> 'u8':'unsigned char' lvalue
|           | | | |-ParenExpr 0x1b16fd12668 <col:33, col:35> 'u8 *'
|           | | | | `-BinaryOperator 0x1b16fd12648 <line:68:27, col:43> 'u8 *' '+'
|           | | | |   |-ImplicitCastExpr 0x1b16fd12630 <col:27, col:35> 'u8 *' <ArrayToPointerDecay>
|           | | | |   | `-MemberExpr 0x1b16fd12580 <col:27, col:35> 'u8 [64]' lvalue ->c 0x1b16fd5acb8
|           | | | |   |   `-ImplicitCastExpr 0x1b16fd12568 <col:27> 'chacha_buf *' <LValueToRValue>
|           | | | |   |     `-DeclRefExpr 0x1b16fd12548 <col:27> 'chacha_buf *' lvalue ParmVar 0x1b16fd5ae68 'output' 'chacha_buf *'
|           | | | |   `-BinaryOperator 0x1b16fd12610 <col:39, col:43> 'int' '*'
|           | | | |     |-IntegerLiteral 0x1b16fd125b0 <col:39> 'int' 4
|           | | | |     `-ImplicitCastExpr 0x1b16fd125f8 <col:43> 'int' <LValueToRValue>
|           | | | |       `-DeclRefExpr 0x1b16fd125d8 <col:43> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           | | | `-IntegerLiteral 0x1b16fd12688 <line:27:37> 'int' 1
|           | | `-CStyleCastExpr 0x1b16fd128f8 <col:42, col:54> 'u8':'unsigned char' <IntegralCast>
|           | |   `-ParenExpr 0x1b16fd128d8 <col:46, col:54> 'unsigned int'
|           | |     `-BinaryOperator 0x1b16fd12888 <line:68:46, line:27:53> 'unsigned int' '>>'
|           | |       |-ParenExpr 0x1b16fd12840 <line:68:46, col:62> 'unsigned int'
|           | |       | `-BinaryOperator 0x1b16fd12820 <col:47, col:61> 'unsigned int' '+'
|           | |       |   |-ImplicitCastExpr 0x1b16fd127f0 <col:47, col:50> 'u32':'unsigned int' <LValueToRValue>
|           | |       |   | `-ArraySubscriptExpr 0x1b16fd12740 <col:47, col:50> 'u32':'unsigned int' lvalue
|           | |       |   |   |-ImplicitCastExpr 0x1b16fd12710 <col:47> 'u32 *' <ArrayToPointerDecay>
|           | |       |   |   | `-DeclRefExpr 0x1b16fd126d0 <col:47> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|           | |       |   |   `-ImplicitCastExpr 0x1b16fd12728 <col:49> 'int' <LValueToRValue>
|           | |       |   |     `-DeclRefExpr 0x1b16fd126f0 <col:49> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           | |       |   `-ImplicitCastExpr 0x1b16fd12808 <col:54, col:61> 'u32':'unsigned int' <LValueToRValue>
|           | |       |     `-ArraySubscriptExpr 0x1b16fd127d0 <col:54, col:61> 'const u32':'const unsigned int' lvalue
|           | |       |       |-ImplicitCastExpr 0x1b16fd127a0 <col:54> 'const u32 *':'const u32 *' <LValueToRValue>
|           | |       |       | `-DeclRefExpr 0x1b16fd12760 <col:54> 'const u32 *':'const u32 *' lvalue ParmVar 0x1b16fd5b000 'input' 'const u32 *':'const u32 *'
|           | |       |       `-ImplicitCastExpr 0x1b16fd127b8 <col:60> 'int' <LValueToRValue>
|           | |       |         `-DeclRefExpr 0x1b16fd12780 <col:60> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           | |       `-IntegerLiteral 0x1b16fd12860 <line:27:53> 'int' 8
|           | |-BinaryOperator 0x1b16fd12d18 <line:28:33, col:54> 'u8':'unsigned char' '='
|           | | |-ArraySubscriptExpr 0x1b16fd12aa8 <col:33, col:38> 'u8':'unsigned char' lvalue
|           | | | |-ParenExpr 0x1b16fd12a60 <col:33, col:35> 'u8 *'
|           | | | | `-BinaryOperator 0x1b16fd12a40 <line:68:27, col:43> 'u8 *' '+'
|           | | | |   |-ImplicitCastExpr 0x1b16fd12a28 <col:27, col:35> 'u8 *' <ArrayToPointerDecay>
|           | | | |   | `-MemberExpr 0x1b16fd12978 <col:27, col:35> 'u8 [64]' lvalue ->c 0x1b16fd5acb8
|           | | | |   |   `-ImplicitCastExpr 0x1b16fd12960 <col:27> 'chacha_buf *' <LValueToRValue>
|           | | | |   |     `-DeclRefExpr 0x1b16fd12940 <col:27> 'chacha_buf *' lvalue ParmVar 0x1b16fd5ae68 'output' 'chacha_buf *'
|           | | | |   `-BinaryOperator 0x1b16fd12a08 <col:39, col:43> 'int' '*'
|           | | | |     |-IntegerLiteral 0x1b16fd129a8 <col:39> 'int' 4
|           | | | |     `-ImplicitCastExpr 0x1b16fd129f0 <col:43> 'int' <LValueToRValue>
|           | | | |       `-DeclRefExpr 0x1b16fd129d0 <col:43> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           | | | `-IntegerLiteral 0x1b16fd12a80 <line:28:37> 'int' 2
|           | | `-CStyleCastExpr 0x1b16fd12cf0 <col:42, col:54> 'u8':'unsigned char' <IntegralCast>
|           | |   `-ParenExpr 0x1b16fd12cd0 <col:46, col:54> 'unsigned int'
|           | |     `-BinaryOperator 0x1b16fd12c80 <line:68:46, line:28:52> 'unsigned int' '>>'
|           | |       |-ParenExpr 0x1b16fd12c38 <line:68:46, col:62> 'unsigned int'
|           | |       | `-BinaryOperator 0x1b16fd12c18 <col:47, col:61> 'unsigned int' '+'
|           | |       |   |-ImplicitCastExpr 0x1b16fd12be8 <col:47, col:50> 'u32':'unsigned int' <LValueToRValue>
|           | |       |   | `-ArraySubscriptExpr 0x1b16fd12b38 <col:47, col:50> 'u32':'unsigned int' lvalue
|           | |       |   |   |-ImplicitCastExpr 0x1b16fd12b08 <col:47> 'u32 *' <ArrayToPointerDecay>
|           | |       |   |   | `-DeclRefExpr 0x1b16fd12ac8 <col:47> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|           | |       |   |   `-ImplicitCastExpr 0x1b16fd12b20 <col:49> 'int' <LValueToRValue>
|           | |       |   |     `-DeclRefExpr 0x1b16fd12ae8 <col:49> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           | |       |   `-ImplicitCastExpr 0x1b16fd12c00 <col:54, col:61> 'u32':'unsigned int' <LValueToRValue>
|           | |       |     `-ArraySubscriptExpr 0x1b16fd12bc8 <col:54, col:61> 'const u32':'const unsigned int' lvalue
|           | |       |       |-ImplicitCastExpr 0x1b16fd12b98 <col:54> 'const u32 *':'const u32 *' <LValueToRValue>
|           | |       |       | `-DeclRefExpr 0x1b16fd12b58 <col:54> 'const u32 *':'const u32 *' lvalue ParmVar 0x1b16fd5b000 'input' 'const u32 *':'const u32 *'
|           | |       |       `-ImplicitCastExpr 0x1b16fd12bb0 <col:60> 'int' <LValueToRValue>
|           | |       |         `-DeclRefExpr 0x1b16fd12b78 <col:60> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           | |       `-IntegerLiteral 0x1b16fd12c58 <line:28:52> 'int' 16
|           | `-BinaryOperator 0x1b16fd13130 <line:29:33, col:54> 'u8':'unsigned char' '='
|           |   |-ArraySubscriptExpr 0x1b16fd12ea0 <col:33, col:38> 'u8':'unsigned char' lvalue
|           |   | |-ParenExpr 0x1b16fd12e58 <col:33, col:35> 'u8 *'
|           |   | | `-BinaryOperator 0x1b16fd12e38 <line:68:27, col:43> 'u8 *' '+'
|           |   | |   |-ImplicitCastExpr 0x1b16fd12e20 <col:27, col:35> 'u8 *' <ArrayToPointerDecay>
|           |   | |   | `-MemberExpr 0x1b16fd12d70 <col:27, col:35> 'u8 [64]' lvalue ->c 0x1b16fd5acb8
|           |   | |   |   `-ImplicitCastExpr 0x1b16fd12d58 <col:27> 'chacha_buf *' <LValueToRValue>
|           |   | |   |     `-DeclRefExpr 0x1b16fd12d38 <col:27> 'chacha_buf *' lvalue ParmVar 0x1b16fd5ae68 'output' 'chacha_buf *'
|           |   | |   `-BinaryOperator 0x1b16fd12e00 <col:39, col:43> 'int' '*'
|           |   | |     |-IntegerLiteral 0x1b16fd12da0 <col:39> 'int' 4
|           |   | |     `-ImplicitCastExpr 0x1b16fd12de8 <col:43> 'int' <LValueToRValue>
|           |   | |       `-DeclRefExpr 0x1b16fd12dc8 <col:43> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           |   | `-IntegerLiteral 0x1b16fd12e78 <line:29:37> 'int' 3
|           |   `-CStyleCastExpr 0x1b16fd13108 <col:42, col:54> 'u8':'unsigned char' <IntegralCast>
|           |     `-ParenExpr 0x1b16fd130e8 <col:46, col:54> 'unsigned int'
|           |       `-BinaryOperator 0x1b16fd13098 <line:68:46, line:29:52> 'unsigned int' '>>'
|           |         |-ParenExpr 0x1b16fd13030 <line:68:46, col:62> 'unsigned int'
|           |         | `-BinaryOperator 0x1b16fd13010 <col:47, col:61> 'unsigned int' '+'
|           |         |   |-ImplicitCastExpr 0x1b16fd12fe0 <col:47, col:50> 'u32':'unsigned int' <LValueToRValue>
|           |         |   | `-ArraySubscriptExpr 0x1b16fd12f30 <col:47, col:50> 'u32':'unsigned int' lvalue
|           |         |   |   |-ImplicitCastExpr 0x1b16fd12f00 <col:47> 'u32 *' <ArrayToPointerDecay>
|           |         |   |   | `-DeclRefExpr 0x1b16fd12ec0 <col:47> 'u32 [16]' lvalue Var 0x1b16fd5d2a0 'x' 'u32 [16]'
|           |         |   |   `-ImplicitCastExpr 0x1b16fd12f18 <col:49> 'int' <LValueToRValue>
|           |         |   |     `-DeclRefExpr 0x1b16fd12ee0 <col:49> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           |         |   `-ImplicitCastExpr 0x1b16fd12ff8 <col:54, col:61> 'u32':'unsigned int' <LValueToRValue>
|           |         |     `-ArraySubscriptExpr 0x1b16fd12fc0 <col:54, col:61> 'const u32':'const unsigned int' lvalue
|           |         |       |-ImplicitCastExpr 0x1b16fd12f90 <col:54> 'const u32 *':'const u32 *' <LValueToRValue>
|           |         |       | `-DeclRefExpr 0x1b16fd12f50 <col:54> 'const u32 *':'const u32 *' lvalue ParmVar 0x1b16fd5b000 'input' 'const u32 *':'const u32 *'
|           |         |       `-ImplicitCastExpr 0x1b16fd12fa8 <col:60> 'int' <LValueToRValue>
|           |         |         `-DeclRefExpr 0x1b16fd12f70 <col:60> 'int' lvalue Var 0x1b16fd5d338 'i' 'int'
|           |         `-IntegerLiteral 0x1b16fd13070 <line:29:52> 'int' 24
|           `-IntegerLiteral 0x1b16fd13180 <line:30:41> 'int' 0
`-FunctionDecl 0x1b16fd13858 <line:72:1, line:121:1> line:72:6 ChaCha20_ctr32 'void (unsigned char *, const unsigned char *, size_t, const unsigned int *, const unsigned int *)'
  |-ParmVarDecl 0x1b16fd13298 <col:21, col:36> col:36 used out 'unsigned char *'
  |-ParmVarDecl 0x1b16fd13318 <col:41, col:62> col:62 used inp 'const unsigned char *'
  |-ParmVarDecl 0x1b16fd13390 <line:73:21, col:28> col:28 used len 'size_t':'unsigned long long'
  |-ParmVarDecl 0x1b16fd13510 <col:33, col:57> col:52 used key 'const unsigned int *':'const unsigned int *'
  |-ParmVarDecl 0x1b16fd13690 <line:74:21, col:49> col:40 used counter 'const unsigned int *':'const unsigned int *'
  `-CompoundStmt 0x1b16fd1a468 <line:75:1, line:121:1>
    |-DeclStmt 0x1b16fd13a00 <line:76:5, col:18>
    | `-VarDecl 0x1b16fd13998 <col:5, col:17> col:9 used input 'u32 [16]'
    |-DeclStmt 0x1b16fd13a90 <line:77:5, col:19>
    | `-VarDecl 0x1b16fd13a28 <col:5, col:16> col:16 used buf 'chacha_buf':'chacha_buf'
    |-DeclStmt 0x1b16fd13bb0 <line:78:5, col:19>
    | |-VarDecl 0x1b16fd13ab8 <col:5, col:12> col:12 used todo 'size_t':'unsigned long long'
    | `-VarDecl 0x1b16fd13b30 <col:5, col:18> col:18 used i 'size_t':'unsigned long long'
    |-BinaryOperator 0x1b16fd13f58 <line:81:5, col:75> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd13c40 <col:5, col:12> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd13c28 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd13bc8 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd13c00 <col:11> 'int' 0
    | `-BinaryOperator 0x1b16fd13f38 <col:16, col:75> 'unsigned int' '|'
    |   |-BinaryOperator 0x1b16fd13e60 <col:16, col:58> 'unsigned int' '|'
    |   | |-BinaryOperator 0x1b16fd13d88 <col:16, col:41> 'unsigned int' '|'
    |   | | |-ParenExpr 0x1b16fd13cb0 <col:16, col:25> 'u32':'unsigned int'
    |   | | | `-CStyleCastExpr 0x1b16fd13c88 <col:17, col:22> 'u32':'unsigned int' <IntegralCast>
    |   | | |   `-CharacterLiteral 0x1b16fd13c60 <col:22> 'int' 101
    |   | | `-ParenExpr 0x1b16fd13d68 <col:29, col:41> 'u32':'unsigned int'
    |   | |   `-BinaryOperator 0x1b16fd13d48 <col:30, col:40> 'u32':'unsigned int' '<<'
    |   | |     |-CStyleCastExpr 0x1b16fd13cf8 <col:30, col:35> 'u32':'unsigned int' <IntegralCast>
    |   | |     | `-CharacterLiteral 0x1b16fd13cd0 <col:35> 'int' 120
    |   | |     `-IntegerLiteral 0x1b16fd13d20 <col:40> 'int' 8
    |   | `-ParenExpr 0x1b16fd13e40 <col:45, col:58> 'u32':'unsigned int'
    |   |   `-BinaryOperator 0x1b16fd13e20 <col:46, col:56> 'u32':'unsigned int' '<<'
    |   |     |-CStyleCastExpr 0x1b16fd13dd0 <col:46, col:51> 'u32':'unsigned int' <IntegralCast>
    |   |     | `-CharacterLiteral 0x1b16fd13da8 <col:51> 'int' 112
    |   |     `-IntegerLiteral 0x1b16fd13df8 <col:56> 'int' 16
    |   `-ParenExpr 0x1b16fd13f18 <col:62, col:75> 'u32':'unsigned int'
    |     `-BinaryOperator 0x1b16fd13ef8 <col:63, col:73> 'u32':'unsigned int' '<<'
    |       |-CStyleCastExpr 0x1b16fd13ea8 <col:63, col:68> 'u32':'unsigned int' <IntegralCast>
    |       | `-CharacterLiteral 0x1b16fd13e80 <col:68> 'int' 97
    |       `-IntegerLiteral 0x1b16fd13ed0 <col:73> 'int' 24
    |-BinaryOperator 0x1b16fd0c288 <line:82:5, col:75> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd13fd8 <col:5, col:12> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd13fc0 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd13f78 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd13f98 <col:11> 'int' 1
    | `-BinaryOperator 0x1b16fd0c268 <col:16, col:75> 'unsigned int' '|'
    |   |-BinaryOperator 0x1b16fd0c190 <col:16, col:58> 'unsigned int' '|'
    |   | |-BinaryOperator 0x1b16fd0c0b8 <col:16, col:41> 'unsigned int' '|'
    |   | | |-ParenExpr 0x1b16fd14048 <col:16, col:25> 'u32':'unsigned int'
    |   | | | `-CStyleCastExpr 0x1b16fd14020 <col:17, col:22> 'u32':'unsigned int' <IntegralCast>
    |   | | |   `-CharacterLiteral 0x1b16fd13ff8 <col:22> 'int' 110
    |   | | `-ParenExpr 0x1b16fd0c098 <col:29, col:41> 'u32':'unsigned int'
    |   | |   `-BinaryOperator 0x1b16fd0c078 <col:30, col:40> 'u32':'unsigned int' '<<'
    |   | |     |-CStyleCastExpr 0x1b16fd0c028 <col:30, col:35> 'u32':'unsigned int' <IntegralCast>
    |   | |     | `-CharacterLiteral 0x1b16fd0c000 <col:35> 'int' 100
    |   | |     `-IntegerLiteral 0x1b16fd0c050 <col:40> 'int' 8
    |   | `-ParenExpr 0x1b16fd0c170 <col:45, col:58> 'u32':'unsigned int'
    |   |   `-BinaryOperator 0x1b16fd0c150 <col:46, col:56> 'u32':'unsigned int' '<<'
    |   |     |-CStyleCastExpr 0x1b16fd0c100 <col:46, col:51> 'u32':'unsigned int' <IntegralCast>
    |   |     | `-CharacterLiteral 0x1b16fd0c0d8 <col:51> 'int' 32
    |   |     `-IntegerLiteral 0x1b16fd0c128 <col:56> 'int' 16
    |   `-ParenExpr 0x1b16fd0c248 <col:62, col:75> 'u32':'unsigned int'
    |     `-BinaryOperator 0x1b16fd0c228 <col:63, col:73> 'u32':'unsigned int' '<<'
    |       |-CStyleCastExpr 0x1b16fd0c1d8 <col:63, col:68> 'u32':'unsigned int' <IntegralCast>
    |       | `-CharacterLiteral 0x1b16fd0c1b0 <col:68> 'int' 51
    |       `-IntegerLiteral 0x1b16fd0c200 <col:73> 'int' 24
    |-BinaryOperator 0x1b16fd0c620 <line:83:5, col:75> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd0c308 <col:5, col:12> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd0c2f0 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd0c2a8 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd0c2c8 <col:11> 'int' 2
    | `-BinaryOperator 0x1b16fd0c600 <col:16, col:75> 'unsigned int' '|'
    |   |-BinaryOperator 0x1b16fd0c528 <col:16, col:58> 'unsigned int' '|'
    |   | |-BinaryOperator 0x1b16fd0c450 <col:16, col:41> 'unsigned int' '|'
    |   | | |-ParenExpr 0x1b16fd0c378 <col:16, col:25> 'u32':'unsigned int'
    |   | | | `-CStyleCastExpr 0x1b16fd0c350 <col:17, col:22> 'u32':'unsigned int' <IntegralCast>
    |   | | |   `-CharacterLiteral 0x1b16fd0c328 <col:22> 'int' 50
    |   | | `-ParenExpr 0x1b16fd0c430 <col:29, col:41> 'u32':'unsigned int'
    |   | |   `-BinaryOperator 0x1b16fd0c410 <col:30, col:40> 'u32':'unsigned int' '<<'
    |   | |     |-CStyleCastExpr 0x1b16fd0c3c0 <col:30, col:35> 'u32':'unsigned int' <IntegralCast>
    |   | |     | `-CharacterLiteral 0x1b16fd0c398 <col:35> 'int' 45
    |   | |     `-IntegerLiteral 0x1b16fd0c3e8 <col:40> 'int' 8
    |   | `-ParenExpr 0x1b16fd0c508 <col:45, col:58> 'u32':'unsigned int'
    |   |   `-BinaryOperator 0x1b16fd0c4e8 <col:46, col:56> 'u32':'unsigned int' '<<'
    |   |     |-CStyleCastExpr 0x1b16fd0c498 <col:46, col:51> 'u32':'unsigned int' <IntegralCast>
    |   |     | `-CharacterLiteral 0x1b16fd0c470 <col:51> 'int' 98
    |   |     `-IntegerLiteral 0x1b16fd0c4c0 <col:56> 'int' 16
    |   `-ParenExpr 0x1b16fd0c5e0 <col:62, col:75> 'u32':'unsigned int'
    |     `-BinaryOperator 0x1b16fd0c5c0 <col:63, col:73> 'u32':'unsigned int' '<<'
    |       |-CStyleCastExpr 0x1b16fd0c570 <col:63, col:68> 'u32':'unsigned int' <IntegralCast>
    |       | `-CharacterLiteral 0x1b16fd0c548 <col:68> 'int' 121
    |       `-IntegerLiteral 0x1b16fd0c598 <col:73> 'int' 24
    |-BinaryOperator 0x1b16fd0c9b8 <line:84:5, col:75> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd0c6a0 <col:5, col:12> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd0c688 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd0c640 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd0c660 <col:11> 'int' 3
    | `-BinaryOperator 0x1b16fd0c998 <col:16, col:75> 'unsigned int' '|'
    |   |-BinaryOperator 0x1b16fd0c8c0 <col:16, col:58> 'unsigned int' '|'
    |   | |-BinaryOperator 0x1b16fd0c7e8 <col:16, col:41> 'unsigned int' '|'
    |   | | |-ParenExpr 0x1b16fd0c710 <col:16, col:25> 'u32':'unsigned int'
    |   | | | `-CStyleCastExpr 0x1b16fd0c6e8 <col:17, col:22> 'u32':'unsigned int' <IntegralCast>
    |   | | |   `-CharacterLiteral 0x1b16fd0c6c0 <col:22> 'int' 116
    |   | | `-ParenExpr 0x1b16fd0c7c8 <col:29, col:41> 'u32':'unsigned int'
    |   | |   `-BinaryOperator 0x1b16fd0c7a8 <col:30, col:40> 'u32':'unsigned int' '<<'
    |   | |     |-CStyleCastExpr 0x1b16fd0c758 <col:30, col:35> 'u32':'unsigned int' <IntegralCast>
    |   | |     | `-CharacterLiteral 0x1b16fd0c730 <col:35> 'int' 101
    |   | |     `-IntegerLiteral 0x1b16fd0c780 <col:40> 'int' 8
    |   | `-ParenExpr 0x1b16fd0c8a0 <col:45, col:58> 'u32':'unsigned int'
    |   |   `-BinaryOperator 0x1b16fd0c880 <col:46, col:56> 'u32':'unsigned int' '<<'
    |   |     |-CStyleCastExpr 0x1b16fd0c830 <col:46, col:51> 'u32':'unsigned int' <IntegralCast>
    |   |     | `-CharacterLiteral 0x1b16fd0c808 <col:51> 'int' 32
    |   |     `-IntegerLiteral 0x1b16fd0c858 <col:56> 'int' 16
    |   `-ParenExpr 0x1b16fd0c978 <col:62, col:75> 'u32':'unsigned int'
    |     `-BinaryOperator 0x1b16fd0c958 <col:63, col:73> 'u32':'unsigned int' '<<'
    |       |-CStyleCastExpr 0x1b16fd0c908 <col:63, col:68> 'u32':'unsigned int' <IntegralCast>
    |       | `-CharacterLiteral 0x1b16fd0c8e0 <col:68> 'int' 107
    |       `-IntegerLiteral 0x1b16fd0c930 <col:73> 'int' 24
    |-BinaryOperator 0x1b16fd0caf0 <line:86:5, col:21> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd0ca38 <col:5, col:12> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd0ca20 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd0c9d8 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd0c9f8 <col:11> 'int' 4
    | `-ImplicitCastExpr 0x1b16fd0cad8 <col:16, col:21> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd0cab8 <col:16, col:21> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd0caa0 <col:16> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd0ca58 <col:16> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13510 'key' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd0ca78 <col:20> 'int' 0
    |-BinaryOperator 0x1b16fd0cc28 <line:87:5, col:21> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd0cb70 <col:5, col:12> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd0cb58 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd0cb10 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd0cb30 <col:11> 'int' 5
    | `-ImplicitCastExpr 0x1b16fd0cc10 <col:16, col:21> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd0cbf0 <col:16, col:21> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd0cbd8 <col:16> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd0cb90 <col:16> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13510 'key' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd0cbb0 <col:20> 'int' 1
    |-BinaryOperator 0x1b16fd0cd60 <line:88:5, col:21> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd0cca8 <col:5, col:12> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd0cc90 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd0cc48 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd0cc68 <col:11> 'int' 6
    | `-ImplicitCastExpr 0x1b16fd0cd48 <col:16, col:21> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd0cd28 <col:16, col:21> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd0cd10 <col:16> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd0ccc8 <col:16> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13510 'key' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd0cce8 <col:20> 'int' 2
    |-BinaryOperator 0x1b16fd0ce98 <line:89:5, col:21> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd0cde0 <col:5, col:12> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd0cdc8 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd0cd80 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd0cda0 <col:11> 'int' 7
    | `-ImplicitCastExpr 0x1b16fd0ce80 <col:16, col:21> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd0ce60 <col:16, col:21> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd0ce48 <col:16> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd0ce00 <col:16> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13510 'key' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd0ce20 <col:20> 'int' 3
    |-BinaryOperator 0x1b16fd0cfd0 <line:90:5, col:21> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd0cf18 <col:5, col:12> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd0cf00 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd0ceb8 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd0ced8 <col:11> 'int' 8
    | `-ImplicitCastExpr 0x1b16fd0cfb8 <col:16, col:21> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd0cf98 <col:16, col:21> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd0cf80 <col:16> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd0cf38 <col:16> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13510 'key' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd0cf58 <col:20> 'int' 4
    |-BinaryOperator 0x1b16fd14198 <line:91:5, col:21> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd140e0 <col:5, col:12> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd140c8 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd14080 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd140a0 <col:11> 'int' 9
    | `-ImplicitCastExpr 0x1b16fd14180 <col:16, col:21> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd14160 <col:16, col:21> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd14148 <col:16> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd14100 <col:16> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13510 'key' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd14120 <col:20> 'int' 5
    |-BinaryOperator 0x1b16fd142d0 <line:92:5, col:22> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd14218 <col:5, col:13> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd14200 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd141b8 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd141d8 <col:11> 'int' 10
    | `-ImplicitCastExpr 0x1b16fd142b8 <col:17, col:22> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd14298 <col:17, col:22> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd14280 <col:17> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd14238 <col:17> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13510 'key' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd14258 <col:21> 'int' 6
    |-BinaryOperator 0x1b16fd14408 <line:93:5, col:22> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd14350 <col:5, col:13> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd14338 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd142f0 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd14310 <col:11> 'int' 11
    | `-ImplicitCastExpr 0x1b16fd143f0 <col:17, col:22> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd143d0 <col:17, col:22> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd143b8 <col:17> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd14370 <col:17> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13510 'key' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd14390 <col:21> 'int' 7
    |-BinaryOperator 0x1b16fd14540 <line:95:5, col:26> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd14488 <col:5, col:13> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd14470 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd14428 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd14448 <col:11> 'int' 12
    | `-ImplicitCastExpr 0x1b16fd14528 <col:17, col:26> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd14508 <col:17, col:26> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd144f0 <col:17> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd144a8 <col:17> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13690 'counter' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd144c8 <col:25> 'int' 0
    |-BinaryOperator 0x1b16fd14678 <line:96:5, col:26> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd145c0 <col:5, col:13> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd145a8 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd14560 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd14580 <col:11> 'int' 13
    | `-ImplicitCastExpr 0x1b16fd14660 <col:17, col:26> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd14640 <col:17, col:26> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd14628 <col:17> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd145e0 <col:17> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13690 'counter' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd14600 <col:25> 'int' 1
    |-BinaryOperator 0x1b16fd147b0 <line:97:5, col:26> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd146f8 <col:5, col:13> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd146e0 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd14698 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd146b8 <col:11> 'int' 14
    | `-ImplicitCastExpr 0x1b16fd14798 <col:17, col:26> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd14778 <col:17, col:26> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd14760 <col:17> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd14718 <col:17> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13690 'counter' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd14738 <col:25> 'int' 2
    |-BinaryOperator 0x1b16fd148e8 <line:98:5, col:26> 'u32':'unsigned int' '='
    | |-ArraySubscriptExpr 0x1b16fd14830 <col:5, col:13> 'u32':'unsigned int' lvalue
    | | |-ImplicitCastExpr 0x1b16fd14818 <col:5> 'u32 *' <ArrayToPointerDecay>
    | | | `-DeclRefExpr 0x1b16fd147d0 <col:5> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
    | | `-IntegerLiteral 0x1b16fd147f0 <col:11> 'int' 15
    | `-ImplicitCastExpr 0x1b16fd148d0 <col:17, col:26> 'unsigned int' <LValueToRValue>
    |   `-ArraySubscriptExpr 0x1b16fd148b0 <col:17, col:26> 'const unsigned int' lvalue
    |     |-ImplicitCastExpr 0x1b16fd14898 <col:17> 'const unsigned int *':'const unsigned int *' <LValueToRValue>
    |     | `-DeclRefExpr 0x1b16fd14850 <col:17> 'const unsigned int *':'const unsigned int *' lvalue ParmVar 0x1b16fd13690 'counter' 'const unsigned int *':'const unsigned int *'
    |     `-IntegerLiteral 0x1b16fd14870 <col:25> 'int' 3
    `-WhileStmt 0x1b16fd1a450 <line:100:5, line:120:5>
      |-BinaryOperator 0x1b16fd14980 <line:100:12, col:18> 'int' '>'
      | |-ImplicitCastExpr 0x1b16fd14950 <col:12> 'size_t':'unsigned long long' <LValueToRValue>
      | | `-DeclRefExpr 0x1b16fd14908 <col:12> 'size_t':'unsigned long long' lvalue ParmVar 0x1b16fd13390 'len' 'size_t':'unsigned long long'
      | `-ImplicitCastExpr 0x1b16fd14968 <col:18> 'unsigned long long' <IntegralCast>
      |   `-IntegerLiteral 0x1b16fd14928 <col:18> 'int' 0
      `-CompoundStmt 0x1b16fd1a400 <col:21, line:120:5>
        |-BinaryOperator 0x1b16fd14a38 <line:101:9, col:26> 'size_t':'unsigned long long' '='
        | |-DeclRefExpr 0x1b16fd149a0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13ab8 'todo' 'size_t':'unsigned long long'
        | `-UnaryExprOrTypeTraitExpr 0x1b16fd14a18 <col:16, col:26> 'unsigned long long' sizeof
        |   `-ParenExpr 0x1b16fd149f8 <col:22, col:26> 'chacha_buf':'chacha_buf' lvalue
        |     `-DeclRefExpr 0x1b16fd149d8 <col:23> 'chacha_buf':'chacha_buf' lvalue Var 0x1b16fd13a28 'buf' 'chacha_buf':'chacha_buf' non_odr_use_unevaluated
        |-IfStmt 0x1b16fd14bb8 <line:102:9, line:103:20>
        | |-BinaryOperator 0x1b16fd14b20 <line:102:13, col:19> 'int' '<'
        | | |-ImplicitCastExpr 0x1b16fd14af0 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
        | | | `-DeclRefExpr 0x1b16fd14ab0 <col:13> 'size_t':'unsigned long long' lvalue ParmVar 0x1b16fd13390 'len' 'size_t':'unsigned long long'
        | | `-ImplicitCastExpr 0x1b16fd14b08 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
        | |   `-DeclRefExpr 0x1b16fd14ad0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13ab8 'todo' 'size_t':'unsigned long long'
        | `-BinaryOperator 0x1b16fd14b98 <line:103:13, col:20> 'size_t':'unsigned long long' '='
        |   |-DeclRefExpr 0x1b16fd14b40 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13ab8 'todo' 'size_t':'unsigned long long'
        |   `-ImplicitCastExpr 0x1b16fd14b80 <col:20> 'size_t':'unsigned long long' <LValueToRValue>
        |     `-DeclRefExpr 0x1b16fd14b60 <col:20> 'size_t':'unsigned long long' lvalue ParmVar 0x1b16fd13390 'len' 'size_t':'unsigned long long'
        |-CallExpr 0x1b16fd14cd0 <line:105:9, col:34> 'void'
        | |-ImplicitCastExpr 0x1b16fd14cb8 <col:9> 'void (*)(chacha_buf *, const u32 *)' <FunctionToPointerDecay>
        | | `-DeclRefExpr 0x1b16fd14bd0 <col:9> 'void (chacha_buf *, const u32 *)' Function 0x1b16fd5d178 'chacha20_core' 'void (chacha_buf *, const u32 *)'
        | |-UnaryOperator 0x1b16fd14c28 <col:23, col:24> 'chacha_buf *' prefix '&' cannot overflow
        | | `-DeclRefExpr 0x1b16fd14bf0 <col:24> 'chacha_buf':'chacha_buf' lvalue Var 0x1b16fd13a28 'buf' 'chacha_buf':'chacha_buf'
        | `-ImplicitCastExpr 0x1b16fd14d18 <col:29> 'const u32 *':'const u32 *' <NoOp>
        |   `-ImplicitCastExpr 0x1b16fd14d00 <col:29> 'u32 *' <ArrayToPointerDecay>
        |     `-DeclRefExpr 0x1b16fd14c40 <col:29> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
        |-ForStmt 0x1b16fd1a198 <line:107:9, line:108:38>
        | |-BinaryOperator 0x1b16fd14da8 <line:107:14, col:18> 'size_t':'unsigned long long' '='
        | | |-DeclRefExpr 0x1b16fd14d30 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13b30 'i' 'size_t':'unsigned long long'
        | | `-ImplicitCastExpr 0x1b16fd14d90 <col:18> 'size_t':'unsigned long long' <IntegralCast>
        | |   `-IntegerLiteral 0x1b16fd14d68 <col:18> 'int' 0
        | |-<<<NULL>>>
        | |-BinaryOperator 0x1b16fd14e38 <col:21, col:25> 'int' '<'
        | | |-ImplicitCastExpr 0x1b16fd14e08 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
        | | | `-DeclRefExpr 0x1b16fd14dc8 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13b30 'i' 'size_t':'unsigned long long'
        | | `-ImplicitCastExpr 0x1b16fd14e20 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
        | |   `-DeclRefExpr 0x1b16fd14de8 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13ab8 'todo' 'size_t':'unsigned long long'
        | |-UnaryOperator 0x1b16fd14e78 <col:31, col:32> 'size_t':'unsigned long long' postfix '++'
        | | `-DeclRefExpr 0x1b16fd14e58 <col:31> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13b30 'i' 'size_t':'unsigned long long'
        | `-BinaryOperator 0x1b16fd1a178 <line:108:13, col:38> 'unsigned char' '='
        |   |-ArraySubscriptExpr 0x1b16fd14f00 <col:13, col:18> 'unsigned char' lvalue
        |   | |-ImplicitCastExpr 0x1b16fd14ed0 <col:13> 'unsigned char *' <LValueToRValue>
        |   | | `-DeclRefExpr 0x1b16fd14e90 <col:13> 'unsigned char *' lvalue ParmVar 0x1b16fd13298 'out' 'unsigned char *'
        |   | `-ImplicitCastExpr 0x1b16fd14ee8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
        |   |   `-DeclRefExpr 0x1b16fd14eb0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13b30 'i' 'size_t':'unsigned long long'
        |   `-ImplicitCastExpr 0x1b16fd1a160 <col:22, col:38> 'unsigned char' <IntegralCast>
        |     `-BinaryOperator 0x1b16fd1a140 <col:22, col:38> 'int' '^'
        |       |-ImplicitCastExpr 0x1b16fd1a0f8 <col:22, col:27> 'int' <IntegralCast>
        |       | `-ImplicitCastExpr 0x1b16fd1a0e0 <col:22, col:27> 'unsigned char' <LValueToRValue>
        |       |   `-ArraySubscriptExpr 0x1b16fd14f90 <col:22, col:27> 'const unsigned char' lvalue
        |       |     |-ImplicitCastExpr 0x1b16fd14f60 <col:22> 'const unsigned char *' <LValueToRValue>
        |       |     | `-DeclRefExpr 0x1b16fd14f20 <col:22> 'const unsigned char *' lvalue ParmVar 0x1b16fd13318 'inp' 'const unsigned char *'
        |       |     `-ImplicitCastExpr 0x1b16fd14f78 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
        |       |       `-DeclRefExpr 0x1b16fd14f40 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13b30 'i' 'size_t':'unsigned long long'
        |       `-ImplicitCastExpr 0x1b16fd1a128 <col:31, col:38> 'int' <IntegralCast>
        |         `-ImplicitCastExpr 0x1b16fd1a110 <col:31, col:38> 'u8':'unsigned char' <LValueToRValue>
        |           `-ArraySubscriptExpr 0x1b16fd15050 <col:31, col:38> 'u8':'unsigned char' lvalue
        |             |-ImplicitCastExpr 0x1b16fd15020 <col:31, col:35> 'u8 *' <ArrayToPointerDecay>
        |             | `-MemberExpr 0x1b16fd14fd0 <col:31, col:35> 'u8 [64]' lvalue .c 0x1b16fd5acb8
        |             |   `-DeclRefExpr 0x1b16fd14fb0 <col:31> 'chacha_buf':'chacha_buf' lvalue Var 0x1b16fd13a28 'buf' 'chacha_buf':'chacha_buf'
        |             `-ImplicitCastExpr 0x1b16fd15038 <col:37> 'size_t':'unsigned long long' <LValueToRValue>
        |               `-DeclRefExpr 0x1b16fd15000 <col:37> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13b30 'i' 'size_t':'unsigned long long'
        |-CompoundAssignOperator 0x1b16fd1a228 <line:109:9, col:16> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'
        | |-DeclRefExpr 0x1b16fd1a1d0 <col:9> 'unsigned char *' lvalue ParmVar 0x1b16fd13298 'out' 'unsigned char *'
        | `-ImplicitCastExpr 0x1b16fd1a210 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
        |   `-DeclRefExpr 0x1b16fd1a1f0 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13ab8 'todo' 'size_t':'unsigned long long'
        |-CompoundAssignOperator 0x1b16fd1a2b0 <line:110:9, col:16> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'
        | |-DeclRefExpr 0x1b16fd1a258 <col:9> 'const unsigned char *' lvalue ParmVar 0x1b16fd13318 'inp' 'const unsigned char *'
        | `-ImplicitCastExpr 0x1b16fd1a298 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
        |   `-DeclRefExpr 0x1b16fd1a278 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13ab8 'todo' 'size_t':'unsigned long long'
        |-CompoundAssignOperator 0x1b16fd1a338 <line:111:9, col:16> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
        | |-DeclRefExpr 0x1b16fd1a2e0 <col:9> 'size_t':'unsigned long long' lvalue ParmVar 0x1b16fd13390 'len' 'size_t':'unsigned long long'
        | `-ImplicitCastExpr 0x1b16fd1a320 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
        |   `-DeclRefExpr 0x1b16fd1a300 <col:16> 'size_t':'unsigned long long' lvalue Var 0x1b16fd13ab8 'todo' 'size_t':'unsigned long long'
        `-UnaryOperator 0x1b16fd1a3e8 <line:119:9, col:18> 'u32':'unsigned int' postfix '++'
          `-ArraySubscriptExpr 0x1b16fd1a3c8 <col:9, col:17> 'u32':'unsigned int' lvalue
            |-ImplicitCastExpr 0x1b16fd1a3b0 <col:9> 'u32 *' <ArrayToPointerDecay>
            | `-DeclRefExpr 0x1b16fd1a368 <col:9> 'u32 [16]' lvalue Var 0x1b16fd13998 'input' 'u32 [16]'
            `-IntegerLiteral 0x1b16fd1a388 <col:15> 'int' 12
