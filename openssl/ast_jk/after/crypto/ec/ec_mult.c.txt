TranslationUnitDecl 0x265a0627ff8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x265a0628890 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x265a0628590 '__int128'
|-TypedefDecl 0x265a0628900 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x265a06285b0 'unsigned __int128'
|-TypedefDecl 0x265a0628c38 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x265a06289f0 'struct __NSConstantString_tag'
|   `-Record 0x265a0628958 '__NSConstantString_tag'
|-TypedefDecl 0x265a0628ca8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x265a06281d0 'unsigned long long'
|-TypedefDecl 0x265a0628d40 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x265a0628d00 'char *'
|   `-BuiltinType 0x265a0628090 'char'
|-TypedefDecl 0x265a0628db0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x265a0628d00 'char *'
|   `-BuiltinType 0x265a0628090 'char'
|-TypedefDecl 0x265a0628e70 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x265a06281d0 'unsigned long long'
|-TypedefDecl 0x265a0628ee0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x265a0628d00 'char *'
|   `-BuiltinType 0x265a0628090 'char'
|-FunctionDecl 0x265a212f3f0 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x265a212f490 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x265a212f500 <col:21> Implicit
|-FunctionDecl 0x265a212f558 prev 0x265a212f3f0 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x265a212f280 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x265a212f648 <col:21> Inherited Implicit
|-TypedefDecl 0x265a212f688 prev 0x265a0628ca8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x265a06281d0 'unsigned long long'
|-TypedefDecl 0x265a212f730 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x265a212f700 'size_t' sugar
|   |-Typedef 0x265a212f688 'size_t'
|   `-BuiltinType 0x265a06281d0 'unsigned long long'
|-TypedefDecl 0x265a212f7a0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x265a0628130 'long long'
|-TypedefDecl 0x265a212f810 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x265a0628130 'long long'
|-TypedefDecl 0x265a212f880 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x265a0628170 'unsigned short'
|-TypedefDecl 0x265a212f8f0 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x265a0628170 'unsigned short'
|-TypedefDecl 0x265a212f960 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x265a0628170 'unsigned short'
|-TypedefDecl 0x265a212f9d0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x265a06280f0 'int'
|-TypedefDecl 0x265a212fa40 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x265a0628110 'long'
|-TypedefDecl 0x265a212fab0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x265a0628130 'long long'
|-TypedefDecl 0x265a212fb40 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x265a212fb10 '__time64_t' sugar
|   |-Typedef 0x265a212fab0 '__time64_t'
|   `-BuiltinType 0x265a0628130 'long long'
|-FunctionDecl 0x265a212fcb8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x265a212fed8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x265a2167490 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x265a2130018 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x265a2130090 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x265a2130108 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x265a2130188 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x265a2167230 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x265a2167570 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x265a2167630 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x265a21677a0 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x265a2167750 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x265a21676f0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x265a2167610 'struct threadlocaleinfostruct'
|       `-Record 0x265a216e2a0 'threadlocaleinfostruct'
|-TypedefDecl 0x265a21678b0 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x265a2167860 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x265a2167800 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x265a21676d0 'struct threadmbcinfostruct'
|       `-Record 0x265a2167630 'threadmbcinfostruct'
|-RecordDecl 0x265a2167908 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x265a21679c0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x265a2167a80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x265a2167b10 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x265a2167ba0 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x265a2167c58 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x265a2167c00 'struct localeinfo_struct' sugar
|   `-RecordType 0x265a2167a60 'struct localeinfo_struct'
|     `-Record 0x265a21679c0 'localeinfo_struct'
|-TypedefDecl 0x265a2167d30 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x265a2167ce0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x265a2167c00 'struct localeinfo_struct' sugar
|     `-RecordType 0x265a2167a60 'struct localeinfo_struct'
|       `-Record 0x265a21679c0 'localeinfo_struct'
|-RecordDecl 0x265a2167da8 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x265a2167e60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x265a2167ed8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x265a2167f98 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x265a2168030 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x265a21680a0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x265a2168158 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x265a2168100 'struct localerefcount' sugar
|   `-RecordType 0x265a2167e40 'struct localerefcount'
|     `-Record 0x265a2167da8 'localerefcount'
|-RecordDecl 0x265a216e2a0 prev 0x265a2167570 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x265a216e320 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x265a216e398 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x265a216e408 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x265a216e478 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x265a216e4e8 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x265a216e6a8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x265a216e718 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x265a216e788 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x265a216e7f8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x265a216e868 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x265a216e8d8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x265a216e930 parent 0x265a0627ff8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x265a216eac0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x265a216eb30 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x265a216eba0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x265a216ec10 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x265a216ecb0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x265a216ed20 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x265a216ee30 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x265a216ef68 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x265a216f018 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x265a216efc0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x265a2167610 'struct threadlocaleinfostruct'
|     `-Record 0x265a216e2a0 'threadlocaleinfostruct'
|-FunctionDecl 0x265a217d5a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x265a216f0a0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x265a216f150 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x265a216f1d0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x265a217d390 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a217d968 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x265a217da08 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x265a217da70 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x265a217dad8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a217db58 prev 0x265a217d968 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x265a217d690 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x265a217d710 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x265a217d788 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a217df18 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x265a217dc40 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x265a217dcc0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x265a217dd38 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2176370 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a217e000 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x265a217e080 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x265a217e0f8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a217e190 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a2176678 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x265a2176718 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x265a2176780 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x265a21767e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a2176868 prev 0x265a2176678 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x265a2176460 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x265a21764e0 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x265a2176558 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2176c28 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x265a2176cc8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x265a2176d30 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x265a2176d98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a2176e18 prev 0x265a2176c28 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x265a2176950 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x265a21769d0 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x265a2176a48 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x265a217e3a0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x265a2176f28 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x265a2176fc0 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x265a2177040 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x265a21770b8 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x265a217e768 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x265a217e808 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x265a217e870 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x265a217e8d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a217e958 prev 0x265a217e768 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x265a217e490 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x265a217e510 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x265a217e588 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x265a217edd8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x265a217ee78 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x265a217eee0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x265a217ef48 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x265a217efb0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a217f038 prev 0x265a217edd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x265a217eb20 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x265a217eba0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x265a217ec20 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x265a217ec98 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a217f0f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x265a217a4f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x265a217f2c0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x265a217a360 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x265a217a3d8 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a217a5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x265a217a9a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x265a217a6d8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x265a217a750 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a217a7d0 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x265a217ad70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x265a217ab80 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x265a217ac00 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x265a217ae20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a217b230 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x265a217af68 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x265a217afe0 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x265a217b060 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x265a217b630 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x265a217b6d0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x265a217b738 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x265a217b7b0 prev 0x265a217b630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x265a217b448 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x265a217b4c8 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x265a217b860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a217bbb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x265a217b9a8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x265a217ba20 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x265a217baa0 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x265a217bee0 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x265a217bf80 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x265a217bfe8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x265a217c060 prev 0x265a217bee0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x265a217bd60 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x265a217bde0 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x265a217c110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a217c450 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x265a217c4f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a217c558 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x265a217c5d0 prev 0x265a217c450 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x265a217c258 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x265a217c2d8 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x265a217c820 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x265a217c8c0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x265a217c930 prev 0x265a217c820 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x265a217c6b0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x265a217cc28 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x265a217ca08 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x265a217ca80 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a217ce78 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x265a217cd08 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x265a217cd80 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x265a217d1a8 <line:131:1, line:133:1>
|   `-ReturnStmt 0x265a217d198 <line:132:5, col:51>
|     `-ConditionalOperator 0x265a217d168 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x265a217cfd8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x265a217cfb8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x265a217cf88 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x265a217cf40 <col:13> 'const char *' lvalue ParmVar 0x265a217cd08 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x265a217cfa0 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x265a217cf60 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x265a217d150 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x265a217cff8 <col:24> 'int' 0
|       `-CallExpr 0x265a217d0f0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x265a217d0d8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x265a217d020 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x265a217cc28 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x265a217d120 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x265a217d040 <col:36> 'const char *' lvalue ParmVar 0x265a217cd08 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x265a217d138 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x265a217d060 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x265a217cd80 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x265a217f4e8 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x265a217d1d8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x265a217d250 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x265a217d2d0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x265a217f3b0 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x265a217f7f0 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x265a217f890 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x265a217f8f8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x265a217f960 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a217f9e0 prev 0x265a217f7f0 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x265a217f5d8 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x265a217f658 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x265a217f6d0 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x265a217fc18 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x265a217fac8 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x265a217fee0 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x265a217ff80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a217ffe8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x265a2180060 prev 0x265a217fee0 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x265a217fcf0 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x265a217fd70 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x265a21802c0 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x265a2180140 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x265a21801c0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x265a21794d0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x265a2179350 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x265a21793d0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x265a2179888 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x265a21795b0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x265a2179630 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x265a21796a8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a2179af0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x265a2179970 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x265a21799f0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x265a2179de8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x265a2179bd0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x265a2179c50 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x265a2179cc8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a217a050 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x265a2179ed0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x265a2179f50 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x265a2178340 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x265a217a130 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x265a217a1b0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x265a217a228 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21786f8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x265a2178428 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x265a21784a8 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x265a2178520 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2178b60 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a21787e0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x265a2178860 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x265a21788d8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a2178950 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a2178e68 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x265a2178c50 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x265a2178cd0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x265a2178d48 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2179200 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a2178f50 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x265a2178fd0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x265a2179048 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21790c0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21805e8 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x265a2180688 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a21806f0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x265a2180768 prev 0x265a21805e8 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x265a21803c0 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x265a2180440 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x265a2180a20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x265a2180940 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x265a2180ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2180ea0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x265a2180c10 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x265a2180c88 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a2180d08 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x265a21811b8 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x265a2181258 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x265a21812c8 prev 0x265a21811b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x265a2181080 <col:90> col:93 'int'
| `-DeprecatedAttr 0x265a2181370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21816e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x265a21814d0 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x265a2181548 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21815c8 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x265a21819e8 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x265a21817c8 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x265a2181840 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2181cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x265a2181b88 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x265a2181d80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2182190 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a2181ec8 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x265a2181f40 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a2181fb8 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21855c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x265a2182338 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x265a2185410 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x265a2185670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2185b28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x265a21857b8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x265a2185830 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x265a21858b0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x265a2185928 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x265a2185fa8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x265a2186048 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x265a21860b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a2186118 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a2186198 prev 0x265a2185fa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x265a2185cd8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x265a2185d58 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x265a2185dd0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a2186250 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2182590 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x265a2182630 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x265a2182698 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a2182700 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a2182780 prev 0x265a2182590 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x265a2186398 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x265a21823f8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x265a2182470 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2182a80 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x265a2182868 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x265a21828e8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x265a2182960 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2182e18 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a2182b68 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x265a2182be8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x265a2182c60 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a2182cd8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21831b0 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x265a2182f08 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x265a2182f80 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x265a2183000 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x265a2183078 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x265a2183588 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x265a2183628 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x265a2183690 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a21836f8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a2183778 prev 0x265a2183588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x265a2183360 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x265a21833f0 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x265a2183468 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a2183830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2183ce8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x265a2183978 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x265a21839f0 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2183a70 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x265a2183ae8 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2184168 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x265a2183e98 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x265a2183f18 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x265a2183f90 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a2184220 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2184570 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x265a2184610 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a2184678 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x265a21846f0 prev 0x265a2184570 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x265a2184368 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x265a2184400 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x265a2184950 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x265a21849f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a2184a58 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x265a2184ad0 prev 0x265a2184950 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x265a21847d0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x265a2184850 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x265a2184c90 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x265a2184bb0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x265a2184ee0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x265a2184f80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a2184fe8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x265a2185060 prev 0x265a2184ee0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x265a2184d68 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x265a2184de8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x265a21852c0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x265a2185360 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a21fbff0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x265a21fc068 prev 0x265a21852c0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x265a2185140 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x265a21851c0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x265a21fc388 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x265a21fc428 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x265a21fc490 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x265a21fc508 prev 0x265a21fc388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x265a21fc208 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x265a21fc288 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x265a21fc5b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21fc998 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x265a21fc700 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x265a21fc780 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x265a21fc800 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x265a21fcbf0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x265a21fca80 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x265a21fcaf8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x265a21fce70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x265a21fcd90 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x265a21fcf18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21fd308 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a21fd100 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x265a21fd178 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21fd1f0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21fd628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x265a21fd4b0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x265a21fd528 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x265a21fd6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21fdaf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x265a21fdb90 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x265a21fdbf8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a21fdc60 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a21fdce0 prev 0x265a21fdaf0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x265a21fd820 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x265a21fd8a0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x265a21fd918 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a21fa108 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a21fddc8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x265a21fde48 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x265a21fdec0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21fdf38 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21fa3b0 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x265a21fa450 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x265a21fa4c0 prev 0x265a21fa3b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x265a21fa2d0 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x265a21fa568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x265a21fa8b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x265a21fa730 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x265a21fa7b0 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x265a21fa960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x265a21faca8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x265a21fab28 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x265a21faba8 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x265a21fad58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x265a21f8ff8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x265a21faf20 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x265a21f90a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x265a21f94b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x265a21f92a0 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x265a21f9320 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x265a21f9398 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a21f9570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x265a21f9950 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x265a21f9738 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x265a21f97b8 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x265a21f9830 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a21f9a08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x265a21f9cb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x265a21f9bd0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x265a21f9d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x265a21ff120 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x265a21f9f20 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x265a21ff020 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x265a21ff1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x265a21ff478 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x265a21ff398 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x265a21ff520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x265a21ff7b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x265a21ff640 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x265a21ffb40 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x265a21ff880 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x265a21ff8f8 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x265a21ff970 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x265a21ffef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a21ffce0 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x265a21ffd58 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x265a21fffa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2200348 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x265a22003e8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x265a2200450 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x265a22004c8 prev 0x265a2200348 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x265a2200128 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a22001a0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x265a22007c0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x265a2200860 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x265a22008c8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x265a2200940 prev 0x265a22007c0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x265a22005a0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x265a2200618 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x265a2200c20 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x265a2200a18 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x265a2200a90 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x265a2200b08 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x265a2200f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a2200dc0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x265a2200e38 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x265a2200fe0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2202368 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a2202148 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a22021c0 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x265a22025b0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x265a2202650 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x265a22026c0 prev 0x265a22025b0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x265a2202440 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x265a22029a8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x265a2202790 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x265a2202808 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2202bf0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x265a2202a80 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x265a2202af8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x265a2202f88 <line:306:1, line:308:1>
|   `-ReturnStmt 0x265a2202f78 <line:307:5, col:56>
|     `-ConditionalOperator 0x265a2202f48 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x265a2202db0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x265a2202d90 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x265a2202d60 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x265a2202cb8 <col:13> 'const wchar_t *' lvalue ParmVar 0x265a2202a80 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x265a2202d78 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x265a2202d40 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x265a2202d18 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x265a2202cd8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x265a2202f30 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x265a2202dd0 <col:29> 'int' 0
|       `-CallExpr 0x265a2202ed0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x265a2202eb8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x265a2202df8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x265a22029a8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x265a2202f00 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x265a2202e18 <col:41> 'const wchar_t *' lvalue ParmVar 0x265a2202a80 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x265a2202f18 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x265a2202e38 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x265a2202af8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2201338 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x265a2202fb0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x265a2201040 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x265a22010b8 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x265a2201130 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x265a22017a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x265a22014e0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x265a2201558 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x265a22015d0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a2201858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2201c68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x265a2201d08 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x265a2201d70 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x265a2201dd8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a2201e58 prev 0x265a2201c68 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x265a2201998 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a2201a10 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x265a2201a88 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a21fb190 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x265a2201f38 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x265a2201fb0 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x265a21fafe0 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x265a21fb058 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x265a21fb540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x265a21fb338 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x265a21fb3b0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x265a21fb428 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a21fb5f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21fb958 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a21fb738 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a21fb7b0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x265a21fbba0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x265a21fba30 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a21fbaa8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x265a21fbde8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a21fbc78 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a21fbcf0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x265a22060f0 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a21fbec0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a21fbf38 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x265a22063f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a2206288 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x265a2206300 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x265a22064a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2206910 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x265a22065e8 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x265a2206660 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x265a2206740 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x265a2206c30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x265a2206ab8 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x265a2206cd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a22050f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x265a2206e18 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x265a2206e90 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a2206f10 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x265a22053a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x265a22052c8 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x265a2205448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2205810 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x265a2205588 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x265a2205600 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a2205678 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x265a2205a68 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a22058f0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x265a2205968 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x265a2205e08 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x265a2205b40 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a2205bb8 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x265a2205c30 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a2208138 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x265a2205ee8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a2205f60 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x265a2205fd8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2208590 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a2208218 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a2208290 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x265a2208308 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a2208380 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a22089e8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x265a2208678 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x265a22086f0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2208768 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x265a22087e0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2208e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x265a2208b90 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x265a2208c08 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x265a2208c80 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a2208f08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2204180 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x265a2209048 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x265a2204510 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x265a2204250 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x265a22042c8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a2204340 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x265a22048c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x265a22046b0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x265a2204728 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x265a2204978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2204cd8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x265a2204ab8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x265a2204b30 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2204f48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x265a2204e70 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x265a2204ff0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2203420 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a2203158 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x265a22031d0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a2203248 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a22037d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x265a22035c0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x265a2203638 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x265a2203888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2203b38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x265a22039c8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x265a2203a40 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2203da8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x265a2203cd0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x265a2203e50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a220e2a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a2203f90 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x265a220e110 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a220e188 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a220e5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x265a220e440 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x265a220e4b8 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x265a220e660 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a220ea60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x265a220e7a0 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x265a220e818 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x265a220e890 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a220eea8 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a220eb40 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x265a220ebb8 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x265a220ec30 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a220eca8 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a220f120 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a220ef90 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x265a220f008 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x265a220f408 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x265a220f1f8 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a220f270 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x265a220f2e8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a220f660 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a220f4e8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x265a220f560 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x265a220f948 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x265a220f738 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a220f7b0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x265a220f828 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a220fc38 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x265a220fa28 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a220faa0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x265a220fb18 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a220ffc0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a220fd18 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a220fd90 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x265a220fe08 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a220fe80 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a220d298 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x265a22100a8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a220d100 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x265a220d178 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a220d620 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a220d378 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a220d3f0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x265a220d468 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a220d4e0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a220d880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x265a220d7a8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x265a220d928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x265a220dc60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a220dae8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a220db60 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x265a220dd10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x265a22090c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x265a220ded0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a220df48 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x265a220dfc0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a2209178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x265a2209540 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x265a2209338 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x265a22093b0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x265a2209428 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a22095f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x265a2209890 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x265a22097b8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x265a2209938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x265a2209c68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x265a2209af8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x265a2209b70 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x265a2209d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x265a2209fb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x265a2209ed8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x265a220a058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x265a220a320 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x265a220a248 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x265a220a3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x265a220a700 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a220a588 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x265a220a600 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x265a220a7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-TypedefDecl 0x265a220aaa8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x265a220aa40 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x265a220a9e0 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x265a220a990 'int (void)' sugar
|     | `-FunctionProtoType 0x265a220a960 'int (void)' cdecl
|     |   `-BuiltinType 0x265a06280f0 'int'
|     `-ParenType 0x265a220a990 'int (void)' sugar
|       `-FunctionProtoType 0x265a220a960 'int (void)' cdecl
|         `-BuiltinType 0x265a06280f0 'int'
|-RecordDecl 0x265a220ab00 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x265a220abc0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x265a220ac38 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x265a220aca8 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x265a220ad58 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x265a220ad00 'struct _div_t' sugar
|   `-RecordType 0x265a220aba0 'struct _div_t'
|     `-Record 0x265a220ab00 '_div_t'
|-RecordDecl 0x265a220adc8 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x265a220ae80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x265a220aef8 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x265a220af68 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x265a220b018 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x265a220afc0 'struct _ldiv_t' sugar
|   `-RecordType 0x265a220ae60 'struct _ldiv_t'
|     `-Record 0x265a220adc8 '_ldiv_t'
|-RecordDecl 0x265a2216190 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x265a2216250 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x265a22162c8 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x265a2216338 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x265a22163e8 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x265a2216390 'struct _lldiv_t' sugar
|   `-RecordType 0x265a2216230 'struct _lldiv_t'
|     `-Record 0x265a2216190 '_lldiv_t'
|-RecordDecl 0x265a2216480 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x265a2216540 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x265a2216640 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x265a22166f8 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x265a22166a0 'struct _LDOUBLE' sugar
|   `-RecordType 0x265a2216520 '_LDOUBLE'
|     `-Record 0x265a2216480 ''
|-RecordDecl 0x265a2216768 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x265a2216838 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x265a22168e8 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x265a2216890 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x265a2216800 '_CRT_DOUBLE'
|     `-Record 0x265a2216768 ''
|-RecordDecl 0x265a2216958 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x265a2216a28 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x265a2216ad8 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x265a2216a80 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x265a22169f0 '_CRT_FLOAT'
|     `-Record 0x265a2216958 ''
|-RecordDecl 0x265a2216b48 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x265a2216c18 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x265a2216cc8 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x265a2216c70 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x265a2216be0 '_LONGDOUBLE'
|     `-Record 0x265a2216b48 ''
|-RecordDecl 0x265a2216d60 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x265a2216e20 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x265a2216f20 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x265a2216fd8 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x265a2216f80 'struct _LDBL12' sugar
|   `-RecordType 0x265a2216e00 '_LDBL12'
|     `-Record 0x265a2216d60 ''
|-VarDecl 0x265a2217060 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x265a2217200 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x265a2217428 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x265a22172c8 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x265a2217670 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x265a2217610 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x265a22175b0 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x265a2217560 'void (void)' sugar
|     | `-FunctionProtoType 0x265a212fc10 'void (void)' cdecl
|     |   `-BuiltinType 0x265a0628050 'void'
|     `-ParenType 0x265a2217560 'void (void)' sugar
|       `-FunctionProtoType 0x265a212fc10 'void (void)' cdecl
|         `-BuiltinType 0x265a0628050 'void'
|-FunctionDecl 0x265a2217870 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x265a2217700 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x265a2217a88 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x265a2217ed8 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x265a2217e50 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x265a2217df0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x265a2217da0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x265a21672f0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x265a0628050 'void'
|     |   |-PointerType 0x265a212ffe0 'const wchar_t *'
|     |   | `-QualType 0x265a212ff91 'const wchar_t' const
|     |   |   `-TypedefType 0x265a212ff90 'wchar_t' sugar
|     |   |     |-Typedef 0x265a212f880 'wchar_t'
|     |   |     `-BuiltinType 0x265a0628170 'unsigned short'
|     |   |-PointerType 0x265a212ffe0 'const wchar_t *'
|     |   | `-QualType 0x265a212ff91 'const wchar_t' const
|     |   |   `-TypedefType 0x265a212ff90 'wchar_t' sugar
|     |   |     |-Typedef 0x265a212f880 'wchar_t'
|     |   |     `-BuiltinType 0x265a0628170 'unsigned short'
|     |   |-PointerType 0x265a212ffe0 'const wchar_t *'
|     |   | `-QualType 0x265a212ff91 'const wchar_t' const
|     |   |   `-TypedefType 0x265a212ff90 'wchar_t' sugar
|     |   |     |-Typedef 0x265a212f880 'wchar_t'
|     |   |     `-BuiltinType 0x265a0628170 'unsigned short'
|     |   |-BuiltinType 0x265a0628190 'unsigned int'
|     |   `-TypedefType 0x265a21301f0 'uintptr_t' sugar
|     |     |-Typedef 0x265a0628e70 'uintptr_t'
|     |     `-BuiltinType 0x265a06281d0 'unsigned long long'
|     `-ParenType 0x265a2217da0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x265a21672f0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x265a0628050 'void'
|         |-PointerType 0x265a212ffe0 'const wchar_t *'
|         | `-QualType 0x265a212ff91 'const wchar_t' const
|         |   `-TypedefType 0x265a212ff90 'wchar_t' sugar
|         |     |-Typedef 0x265a212f880 'wchar_t'
|         |     `-BuiltinType 0x265a0628170 'unsigned short'
|         |-PointerType 0x265a212ffe0 'const wchar_t *'
|         | `-QualType 0x265a212ff91 'const wchar_t' const
|         |   `-TypedefType 0x265a212ff90 'wchar_t' sugar
|         |     |-Typedef 0x265a212f880 'wchar_t'
|         |     `-BuiltinType 0x265a0628170 'unsigned short'
|         |-PointerType 0x265a212ffe0 'const wchar_t *'
|         | `-QualType 0x265a212ff91 'const wchar_t' const
|         |   `-TypedefType 0x265a212ff90 'wchar_t' sugar
|         |     |-Typedef 0x265a212f880 'wchar_t'
|         |     `-BuiltinType 0x265a0628170 'unsigned short'
|         |-BuiltinType 0x265a0628190 'unsigned int'
|         `-TypedefType 0x265a21301f0 'uintptr_t' sugar
|           |-Typedef 0x265a0628e70 'uintptr_t'
|           `-BuiltinType 0x265a06281d0 'unsigned long long'
|-FunctionDecl 0x265a22180d0 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x265a2217f60 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x265a21c4078 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x265a21c4260 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x265a21c44a0 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x265a21c4330 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x265a21c46f0 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x265a21c4578 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x265a21c4910 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x265a21c4b50 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x265a21c49e0 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x265a21c4da0 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x265a21c4c28 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x265a21bf000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x265a21bf0a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21bf360 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x265a21bf400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x265a21bf548 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x265a21bf5e0 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x265a21bf678 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x265a21bf710 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x265a21bf7a8 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x265a21bf900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x265a21bf968 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x265a21bfb68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x265a21bfbd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21c5f50 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x265a21bfd18 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x265a21c61a0 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x265a21c6028 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x265a21c6338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x265a21c63a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21c65c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x265a21c64e8 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x265a21c6770 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x265a21c6698 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x265a21c69c0 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x265a21c6a60 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x265a21c6ad0 prev 0x265a21c69c0 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x265a21c6848 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x265a21c6c80 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x265a21c6d20 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x265a21c6d90 prev 0x265a21c6c80 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x265a21c6ba8 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x265a21c6f60 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x265a21c7000 prev 0x265a21c6f60 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x265a21c72c0 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x265a21c70d0 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x265a21c7150 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x265a21c74b8 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x265a21c7558 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x265a21c75c8 <col:19> Implicit
| `-ConstAttr 0x265a21c7620 <col:19> Implicit
|-FunctionDecl 0x265a21c7648 prev 0x265a21c74b8 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x265a21c73a0 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x265a21c7738 <col:19> Inherited Implicit
| `-ConstAttr 0x265a21c7760 <col:19> Inherited Implicit
|-FunctionDecl 0x265a21c78e8 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x265a21c7988 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x265a21c79f8 <col:19> Implicit
| `-ConstAttr 0x265a21c7a50 <col:19> Implicit
|-FunctionDecl 0x265a21c7a78 prev 0x265a21c78e8 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x265a21c77a0 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x265a21c7b68 <col:19> Inherited Implicit
| `-ConstAttr 0x265a21c7b90 <col:19> Inherited Implicit
|-FunctionDecl 0x265a21c7d18 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x265a21c7db8 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x265a21c7e28 <col:19> Implicit
| `-ConstAttr 0x265a21c7e80 <col:19> Implicit
|-FunctionDecl 0x265a21c7ea8 prev 0x265a21c7d18 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x265a21c7bd0 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x265a21c0f48 <col:19> Inherited Implicit
| `-ConstAttr 0x265a21c0f70 <col:19> Inherited Implicit
|-FunctionDecl 0x265a21c1078 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x265a21c0fb0 <col:35> col:42 'long long'
|-FunctionDecl 0x265a21c1378 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x265a21c1210 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x265a21c1598 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x265a21c1450 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x265a21c1890 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x265a21c1670 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x265a21c16e8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21c1ab8 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x265a21c1970 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x265a21c1db0 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x265a21c1b90 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x265a21c1c08 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21bffd8 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x265a21c1e90 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x265a21c02d0 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x265a21c00b0 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x265a21c0128 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21c04f8 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x265a21c03b0 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x265a21c07f0 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x265a21c05d0 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x265a21c0648 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21c8110 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x265a21c08d0 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x265a21c0950 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x265a21c09c8 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x265a21c0a40 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x265a21c0da0 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x265a21c0e20 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x265a21c8898 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x265a21c8210 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x265a21c8290 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x265a21c8308 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21c8380 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21c8658 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x265a21c8fd0 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x265a21c8990 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x265a21c8a08 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x265a21c8a80 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x265a21c8ce8 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x265a21c8d68 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x265a21c9598 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x265a21c90c8 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x265a21c9140 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21c91b8 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21c9398 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x265a21c97d8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x265a21c9878 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x265a21c98e8 <col:47> Implicit
| `-ConstAttr 0x265a21c9940 <col:47> Implicit
|-FunctionDecl 0x265a21c9968 prev 0x265a21c97d8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x265a21c9688 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x265a21c9a58 <col:47> Inherited Implicit
| `-ConstAttr 0x265a21c9a80 <col:47> Inherited Implicit
|-FunctionDecl 0x265a21c9c08 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x265a21c9ca8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x265a21c9d18 <col:47> Implicit
| `-ConstAttr 0x265a21c9d70 <col:47> Implicit
|-FunctionDecl 0x265a21c9d98 prev 0x265a21c9c08 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x265a21c9ac0 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x265a21c9e88 <col:47> Inherited Implicit
| `-ConstAttr 0x265a21c9eb0 <col:47> Inherited Implicit
|-FunctionDecl 0x265a21c1fd8 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x265a21c2078 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x265a21c20e8 <col:49> Implicit
| `-ConstAttr 0x265a21c2140 <col:49> Implicit
|-FunctionDecl 0x265a21c2168 prev 0x265a21c1fd8 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x265a21c9ef0 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x265a21c2258 <col:49> Inherited Implicit
| `-ConstAttr 0x265a21c2280 <col:49> Inherited Implicit
|-FunctionDecl 0x265a21c2508 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x265a21c22e8 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x265a21c2368 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x265a21c2788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x265a21c26a8 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x265a21c2830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21c2d48 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x265a21c29c8 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x265a21c2a48 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x265a21c2ac0 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x265a21c2b40 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x265a21d1250 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x265a21c2e38 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x265a21d1000 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x265a21d1080 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x265a21d16b8 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x265a21d1338 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x265a21d13b8 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x265a21d1430 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21d14b0 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x265a21d1b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x265a21d18a0 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x265a21d1920 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x265a21d19a0 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x265a21d1bf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21cd0a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x265a21d1d38 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x265a21d1db8 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x265a21d1e30 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21d1eb0 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x265a21cd4f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x265a21cd258 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x265a21cd2d8 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x265a21cd358 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x265a21cd5b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21cda78 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x265a21cd6f8 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x265a21cd778 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x265a21cd7f0 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21cd870 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x265a21cdec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x265a21cdc28 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x265a21cdca8 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x265a21cdd28 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x265a21c9f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21ca1b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x265a21ca0d8 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x265a21ca408 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x265a21ca290 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x265a21ca308 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21ca788 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x265a21ca4e8 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x265a21ca568 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x265a21ca5e8 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x265a21cabf0 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x265a21ca870 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x265a21ca8f0 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x265a21ca970 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x265a21ca9e8 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21d2010 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x265a21cace0 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x265a21cad60 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x265a21cade0 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x265a21d2480 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x265a21d20f8 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x265a21d2178 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x265a21d21f8 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x265a21d2270 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21d27b8 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x265a21d2598 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x265a21d2618 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x265a21d2ad8 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x265a21d28b8 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x265a21d2938 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x265a21d2f38 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x265a21d2bb8 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x265a21d2c38 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x265a21d2cb0 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21d2d30 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x265a21cc328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x265a21cc088 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x265a21cc108 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x265a21cc188 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x265a21cc3e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21cc750 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x265a21cc528 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x265a21cc5a0 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a21ccaf8 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a21cc830 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x265a21cc8a8 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21cc920 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21cccb8 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x265a21ccbe0 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x265a21cafa0 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x265a21ccd90 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x265a21cce08 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21cb1f0 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x265a21cb080 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x265a21cb0f8 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a21cb590 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a21cb2d0 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x265a21cb348 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21cb3c0 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21cb948 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x265a21cb670 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x265a21cb6f0 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x265a21cb768 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x265a21cbda0 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a21cba28 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x265a21cbaa8 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x265a21cbb20 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21cbb98 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21cf310 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x265a21cbe88 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x265a21cbf00 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x265a21cefe0 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21cf060 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x265a21cf0d8 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x265a21cf790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x265a21cf4c0 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x265a21cf540 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x265a21cf5b8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a21cf848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21cfe48 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a21cf988 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x265a21cfa00 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x265a21cfa78 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21cfaf8 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x265a21cfb70 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21cfbe8 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21d6498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a21d6120 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x265a21d61a0 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x265a21d6218 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21d6290 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x265a21d6558 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21d6758 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x265a21d6908 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x265a21d6828 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x265a21d6b20 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x265a21d69e0 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x265a21d6de0 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x265a21d6e80 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a21d6ee8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x265a21d6f60 prev 0x265a21d6de0 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x265a21d6bf8 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x265a21d6c78 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x265a21d02c8 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x265a21cfff0 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x265a21d0070 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x265a21d00e8 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21d0648 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x265a21d06e8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x265a21d0750 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x265a21d07b8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x265a21d0838 prev 0x265a21d0648 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x265a21d03b0 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x265a21d0430 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x265a21d04b0 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x265a21d0ca0 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x265a21d0920 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x265a21d09a0 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x265a21d0a20 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x265a21d0a98 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21d7060 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x265a21d7100 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x265a21d7168 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x265a21d71d0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x265a21d7250 prev 0x265a21d7060 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x265a21d0d90 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x265a21d0e10 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x265a21d0e90 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x265a21d75f0 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x265a21d7338 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x265a21d73b8 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x265a21d7438 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x265a21d74b0 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21d7978 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x265a21d7a18 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x265a21d7a80 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x265a21d7ae8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x265a21d7b68 prev 0x265a21d7978 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x265a21d76e0 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x265a21d7760 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x265a21d77e0 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x265a21d8070 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x265a21d7c50 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x265a21d7cd0 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x265a21d7d50 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x265a21d7dc8 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21d8380 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x265a21d8420 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x265a21d8488 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x265a21d84f0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x265a21d8570 prev 0x265a21d8380 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x265a21d8160 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x265a21d81e0 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x265a21d8260 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x265a21d8910 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x265a21d8658 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x265a21d86d8 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x265a21d8758 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x265a21d87d0 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21d8bf0 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x265a21d8c90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a21d8cf8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x265a21d8d70 prev 0x265a21d8bf0 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x265a21d8a00 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x265a21d8a80 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x265a21d3108 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x265a21d8e50 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x265a21d8ed0 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x265a21d8f48 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21d33e0 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x265a21d3480 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x265a21d34e8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x265a21d3560 prev 0x265a21d33e0 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x265a21d31f0 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x265a21d3270 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x265a21d3918 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x265a21d3640 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x265a21d36c0 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x265a21d3738 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21d3ae0 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x265a21d3a00 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x265a21d3f38 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x265a21d3bb8 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x265a21d3c38 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x265a21d3cb0 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21d3d30 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x265a21d43a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x265a21d4108 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x265a21d4188 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x265a21d4208 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x265a21d4460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21d4890 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x265a21d4668 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x265a21d46e0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x265a21d4940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21d4e18 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x265a21d4b48 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x265a21d4bc0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x265a21d4c38 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x265a21d4ed0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21da408 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x265a21da090 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x265a21da110 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x265a21da188 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x265a21da200 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x265a21da910 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x265a21da4f8 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x265a21da578 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x265a21da5f0 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21da668 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x265a21da6e0 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21dae20 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x265a21daa00 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x265a21daa80 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x265a21daaf8 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21dab70 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x265a21dabe8 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x265a21db2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x265a21dafd8 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x265a21db0a0 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x265a21db118 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x265a21db3a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21db9a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a21db4e8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x265a21db568 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x265a21db5e0 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21db658 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x265a21db6d0 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a21db748 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a21dbed8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x265a21dbb68 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x265a21dbbe0 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x265a21dbc58 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21dbcd0 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x265a21dbf98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a21d52c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x265a21d5360 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x265a21d53c8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a21d5440 prev 0x265a21d52c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x265a21d5098 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21d5110 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x265a21d54f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x265a21d5548 <line:615:33> restrict
|-FunctionDecl 0x265a21d56e0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x265a21d55a0 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x265a21d5788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x265a21d5988 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x265a21d5a28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a21d5a98 prev 0x265a21d5988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x265a21d5808 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x265a21d5b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x265a21d5b98 <line:615:33> restrict
|-FunctionDecl 0x265a21d5e10 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x265a21d5eb0 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x265a21d5f18 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x265a21d5f90 prev 0x265a21d5e10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x265a21d5bf0 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x265a21d5c68 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x265a21d9080 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x265a21d90d8 <line:615:33> restrict
|-FunctionDecl 0x265a21d93f8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x265a21d9130 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x265a21d91a8 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21d9220 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x265a21d94b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x265a21d9508 <line:615:33> restrict
|-FunctionDecl 0x265a21d9638 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x265a21d9560 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x265a21d96e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x265a21d98d8 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x265a21d9760 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21d97d8 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x265a21d9988 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x265a21d99e0 <line:615:33> restrict
|-FunctionDecl 0x265a21d9cf8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x265a21d9a30 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21d9aa8 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21d9b20 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x265a21d9db0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x265a21d9e08 <line:615:33> restrict
|-FunctionDecl 0x265a22193a0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x265a21d9e60 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x265a21d9ed8 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21d9f50 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x265a2219458 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x265a22194b0 <line:615:33> restrict
|-FunctionDecl 0x265a2219880 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x265a2219508 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x265a2219580 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a22195f8 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2219670 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x265a2219940 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x265a2219998 <line:615:33> restrict
|-FunctionDecl 0x265a2219c98 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x265a22199f0 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x265a2219a68 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2219ae0 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2219b58 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x265a2219d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x265a2219db0 <line:615:33> restrict
|-FunctionDecl 0x265a221a228 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x265a2219e08 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x265a2219e80 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2219ef8 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2219f70 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2219fe8 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x265a221a2f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x265a221a348 <line:615:33> restrict
|-FunctionDecl 0x265a221e6b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x265a221e3f0 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x265a221e468 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a221e4e0 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x265a221eb08 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x265a221e798 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x265a221e810 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x265a221e888 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a221e908 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x265a221ef80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x265a221ecb8 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x265a221ed30 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x265a221edb0 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x265a221f038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a221f538 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x265a221f180 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x265a221f1f8 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x265a221f270 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a221f2f0 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x265a221f9b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x265a221f6e8 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x265a221f760 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x265a221f7e0 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x265a221fa68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a221ff28 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x265a221fbb0 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x265a221fc28 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x265a221fca0 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a221fd20 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x265a2221420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x265a22200d8 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x265a2220150 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x265a22201d0 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x265a22214d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2221840 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x265a2221618 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a2221698 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x265a2221be8 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x265a2221918 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a2221998 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x265a2221a10 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a2221fa8 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x265a2221cc8 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a2221d48 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x265a2221dc8 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x265a221b3c0 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x265a2222088 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a2222108 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x265a2222188 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x265a2222200 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a221b788 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x265a221b4a8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a221b528 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x265a221b5a8 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x265a221bbf0 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x265a221b868 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a221b8e8 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x265a221b968 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x265a221b9e0 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a221bfb8 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x265a221bcd8 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a221bd58 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x265a221bdd8 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x265a22234c0 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x265a221c098 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a221c118 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x265a221c198 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x265a221c210 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a2223888 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x265a22235a8 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a2223628 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x265a22236a8 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x265a2223cf0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x265a2223968 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a22239e8 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x265a2223a68 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x265a2223ae0 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a2224000 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x265a2223dd8 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a2223e58 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x265a221c3d0 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x265a22240d8 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a2224158 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x265a22241d0 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a221c6e0 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x265a221c4b0 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a221c530 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x265a221ca88 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x265a221c7b8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a221c838 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x265a221c8b0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a221cd00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x265a221cc28 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x265a221cda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a221d258 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x265a221cee8 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x265a221cf60 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x265a221cfd8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a221d050 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x265a2222680 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a221d348 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x265a2222430 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x265a22224a8 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x265a22228d8 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x265a2222760 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x265a2222b28 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x265a22229a8 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x265a2222e20 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x265a2222bf8 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a2222c70 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a2222fd8 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x265a2222ef8 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x265a22232d0 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x265a22230a8 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a2223120 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a221d4d8 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x265a22233a8 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x265a221d7d0 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x265a221d5a8 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a221d620 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a221da28 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x265a221d8a8 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x265a221dd20 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x265a221daf8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a221db70 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a221e178 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x265a221de00 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x265a221de78 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x265a221def0 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a221df70 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x265a222b710 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x265a221e328 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x265a222b4c0 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x265a222b540 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x265a222b7c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a222bc88 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x265a222b910 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x265a222b988 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x265a222ba00 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a222ba80 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x265a222c100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x265a222be38 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x265a222beb0 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x265a222bf30 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x265a222c1b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a222c3d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x265a222c2f8 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x265a22265e8 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x265a2226470 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x265a22264e8 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a22268e0 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x265a22266c0 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a2226740 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x265a22267c0 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x265a2226c78 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x265a22269c0 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a2226a40 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x265a2226ac0 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x265a2226b38 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a2226f80 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x265a2226d60 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a2226de0 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x265a2226e60 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x265a2227318 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x265a2227060 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x265a22270e0 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x265a2227160 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x265a22271d8 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a2229650 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x265a2227408 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x265a22294b8 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x265a2229530 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2229c18 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x265a2229738 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x265a22297b0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2229830 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x265a22298b0 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x265a2229930 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x265a22299b0 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x265a222a110 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x265a2229dd8 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x265a2229e58 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x265a2229ed8 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x265a2229f58 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x265a222a1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a22246c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x265a222a318 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x265a222a390 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a222a410 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x265a2224450 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x265a22244d0 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x265a2224550 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x265a2224b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x265a2224888 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x265a2224908 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x265a2224988 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x265a2224a08 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x265a2224c08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a22250c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x265a2224d50 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x265a2224dc8 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2224e48 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x265a2224ec8 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x265a2225548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x265a2225278 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x265a22252f8 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x265a2225378 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x265a2225600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a22259e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x265a22257b8 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x265a2225838 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x265a2225d60 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x265a2225b38 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x265a2225bb8 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x265a22260e0 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x265a2225eb8 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x265a2225f38 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x265a222a4f8 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x265a22261b8 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x265a2226238 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x265a22262b0 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a222a8a8 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x265a222a5d8 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x265a222a658 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x265a222a6d0 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a222ac58 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x265a222a988 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x265a222aa08 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x265a222aa80 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x265a222af30 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x265a222afd0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x265a222b038 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x265a222b0b0 <col:46> Implicit
|-FunctionDecl 0x265a222b108 prev 0x265a222af30 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x265a222ad40 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x265a222adc0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x265a222b200 <col:46> Inherited Implicit
|-FunctionDecl 0x265a222b3c0 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x265a222d4e0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x265a222d548 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x265a222d5c0 <col:46> Implicit
|-FunctionDecl 0x265a222d618 prev 0x265a222b3c0 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x265a222b240 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x265a222b2c0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x265a222d710 <col:46> Inherited Implicit
|-FunctionDecl 0x265a222dc28 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x265a222d750 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x265a222d7c8 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a222d848 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x265a222d8c8 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x265a222d948 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x265a222d9c8 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x265a222e1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x265a222dde8 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x265a222de68 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x265a222dee8 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x265a222df68 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x265a222dfe8 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x265a222e298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a222c560 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x265a222e400 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x265a222c780 <line:831:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x265a222c638 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x265a222c938 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x265a222c858 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x265a222cbf8 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x265a222ca10 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x265a222ca90 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x265a222cec0 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x265a222cf60 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x265a222cfc8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x265a222d040 <col:30> Implicit
|-FunctionDecl 0x265a222d098 prev 0x265a222cec0 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x265a222ccd8 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x265a222cd58 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x265a222d190 <col:30> Inherited Implicit
|-FunctionDecl 0x265a222d3c0 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x265a222d460 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x265a222e4f0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x265a222e568 <col:34> Implicit
|-FunctionDecl 0x265a222e5c0 prev 0x265a222d3c0 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x265a222d1d0 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x265a222d250 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x265a222e6b8 <col:34> Inherited Implicit
|-FunctionDecl 0x265a222e878 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x265a222e918 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x265a222e980 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x265a222e9f8 <col:30> Implicit
|-FunctionDecl 0x265a222ea50 prev 0x265a222e878 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x265a222e6f8 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x265a222e778 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x265a222eb48 <col:30> Inherited Implicit
|-FunctionDecl 0x265a222ed08 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x265a222eda8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x265a222ee10 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x265a222ee88 <col:34> Implicit
|-FunctionDecl 0x265a222eee0 prev 0x265a222ed08 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x265a222eb88 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x265a222ec08 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x265a222efd8 <col:34> Inherited Implicit
|-FunctionDecl 0x265a222f398 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x265a222f018 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x265a222f098 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x265a222f118 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x265a222f190 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x265a222f870 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x265a222f5d8 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x265a222f658 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x265a222f6d8 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x265a222f928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a222ff10 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x265a222fb30 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x265a222fbb0 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x265a222fc30 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x265a222fcb0 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x265a222fd30 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x265a222ffd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2228780 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x265a2230120 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x265a22301a0 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x265a2230218 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2230298 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x265a2230310 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2230390 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x265a2230408 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2230488 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x265a2228490 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2228b30 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x265a2228898 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x265a2228918 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x265a2228998 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x265a2228e18 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x265a2228c10 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x265a2228c88 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x265a2228d00 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x265a22293b8 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a2228ef8 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x265a2228f70 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2228fe8 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x265a2229060 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x265a22290d8 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x265a2229150 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x265a2237a80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a2237668 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x265a22376e0 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x265a2237758 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x265a22377d0 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x265a2237848 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x265a2237b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2237e00 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:885:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x265a2237c88 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x265a2237fb0 <line:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x265a2237ed0 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x265a2238258 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x265a2238080 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x265a22380f8 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x265a2232668 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x265a2238330 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x265a22383a8 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x265a2238420 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x265a2238498 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2232ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x265a2232810 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x265a2232888 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x265a2232900 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x265a2232b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a22331a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x265a2232d88 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x265a2232e00 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x265a2232e78 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x265a2232ef0 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x265a2232f68 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x265a2233268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2231a70 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x265a22333a8 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x265a2233420 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x265a2233498 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2231520 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x265a2231598 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2231610 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x265a2231688 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2231700 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x265a2231778 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2231d90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x265a2231c88 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x265a2231e38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x265a2232228 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x265a2232048 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x265a22320c8 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x265a22322d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x265a22366b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x265a2236570 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x265a2236758 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x265a2236d00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x265a2236a40 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x265a2236ac0 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x265a2236b40 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x265a2236bc0 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x265a2236dc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x265a2236eb8 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a22373f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x265a2237130 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x265a22371b0 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x265a2237230 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x265a22372b0 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x265a22374b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x265a22335f0 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2233a88 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x265a2233868 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x265a22338e8 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x265a2233968 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x265a2233b40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x265a2233c38 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a22340d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x265a2233eb0 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x265a2233f30 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x265a2233fb0 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x265a2234188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x265a2234280 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2235780 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x265a2235560 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x265a22355e0 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x265a2235660 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x265a2235838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x265a2235930 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2235bc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x265a2235ae8 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x265a2235c70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x265a2236050 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x265a2235e38 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x265a2235eb8 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x265a2235f38 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x265a2236108 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x265a22305b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x265a22363d0 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x265a2236450 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x265a22364d0 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x265a2230668 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x265a2230760 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x265a2230948 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x265a2230870 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-RecordDecl 0x265a2230a08 <.//openssl//file_jk/after\crypto\ec/ec_lcl.h:52:1, line:180:1> line:52:8 struct ec_method_st definition
| |-FieldDecl 0x265a2230ad8 <line:54:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x265a2230b48 <line:56:5, col:9> col:9 field_type 'int'
| |-FieldDecl 0x265a2230ce8 <line:61:5, col:34> col:11 group_init 'int (*)(int *)'
| |-FieldDecl 0x265a2230eb0 <line:62:5, col:37> col:12 group_finish 'void (*)(int *)'
| |-FieldDecl 0x265a2230fc0 <line:63:5, col:43> col:12 group_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x265a2231230 <line:64:5, col:52> col:11 group_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x265a223c708 <line:67:5, line:68:54> line:67:11 group_set_curve 'int (*)(int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x265a223cb18 <line:69:5, line:70:37> line:69:11 group_get_curve 'int (*)(const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x265a223cce8 <line:72:5, col:46> col:11 group_get_degree 'int (*)(const int *)'
| |-FieldDecl 0x265a223ce00 <line:73:5, col:46> col:11 group_order_bits 'int (*)(const int *)'
| |-FieldDecl 0x265a223d070 <line:75:5, col:64> col:11 group_check_discriminant 'int (*)(const int *, int *)'
| |-FieldDecl 0x265a223d188 <line:80:5, col:34> col:11 point_init 'int (*)(int *)'
| |-FieldDecl 0x265a223d298 <line:81:5, col:37> col:12 point_finish 'void (*)(int *)'
| |-FieldDecl 0x265a223d3a8 <line:82:5, col:43> col:12 point_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x265a223d548 <line:83:5, col:52> col:11 point_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x265a223d710 <line:92:5, col:63> col:11 point_set_to_infinity 'int (*)(const int *, int *)'
| |-FieldDecl 0x265a223dbc0 <line:93:5, line:96:76> line:93:11 point_set_Jprojective_coordinates_GFp 'int (*)(const int *, int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x265a223e070 <line:97:5, line:100:59> line:97:11 point_get_Jprojective_coordinates_GFp 'int (*)(const int *, const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x265a223e488 <line:101:5, line:103:50> line:101:11 point_set_affine_coordinates 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x265a223e8a8 <line:104:5, line:105:72> line:104:11 point_get_affine_coordinates 'int (*)(const int *, const int *, int *, int *, int *)'
| |-FieldDecl 0x265a223ecb8 <line:106:5, line:108:54> line:106:11 point_set_compressed_coordinates 'int (*)(const int *, int *, const int *, int, int *)'
| |-FieldDecl 0x265a223f1d8 <line:110:5, line:112:46> line:110:14 point2oct 'size_t (*)(const int *, const int *, int, unsigned char *, size_t, int *)'
| |-FieldDecl 0x265a223f660 <line:113:5, line:114:43> line:113:11 oct2point 'int (*)(const int *, int *, const unsigned char *, size_t, int *)'
| |-FieldDecl 0x265a223f998 <line:116:5, line:117:44> line:116:11 add 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x265a223fd20 <line:118:5, col:75> col:11 dbl 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x265a2240018 <line:119:5, col:58> col:11 invert 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x265a2240280 <line:123:5, col:62> col:11 is_at_infinity 'int (*)(const int *, const int *)'
| |-FieldDecl 0x265a2240578 <line:124:5, col:69> col:11 is_on_curve 'int (*)(const int *, const int *, int *)'
| |-FieldDecl 0x265a22398c0 <line:125:5, line:126:31> line:125:11 point_cmp 'int (*)(const int *, const int *, const int *, int *)'
| |-FieldDecl 0x265a2239ae8 <line:128:5, col:63> col:11 make_affine 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x265a2239f60 <line:129:5, line:130:40> line:129:11 points_make_affine 'int (*)(const int *, size_t, int **, int *)'
| |-FieldDecl 0x265a2240610 <line:136:5, line:138:25> line:136:11 mul 'int (*)(const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-FieldDecl 0x265a2240880 <line:139:5, col:54> col:11 precompute_mult 'int (*)(int *, int *)'
| |-FieldDecl 0x265a2240998 <line:140:5, col:55> col:11 have_precompute_mult 'int (*)(const int *)'
| |-FieldDecl 0x265a2240cd0 <line:148:5, line:149:48> line:148:11 field_mul 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x265a2240f80 <line:150:5, col:77> col:11 field_sqr 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x265a22412b8 <line:151:5, line:152:48> line:151:11 field_div 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x265a2241568 <line:159:5, col:77> col:11 field_inv 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x265a2241860 <line:161:5, line:162:34> line:161:11 field_encode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x265a2241b10 <line:164:5, line:165:34> line:164:11 field_decode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x265a2241d38 <line:166:5, col:67> col:11 field_set_to_one 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x265a2242060 <line:168:5, col:75> col:14 priv2oct 'size_t (*)(const int *, unsigned char *, size_t)'
| |-FieldDecl 0x265a2242388 <line:169:5, col:72> col:11 oct2priv 'int (*)(int *, const unsigned char *, size_t)'
| |-FieldDecl 0x265a2242528 <line:170:5, col:61> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x265a223a5f0 <line:171:5, col:32> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x265a223a708 <line:172:5, col:40> col:11 keycheck 'int (*)(const int *)'
| |-FieldDecl 0x265a223a820 <line:173:5, col:35> col:11 keygenpub 'int (*)(int *)'
| |-FieldDecl 0x265a223a9c0 <line:174:5, col:50> col:11 keycopy 'int (*)(int *, const int *)'
| |-FieldDecl 0x265a223aad0 <line:175:5, col:36> col:12 keyfinish 'void (*)(int *)'
| |-FieldDecl 0x265a223aee0 <line:177:5, line:178:72> line:177:11 ecdh_compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| `-FieldDecl 0x265a223b108 <line:179:5, col:77> col:11 blind_coordinates 'int (*)(const int *, int *, int *)'
|-RecordDecl 0x265a223b160 <line:185:9, col:16> col:16 struct nistp224_pre_comp_st
|-TypedefDecl 0x265a223b278 <col:1, col:37> col:37 referenced NISTP224_PRE_COMP 'struct nistp224_pre_comp_st':'struct nistp224_pre_comp_st'
| `-ElaboratedType 0x265a223b220 'struct nistp224_pre_comp_st' sugar
|   `-RecordType 0x265a223b200 'struct nistp224_pre_comp_st'
|     `-Record 0x265a223b160 'nistp224_pre_comp_st'
|-RecordDecl 0x265a223b2e8 <line:186:9, col:16> col:16 struct nistp256_pre_comp_st
|-TypedefDecl 0x265a223b3f8 <col:1, col:37> col:37 referenced NISTP256_PRE_COMP 'struct nistp256_pre_comp_st':'struct nistp256_pre_comp_st'
| `-ElaboratedType 0x265a223b3a0 'struct nistp256_pre_comp_st' sugar
|   `-RecordType 0x265a223b380 'struct nistp256_pre_comp_st'
|     `-Record 0x265a223b2e8 'nistp256_pre_comp_st'
|-RecordDecl 0x265a223b468 <line:187:9, col:16> col:16 struct nistp521_pre_comp_st
|-TypedefDecl 0x265a2242630 <col:1, col:37> col:37 referenced NISTP521_PRE_COMP 'struct nistp521_pre_comp_st':'struct nistp521_pre_comp_st'
| `-ElaboratedType 0x265a223b520 'struct nistp521_pre_comp_st' sugar
|   `-RecordType 0x265a223b500 'struct nistp521_pre_comp_st'
|     `-Record 0x265a223b468 'nistp521_pre_comp_st'
|-RecordDecl 0x265a22426a0 <line:188:9, col:16> col:16 struct nistz256_pre_comp_st
|-TypedefDecl 0x265a22427b8 <col:1, col:37> col:37 referenced NISTZ256_PRE_COMP 'struct nistz256_pre_comp_st':'struct nistz256_pre_comp_st'
| `-ElaboratedType 0x265a2242760 'struct nistz256_pre_comp_st' sugar
|   `-RecordType 0x265a2242740 'struct nistz256_pre_comp_st'
|     `-Record 0x265a22426a0 'nistz256_pre_comp_st'
|-RecordDecl 0x265a2242828 <line:189:9, col:16> col:16 struct ec_pre_comp_st
|-TypedefDecl 0x265a2242938 <col:1, col:31> col:31 referenced EC_PRE_COMP 'struct ec_pre_comp_st':'struct ec_pre_comp_st'
| `-ElaboratedType 0x265a22428e0 'struct ec_pre_comp_st' sugar
|   `-RecordType 0x265a22428c0 'struct ec_pre_comp_st'
|     `-Record 0x265a22667d0 'ec_pre_comp_st'
|-RecordDecl 0x265a22429a8 <line:191:1, line:256:1> line:191:8 invalid struct ec_group_st definition
| |-FieldDecl 0x265a2242a78 <line:192:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x265a2242ae8 <line:193:5, col:15> col:15 invalid generator 'int *'
| |-FieldDecl 0x265a2242b58 <line:194:5, col:13> col:13 invalid order 'int *'
| |-FieldDecl 0x265a2242bc8 <col:5, col:21> col:21 invalid cofactor 'int *'
| |-FieldDecl 0x265a2242c38 <line:195:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x265a2242ca8 <line:196:5, col:9> col:9 asn1_flag 'int'
| |-FieldDecl 0x265a2242d18 <line:197:5, col:29> col:29 invalid asn1_form 'int'
| |-FieldDecl 0x265a2242d88 <line:198:5, col:20> col:20 seed 'unsigned char *'
| |-FieldDecl 0x265a2242df0 <line:200:5, col:12> col:12 seed_len 'size_t':'unsigned long long'
| |-FieldDecl 0x265a2242e60 <line:210:5, col:13> col:13 invalid field 'int *'
| |-FieldDecl 0x265a2242f60 <line:218:5, col:15> col:9 poly 'int [6]'
| |-FieldDecl 0x265a2242fd0 <line:226:5, col:13> col:13 invalid a 'int *'
| |-FieldDecl 0x265a2243040 <col:5, col:17> col:17 invalid b 'int *'
| |-FieldDecl 0x265a22430b0 <line:228:5, col:9> col:9 a_is_minus3 'int'
| |-FieldDecl 0x265a2243120 <line:230:5, col:11> col:11 field_data1 'void *'
| |-FieldDecl 0x265a2243190 <line:232:5, col:11> col:11 field_data2 'void *'
| |-FieldDecl 0x265a2243520 <line:234:5, line:235:36> line:234:11 field_mod_func 'int (*)(int *, const int *, const int *, int *)'
| |-FieldDecl 0x265a2243590 <line:237:5, col:18> col:18 invalid mont_data 'int *'
| |-EnumDecl 0x265a2244650 <line:244:5, line:248:5> line:244:5
| | |-EnumConstantDecl 0x265a2244730 <line:245:9> col:9 PCT_none 'int'
| | |-EnumConstantDecl 0x265a2244788 <line:246:9> col:9 PCT_nistp224 'int'
| | |-EnumConstantDecl 0x265a22447e0 <col:23> col:23 PCT_nistp256 'int'
| | |-EnumConstantDecl 0x265a2244838 <col:37> col:37 PCT_nistp521 'int'
| | |-EnumConstantDecl 0x265a2244890 <col:51> col:51 PCT_nistz256 'int'
| | `-EnumConstantDecl 0x265a22448e8 <line:247:9> col:9 referenced PCT_ec 'int'
| |-FieldDecl 0x265a2244998 <line:244:5, line:248:7> col:7 pre_comp_type 'enum (anonymous enum at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:244:5)':'enum ec_group_st::(anonymous at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:244:5)'
| |-RecordDecl 0x265a22449f0 <line:249:5, line:255:5> line:249:5 union definition
| | |-FieldDecl 0x265a2244b38 <line:250:9, col:28> col:28 nistp224 'NISTP224_PRE_COMP *'
| | |-FieldDecl 0x265a2244c18 <line:251:9, col:28> col:28 nistp256 'NISTP256_PRE_COMP *'
| | |-FieldDecl 0x265a2244cf8 <line:252:9, col:28> col:28 nistp521 'NISTP521_PRE_COMP *'
| | |-FieldDecl 0x265a2244dd8 <line:253:9, col:28> col:28 nistz256 'NISTZ256_PRE_COMP *'
| | `-FieldDecl 0x265a2244eb8 <line:254:9, col:22> col:22 ec 'EC_PRE_COMP *'
| `-FieldDecl 0x265a2244f68 <line:249:5, line:255:7> col:7 pre_comp 'union (anonymous union at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:249:5)':'union ec_group_st::(anonymous at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:249:5)'
|-RecordDecl 0x265a2244fc0 <line:263:1, line:276:1> line:263:8 invalid struct ec_key_st definition
| |-FieldDecl 0x265a2245098 <line:264:5, col:26> col:26 invalid meth 'const int *'
| |-FieldDecl 0x265a2245108 <line:265:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x265a2245178 <line:266:5, col:9> col:9 version 'int'
| |-FieldDecl 0x265a22451e8 <line:267:5, col:15> col:15 invalid group 'int *'
| |-FieldDecl 0x265a2245258 <line:268:5, col:15> col:15 invalid pub_key 'int *'
| |-FieldDecl 0x265a22452c8 <line:269:5, col:13> col:13 invalid priv_key 'int *'
| |-FieldDecl 0x265a2245338 <line:270:5, col:18> col:18 enc_flag 'unsigned int'
| |-FieldDecl 0x265a22453a8 <line:271:5, col:29> col:29 invalid conv_form 'int'
| |-FieldDecl 0x265a2245418 <line:272:5, col:9> col:9 references 'int'
| |-FieldDecl 0x265a2245488 <line:273:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x265a22454f8 <line:274:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x265a2245568 <line:275:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x265a22455c0 <line:278:1, line:292:1> line:278:8 invalid struct ec_point_st definition
| |-FieldDecl 0x265a22476d8 <line:279:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x265a2247748 <line:281:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x265a22477b8 <line:286:5, col:13> col:13 invalid X 'int *'
| |-FieldDecl 0x265a2247828 <line:287:5, col:13> col:13 invalid Y 'int *'
| |-FieldDecl 0x265a2247898 <line:288:5, col:13> col:13 invalid Z 'int *'
| `-FieldDecl 0x265a2247908 <line:290:5, col:9> col:9 Z_is_one 'int'
|-FunctionDecl 0x265a2247a98 <line:295:1, line:305:1> line:295:24 invalid ec_point_is_compat 'int (const int *, const int *)' static
| |-ParmVarDecl 0x265a2247978 <col:43, col:59> col:59 invalid point 'const int *'
| |-ParmVarDecl 0x265a22479f8 <line:296:43, col:59> col:59 invalid group 'const int *'
| `-CompoundStmt 0x265a2247c50 <line:297:1, line:305:1>
|   |-IfStmt 0x265a2247c00 <line:298:5, line:302:16>
|   | |-OpaqueValueExpr 0x265a2247be8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x265a2247bd8 <col:9, col:16>
|   |   `-IntegerLiteral 0x265a2247bb0 <col:16> 'int' 0
|   `-ReturnStmt 0x265a2247c40 <line:304:5, col:12>
|     `-IntegerLiteral 0x265a2247c18 <col:12> 'int' 1
|-FunctionDecl 0x265a2247d78 <line:308:1, col:64> col:20 EC_nistp224_pre_comp_dup 'NISTP224_PRE_COMP *(NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x265a2247c80 <col:45, col:63> col:64 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x265a2247f38 <line:309:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x265a2247e48 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x265a22480f8 <line:310:1, col:64> col:20 EC_nistp521_pre_comp_dup 'NISTP521_PRE_COMP *(NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x265a2248008 <col:45, col:63> col:64 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x265a22482b8 <line:311:1, col:64> col:20 EC_nistz256_pre_comp_dup 'NISTZ256_PRE_COMP *(NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x265a22481c8 <col:45, col:63> col:64 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x265a2248418 prev 0x265a2247f38 <line:312:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x265a2248388 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x265a22485c8 <line:313:1, col:46> col:14 EC_ec_pre_comp_dup 'EC_PRE_COMP *(EC_PRE_COMP *)'
| `-ParmVarDecl 0x265a22484d0 <col:33, col:45> col:46 'EC_PRE_COMP *'
|-FunctionDecl 0x265a2246730 <line:315:1, col:38> col:6 invalid EC_pre_comp_free 'void (int *)'
| `-ParmVarDecl 0x265a22466a0 <col:23, col:33> col:33 invalid group 'int *'
|-FunctionDecl 0x265a22468d8 <line:316:1, col:51> col:6 EC_nistp224_pre_comp_free 'void (NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x265a22467e8 <col:32, col:50> col:51 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x265a2246a98 <line:317:1, col:51> col:6 EC_nistp256_pre_comp_free 'void (NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x265a22469a8 <col:32, col:50> col:51 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x265a2246c58 <line:318:1, col:51> col:6 EC_nistp521_pre_comp_free 'void (NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x265a2246b68 <col:32, col:50> col:51 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x265a2246e18 <line:319:1, col:51> col:6 EC_nistz256_pre_comp_free 'void (NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x265a2246d28 <col:32, col:50> col:51 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x265a2246fd8 <line:320:1, col:39> col:6 used EC_ec_pre_comp_free 'void (EC_PRE_COMP *)'
| `-ParmVarDecl 0x265a2246ee8 <col:26, col:38> col:39 'EC_PRE_COMP *'
|-FunctionDecl 0x265a2247490 <line:326:1, line:328:25> line:326:5 invalid ec_wNAF_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x265a22470b0 <col:17, col:33> col:33 invalid group 'const int *'
| |-ParmVarDecl 0x265a2247130 <col:40, col:50> col:50 invalid r 'int *'
| |-ParmVarDecl 0x265a22471b0 <col:53, col:67> col:67 invalid scalar 'const int *'
| |-ParmVarDecl 0x265a2247228 <line:327:17, col:24> col:24 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a22472b8 <col:29, <invalid sloc>> col:45 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x265a2247348 <col:55, <invalid sloc>> col:69 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x265a22473c8 <line:328:17, <invalid sloc>> col:25 invalid 'int *'
|-FunctionDecl 0x265a22486c8 <line:329:1, col:54> col:5 invalid ec_wNAF_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x265a2247580 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x265a2247600 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x265a2248828 <line:330:1, col:55> col:5 invalid ec_wNAF_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x265a2248790 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x265a2248980 <line:333:1, col:40> col:5 invalid ec_GFp_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x265a22488e8 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x265a2248ad0 <line:334:1, col:43> col:6 invalid ec_GFp_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x265a2248a40 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x265a2248c20 <line:335:1, col:49> col:6 invalid ec_GFp_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x265a2248b90 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x265a2248e00 <line:336:1, col:58> col:5 invalid ec_GFp_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x265a2248ce0 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x265a2248d60 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x265a2249180 <line:337:1, line:338:77> line:337:5 invalid ec_GFp_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2248ec8 <col:35, <invalid sloc>> col:45 invalid 'int *'
| |-ParmVarDecl 0x265a2248f48 <col:47, col:61> col:61 invalid p 'const int *'
| |-ParmVarDecl 0x265a2248fc8 <line:338:35, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x265a2249048 <col:52, col:66> col:66 invalid b 'const int *'
| `-ParmVarDecl 0x265a22490c8 <col:69, <invalid sloc>> col:77 invalid 'int *'
|-FunctionDecl 0x265a2249518 <line:339:1, line:340:54> line:339:5 invalid ec_GFp_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x265a2249260 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| |-ParmVarDecl 0x265a22492e0 <col:53, col:61> col:61 invalid p 'int *'
| |-ParmVarDecl 0x265a2249360 <col:64, col:72> col:72 invalid a 'int *'
| |-ParmVarDecl 0x265a22493e0 <line:340:35, col:43> col:43 invalid b 'int *'
| `-ParmVarDecl 0x265a2249460 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x265a22496a0 <line:341:1, col:52> col:5 invalid ec_GFp_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x265a22495f8 <col:36, <invalid sloc>> col:52 invalid 'const int *'
|-FunctionDecl 0x265a2249880 <line:342:1, col:70> col:5 invalid ec_GFp_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x265a2249760 <col:44, <invalid sloc>> col:60 invalid 'const int *'
| `-ParmVarDecl 0x265a22497e0 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x265a22499e0 <line:343:1, col:40> col:5 invalid ec_GFp_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x265a2249948 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x265a2249b30 <line:344:1, col:43> col:6 invalid ec_GFp_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x265a2249aa0 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x265a2249c80 <line:345:1, col:49> col:6 invalid ec_GFp_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x265a2249bf0 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x265a2249e60 <line:346:1, col:58> col:5 invalid ec_GFp_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x265a2249d40 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x265a2249dc0 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x265a224a048 <line:347:1, col:69> col:5 invalid ec_GFp_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x265a2249f28 <col:41, <invalid sloc>> col:57 invalid 'const int *'
| `-ParmVarDecl 0x265a2249fa8 <col:59, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x265a224a450 <line:348:1, line:351:76> line:348:5 invalid ec_GFp_simple_set_Jprojective_coordinates_GFp 'int (const int *, int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a224a110 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x265a224a190 <line:349:51, <invalid sloc>> col:61 invalid 'int *'
| |-ParmVarDecl 0x265a224a210 <col:63, col:77> col:77 invalid x 'const int *'
| |-ParmVarDecl 0x265a224a290 <line:350:51, col:65> col:65 invalid y 'const int *'
| |-ParmVarDecl 0x265a224a310 <line:351:51, col:65> col:65 invalid z 'const int *'
| `-ParmVarDecl 0x265a224a390 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x265a2243818 <line:352:1, line:355:59> line:352:5 invalid ec_GFp_simple_get_Jprojective_coordinates_GFp 'int (const int *, const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x265a224a538 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x265a224a5b8 <line:353:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x265a224a638 <col:69, col:77> col:77 invalid x 'int *'
| |-ParmVarDecl 0x265a2243658 <line:354:51, col:59> col:59 invalid y 'int *'
| |-ParmVarDecl 0x265a22436d8 <col:62, col:70> col:70 invalid z 'int *'
| `-ParmVarDecl 0x265a2243758 <line:355:51, <invalid sloc>> col:59 invalid 'int *'
|-FunctionDecl 0x265a2243bb8 <line:356:1, line:358:73> line:356:5 invalid ec_GFp_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2243900 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x265a2243980 <col:66, <invalid sloc>> col:76 invalid 'int *'
| |-ParmVarDecl 0x265a2243a00 <line:357:48, col:62> col:62 invalid x 'const int *'
| |-ParmVarDecl 0x265a2243a80 <line:358:48, col:62> col:62 invalid y 'const int *'
| `-ParmVarDecl 0x265a2243b00 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x265a2243f50 <line:359:1, line:361:67> line:359:5 invalid ec_GFp_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x265a2243c98 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x265a2243d18 <line:360:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x265a2243d98 <col:66, col:74> col:74 invalid x 'int *'
| |-ParmVarDecl 0x265a2243e18 <line:361:48, col:56> col:56 invalid y 'int *'
| `-ParmVarDecl 0x265a2243e98 <col:59, <invalid sloc>> col:67 invalid 'int *'
|-FunctionDecl 0x265a22442e8 <line:362:1, line:364:54> line:362:5 invalid ec_GFp_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x265a2244030 <col:46, <invalid sloc>> col:62 invalid 'const int *'
| |-ParmVarDecl 0x265a22440b0 <col:64, <invalid sloc>> col:74 invalid 'int *'
| |-ParmVarDecl 0x265a2244130 <line:363:46, col:60> col:60 invalid x 'const int *'
| |-ParmVarDecl 0x265a22441b0 <col:63, col:67> col:67 y_bit 'int'
| `-ParmVarDecl 0x265a2244230 <line:364:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x265a224b778 <line:365:1, line:367:72> line:365:8 invalid ec_GFp_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x265a22443c8 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x265a2244448 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| |-ParmVarDecl 0x265a22444c8 <line:366:32, col:56> col:56 invalid form 'int'
| |-ParmVarDecl 0x265a2244548 <line:367:32, col:47> col:47 buf 'unsigned char *'
| |-ParmVarDecl 0x265a22445c0 <col:52, col:59> col:59 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a224b6c0 <col:64, <invalid sloc>> col:72 invalid 'int *'
|-FunctionDecl 0x265a224bb10 <line:368:1, line:369:75> line:368:5 invalid ec_GFp_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x265a224b860 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x265a224b8e0 <col:47, <invalid sloc>> col:57 invalid 'int *'
| |-ParmVarDecl 0x265a224b960 <line:369:29, col:50> col:50 buf 'const unsigned char *'
| |-ParmVarDecl 0x265a224b9d8 <col:55, col:62> col:62 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a224ba58 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x265a224bea8 <line:370:1, line:371:50> line:370:5 invalid ec_GFp_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a224bbf0 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x265a224bc70 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x265a224bcf0 <col:54, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x265a224bd70 <line:371:23, col:39> col:39 invalid b 'const int *'
| `-ParmVarDecl 0x265a224bdf0 <col:42, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x265a224c1b8 <line:372:1, line:373:31> line:372:5 invalid ec_GFp_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x265a224bf88 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x265a224c008 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x265a224c088 <col:54, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x265a224c108 <line:373:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x265a224c438 <line:374:1, col:64> col:5 invalid ec_GFp_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x265a224c290 <col:26, <invalid sloc>> col:42 invalid 'const int *'
| |-ParmVarDecl 0x265a224c310 <col:44, <invalid sloc>> col:54 invalid 'int *'
| `-ParmVarDecl 0x265a224c390 <col:56, <invalid sloc>> col:64 invalid 'int *'
|-FunctionDecl 0x265a2245660 <line:375:1, col:68> col:5 invalid ec_GFp_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x265a224c508 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| `-ParmVarDecl 0x265a224c588 <col:52, <invalid sloc>> col:68 invalid 'const int *'
|-FunctionDecl 0x265a22458d0 <line:376:1, col:75> col:5 invalid ec_GFp_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2245728 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x265a22457a8 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| `-ParmVarDecl 0x265a2245828 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x265a2245bd0 <line:377:1, line:378:31> line:377:5 invalid ec_GFp_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a22459a0 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x265a2245a20 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x265a2245aa0 <col:60, col:76> col:76 invalid b 'const int *'
| `-ParmVarDecl 0x265a2245b20 <line:378:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x265a2245e50 <line:379:1, col:69> col:5 invalid ec_GFp_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x265a2245ca8 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x265a2245d28 <col:49, <invalid sloc>> col:59 invalid 'int *'
| `-ParmVarDecl 0x265a2245da8 <col:61, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x265a2246158 <line:380:1, line:381:60> line:380:5 invalid ec_GFp_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x265a2245f20 <col:38, <invalid sloc>> col:54 invalid 'const int *'
| |-ParmVarDecl 0x265a2245f98 <col:56, col:63> col:63 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2246028 <line:381:38, <invalid sloc>> col:48 invalid 'int **':'int **'
| `-ParmVarDecl 0x265a22460a8 <col:52, <invalid sloc>> col:60 invalid 'int *'
|-FunctionDecl 0x265a22464e8 <line:382:1, line:383:54> line:382:5 invalid ec_GFp_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2246230 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x265a22462b0 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x265a2246330 <col:58, col:72> col:72 invalid a 'const int *'
| |-ParmVarDecl 0x265a22463b0 <line:383:29, col:43> col:43 invalid b 'const int *'
| `-ParmVarDecl 0x265a2246430 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x265a22508c0 <line:384:1, line:385:37> line:384:5 invalid ec_GFp_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x265a22465c8 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x265a2250710 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x265a2250790 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x265a2250810 <line:385:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x265a2250bc8 <line:386:1, line:387:37> line:386:5 invalid ec_GFp_simple_field_inv 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x265a2250998 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x265a2250a18 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x265a2250a98 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x265a2250b18 <line:387:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x265a2250e48 <line:388:1, line:389:48> line:388:5 invalid ec_GFp_simple_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x265a2250ca0 <col:37, col:53> col:53 invalid group 'const int *'
| |-ParmVarDecl 0x265a2250d20 <col:60, col:70> col:70 invalid p 'int *'
| `-ParmVarDecl 0x265a2250da0 <line:389:37, col:45> col:45 invalid ctx 'int *'
|-FunctionDecl 0x265a2250fb0 <line:392:1, col:38> col:5 invalid ec_GFp_mont_group_init 'int (int *)'
| `-ParmVarDecl 0x265a2250f18 <col:28, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x265a2251328 <line:393:1, line:394:58> line:393:5 invalid ec_GFp_mont_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2251070 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x265a22510f0 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x265a2251170 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x265a22511f0 <line:394:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x265a2251270 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x265a2251498 <line:395:1, col:41> col:6 invalid ec_GFp_mont_group_finish 'void (int *)'
| `-ParmVarDecl 0x265a2251408 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x265a22515e8 <line:396:1, col:47> col:6 invalid ec_GFp_mont_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x265a2251558 <col:37, <invalid sloc>> col:47 invalid 'int *'
|-FunctionDecl 0x265a22517d8 <line:397:1, col:56> col:5 invalid ec_GFp_mont_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x265a22516a8 <col:28, <invalid sloc>> col:38 invalid 'int *'
| `-ParmVarDecl 0x265a2251738 <col:40, <invalid sloc>> col:56 invalid 'const int *'
|-FunctionDecl 0x265a2251b58 <line:398:1, line:399:52> line:398:5 invalid ec_GFp_mont_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a22518a0 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x265a2251920 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x265a22519a0 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x265a2251a20 <line:399:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x265a2251aa0 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x265a2251e68 <line:400:1, line:401:35> line:400:5 invalid ec_GFp_mont_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x265a2251c38 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x265a2251cb8 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x265a2251d38 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x265a2251db8 <line:401:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x265a2252170 <line:402:1, line:403:35> line:402:5 invalid ec_GFp_mont_field_inv 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x265a2251f40 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x265a2251fc0 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x265a2252040 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x265a22520c0 <line:403:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x265a2252478 <line:404:1, line:405:38> line:404:5 invalid ec_GFp_mont_field_encode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x265a2252248 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x265a22522c8 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x265a2252348 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x265a22523c8 <line:405:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x265a224c780 <line:406:1, line:407:38> line:406:5 invalid ec_GFp_mont_field_decode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x265a2252550 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x265a22525d0 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x265a2252650 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x265a224c6d0 <line:407:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x265a224ca00 <line:408:1, col:71> col:5 invalid ec_GFp_mont_field_set_to_one 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x265a224c858 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| |-ParmVarDecl 0x265a224c8d8 <col:52, col:60> col:60 invalid r 'int *'
| `-ParmVarDecl 0x265a224c958 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x265a224cbf0 <line:411:1, col:63> col:5 invalid ec_GFp_nist_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x265a224cad0 <col:28, col:38> col:38 invalid dest 'int *'
| `-ParmVarDecl 0x265a224cb50 <col:44, col:60> col:60 invalid src 'const int *'
|-FunctionDecl 0x265a224cf70 <line:412:1, line:413:58> line:412:5 invalid ec_GFp_nist_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a224ccb8 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x265a224cd38 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x265a224cdb8 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x265a224ce38 <line:413:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x265a224ceb8 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x265a224d308 <line:414:1, line:415:52> line:414:5 invalid ec_GFp_nist_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a224d050 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x265a224d0d0 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x265a224d150 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x265a224d1d0 <line:415:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x265a224d250 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x265a224d618 <line:416:1, line:417:35> line:416:5 invalid ec_GFp_nist_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x265a224d3e8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x265a224d468 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x265a224d4e8 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x265a224d568 <line:417:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x265a2254820 <line:420:1, col:41> col:5 invalid ec_GF2m_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x265a2254788 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x265a2254970 <line:421:1, col:44> col:6 invalid ec_GF2m_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x265a22548e0 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x265a2254ac0 <line:422:1, col:50> col:6 invalid ec_GF2m_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x265a2254a30 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x265a2254ca0 <line:423:1, col:59> col:5 invalid ec_GF2m_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x265a2254b80 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x265a2254c00 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x265a2255020 <line:424:1, line:426:44> line:424:5 invalid ec_GF2m_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2254d68 <col:36, <invalid sloc>> col:46 invalid 'int *'
| |-ParmVarDecl 0x265a2254de8 <col:48, col:62> col:62 invalid p 'const int *'
| |-ParmVarDecl 0x265a2254e68 <line:425:36, col:50> col:50 invalid a 'const int *'
| |-ParmVarDecl 0x265a2254ee8 <col:53, col:67> col:67 invalid b 'const int *'
| `-ParmVarDecl 0x265a2254f68 <line:426:36, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x265a22553b8 <line:427:1, line:428:55> line:427:5 invalid ec_GF2m_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x265a2255100 <col:36, <invalid sloc>> col:52 invalid 'const int *'
| |-ParmVarDecl 0x265a2255180 <col:54, col:62> col:62 invalid p 'int *'
| |-ParmVarDecl 0x265a2255200 <col:65, col:73> col:73 invalid a 'int *'
| |-ParmVarDecl 0x265a2255280 <line:428:36, col:44> col:44 invalid b 'int *'
| `-ParmVarDecl 0x265a2255300 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x265a2255530 <line:429:1, col:53> col:5 invalid ec_GF2m_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x265a2255498 <col:37, <invalid sloc>> col:53 invalid 'const int *'
|-FunctionDecl 0x265a2252730 <line:430:1, col:71> col:5 invalid ec_GF2m_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x265a22555f0 <col:45, <invalid sloc>> col:61 invalid 'const int *'
| `-ParmVarDecl 0x265a2255670 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x265a2252890 <line:431:1, col:41> col:5 invalid ec_GF2m_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x265a22527f8 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x265a22529e0 <line:432:1, col:44> col:6 invalid ec_GF2m_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x265a2252950 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x265a2252b30 <line:433:1, col:50> col:6 invalid ec_GF2m_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x265a2252aa0 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x265a2252d10 <line:434:1, col:59> col:5 invalid ec_GF2m_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x265a2252bf0 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x265a2252c70 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x265a2252ef8 <line:435:1, col:70> col:5 invalid ec_GF2m_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x265a2252dd8 <col:42, <invalid sloc>> col:58 invalid 'const int *'
| `-ParmVarDecl 0x265a2252e58 <col:60, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x265a2253278 <line:436:1, line:438:74> line:436:5 invalid ec_GF2m_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2252fc0 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x265a2253040 <col:67, <invalid sloc>> col:77 invalid 'int *'
| |-ParmVarDecl 0x265a22530c0 <line:437:49, col:63> col:63 invalid x 'const int *'
| |-ParmVarDecl 0x265a2253140 <line:438:49, col:63> col:63 invalid y 'const int *'
| `-ParmVarDecl 0x265a22531c0 <col:66, <invalid sloc>> col:74 invalid 'int *'
|-FunctionDecl 0x265a2253610 <line:439:1, line:441:68> line:439:5 invalid ec_GF2m_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x265a2253358 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x265a22533d8 <line:440:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x265a2253458 <col:67, col:75> col:75 invalid x 'int *'
| |-ParmVarDecl 0x265a22534d8 <line:441:49, col:57> col:57 invalid y 'int *'
| `-ParmVarDecl 0x265a2253558 <col:60, <invalid sloc>> col:68 invalid 'int *'
|-FunctionDecl 0x265a22539f8 <line:442:1, line:444:55> line:442:5 invalid ec_GF2m_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x265a2253740 <col:47, <invalid sloc>> col:63 invalid 'const int *'
| |-ParmVarDecl 0x265a22537c0 <col:65, <invalid sloc>> col:75 invalid 'int *'
| |-ParmVarDecl 0x265a2253840 <line:443:47, col:61> col:61 invalid x 'const int *'
| |-ParmVarDecl 0x265a22538c0 <col:64, col:68> col:68 y_bit 'int'
| `-ParmVarDecl 0x265a2253940 <line:444:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x265a2253e08 <line:445:1, line:447:73> line:445:8 invalid ec_GF2m_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x265a2253ad8 <col:33, <invalid sloc>> col:49 invalid 'const int *'
| |-ParmVarDecl 0x265a2253b58 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x265a2253bd8 <line:446:33, col:57> col:57 invalid form 'int'
| |-ParmVarDecl 0x265a2253c58 <line:447:33, col:48> col:48 buf 'unsigned char *'
| |-ParmVarDecl 0x265a2253cd0 <col:53, col:60> col:60 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a2253d50 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x265a22541a0 <line:448:1, line:449:76> line:448:5 invalid ec_GF2m_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x265a2253ef0 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x265a2253f70 <col:48, <invalid sloc>> col:58 invalid 'int *'
| |-ParmVarDecl 0x265a2253ff0 <line:449:30, col:51> col:51 buf 'const unsigned char *'
| |-ParmVarDecl 0x265a2254068 <col:56, col:63> col:63 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x265a22540e8 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x265a2254538 <line:450:1, line:451:51> line:450:5 invalid ec_GF2m_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2254280 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x265a2254300 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x265a2254380 <col:55, col:71> col:71 invalid a 'const int *'
| |-ParmVarDecl 0x265a2254400 <line:451:24, col:40> col:40 invalid b 'const int *'
| `-ParmVarDecl 0x265a2254480 <col:43, <invalid sloc>> col:51 invalid 'int *'
|-FunctionDecl 0x265a224d810 <line:452:1, line:453:32> line:452:5 invalid ec_GF2m_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x265a2254618 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x265a2254698 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x265a224d6e0 <col:55, col:71> col:71 invalid a 'const int *'
| `-ParmVarDecl 0x265a224d760 <line:453:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x265a224da90 <line:454:1, col:65> col:5 invalid ec_GF2m_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x265a224d8e8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x265a224d968 <col:45, <invalid sloc>> col:55 invalid 'int *'
| `-ParmVarDecl 0x265a224d9e8 <col:57, <invalid sloc>> col:65 invalid 'int *'
|-FunctionDecl 0x265a224dc80 <line:455:1, col:69> col:5 invalid ec_GF2m_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x265a224db60 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| `-ParmVarDecl 0x265a224dbe0 <col:53, <invalid sloc>> col:69 invalid 'const int *'
|-FunctionDecl 0x265a224def0 <line:456:1, col:76> col:5 invalid ec_GF2m_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x265a224dd48 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x265a224ddc8 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| `-ParmVarDecl 0x265a224de48 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x265a224e1f0 <line:457:1, line:458:32> line:457:5 invalid ec_GF2m_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a224dfc0 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x265a224e040 <col:42, col:58> col:58 invalid a 'const int *'
| |-ParmVarDecl 0x265a224e0c0 <col:61, col:77> col:77 invalid b 'const int *'
| `-ParmVarDecl 0x265a224e140 <line:458:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x265a224e470 <line:459:1, col:70> col:5 invalid ec_GF2m_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x265a224e2c8 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x265a224e348 <col:50, <invalid sloc>> col:60 invalid 'int *'
| `-ParmVarDecl 0x265a224e3c8 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x265a2256820 <line:460:1, line:461:61> line:460:5 invalid ec_GF2m_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x265a224e540 <col:39, <invalid sloc>> col:55 invalid 'const int *'
| |-ParmVarDecl 0x265a224e5b8 <col:57, col:64> col:64 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a224e648 <line:461:39, <invalid sloc>> col:49 invalid 'int **':'int **'
| `-ParmVarDecl 0x265a2256770 <col:53, <invalid sloc>> col:61 invalid 'int *'
|-FunctionDecl 0x265a2256bb0 <line:462:1, line:463:55> line:462:5 invalid ec_GF2m_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a22568f8 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x265a2256978 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x265a22569f8 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x265a2256a78 <line:463:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x265a2256af8 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x265a2256ec0 <line:464:1, line:465:38> line:464:5 invalid ec_GF2m_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x265a2256c90 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x265a2256d10 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x265a2256d90 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x265a2256e10 <line:465:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x265a2257250 <line:466:1, line:467:55> line:466:5 invalid ec_GF2m_simple_field_div 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2256f98 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x265a2257018 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x265a2257098 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x265a2257118 <line:467:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x265a2257198 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x265a2255760 <line:470:1, line:473:32> line:470:5 invalid ec_GF2m_simple_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x265a2257330 <col:24, col:40> col:40 invalid group 'const int *'
| |-ParmVarDecl 0x265a22573b0 <col:47, col:57> col:57 invalid r 'int *'
| |-ParmVarDecl 0x265a2257430 <line:471:24, col:38> col:38 invalid scalar 'const int *'
| |-ParmVarDecl 0x265a22574a8 <col:46, col:53> col:53 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2257538 <line:472:24, <invalid sloc>> col:40 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x265a22575c8 <col:50, <invalid sloc>> col:64 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x265a2257648 <line:473:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x265a2255970 <line:474:1, col:57> col:5 invalid ec_GF2m_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x265a2255850 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x265a22558d0 <col:46, col:54> col:54 invalid ctx 'int *'
|-FunctionDecl 0x265a2255ad0 <line:475:1, col:55> col:5 invalid ec_GF2m_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x265a2255a38 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x265a2255c28 <line:479:1, col:47> col:5 invalid ec_GFp_nistp224_group_init 'int (int *)'
| `-ParmVarDecl 0x265a2255b90 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x265a2255fa0 <line:480:1, line:482:45> line:480:5 invalid ec_GFp_nistp224_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2255ce8 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x265a2255d68 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x265a2255de8 <line:481:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x265a2255e68 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x265a2255ee8 <line:482:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x265a2256338 <line:483:1, line:486:61> line:483:5 invalid ec_GFp_nistp224_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x265a2256080 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x265a2256100 <line:484:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x265a2256180 <line:485:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x265a2256200 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x265a2256280 <line:486:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x265a224f7c8 <line:487:1, line:490:33> line:487:5 invalid ec_GFp_nistp224_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x265a2256418 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x265a2256498 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x265a2256518 <line:488:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x265a2256590 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2256620 <line:489:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x265a22566b0 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x265a224f700 <line:490:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x265a224fc98 <line:491:1, line:494:68> line:491:5 invalid ec_GFp_nistp224_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x265a224f8b8 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x265a224f938 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x265a224f9b8 <line:492:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x265a224fa30 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a224fac0 <line:493:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x265a224fb50 <line:494:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x265a224fbd0 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x265a224fea8 <line:495:1, col:65> col:5 invalid ec_GFp_nistp224_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x265a224fd88 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x265a224fe08 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x265a2250008 <line:496:1, col:63> col:5 invalid ec_GFp_nistp224_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x265a224ff70 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x265a2250160 <line:499:1, col:47> col:5 invalid ec_GFp_nistp256_group_init 'int (int *)'
| `-ParmVarDecl 0x265a22500c8 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x265a22504d8 <line:500:1, line:502:45> line:500:5 invalid ec_GFp_nistp256_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2250220 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x265a22502a0 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x265a2250320 <line:501:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x265a22503a0 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x265a2250420 <line:502:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x265a2257938 <line:503:1, line:506:61> line:503:5 invalid ec_GFp_nistp256_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x265a22505b8 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x265a2250638 <line:504:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x265a2257780 <line:505:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x265a2257800 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x265a2257880 <line:506:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x265a2257df8 <line:507:1, line:510:33> line:507:5 invalid ec_GFp_nistp256_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x265a2257a18 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x265a2257a98 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x265a2257b18 <line:508:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x265a2257b90 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2257c20 <line:509:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x265a2257cb0 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x265a2257d30 <line:510:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x265a22582c8 <line:511:1, line:514:68> line:511:5 invalid ec_GFp_nistp256_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x265a2257ee8 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x265a2257f68 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x265a2257fe8 <line:512:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x265a2258060 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a22580f0 <line:513:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x265a2258180 <line:514:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x265a2258200 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x265a22584d8 <line:515:1, col:65> col:5 invalid ec_GFp_nistp256_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x265a22583b8 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x265a2258438 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x265a2258638 <line:516:1, col:63> col:5 invalid ec_GFp_nistp256_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x265a22585a0 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x265a22587c0 <line:519:1, col:47> col:5 invalid ec_GFp_nistp521_group_init 'int (int *)'
| `-ParmVarDecl 0x265a22586f8 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x265a2258b38 <line:520:1, line:522:45> line:520:5 invalid ec_GFp_nistp521_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a2258880 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x265a2258900 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x265a2258980 <line:521:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x265a2258a00 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x265a2258a80 <line:522:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x265a2258ed0 <line:523:1, line:526:61> line:523:5 invalid ec_GFp_nistp521_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x265a2258c18 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x265a2258c98 <line:524:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x265a2258d18 <line:525:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x265a2258d98 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x265a2258e18 <line:526:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x265a2259390 <line:527:1, line:530:33> line:527:5 invalid ec_GFp_nistp521_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x265a2258fb0 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x265a2259030 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x265a22590b0 <line:528:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x265a2259128 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a22591b8 <line:529:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x265a2259248 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x265a22592c8 <line:530:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x265a21bdfb0 <line:531:1, line:534:68> line:531:5 invalid ec_GFp_nistp521_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x265a2259480 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x265a2259500 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x265a2259580 <line:532:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x265a22595f8 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a2259688 <line:533:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x265a2259718 <line:534:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x265a21bdee8 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x265a21be1c0 <line:535:1, col:65> col:5 invalid ec_GFp_nistp521_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x265a21be0a0 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x265a21be120 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x265a21be320 <line:536:1, col:63> col:5 invalid ec_GFp_nistp521_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x265a21be288 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x265a226f818 <line:539:1, line:563:75> line:539:6 ec_GFp_nistp_points_make_affine_internal 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
| |-ParmVarDecl 0x265a21be3d8 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21be458 <col:59, col:65> col:65 point_array 'void *'
| |-ParmVarDecl 0x265a21be4d0 <line:540:47, col:54> col:54 felem_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21be550 <line:541:47, col:53> col:53 tmp_felems 'void *'
| |-ParmVarDecl 0x265a21be710 <line:542:47, col:75> col:54 felem_one 'void (*)(void *)'
| |-ParmVarDecl 0x265a21be908 <line:543:47, line:544:72> line:543:53 felem_is_zero 'int (*)(const void *)'
| |-ParmVarDecl 0x265a21beba8 <line:545:47, line:547:72> line:545:54 felem_assign 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x265a21bed80 <line:548:47, line:550:72> line:548:54 felem_square 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x265a226f180 <line:551:47, line:555:70> line:551:54 felem_mul 'void (*)(void *, const void *, const void *)'
| |-ParmVarDecl 0x265a226f358 <line:556:47, line:558:69> line:556:54 felem_inv 'void (*)(void *, const void *)'
| `-ParmVarDecl 0x265a226f530 <line:559:47, line:563:74> line:559:54 felem_contract 'void (*)(void *, const void *)'
|-FunctionDecl 0x265a226fb68 <line:564:1, line:565:76> line:564:6 ec_GFp_nistp_recode_scalar_bits 'void (unsigned char *, unsigned char *, unsigned char)'
| |-ParmVarDecl 0x265a226f940 <col:38, col:53> col:53 sign 'unsigned char *'
| |-ParmVarDecl 0x265a226f9c0 <line:565:38, col:53> col:53 digit 'unsigned char *'
| `-ParmVarDecl 0x265a226fa40 <col:60, col:74> col:74 in 'unsigned char'
|-FunctionDecl 0x265a226fce8 <line:567:1, col:39> col:5 invalid ec_precompute_mont_data 'int (int *)'
| `-ParmVarDecl 0x265a226fc50 <col:29, <invalid sloc>> col:39 invalid 'int *'
|-FunctionDecl 0x265a226fe40 <line:568:1, col:53> col:5 invalid ec_group_simple_order_bits 'int (const int *)'
| `-ParmVarDecl 0x265a226fda8 <col:32, col:48> col:48 invalid group 'const int *'
|-FunctionDecl 0x265a22710f8 <line:578:1, line:579:61> line:578:8 invalid ec_key_simple_priv2oct 'size_t (const int *, unsigned char *, size_t)'
| |-ParmVarDecl 0x265a2270f60 <col:31, col:45> col:45 invalid eckey 'const int *'
| |-ParmVarDecl 0x265a2270fe0 <line:579:31, col:46> col:46 buf 'unsigned char *'
| `-ParmVarDecl 0x265a2271058 <col:51, col:58> col:58 len 'size_t':'unsigned long long'
|-FunctionDecl 0x265a2271368 <line:580:1, col:79> col:5 invalid ec_key_simple_oct2priv 'int (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x265a22711c8 <col:28, col:36> col:36 invalid eckey 'int *'
| |-ParmVarDecl 0x265a2271248 <col:43, col:64> col:64 buf 'const unsigned char *'
| `-ParmVarDecl 0x265a22712c0 <col:69, col:76> col:76 len 'size_t':'unsigned long long'
|-FunctionDecl 0x265a22714d0 <line:581:1, col:45> col:5 invalid ec_key_simple_generate_key 'int (int *)'
| `-ParmVarDecl 0x265a2271438 <col:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x265a2271628 <line:582:1, col:52> col:5 invalid ec_key_simple_generate_public_key 'int (int *)'
| `-ParmVarDecl 0x265a2271590 <col:39, col:47> col:47 invalid eckey 'int *'
|-FunctionDecl 0x265a2271780 <line:583:1, col:48> col:5 invalid ec_key_simple_check_key 'int (const int *)'
| `-ParmVarDecl 0x265a22716e8 <col:29, col:43> col:43 invalid eckey 'const int *'
|-RecordDecl 0x265a2271828 <line:587:1, line:612:1> line:587:8 invalid struct ec_key_method_st definition
| |-FieldDecl 0x265a22718f8 <line:588:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x265a2271968 <line:589:5, col:13> col:13 invalid flags 'int'
| |-FieldDecl 0x265a2271a80 <line:590:5, col:28> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x265a2271b90 <line:591:5, col:31> col:12 finish 'void (*)(int *)'
| |-FieldDecl 0x265a2271d30 <line:592:5, col:48> col:11 copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x265a2271ed0 <line:593:5, col:54> col:11 set_group 'int (*)(int *, const int *)'
| |-FieldDecl 0x265a226a020 <line:594:5, col:59> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x265a226a1c0 <line:595:5, col:59> col:11 set_public 'int (*)(int *, const int *)'
| |-FieldDecl 0x265a226a2d8 <line:596:5, col:30> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x265a226a588 <line:597:5, line:598:67> line:597:11 compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| |-FieldDecl 0x265a226ab80 <line:599:5, line:601:47> line:599:11 sign 'int (*)(int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-FieldDecl 0x265a226cf78 <line:602:5, line:603:34> line:602:11 sign_setup 'int (*)(int *, int *, int **, int **)'
| |-FieldDecl 0x265a226d388 <line:604:5, <invalid sloc>> col:18 invalid sign_sig 'int *(*)(const unsigned char *, int, const int *, const int *, int *)'
| |-FieldDecl 0x265a226d830 <line:608:5, line:609:74> line:608:11 verify 'int (*)(int, const unsigned char *, int, const unsigned char *, int, int *)'
| `-FieldDecl 0x265a226dbc0 <line:610:5, line:611:58> line:610:11 verify_sig 'int (*)(const unsigned char *, int, const int *, int *)'
|-FunctionDecl 0x265a226dcc8 <line:616:1, col:34> col:5 invalid ossl_ec_key_gen 'int (int *)'
| `-ParmVarDecl 0x265a226dc30 <col:21, col:29> col:29 invalid eckey 'int *'
|-FunctionDecl 0x265a226bfc0 <line:617:1, line:618:70> line:617:5 invalid ossl_ecdh_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x265a226dd90 <col:27, col:43> col:43 pout 'unsigned char **'
| |-ParmVarDecl 0x265a226de08 <col:49, col:57> col:57 poutlen 'size_t *'
| |-ParmVarDecl 0x265a226de88 <line:618:27, col:43> col:43 invalid pub_key 'const int *'
| `-ParmVarDecl 0x265a226bf10 <col:52, col:66> col:66 invalid ecdh 'const int *'
|-FunctionDecl 0x265a226c2c8 <line:619:1, line:620:72> line:619:5 invalid ecdh_simple_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x265a226c0a0 <col:29, col:45> col:45 pout 'unsigned char **'
| |-ParmVarDecl 0x265a226c118 <col:51, col:59> col:59 poutlen 'size_t *'
| |-ParmVarDecl 0x265a226c198 <line:620:29, col:45> col:45 invalid pub_key 'const int *'
| `-ParmVarDecl 0x265a226c218 <col:54, col:68> col:68 invalid ecdh 'const int *'
|-RecordDecl 0x265a226c388 <line:622:1, line:625:1> line:622:8 invalid struct ECDSA_SIG_st definition
| |-FieldDecl 0x265a226c458 <line:623:5, col:13> col:13 invalid r 'int *'
| `-FieldDecl 0x265a226c4c8 <line:624:5, col:13> col:13 invalid s 'int *'
|-FunctionDecl 0x265a226c778 <line:627:1, line:628:38> line:627:5 invalid ossl_ecdsa_sign_setup 'int (int *, int *, int **, int **)'
| |-ParmVarDecl 0x265a226c538 <col:27, col:35> col:35 invalid eckey 'int *'
| |-ParmVarDecl 0x265a226c5b8 <col:42, col:50> col:50 invalid ctx_in 'int *'
| |-ParmVarDecl 0x265a226c640 <col:58, col:67> col:67 invalid kinvp 'int **'
| `-ParmVarDecl 0x265a226c6c8 <line:628:27, col:36> col:36 invalid rp 'int **'
|-FunctionDecl 0x265a226cca0 <line:629:1, line:631:71> line:629:5 invalid ossl_ecdsa_sign 'int (int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a226c850 <col:21, col:25> col:25 type 'int'
| |-ParmVarDecl 0x265a226c8d0 <col:31, col:52> col:52 dgst 'const unsigned char *'
| |-ParmVarDecl 0x265a226c950 <col:58, col:62> col:62 dlen 'int'
| |-ParmVarDecl 0x265a226c9d0 <line:630:21, col:36> col:36 sig 'unsigned char *'
| |-ParmVarDecl 0x265a226ca50 <col:41, col:55> col:55 siglen 'unsigned int *'
| |-ParmVarDecl 0x265a226cad0 <line:631:21, col:35> col:35 invalid kinv 'const int *'
| |-ParmVarDecl 0x265a226cb50 <col:41, col:55> col:55 invalid r 'const int *'
| `-ParmVarDecl 0x265a226cbd0 <col:58, col:66> col:66 invalid eckey 'int *'
|-FunctionDecl 0x265a2265590 <line:632:1, line:634:45> line:632:12 invalid ossl_ecdsa_sign_sig 'int *(const unsigned char *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x265a226cd98 <col:32, col:53> col:53 dgst 'const unsigned char *'
| |-ParmVarDecl 0x265a226ce18 <col:59, col:63> col:63 dgst_len 'int'
| |-ParmVarDecl 0x265a226ce98 <line:633:32, col:46> col:46 invalid in_kinv 'const int *'
| |-ParmVarDecl 0x265a2265458 <col:55, col:69> col:69 invalid in_r 'const int *'
| `-ParmVarDecl 0x265a22654d8 <line:634:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x265a22659b0 <line:635:1, line:636:78> line:635:5 invalid ossl_ecdsa_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'
| |-ParmVarDecl 0x265a2265670 <col:23, col:27> col:27 type 'int'
| |-ParmVarDecl 0x265a22656f0 <col:33, col:54> col:54 dgst 'const unsigned char *'
| |-ParmVarDecl 0x265a2265770 <col:60, col:64> col:64 dgst_len 'int'
| |-ParmVarDecl 0x265a22657f0 <line:636:23, col:44> col:44 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x265a2265870 <col:52, col:56> col:56 sig_len 'int'
| `-ParmVarDecl 0x265a22658f0 <col:65, col:73> col:73 invalid eckey 'int *'
|-FunctionDecl 0x265a2265cc8 <line:637:1, line:638:62> line:637:5 invalid ossl_ecdsa_verify_sig 'int (const unsigned char *, int, const int *, int *)'
| |-ParmVarDecl 0x265a2265a98 <col:27, col:48> col:48 dgst 'const unsigned char *'
| |-ParmVarDecl 0x265a2265b18 <col:54, col:58> col:58 dgst_len 'int'
| |-ParmVarDecl 0x265a2265b98 <line:638:27, col:44> col:44 invalid sig 'const int *'
| `-ParmVarDecl 0x265a2265c18 <col:49, col:57> col:57 invalid eckey 'int *'
|-FunctionDecl 0x265a22661a0 <line:640:1, line:641:47> line:640:5 invalid X25519 'int (int *, const int *, const int *)'
| |-ParmVarDecl 0x265a2265e60 <col:12, <invalid sloc>> col:20 invalid out_shared_key 'int *':'int *'
| |-ParmVarDecl 0x265a2265fa0 <col:40, <invalid sloc>> col:54 invalid private_key 'const int *':'const int *'
| `-ParmVarDecl 0x265a2266070 <line:641:12, <invalid sloc>> col:26 invalid peer_public_value 'const int *':'const int *'
|-FunctionDecl 0x265a22664a8 <line:642:1, line:643:62> line:642:6 invalid X25519_public_from_private 'void (int *, const int *)'
| |-ParmVarDecl 0x265a22662c0 <col:33, <invalid sloc>> col:41 invalid out_public_value 'int *':'int *'
| `-ParmVarDecl 0x265a2266390 <line:643:33, <invalid sloc>> col:47 invalid private_key 'const int *':'const int *'
|-FunctionDecl 0x265a2266718 <line:645:1, col:79> col:5 invalid ec_point_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x265a2266570 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x265a22665f0 <col:55, col:65> col:65 invalid p 'int *'
| `-ParmVarDecl 0x265a2266670 <col:68, col:76> col:76 invalid ctx 'int *'
|-RecordDecl 0x265a22667d0 prev 0x265a2242828 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:35:1, line:47:1> line:35:8 invalid struct ec_pre_comp_st definition
| |-FieldDecl 0x265a2266868 <line:36:5, col:21> col:21 invalid group 'const int *'
| |-FieldDecl 0x265a22668d0 <line:37:5, col:12> col:12 referenced blocksize 'size_t':'unsigned long long'
| |-FieldDecl 0x265a2266938 <line:38:5, col:12> col:12 referenced numblocks 'size_t':'unsigned long long'
| |-FieldDecl 0x265a22669a0 <line:40:5, col:12> col:12 referenced w 'size_t':'unsigned long long'
| |-FieldDecl 0x265a2266a18 <line:41:5, col:16> col:16 invalid points 'int **'
| |-FieldDecl 0x265a2266a80 <line:44:5, col:12> col:12 referenced num 'size_t':'unsigned long long'
| |-FieldDecl 0x265a2266af0 <line:45:5, col:9> col:9 referenced references 'int'
| `-FieldDecl 0x265a2266b60 <line:46:5, col:20> col:20 invalid lock 'int *'
|-FunctionDecl 0x265a2266cc8 <line:49:1, line:74:1> line:49:21 invalid ec_pre_comp_new 'EC_PRE_COMP *(const int *)' static
| |-ParmVarDecl 0x265a2266bd0 <col:37, col:53> col:53 invalid group 'const int *'
| `-CompoundStmt 0x265a21dd6c0 <line:50:1, line:74:1>
|   |-DeclStmt 0x265a2266ea0 <line:51:5, col:28>
|   | `-VarDecl 0x265a2266d98 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:51:18 used ret 'EC_PRE_COMP *' cinit
|   |   `-ImplicitCastExpr 0x265a2266e88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x265a2266e68 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x265a2266e40 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x265a2266e00 <col:26> 'int' 0
|   |-IfStmt 0x265a2266f80 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:53:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-OpaqueValueExpr 0x265a2266f68 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x265a2266f58 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:54:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x265a2266f40 <col:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x265a2266f20 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x265a2266ef8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x265a2266eb8 <col:26> 'int' 0
|   |-BinaryOperator 0x265a2267220 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:56:5, col:38> 'EC_PRE_COMP *' '='
|   | |-DeclRefExpr 0x265a2266f98 <col:5> 'EC_PRE_COMP *' lvalue Var 0x265a2266d98 'ret' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x265a2267208 <col:11, col:38> 'EC_PRE_COMP *' <IntegralToPointer>
|   |   `-CallExpr 0x265a22671e0 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x265a22671c8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x265a22670e8 <col:11> 'int ()' Function 0x265a2267020 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x265a2267178 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x265a2267158 <col:32, col:37> 'EC_PRE_COMP':'struct ec_pre_comp_st' lvalue
|   |         `-UnaryOperator 0x265a2267140 <col:33, col:34> 'EC_PRE_COMP':'struct ec_pre_comp_st' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x265a2267128 <col:34> 'EC_PRE_COMP *' <LValueToRValue>
|   |             `-DeclRefExpr 0x265a2267108 <col:34> 'EC_PRE_COMP *' lvalue Var 0x265a2266d98 'ret' 'EC_PRE_COMP *' non_odr_use_unevaluated
|   |-IfStmt 0x265a21dcf00 <line:57:5, line:60:5>
|   | |-BinaryOperator 0x265a2267318 <line:57:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x265a22672e8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:57:9> 'EC_PRE_COMP *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a2267240 <col:9> 'EC_PRE_COMP *' lvalue Var 0x265a2266d98 'ret' 'EC_PRE_COMP *'
|   | | `-ImplicitCastExpr 0x265a2267300 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <BitCast>
|   | |   `-ParenExpr 0x265a22672c8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x265a22672a0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x265a2267260 <col:26> 'int' 0
|   | `-CompoundStmt 0x265a21dcee8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:57:22, line:60:5>
|   |   `-ReturnStmt 0x265a21dced8 <line:59:9, col:16>
|   |     `-ImplicitCastExpr 0x265a21dcec0 <col:16> 'EC_PRE_COMP *' <LValueToRValue>
|   |       `-DeclRefExpr 0x265a21dcea0 <col:16> 'EC_PRE_COMP *' lvalue Var 0x265a2266d98 'ret' 'EC_PRE_COMP *'
|   |-BinaryOperator 0x265a21dcff8 <line:63:5, col:22> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x265a21dcf88 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->blocksize 0x265a22668d0
|   | | `-ImplicitCastExpr 0x265a21dcf70 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x265a21dcf50 <col:5> 'EC_PRE_COMP *' lvalue Var 0x265a2266d98 'ret' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x265a21dcfe0 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x265a21dcfb8 <col:22> 'int' 8
|   |-BinaryOperator 0x265a21dd0c0 <line:64:5, col:14> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x265a21dd050 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->w 0x265a22669a0
|   | | `-ImplicitCastExpr 0x265a21dd038 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x265a21dd018 <col:5> 'EC_PRE_COMP *' lvalue Var 0x265a2266d98 'ret' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x265a21dd0a8 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x265a21dd080 <col:14> 'int' 4
|   |-BinaryOperator 0x265a21dd170 <line:65:5, col:23> 'int' '='
|   | |-MemberExpr 0x265a21dd118 <col:5, col:10> 'int' lvalue ->references 0x265a2266af0
|   | | `-ImplicitCastExpr 0x265a21dd100 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x265a21dd0e0 <col:5> 'EC_PRE_COMP *' lvalue Var 0x265a2266d98 'ret' 'EC_PRE_COMP *'
|   | `-IntegerLiteral 0x265a21dd148 <col:23> 'int' 1
|   |-IfStmt 0x265a21dd660 <line:68:5, line:72:5>
|   | |-OpaqueValueExpr 0x265a21dd648 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21dd628 <line:68:28, line:72:5>
|   |   |-CallExpr 0x265a21dd538 <line:70:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x265a21dd520 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x265a21dd4e0 <col:9> 'int ()' Function 0x265a21dd418 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x265a21dd560 <col:22> 'EC_PRE_COMP *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x265a21dd500 <col:22> 'EC_PRE_COMP *' lvalue Var 0x265a2266d98 'ret' 'EC_PRE_COMP *'
|   |   `-ReturnStmt 0x265a21dd618 <line:71:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |     `-ImplicitCastExpr 0x265a21dd600 <col:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |       `-ParenExpr 0x265a21dd5e0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x265a21dd5b8 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x265a21dd578 <col:26> 'int' 0
|   `-ReturnStmt 0x265a21dd6b0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:73:5, col:12>
|     `-ImplicitCastExpr 0x265a21dd698 <col:12> 'EC_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x265a21dd678 <col:12> 'EC_PRE_COMP *' lvalue Var 0x265a2266d98 'ret' 'EC_PRE_COMP *'
|-FunctionDecl 0x265a21dd7d0 prev 0x265a22485c8 <line:76:1, line:82:1> line:76:14 EC_ec_pre_comp_dup 'EC_PRE_COMP *(EC_PRE_COMP *)'
| |-ParmVarDecl 0x265a21dd728 <col:33, col:46> col:46 used pre 'EC_PRE_COMP *'
| `-CompoundStmt 0x265a21ddc90 <line:77:1, line:82:1>
|   |-DeclStmt 0x265a21dd8f8 <line:78:5, col:10>
|   | `-VarDecl 0x265a21dd890 <col:5, col:9> col:9 used i 'int'
|   `-ReturnStmt 0x265a21ddc80 <line:81:5, col:12>
|     `-ImplicitCastExpr 0x265a21ddc68 <col:12> 'EC_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x265a21ddc48 <col:12> 'EC_PRE_COMP *' lvalue ParmVar 0x265a21dd728 'pre' 'EC_PRE_COMP *'
|-FunctionDecl 0x265a21ddd68 prev 0x265a2246fd8 <line:84:1, line:106:1> line:84:6 used EC_ec_pre_comp_free 'void (EC_PRE_COMP *)'
| |-ParmVarDecl 0x265a21ddcc0 <col:26, col:39> col:39 used pre 'EC_PRE_COMP *'
| `-CompoundStmt 0x265a21deab0 <line:85:1, line:106:1>
|   |-DeclStmt 0x265a21dde90 <line:86:5, col:10>
|   | `-VarDecl 0x265a21dde28 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x265a21ddfb0 <line:88:5, line:89:9>
|   | |-BinaryOperator 0x265a21ddf80 <line:88:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x265a21ddf50 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:88:9> 'EC_PRE_COMP *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21ddea8 <col:9> 'EC_PRE_COMP *' lvalue ParmVar 0x265a21ddcc0 'pre' 'EC_PRE_COMP *'
|   | | `-ImplicitCastExpr 0x265a21ddf68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <BitCast>
|   | |   `-ParenExpr 0x265a21ddf30 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x265a21ddf08 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x265a21ddec8 <col:26> 'int' 0
|   | `-ReturnStmt 0x265a21ddfa0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:89:9>
|   |-CallExpr 0x265a21de2d0 <line:92:5, col:33> 'int'
|   | |-ImplicitCastExpr 0x265a21de2b8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x265a21de220 <col:5> 'int ()' Function 0x265a21de158 'REF_PRINT_COUNT' 'int ()'
|   | |-ImplicitCastExpr 0x265a21de300 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x265a21de278 <col:21> 'char [6]' lvalue "EC_ec"
|   | `-ImplicitCastExpr 0x265a21de318 <col:30> 'EC_PRE_COMP *' <LValueToRValue>
|   |   `-DeclRefExpr 0x265a21de298 <col:30> 'EC_PRE_COMP *' lvalue ParmVar 0x265a21ddcc0 'pre' 'EC_PRE_COMP *'
|   |-IfStmt 0x265a21de3c0 <line:93:5, line:94:9>
|   | |-BinaryOperator 0x265a21de390 <line:93:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x265a21de378 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21de330 <col:9> 'int' lvalue Var 0x265a21dde28 'i' 'int'
|   | | `-IntegerLiteral 0x265a21de350 <col:13> 'int' 0
|   | `-ReturnStmt 0x265a21de3b0 <line:94:9>
|   |-CallExpr 0x265a21de580 <line:95:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x265a21de568 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x265a21de4c8 <col:5> 'int ()' Function 0x265a21de400 'REF_ASSERT_ISNT' 'int ()'
|   | `-BinaryOperator 0x265a21de548 <col:21, col:25> 'int' '<'
|   |   |-ImplicitCastExpr 0x265a21de530 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x265a21de4e8 <col:21> 'int' lvalue Var 0x265a21dde28 'i' 'int'
|   |   `-IntegerLiteral 0x265a21de508 <col:25> 'int' 0
|   |-IfStmt 0x265a21de8b8 <line:97:5, line:103:5>
|   | |-OpaqueValueExpr 0x265a21de8a0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21de890 <line:97:30, line:103:5>
|   `-CallExpr 0x265a21dea70 <line:105:5, col:21> 'int'
|     |-ImplicitCastExpr 0x265a21dea58 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x265a21dea18 <col:5> 'int ()' Function 0x265a21dd418 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x265a21dea98 <col:18> 'EC_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x265a21dea38 <col:18> 'EC_PRE_COMP *' lvalue ParmVar 0x265a21ddcc0 'pre' 'EC_PRE_COMP *'
|-FunctionDecl 0x265a21dedc8 <line:135:1, line:333:1> line:135:12 invalid ec_mul_consttime 'int (const int *, int *, const int *, const int *, int *)' static
| |-ParmVarDecl 0x265a21deb10 <col:29, col:45> col:45 invalid group 'const int *'
| |-ParmVarDecl 0x265a21deb90 <col:52, col:62> col:62 invalid r 'int *'
| |-ParmVarDecl 0x265a21dec10 <line:136:29, col:43> col:43 invalid scalar 'const int *'
| |-ParmVarDecl 0x265a21dec90 <col:51, col:67> col:67 invalid point 'const int *'
| |-ParmVarDecl 0x265a21ded10 <line:137:29, col:37> col:37 invalid ctx 'int *'
| `-CompoundStmt 0x265a21e28c0 <line:138:1, line:333:1>
|   |-DeclStmt 0x265a21df208 <line:139:5, col:61>
|   | |-VarDecl 0x265a21deee8 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x265a21def68 <col:5, col:12> col:12 used cardinality_bits 'int'
|   | |-VarDecl 0x265a21defe8 <col:5, col:30> col:30 used group_top 'int'
|   | |-VarDecl 0x265a21df068 <col:5, col:41> col:41 used kbit 'int'
|   | |-VarDecl 0x265a21df0e8 <col:5, col:47> col:47 used pbit 'int'
|   | `-VarDecl 0x265a21df168 <col:5, col:53> col:53 used Z_is_one 'int'
|   |-DeclStmt 0x265a21df570 <line:145:5, col:16>
|   | `-VarDecl 0x265a21df4e0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x265a21df548 <col:15> 'int' 0
|   |-IfStmt 0x265a21df830 <line:147:5, line:148:16>
|   | |-OpaqueValueExpr 0x265a21df818 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x265a21df808 <col:9, col:16>
|   |   `-IntegerLiteral 0x265a21df7e0 <col:16> 'int' 0
|   |-IfStmt 0x265a21dfb70 <line:153:5, line:154:14>
|   | |-OpaqueValueExpr 0x265a21dfb58 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21dfb40 <col:9, col:14> 'err' 0x265a21dfaf0
|   |-IfStmt 0x265a21dfe18 <line:156:5, line:162:5> has_else
|   | |-OpaqueValueExpr 0x265a21dfe00 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x265a21dfd68 <line:156:24, line:159:5>
|   | | `-IfStmt 0x265a21dfd50 <line:157:9, line:158:18>
|   | |   |-OpaqueValueExpr 0x265a21dfd38 <<invalid sloc>> '_Bool'
|   | |   `-GotoStmt 0x265a21dfd20 <col:13, col:18> 'err' 0x265a21dfaf0
|   | `-CompoundStmt 0x265a21dfde8 <line:159:12, line:162:5>
|   |   `-IfStmt 0x265a21dfdd0 <line:160:9, line:161:18>
|   |     |-OpaqueValueExpr 0x265a21dfdb8 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x265a21dfda0 <col:13, col:18> 'err' 0x265a21dfaf0
|   |-DoStmt 0x265a21dffc8 <line:108:41, line:112:10>
|   | |-CompoundStmt 0x265a21dff90 <line:108:44, line:111:36>
|   | `-IntegerLiteral 0x265a21dffa0 <line:112:9> 'int' 0
|   |-IfStmt 0x265a21e0300 <line:169:5, line:170:14>
|   | |-OpaqueValueExpr 0x265a21e02e8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21e02d0 <col:9, col:14> 'err' 0x265a21dfaf0
|   |-IfStmt 0x265a21e0918 <line:180:5, line:182:14>
|   | |-OpaqueValueExpr 0x265a21e0900 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21e08e8 <col:9, col:14> 'err' 0x265a21dfaf0
|   |-IfStmt 0x265a21e0a70 <line:184:5, line:185:14>
|   | |-OpaqueValueExpr 0x265a21e0a58 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21e0a40 <col:9, col:14> 'err' 0x265a21dfaf0
|   |-IfStmt 0x265a21e0d80 <line:189:5, line:196:5>
|   | |-OpaqueValueExpr 0x265a21e0d68 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21e0d50 <line:189:69, line:196:5>
|   |   `-IfStmt 0x265a21e0d38 <line:194:9, line:195:18>
|   |     |-OpaqueValueExpr 0x265a21e0d20 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x265a21e0d08 <col:13, col:18> 'err' 0x265a21dfaf0
|   |-IfStmt 0x265a21e0ef0 <line:198:5, line:199:14>
|   | |-OpaqueValueExpr 0x265a21e0ed8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21e0ec0 <col:9, col:14> 'err' 0x265a21dfaf0
|   |-IfStmt 0x265a21e0f78 <line:201:5, line:202:14>
|   | |-OpaqueValueExpr 0x265a21e0f60 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21e0f48 <col:9, col:14> 'err' 0x265a21dfaf0
|   |-IfStmt 0x265a21e17c8 <line:211:5, line:217:14>
|   | |-OpaqueValueExpr 0x265a21e17b0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21e1798 <col:9, col:14> 'err' 0x265a21dfaf0
|   |-IfStmt 0x265a21e1810 <line:227:5, line:228:14>
|   | |-OpaqueValueExpr 0x265a21e17f8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21e17e0 <col:9, col:14> 'err' 0x265a21dfaf0
|   |-IfStmt 0x265a21e1878 <line:231:5, line:232:14>
|   | |-OpaqueValueExpr 0x265a21e1860 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21e1848 <col:9, col:14> 'err' 0x265a21dfaf0
|   |-DoStmt 0x265a21e1928 <line:108:41, line:112:10>
|   | |-CompoundStmt 0x265a21e18f0 <line:108:44, line:111:36>
|   | `-IntegerLiteral 0x265a21e1900 <line:112:9> 'int' 0
|   |-IfStmt 0x265a21e1a88 <line:236:5, line:237:14>
|   | |-OpaqueValueExpr 0x265a21e1a70 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21e1a58 <col:9, col:14> 'err' 0x265a21dfaf0
|   |-BinaryOperator 0x265a21e1b00 <line:239:5, col:12> 'int' '='
|   | |-DeclRefExpr 0x265a21e1aa0 <col:5> 'int' lvalue Var 0x265a21df0e8 'pbit' 'int'
|   | `-IntegerLiteral 0x265a21e1ad8 <col:12> 'int' 0
|   |-ForStmt 0x265a21e2218 <line:308:5, line:320:5>
|   | |-BinaryOperator 0x265a21e1bd8 <line:308:10, col:33> 'int' '='
|   | | |-DeclRefExpr 0x265a21e1b20 <col:10> 'int' lvalue Var 0x265a21deee8 'i' 'int'
|   | | `-BinaryOperator 0x265a21e1bb8 <col:14, col:33> 'int' '-'
|   | |   |-ImplicitCastExpr 0x265a21e1ba0 <col:14> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x265a21e1b58 <col:14> 'int' lvalue Var 0x265a21def68 'cardinality_bits' 'int'
|   | |   `-IntegerLiteral 0x265a21e1b78 <col:33> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x265a21e1c58 <col:36, col:41> 'int' '>='
|   | | |-ImplicitCastExpr 0x265a21e1c40 <col:36> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21e1bf8 <col:36> 'int' lvalue Var 0x265a21deee8 'i' 'int'
|   | | `-IntegerLiteral 0x265a21e1c18 <col:41> 'int' 0
|   | |-UnaryOperator 0x265a21e1c98 <col:44, col:45> 'int' postfix '--'
|   | | `-DeclRefExpr 0x265a21e1c78 <col:44> 'int' lvalue Var 0x265a21deee8 'i' 'int'
|   | `-CompoundStmt 0x265a21e21e8 <col:49, line:320:5>
|   |   |-DoStmt 0x265a21e1f80 <line:241:39, line:248:10>
|   |   | |-CompoundStmt 0x265a21e1f48 <line:241:42, line:247:52>
|   |   | `-IntegerLiteral 0x265a21e1f58 <line:248:9> 'int' 0
|   |   |-IfStmt 0x265a21e20e0 <line:311:9, line:312:18>
|   |   | |-OpaqueValueExpr 0x265a21e20c8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x265a21e20b0 <col:13, col:18> 'err' 0x265a21dfaf0
|   |   |-IfStmt 0x265a21e2148 <line:313:9, line:314:18>
|   |   | |-OpaqueValueExpr 0x265a21e2130 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x265a21e2118 <col:13, col:18> 'err' 0x265a21dfaf0
|   |   `-CompoundAssignOperator 0x265a21e21b8 <line:319:9, col:17> 'int' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x265a21e2160 <col:9> 'int' lvalue Var 0x265a21df0e8 'pbit' 'int'
|   |     `-ImplicitCastExpr 0x265a21e21a0 <col:17> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x265a21e2180 <col:17> 'int' lvalue Var 0x265a21df068 'kbit' 'int'
|   |-DoStmt 0x265a21e2488 <line:241:39, line:248:10>
|   | |-CompoundStmt 0x265a21e2450 <line:241:42, line:247:52>
|   | `-IntegerLiteral 0x265a21e2460 <line:248:9> 'int' 0
|   |-BinaryOperator 0x265a21e2508 <line:325:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x265a21e24a8 <col:5> 'int' lvalue Var 0x265a21df4e0 'ret' 'int'
|   | `-IntegerLiteral 0x265a21e24e0 <col:11> 'int' 1
|   |-LabelStmt 0x265a21e2640 <line:327:2, col:5> 'err'
|   | `-NullStmt 0x265a21e2638 <col:5>
|   `-ReturnStmt 0x265a21e28b0 <line:332:5, col:12>
|     `-ImplicitCastExpr 0x265a21e2898 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x265a21e2878 <col:12> 'int' lvalue Var 0x265a21df4e0 'ret' 'int'
|-FunctionDecl 0x265a21e2d80 <line:358:1, line:763:1> line:358:5 invalid ec_wNAF_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x265a21e29a0 <col:17, col:33> col:33 invalid group 'const int *'
| |-ParmVarDecl 0x265a21e2a20 <col:40, col:50> col:50 invalid r 'int *'
| |-ParmVarDecl 0x265a21e2aa0 <col:53, col:67> col:67 invalid scalar 'const int *'
| |-ParmVarDecl 0x265a21e2b18 <line:359:17, col:24> col:24 used num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x265a21e2ba8 <col:29, <invalid sloc>> col:45 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x265a21e2c38 <col:55, <invalid sloc>> col:69 invalid scalars 'const int **':'const int **'
| |-ParmVarDecl 0x265a21e2cb8 <line:360:17, col:25> col:25 invalid ctx 'int *'
| `-CompoundStmt 0x265a21f0158 <line:361:1, line:763:1>
|   |-DeclStmt 0x265a21e3018 <line:363:5, col:37>
|   | `-VarDecl 0x265a21e2f28 <col:5, col:21> col:21 invalid generator 'const int *'
|   |-DeclStmt 0x265a21e3130 <line:365:5, col:20>
|   | `-VarDecl 0x265a21e30c8 <col:5, col:12> col:12 used totalnum 'size_t':'unsigned long long'
|   |-DeclStmt 0x265a21e32d0 <line:366:5, col:40>
|   | |-VarDecl 0x265a21e3158 <col:5, col:24> col:12 used blocksize 'size_t':'unsigned long long' cinit
|   | | `-ImplicitCastExpr 0x265a21e31e8 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x265a21e31c0 <col:24> 'int' 0
|   | `-VarDecl 0x265a21e3210 <col:5, col:39> col:27 used numblocks 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x265a21e32a0 <col:39> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x265a21e3278 <col:39> 'int' 0
|   |-DeclStmt 0x265a21e33a0 <line:367:5, col:36>
|   | `-VarDecl 0x265a21e32f8 <col:5, col:35> col:12 used pre_points_per_block 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x265a21e3388 <col:35> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x265a21e3360 <col:35> 'int' 0
|   |-DeclStmt 0x265a21e34c0 <line:368:5, col:16>
|   | |-VarDecl 0x265a21e33c8 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   | `-VarDecl 0x265a21e3440 <col:5, col:15> col:15 used j 'size_t':'unsigned long long'
|   |-DeclStmt 0x265a21e3558 <line:369:5, col:10>
|   | `-VarDecl 0x265a21e34f0 <col:5, col:9> col:9 used k 'int'
|   |-DeclStmt 0x265a21e3618 <line:370:5, col:26>
|   | `-VarDecl 0x265a21e3588 <col:5, col:25> col:9 used r_is_inverted 'int' cinit
|   |   `-IntegerLiteral 0x265a21e35f0 <col:25> 'int' 0
|   |-DeclStmt 0x265a21e36d8 <line:371:5, col:29>
|   | `-VarDecl 0x265a21e3648 <col:5, col:28> col:9 used r_is_at_infinity 'int' cinit
|   |   `-IntegerLiteral 0x265a21e36b0 <col:28> 'int' 1
|   |-DeclStmt 0x265a21e3808 <line:372:5, col:25>
|   | `-VarDecl 0x265a21e3700 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:372:13 used wsize 'size_t *' cinit
|   |   `-ImplicitCastExpr 0x265a21e37f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'size_t *' <NullToPointer>
|   |     `-ParenExpr 0x265a21e37d0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x265a21e37a8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x265a21e3768 <col:26> 'int' 0
|   |-DeclStmt 0x265a21e39a0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:373:5, col:30>
|   | `-VarDecl 0x265a21e3898 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:373:19 used wNAF 'signed char **' cinit
|   |   `-ImplicitCastExpr 0x265a21e3988 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char **' <NullToPointer>
|   |     `-ParenExpr 0x265a21e3968 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x265a21e3940 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x265a21e3900 <col:26> 'int' 0
|   |-DeclStmt 0x265a21e3ad0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:374:5, col:28>
|   | `-VarDecl 0x265a21e39c8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:374:13 used wNAF_len 'size_t *' cinit
|   |   `-ImplicitCastExpr 0x265a21e3ab8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'size_t *' <NullToPointer>
|   |     `-ParenExpr 0x265a21e3a98 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x265a21e3a70 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x265a21e3a30 <col:26> 'int' 0
|   |-DeclStmt 0x265a21e3ba0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:375:5, col:23>
|   | `-VarDecl 0x265a21e3af8 <col:5, col:22> col:12 used max_len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x265a21e3b88 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x265a21e3b60 <col:22> 'int' 0
|   |-DeclStmt 0x265a21e3c30 <line:376:5, col:19>
|   | `-VarDecl 0x265a21e3bc8 <col:5, col:12> col:12 used num_val 'size_t':'unsigned long long'
|   |-DeclStmt 0x265a21e3ed0 <line:381:5, col:39>
|   | `-VarDecl 0x265a21e3dc8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:381:24 used pre_comp 'const EC_PRE_COMP *' cinit
|   |   `-ImplicitCastExpr 0x265a21e3eb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const EC_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x265a21e3e98 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x265a21e3e70 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x265a21e3e30 <col:26> 'int' 0
|   |-DeclStmt 0x265a21e3f90 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:382:5, col:23>
|   | `-VarDecl 0x265a21e3f00 <col:5, col:22> col:9 used num_scalar 'int' cinit
|   |   `-IntegerLiteral 0x265a21e3f68 <col:22> 'int' 0
|   |-DeclStmt 0x265a21e4050 <line:385:5, col:16>
|   | `-VarDecl 0x265a21e3fc0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x265a21e4028 <col:15> 'int' 0
|   |-IfStmt 0x265a21e40f0 <line:387:5, line:390:5>
|   | |-OpaqueValueExpr 0x265a21e40d8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21e40c0 <line:387:40, line:390:5>
|   |   `-ReturnStmt 0x265a21e40b0 <line:389:9, col:16>
|   |     `-IntegerLiteral 0x265a21e4088 <col:16> 'int' 0
|   |-IfStmt 0x265a21e4398 <line:392:5, line:394:5>
|   | |-OpaqueValueExpr 0x265a21e4380 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21e4370 <line:392:41, line:394:5>
|   |-IfStmt 0x265a21e48f0 <line:396:5, line:422:5>
|   | |-OpaqueValueExpr 0x265a21e48d8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21e48b8 <line:396:68, line:422:5>
|   |   |-IfStmt 0x265a21e46d0 <line:401:9, line:411:9>
|   |   | |-OpaqueValueExpr 0x265a21e46b8 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x265a21e46a8 <line:401:45, line:411:9>
|   |   `-IfStmt 0x265a21e48a0 <line:412:9, line:421:9>
|   |     |-OpaqueValueExpr 0x265a21e4888 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x265a21e4878 <line:412:45, line:421:9>
|   |-ForStmt 0x265a21e4b40 <line:424:5, line:429:5>
|   | |-BinaryOperator 0x265a21e4980 <line:424:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x265a21e4908 <col:10> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x265a21e4968 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x265a21e4940 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x265a21e4a10 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x265a21e49e0 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21e49a0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x265a21e49f8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x265a21e49c0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x265a21e4a50 <col:26, col:27> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x265a21e4a30 <col:26> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x265a21e4b28 <col:31, line:429:5>
|   |   `-IfStmt 0x265a21e4b10 <line:425:9, line:428:9>
|   |     |-OpaqueValueExpr 0x265a21e4af8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x265a21e4ae0 <line:425:52, line:428:9>
|   |       `-ReturnStmt 0x265a21e4ad0 <line:427:13, col:20>
|   |         `-IntegerLiteral 0x265a21e4aa8 <col:20> 'int' 0
|   |-IfStmt 0x265a21e4e98 <line:431:5, line:435:5>
|   | |-OpaqueValueExpr 0x265a21e4e80 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21e4e68 <line:431:22, line:435:5>
|   |   `-IfStmt 0x265a21e4e50 <line:433:9, line:434:18>
|   |     |-OpaqueValueExpr 0x265a21e4e38 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x265a21e4e20 <col:13, col:18> 'err' 0x265a21e4dd0
|   |-IfStmt 0x265a21e5db8 <line:437:5, line:478:5>
|   | |-OpaqueValueExpr 0x265a21e5da0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21e5d80 <line:437:25, line:478:5>
|   |   |-IfStmt 0x265a21e5148 <line:439:9, line:442:9>
|   |   | |-OpaqueValueExpr 0x265a21e5130 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x265a21e5118 <line:439:32, line:442:9>
|   |   |   `-GotoStmt 0x265a21e5100 <line:441:13, col:18> 'err' 0x265a21e4dd0
|   |   `-IfStmt 0x265a21e5d58 <line:447:9, line:477:9> has_else
|   |     |-OpaqueValueExpr 0x265a21e5d40 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x265a21e5b08 <line:449:21, line:471:9>
|   |     | |-BinaryOperator 0x265a21e54c0 <line:450:13, col:35> 'size_t':'unsigned long long' '='
|   |     | | |-DeclRefExpr 0x265a21e5408 <col:13> 'size_t':'unsigned long long' lvalue Var 0x265a21e3158 'blocksize' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x265a21e54a8 <col:25, col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   `-MemberExpr 0x265a21e5478 <col:25, col:35> 'const size_t':'const unsigned long long' lvalue ->blocksize 0x265a22668d0
|   |     | |     `-ImplicitCastExpr 0x265a21e5460 <col:25> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x265a21e5440 <col:25> 'const EC_PRE_COMP *' lvalue Var 0x265a21e3dc8 'pre_comp' 'const EC_PRE_COMP *'
|   |     | |-IfStmt 0x265a21e5718 <line:461:13, line:462:39>
|   |     | | |-BinaryOperator 0x265a21e5638 <line:461:17, col:39> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x265a21e5608 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x265a21e5580 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21e3210 'numblocks' 'size_t':'unsigned long long'
|   |     | | | `-ImplicitCastExpr 0x265a21e5620 <col:29, col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |   `-MemberExpr 0x265a21e55d8 <col:29, col:39> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x265a2266938
|   |     | | |     `-ImplicitCastExpr 0x265a21e55c0 <col:29> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x265a21e55a0 <col:29> 'const EC_PRE_COMP *' lvalue Var 0x265a21e3dc8 'pre_comp' 'const EC_PRE_COMP *'
|   |     | | `-BinaryOperator 0x265a21e56f8 <line:462:17, col:39> 'size_t':'unsigned long long' '='
|   |     | |   |-DeclRefExpr 0x265a21e5658 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21e3210 'numblocks' 'size_t':'unsigned long long'
|   |     | |   `-ImplicitCastExpr 0x265a21e56e0 <col:29, col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     `-MemberExpr 0x265a21e56b0 <col:29, col:39> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x265a2266938
|   |     | |       `-ImplicitCastExpr 0x265a21e5698 <col:29> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | |         `-DeclRefExpr 0x265a21e5678 <col:29> 'const EC_PRE_COMP *' lvalue Var 0x265a21e3dc8 'pre_comp' 'const EC_PRE_COMP *'
|   |     | |-BinaryOperator 0x265a21e58e8 <line:464:13, col:65> 'size_t':'unsigned long long' '='
|   |     | | |-DeclRefExpr 0x265a21e5730 <col:13> 'size_t':'unsigned long long' lvalue Var 0x265a21e32f8 'pre_points_per_block' 'size_t':'unsigned long long'
|   |     | | `-BinaryOperator 0x265a21e58c8 <col:36, col:65> 'size_t':'unsigned long long' '<<'
|   |     | |   |-CStyleCastExpr 0x265a21e57a0 <col:36, col:44> 'size_t':'unsigned long long' <IntegralCast>
|   |     | |   | `-IntegerLiteral 0x265a21e5768 <col:44> 'int' 1
|   |     | |   `-ParenExpr 0x265a21e58a8 <col:49, col:65> 'unsigned long long'
|   |     | |     `-BinaryOperator 0x265a21e5888 <col:50, col:64> 'unsigned long long' '-'
|   |     | |       |-ImplicitCastExpr 0x265a21e5858 <col:50, col:60> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       | `-MemberExpr 0x265a21e5800 <col:50, col:60> 'const size_t':'const unsigned long long' lvalue ->w 0x265a22669a0
|   |     | |       |   `-ImplicitCastExpr 0x265a21e57e8 <col:50> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | |       |     `-DeclRefExpr 0x265a21e57c8 <col:50> 'const EC_PRE_COMP *' lvalue Var 0x265a21e3dc8 'pre_comp' 'const EC_PRE_COMP *'
|   |     | |       `-ImplicitCastExpr 0x265a21e5870 <col:64> 'unsigned long long' <IntegralCast>
|   |     | |         `-IntegerLiteral 0x265a21e5830 <col:64> 'int' 1
|   |     | `-IfStmt 0x265a21e5af0 <line:467:13, line:470:13>
|   |     |   |-BinaryOperator 0x265a21e5a80 <line:467:17, col:77> 'int' '!='
|   |     |   | |-ImplicitCastExpr 0x265a21e5a68 <col:17, col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   | | `-MemberExpr 0x265a21e5940 <col:17, col:27> 'const size_t':'const unsigned long long' lvalue ->num 0x265a2266a80
|   |     |   | |   `-ImplicitCastExpr 0x265a21e5928 <col:17> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     |   | |     `-DeclRefExpr 0x265a21e5908 <col:17> 'const EC_PRE_COMP *' lvalue Var 0x265a21e3dc8 'pre_comp' 'const EC_PRE_COMP *'
|   |     |   | `-ParenExpr 0x265a21e5a48 <col:34, col:77> 'unsigned long long'
|   |     |   |   `-BinaryOperator 0x265a21e5a28 <col:35, col:57> 'unsigned long long' '*'
|   |     |   |     |-ImplicitCastExpr 0x265a21e59f8 <col:35, col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   |     | `-MemberExpr 0x265a21e59a8 <col:35, col:45> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x265a2266938
|   |     |   |     |   `-ImplicitCastExpr 0x265a21e5990 <col:35> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     |   |     |     `-DeclRefExpr 0x265a21e5970 <col:35> 'const EC_PRE_COMP *' lvalue Var 0x265a21e3dc8 'pre_comp' 'const EC_PRE_COMP *'
|   |     |   |     `-ImplicitCastExpr 0x265a21e5a10 <col:57> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   |       `-DeclRefExpr 0x265a21e59d8 <col:57> 'size_t':'unsigned long long' lvalue Var 0x265a21e32f8 'pre_points_per_block' 'size_t':'unsigned long long'
|   |     |   `-CompoundStmt 0x265a21e5ad8 <col:80, line:470:13>
|   |     |     `-GotoStmt 0x265a21e5ac0 <line:469:17, col:22> 'err' 0x265a21e4dd0
|   |     `-CompoundStmt 0x265a21e5d18 <line:471:16, line:477:9>
|   |       |-BinaryOperator 0x265a21e5bf8 <line:473:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'const EC_PRE_COMP *' '='
|   |       | |-DeclRefExpr 0x265a21e5b38 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:473:13> 'const EC_PRE_COMP *' lvalue Var 0x265a21e3dc8 'pre_comp' 'const EC_PRE_COMP *'
|   |       | `-ImplicitCastExpr 0x265a21e5be0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const EC_PRE_COMP *' <NullToPointer>
|   |       |   `-ParenExpr 0x265a21e5bc0 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x265a21e5b98 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x265a21e5b58 <col:26> 'int' 0
|   |       |-BinaryOperator 0x265a21e5c78 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:474:13, col:25> 'size_t':'unsigned long long' '='
|   |       | |-DeclRefExpr 0x265a21e5c18 <col:13> 'size_t':'unsigned long long' lvalue Var 0x265a21e3210 'numblocks' 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x265a21e5c60 <col:25> 'size_t':'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x265a21e5c38 <col:25> 'int' 1
|   |       `-BinaryOperator 0x265a21e5cf8 <line:475:13, col:26> 'int' '='
|   |         |-DeclRefExpr 0x265a21e5c98 <col:13> 'int' lvalue Var 0x265a21e3f00 'num_scalar' 'int'
|   |         `-IntegerLiteral 0x265a21e5cd0 <col:26> 'int' 1
|   |-BinaryOperator 0x265a21e5e98 <line:480:5, col:22> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x265a21e5dd0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x265a21e30c8 'totalnum' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x265a21e5e78 <col:16, col:22> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x265a21e5e48 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x265a21e5e08 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x265a21e5e60 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x265a21e5e28 <col:22> 'size_t':'unsigned long long' lvalue Var 0x265a21e3210 'numblocks' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x265a21e6170 <line:482:5, col:55> 'size_t *' '='
|   | |-DeclRefExpr 0x265a21e5eb8 <col:5> 'size_t *' lvalue Var 0x265a21e3700 'wsize' 'size_t *'
|   | `-ImplicitCastExpr 0x265a21e6158 <col:13, col:55> 'size_t *' <IntegralToPointer>
|   |   `-CallExpr 0x265a21e6130 <col:13, col:55> 'int'
|   |     |-ImplicitCastExpr 0x265a21e6118 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x265a21e5fe0 <col:13> 'int ()' Function 0x265a21e5f18 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x265a21e60f8 <col:28, col:54> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x265a21e60e0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x265a21e6000 <col:28> 'size_t':'unsigned long long' lvalue Var 0x265a21e30c8 'totalnum' 'size_t':'unsigned long long'
|   |       `-UnaryExprOrTypeTraitExpr 0x265a21e60c0 <col:39, col:54> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x265a21e60a0 <col:45, col:54> 'size_t':'unsigned long long' lvalue
|   |           `-ArraySubscriptExpr 0x265a21e6080 <col:46, col:53> 'size_t':'unsigned long long' lvalue
|   |             |-ImplicitCastExpr 0x265a21e6068 <col:46> 'size_t *' <LValueToRValue>
|   |             | `-DeclRefExpr 0x265a21e6020 <col:46> 'size_t *' lvalue Var 0x265a21e3700 'wsize' 'size_t *' non_odr_use_unevaluated
|   |             `-IntegerLiteral 0x265a21e6040 <col:52> 'int' 0
|   |-BinaryOperator 0x265a21e6358 <line:483:5, col:61> 'size_t *' '='
|   | |-DeclRefExpr 0x265a21e6190 <col:5> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   | `-ImplicitCastExpr 0x265a21e6340 <col:16, col:61> 'size_t *' <IntegralToPointer>
|   |   `-CallExpr 0x265a21e6318 <col:16, col:61> 'int'
|   |     |-ImplicitCastExpr 0x265a21e6300 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x265a21e61c8 <col:16> 'int ()' Function 0x265a21e5f18 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x265a21e62e0 <col:31, col:60> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x265a21e62c8 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x265a21e61e8 <col:31> 'size_t':'unsigned long long' lvalue Var 0x265a21e30c8 'totalnum' 'size_t':'unsigned long long'
|   |       `-UnaryExprOrTypeTraitExpr 0x265a21e62a8 <col:42, col:60> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x265a21e6288 <col:48, col:60> 'size_t':'unsigned long long' lvalue
|   |           `-ArraySubscriptExpr 0x265a21e6268 <col:49, col:59> 'size_t':'unsigned long long' lvalue
|   |             |-ImplicitCastExpr 0x265a21e6250 <col:49> 'size_t *' <LValueToRValue>
|   |             | `-DeclRefExpr 0x265a21e6208 <col:49> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *' non_odr_use_unevaluated
|   |             `-IntegerLiteral 0x265a21e6228 <col:58> 'int' 0
|   |-BinaryOperator 0x265a21e65c0 <line:485:5, col:59> 'signed char **' '='
|   | |-DeclRefExpr 0x265a21e6378 <col:5> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   | `-ImplicitCastExpr 0x265a21e65a8 <col:12, col:59> 'signed char **' <IntegralToPointer>
|   |   `-CallExpr 0x265a21e6580 <col:12, col:59> 'int'
|   |     |-ImplicitCastExpr 0x265a21e6568 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x265a21e63b0 <col:12> 'int ()' Function 0x265a21e5f18 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x265a21e6548 <col:27, col:58> 'unsigned long long' '*'
|   |       |-ParenExpr 0x265a21e6468 <col:27, col:40> 'unsigned long long'
|   |       | `-BinaryOperator 0x265a21e6448 <col:28, col:39> 'unsigned long long' '+'
|   |       |   |-ImplicitCastExpr 0x265a21e6418 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x265a21e63d0 <col:28> 'size_t':'unsigned long long' lvalue Var 0x265a21e30c8 'totalnum' 'size_t':'unsigned long long'
|   |       |   `-ImplicitCastExpr 0x265a21e6430 <col:39> 'unsigned long long' <IntegralCast>
|   |       |     `-IntegerLiteral 0x265a21e63f0 <col:39> 'int' 1
|   |       `-UnaryExprOrTypeTraitExpr 0x265a21e6528 <col:44, col:58> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x265a21e6508 <col:50, col:58> 'signed char *' lvalue
|   |           `-ArraySubscriptExpr 0x265a21e64e8 <col:51, col:57> 'signed char *' lvalue
|   |             |-ImplicitCastExpr 0x265a21e64d0 <col:51> 'signed char **' <LValueToRValue>
|   |             | `-DeclRefExpr 0x265a21e6488 <col:51> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **' non_odr_use_unevaluated
|   |             `-IntegerLiteral 0x265a21e64a8 <col:56> 'int' 0
|   |-IfStmt 0x265a21e6880 <line:489:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x265a21e6720 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:489:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x265a21e66f0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:489:9> 'signed char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21e6648 <col:9> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   | | `-ImplicitCastExpr 0x265a21e6708 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char **' <BitCast>
|   | |   `-ParenExpr 0x265a21e66d0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x265a21e66a8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x265a21e6668 <col:26> 'int' 0
|   | `-BinaryOperator 0x265a21e6860 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:490:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |   |-ArraySubscriptExpr 0x265a21e67a0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:490:9, col:15> 'signed char *' lvalue
|   |   | |-ImplicitCastExpr 0x265a21e6788 <col:9> 'signed char **' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x265a21e6740 <col:9> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |   | `-IntegerLiteral 0x265a21e6760 <col:14> 'int' 0
|   |   `-ImplicitCastExpr 0x265a21e6848 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |     `-ParenExpr 0x265a21e6828 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x265a21e6800 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x265a21e67c0 <col:26> 'int' 0
|   |-IfStmt 0x265a21e6cb0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:492:5, line:495:5>
|   | |-OpaqueValueExpr 0x265a21e6c98 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21e6c80 <line:492:79, line:495:5>
|   |   `-GotoStmt 0x265a21e6c68 <line:494:9, col:14> 'err' 0x265a21e4dd0
|   |-BinaryOperator 0x265a21e6d40 <line:500:5, col:15> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x265a21e6cc8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x265a21e3bc8 'num_val' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x265a21e6d28 <col:15> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x265a21e6d00 <col:15> 'int' 0
|   |-ForStmt 0x265a21e82c0 <line:502:5, line:516:5>
|   | |-BinaryOperator 0x265a21e6dc0 <line:502:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x265a21e6d60 <col:10> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x265a21e6da8 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x265a21e6d80 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x265a21e6ed0 <col:17, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x265a21e6ea8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21e6de0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x265a21e6e88 <col:21, col:27> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x265a21e6e40 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x265a21e6e00 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x265a21e6e70 <col:27> 'unsigned long long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x265a21e6e58 <col:27> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x265a21e6e20 <col:27> 'int' lvalue Var 0x265a21e3f00 'num_scalar' 'int'
|   | |-UnaryOperator 0x265a21e6f10 <col:39, col:40> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x265a21e6ef0 <col:39> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x265a21e8280 <col:44, line:516:5>
|   |   |-DeclStmt 0x265a21e6fa0 <line:503:9, col:20>
|   |   | `-VarDecl 0x265a21e6f38 <col:9, col:16> col:16 used bits 'size_t':'unsigned long long'
|   |   |-BinaryOperator 0x265a21e7780 <line:506:9, line:349:21> 'size_t':'unsigned long long' '='
|   |   | |-ArraySubscriptExpr 0x265a21e7150 <line:506:9, col:16> 'size_t':'unsigned long long' lvalue
|   |   | | |-ImplicitCastExpr 0x265a21e7120 <col:9> 'size_t *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x265a21e70e0 <col:9> 'size_t *' lvalue Var 0x265a21e3700 'wsize' 'size_t *'
|   |   | | `-ImplicitCastExpr 0x265a21e7138 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x265a21e7100 <col:15> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |   | `-ParenExpr 0x265a21e7760 <line:343:17, line:349:21> 'size_t':'unsigned long long'
|   |   |   `-CStyleCastExpr 0x265a21e7738 <line:343:18, line:349:20> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x265a21e7718 <line:344:18, line:349:20> 'int'
|   |   |       `-ConditionalOperator 0x265a21e76b8 <line:344:19, line:349:19> 'int'
|   |   |         |-BinaryOperator 0x265a21e7208 <line:344:19, col:26> 'int' '>='
|   |   |         | |-ImplicitCastExpr 0x265a21e71d8 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         | | `-ParenExpr 0x265a21e7190 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |         | |   `-DeclRefExpr 0x265a21e7170 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x265a21e6f38 'bits' 'size_t':'unsigned long long'
|   |   |         | `-ImplicitCastExpr 0x265a21e71f0 <line:344:26> 'unsigned long long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x265a21e71b0 <col:26> 'int' 2000
|   |   |         |-IntegerLiteral 0x265a21e7228 <col:33> 'int' 6
|   |   |         `-ConditionalOperator 0x265a21e7688 <line:345:19, line:349:19> 'int'
|   |   |           |-BinaryOperator 0x265a21e72e8 <line:345:19, col:27> 'int' '>='
|   |   |           | |-ImplicitCastExpr 0x265a21e72b8 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |           | | `-ParenExpr 0x265a21e7270 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |           | |   `-DeclRefExpr 0x265a21e7250 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x265a21e6f38 'bits' 'size_t':'unsigned long long'
|   |   |           | `-ImplicitCastExpr 0x265a21e72d0 <line:345:27> 'unsigned long long' <IntegralCast>
|   |   |           |   `-IntegerLiteral 0x265a21e7290 <col:27> 'int' 800
|   |   |           |-IntegerLiteral 0x265a21e7308 <col:33> 'int' 5
|   |   |           `-ConditionalOperator 0x265a21e7658 <line:346:19, line:349:19> 'int'
|   |   |             |-BinaryOperator 0x265a21e73c8 <line:346:19, col:27> 'int' '>='
|   |   |             | |-ImplicitCastExpr 0x265a21e7398 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |             | | `-ParenExpr 0x265a21e7350 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |             | |   `-DeclRefExpr 0x265a21e7330 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x265a21e6f38 'bits' 'size_t':'unsigned long long'
|   |   |             | `-ImplicitCastExpr 0x265a21e73b0 <line:346:27> 'unsigned long long' <IntegralCast>
|   |   |             |   `-IntegerLiteral 0x265a21e7370 <col:27> 'int' 300
|   |   |             |-IntegerLiteral 0x265a21e73e8 <col:33> 'int' 4
|   |   |             `-ConditionalOperator 0x265a21e7628 <line:347:19, line:349:19> 'int'
|   |   |               |-BinaryOperator 0x265a21e74a8 <line:347:19, col:28> 'int' '>='
|   |   |               | |-ImplicitCastExpr 0x265a21e7478 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |               | | `-ParenExpr 0x265a21e7430 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |               | |   `-DeclRefExpr 0x265a21e7410 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x265a21e6f38 'bits' 'size_t':'unsigned long long'
|   |   |               | `-ImplicitCastExpr 0x265a21e7490 <line:347:28> 'unsigned long long' <IntegralCast>
|   |   |               |   `-IntegerLiteral 0x265a21e7450 <col:28> 'int' 70
|   |   |               |-IntegerLiteral 0x265a21e74c8 <col:33> 'int' 3
|   |   |               `-ConditionalOperator 0x265a21e75f8 <line:348:19, line:349:19> 'int'
|   |   |                 |-BinaryOperator 0x265a21e7588 <line:348:19, col:28> 'int' '>='
|   |   |                 | |-ImplicitCastExpr 0x265a21e7558 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |                 | | `-ParenExpr 0x265a21e7510 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |                 | |   `-DeclRefExpr 0x265a21e74f0 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x265a21e6f38 'bits' 'size_t':'unsigned long long'
|   |   |                 | `-ImplicitCastExpr 0x265a21e7570 <line:348:28> 'unsigned long long' <IntegralCast>
|   |   |                 |   `-IntegerLiteral 0x265a21e7530 <col:28> 'int' 20
|   |   |                 |-IntegerLiteral 0x265a21e75a8 <col:33> 'int' 2
|   |   |                 `-IntegerLiteral 0x265a21e75d0 <line:349:19> 'int' 1
|   |   |-CompoundAssignOperator 0x265a21e7968 <line:507:9, col:46> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x265a21e77a0 <col:9> 'size_t':'unsigned long long' lvalue Var 0x265a21e3bc8 'num_val' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x265a21e7948 <col:20, col:46> 'size_t':'unsigned long long' '<<'
|   |   |   |-CStyleCastExpr 0x265a21e77f8 <col:20, col:28> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   | `-IntegerLiteral 0x265a21e77c0 <col:28> 'int' 1
|   |   |   `-ParenExpr 0x265a21e7928 <col:33, col:46> 'unsigned long long'
|   |   |     `-BinaryOperator 0x265a21e7908 <col:34, col:45> 'unsigned long long' '-'
|   |   |       |-ImplicitCastExpr 0x265a21e78d8 <col:34, col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | `-ArraySubscriptExpr 0x265a21e7890 <col:34, col:41> 'size_t':'unsigned long long' lvalue
|   |   |       |   |-ImplicitCastExpr 0x265a21e7860 <col:34> 'size_t *' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x265a21e7820 <col:34> 'size_t *' lvalue Var 0x265a21e3700 'wsize' 'size_t *'
|   |   |       |   `-ImplicitCastExpr 0x265a21e7878 <col:40> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x265a21e7840 <col:40> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |   |       `-ImplicitCastExpr 0x265a21e78f0 <col:45> 'unsigned long long' <IntegralCast>
|   |   |         `-IntegerLiteral 0x265a21e78b0 <col:45> 'int' 1
|   |   |-BinaryOperator 0x265a21e7b28 <line:508:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |   | |-ArraySubscriptExpr 0x265a21e7a68 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:508:9, col:19> 'signed char *' lvalue
|   |   | | |-ImplicitCastExpr 0x265a21e7a50 <col:9> 'signed char **' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x265a21e7998 <col:9> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |   | | `-BinaryOperator 0x265a21e7a30 <col:14, col:18> 'unsigned long long' '+'
|   |   | |   |-ImplicitCastExpr 0x265a21e7a00 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x265a21e79b8 <col:14> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |   | |   `-ImplicitCastExpr 0x265a21e7a18 <col:18> 'unsigned long long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x265a21e79d8 <col:18> 'int' 1
|   |   | `-ImplicitCastExpr 0x265a21e7b10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |   |   `-ParenExpr 0x265a21e7af0 <col:17, col:27> 'void *'
|   |   |     `-CStyleCastExpr 0x265a21e7ac8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |       `-IntegerLiteral 0x265a21e7a88 <col:26> 'int' 0
|   |   |-IfStmt 0x265a21e8050 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:512:9, line:513:18>
|   |   | |-BinaryOperator 0x265a21e8018 <line:512:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x265a21e7fe8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:512:13, col:19> 'signed char *' <LValueToRValue>
|   |   | | | `-ArraySubscriptExpr 0x265a21e7f40 <col:13, col:19> 'signed char *' lvalue
|   |   | | |   |-ImplicitCastExpr 0x265a21e7f10 <col:13> 'signed char **' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x265a21e7ed0 <col:13> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |   | | |   `-ImplicitCastExpr 0x265a21e7f28 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x265a21e7ef0 <col:18> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x265a21e8000 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <BitCast>
|   |   | |   `-ParenExpr 0x265a21e7fc8 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x265a21e7fa0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x265a21e7f60 <col:26> 'int' 0
|   |   | `-GotoStmt 0x265a21e8038 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:513:13, col:18> 'err' 0x265a21e4dd0
|   |   `-IfStmt 0x265a21e8268 <line:514:9, line:515:33>
|   |     |-BinaryOperator 0x265a21e8160 <line:514:13, col:27> 'int' '>'
|   |     | |-ImplicitCastExpr 0x265a21e8130 <col:13, col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-ArraySubscriptExpr 0x265a21e80d8 <col:13, col:23> 'size_t':'unsigned long long' lvalue
|   |     | |   |-ImplicitCastExpr 0x265a21e80a8 <col:13> 'size_t *' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x265a21e8068 <col:13> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   |     | |   `-ImplicitCastExpr 0x265a21e80c0 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x265a21e8088 <col:22> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x265a21e8148 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x265a21e80f8 <col:27> 'size_t':'unsigned long long' lvalue Var 0x265a21e3af8 'max_len' 'size_t':'unsigned long long'
|   |     `-BinaryOperator 0x265a21e8248 <line:515:13, col:33> 'size_t':'unsigned long long' '='
|   |       |-DeclRefExpr 0x265a21e8180 <col:13> 'size_t':'unsigned long long' lvalue Var 0x265a21e3af8 'max_len' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x265a21e8230 <col:23, col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x265a21e8210 <col:23, col:33> 'size_t':'unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x265a21e81e0 <col:23> 'size_t *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x265a21e81a0 <col:23> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   |           `-ImplicitCastExpr 0x265a21e81f8 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |             `-DeclRefExpr 0x265a21e81c0 <col:32> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |-IfStmt 0x265a21ead60 <line:518:5, line:625:5>
|   | |-ImplicitCastExpr 0x265a21e8318 <line:518:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x265a21e82f8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x265a21e3210 'numblocks' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x265a21ead48 <col:20, line:625:5>
|   |   `-IfStmt 0x265a21ead20 <line:521:9, line:624:9> has_else
|   |     |-BinaryOperator 0x265a21e8408 <line:521:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x265a21e83d8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:521:13> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x265a21e8330 <col:13> 'const EC_PRE_COMP *' lvalue Var 0x265a21e3dc8 'pre_comp' 'const EC_PRE_COMP *'
|   |     | `-ImplicitCastExpr 0x265a21e83f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const EC_PRE_COMP *' <BitCast>
|   |     |   `-ParenExpr 0x265a21e83b8 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x265a21e8390 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x265a21e8350 <col:26> 'int' 0
|   |     |-CompoundStmt 0x265a21e8510 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:521:31, line:527:9>
|   |     | `-IfStmt 0x265a21e84f8 <line:522:13, line:525:13>
|   |     |   |-BinaryOperator 0x265a21e8488 <line:522:17, col:31> 'int' '!='
|   |     |   | |-ImplicitCastExpr 0x265a21e8470 <col:17> 'int' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x265a21e8428 <col:17> 'int' lvalue Var 0x265a21e3f00 'num_scalar' 'int'
|   |     |   | `-IntegerLiteral 0x265a21e8448 <col:31> 'int' 1
|   |     |   `-CompoundStmt 0x265a21e84e0 <col:34, line:525:13>
|   |     |     `-GotoStmt 0x265a21e84c8 <line:524:17, col:22> 'err' 0x265a21e4dd0
|   |     `-CompoundStmt 0x265a21eace0 <line:527:16, line:624:9>
|   |       |-DeclStmt 0x265a21e8648 <line:528:13, col:41>
|   |       | `-VarDecl 0x265a21e8540 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:528:26 used tmp_wNAF 'signed char *' cinit
|   |       |   `-ImplicitCastExpr 0x265a21e8630 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |       |     `-ParenExpr 0x265a21e8610 <col:17, col:27> 'void *'
|   |       |       `-CStyleCastExpr 0x265a21e85e8 <col:18, col:26> 'void *' <NullToPointer>
|   |       |         `-IntegerLiteral 0x265a21e85a8 <col:26> 'int' 0
|   |       |-DeclStmt 0x265a21e8718 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:529:13, col:31>
|   |       | `-VarDecl 0x265a21e8670 <col:13, col:30> col:20 used tmp_len 'size_t':'unsigned long long' cinit
|   |       |   `-ImplicitCastExpr 0x265a21e8700 <col:30> 'size_t':'unsigned long long' <IntegralCast>
|   |       |     `-IntegerLiteral 0x265a21e86d8 <col:30> 'int' 0
|   |       |-IfStmt 0x265a21e8800 <line:531:13, line:534:13>
|   |       | |-BinaryOperator 0x265a21e8790 <line:531:17, col:31> 'int' '!='
|   |       | | |-ImplicitCastExpr 0x265a21e8778 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x265a21e8730 <col:17> 'int' lvalue Var 0x265a21e3f00 'num_scalar' 'int'
|   |       | | `-IntegerLiteral 0x265a21e8750 <col:31> 'int' 0
|   |       | `-CompoundStmt 0x265a21e87e8 <col:34, line:534:13>
|   |       |   `-GotoStmt 0x265a21e87d0 <line:533:17, col:22> 'err' 0x265a21e4dd0
|   |       |-BinaryOperator 0x265a21e8928 <line:539:13, col:36> 'size_t':'unsigned long long' '='
|   |       | |-ArraySubscriptExpr 0x265a21e8888 <col:13, col:22> 'size_t':'unsigned long long' lvalue
|   |       | | |-ImplicitCastExpr 0x265a21e8858 <col:13> 'size_t *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x265a21e8818 <col:13> 'size_t *' lvalue Var 0x265a21e3700 'wsize' 'size_t *'
|   |       | | `-ImplicitCastExpr 0x265a21e8870 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x265a21e8838 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x265a21e8910 <col:26, col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |   `-MemberExpr 0x265a21e88e0 <col:26, col:36> 'const size_t':'const unsigned long long' lvalue ->w 0x265a22669a0
|   |       |     `-ImplicitCastExpr 0x265a21e88c8 <col:26> 'const EC_PRE_COMP *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x265a21e88a8 <col:26> 'const EC_PRE_COMP *' lvalue Var 0x265a21e3dc8 'pre_comp' 'const EC_PRE_COMP *'
|   |       |-IfStmt 0x265a21e8ae8 <line:541:13, line:542:22>
|   |       | |-UnaryOperator 0x265a21e8ab8 <line:541:17, col:18> 'int' prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x265a21e8aa0 <col:18> 'signed char *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x265a21e8a80 <col:18> 'signed char *' lvalue Var 0x265a21e8540 'tmp_wNAF' 'signed char *'
|   |       | `-GotoStmt 0x265a21e8ad0 <line:542:17, col:22> 'err' 0x265a21e4dd0
|   |       `-IfStmt 0x265a21eacb8 <line:544:13, line:623:13> has_else
|   |         |-BinaryOperator 0x265a21e8b70 <line:544:17, col:28> 'int' '<='
|   |         | |-ImplicitCastExpr 0x265a21e8b40 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x265a21e8b00 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21e8670 'tmp_len' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x265a21e8b58 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x265a21e8b20 <col:28> 'size_t':'unsigned long long' lvalue Var 0x265a21e3af8 'max_len' 'size_t':'unsigned long long'
|   |         |-CompoundStmt 0x265a21e90e0 <col:37, line:560:13>
|   |         | |-BinaryOperator 0x265a21e8bf0 <line:551:17, col:29> 'size_t':'unsigned long long' '='
|   |         | | |-DeclRefExpr 0x265a21e8b90 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21e3210 'numblocks' 'size_t':'unsigned long long'
|   |         | | `-ImplicitCastExpr 0x265a21e8bd8 <col:29> 'size_t':'unsigned long long' <IntegralCast>
|   |         | |   `-IntegerLiteral 0x265a21e8bb0 <col:29> 'int' 1
|   |         | |-BinaryOperator 0x265a21e8cc8 <line:552:17, col:34> 'size_t':'unsigned long long' '='
|   |         | | |-DeclRefExpr 0x265a21e8c10 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21e30c8 'totalnum' 'size_t':'unsigned long long'
|   |         | | `-BinaryOperator 0x265a21e8ca8 <col:28, col:34> 'unsigned long long' '+'
|   |         | |   |-ImplicitCastExpr 0x265a21e8c78 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | |   | `-DeclRefExpr 0x265a21e8c30 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   |         | |   `-ImplicitCastExpr 0x265a21e8c90 <col:34> 'unsigned long long' <IntegralCast>
|   |         | |     `-IntegerLiteral 0x265a21e8c50 <col:34> 'int' 1
|   |         | |-BinaryOperator 0x265a21e8db0 <line:553:17, col:29> 'signed char *' '='
|   |         | | |-ArraySubscriptExpr 0x265a21e8d58 <col:17, col:25> 'signed char *' lvalue
|   |         | | | |-ImplicitCastExpr 0x265a21e8d28 <col:17> 'signed char **' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x265a21e8ce8 <col:17> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |         | | | `-ImplicitCastExpr 0x265a21e8d40 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x265a21e8d08 <col:22> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   |         | | `-ImplicitCastExpr 0x265a21e8d98 <col:29> 'signed char *' <LValueToRValue>
|   |         | |   `-DeclRefExpr 0x265a21e8d78 <col:29> 'signed char *' lvalue Var 0x265a21e8540 'tmp_wNAF' 'signed char *'
|   |         | |-BinaryOperator 0x265a21e8f80 <line:554:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |         | | |-ArraySubscriptExpr 0x265a21e8ea0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:554:17, col:29> 'signed char *' lvalue
|   |         | | | |-ImplicitCastExpr 0x265a21e8e88 <col:17> 'signed char **' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x265a21e8dd0 <col:17> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |         | | | `-BinaryOperator 0x265a21e8e68 <col:22, col:28> 'unsigned long long' '+'
|   |         | | |   |-ImplicitCastExpr 0x265a21e8e38 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | |   | `-DeclRefExpr 0x265a21e8df0 <col:22> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   |         | | |   `-ImplicitCastExpr 0x265a21e8e50 <col:28> 'unsigned long long' <IntegralCast>
|   |         | | |     `-IntegerLiteral 0x265a21e8e10 <col:28> 'int' 1
|   |         | | `-ImplicitCastExpr 0x265a21e8f68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |         | |   `-ParenExpr 0x265a21e8f48 <col:17, col:27> 'void *'
|   |         | |     `-CStyleCastExpr 0x265a21e8f20 <col:18, col:26> 'void *' <NullToPointer>
|   |         | |       `-IntegerLiteral 0x265a21e8ee0 <col:26> 'int' 0
|   |         | `-BinaryOperator 0x265a21e9068 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:555:17, col:33> 'size_t':'unsigned long long' '='
|   |         |   |-ArraySubscriptExpr 0x265a21e9010 <col:17, col:29> 'size_t':'unsigned long long' lvalue
|   |         |   | |-ImplicitCastExpr 0x265a21e8fe0 <col:17> 'size_t *' <LValueToRValue>
|   |         |   | | `-DeclRefExpr 0x265a21e8fa0 <col:17> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   |         |   | `-ImplicitCastExpr 0x265a21e8ff8 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x265a21e8fc0 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   |         |   `-ImplicitCastExpr 0x265a21e9050 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x265a21e9030 <col:33> 'size_t':'unsigned long long' lvalue Var 0x265a21e8670 'tmp_len' 'size_t':'unsigned long long'
|   |         `-CompoundStmt 0x265a21eac80 <line:560:20, line:623:13>
|   |           |-DeclStmt 0x265a21e9198 <line:566:17, col:32>
|   |           | `-VarDecl 0x265a21e9130 <col:17, col:30> col:30 used pp 'signed char *'
|   |           |-IfStmt 0x265a21e9718 <line:569:17, line:580:17>
|   |           | |-BinaryOperator 0x265a21e9278 <line:569:21, col:43> 'int' '<'
|   |           | | |-ImplicitCastExpr 0x265a21e9260 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | | | `-DeclRefExpr 0x265a21e91b0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x265a21e8670 'tmp_len' 'size_t':'unsigned long long'
|   |           | | `-BinaryOperator 0x265a21e9240 <col:31, col:43> 'unsigned long long' '*'
|   |           | |   |-ImplicitCastExpr 0x265a21e9210 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |   | `-DeclRefExpr 0x265a21e91d0 <col:31> 'size_t':'unsigned long long' lvalue Var 0x265a21e3210 'numblocks' 'size_t':'unsigned long long'
|   |           | |   `-ImplicitCastExpr 0x265a21e9228 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x265a21e91f0 <col:43> 'size_t':'unsigned long long' lvalue Var 0x265a21e3158 'blocksize' 'size_t':'unsigned long long'
|   |           | `-CompoundStmt 0x265a21e96f0 <col:54, line:580:17>
|   |           |   |-BinaryOperator 0x265a21e9420 <line:573:21, col:61> 'size_t':'unsigned long long' '='
|   |           |   | |-DeclRefExpr 0x265a21e9298 <col:21> 'size_t':'unsigned long long' lvalue Var 0x265a21e3210 'numblocks' 'size_t':'unsigned long long'
|   |           |   | `-BinaryOperator 0x265a21e9400 <col:33, col:61> 'unsigned long long' '/'
|   |           |   |   |-ParenExpr 0x265a21e93a8 <col:33, col:57> 'unsigned long long'
|   |           |   |   | `-BinaryOperator 0x265a21e9388 <col:34, col:56> 'unsigned long long' '-'
|   |           |   |   |   |-BinaryOperator 0x265a21e9328 <col:34, col:44> 'unsigned long long' '+'
|   |           |   |   |   | |-ImplicitCastExpr 0x265a21e92f8 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   |   | | `-DeclRefExpr 0x265a21e92b8 <col:34> 'size_t':'unsigned long long' lvalue Var 0x265a21e8670 'tmp_len' 'size_t':'unsigned long long'
|   |           |   |   |   | `-ImplicitCastExpr 0x265a21e9310 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   |   |   `-DeclRefExpr 0x265a21e92d8 <col:44> 'size_t':'unsigned long long' lvalue Var 0x265a21e3158 'blocksize' 'size_t':'unsigned long long'
|   |           |   |   |   `-ImplicitCastExpr 0x265a21e9370 <col:56> 'unsigned long long' <IntegralCast>
|   |           |   |   |     `-IntegerLiteral 0x265a21e9348 <col:56> 'int' 1
|   |           |   |   `-ImplicitCastExpr 0x265a21e93e8 <col:61> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |     `-DeclRefExpr 0x265a21e93c8 <col:61> 'size_t':'unsigned long long' lvalue Var 0x265a21e3158 'blocksize' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x265a21e9608 <line:574:21, line:578:21>
|   |           |   | |-BinaryOperator 0x265a21e94f8 <line:574:25, col:47> 'int' '>'
|   |           |   | | |-ImplicitCastExpr 0x265a21e94c8 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x265a21e9440 <col:25> 'size_t':'unsigned long long' lvalue Var 0x265a21e3210 'numblocks' 'size_t':'unsigned long long'
|   |           |   | | `-ImplicitCastExpr 0x265a21e94e0 <col:37, col:47> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   `-MemberExpr 0x265a21e9498 <col:37, col:47> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x265a2266938
|   |           |   | |     `-ImplicitCastExpr 0x265a21e9480 <col:37> 'const EC_PRE_COMP *' <LValueToRValue>
|   |           |   | |       `-DeclRefExpr 0x265a21e9460 <col:37> 'const EC_PRE_COMP *' lvalue Var 0x265a21e3dc8 'pre_comp' 'const EC_PRE_COMP *'
|   |           |   | `-CompoundStmt 0x265a21e95e8 <col:58, line:578:21>
|   |           |   |   |-CallExpr 0x265a21e9590 <line:576:25, col:46> 'int'
|   |           |   |   | |-ImplicitCastExpr 0x265a21e9578 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |   | | `-DeclRefExpr 0x265a21e9538 <col:25> 'int ()' Function 0x265a21dd418 'OPENSSL_free' 'int ()'
|   |           |   |   | `-ImplicitCastExpr 0x265a21e95b8 <col:38> 'signed char *' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x265a21e9558 <col:38> 'signed char *' lvalue Var 0x265a21e8540 'tmp_wNAF' 'signed char *'
|   |           |   |   `-GotoStmt 0x265a21e95d0 <line:577:25, col:30> 'err' 0x265a21e4dd0
|   |           |   `-BinaryOperator 0x265a21e96d0 <line:579:21, col:38> 'size_t':'unsigned long long' '='
|   |           |     |-DeclRefExpr 0x265a21e9620 <col:21> 'size_t':'unsigned long long' lvalue Var 0x265a21e30c8 'totalnum' 'size_t':'unsigned long long'
|   |           |     `-BinaryOperator 0x265a21e96b0 <col:32, col:38> 'unsigned long long' '+'
|   |           |       |-ImplicitCastExpr 0x265a21e9680 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x265a21e9640 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   |           |       `-ImplicitCastExpr 0x265a21e9698 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x265a21e9660 <col:38> 'size_t':'unsigned long long' lvalue Var 0x265a21e3210 'numblocks' 'size_t':'unsigned long long'
|   |           |-BinaryOperator 0x265a21e97a0 <line:583:17, col:22> 'signed char *' '='
|   |           | |-DeclRefExpr 0x265a21e9730 <col:17> 'signed char *' lvalue Var 0x265a21e9130 'pp' 'signed char *'
|   |           | `-ImplicitCastExpr 0x265a21e9788 <col:22> 'signed char *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x265a21e9768 <col:22> 'signed char *' lvalue Var 0x265a21e8540 'tmp_wNAF' 'signed char *'
|   |           |-ForStmt 0x265a21eabb0 <line:586:17, line:621:17>
|   |           | |-BinaryOperator 0x265a21e9850 <line:586:22, col:26> 'size_t':'unsigned long long' '='
|   |           | | |-DeclRefExpr 0x265a21e97f8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           | | `-ImplicitCastExpr 0x265a21e9838 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x265a21e9818 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   |           | |-<<<NULL>>>
|   |           | |-BinaryOperator 0x265a21e98e0 <col:31, col:35> 'int' '<'
|   |           | | |-ImplicitCastExpr 0x265a21e98b0 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | | | `-DeclRefExpr 0x265a21e9870 <col:31> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           | | `-ImplicitCastExpr 0x265a21e98c8 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x265a21e9890 <col:35> 'size_t':'unsigned long long' lvalue Var 0x265a21e30c8 'totalnum' 'size_t':'unsigned long long'
|   |           | |-UnaryOperator 0x265a21e9920 <col:45, col:46> 'size_t':'unsigned long long' postfix '++'
|   |           | | `-DeclRefExpr 0x265a21e9900 <col:45> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           | `-CompoundStmt 0x265a21eab60 <col:50, line:621:17>
|   |           |   |-IfStmt 0x265a21e9e40 <line:587:21, line:600:39> has_else
|   |           |   | |-BinaryOperator 0x265a21e9a08 <line:587:25, col:40> 'int' '<'
|   |           |   | | |-ImplicitCastExpr 0x265a21e99f0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x265a21e9938 <col:25> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |   | | `-BinaryOperator 0x265a21e99d0 <col:29, col:40> 'unsigned long long' '-'
|   |           |   | |   |-ImplicitCastExpr 0x265a21e99a0 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   | `-DeclRefExpr 0x265a21e9958 <col:29> 'size_t':'unsigned long long' lvalue Var 0x265a21e30c8 'totalnum' 'size_t':'unsigned long long'
|   |           |   | |   `-ImplicitCastExpr 0x265a21e99b8 <col:40> 'unsigned long long' <IntegralCast>
|   |           |   | |     `-IntegerLiteral 0x265a21e9978 <col:40> 'int' 1
|   |           |   | |-CompoundStmt 0x265a21e9d30 <col:43, line:595:21>
|   |           |   | | |-BinaryOperator 0x265a21e9af0 <line:588:25, col:39> 'size_t':'unsigned long long' '='
|   |           |   | | | |-ArraySubscriptExpr 0x265a21e9a98 <col:25, col:35> 'size_t':'unsigned long long' lvalue
|   |           |   | | | | |-ImplicitCastExpr 0x265a21e9a68 <col:25> 'size_t *' <LValueToRValue>
|   |           |   | | | | | `-DeclRefExpr 0x265a21e9a28 <col:25> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   |           |   | | | | `-ImplicitCastExpr 0x265a21e9a80 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | |   `-DeclRefExpr 0x265a21e9a48 <col:34> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |   | | | `-ImplicitCastExpr 0x265a21e9ad8 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | |   `-DeclRefExpr 0x265a21e9ab8 <col:39> 'size_t':'unsigned long long' lvalue Var 0x265a21e3158 'blocksize' 'size_t':'unsigned long long'
|   |           |   | | |-IfStmt 0x265a21e9c90 <line:589:25, line:593:25>
|   |           |   | | | |-BinaryOperator 0x265a21e9b80 <line:589:29, col:39> 'int' '<'
|   |           |   | | | | |-ImplicitCastExpr 0x265a21e9b50 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | | | `-DeclRefExpr 0x265a21e9b10 <col:29> 'size_t':'unsigned long long' lvalue Var 0x265a21e8670 'tmp_len' 'size_t':'unsigned long long'
|   |           |   | | | | `-ImplicitCastExpr 0x265a21e9b68 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | |   `-DeclRefExpr 0x265a21e9b30 <col:39> 'size_t':'unsigned long long' lvalue Var 0x265a21e3158 'blocksize' 'size_t':'unsigned long long'
|   |           |   | | | `-CompoundStmt 0x265a21e9c70 <col:50, line:593:25>
|   |           |   | | |   |-CallExpr 0x265a21e9c18 <line:591:29, col:50> 'int'
|   |           |   | | |   | |-ImplicitCastExpr 0x265a21e9c00 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |           |   | | |   | | `-DeclRefExpr 0x265a21e9bc0 <col:29> 'int ()' Function 0x265a21dd418 'OPENSSL_free' 'int ()'
|   |           |   | | |   | `-ImplicitCastExpr 0x265a21e9c40 <col:42> 'signed char *' <LValueToRValue>
|   |           |   | | |   |   `-DeclRefExpr 0x265a21e9be0 <col:42> 'signed char *' lvalue Var 0x265a21e8540 'tmp_wNAF' 'signed char *'
|   |           |   | | |   `-GotoStmt 0x265a21e9c58 <line:592:29, col:34> 'err' 0x265a21e4dd0
|   |           |   | | `-CompoundAssignOperator 0x265a21e9d00 <line:594:25, col:36> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           |   | |   |-DeclRefExpr 0x265a21e9ca8 <col:25> 'size_t':'unsigned long long' lvalue Var 0x265a21e8670 'tmp_len' 'size_t':'unsigned long long'
|   |           |   | |   `-ImplicitCastExpr 0x265a21e9ce8 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |     `-DeclRefExpr 0x265a21e9cc8 <col:36> 'size_t':'unsigned long long' lvalue Var 0x265a21e3158 'blocksize' 'size_t':'unsigned long long'
|   |           |   | `-BinaryOperator 0x265a21e9e20 <line:600:25, col:39> 'size_t':'unsigned long long' '='
|   |           |   |   |-ArraySubscriptExpr 0x265a21e9dc8 <col:25, col:35> 'size_t':'unsigned long long' lvalue
|   |           |   |   | |-ImplicitCastExpr 0x265a21e9d98 <col:25> 'size_t *' <LValueToRValue>
|   |           |   |   | | `-DeclRefExpr 0x265a21e9d58 <col:25> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   |           |   |   | `-ImplicitCastExpr 0x265a21e9db0 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x265a21e9d78 <col:34> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |   |   `-ImplicitCastExpr 0x265a21e9e08 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |     `-DeclRefExpr 0x265a21e9de8 <col:39> 'size_t':'unsigned long long' lvalue Var 0x265a21e8670 'tmp_len' 'size_t':'unsigned long long'
|   |           |   |-BinaryOperator 0x265a21e9ff8 <line:602:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |           |   | |-ArraySubscriptExpr 0x265a21e9f38 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:602:21, col:31> 'signed char *' lvalue
|   |           |   | | |-ImplicitCastExpr 0x265a21e9f20 <col:21> 'signed char **' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x265a21e9e68 <col:21> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |           |   | | `-BinaryOperator 0x265a21e9f00 <col:26, col:30> 'unsigned long long' '+'
|   |           |   | |   |-ImplicitCastExpr 0x265a21e9ed0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   | `-DeclRefExpr 0x265a21e9e88 <col:26> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |   | |   `-ImplicitCastExpr 0x265a21e9ee8 <col:30> 'unsigned long long' <IntegralCast>
|   |           |   | |     `-IntegerLiteral 0x265a21e9ea8 <col:30> 'int' 1
|   |           |   | `-ImplicitCastExpr 0x265a21e9fe0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |           |   |   `-ParenExpr 0x265a21e9fc0 <col:17, col:27> 'void *'
|   |           |   |     `-CStyleCastExpr 0x265a21e9f98 <col:18, col:26> 'void *' <NullToPointer>
|   |           |   |       `-IntegerLiteral 0x265a21e9f58 <col:26> 'int' 0
|   |           |   |-BinaryOperator 0x265a21ea1c8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:603:21, col:57> 'signed char *' '='
|   |           |   | |-ArraySubscriptExpr 0x265a21ea088 <col:21, col:27> 'signed char *' lvalue
|   |           |   | | |-ImplicitCastExpr 0x265a21ea058 <col:21> 'signed char **' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x265a21ea018 <col:21> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |           |   | | `-ImplicitCastExpr 0x265a21ea070 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   `-DeclRefExpr 0x265a21ea038 <col:26> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |   | `-ImplicitCastExpr 0x265a21ea1b0 <col:31, col:57> 'signed char *' <IntegralToPointer>
|   |           |   |   `-CallExpr 0x265a21ea170 <col:31, col:57> 'int'
|   |           |   |     |-ImplicitCastExpr 0x265a21ea158 <col:31> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |     | `-DeclRefExpr 0x265a21ea0a8 <col:31> 'int ()' Function 0x265a21e5f18 'OPENSSL_malloc' 'int ()'
|   |           |   |     `-ImplicitCastExpr 0x265a21ea198 <col:46, col:56> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |       `-ArraySubscriptExpr 0x265a21ea138 <col:46, col:56> 'size_t':'unsigned long long' lvalue
|   |           |   |         |-ImplicitCastExpr 0x265a21ea108 <col:46> 'size_t *' <LValueToRValue>
|   |           |   |         | `-DeclRefExpr 0x265a21ea0c8 <col:46> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   |           |   |         `-ImplicitCastExpr 0x265a21ea120 <col:55> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |           `-DeclRefExpr 0x265a21ea0e8 <col:55> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x265a21ea440 <line:604:21, line:608:21>
|   |           |   | |-BinaryOperator 0x265a21ea330 <line:604:25, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |           |   | | |-ImplicitCastExpr 0x265a21ea300 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:604:25, col:31> 'signed char *' <LValueToRValue>
|   |           |   | | | `-ArraySubscriptExpr 0x265a21ea258 <col:25, col:31> 'signed char *' lvalue
|   |           |   | | |   |-ImplicitCastExpr 0x265a21ea228 <col:25> 'signed char **' <LValueToRValue>
|   |           |   | | |   | `-DeclRefExpr 0x265a21ea1e8 <col:25> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |           |   | | |   `-ImplicitCastExpr 0x265a21ea240 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | |     `-DeclRefExpr 0x265a21ea208 <col:30> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |   | | `-ImplicitCastExpr 0x265a21ea318 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <BitCast>
|   |           |   | |   `-ParenExpr 0x265a21ea2e0 <col:17, col:27> 'void *'
|   |           |   | |     `-CStyleCastExpr 0x265a21ea2b8 <col:18, col:26> 'void *' <NullToPointer>
|   |           |   | |       `-IntegerLiteral 0x265a21ea278 <col:26> 'int' 0
|   |           |   | `-CompoundStmt 0x265a21ea420 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:604:42, line:608:21>
|   |           |   |   |-CallExpr 0x265a21ea3c8 <line:606:25, col:46> 'int'
|   |           |   |   | |-ImplicitCastExpr 0x265a21ea3b0 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |   | | `-DeclRefExpr 0x265a21ea370 <col:25> 'int ()' Function 0x265a21dd418 'OPENSSL_free' 'int ()'
|   |           |   |   | `-ImplicitCastExpr 0x265a21ea3f0 <col:38> 'signed char *' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x265a21ea390 <col:38> 'signed char *' lvalue Var 0x265a21e8540 'tmp_wNAF' 'signed char *'
|   |           |   |   `-GotoStmt 0x265a21ea408 <line:607:25, col:30> 'err' 0x265a21e4dd0
|   |           |   |-CallExpr 0x265a21ea640 <line:609:21, col:52> 'void *'
|   |           |   | |-ImplicitCastExpr 0x265a21ea628 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |           |   | | `-DeclRefExpr 0x265a21ea458 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x265a2176e18 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |           |   | |-ImplicitCastExpr 0x265a21ea690 <col:28, col:34> 'void *' <BitCast>
|   |           |   | | `-ImplicitCastExpr 0x265a21ea678 <col:28, col:34> 'signed char *' <LValueToRValue>
|   |           |   | |   `-ArraySubscriptExpr 0x265a21ea4e8 <col:28, col:34> 'signed char *' lvalue
|   |           |   | |     |-ImplicitCastExpr 0x265a21ea4b8 <col:28> 'signed char **' <LValueToRValue>
|   |           |   | |     | `-DeclRefExpr 0x265a21ea478 <col:28> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |           |   | |     `-ImplicitCastExpr 0x265a21ea4d0 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |       `-DeclRefExpr 0x265a21ea498 <col:33> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |   | |-ImplicitCastExpr 0x265a21ea6c0 <col:37> 'const void *' <BitCast>
|   |           |   | | `-ImplicitCastExpr 0x265a21ea6a8 <col:37> 'signed char *' <LValueToRValue>
|   |           |   | |   `-DeclRefExpr 0x265a21ea508 <col:37> 'signed char *' lvalue Var 0x265a21e9130 'pp' 'signed char *'
|   |           |   | `-ImplicitCastExpr 0x265a21ea6d8 <col:41, col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   `-ArraySubscriptExpr 0x265a21ea598 <col:41, col:51> 'size_t':'unsigned long long' lvalue
|   |           |   |     |-ImplicitCastExpr 0x265a21ea568 <col:41> 'size_t *' <LValueToRValue>
|   |           |   |     | `-DeclRefExpr 0x265a21ea528 <col:41> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   |           |   |     `-ImplicitCastExpr 0x265a21ea580 <col:50> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |       `-DeclRefExpr 0x265a21ea548 <col:50> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x265a21ea8d8 <line:610:21, line:611:45>
|   |           |   | |-BinaryOperator 0x265a21ea7d0 <line:610:25, col:39> 'int' '>'
|   |           |   | | |-ImplicitCastExpr 0x265a21ea7a0 <col:25, col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | `-ArraySubscriptExpr 0x265a21ea760 <col:25, col:35> 'size_t':'unsigned long long' lvalue
|   |           |   | | |   |-ImplicitCastExpr 0x265a21ea730 <col:25> 'size_t *' <LValueToRValue>
|   |           |   | | |   | `-DeclRefExpr 0x265a21ea6f0 <col:25> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   |           |   | | |   `-ImplicitCastExpr 0x265a21ea748 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | |     `-DeclRefExpr 0x265a21ea710 <col:34> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |   | | `-ImplicitCastExpr 0x265a21ea7b8 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   `-DeclRefExpr 0x265a21ea780 <col:39> 'size_t':'unsigned long long' lvalue Var 0x265a21e3af8 'max_len' 'size_t':'unsigned long long'
|   |           |   | `-BinaryOperator 0x265a21ea8b8 <line:611:25, col:45> 'size_t':'unsigned long long' '='
|   |           |   |   |-DeclRefExpr 0x265a21ea7f0 <col:25> 'size_t':'unsigned long long' lvalue Var 0x265a21e3af8 'max_len' 'size_t':'unsigned long long'
|   |           |   |   `-ImplicitCastExpr 0x265a21ea8a0 <col:35, col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |     `-ArraySubscriptExpr 0x265a21ea880 <col:35, col:45> 'size_t':'unsigned long long' lvalue
|   |           |   |       |-ImplicitCastExpr 0x265a21ea850 <col:35> 'size_t *' <LValueToRValue>
|   |           |   |       | `-DeclRefExpr 0x265a21ea810 <col:35> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   |           |   |       `-ImplicitCastExpr 0x265a21ea868 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |         `-DeclRefExpr 0x265a21ea830 <col:44> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x265a21eaa80 <line:613:21, line:617:21>
|   |           |   | |-OpaqueValueExpr 0x265a21eaa68 <<invalid sloc>> '_Bool'
|   |           |   | `-CompoundStmt 0x265a21eaa48 <line:613:46, line:617:21>
|   |           |   |   |-CallExpr 0x265a21ea9f0 <line:615:25, col:46> 'int'
|   |           |   |   | |-ImplicitCastExpr 0x265a21ea9d8 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |   | | `-DeclRefExpr 0x265a21ea998 <col:25> 'int ()' Function 0x265a21dd418 'OPENSSL_free' 'int ()'
|   |           |   |   | `-ImplicitCastExpr 0x265a21eaa18 <col:38> 'signed char *' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x265a21ea9b8 <col:38> 'signed char *' lvalue Var 0x265a21e8540 'tmp_wNAF' 'signed char *'
|   |           |   |   `-GotoStmt 0x265a21eaa30 <line:616:25, col:30> 'err' 0x265a21e4dd0
|   |           |   `-CompoundAssignOperator 0x265a21eab30 <line:620:21, col:27> 'signed char *' '+=' ComputeLHSTy='signed char *' ComputeResultTy='signed char *'
|   |           |     |-DeclRefExpr 0x265a21eaad8 <col:21> 'signed char *' lvalue Var 0x265a21e9130 'pp' 'signed char *'
|   |           |     `-ImplicitCastExpr 0x265a21eab18 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |       `-DeclRefExpr 0x265a21eaaf8 <col:27> 'size_t':'unsigned long long' lvalue Var 0x265a21e3158 'blocksize' 'size_t':'unsigned long long'
|   |           `-CallExpr 0x265a21eac40 <line:622:17, col:38> 'int'
|   |             |-ImplicitCastExpr 0x265a21eac28 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x265a21eabe8 <col:17> 'int ()' Function 0x265a21dd418 'OPENSSL_free' 'int ()'
|   |             `-ImplicitCastExpr 0x265a21eac68 <col:30> 'signed char *' <LValueToRValue>
|   |               `-DeclRefExpr 0x265a21eac08 <col:30> 'signed char *' lvalue Var 0x265a21e8540 'tmp_wNAF' 'signed char *'
|   |-IfStmt 0x265a21ecf88 <line:633:5, line:636:5>
|   | |-OpaqueValueExpr 0x265a21ecf70 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21ecf58 <line:633:22, line:636:5>
|   |   `-GotoStmt 0x265a21ecf40 <line:635:9, col:14> 'err' 0x265a21e4dd0
|   |-ForStmt 0x265a21ed668 <line:641:5, line:649:5>
|   | |-BinaryOperator 0x265a21ed0a8 <line:641:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x265a21ed048 <col:10> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x265a21ed090 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x265a21ed068 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x265a21ed1a8 <col:17, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x265a21ed190 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21ed0c8 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x265a21ed170 <col:21, col:27> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x265a21ed128 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x265a21ed0e8 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x265a21ed158 <col:27> 'unsigned long long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x265a21ed140 <col:27> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x265a21ed108 <col:27> 'int' lvalue Var 0x265a21e3f00 'num_scalar' 'int'
|   | |-UnaryOperator 0x265a21ed1e8 <col:39, col:40> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x265a21ed1c8 <col:39> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x265a21ed650 <col:44, line:649:5>
|   |   `-ForStmt 0x265a21ed618 <line:643:9, line:648:9>
|   |     |-BinaryOperator 0x265a21ed298 <line:643:14, col:18> 'size_t':'unsigned long long' '='
|   |     | |-DeclRefExpr 0x265a21ed220 <col:14> 'size_t':'unsigned long long' lvalue Var 0x265a21e3440 'j' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x265a21ed280 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x265a21ed258 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x265a21ed4b8 <col:21, col:53> 'int' '<'
|   |     | |-ImplicitCastExpr 0x265a21ed4a0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x265a21ed2b8 <col:21> 'size_t':'unsigned long long' lvalue Var 0x265a21e3440 'j' 'size_t':'unsigned long long'
|   |     | `-ParenExpr 0x265a21ed480 <col:25, col:53> 'size_t':'unsigned long long'
|   |     |   `-BinaryOperator 0x265a21ed460 <col:26, col:52> 'size_t':'unsigned long long' '<<'
|   |     |     |-CStyleCastExpr 0x265a21ed310 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |     |     | `-IntegerLiteral 0x265a21ed2d8 <col:34> 'int' 1
|   |     |     `-ParenExpr 0x265a21ed440 <col:39, col:52> 'unsigned long long'
|   |     |       `-BinaryOperator 0x265a21ed420 <col:40, col:51> 'unsigned long long' '-'
|   |     |         |-ImplicitCastExpr 0x265a21ed3f0 <col:40, col:47> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |         | `-ArraySubscriptExpr 0x265a21ed3a8 <col:40, col:47> 'size_t':'unsigned long long' lvalue
|   |     |         |   |-ImplicitCastExpr 0x265a21ed378 <col:40> 'size_t *' <LValueToRValue>
|   |     |         |   | `-DeclRefExpr 0x265a21ed338 <col:40> 'size_t *' lvalue Var 0x265a21e3700 'wsize' 'size_t *'
|   |     |         |   `-ImplicitCastExpr 0x265a21ed390 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |         |     `-DeclRefExpr 0x265a21ed358 <col:46> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |     |         `-ImplicitCastExpr 0x265a21ed408 <col:51> 'unsigned long long' <IntegralCast>
|   |     |           `-IntegerLiteral 0x265a21ed3c8 <col:51> 'int' 1
|   |     |-UnaryOperator 0x265a21ed4f8 <col:56, col:57> 'size_t':'unsigned long long' postfix '++'
|   |     | `-DeclRefExpr 0x265a21ed4d8 <col:56> 'size_t':'unsigned long long' lvalue Var 0x265a21e3440 'j' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x265a21ed600 <col:61, line:648:9>
|   |       `-IfStmt 0x265a21ed5e8 <line:645:13, line:646:22>
|   |         |-OpaqueValueExpr 0x265a21ed5d0 <<invalid sloc>> '_Bool'
|   |         `-GotoStmt 0x265a21ed5b8 <col:17, col:22> 'err' 0x265a21e4dd0
|   |-IfStmt 0x265a21ed728 <line:650:5, line:653:5>
|   | |-OpaqueValueExpr 0x265a21ed710 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21ed6f8 <line:650:32, line:653:5>
|   |   `-GotoStmt 0x265a21ed6e0 <line:652:9, col:14> 'err' 0x265a21e4dd0
|   |-IfStmt 0x265a21ed818 <line:655:5, line:656:14>
|   | |-OpaqueValueExpr 0x265a21ed800 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21ed7e8 <col:9, col:14> 'err' 0x265a21e4dd0
|   |-ForStmt 0x265a21ee2e8 <line:665:5, line:683:5>
|   | |-BinaryOperator 0x265a21ed890 <line:665:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x265a21ed830 <col:10> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x265a21ed878 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x265a21ed850 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x265a21ed990 <col:17, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x265a21ed978 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21ed8b0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x265a21ed958 <col:21, col:27> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x265a21ed910 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x265a21ed8d0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x265a21ed940 <col:27> 'unsigned long long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x265a21ed928 <col:27> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x265a21ed8f0 <col:27> 'int' lvalue Var 0x265a21e3f00 'num_scalar' 'int'
|   | |-UnaryOperator 0x265a21ed9d0 <col:39, col:40> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x265a21ed9b0 <col:39> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x265a21ee2c8 <col:44, line:683:5>
|   |   |-IfStmt 0x265a21edc28 <line:666:9, line:672:9> has_else
|   |   | |-BinaryOperator 0x265a21eda58 <line:666:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x265a21eda28 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x265a21ed9e8 <col:13> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x265a21eda40 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x265a21eda08 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x265a21e2b18 'num' 'size_t':'unsigned long long'
|   |   | |-CompoundStmt 0x265a21edb48 <col:22, line:669:9>
|   |   | | `-IfStmt 0x265a21edb30 <line:667:13, line:668:22>
|   |   | |   |-OpaqueValueExpr 0x265a21edb18 <<invalid sloc>> '_Bool'
|   |   | |   `-GotoStmt 0x265a21edb00 <col:17, col:22> 'err' 0x265a21e4dd0
|   |   | `-CompoundStmt 0x265a21edc10 <line:669:16, line:672:9>
|   |   |   `-IfStmt 0x265a21edbf8 <line:670:13, line:671:22>
|   |   |     |-OpaqueValueExpr 0x265a21edbe0 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x265a21edbc8 <col:17, col:22> 'err' 0x265a21e4dd0
|   |   `-IfStmt 0x265a21ee2b0 <line:674:9, line:682:9>
|   |     |-BinaryOperator 0x265a21edd38 <line:674:13, col:24> 'int' '>'
|   |     | |-ImplicitCastExpr 0x265a21edd08 <col:13, col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-ArraySubscriptExpr 0x265a21edcc0 <col:13, col:20> 'size_t':'unsigned long long' lvalue
|   |     | |   |-ImplicitCastExpr 0x265a21edc90 <col:13> 'size_t *' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x265a21edc50 <col:13> 'size_t *' lvalue Var 0x265a21e3700 'wsize' 'size_t *'
|   |     | |   `-ImplicitCastExpr 0x265a21edca8 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x265a21edc70 <col:19> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x265a21edd20 <col:24> 'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x265a21edce0 <col:24> 'int' 1
|   |     `-CompoundStmt 0x265a21ee290 <col:27, line:682:9>
|   |       |-IfStmt 0x265a21eddf0 <line:675:13, line:676:22>
|   |       | |-OpaqueValueExpr 0x265a21eddd8 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x265a21eddc0 <col:17, col:22> 'err' 0x265a21e4dd0
|   |       `-ForStmt 0x265a21ee258 <line:677:13, line:681:13>
|   |         |-BinaryOperator 0x265a21ede68 <line:677:18, col:22> 'size_t':'unsigned long long' '='
|   |         | |-DeclRefExpr 0x265a21ede08 <col:18> 'size_t':'unsigned long long' lvalue Var 0x265a21e3440 'j' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x265a21ede50 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x265a21ede28 <col:22> 'int' 1
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x265a21ee088 <col:25, col:57> 'int' '<'
|   |         | |-ImplicitCastExpr 0x265a21ee070 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x265a21ede88 <col:25> 'size_t':'unsigned long long' lvalue Var 0x265a21e3440 'j' 'size_t':'unsigned long long'
|   |         | `-ParenExpr 0x265a21ee050 <col:29, col:57> 'size_t':'unsigned long long'
|   |         |   `-BinaryOperator 0x265a21ee030 <col:30, col:56> 'size_t':'unsigned long long' '<<'
|   |         |     |-CStyleCastExpr 0x265a21edee0 <col:30, col:38> 'size_t':'unsigned long long' <IntegralCast>
|   |         |     | `-IntegerLiteral 0x265a21edea8 <col:38> 'int' 1
|   |         |     `-ParenExpr 0x265a21ee010 <col:43, col:56> 'unsigned long long'
|   |         |       `-BinaryOperator 0x265a21edff0 <col:44, col:55> 'unsigned long long' '-'
|   |         |         |-ImplicitCastExpr 0x265a21edfc0 <col:44, col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |         | `-ArraySubscriptExpr 0x265a21edf78 <col:44, col:51> 'size_t':'unsigned long long' lvalue
|   |         |         |   |-ImplicitCastExpr 0x265a21edf48 <col:44> 'size_t *' <LValueToRValue>
|   |         |         |   | `-DeclRefExpr 0x265a21edf08 <col:44> 'size_t *' lvalue Var 0x265a21e3700 'wsize' 'size_t *'
|   |         |         |   `-ImplicitCastExpr 0x265a21edf60 <col:50> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |         |     `-DeclRefExpr 0x265a21edf28 <col:50> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |         |         `-ImplicitCastExpr 0x265a21edfd8 <col:55> 'unsigned long long' <IntegralCast>
|   |         |           `-IntegerLiteral 0x265a21edf98 <col:55> 'int' 1
|   |         |-UnaryOperator 0x265a21ee0c8 <col:60, col:61> 'size_t':'unsigned long long' postfix '++'
|   |         | `-DeclRefExpr 0x265a21ee0a8 <col:60> 'size_t':'unsigned long long' lvalue Var 0x265a21e3440 'j' 'size_t':'unsigned long long'
|   |         `-CompoundStmt 0x265a21ee240 <col:65, line:681:13>
|   |           `-IfStmt 0x265a21ee228 <line:678:17, line:680:26>
|   |             |-OpaqueValueExpr 0x265a21ee210 <<invalid sloc>> '_Bool'
|   |             `-GotoStmt 0x265a21ee1f8 <col:21, col:26> 'err' 0x265a21e4dd0
|   |-IfStmt 0x265a21ee480 <line:685:5, line:686:14>
|   | |-OpaqueValueExpr 0x265a21ee468 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21ee450 <col:9, col:14> 'err' 0x265a21e4dd0
|   |-BinaryOperator 0x265a21ee4f8 <line:688:5, col:24> 'int' '='
|   | |-DeclRefExpr 0x265a21ee498 <col:5> 'int' lvalue Var 0x265a21e3648 'r_is_at_infinity' 'int'
|   | `-IntegerLiteral 0x265a21ee4d0 <col:24> 'int' 1
|   |-ForStmt 0x265a21ef608 <line:690:5, line:729:5>
|   | |-BinaryOperator 0x265a21ee600 <line:690:10, col:24> 'int' '='
|   | | |-DeclRefExpr 0x265a21ee518 <col:10> 'int' lvalue Var 0x265a21e34f0 'k' 'int'
|   | | `-ImplicitCastExpr 0x265a21ee5e8 <col:14, col:24> 'int' <IntegralCast>
|   | |   `-BinaryOperator 0x265a21ee5c8 <col:14, col:24> 'unsigned long long' '-'
|   | |     |-ImplicitCastExpr 0x265a21ee598 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x265a21ee550 <col:14> 'size_t':'unsigned long long' lvalue Var 0x265a21e3af8 'max_len' 'size_t':'unsigned long long'
|   | |     `-ImplicitCastExpr 0x265a21ee5b0 <col:24> 'unsigned long long' <IntegralCast>
|   | |       `-IntegerLiteral 0x265a21ee570 <col:24> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x265a21ee680 <col:27, col:32> 'int' '>='
|   | | |-ImplicitCastExpr 0x265a21ee668 <col:27> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21ee620 <col:27> 'int' lvalue Var 0x265a21e34f0 'k' 'int'
|   | | `-IntegerLiteral 0x265a21ee640 <col:32> 'int' 0
|   | |-UnaryOperator 0x265a21ee6c0 <col:35, col:36> 'int' postfix '--'
|   | | `-DeclRefExpr 0x265a21ee6a0 <col:35> 'int' lvalue Var 0x265a21e34f0 'k' 'int'
|   | `-CompoundStmt 0x265a21ef5e8 <col:40, line:729:5>
|   |   |-IfStmt 0x265a21ee7a8 <line:691:9, line:694:9>
|   |   | |-UnaryOperator 0x265a21ee710 <line:691:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x265a21ee6f8 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x265a21ee6d8 <col:14> 'int' lvalue Var 0x265a21e3648 'r_is_at_infinity' 'int'
|   |   | `-CompoundStmt 0x265a21ee790 <col:32, line:694:9>
|   |   |   `-IfStmt 0x265a21ee778 <line:692:13, line:693:22>
|   |   |     |-OpaqueValueExpr 0x265a21ee760 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x265a21ee748 <col:17, col:22> 'err' 0x265a21e4dd0
|   |   `-ForStmt 0x265a21ef5b0 <line:696:9, line:728:9>
|   |     |-BinaryOperator 0x265a21ee820 <line:696:14, col:18> 'size_t':'unsigned long long' '='
|   |     | |-DeclRefExpr 0x265a21ee7c0 <col:14> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x265a21ee808 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x265a21ee7e0 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x265a21ee8b0 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x265a21ee880 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x265a21ee840 <col:21> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x265a21ee898 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x265a21ee860 <col:25> 'size_t':'unsigned long long' lvalue Var 0x265a21e30c8 'totalnum' 'size_t':'unsigned long long'
|   |     |-UnaryOperator 0x265a21ee8f0 <col:35, col:36> 'size_t':'unsigned long long' postfix '++'
|   |     | `-DeclRefExpr 0x265a21ee8d0 <col:35> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x265a21ef598 <col:40, line:728:9>
|   |       `-IfStmt 0x265a21ef580 <line:697:13, line:727:13>
|   |         |-BinaryOperator 0x265a21eea20 <line:697:17, col:39> 'int' '>'
|   |         | |-ImplicitCastExpr 0x265a21eea08 <col:17, col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-ArraySubscriptExpr 0x265a21ee978 <col:17, col:27> 'size_t':'unsigned long long' lvalue
|   |         | |   |-ImplicitCastExpr 0x265a21ee948 <col:17> 'size_t *' <LValueToRValue>
|   |         | |   | `-DeclRefExpr 0x265a21ee908 <col:17> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   |         | |   `-ImplicitCastExpr 0x265a21ee960 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | |     `-DeclRefExpr 0x265a21ee928 <col:26> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |         | `-CStyleCastExpr 0x265a21ee9e0 <col:31, col:39> 'size_t':'unsigned long long' <IntegralCast>
|   |         |   `-ImplicitCastExpr 0x265a21ee9c8 <col:39> 'int' <LValueToRValue> part_of_explicit_cast
|   |         |     `-DeclRefExpr 0x265a21ee998 <col:39> 'int' lvalue Var 0x265a21e34f0 'k' 'int'
|   |         `-CompoundStmt 0x265a21ef558 <col:42, line:727:13>
|   |           |-DeclStmt 0x265a21eebf0 <line:698:17, col:39>
|   |           | `-VarDecl 0x265a21eea58 <col:17, col:38> col:21 used digit 'int' cinit
|   |           |   `-ImplicitCastExpr 0x265a21eebd8 <col:29, col:38> 'int' <IntegralCast>
|   |           |     `-ImplicitCastExpr 0x265a21eebc0 <col:29, col:38> 'signed char' <LValueToRValue>
|   |           |       `-ArraySubscriptExpr 0x265a21eeba0 <col:29, col:38> 'signed char' lvalue
|   |           |         |-ImplicitCastExpr 0x265a21eeb70 <col:29, col:35> 'signed char *' <LValueToRValue>
|   |           |         | `-ArraySubscriptExpr 0x265a21eeb30 <col:29, col:35> 'signed char *' lvalue
|   |           |         |   |-ImplicitCastExpr 0x265a21eeb00 <col:29> 'signed char **' <LValueToRValue>
|   |           |         |   | `-DeclRefExpr 0x265a21eeac0 <col:29> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |           |         |   `-ImplicitCastExpr 0x265a21eeb18 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |         |     `-DeclRefExpr 0x265a21eeae0 <col:34> 'size_t':'unsigned long long' lvalue Var 0x265a21e33c8 'i' 'size_t':'unsigned long long'
|   |           |         `-ImplicitCastExpr 0x265a21eeb88 <col:37> 'int' <LValueToRValue>
|   |           |           `-DeclRefExpr 0x265a21eeb50 <col:37> 'int' lvalue Var 0x265a21e34f0 'k' 'int'
|   |           |-DeclStmt 0x265a21eec88 <line:699:17, col:27>
|   |           | `-VarDecl 0x265a21eec20 <col:17, col:21> col:21 used is_neg 'int'
|   |           `-IfStmt 0x265a21ef540 <line:701:17, line:726:17>
|   |             |-ImplicitCastExpr 0x265a21eecd8 <line:701:21> 'int' <LValueToRValue>
|   |             | `-DeclRefExpr 0x265a21eeca0 <col:21> 'int' lvalue Var 0x265a21eea58 'digit' 'int'
|   |             `-CompoundStmt 0x265a21ef510 <col:28, line:726:17>
|   |               |-BinaryOperator 0x265a21eeda8 <line:702:21, col:38> 'int' '='
|   |               | |-DeclRefExpr 0x265a21eecf0 <col:21> 'int' lvalue Var 0x265a21eec20 'is_neg' 'int'
|   |               | `-BinaryOperator 0x265a21eed88 <col:30, col:38> 'int' '<'
|   |               |   |-ImplicitCastExpr 0x265a21eed70 <col:30> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x265a21eed28 <col:30> 'int' lvalue Var 0x265a21eea58 'digit' 'int'
|   |               |   `-IntegerLiteral 0x265a21eed48 <col:38> 'int' 0
|   |               |-IfStmt 0x265a21eee90 <line:704:21, line:705:34>
|   |               | |-ImplicitCastExpr 0x265a21eede8 <line:704:25> 'int' <LValueToRValue>
|   |               | | `-DeclRefExpr 0x265a21eedc8 <col:25> 'int' lvalue Var 0x265a21eec20 'is_neg' 'int'
|   |               | `-BinaryOperator 0x265a21eee70 <line:705:25, col:34> 'int' '='
|   |               |   |-DeclRefExpr 0x265a21eee00 <col:25> 'int' lvalue Var 0x265a21eea58 'digit' 'int'
|   |               |   `-UnaryOperator 0x265a21eee58 <col:33, col:34> 'int' prefix '-'
|   |               |     `-ImplicitCastExpr 0x265a21eee40 <col:34> 'int' <LValueToRValue>
|   |               |       `-DeclRefExpr 0x265a21eee20 <col:34> 'int' lvalue Var 0x265a21eea58 'digit' 'int'
|   |               |-IfStmt 0x265a21ef1e8 <line:707:21, line:713:21>
|   |               | |-BinaryOperator 0x265a21eef40 <line:707:25, col:35> 'int' '!='
|   |               | | |-ImplicitCastExpr 0x265a21eef10 <col:25> 'int' <LValueToRValue>
|   |               | | | `-DeclRefExpr 0x265a21eeea8 <col:25> 'int' lvalue Var 0x265a21eec20 'is_neg' 'int'
|   |               | | `-ImplicitCastExpr 0x265a21eef28 <col:35> 'int' <LValueToRValue>
|   |               | |   `-DeclRefExpr 0x265a21eeec8 <col:35> 'int' lvalue Var 0x265a21e3588 'r_is_inverted' 'int'
|   |               | `-CompoundStmt 0x265a21ef1c8 <col:50, line:713:21>
|   |               |   |-IfStmt 0x265a21ef120 <line:708:25, line:711:25>
|   |               |   | |-UnaryOperator 0x265a21eef98 <line:708:29, col:30> 'int' prefix '!' cannot overflow
|   |               |   | | `-ImplicitCastExpr 0x265a21eef80 <col:30> 'int' <LValueToRValue>
|   |               |   | |   `-DeclRefExpr 0x265a21eef60 <col:30> 'int' lvalue Var 0x265a21e3648 'r_is_at_infinity' 'int'
|   |               |   | `-CompoundStmt 0x265a21ef108 <col:48, line:711:25>
|   |               |   |   `-IfStmt 0x265a21ef0f0 <line:709:29, line:710:38>
|   |               |   |     |-OpaqueValueExpr 0x265a21ef0d8 <<invalid sloc>> '_Bool'
|   |               |   |     `-GotoStmt 0x265a21ef0c0 <col:33, col:38> 'err' 0x265a21e4dd0
|   |               |   `-BinaryOperator 0x265a21ef1a8 <line:712:25, col:42> 'int' '='
|   |               |     |-DeclRefExpr 0x265a21ef138 <col:25> 'int' lvalue Var 0x265a21e3588 'r_is_inverted' 'int'
|   |               |     `-UnaryOperator 0x265a21ef190 <col:41, col:42> 'int' prefix '!' cannot overflow
|   |               |       `-ImplicitCastExpr 0x265a21ef178 <col:42> 'int' <LValueToRValue>
|   |               |         `-DeclRefExpr 0x265a21ef158 <col:42> 'int' lvalue Var 0x265a21e3588 'r_is_inverted' 'int'
|   |               `-IfStmt 0x265a21ef4e8 <line:717:21, line:725:21> has_else
|   |                 |-ImplicitCastExpr 0x265a21ef220 <line:717:25> 'int' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x265a21ef200 <col:25> 'int' lvalue Var 0x265a21e3648 'r_is_at_infinity' 'int'
|   |                 |-CompoundStmt 0x265a21ef3a8 <col:43, line:721:21>
|   |                 | |-IfStmt 0x265a21ef328 <line:718:25, line:719:34>
|   |                 | | |-OpaqueValueExpr 0x265a21ef310 <<invalid sloc>> '_Bool'
|   |                 | | `-GotoStmt 0x265a21ef2f8 <col:29, col:34> 'err' 0x265a21e4dd0
|   |                 | `-BinaryOperator 0x265a21ef388 <line:720:25, col:44> 'int' '='
|   |                 |   |-DeclRefExpr 0x265a21ef340 <col:25> 'int' lvalue Var 0x265a21e3648 'r_is_at_infinity' 'int'
|   |                 |   `-IntegerLiteral 0x265a21ef360 <col:44> 'int' 0
|   |                 `-CompoundStmt 0x265a21ef4d0 <line:721:28, line:725:21>
|   |                   `-IfStmt 0x265a21ef4b8 <line:722:25, line:724:34>
|   |                     |-OpaqueValueExpr 0x265a21ef4a0 <<invalid sloc>> '_Bool'
|   |                     `-GotoStmt 0x265a21ef488 <col:29, col:34> 'err' 0x265a21e4dd0
|   |-IfStmt 0x265a21ef7c8 <line:731:5, line:738:5> has_else
|   | |-ImplicitCastExpr 0x265a21ef660 <line:731:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x265a21ef640 <col:9> 'int' lvalue Var 0x265a21e3648 'r_is_at_infinity' 'int'
|   | |-CompoundStmt 0x265a21ef6e0 <col:27, line:734:5>
|   | | `-IfStmt 0x265a21ef6c8 <line:732:9, line:733:18>
|   | |   |-OpaqueValueExpr 0x265a21ef6b0 <<invalid sloc>> '_Bool'
|   | |   `-GotoStmt 0x265a21ef698 <col:13, col:18> 'err' 0x265a21e4dd0
|   | `-CompoundStmt 0x265a21ef7b0 <line:734:12, line:738:5>
|   |   `-IfStmt 0x265a21ef798 <line:735:9, line:737:22>
|   |     |-ImplicitCastExpr 0x265a21ef718 <line:735:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x265a21ef6f8 <col:13> 'int' lvalue Var 0x265a21e3588 'r_is_inverted' 'int'
|   |     `-IfStmt 0x265a21ef780 <line:736:13, line:737:22>
|   |       |-OpaqueValueExpr 0x265a21ef768 <<invalid sloc>> '_Bool'
|   |       `-GotoStmt 0x265a21ef750 <col:17, col:22> 'err' 0x265a21e4dd0
|   |-BinaryOperator 0x265a21ef850 <line:740:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x265a21ef7f0 <col:5> 'int' lvalue Var 0x265a21e3fc0 'ret' 'int'
|   | `-IntegerLiteral 0x265a21ef828 <col:11> 'int' 1
|   |-LabelStmt 0x265a21ef898 <line:742:2, col:5> 'err'
|   | `-NullStmt 0x265a21ef890 <col:5>
|   |-CallExpr 0x265a21ef928 <line:745:5, col:23> 'int'
|   | |-ImplicitCastExpr 0x265a21ef910 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x265a21ef8d0 <col:5> 'int ()' Function 0x265a21dd418 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x265a21ef950 <col:18> 'size_t *' <LValueToRValue>
|   |   `-DeclRefExpr 0x265a21ef8f0 <col:18> 'size_t *' lvalue Var 0x265a21e3700 'wsize' 'size_t *'
|   |-CallExpr 0x265a21ef9c0 <line:746:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x265a21ef9a8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x265a21ef968 <col:5> 'int ()' Function 0x265a21dd418 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x265a21ef9e8 <col:18> 'size_t *' <LValueToRValue>
|   |   `-DeclRefExpr 0x265a21ef988 <col:18> 'size_t *' lvalue Var 0x265a21e39c8 'wNAF_len' 'size_t *'
|   |-IfStmt 0x265a21eff48 <line:747:5, line:754:5>
|   | |-BinaryOperator 0x265a21efad8 <line:747:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x265a21efaa8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:747:9> 'signed char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21efa00 <col:9> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   | | `-ImplicitCastExpr 0x265a21efac0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char **' <BitCast>
|   | |   `-ParenExpr 0x265a21efa88 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x265a21efa60 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x265a21efa20 <col:26> 'int' 0
|   | `-CompoundStmt 0x265a21eff20 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:747:23, line:754:5>
|   |   |-DeclStmt 0x265a21efb80 <line:748:9, col:24>
|   |   | `-VarDecl 0x265a21efb18 <col:9, col:23> col:23 used w 'signed char **'
|   |   |-ForStmt 0x265a21efe50 <line:750:9, line:751:28>
|   |   | |-BinaryOperator 0x265a21efc08 <line:750:14, col:18> 'signed char **' '='
|   |   | | |-DeclRefExpr 0x265a21efb98 <col:14> 'signed char **' lvalue Var 0x265a21efb18 'w' 'signed char **'
|   |   | | `-ImplicitCastExpr 0x265a21efbf0 <col:18> 'signed char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x265a21efbd0 <col:18> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x265a21efd30 <col:24, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x265a21efd00 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:750:24, col:25> 'signed char *' <LValueToRValue>
|   |   | | | `-UnaryOperator 0x265a21efc60 <col:24, col:25> 'signed char *' lvalue prefix '*' cannot overflow
|   |   | | |   `-ImplicitCastExpr 0x265a21efc48 <col:25> 'signed char **' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x265a21efc28 <col:25> 'signed char **' lvalue Var 0x265a21efb18 'w' 'signed char **'
|   |   | | `-ImplicitCastExpr 0x265a21efd18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <BitCast>
|   |   | |   `-ParenExpr 0x265a21efce0 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x265a21efcb8 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x265a21efc78 <col:26> 'int' 0
|   |   | |-UnaryOperator 0x265a21efd70 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:750:36, col:37> 'signed char **' postfix '++'
|   |   | | `-DeclRefExpr 0x265a21efd50 <col:36> 'signed char **' lvalue Var 0x265a21efb18 'w' 'signed char **'
|   |   | `-CallExpr 0x265a21efe10 <line:751:13, col:28> 'int'
|   |   |   |-ImplicitCastExpr 0x265a21efdf8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x265a21efd88 <col:13> 'int ()' Function 0x265a21dd418 'OPENSSL_free' 'int ()'
|   |   |   `-ImplicitCastExpr 0x265a21efe38 <col:26, col:27> 'signed char *' <LValueToRValue>
|   |   |     `-UnaryOperator 0x265a21efde0 <col:26, col:27> 'signed char *' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x265a21efdc8 <col:27> 'signed char **' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x265a21efda8 <col:27> 'signed char **' lvalue Var 0x265a21efb18 'w' 'signed char **'
|   |   `-CallExpr 0x265a21efee0 <line:753:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x265a21efec8 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x265a21efe88 <col:9> 'int ()' Function 0x265a21dd418 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x265a21eff08 <col:22> 'signed char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x265a21efea8 <col:22> 'signed char **' lvalue Var 0x265a21e3898 'wNAF' 'signed char **'
|   |-IfStmt 0x265a21f00d8 <line:755:5, line:760:5>
|   | |-OpaqueValueExpr 0x265a21f00c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21f00b0 <line:755:22, line:760:5>
|   `-ReturnStmt 0x265a21f0148 <line:762:5, col:12>
|     `-ImplicitCastExpr 0x265a21f0130 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x265a21f0110 <col:12> 'int' lvalue Var 0x265a21e3fc0 'ret' 'int'
|-FunctionDecl 0x265a21f0418 <line:785:1, line:936:1> line:785:5 invalid ec_wNAF_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x265a21f02f8 <col:29, col:39> col:39 invalid group 'int *'
| |-ParmVarDecl 0x265a21f0378 <col:46, col:54> col:54 invalid ctx 'int *'
| `-CompoundStmt 0x265a21f4310 <line:786:1, line:936:1>
|   |-DeclStmt 0x265a21f0560 <line:787:5, col:30>
|   | `-VarDecl 0x265a21f04f8 <col:5, col:21> col:21 invalid generator 'const int *'
|   |-DeclStmt 0x265a21f0790 <line:790:5, col:24>
|   | `-VarDecl 0x265a21f0728 <col:5, col:19> col:19 invalid order 'const int *'
|   |-DeclStmt 0x265a21f0b30 <line:791:5, col:71>
|   | |-VarDecl 0x265a21f07b8 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   | |-VarDecl 0x265a21f0830 <col:5, col:15> col:15 used bits 'size_t':'unsigned long long'
|   | |-VarDecl 0x265a21f08a8 <col:5, col:21> col:21 used w 'size_t':'unsigned long long'
|   | |-VarDecl 0x265a21f0920 <col:5, col:24> col:24 used pre_points_per_block 'size_t':'unsigned long long'
|   | |-VarDecl 0x265a21f0998 <col:5, col:46> col:46 used blocksize 'size_t':'unsigned long long'
|   | |-VarDecl 0x265a21f0a10 <col:5, col:57> col:57 used numblocks 'size_t':'unsigned long long'
|   | `-VarDecl 0x265a21f0a88 <col:5, col:68> col:68 used num 'size_t':'unsigned long long'
|   |-DeclStmt 0x265a21f0c48 <line:793:5, col:26>
|   | `-VarDecl 0x265a21f0be0 <col:5, col:18> col:18 used pre_comp 'EC_PRE_COMP *'
|   |-DeclStmt 0x265a21f0d08 <line:794:5, col:16>
|   | `-VarDecl 0x265a21f0c78 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x265a21f0ce0 <col:15> 'int' 0
|   |-IfStmt 0x265a21f0e30 <line:798:5, line:799:16>
|   | |-OpaqueValueExpr 0x265a21f0e18 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x265a21f0e08 <col:9, col:16>
|   |   `-IntegerLiteral 0x265a21f0de0 <col:16> 'int' 0
|   |-IfStmt 0x265a21f0fb8 <line:802:5, line:805:5>
|   | |-OpaqueValueExpr 0x265a21f0fa0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21f0f88 <line:802:28, line:805:5>
|   |   `-GotoStmt 0x265a21f0f70 <line:804:9, col:14> 'err' 0x265a21f0f20
|   |-IfStmt 0x265a21f11b0 <line:807:5, line:811:5>
|   | |-OpaqueValueExpr 0x265a21f1198 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21f1180 <line:807:22, line:811:5>
|   |   `-IfStmt 0x265a21f1168 <line:809:9, line:810:18>
|   |     |-OpaqueValueExpr 0x265a21f1150 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x265a21f1138 <col:13, col:18> 'err' 0x265a21f0f20
|   |-IfStmt 0x265a21f13b0 <line:816:5, line:817:14>
|   | |-OpaqueValueExpr 0x265a21f1398 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21f1380 <col:9, col:14> 'err' 0x265a21f0f20
|   |-IfStmt 0x265a21f1450 <line:818:5, line:821:5>
|   | |-OpaqueValueExpr 0x265a21f1438 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21f1420 <line:818:28, line:821:5>
|   |   `-GotoStmt 0x265a21f1408 <line:820:9, col:14> 'err' 0x265a21f0f20
|   |-BinaryOperator 0x265a21f1538 <line:830:5, col:17> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x265a21f14c0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x265a21f0998 'blocksize' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x265a21f1520 <col:17> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x265a21f14f8 <col:17> 'int' 8
|   |-BinaryOperator 0x265a21f15d0 <line:831:5, col:9> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x265a21f1558 <col:5> 'size_t':'unsigned long long' lvalue Var 0x265a21f08a8 'w' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x265a21f15b8 <col:9> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x265a21f1590 <col:9> 'int' 4
|   |-IfStmt 0x265a21f22c0 <line:832:5, line:835:5>
|   | |-BinaryOperator 0x265a21f1c38 <line:343:17, line:832:48> 'int' '>'
|   | | |-ParenExpr 0x265a21f1be0 <line:343:17, line:349:21> 'size_t':'unsigned long long'
|   | | | `-CStyleCastExpr 0x265a21f1bb8 <line:343:18, line:349:20> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   `-ParenExpr 0x265a21f1b98 <line:344:18, line:349:20> 'int'
|   | | |     `-ConditionalOperator 0x265a21f1b38 <line:344:19, line:349:19> 'int'
|   | | |       |-BinaryOperator 0x265a21f1688 <line:344:19, col:26> 'int' '>='
|   | | |       | |-ImplicitCastExpr 0x265a21f1658 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       | | `-ParenExpr 0x265a21f1610 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |       | |   `-DeclRefExpr 0x265a21f15f0 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x265a21f0830 'bits' 'size_t':'unsigned long long'
|   | | |       | `-ImplicitCastExpr 0x265a21f1670 <line:344:26> 'unsigned long long' <IntegralCast>
|   | | |       |   `-IntegerLiteral 0x265a21f1630 <col:26> 'int' 2000
|   | | |       |-IntegerLiteral 0x265a21f16a8 <col:33> 'int' 6
|   | | |       `-ConditionalOperator 0x265a21f1b08 <line:345:19, line:349:19> 'int'
|   | | |         |-BinaryOperator 0x265a21f1768 <line:345:19, col:27> 'int' '>='
|   | | |         | |-ImplicitCastExpr 0x265a21f1738 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |         | | `-ParenExpr 0x265a21f16f0 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |         | |   `-DeclRefExpr 0x265a21f16d0 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x265a21f0830 'bits' 'size_t':'unsigned long long'
|   | | |         | `-ImplicitCastExpr 0x265a21f1750 <line:345:27> 'unsigned long long' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x265a21f1710 <col:27> 'int' 800
|   | | |         |-IntegerLiteral 0x265a21f1788 <col:33> 'int' 5
|   | | |         `-ConditionalOperator 0x265a21f1ad8 <line:346:19, line:349:19> 'int'
|   | | |           |-BinaryOperator 0x265a21f1848 <line:346:19, col:27> 'int' '>='
|   | | |           | |-ImplicitCastExpr 0x265a21f1818 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           | | `-ParenExpr 0x265a21f17d0 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |           | |   `-DeclRefExpr 0x265a21f17b0 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x265a21f0830 'bits' 'size_t':'unsigned long long'
|   | | |           | `-ImplicitCastExpr 0x265a21f1830 <line:346:27> 'unsigned long long' <IntegralCast>
|   | | |           |   `-IntegerLiteral 0x265a21f17f0 <col:27> 'int' 300
|   | | |           |-IntegerLiteral 0x265a21f1868 <col:33> 'int' 4
|   | | |           `-ConditionalOperator 0x265a21f1aa8 <line:347:19, line:349:19> 'int'
|   | | |             |-BinaryOperator 0x265a21f1928 <line:347:19, col:28> 'int' '>='
|   | | |             | |-ImplicitCastExpr 0x265a21f18f8 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |             | | `-ParenExpr 0x265a21f18b0 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |             | |   `-DeclRefExpr 0x265a21f1890 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x265a21f0830 'bits' 'size_t':'unsigned long long'
|   | | |             | `-ImplicitCastExpr 0x265a21f1910 <line:347:28> 'unsigned long long' <IntegralCast>
|   | | |             |   `-IntegerLiteral 0x265a21f18d0 <col:28> 'int' 70
|   | | |             |-IntegerLiteral 0x265a21f1948 <col:33> 'int' 3
|   | | |             `-ConditionalOperator 0x265a21f1a78 <line:348:19, line:349:19> 'int'
|   | | |               |-BinaryOperator 0x265a21f1a08 <line:348:19, col:28> 'int' '>='
|   | | |               | |-ImplicitCastExpr 0x265a21f19d8 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |               | | `-ParenExpr 0x265a21f1990 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |               | |   `-DeclRefExpr 0x265a21f1970 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x265a21f0830 'bits' 'size_t':'unsigned long long'
|   | | |               | `-ImplicitCastExpr 0x265a21f19f0 <line:348:28> 'unsigned long long' <IntegralCast>
|   | | |               |   `-IntegerLiteral 0x265a21f19b0 <col:28> 'int' 20
|   | | |               |-IntegerLiteral 0x265a21f1a28 <col:33> 'int' 2
|   | | |               `-IntegerLiteral 0x265a21f1a50 <line:349:19> 'int' 1
|   | | `-ImplicitCastExpr 0x265a21f1c20 <line:832:48> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x265a21f1c00 <col:48> 'size_t':'unsigned long long' lvalue Var 0x265a21f08a8 'w' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x265a21f22a8 <col:51, line:835:5>
|   |   `-BinaryOperator 0x265a21f2288 <line:834:9, line:349:21> 'size_t':'unsigned long long' '='
|   |     |-DeclRefExpr 0x265a21f1c58 <line:834:9> 'size_t':'unsigned long long' lvalue Var 0x265a21f08a8 'w' 'size_t':'unsigned long long'
|   |     `-ParenExpr 0x265a21f2268 <line:343:17, line:349:21> 'size_t':'unsigned long long'
|   |       `-CStyleCastExpr 0x265a21f2240 <line:343:18, line:349:20> 'size_t':'unsigned long long' <IntegralCast>
|   |         `-ParenExpr 0x265a21f2220 <line:344:18, line:349:20> 'int'
|   |           `-ConditionalOperator 0x265a21f21c0 <line:344:19, line:349:19> 'int'
|   |             |-BinaryOperator 0x265a21f1d10 <line:344:19, col:26> 'int' '>='
|   |             | |-ImplicitCastExpr 0x265a21f1ce0 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |             | | `-ParenExpr 0x265a21f1c98 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |             | |   `-DeclRefExpr 0x265a21f1c78 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x265a21f0830 'bits' 'size_t':'unsigned long long'
|   |             | `-ImplicitCastExpr 0x265a21f1cf8 <line:344:26> 'unsigned long long' <IntegralCast>
|   |             |   `-IntegerLiteral 0x265a21f1cb8 <col:26> 'int' 2000
|   |             |-IntegerLiteral 0x265a21f1d30 <col:33> 'int' 6
|   |             `-ConditionalOperator 0x265a21f2190 <line:345:19, line:349:19> 'int'
|   |               |-BinaryOperator 0x265a21f1df0 <line:345:19, col:27> 'int' '>='
|   |               | |-ImplicitCastExpr 0x265a21f1dc0 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |               | | `-ParenExpr 0x265a21f1d78 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |               | |   `-DeclRefExpr 0x265a21f1d58 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x265a21f0830 'bits' 'size_t':'unsigned long long'
|   |               | `-ImplicitCastExpr 0x265a21f1dd8 <line:345:27> 'unsigned long long' <IntegralCast>
|   |               |   `-IntegerLiteral 0x265a21f1d98 <col:27> 'int' 800
|   |               |-IntegerLiteral 0x265a21f1e10 <col:33> 'int' 5
|   |               `-ConditionalOperator 0x265a21f2160 <line:346:19, line:349:19> 'int'
|   |                 |-BinaryOperator 0x265a21f1ed0 <line:346:19, col:27> 'int' '>='
|   |                 | |-ImplicitCastExpr 0x265a21f1ea0 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |                 | | `-ParenExpr 0x265a21f1e58 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |                 | |   `-DeclRefExpr 0x265a21f1e38 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x265a21f0830 'bits' 'size_t':'unsigned long long'
|   |                 | `-ImplicitCastExpr 0x265a21f1eb8 <line:346:27> 'unsigned long long' <IntegralCast>
|   |                 |   `-IntegerLiteral 0x265a21f1e78 <col:27> 'int' 300
|   |                 |-IntegerLiteral 0x265a21f1ef0 <col:33> 'int' 4
|   |                 `-ConditionalOperator 0x265a21f2130 <line:347:19, line:349:19> 'int'
|   |                   |-BinaryOperator 0x265a21f1fb0 <line:347:19, col:28> 'int' '>='
|   |                   | |-ImplicitCastExpr 0x265a21f1f80 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |                   | | `-ParenExpr 0x265a21f1f38 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |                   | |   `-DeclRefExpr 0x265a21f1f18 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x265a21f0830 'bits' 'size_t':'unsigned long long'
|   |                   | `-ImplicitCastExpr 0x265a21f1f98 <line:347:28> 'unsigned long long' <IntegralCast>
|   |                   |   `-IntegerLiteral 0x265a21f1f58 <col:28> 'int' 70
|   |                   |-IntegerLiteral 0x265a21f1fd0 <col:33> 'int' 3
|   |                   `-ConditionalOperator 0x265a21f2100 <line:348:19, line:349:19> 'int'
|   |                     |-BinaryOperator 0x265a21f2090 <line:348:19, col:28> 'int' '>='
|   |                     | |-ImplicitCastExpr 0x265a21f2060 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |                     | | `-ParenExpr 0x265a21f2018 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |                     | |   `-DeclRefExpr 0x265a21f1ff8 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x265a21f0830 'bits' 'size_t':'unsigned long long'
|   |                     | `-ImplicitCastExpr 0x265a21f2078 <line:348:28> 'unsigned long long' <IntegralCast>
|   |                     |   `-IntegerLiteral 0x265a21f2038 <col:28> 'int' 20
|   |                     |-IntegerLiteral 0x265a21f20b0 <col:33> 'int' 2
|   |                     `-IntegerLiteral 0x265a21f20d8 <line:349:19> 'int' 1
|   |-BinaryOperator 0x265a21f2478 <line:837:5, col:42> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x265a21f22d8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x265a21f0a10 'numblocks' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x265a21f2458 <col:17, col:42> 'unsigned long long' '/'
|   |   |-ParenExpr 0x265a21f2400 <col:17, col:38> 'unsigned long long'
|   |   | `-BinaryOperator 0x265a21f23e0 <col:18, col:37> 'unsigned long long' '-'
|   |   |   |-BinaryOperator 0x265a21f2380 <col:18, col:25> 'unsigned long long' '+'
|   |   |   | |-ImplicitCastExpr 0x265a21f2350 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x265a21f2310 <col:18> 'size_t':'unsigned long long' lvalue Var 0x265a21f0830 'bits' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x265a21f2368 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x265a21f2330 <col:25> 'size_t':'unsigned long long' lvalue Var 0x265a21f0998 'blocksize' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x265a21f23c8 <col:37> 'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x265a21f23a0 <col:37> 'int' 1
|   |   `-ImplicitCastExpr 0x265a21f2440 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x265a21f2420 <col:42> 'size_t':'unsigned long long' lvalue Var 0x265a21f0998 'blocksize' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x265a21f2608 <line:841:5, col:47> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x265a21f2498 <col:5> 'size_t':'unsigned long long' lvalue Var 0x265a21f0920 'pre_points_per_block' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x265a21f25e8 <col:28, col:47> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x265a21f2508 <col:28, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x265a21f24d0 <col:36> 'int' 1
|   |   `-ParenExpr 0x265a21f25c8 <col:41, col:47> 'unsigned long long'
|   |     `-BinaryOperator 0x265a21f25a8 <col:42, col:46> 'unsigned long long' '-'
|   |       |-ImplicitCastExpr 0x265a21f2578 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x265a21f2530 <col:42> 'size_t':'unsigned long long' lvalue Var 0x265a21f08a8 'w' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x265a21f2590 <col:46> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x265a21f2550 <col:46> 'int' 1
|   |-BinaryOperator 0x265a21f26f0 <line:842:5, col:34> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x265a21f2628 <col:5> 'size_t':'unsigned long long' lvalue Var 0x265a21f0a88 'num' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x265a21f26d0 <col:11, col:34> 'unsigned long long' '*'
|   |   |-ImplicitCastExpr 0x265a21f26a0 <col:11> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x265a21f2660 <col:11> 'size_t':'unsigned long long' lvalue Var 0x265a21f0920 'pre_points_per_block' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x265a21f26b8 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x265a21f2680 <col:34> 'size_t':'unsigned long long' lvalue Var 0x265a21f0a10 'numblocks' 'size_t':'unsigned long long'
|   |-IfStmt 0x265a21f28d8 <line:846:5, line:849:5>
|   | |-OpaqueValueExpr 0x265a21f28c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21f28a8 <line:846:25, line:849:5>
|   |   `-GotoStmt 0x265a21f2890 <line:848:9, col:14> 'err' 0x265a21f0f20
|   |-ForStmt 0x265a21f2c58 <line:853:5, line:858:5>
|   | |-BinaryOperator 0x265a21f2a10 <line:853:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x265a21f2998 <col:10> 'size_t':'unsigned long long' lvalue Var 0x265a21f07b8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x265a21f29f8 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x265a21f29d0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x265a21f2aa0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x265a21f2a70 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21f2a30 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21f07b8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x265a21f2a88 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x265a21f2a50 <col:21> 'size_t':'unsigned long long' lvalue Var 0x265a21f0a88 'num' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x265a21f2ae0 <col:26, col:27> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x265a21f2ac0 <col:26> 'size_t':'unsigned long long' lvalue Var 0x265a21f07b8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x265a21f2c40 <col:31, line:858:5>
|   |   `-IfStmt 0x265a21f2c28 <line:854:9, line:857:9>
|   |     |-OpaqueValueExpr 0x265a21f2c10 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x265a21f2bf8 <line:854:53, line:857:9>
|   |       `-GotoStmt 0x265a21f2be0 <line:856:13, col:18> 'err' 0x265a21f0f20
|   |-IfStmt 0x265a21f2e48 <line:860:5, line:864:5>
|   | |-OpaqueValueExpr 0x265a21f2e30 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21f2e18 <line:861:50, line:864:5>
|   |   `-GotoStmt 0x265a21f2e00 <line:863:9, col:14> 'err' 0x265a21f0f20
|   |-IfStmt 0x265a21f2eb0 <line:866:5, line:867:14>
|   | |-OpaqueValueExpr 0x265a21f2e98 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21f2e80 <col:9, col:14> 'err' 0x265a21f0f20
|   |-ForStmt 0x265a21f3950 <line:870:5, line:905:5>
|   | |-BinaryOperator 0x265a21f2f48 <line:870:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x265a21f2ec8 <col:10> 'size_t':'unsigned long long' lvalue Var 0x265a21f07b8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x265a21f2f30 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x265a21f2ee8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x265a21f2fd8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x265a21f2fa8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x265a21f2f68 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21f07b8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x265a21f2fc0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x265a21f2f88 <col:21> 'size_t':'unsigned long long' lvalue Var 0x265a21f0a10 'numblocks' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x265a21f3018 <col:32, col:33> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x265a21f2ff8 <col:32> 'size_t':'unsigned long long' lvalue Var 0x265a21f07b8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x265a21f3918 <col:37, line:905:5>
|   |   |-DeclStmt 0x265a21f30a8 <line:871:9, col:17>
|   |   | `-VarDecl 0x265a21f3040 <col:9, col:16> col:16 used j 'size_t':'unsigned long long'
|   |   |-IfStmt 0x265a21f3110 <line:873:9, line:874:18>
|   |   | |-OpaqueValueExpr 0x265a21f30f8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x265a21f30e0 <col:13, col:18> 'err' 0x265a21f0f20
|   |   |-IfStmt 0x265a21f3178 <line:876:9, line:877:18>
|   |   | |-OpaqueValueExpr 0x265a21f3160 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x265a21f3148 <col:13, col:18> 'err' 0x265a21f0f20
|   |   |-ForStmt 0x265a21f3398 <line:879:9, line:885:9>
|   |   | |-BinaryOperator 0x265a21f3208 <line:879:14, col:18> 'size_t':'unsigned long long' '='
|   |   | | |-DeclRefExpr 0x265a21f3190 <col:14> 'size_t':'unsigned long long' lvalue Var 0x265a21f3040 'j' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x265a21f31f0 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x265a21f31c8 <col:18> 'int' 1
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x265a21f3298 <col:21, col:25> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x265a21f3268 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x265a21f3228 <col:21> 'size_t':'unsigned long long' lvalue Var 0x265a21f3040 'j' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x265a21f3280 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x265a21f3248 <col:25> 'size_t':'unsigned long long' lvalue Var 0x265a21f0920 'pre_points_per_block' 'size_t':'unsigned long long'
|   |   | |-<<<NULL>>>
|   |   | `-CompoundStmt 0x265a21f3380 <col:59, line:885:9>
|   |   |   `-IfStmt 0x265a21f3368 <line:883:13, line:884:22>
|   |   |     |-OpaqueValueExpr 0x265a21f3350 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x265a21f3338 <col:17, col:22> 'err' 0x265a21f0f20
|   |   `-IfStmt 0x265a21f3900 <line:887:9, line:904:9>
|   |     |-BinaryOperator 0x265a21f34a0 <line:887:13, col:29> 'int' '<'
|   |     | |-ImplicitCastExpr 0x265a21f3488 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x265a21f33d0 <col:13> 'size_t':'unsigned long long' lvalue Var 0x265a21f07b8 'i' 'size_t':'unsigned long long'
|   |     | `-BinaryOperator 0x265a21f3468 <col:17, col:29> 'unsigned long long' '-'
|   |     |   |-ImplicitCastExpr 0x265a21f3438 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x265a21f33f0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21f0a10 'numblocks' 'size_t':'unsigned long long'
|   |     |   `-ImplicitCastExpr 0x265a21f3450 <col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-IntegerLiteral 0x265a21f3410 <col:29> 'int' 1
|   |     `-CompoundStmt 0x265a21f38d0 <col:32, line:904:9>
|   |       |-DeclStmt 0x265a21f3538 <line:891:13, col:21>
|   |       | `-VarDecl 0x265a21f34d0 <col:13, col:20> col:20 used k 'size_t':'unsigned long long'
|   |       |-IfStmt 0x265a21f3638 <line:893:13, line:896:13>
|   |       | |-BinaryOperator 0x265a21f35c8 <line:893:17, col:30> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x265a21f3598 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x265a21f3550 <col:17> 'size_t':'unsigned long long' lvalue Var 0x265a21f0998 'blocksize' 'size_t':'unsigned long long'
|   |       | | `-ImplicitCastExpr 0x265a21f35b0 <col:30> 'unsigned long long' <IntegralCast>
|   |       | |   `-IntegerLiteral 0x265a21f3570 <col:30> 'int' 2
|   |       | `-CompoundStmt 0x265a21f3620 <col:33, line:896:13>
|   |       |   `-GotoStmt 0x265a21f3608 <line:895:17, col:22> 'err' 0x265a21f0f20
|   |       |-IfStmt 0x265a21f36a0 <line:898:13, line:899:22>
|   |       | |-OpaqueValueExpr 0x265a21f3688 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x265a21f3670 <col:17, col:22> 'err' 0x265a21f0f20
|   |       `-ForStmt 0x265a21f3898 <line:900:13, line:903:13>
|   |         |-BinaryOperator 0x265a21f3730 <line:900:18, col:22> 'size_t':'unsigned long long' '='
|   |         | |-DeclRefExpr 0x265a21f36b8 <col:18> 'size_t':'unsigned long long' lvalue Var 0x265a21f34d0 'k' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x265a21f3718 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x265a21f36f0 <col:22> 'int' 2
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x265a21f37c0 <col:25, col:29> 'int' '<'
|   |         | |-ImplicitCastExpr 0x265a21f3790 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x265a21f3750 <col:25> 'size_t':'unsigned long long' lvalue Var 0x265a21f34d0 'k' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x265a21f37a8 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x265a21f3770 <col:29> 'size_t':'unsigned long long' lvalue Var 0x265a21f0998 'blocksize' 'size_t':'unsigned long long'
|   |         |-UnaryOperator 0x265a21f3800 <col:40, col:41> 'size_t':'unsigned long long' postfix '++'
|   |         | `-DeclRefExpr 0x265a21f37e0 <col:40> 'size_t':'unsigned long long' lvalue Var 0x265a21f34d0 'k' 'size_t':'unsigned long long'
|   |         `-CompoundStmt 0x265a21f3880 <col:45, line:903:13>
|   |           `-IfStmt 0x265a21f3868 <line:901:17, line:902:26>
|   |             |-OpaqueValueExpr 0x265a21f3850 <<invalid sloc>> '_Bool'
|   |             `-GotoStmt 0x265a21f3838 <col:21, col:26> 'err' 0x265a21f0f20
|   |-IfStmt 0x265a21f39f8 <line:907:5, line:908:14>
|   | |-OpaqueValueExpr 0x265a21f39e0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x265a21f39c8 <col:9, col:14> 'err' 0x265a21f0f20
|   |-BinaryOperator 0x265a21f3ae8 <line:911:5, col:27> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x265a21f3a80 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->blocksize 0x265a22668d0
|   | | `-ImplicitCastExpr 0x265a21f3a68 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x265a21f3a48 <col:5> 'EC_PRE_COMP *' lvalue Var 0x265a21f0be0 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x265a21f3ad0 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x265a21f3ab0 <col:27> 'size_t':'unsigned long long' lvalue Var 0x265a21f0998 'blocksize' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x265a21f3ba8 <line:912:5, col:27> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x265a21f3b40 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->numblocks 0x265a2266938
|   | | `-ImplicitCastExpr 0x265a21f3b28 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x265a21f3b08 <col:5> 'EC_PRE_COMP *' lvalue Var 0x265a21f0be0 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x265a21f3b90 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x265a21f3b70 <col:27> 'size_t':'unsigned long long' lvalue Var 0x265a21f0a10 'numblocks' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x265a21f3c68 <line:913:5, col:19> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x265a21f3c00 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->w 0x265a22669a0
|   | | `-ImplicitCastExpr 0x265a21f3be8 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x265a21f3bc8 <col:5> 'EC_PRE_COMP *' lvalue Var 0x265a21f0be0 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x265a21f3c50 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x265a21f3c30 <col:19> 'size_t':'unsigned long long' lvalue Var 0x265a21f08a8 'w' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x265a21f3de8 <line:916:5, col:21> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x265a21f3d80 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->num 0x265a2266a80
|   | | `-ImplicitCastExpr 0x265a21f3d68 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x265a21f3d48 <col:5> 'EC_PRE_COMP *' lvalue Var 0x265a21f0be0 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x265a21f3dd0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x265a21f3db0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x265a21f0a88 'num' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x265a21f3f08 <line:918:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'EC_PRE_COMP *' '='
|   | |-DeclRefExpr 0x265a21f3e48 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:918:5> 'EC_PRE_COMP *' lvalue Var 0x265a21f0be0 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x265a21f3ef0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |   `-ParenExpr 0x265a21f3ed0 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x265a21f3ea8 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x265a21f3e68 <col:26> 'int' 0
|   |-BinaryOperator 0x265a21f3f88 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:919:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x265a21f3f28 <col:5> 'int' lvalue Var 0x265a21f0c78 'ret' 'int'
|   | `-IntegerLiteral 0x265a21f3f60 <col:11> 'int' 1
|   |-LabelStmt 0x265a21f4058 <line:921:2, col:5> 'err'
|   | `-NullStmt 0x265a21f4050 <col:5>
|   |-CallExpr 0x265a21f4140 <line:925:5, col:33> 'void'
|   | |-ImplicitCastExpr 0x265a21f4128 <col:5> 'void (*)(EC_PRE_COMP *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x265a21f4090 <col:5> 'void (EC_PRE_COMP *)' Function 0x265a21ddd68 'EC_ec_pre_comp_free' 'void (EC_PRE_COMP *)'
|   | `-ImplicitCastExpr 0x265a21f4168 <col:25> 'EC_PRE_COMP *' <LValueToRValue>
|   |   `-DeclRefExpr 0x265a21f40b0 <col:25> 'EC_PRE_COMP *' lvalue Var 0x265a21f0be0 'pre_comp' 'EC_PRE_COMP *'
|   |-IfStmt 0x265a21f4270 <line:926:5, line:932:5>
|   | |-OpaqueValueExpr 0x265a21f4258 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x265a21f4248 <line:926:17, line:932:5>
|   `-ReturnStmt 0x265a21f4300 <line:935:5, col:12>
|     `-ImplicitCastExpr 0x265a21f42e8 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x265a21f42c8 <col:12> 'int' lvalue Var 0x265a21f0c78 'ret' 'int'
`-FunctionDecl 0x265a21f44d0 <line:938:1, line:941:1> line:938:5 invalid ec_wNAF_have_precompute_mult 'int (const int *)'
  |-ParmVarDecl 0x265a21f4438 <col:34, col:50> col:50 invalid group 'const int *'
  `-CompoundStmt 0x265a21f4638 <line:939:1, line:941:1>
