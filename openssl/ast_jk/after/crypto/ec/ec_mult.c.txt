TranslationUnitDecl 0x1bd881a6c08 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1bd881a74a0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1bd881a71a0 '__int128'
|-TypedefDecl 0x1bd881a7510 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1bd881a71c0 'unsigned __int128'
|-TypedefDecl 0x1bd881a7848 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1bd881a7600 'struct __NSConstantString_tag'
|   `-Record 0x1bd881a7568 '__NSConstantString_tag'
|-TypedefDecl 0x1bd881a78b8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1bd881a6de0 'unsigned long long'
|-TypedefDecl 0x1bd881a7950 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1bd881a7910 'char *'
|   `-BuiltinType 0x1bd881a6ca0 'char'
|-TypedefDecl 0x1bd881a79c0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1bd881a7910 'char *'
|   `-BuiltinType 0x1bd881a6ca0 'char'
|-TypedefDecl 0x1bd881a7a80 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1bd881a6de0 'unsigned long long'
|-TypedefDecl 0x1bd881a7af0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1bd881a7910 'char *'
|   `-BuiltinType 0x1bd881a6ca0 'char'
|-FunctionDecl 0x1bd89d2f420 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1bd89d2f4c0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1bd89d2f530 <col:21> Implicit
|-FunctionDecl 0x1bd89d2f588 prev 0x1bd89d2f420 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1bd89d2f2b0 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1bd89d2f678 <col:21> Inherited Implicit
|-TypedefDecl 0x1bd89d2f6b8 prev 0x1bd881a78b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1bd881a6de0 'unsigned long long'
|-TypedefDecl 0x1bd89d2f760 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1bd89d2f730 'size_t' sugar
|   |-Typedef 0x1bd89d2f6b8 'size_t'
|   `-BuiltinType 0x1bd881a6de0 'unsigned long long'
|-TypedefDecl 0x1bd89d2f7d0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1bd881a6d40 'long long'
|-TypedefDecl 0x1bd89d2f840 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1bd881a6d40 'long long'
|-TypedefDecl 0x1bd89d2f8b0 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1bd881a6d80 'unsigned short'
|-TypedefDecl 0x1bd89d2f920 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1bd881a6d80 'unsigned short'
|-TypedefDecl 0x1bd89d2f990 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1bd881a6d80 'unsigned short'
|-TypedefDecl 0x1bd89d2fa00 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1bd881a6d00 'int'
|-TypedefDecl 0x1bd89d2fa70 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1bd881a6d20 'long'
|-TypedefDecl 0x1bd89d2fae0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1bd881a6d40 'long long'
|-TypedefDecl 0x1bd89d2fb70 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1bd89d2fb40 '__time64_t' sugar
|   |-Typedef 0x1bd89d2fae0 '__time64_t'
|   `-BuiltinType 0x1bd881a6d40 'long long'
|-FunctionDecl 0x1bd89d2fce8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1bd89d2ff08 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1bd89d65300 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1bd89d30048 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1bd89d300c0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1bd89d30138 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1bd89d301b8 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1bd89d650a0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1bd89d653e0 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1bd89d654a0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1bd89d65610 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1bd89d655c0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1bd89d65560 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1bd89d65480 'struct threadlocaleinfostruct'
|       `-Record 0x1bd89d70150 'threadlocaleinfostruct'
|-TypedefDecl 0x1bd89d65720 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1bd89d656d0 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1bd89d65670 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1bd89d65540 'struct threadmbcinfostruct'
|       `-Record 0x1bd89d654a0 'threadmbcinfostruct'
|-RecordDecl 0x1bd89d65778 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1bd89d65830 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1bd89d658f0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bd89d65980 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1bd89d65a10 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1bd89d65ac8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1bd89d65a70 'struct localeinfo_struct' sugar
|   `-RecordType 0x1bd89d658d0 'struct localeinfo_struct'
|     `-Record 0x1bd89d65830 'localeinfo_struct'
|-TypedefDecl 0x1bd89d65ba0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1bd89d65b50 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1bd89d65a70 'struct localeinfo_struct' sugar
|     `-RecordType 0x1bd89d658d0 'struct localeinfo_struct'
|       `-Record 0x1bd89d65830 'localeinfo_struct'
|-RecordDecl 0x1bd89d65c18 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1bd89d65cd0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bd89d65d48 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1bd89d65e08 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1bd89d65ea0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1bd89d65f10 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1bd89d65fc8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1bd89d65f70 'struct localerefcount' sugar
|   `-RecordType 0x1bd89d65cb0 'struct localerefcount'
|     `-Record 0x1bd89d65c18 'localerefcount'
|-RecordDecl 0x1bd89d70150 prev 0x1bd89d653e0 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1bd89d701d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bd89d70248 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1bd89d702b8 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1bd89d70328 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1bd89d70398 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1bd89d70558 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1bd89d705c8 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1bd89d70638 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1bd89d706a8 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1bd89d70718 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1bd89d70788 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1bd89d707e0 parent 0x1bd881a6c08 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1bd89d70970 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1bd89d709e0 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1bd89d70a50 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1bd89d70ac0 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1bd89d70b60 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1bd89d70bd0 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1bd89d70ce0 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1bd89d70e18 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1bd89d70ec8 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1bd89d70e70 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1bd89d65480 'struct threadlocaleinfostruct'
|     `-Record 0x1bd89d70150 'threadlocaleinfostruct'
|-FunctionDecl 0x1bd89d71370 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x1bd89d70f50 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x1bd89d71000 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x1bd89d71080 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x1bd89d71160 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d71738 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89d717d8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1bd89d71840 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1bd89d718a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89d71928 prev 0x1bd89d71738 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1bd89d71460 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x1bd89d714e0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x1bd89d71558 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d71ce8 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1bd89d71a10 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x1bd89d71a90 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x1bd89d71b08 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d76200 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89d71dd0 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x1bd89d71e50 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x1bd89d71ec8 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89d71f60 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89d76508 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89d765a8 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1bd89d76610 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1bd89d76678 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89d766f8 prev 0x1bd89d76508 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1bd89d762f0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x1bd89d76370 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x1bd89d763e8 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d76ab8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89d76b58 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bd89d76bc0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1bd89d76c28 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89d76ca8 prev 0x1bd89d76ab8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1bd89d767e0 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x1bd89d76860 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x1bd89d768d8 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d751a0 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1bd89d76db8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x1bd89d76e50 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89d76ed0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1bd89d76f48 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bd89d75568 <line:94:25> col:25 implicit memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89d75608 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bd89d75670 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1bd89d756d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89d75758 prev 0x1bd89d75568 <col:9, col:107> col:25 memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x1bd89d75290 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x1bd89d75310 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x1bd89d75388 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d75bd8 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89d75c78 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bd89d75ce0 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1bd89d75d48 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x1bd89d75db0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89d75e38 prev 0x1bd89d75bd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x1bd89d75920 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x1bd89d759a0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x1bd89d75a20 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x1bd89d75a98 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89d75ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x1bd89d77358 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x1bd89d760c0 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x1bd89d771c0 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x1bd89d77238 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89d77410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x1bd89d77800 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1bd89d77538 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1bd89d775b0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89d77630 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x1bd89d77bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1bd89d779e0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x1bd89d77a60 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x1bd89d77c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89d78090 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1bd89d77dc8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x1bd89d77e40 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89d77ec0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x1bd89d78490 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1bd89d78530 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1bd89d78598 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bd89d78610 prev 0x1bd89d78490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x1bd89d782a8 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x1bd89d78328 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x1bd89d786c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89d78a18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1bd89d78808 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1bd89d78880 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89d78900 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x1bd89d78d40 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1bd89d78de0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1bd89d78e48 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bd89d78ec0 prev 0x1bd89d78d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x1bd89d78bc0 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x1bd89d78c40 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x1bd89d78f70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89d72240 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x1bd89d722e0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89d72348 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bd89d723c0 prev 0x1bd89d72240 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x1bd89d790b8 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x1bd89d79138 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x1bd89d72610 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x1bd89d726b0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bd89d72720 prev 0x1bd89d72610 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x1bd89d724a0 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x1bd89d72a18 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1bd89d727f8 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1bd89d72870 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d72c68 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x1bd89d72af8 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x1bd89d72b70 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1bd89d72f98 <line:131:1, line:133:1>
|   `-ReturnStmt 0x1bd89d72f88 <line:132:5, col:51>
|     `-ConditionalOperator 0x1bd89d72f58 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x1bd89d72dc8 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x1bd89d72da8 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x1bd89d72d78 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1bd89d72d30 <col:13> 'const char *' lvalue ParmVar 0x1bd89d72af8 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x1bd89d72d90 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x1bd89d72d50 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x1bd89d72f40 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1bd89d72de8 <col:24> 'int' 0
|       `-CallExpr 0x1bd89d72ee0 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1bd89d72ec8 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1bd89d72e10 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x1bd89d72a18 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x1bd89d72f10 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x1bd89d72e30 <col:36> 'const char *' lvalue ParmVar 0x1bd89d72af8 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x1bd89d72f28 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1bd89d72e50 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89d72b70 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d7b338 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x1bd89d72fc8 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x1bd89d73040 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89d730c0 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x1bd89d7b200 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bd89d7b640 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89d7b6e0 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1bd89d7b748 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1bd89d7b7b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89d7b830 prev 0x1bd89d7b640 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x1bd89d7b428 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x1bd89d7b4a8 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x1bd89d7b520 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d7ba68 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x1bd89d7b918 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x1bd89d7bd30 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1bd89d7bdd0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89d7be38 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bd89d7beb0 prev 0x1bd89d7bd30 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1bd89d7bb40 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x1bd89d7bbc0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x1bd89d7c110 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bd89d7bf90 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1bd89d7c010 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1bd89d813e0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bd89d81260 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x1bd89d812e0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1bd89d81798 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1bd89d814c0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89d81540 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1bd89d815b8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89d81a00 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bd89d81880 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x1bd89d81900 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x1bd89d81cf8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1bd89d81ae0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89d81b60 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x1bd89d81bd8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89d81f60 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bd89d81de0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x1bd89d81e60 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x1bd89d7d220 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x1bd89d82040 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89d820c0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x1bd89d82138 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89d7d5d8 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bd89d7d308 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89d7d388 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1bd89d7d400 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d7da40 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89d7d6c0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89d7d740 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1bd89d7d7b8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89d7d830 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89d7dd48 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bd89d7db30 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89d7dbb0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x1bd89d7dc28 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d7e0e0 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89d7de30 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89d7deb0 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x1bd89d7df28 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89d7dfa0 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89d7f468 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1bd89d7f508 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89d7f570 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bd89d7f5e8 prev 0x1bd89d7f468 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1bd89d7f240 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1bd89d7f2c0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x1bd89d7f8a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1bd89d7f7c0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x1bd89d7f948 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89d7fd20 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x1bd89d7fa90 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x1bd89d7fb08 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89d7fb88 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x1bd89d80038 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x1bd89d800d8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bd89d80148 prev 0x1bd89d80038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x1bd89d7ff00 <col:90> col:93 'int'
| `-DeprecatedAttr 0x1bd89d801f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89d80560 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x1bd89d80350 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x1bd89d803c8 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89d80448 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x1bd89d80868 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1bd89d80648 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1bd89d806c0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d80b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bd89d80a08 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1bd89d80c00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89d81010 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89d80d48 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1bd89d80dc0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89d80e38 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89d7e3e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1bd89d811b8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1bd89d7e230 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bd89d7e490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89d7e948 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1bd89d7e5d8 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x1bd89d7e650 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89d7e6d0 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x1bd89d7e748 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bd89d7edc8 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89d7ee68 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1bd89d7eed0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89d7ef38 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89d7efb8 prev 0x1bd89d7edc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bd89d7eaf8 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x1bd89d7eb78 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x1bd89d7ebf0 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89d7f070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89d7a3a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89d7a440 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1bd89d7a4a8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89d7a510 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89d7a590 prev 0x1bd89d7a3a0 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bd89d7f1b8 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89d7a208 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x1bd89d7a280 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d7a890 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bd89d7a678 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89d7a6f8 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x1bd89d7a770 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d7ac28 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89d7a978 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89d7a9f8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x1bd89d7aa70 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89d7aae8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89d7afc0 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x1bd89d7ad18 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1bd89d7ad90 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89d7ae10 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x1bd89d7ae88 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bd89d82408 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89d824a8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1bd89d82510 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89d82578 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89d825f8 prev 0x1bd89d82408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bd89d7b170 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x1bd89d82270 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x1bd89d822e8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89d826b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89d82b68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x1bd89d827f8 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x1bd89d82870 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89d828f0 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x1bd89d82968 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89d82fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1bd89d82d18 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x1bd89d82d98 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x1bd89d82e10 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89d830a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89d7c380 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1bd89d7c420 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89d7c488 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bd89d7c500 prev 0x1bd89d7c380 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1bd89d831e8 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1bd89d7c210 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x1bd89d7c760 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x1bd89d7c800 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89d7c868 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bd89d7c8e0 prev 0x1bd89d7c760 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x1bd89d7c5e0 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x1bd89d7c660 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x1bd89d7caa0 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x1bd89d7c9c0 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x1bd89d7ccf0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x1bd89d7cd90 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89d7cdf8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bd89d7ce70 prev 0x1bd89d7ccf0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x1bd89d7cb78 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x1bd89d7cbf8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x1bd89d7d0d0 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x1bd89d7d170 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89db0fa0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bd89db1018 prev 0x1bd89d7d0d0 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x1bd89d7cf50 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x1bd89d7cfd0 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x1bd89db1338 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x1bd89db13d8 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x1bd89db1440 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bd89db14b8 prev 0x1bd89db1338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x1bd89db11b8 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x1bd89db1238 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x1bd89db1568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89db1948 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x1bd89db16b0 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x1bd89db1730 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x1bd89db17b0 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x1bd89db1ba0 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x1bd89db1a30 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x1bd89db1aa8 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89db1e20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bd89db1d40 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x1bd89db1ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dae278 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89dae070 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x1bd89dae0e8 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89dae160 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dae598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x1bd89dae420 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x1bd89dae498 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bd89dae648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89daea60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89daeb00 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1bd89daeb68 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89daebd0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89daec50 prev 0x1bd89daea60 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x1bd89dae790 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x1bd89dae810 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x1bd89dae888 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89daf0b8 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89daed38 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x1bd89daedb8 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x1bd89daee30 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89daeea8 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89daf360 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x1bd89daf400 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1bd89daf470 prev 0x1bd89daf360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x1bd89daf280 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x1bd89daf518 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x1bd89daf860 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bd89daf6e0 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89daf760 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1bd89daf910 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x1bd89dafc58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1bd89dafad8 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89dafb58 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x1bd89dafd08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x1bd89dacf98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bd89dafed0 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1bd89dad040 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x1bd89dad458 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x1bd89dad240 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x1bd89dad2c0 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x1bd89dad338 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89dad510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x1bd89dad8f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x1bd89dad6d8 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x1bd89dad758 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x1bd89dad7d0 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89dad9a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x1bd89dadc50 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bd89dadb70 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1bd89dadcf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x1bd89db0090 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x1bd89dadec0 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x1bd89daff90 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x1bd89db0140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x1bd89db03e8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1bd89db0308 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x1bd89db0490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x1bd89db0720 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x1bd89db05b0 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x1bd89db0ab0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1bd89db07f0 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bd89db0868 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89db08e0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x1bd89db0e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89db0c50 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bd89db0cc8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1bd89db0f18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89db22c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x1bd89db2368 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1bd89db23d0 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x1bd89db2448 prev 0x1bd89db22c8 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x1bd89db20a8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db2120 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1bd89db2740 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x1bd89db27e0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1bd89db2848 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1bd89db28c0 prev 0x1bd89db2740 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x1bd89db2520 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db2598 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bd89db2ba0 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x1bd89db2998 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bd89db2a10 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89db2a88 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x1bd89db2eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89db2d40 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bd89db2db8 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x1bd89db2f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89db32d8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89db30b8 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db3130 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x1bd89db3520 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x1bd89db35c0 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x1bd89db3630 prev 0x1bd89db3520 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x1bd89db33b0 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x1bd89db3918 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89db3700 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db3778 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89db3b60 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x1bd89db39f0 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db3a68 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x1bd89db3ef8 <line:306:1, line:308:1>
|   `-ReturnStmt 0x1bd89db3ee8 <line:307:5, col:56>
|     `-ConditionalOperator 0x1bd89db3eb8 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x1bd89db3d20 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x1bd89db3d00 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x1bd89db3cd0 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1bd89db3c28 <col:13> 'const wchar_t *' lvalue ParmVar 0x1bd89db39f0 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x1bd89db3ce8 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x1bd89db3cb0 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x1bd89db3c88 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x1bd89db3c48 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x1bd89db3ea0 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x1bd89db3d40 <col:29> 'int' 0
|       `-CallExpr 0x1bd89db3e40 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x1bd89db3e28 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x1bd89db3d68 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x1bd89db3918 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x1bd89db3e70 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x1bd89db3d88 <col:41> 'const wchar_t *' lvalue ParmVar 0x1bd89db39f0 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x1bd89db3e88 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x1bd89db3da8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89db3a68 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89db8308 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1bd89db3f20 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bd89db8010 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89db8088 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db8100 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bd89db8770 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89db84b0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bd89db8528 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db85a0 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89db8828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89db8c38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89db8cd8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x1bd89db8d40 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x1bd89db8da8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89db8e28 prev 0x1bd89db8c38 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x1bd89db8968 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db89e0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db8a58 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89db91d0 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x1bd89db8f08 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bd89db8f80 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89db9020 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db9098 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1bd89db9580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89db9378 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bd89db93f0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db9468 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89db9638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89db9998 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89db9778 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db97f0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x1bd89db9be0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1bd89db9a70 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db9ae8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1bd89db9e28 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89db9cb8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db9d30 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x1bd89dba090 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89db9f00 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db9f78 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x1bd89dba398 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89dba228 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bd89dba2a0 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x1bd89dba448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dba8b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1bd89dba588 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bd89dba600 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x1bd89dba6e0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x1bd89dbabd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x1bd89dbaa58 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x1bd89dbac78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dbb0b0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1bd89dbadb8 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x1bd89dbae30 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89dbaeb0 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x1bd89dbb360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1bd89dbb288 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1bd89dbb408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dbb7d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1bd89dbb548 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x1bd89dbb5c0 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89dbb638 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1bd89dbba28 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89dbb8b0 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bd89dbb928 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bd89dbbdc8 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bd89dbbb00 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dbbb78 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bd89dbbbf0 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89db4058 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89dbbea8 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dbbf20 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bd89dbbf98 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89db44b0 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89db4138 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db41b0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db4228 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89db42a0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89db4908 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x1bd89db4598 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bd89db4610 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89db4688 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1bd89db4700 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89db4d70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1bd89db4ab0 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bd89db4b28 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1bd89db4ba0 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89db4e28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dbc160 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x1bd89db4f68 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x1bd89dbc4f0 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x1bd89dbc230 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bd89dbc2a8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89dbc320 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x1bd89dbc8a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1bd89dbc690 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bd89dbc708 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1bd89dbc958 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dbccb8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89dbca98 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x1bd89dbcb10 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89dbcf28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bd89dbce50 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1bd89dbcfd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dbd420 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89dbd158 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bd89dbd1d0 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89dbd248 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dbd7d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bd89dbd5c0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1bd89dbd638 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bd89dbd888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dbdb38 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89dbd9c8 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x1bd89dbda40 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89dbdda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bd89dbdcd0 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x1bd89dbde50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89db6180 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89dbdf90 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bd89db5ff0 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89db6068 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89db6490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bd89db6320 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x1bd89db6398 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bd89db6540 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89db6940 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89db6680 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bd89db66f8 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db6770 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89db6d88 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89db6a20 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1bd89db6a98 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db6b10 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89db6b88 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dbe070 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89db6e70 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db6ee8 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bd89dbe358 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bd89dbe148 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dbe1c0 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bd89dbe238 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dbe5b0 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89dbe438 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x1bd89dbe4b0 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x1bd89dbe898 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bd89dbe688 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dbe700 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bd89dbe778 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dbeb88 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89dbe978 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dbe9f0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bd89dbea68 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89dbef10 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89dbec68 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dbece0 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dbed58 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89dbedd0 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89db7198 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89dbeff8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db7000 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x1bd89db7078 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89db7520 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89db7278 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db72f0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db7368 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89db73e0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89db7780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1bd89db76a8 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x1bd89db7828 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x1bd89db7b60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89db79e8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db7a60 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1bd89db7c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x1bd89dc30c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89db7dd0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db7e48 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x1bd89db7ec0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89dc3178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x1bd89dc3540 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x1bd89dc3338 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bd89dc33b0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1bd89dc3428 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89dc35f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x1bd89dc3890 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bd89dc37b8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1bd89dc3938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x1bd89dc3c68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x1bd89dc3af8 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x1bd89dc3b70 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1bd89dc3d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x1bd89dc3fb0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bd89dc3ed8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1bd89dc4058 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x1bd89dc5330 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1bd89dc5258 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x1bd89dc53d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x1bd89dc5710 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89dc5598 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dc5610 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x1bd89dc57c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-TypedefDecl 0x1bd89dc5ab8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1bd89dc5a50 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1bd89dc59f0 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1bd89dc59a0 'int (void)' sugar
|     | `-FunctionProtoType 0x1bd89dc5970 'int (void)' cdecl
|     |   `-BuiltinType 0x1bd881a6d00 'int'
|     `-ParenType 0x1bd89dc59a0 'int (void)' sugar
|       `-FunctionProtoType 0x1bd89dc5970 'int (void)' cdecl
|         `-BuiltinType 0x1bd881a6d00 'int'
|-RecordDecl 0x1bd89dc5b10 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x1bd89dc5bd0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bd89dc5c48 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x1bd89dc5cb8 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x1bd89dc5d68 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x1bd89dc5d10 'struct _div_t' sugar
|   `-RecordType 0x1bd89dc5bb0 'struct _div_t'
|     `-Record 0x1bd89dc5b10 '_div_t'
|-RecordDecl 0x1bd89dc5dd8 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x1bd89dc5e90 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bd89dc5f08 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x1bd89dc5f78 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x1bd89dc6028 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x1bd89dc5fd0 'struct _ldiv_t' sugar
|   `-RecordType 0x1bd89dc5e70 'struct _ldiv_t'
|     `-Record 0x1bd89dc5dd8 '_ldiv_t'
|-RecordDecl 0x1bd89dc20b0 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x1bd89dc2170 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1bd89dc21e8 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x1bd89dc2258 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x1bd89dc2308 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x1bd89dc22b0 'struct _lldiv_t' sugar
|   `-RecordType 0x1bd89dc2150 'struct _lldiv_t'
|     `-Record 0x1bd89dc20b0 '_lldiv_t'
|-RecordDecl 0x1bd89dc23a0 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x1bd89dc2460 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1bd89dc2560 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x1bd89dc2618 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x1bd89dc25c0 'struct _LDOUBLE' sugar
|   `-RecordType 0x1bd89dc2440 '_LDOUBLE'
|     `-Record 0x1bd89dc23a0 ''
|-RecordDecl 0x1bd89dc2688 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x1bd89dc2758 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x1bd89dc2808 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x1bd89dc27b0 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x1bd89dc2720 '_CRT_DOUBLE'
|     `-Record 0x1bd89dc2688 ''
|-RecordDecl 0x1bd89dc2878 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x1bd89dc2948 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x1bd89dc29f8 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x1bd89dc29a0 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x1bd89dc2910 '_CRT_FLOAT'
|     `-Record 0x1bd89dc2878 ''
|-RecordDecl 0x1bd89dc2a68 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x1bd89dc2b38 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x1bd89dc2be8 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x1bd89dc2b90 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x1bd89dc2b00 '_LONGDOUBLE'
|     `-Record 0x1bd89dc2a68 ''
|-RecordDecl 0x1bd89dc2c80 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x1bd89dc2d40 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1bd89dc2e40 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x1bd89dc2ef8 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x1bd89dc2ea0 'struct _LDBL12' sugar
|   `-RecordType 0x1bd89dc2d20 '_LDBL12'
|     `-Record 0x1bd89dc2c80 ''
|-VarDecl 0x1bd89dc2f80 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1bd89dca190 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1bd89dca3b8 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1bd89dca258 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x1bd89dca600 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1bd89dca5a0 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1bd89dca540 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1bd89dca4f0 'void (void)' sugar
|     | `-FunctionProtoType 0x1bd89d2fc40 'void (void)' cdecl
|     |   `-BuiltinType 0x1bd881a6c60 'void'
|     `-ParenType 0x1bd89dca4f0 'void (void)' sugar
|       `-FunctionProtoType 0x1bd89d2fc40 'void (void)' cdecl
|         `-BuiltinType 0x1bd881a6c60 'void'
|-FunctionDecl 0x1bd89dca800 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x1bd89dca690 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1bd89dcaa18 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x1bd89dcae68 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x1bd89dcade0 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x1bd89dcad80 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x1bd89dcad30 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x1bd89d65160 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x1bd881a6c60 'void'
|     |   |-PointerType 0x1bd89d30010 'const wchar_t *'
|     |   | `-QualType 0x1bd89d2ffc1 'const wchar_t' const
|     |   |   `-TypedefType 0x1bd89d2ffc0 'wchar_t' sugar
|     |   |     |-Typedef 0x1bd89d2f8b0 'wchar_t'
|     |   |     `-BuiltinType 0x1bd881a6d80 'unsigned short'
|     |   |-PointerType 0x1bd89d30010 'const wchar_t *'
|     |   | `-QualType 0x1bd89d2ffc1 'const wchar_t' const
|     |   |   `-TypedefType 0x1bd89d2ffc0 'wchar_t' sugar
|     |   |     |-Typedef 0x1bd89d2f8b0 'wchar_t'
|     |   |     `-BuiltinType 0x1bd881a6d80 'unsigned short'
|     |   |-PointerType 0x1bd89d30010 'const wchar_t *'
|     |   | `-QualType 0x1bd89d2ffc1 'const wchar_t' const
|     |   |   `-TypedefType 0x1bd89d2ffc0 'wchar_t' sugar
|     |   |     |-Typedef 0x1bd89d2f8b0 'wchar_t'
|     |   |     `-BuiltinType 0x1bd881a6d80 'unsigned short'
|     |   |-BuiltinType 0x1bd881a6da0 'unsigned int'
|     |   `-TypedefType 0x1bd89d30220 'uintptr_t' sugar
|     |     |-Typedef 0x1bd881a7a80 'uintptr_t'
|     |     `-BuiltinType 0x1bd881a6de0 'unsigned long long'
|     `-ParenType 0x1bd89dcad30 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x1bd89d65160 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x1bd881a6c60 'void'
|         |-PointerType 0x1bd89d30010 'const wchar_t *'
|         | `-QualType 0x1bd89d2ffc1 'const wchar_t' const
|         |   `-TypedefType 0x1bd89d2ffc0 'wchar_t' sugar
|         |     |-Typedef 0x1bd89d2f8b0 'wchar_t'
|         |     `-BuiltinType 0x1bd881a6d80 'unsigned short'
|         |-PointerType 0x1bd89d30010 'const wchar_t *'
|         | `-QualType 0x1bd89d2ffc1 'const wchar_t' const
|         |   `-TypedefType 0x1bd89d2ffc0 'wchar_t' sugar
|         |     |-Typedef 0x1bd89d2f8b0 'wchar_t'
|         |     `-BuiltinType 0x1bd881a6d80 'unsigned short'
|         |-PointerType 0x1bd89d30010 'const wchar_t *'
|         | `-QualType 0x1bd89d2ffc1 'const wchar_t' const
|         |   `-TypedefType 0x1bd89d2ffc0 'wchar_t' sugar
|         |     |-Typedef 0x1bd89d2f8b0 'wchar_t'
|         |     `-BuiltinType 0x1bd881a6d80 'unsigned short'
|         |-BuiltinType 0x1bd881a6da0 'unsigned int'
|         `-TypedefType 0x1bd89d30220 'uintptr_t' sugar
|           |-Typedef 0x1bd881a7a80 'uintptr_t'
|           `-BuiltinType 0x1bd881a6de0 'unsigned long long'
|-FunctionDecl 0x1bd89dcb060 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x1bd89dcaef0 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x1bd89dd1ec8 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x1bd89dd20b0 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1bd89dd22f0 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1bd89dd2180 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1bd89dd2540 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1bd89dd23c8 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x1bd89dd2760 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x1bd89dd29a0 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x1bd89dd2830 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x1bd89dd2bf0 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x1bd89dd2a78 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x1bd89dd6ef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x1bd89dd6f90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dd7250 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x1bd89dd72f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1bd89dd7438 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x1bd89dd74d0 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x1bd89dd7568 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x1bd89dd7600 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x1bd89dd7698 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x1bd89dd77f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x1bd89dd7858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1bd89dd7a58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x1bd89dd7ac0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dd7de0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x1bd89dd7c08 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x1bd89dd8030 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x1bd89dd7eb8 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x1bd89dd81c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x1bd89dd8230 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dd8450 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1bd89dd8378 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x1bd89dd8600 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1bd89dd8528 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x1bd89dd8850 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1bd89dd88f0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bd89dd8960 prev 0x1bd89dd8850 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1bd89dd86d8 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x1bd89dd8b10 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1bd89dd8bb0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bd89dd8c20 prev 0x1bd89dd8b10 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1bd89dd8a38 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x1bd89dd9e00 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x1bd89dd9ea0 prev 0x1bd89dd9e00 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1bd89dda160 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1bd89dd9f70 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x1bd89dd9ff0 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x1bd89dda358 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x1bd89dda3f8 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1bd89dda468 <col:19> Implicit
| `-ConstAttr 0x1bd89dda4c0 <col:19> Implicit
|-FunctionDecl 0x1bd89dda4e8 prev 0x1bd89dda358 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x1bd89dda240 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x1bd89dda5d8 <col:19> Inherited Implicit
| `-ConstAttr 0x1bd89dda600 <col:19> Inherited Implicit
|-FunctionDecl 0x1bd89dda788 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x1bd89dda828 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x1bd89dda898 <col:19> Implicit
| `-ConstAttr 0x1bd89dda8f0 <col:19> Implicit
|-FunctionDecl 0x1bd89dda918 prev 0x1bd89dda788 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x1bd89dda640 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x1bd89ddaa08 <col:19> Inherited Implicit
| `-ConstAttr 0x1bd89ddaa30 <col:19> Inherited Implicit
|-FunctionDecl 0x1bd89ddabb8 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x1bd89ddac58 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x1bd89ddacc8 <col:19> Implicit
| `-ConstAttr 0x1bd89ddad20 <col:19> Implicit
|-FunctionDecl 0x1bd89ddad48 prev 0x1bd89ddabb8 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x1bd89ddaa70 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x1bd89dd2dd8 <col:19> Inherited Implicit
| `-ConstAttr 0x1bd89dd2e00 <col:19> Inherited Implicit
|-FunctionDecl 0x1bd89dd2f08 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x1bd89dd2e40 <col:35> col:42 'long long'
|-FunctionDecl 0x1bd89dd3208 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x1bd89dd30a0 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1bd89dd3428 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x1bd89dd32e0 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x1bd89dd3720 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x1bd89dd3500 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x1bd89dd3578 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dd3948 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1bd89dd3800 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x1bd89dd3c40 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x1bd89dd3a20 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1bd89dd3a98 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89ddef38 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x1bd89dd3d20 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x1bd89ddf230 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x1bd89ddf010 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1bd89ddf088 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89ddf458 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1bd89ddf310 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x1bd89ddf750 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1bd89ddf530 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1bd89ddf5a8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89de1010 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1bd89ddf830 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x1bd89ddf8b0 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x1bd89ddf928 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89ddf9a0 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89ddfd00 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1bd89ddfd80 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x1bd89de1798 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1bd89de1110 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x1bd89de1190 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x1bd89de1208 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89de1280 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89de1558 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1bd89ddfeb0 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1bd89de1890 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x1bd89de1908 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89de1980 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89de1be8 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1bd89de1c68 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x1bd89de0478 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1bd89ddffa8 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x1bd89de0020 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89de0098 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89de0278 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1bd89de06b8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x1bd89de0758 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x1bd89de07c8 <col:47> Implicit
| `-ConstAttr 0x1bd89de0820 <col:47> Implicit
|-FunctionDecl 0x1bd89de0848 prev 0x1bd89de06b8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x1bd89de0568 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x1bd89de0938 <col:47> Inherited Implicit
| `-ConstAttr 0x1bd89de0960 <col:47> Inherited Implicit
|-FunctionDecl 0x1bd89de0ae8 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x1bd89de0b88 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x1bd89de0bf8 <col:47> Implicit
| `-ConstAttr 0x1bd89de0c50 <col:47> Implicit
|-FunctionDecl 0x1bd89de0c78 prev 0x1bd89de0ae8 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x1bd89de09a0 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x1bd89de0d68 <col:47> Inherited Implicit
| `-ConstAttr 0x1bd89de0d90 <col:47> Inherited Implicit
|-FunctionDecl 0x1bd89de1f48 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x1bd89de1fe8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x1bd89de2058 <col:49> Implicit
| `-ConstAttr 0x1bd89de20b0 <col:49> Implicit
|-FunctionDecl 0x1bd89de20d8 prev 0x1bd89de1f48 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x1bd89de0dd0 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x1bd89de21c8 <col:49> Inherited Implicit
| `-ConstAttr 0x1bd89de21f0 <col:49> Inherited Implicit
|-FunctionDecl 0x1bd89de2478 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x1bd89de2258 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x1bd89de22d8 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x1bd89de26f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1bd89de2618 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x1bd89de27a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89de2cb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1bd89de2938 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1bd89de29b8 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89de2a30 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89de2ab0 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x1bd89dde090 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x1bd89de2da8 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x1bd89ddde40 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x1bd89dddec0 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x1bd89dde4f8 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x1bd89dde178 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x1bd89dde1f8 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89dde270 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89dde2f0 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1bd89dde978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1bd89dde6e0 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x1bd89dde760 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1bd89dde7e0 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1bd89ddea30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89ddaef8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x1bd89ddeb78 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1bd89ddebf8 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89ddec70 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89ddecf0 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x1bd89ddb348 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x1bd89ddb0a8 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x1bd89ddb128 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89ddb1a8 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x1bd89ddb400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89ddb8c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x1bd89ddb548 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1bd89ddb5c8 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89ddb640 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89ddb6c0 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x1bd89ddbd18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x1bd89ddba78 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x1bd89ddbaf8 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89ddbb78 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x1bd89de2e90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89de30b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1bd89de2fd8 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x1bd89de3308 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1bd89de3190 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x1bd89de3208 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89de3688 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1bd89de33e8 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x1bd89de3468 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x1bd89de34e8 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x1bd89de3af0 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89de3770 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x1bd89de37f0 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x1bd89de3870 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x1bd89de38e8 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89ddbe20 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1bd89de3be0 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x1bd89de3c60 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x1bd89de3ce0 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x1bd89ddc290 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89ddbf08 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x1bd89ddbf88 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x1bd89ddc008 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x1bd89ddc080 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89ddc5c8 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x1bd89ddc3a8 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x1bd89ddc428 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x1bd89ddc8e8 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x1bd89ddc6c8 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x1bd89ddc748 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x1bd89ddcd48 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x1bd89ddc9c8 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x1bd89ddca48 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89ddcac0 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89ddcb40 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x1bd89ddd1a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1bd89ddcf08 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x1bd89ddcf88 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x1bd89ddd008 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x1bd89ddd260 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89ddd5d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x1bd89ddd3a8 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x1bd89ddd420 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89ddd978 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89ddd6b0 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x1bd89ddd728 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89ddd7a0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dddb38 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x1bd89ddda60 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x1bd89debf20 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x1bd89dddc10 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1bd89dddc88 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dec170 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1bd89dec000 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1bd89dec078 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89dec510 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89dec250 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1bd89dec2c8 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89dec340 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dec8c8 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1bd89dec5f0 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1bd89dec670 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x1bd89dec6e8 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89decd20 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89dec9a8 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1bd89deca28 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x1bd89decaa0 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89decb18 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dea230 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x1bd89dece08 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1bd89dece80 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1bd89de9f00 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89de9f80 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x1bd89de9ff8 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89dea6b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1bd89dea3e0 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bd89dea460 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x1bd89dea4d8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89dea768 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dead68 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89dea8a8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1bd89dea920 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1bd89dea998 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89deaa18 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x1bd89deaa90 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89deab08 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89de7318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89de6fa0 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bd89de7020 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x1bd89de7098 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89de7110 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bd89de73d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89de75d8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1bd89de7788 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1bd89de76a8 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x1bd89de79a0 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x1bd89de7860 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x1bd89de7c60 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x1bd89de7d00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89de7d68 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1bd89de7de0 prev 0x1bd89de7c60 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x1bd89de7a78 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1bd89de7af8 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x1bd89de5188 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1bd89de4eb0 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x1bd89de4f30 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x1bd89de4fa8 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89de5508 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1bd89de55a8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1bd89de5610 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1bd89de5678 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bd89de56f8 prev 0x1bd89de5508 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x1bd89de5270 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x1bd89de52f0 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x1bd89de5370 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1bd89de5b60 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89de57e0 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1bd89de5860 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x1bd89de58e0 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x1bd89de5958 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89deaf10 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1bd89deafb0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1bd89deb018 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1bd89deb080 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bd89deb100 prev 0x1bd89deaf10 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1bd89de5c50 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1bd89de5cd0 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x1bd89de5d50 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x1bd89deb4a0 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89deb1e8 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1bd89deb268 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x1bd89deb2e8 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x1bd89deb360 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89deb828 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1bd89deb8c8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1bd89deb930 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1bd89deb998 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bd89deba18 prev 0x1bd89deb828 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x1bd89deb590 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1bd89deb610 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x1bd89deb690 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1bd89de5ec0 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89debb00 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x1bd89debb80 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x1bd89debc00 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x1bd89debc78 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89de61d0 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1bd89de6270 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1bd89de62d8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1bd89de6340 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1bd89de63c0 prev 0x1bd89de61d0 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1bd89de5fb0 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x1bd89de6030 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x1bd89de60b0 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1bd89de6760 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89de64a8 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x1bd89de6528 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x1bd89de65a8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1bd89de6620 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89de6a40 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x1bd89de6ae0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89de6b48 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1bd89de6bc0 prev 0x1bd89de6a40 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x1bd89de6850 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x1bd89de68d0 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x1bd89ded018 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1bd89de6ca0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x1bd89de6d20 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x1bd89de6d98 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89ded2f0 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x1bd89ded390 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1bd89ded3f8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1bd89ded470 prev 0x1bd89ded2f0 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x1bd89ded100 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1bd89ded180 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x1bd89ded828 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1bd89ded550 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1bd89ded5d0 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x1bd89ded648 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89ded9f0 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1bd89ded910 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x1bd89dede48 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x1bd89dedac8 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1bd89dedb48 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89dedbc0 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89dedc40 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1bd89dee2b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1bd89dee018 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x1bd89dee098 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x1bd89dee118 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x1bd89dee370 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dee7a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x1bd89dee578 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1bd89dee5f0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1bd89dee850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89deed28 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1bd89deea58 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1bd89deead0 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1bd89deeb48 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bd89deede0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89def2c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x1bd89deef50 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x1bd89deefd0 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x1bd89def048 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89def0c0 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x1bd89def7d0 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1bd89def3b8 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x1bd89def438 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x1bd89def4b0 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89def528 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1bd89def5a0 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89defce0 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89def8c0 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1bd89def940 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x1bd89def9b8 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89defa30 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1bd89defaa8 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89de8130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89defe98 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x1bd89de7ee0 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1bd89de7f58 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1bd89de81e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89de87e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89de8328 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1bd89de83a8 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x1bd89de8420 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89de8498 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1bd89de8510 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89de8588 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89de8d18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1bd89de89a8 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x1bd89de8a20 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1bd89de8a98 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89de8b10 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1bd89de8dd8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89de9170 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89de9210 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1bd89de9278 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89de92f0 prev 0x1bd89de9170 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x1bd89de8f48 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89de8fc0 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1bd89de93a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1bd89de93f8 <line:615:33> restrict
|-FunctionDecl 0x1bd89de9590 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1bd89de9450 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x1bd89de9638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1bd89de9838 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x1bd89de98d8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89de9948 prev 0x1bd89de9838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x1bd89de96b8 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1bd89de99f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1bd89de9a48 <line:615:33> restrict
|-FunctionDecl 0x1bd89de9cc0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x1bd89de9d60 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x1bd89de9dc8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1bd89de9e40 prev 0x1bd89de9cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x1bd89de9aa0 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x1bd89de9b18 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1bd89deff60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1bd89deffb8 <line:615:33> restrict
|-FunctionDecl 0x1bd89df02d8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1bd89df0010 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x1bd89df0088 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89df0100 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1bd89df0390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1bd89df03e8 <line:615:33> restrict
|-FunctionDecl 0x1bd89df0518 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1bd89df0440 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x1bd89df05c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1bd89df07b8 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x1bd89df0640 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89df06b8 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1bd89df0868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1bd89df08c0 <line:615:33> restrict
|-FunctionDecl 0x1bd89df0bd8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x1bd89df0910 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89df0988 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89df0a00 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1bd89df0c90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1bd89df0ce8 <line:615:33> restrict
|-FunctionDecl 0x1bd89dfc860 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1bd89df0d40 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x1bd89df0db8 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89df0e30 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1bd89dfc918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1bd89dfc970 <line:615:33> restrict
|-FunctionDecl 0x1bd89dfcd40 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1bd89dfc9c8 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x1bd89dfca40 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89dfcab8 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89dfcb30 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1bd89dfce00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1bd89dfce58 <line:615:33> restrict
|-FunctionDecl 0x1bd89dfd158 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1bd89dfceb0 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x1bd89dfcf28 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89dfcfa0 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89dfd018 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1bd89dfd218 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1bd89dfd270 <line:615:33> restrict
|-FunctionDecl 0x1bd89dfd6e8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1bd89dfd2c8 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x1bd89dfd340 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89dfd3b8 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89dfd430 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89dfd4a8 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1bd89dfd7b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1bd89dfd808 <line:615:33> restrict
|-FunctionDecl 0x1bd89df6ac0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x1bd89df6800 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x1bd89df6878 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89df68f0 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89df6f18 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1bd89df6ba8 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x1bd89df6c20 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1bd89df6c98 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89df6d18 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x1bd89df7390 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x1bd89df70c8 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x1bd89df7140 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bd89df71c0 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x1bd89df7448 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dfb988 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1bd89df7590 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x1bd89df7608 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1bd89df7680 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89df7700 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x1bd89dfbe00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x1bd89dfbb38 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x1bd89dfbbb0 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bd89dfbc30 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x1bd89dfbeb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dfc378 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1bd89dfc000 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x1bd89dfc078 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1bd89dfc0f0 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89dfc170 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x1bd89df9830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x1bd89dfc528 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x1bd89dfc5a0 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1bd89dfc620 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x1bd89df98e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89df9c50 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1bd89df9a28 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89df9aa8 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1bd89df9ff8 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1bd89df9d28 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89df9da8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1bd89df9e20 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dfa3b8 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1bd89dfa0d8 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dfa158 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1bd89dfa1d8 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1bd89dfe880 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89dfa498 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dfa518 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1bd89dfa598 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x1bd89dfa610 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dfec48 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1bd89dfe968 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dfe9e8 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1bd89dfea68 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x1bd89dff0b0 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89dfed28 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dfeda8 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1bd89dfee28 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x1bd89dfeea0 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dff478 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1bd89dff198 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dff218 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1bd89dff298 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1bd89dfd8f0 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89dff558 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dff5d8 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1bd89dff658 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x1bd89dff6d0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dfdcb8 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1bd89dfd9d8 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dfda58 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1bd89dfdad8 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1bd89dfe120 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89dfdd98 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dfde18 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1bd89dfde98 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1bd89dfdf10 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89dfe430 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1bd89dfe208 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89dfe288 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1bd89df7810 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1bd89dfe508 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89dfe588 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1bd89dfe600 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89df7b20 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1bd89df78f0 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89df7970 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1bd89df7ec8 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1bd89df7bf8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89df7c78 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1bd89df7cf0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89df8140 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1bd89df8068 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x1bd89df81e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89df8698 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1bd89df8328 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1bd89df83a0 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1bd89df8418 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89df8490 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x1bd89e03b20 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89df8788 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x1bd89e038d0 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x1bd89e03948 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x1bd89e03d78 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1bd89e03c00 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x1bd89e03fc8 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x1bd89e03e48 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x1bd89e042c0 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bd89e04098 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89e04110 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89e04478 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1bd89e04398 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x1bd89e04770 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bd89e04548 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89e045c0 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89e00998 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x1bd89e04848 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x1bd89e00c90 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bd89e00a68 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89e00ae0 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89e00ee8 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1bd89e00d68 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x1bd89e011e0 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bd89e00fb8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89e01030 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89e01638 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1bd89e012c0 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1bd89e01338 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1bd89e013b0 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89e01430 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x1bd89e01b00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x1bd89e017e8 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x1bd89e018b0 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1bd89e01930 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x1bd89e01bb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e02078 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1bd89e01d00 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1bd89e01d78 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1bd89e01df0 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89e01e70 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x1bd89e024f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x1bd89e02228 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x1bd89e022a0 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1bd89e02320 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1bd89e025a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e027c8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1bd89e026e8 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x1bd89e04a58 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1bd89e048e0 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1bd89e04958 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89e04d50 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1bd89e04b30 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e04bb0 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1bd89e04c30 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1bd89e050e8 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89e04e30 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e04eb0 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1bd89e04f30 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x1bd89e04fa8 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89e053f0 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1bd89e051d0 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e05250 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1bd89e052d0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1bd89e05788 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1bd89e054d0 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e05550 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1bd89e055d0 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x1bd89e05648 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89e06ab0 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x1bd89e05878 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x1bd89e06918 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x1bd89e06990 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89e07078 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1bd89e06b98 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89e06c10 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e06c90 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1bd89e06d10 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x1bd89e06d90 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x1bd89e06e10 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x1bd89e07570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1bd89e07238 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1bd89e072b8 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x1bd89e07338 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x1bd89e073b8 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x1bd89e07630 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89dffb08 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1bd89e07778 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89e077f0 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e07870 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1bd89dff890 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x1bd89dff910 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x1bd89dff990 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x1bd89dfff88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1bd89dffcc8 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1bd89dffd48 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x1bd89dffdc8 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x1bd89dffe48 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x1bd89e00048 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e00508 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x1bd89e00190 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89e00208 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e00288 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x1bd89e00308 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x1bd89e029a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1bd89e006b8 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x1bd89e00738 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x1bd89e007b8 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x1bd89e02a60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e02e40 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x1bd89e02c18 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x1bd89e02c98 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x1bd89e031c0 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x1bd89e02f98 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x1bd89e03018 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x1bd89e03540 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x1bd89e03318 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x1bd89e03398 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x1bd89e07958 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1bd89e03618 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x1bd89e03698 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x1bd89e03710 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89e07d08 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1bd89e07a38 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x1bd89e07ab8 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x1bd89e07b30 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89e080b8 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x1bd89e07de8 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x1bd89e07e68 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x1bd89e07ee0 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1bd89e08390 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1bd89e08430 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1bd89e08498 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1bd89e08510 <col:46> Implicit
|-FunctionDecl 0x1bd89e08568 prev 0x1bd89e08390 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1bd89e081a0 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1bd89e08220 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1bd89e08660 <col:46> Inherited Implicit
|-FunctionDecl 0x1bd89e08820 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1bd89e058f0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1bd89e05958 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1bd89e059d0 <col:46> Implicit
|-FunctionDecl 0x1bd89e05a28 prev 0x1bd89e08820 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1bd89e086a0 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1bd89e08720 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1bd89e05b20 <col:46> Inherited Implicit
|-FunctionDecl 0x1bd89e06038 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1bd89e05b60 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x1bd89e05bd8 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e05c58 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x1bd89e05cd8 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x1bd89e05d58 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x1bd89e05dd8 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x1bd89e065e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1bd89e061f8 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x1bd89e06278 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x1bd89e062f8 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x1bd89e06378 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x1bd89e063f8 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x1bd89e066a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e089b0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1bd89e06810 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1bd89e08bd0 <line:831:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1bd89e08a88 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1bd89e08d88 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1bd89e08ca8 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x1bd89e09048 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x1bd89e08e60 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x1bd89e08ee0 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x1bd89e09310 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1bd89e093b0 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1bd89e09418 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1bd89e09490 <col:30> Implicit
|-FunctionDecl 0x1bd89e094e8 prev 0x1bd89e09310 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1bd89e09128 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1bd89e091a8 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1bd89e095e0 <col:30> Inherited Implicit
|-FunctionDecl 0x1bd89e09810 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1bd89e098b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1bd89e0e980 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1bd89e0e9f8 <col:34> Implicit
|-FunctionDecl 0x1bd89e0ea50 prev 0x1bd89e09810 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1bd89e09620 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1bd89e096a0 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1bd89e0eb48 <col:34> Inherited Implicit
|-FunctionDecl 0x1bd89e0ed08 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1bd89e0eda8 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1bd89e0ee10 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1bd89e0ee88 <col:30> Implicit
|-FunctionDecl 0x1bd89e0eee0 prev 0x1bd89e0ed08 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1bd89e0eb88 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1bd89e0ec08 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1bd89e0efd8 <col:30> Inherited Implicit
|-FunctionDecl 0x1bd89e0f198 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1bd89e0f238 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1bd89e0f2a0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1bd89e0f318 <col:34> Implicit
|-FunctionDecl 0x1bd89e0f370 prev 0x1bd89e0f198 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1bd89e0f018 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1bd89e0f098 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1bd89e0f468 <col:34> Inherited Implicit
|-FunctionDecl 0x1bd89e0f828 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x1bd89e0f4a8 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x1bd89e0f528 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x1bd89e0f5a8 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x1bd89e0f620 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89e09ca0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x1bd89e09a08 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x1bd89e09a88 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x1bd89e09b08 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x1bd89e09d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e0a340 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x1bd89e09f60 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x1bd89e09fe0 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x1bd89e0a060 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x1bd89e0a0e0 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x1bd89e0a160 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x1bd89e0a408 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e0cc50 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x1bd89e0a550 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x1bd89e0a5d0 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x1bd89e0a648 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e0a6c8 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x1bd89e0a740 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e0a7c0 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x1bd89e0a838 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e0a8b8 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x1bd89e0c960 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89e0d000 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1bd89e0cd68 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x1bd89e0cde8 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x1bd89e0ce68 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x1bd89e0d2e8 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89e0d0e0 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x1bd89e0d158 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x1bd89e0d1d0 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89e0d888 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89e0d3c8 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x1bd89e0d440 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e0d4b8 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e0d530 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e0d5a8 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1bd89e0d620 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x1bd89e0be50 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89e0ba38 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x1bd89e0bab0 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e0bb28 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e0bba0 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e0bc18 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x1bd89e0bf18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e0c1d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:885:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1bd89e0c058 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1bd89e0c380 <line:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1bd89e0c2a0 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x1bd89e0c628 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1bd89e0c450 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x1bd89e0c4c8 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x1bd89e0daa8 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89e0c700 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e0c778 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e0c7f0 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x1bd89e0c868 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89e0df10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1bd89e0dc50 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e0dcc8 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e0dd40 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x1bd89e0dfc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e0e5e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1bd89e0e1c8 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e0e240 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1bd89e0e2b8 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1bd89e0e330 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1bd89e0e3a8 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x1bd89e0e6a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e0fee0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x1bd89e0e7e8 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1bd89e0e860 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1bd89e0e8d8 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e0f990 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1bd89e0fa08 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e0fa80 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1bd89e0faf8 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e0fb70 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x1bd89e0fbe8 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89e10200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x1bd89e100f8 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x1bd89e102a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x1bd89e10698 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1bd89e104b8 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x1bd89e10538 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x1bd89e10748 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x1bd89e11af0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x1bd89e119b0 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x1bd89e11b98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x1bd89e12140 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1bd89e11e80 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1bd89e11f00 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x1bd89e11f80 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x1bd89e12000 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x1bd89e12200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x1bd89e122f8 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e12830 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1bd89e12570 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1bd89e125f0 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x1bd89e12670 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x1bd89e126f0 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x1bd89e128f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x1bd89e16ab0 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e16f48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1bd89e16d28 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x1bd89e16da8 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x1bd89e16e28 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x1bd89e17000 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x1bd89e170f8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e17590 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1bd89e17370 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x1bd89e173f0 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89e17470 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x1bd89e17648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x1bd89e17740 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e14c00 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1bd89e149e0 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x1bd89e14a60 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x1bd89e14ae0 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x1bd89e14cb8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x1bd89e14db0 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e15048 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1bd89e14f68 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x1bd89e150f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x1bd89e154d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1bd89e152b8 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x1bd89e15338 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x1bd89e153b8 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x1bd89e15588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x1bd89e15a90 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1bd89e15850 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x1bd89e158d0 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x1bd89e15950 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x1bd89e15b48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x1bd89e15c40 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1bd89e15e28 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1bd89e15d50 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-RecordDecl 0x1bd89e15ee8 <.//openssl//file_jk/after\crypto\ec/ec_lcl.h:52:1, line:180:1> line:52:8 struct ec_method_st definition
| |-FieldDecl 0x1bd89e15fb8 <line:54:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1bd89e16028 <line:56:5, col:9> col:9 field_type 'int'
| |-FieldDecl 0x1bd89e161c8 <line:61:5, col:34> col:11 group_init 'int (*)(int *)'
| |-FieldDecl 0x1bd89e16390 <line:62:5, col:37> col:12 group_finish 'void (*)(int *)'
| |-FieldDecl 0x1bd89e164a0 <line:63:5, col:43> col:12 group_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x1bd89e16710 <line:64:5, col:52> col:11 group_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1bd89e13b08 <line:67:5, line:68:54> line:67:11 group_set_curve 'int (*)(int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1bd89e13f18 <line:69:5, line:70:37> line:69:11 group_get_curve 'int (*)(const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x1bd89e140e8 <line:72:5, col:46> col:11 group_get_degree 'int (*)(const int *)'
| |-FieldDecl 0x1bd89e14200 <line:73:5, col:46> col:11 group_order_bits 'int (*)(const int *)'
| |-FieldDecl 0x1bd89e14470 <line:75:5, col:64> col:11 group_check_discriminant 'int (*)(const int *, int *)'
| |-FieldDecl 0x1bd89e14588 <line:80:5, col:34> col:11 point_init 'int (*)(int *)'
| |-FieldDecl 0x1bd89e14698 <line:81:5, col:37> col:12 point_finish 'void (*)(int *)'
| |-FieldDecl 0x1bd89e147a8 <line:82:5, col:43> col:12 point_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x1bd89e14948 <line:83:5, col:52> col:11 point_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1bd89e17b40 <line:92:5, col:63> col:11 point_set_to_infinity 'int (*)(const int *, int *)'
| |-FieldDecl 0x1bd89e17ff0 <line:93:5, line:96:76> line:93:11 point_set_Jprojective_coordinates_GFp 'int (*)(const int *, int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1bd89e184a0 <line:97:5, line:100:59> line:97:11 point_get_Jprojective_coordinates_GFp 'int (*)(const int *, const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x1bd89e188b8 <line:101:5, line:103:50> line:101:11 point_set_affine_coordinates 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1bd89e18cd8 <line:104:5, line:105:72> line:104:11 point_get_affine_coordinates 'int (*)(const int *, const int *, int *, int *, int *)'
| |-FieldDecl 0x1bd89e190e8 <line:106:5, line:108:54> line:106:11 point_set_compressed_coordinates 'int (*)(const int *, int *, const int *, int, int *)'
| |-FieldDecl 0x1bd89e19608 <line:110:5, line:112:46> line:110:14 point2oct 'size_t (*)(const int *, const int *, int, unsigned char *, size_t, int *)'
| |-FieldDecl 0x1bd89e12a20 <line:113:5, line:114:43> line:113:11 oct2point 'int (*)(const int *, int *, const unsigned char *, size_t, int *)'
| |-FieldDecl 0x1bd89e12d58 <line:116:5, line:117:44> line:116:11 add 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1bd89e130e0 <line:118:5, col:75> col:11 dbl 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1bd89e133d8 <line:119:5, col:58> col:11 invert 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1bd89e13640 <line:123:5, col:62> col:11 is_at_infinity 'int (*)(const int *, const int *)'
| |-FieldDecl 0x1bd89e13938 <line:124:5, col:69> col:11 is_on_curve 'int (*)(const int *, const int *, int *)'
| |-FieldDecl 0x1bd89e1dd90 <line:125:5, line:126:31> line:125:11 point_cmp 'int (*)(const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1bd89e1dfb8 <line:128:5, col:63> col:11 make_affine 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1bd89e1e430 <line:129:5, line:130:40> line:129:11 points_make_affine 'int (*)(const int *, size_t, int **, int *)'
| |-FieldDecl 0x1bd89e1ea80 <line:136:5, line:138:25> line:136:11 mul 'int (*)(const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-FieldDecl 0x1bd89e1ecf0 <line:139:5, col:54> col:11 precompute_mult 'int (*)(int *, int *)'
| |-FieldDecl 0x1bd89e1ee08 <line:140:5, col:55> col:11 have_precompute_mult 'int (*)(const int *)'
| |-FieldDecl 0x1bd89e1f140 <line:148:5, line:149:48> line:148:11 field_mul 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1bd89e1f3f0 <line:150:5, col:77> col:11 field_sqr 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1bd89e1f728 <line:151:5, line:152:48> line:151:11 field_div 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1bd89e1f9d8 <line:159:5, col:77> col:11 field_inv 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1bd89e21cf0 <line:161:5, line:162:34> line:161:11 field_encode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1bd89e21fa0 <line:164:5, line:165:34> line:164:11 field_decode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1bd89e221c8 <line:166:5, col:67> col:11 field_set_to_one 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1bd89e224f0 <line:168:5, col:75> col:14 priv2oct 'size_t (*)(const int *, unsigned char *, size_t)'
| |-FieldDecl 0x1bd89e22818 <line:169:5, col:72> col:11 oct2priv 'int (*)(int *, const unsigned char *, size_t)'
| |-FieldDecl 0x1bd89e229b8 <line:170:5, col:61> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x1bd89e1caa0 <line:171:5, col:32> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x1bd89e1cbb8 <line:172:5, col:40> col:11 keycheck 'int (*)(const int *)'
| |-FieldDecl 0x1bd89e1ccd0 <line:173:5, col:35> col:11 keygenpub 'int (*)(int *)'
| |-FieldDecl 0x1bd89e1ce70 <line:174:5, col:50> col:11 keycopy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1bd89e1cf80 <line:175:5, col:36> col:12 keyfinish 'void (*)(int *)'
| |-FieldDecl 0x1bd89e1d390 <line:177:5, line:178:72> line:177:11 ecdh_compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| `-FieldDecl 0x1bd89e1d5b8 <line:179:5, col:77> col:11 blind_coordinates 'int (*)(const int *, int *, int *)'
|-RecordDecl 0x1bd89e1d610 <line:185:9, col:16> col:16 struct nistp224_pre_comp_st
|-TypedefDecl 0x1bd89e1d728 <col:1, col:37> col:37 referenced NISTP224_PRE_COMP 'struct nistp224_pre_comp_st':'struct nistp224_pre_comp_st'
| `-ElaboratedType 0x1bd89e1d6d0 'struct nistp224_pre_comp_st' sugar
|   `-RecordType 0x1bd89e1d6b0 'struct nistp224_pre_comp_st'
|     `-Record 0x1bd89e1d610 'nistp224_pre_comp_st'
|-RecordDecl 0x1bd89e1d798 <line:186:9, col:16> col:16 struct nistp256_pre_comp_st
|-TypedefDecl 0x1bd89e1d8a8 <col:1, col:37> col:37 referenced NISTP256_PRE_COMP 'struct nistp256_pre_comp_st':'struct nistp256_pre_comp_st'
| `-ElaboratedType 0x1bd89e1d850 'struct nistp256_pre_comp_st' sugar
|   `-RecordType 0x1bd89e1d830 'struct nistp256_pre_comp_st'
|     `-Record 0x1bd89e1d798 'nistp256_pre_comp_st'
|-RecordDecl 0x1bd89e1d918 <line:187:9, col:16> col:16 struct nistp521_pre_comp_st
|-TypedefDecl 0x1bd89e1aa40 <col:1, col:37> col:37 referenced NISTP521_PRE_COMP 'struct nistp521_pre_comp_st':'struct nistp521_pre_comp_st'
| `-ElaboratedType 0x1bd89e1d9d0 'struct nistp521_pre_comp_st' sugar
|   `-RecordType 0x1bd89e1d9b0 'struct nistp521_pre_comp_st'
|     `-Record 0x1bd89e1d918 'nistp521_pre_comp_st'
|-RecordDecl 0x1bd89e1aab0 <line:188:9, col:16> col:16 struct nistz256_pre_comp_st
|-TypedefDecl 0x1bd89e1abc8 <col:1, col:37> col:37 referenced NISTZ256_PRE_COMP 'struct nistz256_pre_comp_st':'struct nistz256_pre_comp_st'
| `-ElaboratedType 0x1bd89e1ab70 'struct nistz256_pre_comp_st' sugar
|   `-RecordType 0x1bd89e1ab50 'struct nistz256_pre_comp_st'
|     `-Record 0x1bd89e1aab0 'nistz256_pre_comp_st'
|-RecordDecl 0x1bd89e1ac38 <line:189:9, col:16> col:16 struct ec_pre_comp_st
|-TypedefDecl 0x1bd89e1ad48 <col:1, col:31> col:31 referenced EC_PRE_COMP 'struct ec_pre_comp_st':'struct ec_pre_comp_st'
| `-ElaboratedType 0x1bd89e1acf0 'struct ec_pre_comp_st' sugar
|   `-RecordType 0x1bd89e1acd0 'struct ec_pre_comp_st'
|     `-Record 0x1bd89e443d0 'ec_pre_comp_st'
|-RecordDecl 0x1bd89e1adb8 <line:191:1, line:256:1> line:191:8 invalid struct ec_group_st definition
| |-FieldDecl 0x1bd89e1ae88 <line:192:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x1bd89e1aef8 <line:193:5, col:15> col:15 invalid generator 'int *'
| |-FieldDecl 0x1bd89e1af68 <line:194:5, col:13> col:13 invalid order 'int *'
| |-FieldDecl 0x1bd89e1afd8 <col:5, col:21> col:21 invalid cofactor 'int *'
| |-FieldDecl 0x1bd89e1b048 <line:195:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x1bd89e1b0b8 <line:196:5, col:9> col:9 asn1_flag 'int'
| |-FieldDecl 0x1bd89e1b128 <line:197:5, col:29> col:29 invalid asn1_form 'int'
| |-FieldDecl 0x1bd89e1b198 <line:198:5, col:20> col:20 seed 'unsigned char *'
| |-FieldDecl 0x1bd89e1b200 <line:200:5, col:12> col:12 seed_len 'size_t':'unsigned long long'
| |-FieldDecl 0x1bd89e1b270 <line:210:5, col:13> col:13 invalid field 'int *'
| |-FieldDecl 0x1bd89e1b370 <line:218:5, col:15> col:9 poly 'int [6]'
| |-FieldDecl 0x1bd89e1b3e0 <line:226:5, col:13> col:13 invalid a 'int *'
| |-FieldDecl 0x1bd89e1b450 <col:5, col:17> col:17 invalid b 'int *'
| |-FieldDecl 0x1bd89e1b4c0 <line:228:5, col:9> col:9 a_is_minus3 'int'
| |-FieldDecl 0x1bd89e1b530 <line:230:5, col:11> col:11 field_data1 'void *'
| |-FieldDecl 0x1bd89e1b5a0 <line:232:5, col:11> col:11 field_data2 'void *'
| |-FieldDecl 0x1bd89e1b930 <line:234:5, line:235:36> line:234:11 field_mod_func 'int (*)(int *, const int *, const int *, int *)'
| |-FieldDecl 0x1bd89e1b9a0 <line:237:5, col:18> col:18 invalid mont_data 'int *'
| |-EnumDecl 0x1bd89e22ac0 <line:244:5, line:248:5> line:244:5
| | |-EnumConstantDecl 0x1bd89e22ba0 <line:245:9> col:9 PCT_none 'int'
| | |-EnumConstantDecl 0x1bd89e22bf8 <line:246:9> col:9 PCT_nistp224 'int'
| | |-EnumConstantDecl 0x1bd89e22c50 <col:23> col:23 PCT_nistp256 'int'
| | |-EnumConstantDecl 0x1bd89e22ca8 <col:37> col:37 PCT_nistp521 'int'
| | |-EnumConstantDecl 0x1bd89e22d00 <col:51> col:51 PCT_nistz256 'int'
| | `-EnumConstantDecl 0x1bd89e22d58 <line:247:9> col:9 referenced PCT_ec 'int'
| |-FieldDecl 0x1bd89e22e08 <line:244:5, line:248:7> col:7 pre_comp_type 'enum (anonymous enum at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:244:5)':'enum ec_group_st::(anonymous at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:244:5)'
| |-RecordDecl 0x1bd89e22e60 <line:249:5, line:255:5> line:249:5 union definition
| | |-FieldDecl 0x1bd89e22fa8 <line:250:9, col:28> col:28 nistp224 'NISTP224_PRE_COMP *'
| | |-FieldDecl 0x1bd89e23088 <line:251:9, col:28> col:28 nistp256 'NISTP256_PRE_COMP *'
| | |-FieldDecl 0x1bd89e23168 <line:252:9, col:28> col:28 nistp521 'NISTP521_PRE_COMP *'
| | |-FieldDecl 0x1bd89e23248 <line:253:9, col:28> col:28 nistz256 'NISTZ256_PRE_COMP *'
| | `-FieldDecl 0x1bd89e23328 <line:254:9, col:22> col:22 ec 'EC_PRE_COMP *'
| `-FieldDecl 0x1bd89e233d8 <line:249:5, line:255:7> col:7 pre_comp 'union (anonymous union at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:249:5)':'union ec_group_st::(anonymous at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:249:5)'
|-RecordDecl 0x1bd89e23430 <line:263:1, line:276:1> line:263:8 invalid struct ec_key_st definition
| |-FieldDecl 0x1bd89e23508 <line:264:5, col:26> col:26 invalid meth 'const int *'
| |-FieldDecl 0x1bd89e23578 <line:265:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x1bd89e235e8 <line:266:5, col:9> col:9 version 'int'
| |-FieldDecl 0x1bd89e23658 <line:267:5, col:15> col:15 invalid group 'int *'
| |-FieldDecl 0x1bd89e236c8 <line:268:5, col:15> col:15 invalid pub_key 'int *'
| |-FieldDecl 0x1bd89e23738 <line:269:5, col:13> col:13 invalid priv_key 'int *'
| |-FieldDecl 0x1bd89e237a8 <line:270:5, col:18> col:18 enc_flag 'unsigned int'
| |-FieldDecl 0x1bd89e23818 <line:271:5, col:29> col:29 invalid conv_form 'int'
| |-FieldDecl 0x1bd89e23888 <line:272:5, col:9> col:9 references 'int'
| |-FieldDecl 0x1bd89e238f8 <line:273:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1bd89e23968 <line:274:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x1bd89e239d8 <line:275:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x1bd89e23a30 <line:278:1, line:292:1> line:278:8 invalid struct ec_point_st definition
| |-FieldDecl 0x1bd89e20af8 <line:279:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x1bd89e20b68 <line:281:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x1bd89e20bd8 <line:286:5, col:13> col:13 invalid X 'int *'
| |-FieldDecl 0x1bd89e20c48 <line:287:5, col:13> col:13 invalid Y 'int *'
| |-FieldDecl 0x1bd89e20cb8 <line:288:5, col:13> col:13 invalid Z 'int *'
| `-FieldDecl 0x1bd89e20d28 <line:290:5, col:9> col:9 Z_is_one 'int'
|-FunctionDecl 0x1bd89e20eb8 <line:295:1, line:305:1> line:295:24 invalid ec_point_is_compat 'int (const int *, const int *)' static
| |-ParmVarDecl 0x1bd89e20d98 <col:43, col:59> col:59 invalid point 'const int *'
| |-ParmVarDecl 0x1bd89e20e18 <line:296:43, col:59> col:59 invalid group 'const int *'
| `-CompoundStmt 0x1bd89e21070 <line:297:1, line:305:1>
|   |-IfStmt 0x1bd89e21020 <line:298:5, line:302:16>
|   | |-OpaqueValueExpr 0x1bd89e21008 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1bd89e20ff8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1bd89e20fd0 <col:16> 'int' 0
|   `-ReturnStmt 0x1bd89e21060 <line:304:5, col:12>
|     `-IntegerLiteral 0x1bd89e21038 <col:12> 'int' 1
|-FunctionDecl 0x1bd89e21198 <line:308:1, col:64> col:20 EC_nistp224_pre_comp_dup 'NISTP224_PRE_COMP *(NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x1bd89e210a0 <col:45, col:63> col:64 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x1bd89e21358 <line:309:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1bd89e21268 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1bd89e21518 <line:310:1, col:64> col:20 EC_nistp521_pre_comp_dup 'NISTP521_PRE_COMP *(NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x1bd89e21428 <col:45, col:63> col:64 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x1bd89e216d8 <line:311:1, col:64> col:20 EC_nistz256_pre_comp_dup 'NISTZ256_PRE_COMP *(NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x1bd89e215e8 <col:45, col:63> col:64 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x1bd89e21838 prev 0x1bd89e21358 <line:312:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1bd89e217a8 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1bd89e219e8 <line:313:1, col:46> col:14 EC_ec_pre_comp_dup 'EC_PRE_COMP *(EC_PRE_COMP *)'
| `-ParmVarDecl 0x1bd89e218f0 <col:33, col:45> col:46 'EC_PRE_COMP *'
|-FunctionDecl 0x1bd89e1bb10 <line:315:1, col:38> col:6 invalid EC_pre_comp_free 'void (int *)'
| `-ParmVarDecl 0x1bd89e1ba80 <col:23, col:33> col:33 invalid group 'int *'
|-FunctionDecl 0x1bd89e1bcb8 <line:316:1, col:51> col:6 EC_nistp224_pre_comp_free 'void (NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x1bd89e1bbc8 <col:32, col:50> col:51 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x1bd89e1be78 <line:317:1, col:51> col:6 EC_nistp256_pre_comp_free 'void (NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1bd89e1bd88 <col:32, col:50> col:51 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1bd89e1c038 <line:318:1, col:51> col:6 EC_nistp521_pre_comp_free 'void (NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x1bd89e1bf48 <col:32, col:50> col:51 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x1bd89e1c1f8 <line:319:1, col:51> col:6 EC_nistz256_pre_comp_free 'void (NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x1bd89e1c108 <col:32, col:50> col:51 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x1bd89e1c3b8 <line:320:1, col:39> col:6 used EC_ec_pre_comp_free 'void (EC_PRE_COMP *)'
| `-ParmVarDecl 0x1bd89e1c2c8 <col:26, col:38> col:39 'EC_PRE_COMP *'
|-FunctionDecl 0x1bd89e1c870 <line:326:1, line:328:25> line:326:5 invalid ec_wNAF_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1bd89e1c490 <col:17, col:33> col:33 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e1c510 <col:40, col:50> col:50 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e1c590 <col:53, col:67> col:67 invalid scalar 'const int *'
| |-ParmVarDecl 0x1bd89e1c608 <line:327:17, col:24> col:24 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e1c698 <col:29, <invalid sloc>> col:45 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1bd89e1c728 <col:55, <invalid sloc>> col:69 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1bd89e1c7a8 <line:328:17, <invalid sloc>> col:25 invalid 'int *'
|-FunctionDecl 0x1bd89e29b68 <line:329:1, col:54> col:5 invalid ec_wNAF_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1bd89e1c960 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x1bd89e1c9e0 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1bd89e29cc8 <line:330:1, col:55> col:5 invalid ec_wNAF_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1bd89e29c30 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x1bd89e29e20 <line:333:1, col:40> col:5 invalid ec_GFp_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x1bd89e29d88 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x1bd89e29f70 <line:334:1, col:43> col:6 invalid ec_GFp_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x1bd89e29ee0 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x1bd89e2a0c0 <line:335:1, col:49> col:6 invalid ec_GFp_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1bd89e2a030 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x1bd89e2a2a0 <line:336:1, col:58> col:5 invalid ec_GFp_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1bd89e2a180 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x1bd89e2a200 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x1bd89e2a620 <line:337:1, line:338:77> line:337:5 invalid ec_GFp_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e2a368 <col:35, <invalid sloc>> col:45 invalid 'int *'
| |-ParmVarDecl 0x1bd89e2a3e8 <col:47, col:61> col:61 invalid p 'const int *'
| |-ParmVarDecl 0x1bd89e2a468 <line:338:35, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e2a4e8 <col:52, col:66> col:66 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e2a568 <col:69, <invalid sloc>> col:77 invalid 'int *'
|-FunctionDecl 0x1bd89e2a9b8 <line:339:1, line:340:54> line:339:5 invalid ec_GFp_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e2a700 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e2a780 <col:53, col:61> col:61 invalid p 'int *'
| |-ParmVarDecl 0x1bd89e2a800 <col:64, col:72> col:72 invalid a 'int *'
| |-ParmVarDecl 0x1bd89e2a880 <line:340:35, col:43> col:43 invalid b 'int *'
| `-ParmVarDecl 0x1bd89e2a900 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1bd89e2ab40 <line:341:1, col:52> col:5 invalid ec_GFp_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x1bd89e2aa98 <col:36, <invalid sloc>> col:52 invalid 'const int *'
|-FunctionDecl 0x1bd89e2ad20 <line:342:1, col:70> col:5 invalid ec_GFp_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x1bd89e2ac00 <col:44, <invalid sloc>> col:60 invalid 'const int *'
| `-ParmVarDecl 0x1bd89e2ac80 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1bd89e2ae80 <line:343:1, col:40> col:5 invalid ec_GFp_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x1bd89e2ade8 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x1bd89e2afd0 <line:344:1, col:43> col:6 invalid ec_GFp_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x1bd89e2af40 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x1bd89e2b120 <line:345:1, col:49> col:6 invalid ec_GFp_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1bd89e2b090 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x1bd89e2b300 <line:346:1, col:58> col:5 invalid ec_GFp_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1bd89e2b1e0 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x1bd89e2b260 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x1bd89e2b4e8 <line:347:1, col:69> col:5 invalid ec_GFp_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x1bd89e2b3c8 <col:41, <invalid sloc>> col:57 invalid 'const int *'
| `-ParmVarDecl 0x1bd89e2b448 <col:59, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x1bd89e2b8f0 <line:348:1, line:351:76> line:348:5 invalid ec_GFp_simple_set_Jprojective_coordinates_GFp 'int (const int *, int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e2b5b0 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e2b630 <line:349:51, <invalid sloc>> col:61 invalid 'int *'
| |-ParmVarDecl 0x1bd89e2b6b0 <col:63, col:77> col:77 invalid x 'const int *'
| |-ParmVarDecl 0x1bd89e2b730 <line:350:51, col:65> col:65 invalid y 'const int *'
| |-ParmVarDecl 0x1bd89e2b7b0 <line:351:51, col:65> col:65 invalid z 'const int *'
| `-ParmVarDecl 0x1bd89e2b830 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1bd89e26cd8 <line:352:1, line:355:59> line:352:5 invalid ec_GFp_simple_get_Jprojective_coordinates_GFp 'int (const int *, const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e2b9d8 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e2ba58 <line:353:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e2bad8 <col:69, col:77> col:77 invalid x 'int *'
| |-ParmVarDecl 0x1bd89e26b18 <line:354:51, col:59> col:59 invalid y 'int *'
| |-ParmVarDecl 0x1bd89e26b98 <col:62, col:70> col:70 invalid z 'int *'
| `-ParmVarDecl 0x1bd89e26c18 <line:355:51, <invalid sloc>> col:59 invalid 'int *'
|-FunctionDecl 0x1bd89e27078 <line:356:1, line:358:73> line:356:5 invalid ec_GFp_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e26dc0 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e26e40 <col:66, <invalid sloc>> col:76 invalid 'int *'
| |-ParmVarDecl 0x1bd89e26ec0 <line:357:48, col:62> col:62 invalid x 'const int *'
| |-ParmVarDecl 0x1bd89e26f40 <line:358:48, col:62> col:62 invalid y 'const int *'
| `-ParmVarDecl 0x1bd89e26fc0 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x1bd89e27410 <line:359:1, line:361:67> line:359:5 invalid ec_GFp_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e27158 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e271d8 <line:360:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e27258 <col:66, col:74> col:74 invalid x 'int *'
| |-ParmVarDecl 0x1bd89e272d8 <line:361:48, col:56> col:56 invalid y 'int *'
| `-ParmVarDecl 0x1bd89e27358 <col:59, <invalid sloc>> col:67 invalid 'int *'
|-FunctionDecl 0x1bd89e277a8 <line:362:1, line:364:54> line:362:5 invalid ec_GFp_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x1bd89e274f0 <col:46, <invalid sloc>> col:62 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e27570 <col:64, <invalid sloc>> col:74 invalid 'int *'
| |-ParmVarDecl 0x1bd89e275f0 <line:363:46, col:60> col:60 invalid x 'const int *'
| |-ParmVarDecl 0x1bd89e27670 <col:63, col:67> col:67 y_bit 'int'
| `-ParmVarDecl 0x1bd89e276f0 <line:364:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1bd89e2bc08 <line:365:1, line:367:72> line:365:8 invalid ec_GFp_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1bd89e27888 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e27908 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e27988 <line:366:32, col:56> col:56 invalid form 'int'
| |-ParmVarDecl 0x1bd89e27a08 <line:367:32, col:47> col:47 buf 'unsigned char *'
| |-ParmVarDecl 0x1bd89e27a80 <col:52, col:59> col:59 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89e2bb50 <col:64, <invalid sloc>> col:72 invalid 'int *'
|-FunctionDecl 0x1bd89e2bfa0 <line:368:1, line:369:75> line:368:5 invalid ec_GFp_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1bd89e2bcf0 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e2bd70 <col:47, <invalid sloc>> col:57 invalid 'int *'
| |-ParmVarDecl 0x1bd89e2bdf0 <line:369:29, col:50> col:50 buf 'const unsigned char *'
| |-ParmVarDecl 0x1bd89e2be68 <col:55, col:62> col:62 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89e2bee8 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x1bd89e2c338 <line:370:1, line:371:50> line:370:5 invalid ec_GFp_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e2c080 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e2c100 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e2c180 <col:54, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e2c200 <line:371:23, col:39> col:39 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e2c280 <col:42, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1bd89e2c648 <line:372:1, line:373:31> line:372:5 invalid ec_GFp_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e2c418 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e2c498 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e2c518 <col:54, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1bd89e2c598 <line:373:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x1bd89e2c8c8 <line:374:1, col:64> col:5 invalid ec_GFp_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e2c720 <col:26, <invalid sloc>> col:42 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e2c7a0 <col:44, <invalid sloc>> col:54 invalid 'int *'
| `-ParmVarDecl 0x1bd89e2c820 <col:56, <invalid sloc>> col:64 invalid 'int *'
|-FunctionDecl 0x1bd89e27b10 <line:375:1, col:68> col:5 invalid ec_GFp_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x1bd89e2c998 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| `-ParmVarDecl 0x1bd89e2ca18 <col:52, <invalid sloc>> col:68 invalid 'const int *'
|-FunctionDecl 0x1bd89e27d80 <line:376:1, col:75> col:5 invalid ec_GFp_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e27bd8 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e27c58 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| `-ParmVarDecl 0x1bd89e27cd8 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x1bd89e28080 <line:377:1, line:378:31> line:377:5 invalid ec_GFp_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e27e50 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e27ed0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e27f50 <col:60, col:76> col:76 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e27fd0 <line:378:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x1bd89e28300 <line:379:1, col:69> col:5 invalid ec_GFp_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e28158 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e281d8 <col:49, <invalid sloc>> col:59 invalid 'int *'
| `-ParmVarDecl 0x1bd89e28258 <col:61, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x1bd89e28608 <line:380:1, line:381:60> line:380:5 invalid ec_GFp_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x1bd89e283d0 <col:38, <invalid sloc>> col:54 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e28448 <col:56, col:63> col:63 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e284d8 <line:381:38, <invalid sloc>> col:48 invalid 'int **':'int **'
| `-ParmVarDecl 0x1bd89e28558 <col:52, <invalid sloc>> col:60 invalid 'int *'
|-FunctionDecl 0x1bd89e28998 <line:382:1, line:383:54> line:382:5 invalid ec_GFp_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e286e0 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e28760 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e287e0 <col:58, col:72> col:72 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e28860 <line:383:29, col:43> col:43 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e288e0 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1bd89e24c90 <line:384:1, line:385:37> line:384:5 invalid ec_GFp_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e28a78 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e24ae0 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e24b60 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x1bd89e24be0 <line:385:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x1bd89e24f98 <line:386:1, line:387:37> line:386:5 invalid ec_GFp_simple_field_inv 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e24d68 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e24de8 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e24e68 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x1bd89e24ee8 <line:387:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x1bd89e25218 <line:388:1, line:389:48> line:388:5 invalid ec_GFp_simple_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e25070 <col:37, col:53> col:53 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e250f0 <col:60, col:70> col:70 invalid p 'int *'
| `-ParmVarDecl 0x1bd89e25170 <line:389:37, col:45> col:45 invalid ctx 'int *'
|-FunctionDecl 0x1bd89e25380 <line:392:1, col:38> col:5 invalid ec_GFp_mont_group_init 'int (int *)'
| `-ParmVarDecl 0x1bd89e252e8 <col:28, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1bd89e256f8 <line:393:1, line:394:58> line:393:5 invalid ec_GFp_mont_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e25440 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x1bd89e254c0 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x1bd89e25540 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e255c0 <line:394:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e25640 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x1bd89e25868 <line:395:1, col:41> col:6 invalid ec_GFp_mont_group_finish 'void (int *)'
| `-ParmVarDecl 0x1bd89e257d8 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1bd89e259b8 <line:396:1, col:47> col:6 invalid ec_GFp_mont_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1bd89e25928 <col:37, <invalid sloc>> col:47 invalid 'int *'
|-FunctionDecl 0x1bd89e25ba8 <line:397:1, col:56> col:5 invalid ec_GFp_mont_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1bd89e25a78 <col:28, <invalid sloc>> col:38 invalid 'int *'
| `-ParmVarDecl 0x1bd89e25b08 <col:40, <invalid sloc>> col:56 invalid 'const int *'
|-FunctionDecl 0x1bd89e25f28 <line:398:1, line:399:52> line:398:5 invalid ec_GFp_mont_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e25c70 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e25cf0 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e25d70 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e25df0 <line:399:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e25e70 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x1bd89e26238 <line:400:1, line:401:35> line:400:5 invalid ec_GFp_mont_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e26008 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e26088 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e26108 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1bd89e26188 <line:401:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x1bd89e26540 <line:402:1, line:403:35> line:402:5 invalid ec_GFp_mont_field_inv 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e26310 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e26390 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e26410 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1bd89e26490 <line:403:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x1bd89e26848 <line:404:1, line:405:38> line:404:5 invalid ec_GFp_mont_field_encode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e26618 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e26698 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e26718 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1bd89e26798 <line:405:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1bd89e2dc20 <line:406:1, line:407:38> line:406:5 invalid ec_GFp_mont_field_decode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e26920 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e269a0 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e26a20 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1bd89e2db70 <line:407:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1bd89e2dea0 <line:408:1, col:71> col:5 invalid ec_GFp_mont_field_set_to_one 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e2dcf8 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e2dd78 <col:52, col:60> col:60 invalid r 'int *'
| `-ParmVarDecl 0x1bd89e2ddf8 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x1bd89e2e090 <line:411:1, col:63> col:5 invalid ec_GFp_nist_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1bd89e2df70 <col:28, col:38> col:38 invalid dest 'int *'
| `-ParmVarDecl 0x1bd89e2dff0 <col:44, col:60> col:60 invalid src 'const int *'
|-FunctionDecl 0x1bd89e2e410 <line:412:1, line:413:58> line:412:5 invalid ec_GFp_nist_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e2e158 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x1bd89e2e1d8 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x1bd89e2e258 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e2e2d8 <line:413:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e2e358 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x1bd89e2e7a8 <line:414:1, line:415:52> line:414:5 invalid ec_GFp_nist_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e2e4f0 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e2e570 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e2e5f0 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e2e670 <line:415:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e2e6f0 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x1bd89e2eab8 <line:416:1, line:417:35> line:416:5 invalid ec_GFp_nist_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e2e888 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e2e908 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e2e988 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1bd89e2ea08 <line:417:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x1bd89e28bf0 <line:420:1, col:41> col:5 invalid ec_GF2m_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x1bd89e28b58 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1bd89e28d40 <line:421:1, col:44> col:6 invalid ec_GF2m_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x1bd89e28cb0 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1bd89e28e90 <line:422:1, col:50> col:6 invalid ec_GF2m_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1bd89e28e00 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1bd89e29070 <line:423:1, col:59> col:5 invalid ec_GF2m_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1bd89e28f50 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x1bd89e28fd0 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x1bd89e293f0 <line:424:1, line:426:44> line:424:5 invalid ec_GF2m_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e29138 <col:36, <invalid sloc>> col:46 invalid 'int *'
| |-ParmVarDecl 0x1bd89e291b8 <col:48, col:62> col:62 invalid p 'const int *'
| |-ParmVarDecl 0x1bd89e29238 <line:425:36, col:50> col:50 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e292b8 <col:53, col:67> col:67 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e29338 <line:426:36, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1bd89e29788 <line:427:1, line:428:55> line:427:5 invalid ec_GF2m_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e294d0 <col:36, <invalid sloc>> col:52 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e29550 <col:54, col:62> col:62 invalid p 'int *'
| |-ParmVarDecl 0x1bd89e295d0 <col:65, col:73> col:73 invalid a 'int *'
| |-ParmVarDecl 0x1bd89e29650 <line:428:36, col:44> col:44 invalid b 'int *'
| `-ParmVarDecl 0x1bd89e296d0 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1bd89e29900 <line:429:1, col:53> col:5 invalid ec_GF2m_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x1bd89e29868 <col:37, <invalid sloc>> col:53 invalid 'const int *'
|-FunctionDecl 0x1bd89e2fb90 <line:430:1, col:71> col:5 invalid ec_GF2m_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x1bd89e299c0 <col:45, <invalid sloc>> col:61 invalid 'const int *'
| `-ParmVarDecl 0x1bd89e29a40 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x1bd89e2fcf0 <line:431:1, col:41> col:5 invalid ec_GF2m_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x1bd89e2fc58 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1bd89e2fe40 <line:432:1, col:44> col:6 invalid ec_GF2m_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x1bd89e2fdb0 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1bd89e2ff90 <line:433:1, col:50> col:6 invalid ec_GF2m_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1bd89e2ff00 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1bd89e30170 <line:434:1, col:59> col:5 invalid ec_GF2m_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1bd89e30050 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x1bd89e300d0 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x1bd89e30358 <line:435:1, col:70> col:5 invalid ec_GF2m_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x1bd89e30238 <col:42, <invalid sloc>> col:58 invalid 'const int *'
| `-ParmVarDecl 0x1bd89e302b8 <col:60, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1bd89e306d8 <line:436:1, line:438:74> line:436:5 invalid ec_GF2m_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e30420 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e304a0 <col:67, <invalid sloc>> col:77 invalid 'int *'
| |-ParmVarDecl 0x1bd89e30520 <line:437:49, col:63> col:63 invalid x 'const int *'
| |-ParmVarDecl 0x1bd89e305a0 <line:438:49, col:63> col:63 invalid y 'const int *'
| `-ParmVarDecl 0x1bd89e30620 <col:66, <invalid sloc>> col:74 invalid 'int *'
|-FunctionDecl 0x1bd89e30a70 <line:439:1, line:441:68> line:439:5 invalid ec_GF2m_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e307b8 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e30838 <line:440:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e308b8 <col:67, col:75> col:75 invalid x 'int *'
| |-ParmVarDecl 0x1bd89e30938 <line:441:49, col:57> col:57 invalid y 'int *'
| `-ParmVarDecl 0x1bd89e309b8 <col:60, <invalid sloc>> col:68 invalid 'int *'
|-FunctionDecl 0x1bd89e33e88 <line:442:1, line:444:55> line:442:5 invalid ec_GF2m_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x1bd89e33bd0 <col:47, <invalid sloc>> col:63 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e33c50 <col:65, <invalid sloc>> col:75 invalid 'int *'
| |-ParmVarDecl 0x1bd89e33cd0 <line:443:47, col:61> col:61 invalid x 'const int *'
| |-ParmVarDecl 0x1bd89e33d50 <col:64, col:68> col:68 y_bit 'int'
| `-ParmVarDecl 0x1bd89e33dd0 <line:444:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1bd89e34298 <line:445:1, line:447:73> line:445:8 invalid ec_GF2m_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1bd89e33f68 <col:33, <invalid sloc>> col:49 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e33fe8 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e34068 <line:446:33, col:57> col:57 invalid form 'int'
| |-ParmVarDecl 0x1bd89e340e8 <line:447:33, col:48> col:48 buf 'unsigned char *'
| |-ParmVarDecl 0x1bd89e34160 <col:53, col:60> col:60 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89e341e0 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x1bd89e34630 <line:448:1, line:449:76> line:448:5 invalid ec_GF2m_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1bd89e34380 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e34400 <col:48, <invalid sloc>> col:58 invalid 'int *'
| |-ParmVarDecl 0x1bd89e34480 <line:449:30, col:51> col:51 buf 'const unsigned char *'
| |-ParmVarDecl 0x1bd89e344f8 <col:56, col:63> col:63 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1bd89e34578 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1bd89e349c8 <line:450:1, line:451:51> line:450:5 invalid ec_GF2m_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e34710 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e34790 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e34810 <col:55, col:71> col:71 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e34890 <line:451:24, col:40> col:40 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e34910 <col:43, <invalid sloc>> col:51 invalid 'int *'
|-FunctionDecl 0x1bd89e31ce0 <line:452:1, line:453:32> line:452:5 invalid ec_GF2m_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e34aa8 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e34b28 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e31bb0 <col:55, col:71> col:71 invalid a 'const int *'
| `-ParmVarDecl 0x1bd89e31c30 <line:453:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1bd89e31f60 <line:454:1, col:65> col:5 invalid ec_GF2m_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e31db8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e31e38 <col:45, <invalid sloc>> col:55 invalid 'int *'
| `-ParmVarDecl 0x1bd89e31eb8 <col:57, <invalid sloc>> col:65 invalid 'int *'
|-FunctionDecl 0x1bd89e32150 <line:455:1, col:69> col:5 invalid ec_GF2m_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x1bd89e32030 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| `-ParmVarDecl 0x1bd89e320b0 <col:53, <invalid sloc>> col:69 invalid 'const int *'
|-FunctionDecl 0x1bd89e323c0 <line:456:1, col:76> col:5 invalid ec_GF2m_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e32218 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e32298 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| `-ParmVarDecl 0x1bd89e32318 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1bd89e326c0 <line:457:1, line:458:32> line:457:5 invalid ec_GF2m_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e32490 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e32510 <col:42, col:58> col:58 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e32590 <col:61, col:77> col:77 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e32610 <line:458:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1bd89e32940 <line:459:1, col:70> col:5 invalid ec_GF2m_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e32798 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e32818 <col:50, <invalid sloc>> col:60 invalid 'int *'
| `-ParmVarDecl 0x1bd89e32898 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1bd89e34c90 <line:460:1, line:461:61> line:460:5 invalid ec_GF2m_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x1bd89e32a10 <col:39, <invalid sloc>> col:55 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e32a88 <col:57, col:64> col:64 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e32b18 <line:461:39, <invalid sloc>> col:49 invalid 'int **':'int **'
| `-ParmVarDecl 0x1bd89e34be0 <col:53, <invalid sloc>> col:61 invalid 'int *'
|-FunctionDecl 0x1bd89e35020 <line:462:1, line:463:55> line:462:5 invalid ec_GF2m_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e34d68 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e34de8 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e34e68 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e34ee8 <line:463:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e34f68 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1bd89e35330 <line:464:1, line:465:38> line:464:5 invalid ec_GF2m_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e35100 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e35180 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e35200 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1bd89e35280 <line:465:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1bd89e356c0 <line:466:1, line:467:55> line:466:5 invalid ec_GF2m_simple_field_div 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e35408 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1bd89e35488 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e35508 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e35588 <line:467:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x1bd89e35608 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1bd89e32bc0 <line:470:1, line:473:32> line:470:5 invalid ec_GF2m_simple_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1bd89e357a0 <col:24, col:40> col:40 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e35820 <col:47, col:57> col:57 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e358a0 <line:471:24, col:38> col:38 invalid scalar 'const int *'
| |-ParmVarDecl 0x1bd89e35918 <col:46, col:53> col:53 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e359a8 <line:472:24, <invalid sloc>> col:40 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1bd89e35a38 <col:50, <invalid sloc>> col:64 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1bd89e35ab8 <line:473:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1bd89e32dd0 <line:474:1, col:57> col:5 invalid ec_GF2m_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1bd89e32cb0 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x1bd89e32d30 <col:46, col:54> col:54 invalid ctx 'int *'
|-FunctionDecl 0x1bd89e32f30 <line:475:1, col:55> col:5 invalid ec_GF2m_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1bd89e32e98 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x1bd89e33088 <line:479:1, col:47> col:5 invalid ec_GFp_nistp224_group_init 'int (int *)'
| `-ParmVarDecl 0x1bd89e32ff0 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1bd89e33400 <line:480:1, line:482:45> line:480:5 invalid ec_GFp_nistp224_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e33148 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1bd89e331c8 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1bd89e33248 <line:481:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e332c8 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1bd89e33348 <line:482:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1bd89e33798 <line:483:1, line:486:61> line:483:5 invalid ec_GFp_nistp224_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e334e0 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e33560 <line:484:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1bd89e335e0 <line:485:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1bd89e33660 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1bd89e336e0 <line:486:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1bd89e30c68 <line:487:1, line:490:33> line:487:5 invalid ec_GFp_nistp224_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1bd89e33878 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e338f8 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e33978 <line:488:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1bd89e339f0 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e33a80 <line:489:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1bd89e33b10 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1bd89e30ba0 <line:490:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1bd89e31138 <line:491:1, line:494:68> line:491:5 invalid ec_GFp_nistp224_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1bd89e30d58 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e30dd8 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e30e58 <line:492:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1bd89e30ed0 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e30f60 <line:493:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1bd89e30ff0 <line:494:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1bd89e31070 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1bd89e31348 <line:495:1, col:65> col:5 invalid ec_GFp_nistp224_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1bd89e31228 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1bd89e312a8 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1bd89e314a8 <line:496:1, col:63> col:5 invalid ec_GFp_nistp224_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1bd89e31410 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1bd89e31600 <line:499:1, col:47> col:5 invalid ec_GFp_nistp256_group_init 'int (int *)'
| `-ParmVarDecl 0x1bd89e31568 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1bd89e31978 <line:500:1, line:502:45> line:500:5 invalid ec_GFp_nistp256_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e316c0 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1bd89e31740 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1bd89e317c0 <line:501:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e31840 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1bd89e318c0 <line:502:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1bd89e35da8 <line:503:1, line:506:61> line:503:5 invalid ec_GFp_nistp256_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e31a58 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e31ad8 <line:504:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1bd89e35bf0 <line:505:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1bd89e35c70 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1bd89e35cf0 <line:506:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1bd89e36268 <line:507:1, line:510:33> line:507:5 invalid ec_GFp_nistp256_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1bd89e35e88 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e35f08 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e35f88 <line:508:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1bd89e36000 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e36090 <line:509:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1bd89e36120 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1bd89e361a0 <line:510:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1bd89e36738 <line:511:1, line:514:68> line:511:5 invalid ec_GFp_nistp256_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1bd89e36358 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e363d8 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e36458 <line:512:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1bd89e364d0 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e36560 <line:513:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1bd89e365f0 <line:514:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1bd89e36670 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1bd89e36948 <line:515:1, col:65> col:5 invalid ec_GFp_nistp256_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1bd89e36828 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1bd89e368a8 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1bd89e36aa8 <line:516:1, col:63> col:5 invalid ec_GFp_nistp256_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1bd89e36a10 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1bd89e2ebb0 <line:519:1, col:47> col:5 invalid ec_GFp_nistp521_group_init 'int (int *)'
| `-ParmVarDecl 0x1bd89e36b68 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1bd89e2ef28 <line:520:1, line:522:45> line:520:5 invalid ec_GFp_nistp521_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89e2ec70 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1bd89e2ecf0 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1bd89e2ed70 <line:521:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1bd89e2edf0 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1bd89e2ee70 <line:522:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1bd89e2f2c0 <line:523:1, line:526:61> line:523:5 invalid ec_GFp_nistp521_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e2f008 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e2f088 <line:524:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1bd89e2f108 <line:525:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1bd89e2f188 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1bd89e2f208 <line:526:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1bd89e2f780 <line:527:1, line:530:33> line:527:5 invalid ec_GFp_nistp521_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1bd89e2f3a0 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e2f420 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e2f4a0 <line:528:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1bd89e2f518 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e2f5a8 <line:529:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1bd89e2f638 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1bd89e2f6b8 <line:530:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1bd89dd4e90 <line:531:1, line:534:68> line:531:5 invalid ec_GFp_nistp521_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1bd89e2f870 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e2f8f0 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1bd89e2f970 <line:532:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1bd89e2f9e8 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89e2fa78 <line:533:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1bd89e2fb08 <line:534:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1bd89dd4dc8 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1bd89dd50a0 <line:535:1, col:65> col:5 invalid ec_GFp_nistp521_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1bd89dd4f80 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1bd89dd5000 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1bd89dd5200 <line:536:1, col:63> col:5 invalid ec_GFp_nistp521_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1bd89dd5168 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1bd89f039d8 <line:539:1, line:563:75> line:539:6 ec_GFp_nistp_points_make_affine_internal 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
| |-ParmVarDecl 0x1bd89dd52b8 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89dd5338 <col:59, col:65> col:65 point_array 'void *'
| |-ParmVarDecl 0x1bd89dd53b0 <line:540:47, col:54> col:54 felem_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89dd5430 <line:541:47, col:53> col:53 tmp_felems 'void *'
| |-ParmVarDecl 0x1bd89dd55f0 <line:542:47, col:75> col:54 felem_one 'void (*)(void *)'
| |-ParmVarDecl 0x1bd89dd57e8 <line:543:47, line:544:72> line:543:53 felem_is_zero 'int (*)(const void *)'
| |-ParmVarDecl 0x1bd89dd5a88 <line:545:47, line:547:72> line:545:54 felem_assign 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x1bd89dd5c60 <line:548:47, line:550:72> line:548:54 felem_square 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x1bd89f03340 <line:551:47, line:555:70> line:551:54 felem_mul 'void (*)(void *, const void *, const void *)'
| |-ParmVarDecl 0x1bd89f03518 <line:556:47, line:558:69> line:556:54 felem_inv 'void (*)(void *, const void *)'
| `-ParmVarDecl 0x1bd89f036f0 <line:559:47, line:563:74> line:559:54 felem_contract 'void (*)(void *, const void *)'
|-FunctionDecl 0x1bd89f03d28 <line:564:1, line:565:76> line:564:6 ec_GFp_nistp_recode_scalar_bits 'void (unsigned char *, unsigned char *, unsigned char)'
| |-ParmVarDecl 0x1bd89f03b00 <col:38, col:53> col:53 sign 'unsigned char *'
| |-ParmVarDecl 0x1bd89f03b80 <line:565:38, col:53> col:53 digit 'unsigned char *'
| `-ParmVarDecl 0x1bd89f03c00 <col:60, col:74> col:74 in 'unsigned char'
|-FunctionDecl 0x1bd89f03ea8 <line:567:1, col:39> col:5 invalid ec_precompute_mont_data 'int (int *)'
| `-ParmVarDecl 0x1bd89f03e10 <col:29, <invalid sloc>> col:39 invalid 'int *'
|-FunctionDecl 0x1bd89f04000 <line:568:1, col:53> col:5 invalid ec_group_simple_order_bits 'int (const int *)'
| `-ParmVarDecl 0x1bd89f03f68 <col:32, col:48> col:48 invalid group 'const int *'
|-FunctionDecl 0x1bd89f042a8 <line:578:1, line:579:61> line:578:8 invalid ec_key_simple_priv2oct 'size_t (const int *, unsigned char *, size_t)'
| |-ParmVarDecl 0x1bd89f04110 <col:31, col:45> col:45 invalid eckey 'const int *'
| |-ParmVarDecl 0x1bd89f04190 <line:579:31, col:46> col:46 buf 'unsigned char *'
| `-ParmVarDecl 0x1bd89f04208 <col:51, col:58> col:58 len 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89f04518 <line:580:1, col:79> col:5 invalid ec_key_simple_oct2priv 'int (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x1bd89f04378 <col:28, col:36> col:36 invalid eckey 'int *'
| |-ParmVarDecl 0x1bd89f043f8 <col:43, col:64> col:64 buf 'const unsigned char *'
| `-ParmVarDecl 0x1bd89f04470 <col:69, col:76> col:76 len 'size_t':'unsigned long long'
|-FunctionDecl 0x1bd89f04680 <line:581:1, col:45> col:5 invalid ec_key_simple_generate_key 'int (int *)'
| `-ParmVarDecl 0x1bd89f045e8 <col:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x1bd89f047d8 <line:582:1, col:52> col:5 invalid ec_key_simple_generate_public_key 'int (int *)'
| `-ParmVarDecl 0x1bd89f04740 <col:39, col:47> col:47 invalid eckey 'int *'
|-FunctionDecl 0x1bd89f04930 <line:583:1, col:48> col:5 invalid ec_key_simple_check_key 'int (const int *)'
| `-ParmVarDecl 0x1bd89f04898 <col:29, col:43> col:43 invalid eckey 'const int *'
|-RecordDecl 0x1bd89f049d8 <line:587:1, line:612:1> line:587:8 invalid struct ec_key_method_st definition
| |-FieldDecl 0x1bd89f04aa8 <line:588:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x1bd89f04b18 <line:589:5, col:13> col:13 invalid flags 'int'
| |-FieldDecl 0x1bd89f04c30 <line:590:5, col:28> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x1bd89f04d40 <line:591:5, col:31> col:12 finish 'void (*)(int *)'
| |-FieldDecl 0x1bd89f04ee0 <line:592:5, col:48> col:11 copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1bd89f05080 <line:593:5, col:54> col:11 set_group 'int (*)(int *, const int *)'
| |-FieldDecl 0x1bd89f05250 <line:594:5, col:59> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x1bd89f053f0 <line:595:5, col:59> col:11 set_public 'int (*)(int *, const int *)'
| |-FieldDecl 0x1bd89f05508 <line:596:5, col:30> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x1bd89f057b8 <line:597:5, line:598:67> line:597:11 compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| |-FieldDecl 0x1bd89f05db0 <line:599:5, line:601:47> line:599:11 sign 'int (*)(int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-FieldDecl 0x1bd89f06188 <line:602:5, line:603:34> line:602:11 sign_setup 'int (*)(int *, int *, int **, int **)'
| |-FieldDecl 0x1bd89f06598 <line:604:5, <invalid sloc>> col:18 invalid sign_sig 'int *(*)(const unsigned char *, int, const int *, const int *, int *)'
| |-FieldDecl 0x1bd89f06a40 <line:608:5, line:609:74> line:608:11 verify 'int (*)(int, const unsigned char *, int, const unsigned char *, int, int *)'
| `-FieldDecl 0x1bd89f06dd0 <line:610:5, line:611:58> line:610:11 verify_sig 'int (*)(const unsigned char *, int, const int *, int *)'
|-FunctionDecl 0x1bd89f06ed8 <line:616:1, col:34> col:5 invalid ossl_ec_key_gen 'int (int *)'
| `-ParmVarDecl 0x1bd89f06e40 <col:21, col:29> col:29 invalid eckey 'int *'
|-FunctionDecl 0x1bd89f00180 <line:617:1, line:618:70> line:617:5 invalid ossl_ecdh_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x1bd89f06fa0 <col:27, col:43> col:43 pout 'unsigned char **'
| |-ParmVarDecl 0x1bd89f07018 <col:49, col:57> col:57 poutlen 'size_t *'
| |-ParmVarDecl 0x1bd89f07098 <line:618:27, col:43> col:43 invalid pub_key 'const int *'
| `-ParmVarDecl 0x1bd89f000d0 <col:52, col:66> col:66 invalid ecdh 'const int *'
|-FunctionDecl 0x1bd89f00488 <line:619:1, line:620:72> line:619:5 invalid ecdh_simple_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x1bd89f00260 <col:29, col:45> col:45 pout 'unsigned char **'
| |-ParmVarDecl 0x1bd89f002d8 <col:51, col:59> col:59 poutlen 'size_t *'
| |-ParmVarDecl 0x1bd89f00358 <line:620:29, col:45> col:45 invalid pub_key 'const int *'
| `-ParmVarDecl 0x1bd89f003d8 <col:54, col:68> col:68 invalid ecdh 'const int *'
|-RecordDecl 0x1bd89f00548 <line:622:1, line:625:1> line:622:8 invalid struct ECDSA_SIG_st definition
| |-FieldDecl 0x1bd89f00618 <line:623:5, col:13> col:13 invalid r 'int *'
| `-FieldDecl 0x1bd89f00688 <line:624:5, col:13> col:13 invalid s 'int *'
|-FunctionDecl 0x1bd89f00938 <line:627:1, line:628:38> line:627:5 invalid ossl_ecdsa_sign_setup 'int (int *, int *, int **, int **)'
| |-ParmVarDecl 0x1bd89f006f8 <col:27, col:35> col:35 invalid eckey 'int *'
| |-ParmVarDecl 0x1bd89f00778 <col:42, col:50> col:50 invalid ctx_in 'int *'
| |-ParmVarDecl 0x1bd89f00800 <col:58, col:67> col:67 invalid kinvp 'int **'
| `-ParmVarDecl 0x1bd89f00888 <line:628:27, col:36> col:36 invalid rp 'int **'
|-FunctionDecl 0x1bd89f00e60 <line:629:1, line:631:71> line:629:5 invalid ossl_ecdsa_sign 'int (int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89f00a10 <col:21, col:25> col:25 type 'int'
| |-ParmVarDecl 0x1bd89f00a90 <col:31, col:52> col:52 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1bd89f00b10 <col:58, col:62> col:62 dlen 'int'
| |-ParmVarDecl 0x1bd89f00b90 <line:630:21, col:36> col:36 sig 'unsigned char *'
| |-ParmVarDecl 0x1bd89f00c10 <col:41, col:55> col:55 siglen 'unsigned int *'
| |-ParmVarDecl 0x1bd89f00c90 <line:631:21, col:35> col:35 invalid kinv 'const int *'
| |-ParmVarDecl 0x1bd89f00d10 <col:41, col:55> col:55 invalid r 'const int *'
| `-ParmVarDecl 0x1bd89f00d90 <col:58, col:66> col:66 invalid eckey 'int *'
|-FunctionDecl 0x1bd89e43190 <line:632:1, line:634:45> line:632:12 invalid ossl_ecdsa_sign_sig 'int *(const unsigned char *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x1bd89f00f58 <col:32, col:53> col:53 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1bd89f00fd8 <col:59, col:63> col:63 dgst_len 'int'
| |-ParmVarDecl 0x1bd89f01058 <line:633:32, col:46> col:46 invalid in_kinv 'const int *'
| |-ParmVarDecl 0x1bd89e43058 <col:55, col:69> col:69 invalid in_r 'const int *'
| `-ParmVarDecl 0x1bd89e430d8 <line:634:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x1bd89e435b0 <line:635:1, line:636:78> line:635:5 invalid ossl_ecdsa_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'
| |-ParmVarDecl 0x1bd89e43270 <col:23, col:27> col:27 type 'int'
| |-ParmVarDecl 0x1bd89e432f0 <col:33, col:54> col:54 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1bd89e43370 <col:60, col:64> col:64 dgst_len 'int'
| |-ParmVarDecl 0x1bd89e433f0 <line:636:23, col:44> col:44 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x1bd89e43470 <col:52, col:56> col:56 sig_len 'int'
| `-ParmVarDecl 0x1bd89e434f0 <col:65, col:73> col:73 invalid eckey 'int *'
|-FunctionDecl 0x1bd89e438c8 <line:637:1, line:638:62> line:637:5 invalid ossl_ecdsa_verify_sig 'int (const unsigned char *, int, const int *, int *)'
| |-ParmVarDecl 0x1bd89e43698 <col:27, col:48> col:48 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1bd89e43718 <col:54, col:58> col:58 dgst_len 'int'
| |-ParmVarDecl 0x1bd89e43798 <line:638:27, col:44> col:44 invalid sig 'const int *'
| `-ParmVarDecl 0x1bd89e43818 <col:49, col:57> col:57 invalid eckey 'int *'
|-FunctionDecl 0x1bd89e43da0 <line:640:1, line:641:47> line:640:5 invalid X25519 'int (int *, const int *, const int *)'
| |-ParmVarDecl 0x1bd89e43a60 <col:12, <invalid sloc>> col:20 invalid out_shared_key 'int *':'int *'
| |-ParmVarDecl 0x1bd89e43ba0 <col:40, <invalid sloc>> col:54 invalid private_key 'const int *':'const int *'
| `-ParmVarDecl 0x1bd89e43c70 <line:641:12, <invalid sloc>> col:26 invalid peer_public_value 'const int *':'const int *'
|-FunctionDecl 0x1bd89e440a8 <line:642:1, line:643:62> line:642:6 invalid X25519_public_from_private 'void (int *, const int *)'
| |-ParmVarDecl 0x1bd89e43ec0 <col:33, <invalid sloc>> col:41 invalid out_public_value 'int *':'int *'
| `-ParmVarDecl 0x1bd89e43f90 <line:643:33, <invalid sloc>> col:47 invalid private_key 'const int *':'const int *'
|-FunctionDecl 0x1bd89e44318 <line:645:1, col:79> col:5 invalid ec_point_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1bd89e44170 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89e441f0 <col:55, col:65> col:65 invalid p 'int *'
| `-ParmVarDecl 0x1bd89e44270 <col:68, col:76> col:76 invalid ctx 'int *'
|-RecordDecl 0x1bd89e443d0 prev 0x1bd89e1ac38 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:35:1, line:47:1> line:35:8 invalid struct ec_pre_comp_st definition
| |-FieldDecl 0x1bd89e44468 <line:36:5, col:21> col:21 invalid group 'const int *'
| |-FieldDecl 0x1bd89e444d0 <line:37:5, col:12> col:12 referenced blocksize 'size_t':'unsigned long long'
| |-FieldDecl 0x1bd89e44538 <line:38:5, col:12> col:12 referenced numblocks 'size_t':'unsigned long long'
| |-FieldDecl 0x1bd89e445a0 <line:40:5, col:12> col:12 referenced w 'size_t':'unsigned long long'
| |-FieldDecl 0x1bd89e44618 <line:41:5, col:16> col:16 invalid points 'int **'
| |-FieldDecl 0x1bd89e44680 <line:44:5, col:12> col:12 referenced num 'size_t':'unsigned long long'
| |-FieldDecl 0x1bd89e446f0 <line:45:5, col:9> col:9 referenced references 'int'
| `-FieldDecl 0x1bd89e44760 <line:46:5, col:20> col:20 invalid lock 'int *'
|-FunctionDecl 0x1bd89e448c8 <line:49:1, line:74:1> line:49:21 invalid ec_pre_comp_new 'EC_PRE_COMP *(const int *)' static
| |-ParmVarDecl 0x1bd89e447d0 <col:37, col:53> col:53 invalid group 'const int *'
| `-CompoundStmt 0x1bd89eea7a0 <line:50:1, line:74:1>
|   |-DeclStmt 0x1bd89e44aa0 <line:51:5, col:28>
|   | `-VarDecl 0x1bd89e44998 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:51:18 used ret 'EC_PRE_COMP *' cinit
|   |   `-ImplicitCastExpr 0x1bd89e44a88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x1bd89e44a68 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1bd89e44a40 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1bd89e44a00 <col:26> 'int' 0
|   |-IfStmt 0x1bd89e44b80 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:53:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-OpaqueValueExpr 0x1bd89e44b68 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1bd89e44b58 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:54:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |   `-ImplicitCastExpr 0x1bd89e44b40 <col:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x1bd89e44b20 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1bd89e44af8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1bd89e44ab8 <col:26> 'int' 0
|   |-BinaryOperator 0x1bd89e44e20 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:56:5, col:38> 'EC_PRE_COMP *' '='
|   | |-DeclRefExpr 0x1bd89e44b98 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1bd89e44998 'ret' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1bd89e44e08 <col:11, col:38> 'EC_PRE_COMP *' <IntegralToPointer>
|   |   `-CallExpr 0x1bd89e44de0 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x1bd89e44dc8 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1bd89e44ce8 <col:11> 'int ()' Function 0x1bd89e44c20 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x1bd89e44d78 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x1bd89e44d58 <col:32, col:37> 'EC_PRE_COMP':'struct ec_pre_comp_st' lvalue
|   |         `-UnaryOperator 0x1bd89e44d40 <col:33, col:34> 'EC_PRE_COMP':'struct ec_pre_comp_st' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x1bd89e44d28 <col:34> 'EC_PRE_COMP *' <LValueToRValue>
|   |             `-DeclRefExpr 0x1bd89e44d08 <col:34> 'EC_PRE_COMP *' lvalue Var 0x1bd89e44998 'ret' 'EC_PRE_COMP *' non_odr_use_unevaluated
|   |-IfStmt 0x1bd89ee9fe0 <line:57:5, line:60:5>
|   | |-BinaryOperator 0x1bd89e44f18 <line:57:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1bd89e44ee8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:57:9> 'EC_PRE_COMP *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89e44e40 <col:9> 'EC_PRE_COMP *' lvalue Var 0x1bd89e44998 'ret' 'EC_PRE_COMP *'
|   | | `-ImplicitCastExpr 0x1bd89e44f00 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <BitCast>
|   | |   `-ParenExpr 0x1bd89e44ec8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1bd89e44ea0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1bd89e44e60 <col:26> 'int' 0
|   | `-CompoundStmt 0x1bd89ee9fc8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:57:22, line:60:5>
|   |   `-ReturnStmt 0x1bd89ee9fb8 <line:59:9, col:16>
|   |     `-ImplicitCastExpr 0x1bd89ee9fa0 <col:16> 'EC_PRE_COMP *' <LValueToRValue>
|   |       `-DeclRefExpr 0x1bd89ee9f80 <col:16> 'EC_PRE_COMP *' lvalue Var 0x1bd89e44998 'ret' 'EC_PRE_COMP *'
|   |-BinaryOperator 0x1bd89eea0d8 <line:63:5, col:22> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1bd89eea068 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->blocksize 0x1bd89e444d0
|   | | `-ImplicitCastExpr 0x1bd89eea050 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bd89eea030 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1bd89e44998 'ret' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1bd89eea0c0 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1bd89eea098 <col:22> 'int' 8
|   |-BinaryOperator 0x1bd89eea1a0 <line:64:5, col:14> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1bd89eea130 <col:5, col:10> 'size_t':'unsigned long long' lvalue ->w 0x1bd89e445a0
|   | | `-ImplicitCastExpr 0x1bd89eea118 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bd89eea0f8 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1bd89e44998 'ret' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1bd89eea188 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1bd89eea160 <col:14> 'int' 4
|   |-BinaryOperator 0x1bd89eea250 <line:65:5, col:23> 'int' '='
|   | |-MemberExpr 0x1bd89eea1f8 <col:5, col:10> 'int' lvalue ->references 0x1bd89e446f0
|   | | `-ImplicitCastExpr 0x1bd89eea1e0 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bd89eea1c0 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1bd89e44998 'ret' 'EC_PRE_COMP *'
|   | `-IntegerLiteral 0x1bd89eea228 <col:23> 'int' 1
|   |-IfStmt 0x1bd89eea740 <line:68:5, line:72:5>
|   | |-OpaqueValueExpr 0x1bd89eea728 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89eea708 <line:68:28, line:72:5>
|   |   |-CallExpr 0x1bd89eea618 <line:70:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1bd89eea600 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1bd89eea5c0 <col:9> 'int ()' Function 0x1bd89eea4f8 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1bd89eea640 <col:22> 'EC_PRE_COMP *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1bd89eea5e0 <col:22> 'EC_PRE_COMP *' lvalue Var 0x1bd89e44998 'ret' 'EC_PRE_COMP *'
|   |   `-ReturnStmt 0x1bd89eea6f8 <line:71:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   |     `-ImplicitCastExpr 0x1bd89eea6e0 <col:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |       `-ParenExpr 0x1bd89eea6c0 <col:17, col:27> 'void *'
|   |         `-CStyleCastExpr 0x1bd89eea698 <col:18, col:26> 'void *' <NullToPointer>
|   |           `-IntegerLiteral 0x1bd89eea658 <col:26> 'int' 0
|   `-ReturnStmt 0x1bd89eea790 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:73:5, col:12>
|     `-ImplicitCastExpr 0x1bd89eea778 <col:12> 'EC_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x1bd89eea758 <col:12> 'EC_PRE_COMP *' lvalue Var 0x1bd89e44998 'ret' 'EC_PRE_COMP *'
|-FunctionDecl 0x1bd89eea8b0 prev 0x1bd89e219e8 <line:76:1, line:82:1> line:76:14 EC_ec_pre_comp_dup 'EC_PRE_COMP *(EC_PRE_COMP *)'
| |-ParmVarDecl 0x1bd89eea808 <col:33, col:46> col:46 used pre 'EC_PRE_COMP *'
| `-CompoundStmt 0x1bd89eead70 <line:77:1, line:82:1>
|   |-DeclStmt 0x1bd89eea9d8 <line:78:5, col:10>
|   | `-VarDecl 0x1bd89eea970 <col:5, col:9> col:9 used i 'int'
|   `-ReturnStmt 0x1bd89eead60 <line:81:5, col:12>
|     `-ImplicitCastExpr 0x1bd89eead48 <col:12> 'EC_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x1bd89eead28 <col:12> 'EC_PRE_COMP *' lvalue ParmVar 0x1bd89eea808 'pre' 'EC_PRE_COMP *'
|-FunctionDecl 0x1bd89eeae48 prev 0x1bd89e1c3b8 <line:84:1, line:106:1> line:84:6 used EC_ec_pre_comp_free 'void (EC_PRE_COMP *)'
| |-ParmVarDecl 0x1bd89eeada0 <col:26, col:39> col:39 used pre 'EC_PRE_COMP *'
| `-CompoundStmt 0x1bd89eebb90 <line:85:1, line:106:1>
|   |-DeclStmt 0x1bd89eeaf70 <line:86:5, col:10>
|   | `-VarDecl 0x1bd89eeaf08 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x1bd89eeb090 <line:88:5, line:89:9>
|   | |-BinaryOperator 0x1bd89eeb060 <line:88:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1bd89eeb030 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:88:9> 'EC_PRE_COMP *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89eeaf88 <col:9> 'EC_PRE_COMP *' lvalue ParmVar 0x1bd89eeada0 'pre' 'EC_PRE_COMP *'
|   | | `-ImplicitCastExpr 0x1bd89eeb048 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <BitCast>
|   | |   `-ParenExpr 0x1bd89eeb010 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1bd89eeafe8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1bd89eeafa8 <col:26> 'int' 0
|   | `-ReturnStmt 0x1bd89eeb080 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:89:9>
|   |-CallExpr 0x1bd89eeb3b0 <line:92:5, col:33> 'int'
|   | |-ImplicitCastExpr 0x1bd89eeb398 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1bd89eeb300 <col:5> 'int ()' Function 0x1bd89eeb238 'REF_PRINT_COUNT' 'int ()'
|   | |-ImplicitCastExpr 0x1bd89eeb3e0 <col:21> 'char *' <ArrayToPointerDecay>
|   | | `-StringLiteral 0x1bd89eeb358 <col:21> 'char [6]' lvalue "EC_ec"
|   | `-ImplicitCastExpr 0x1bd89eeb3f8 <col:30> 'EC_PRE_COMP *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bd89eeb378 <col:30> 'EC_PRE_COMP *' lvalue ParmVar 0x1bd89eeada0 'pre' 'EC_PRE_COMP *'
|   |-IfStmt 0x1bd89eeb4a0 <line:93:5, line:94:9>
|   | |-BinaryOperator 0x1bd89eeb470 <line:93:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x1bd89eeb458 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89eeb410 <col:9> 'int' lvalue Var 0x1bd89eeaf08 'i' 'int'
|   | | `-IntegerLiteral 0x1bd89eeb430 <col:13> 'int' 0
|   | `-ReturnStmt 0x1bd89eeb490 <line:94:9>
|   |-CallExpr 0x1bd89eeb660 <line:95:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x1bd89eeb648 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1bd89eeb5a8 <col:5> 'int ()' Function 0x1bd89eeb4e0 'REF_ASSERT_ISNT' 'int ()'
|   | `-BinaryOperator 0x1bd89eeb628 <col:21, col:25> 'int' '<'
|   |   |-ImplicitCastExpr 0x1bd89eeb610 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1bd89eeb5c8 <col:21> 'int' lvalue Var 0x1bd89eeaf08 'i' 'int'
|   |   `-IntegerLiteral 0x1bd89eeb5e8 <col:25> 'int' 0
|   |-IfStmt 0x1bd89eeb998 <line:97:5, line:103:5>
|   | |-OpaqueValueExpr 0x1bd89eeb980 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89eeb970 <line:97:30, line:103:5>
|   `-CallExpr 0x1bd89eebb50 <line:105:5, col:21> 'int'
|     |-ImplicitCastExpr 0x1bd89eebb38 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x1bd89eebaf8 <col:5> 'int ()' Function 0x1bd89eea4f8 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x1bd89eebb78 <col:18> 'EC_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x1bd89eebb18 <col:18> 'EC_PRE_COMP *' lvalue ParmVar 0x1bd89eeada0 'pre' 'EC_PRE_COMP *'
|-FunctionDecl 0x1bd89eebea8 <line:135:1, line:333:1> line:135:12 invalid ec_mul_consttime 'int (const int *, int *, const int *, const int *, int *)' static
| |-ParmVarDecl 0x1bd89eebbf0 <col:29, col:45> col:45 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89eebc70 <col:52, col:62> col:62 invalid r 'int *'
| |-ParmVarDecl 0x1bd89eebcf0 <line:136:29, col:43> col:43 invalid scalar 'const int *'
| |-ParmVarDecl 0x1bd89eebd70 <col:51, col:67> col:67 invalid point 'const int *'
| |-ParmVarDecl 0x1bd89eebdf0 <line:137:29, col:37> col:37 invalid ctx 'int *'
| `-CompoundStmt 0x1bd89eef9a0 <line:138:1, line:333:1>
|   |-DeclStmt 0x1bd89eec2e8 <line:139:5, col:61>
|   | |-VarDecl 0x1bd89eebfc8 <col:5, col:9> col:9 used i 'int'
|   | |-VarDecl 0x1bd89eec048 <col:5, col:12> col:12 used cardinality_bits 'int'
|   | |-VarDecl 0x1bd89eec0c8 <col:5, col:30> col:30 used group_top 'int'
|   | |-VarDecl 0x1bd89eec148 <col:5, col:41> col:41 used kbit 'int'
|   | |-VarDecl 0x1bd89eec1c8 <col:5, col:47> col:47 used pbit 'int'
|   | `-VarDecl 0x1bd89eec248 <col:5, col:53> col:53 used Z_is_one 'int'
|   |-DeclStmt 0x1bd89eec650 <line:145:5, col:16>
|   | `-VarDecl 0x1bd89eec5c0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1bd89eec628 <col:15> 'int' 0
|   |-IfStmt 0x1bd89eec910 <line:147:5, line:148:16>
|   | |-OpaqueValueExpr 0x1bd89eec8f8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1bd89eec8e8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1bd89eec8c0 <col:16> 'int' 0
|   |-IfStmt 0x1bd89eecc50 <line:153:5, line:154:14>
|   | |-OpaqueValueExpr 0x1bd89eecc38 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89eecc20 <col:9, col:14> 'err' 0x1bd89eecbd0
|   |-IfStmt 0x1bd89eecef8 <line:156:5, line:162:5> has_else
|   | |-OpaqueValueExpr 0x1bd89eecee0 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x1bd89eece48 <line:156:24, line:159:5>
|   | | `-IfStmt 0x1bd89eece30 <line:157:9, line:158:18>
|   | |   |-OpaqueValueExpr 0x1bd89eece18 <<invalid sloc>> '_Bool'
|   | |   `-GotoStmt 0x1bd89eece00 <col:13, col:18> 'err' 0x1bd89eecbd0
|   | `-CompoundStmt 0x1bd89eecec8 <line:159:12, line:162:5>
|   |   `-IfStmt 0x1bd89eeceb0 <line:160:9, line:161:18>
|   |     |-OpaqueValueExpr 0x1bd89eece98 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1bd89eece80 <col:13, col:18> 'err' 0x1bd89eecbd0
|   |-DoStmt 0x1bd89eed0a8 <line:108:41, line:112:10>
|   | |-CompoundStmt 0x1bd89eed070 <line:108:44, line:111:36>
|   | `-IntegerLiteral 0x1bd89eed080 <line:112:9> 'int' 0
|   |-IfStmt 0x1bd89eed3e0 <line:169:5, line:170:14>
|   | |-OpaqueValueExpr 0x1bd89eed3c8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89eed3b0 <col:9, col:14> 'err' 0x1bd89eecbd0
|   |-IfStmt 0x1bd89eed9f8 <line:180:5, line:182:14>
|   | |-OpaqueValueExpr 0x1bd89eed9e0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89eed9c8 <col:9, col:14> 'err' 0x1bd89eecbd0
|   |-IfStmt 0x1bd89eedb50 <line:184:5, line:185:14>
|   | |-OpaqueValueExpr 0x1bd89eedb38 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89eedb20 <col:9, col:14> 'err' 0x1bd89eecbd0
|   |-IfStmt 0x1bd89eede60 <line:189:5, line:196:5>
|   | |-OpaqueValueExpr 0x1bd89eede48 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89eede30 <line:189:69, line:196:5>
|   |   `-IfStmt 0x1bd89eede18 <line:194:9, line:195:18>
|   |     |-OpaqueValueExpr 0x1bd89eede00 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1bd89eedde8 <col:13, col:18> 'err' 0x1bd89eecbd0
|   |-IfStmt 0x1bd89eedfd0 <line:198:5, line:199:14>
|   | |-OpaqueValueExpr 0x1bd89eedfb8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89eedfa0 <col:9, col:14> 'err' 0x1bd89eecbd0
|   |-IfStmt 0x1bd89eee058 <line:201:5, line:202:14>
|   | |-OpaqueValueExpr 0x1bd89eee040 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89eee028 <col:9, col:14> 'err' 0x1bd89eecbd0
|   |-IfStmt 0x1bd89eee8a8 <line:211:5, line:217:14>
|   | |-OpaqueValueExpr 0x1bd89eee890 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89eee878 <col:9, col:14> 'err' 0x1bd89eecbd0
|   |-IfStmt 0x1bd89eee8f0 <line:227:5, line:228:14>
|   | |-OpaqueValueExpr 0x1bd89eee8d8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89eee8c0 <col:9, col:14> 'err' 0x1bd89eecbd0
|   |-IfStmt 0x1bd89eee958 <line:231:5, line:232:14>
|   | |-OpaqueValueExpr 0x1bd89eee940 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89eee928 <col:9, col:14> 'err' 0x1bd89eecbd0
|   |-DoStmt 0x1bd89eeea08 <line:108:41, line:112:10>
|   | |-CompoundStmt 0x1bd89eee9d0 <line:108:44, line:111:36>
|   | `-IntegerLiteral 0x1bd89eee9e0 <line:112:9> 'int' 0
|   |-IfStmt 0x1bd89eeeb68 <line:236:5, line:237:14>
|   | |-OpaqueValueExpr 0x1bd89eeeb50 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89eeeb38 <col:9, col:14> 'err' 0x1bd89eecbd0
|   |-BinaryOperator 0x1bd89eeebe0 <line:239:5, col:12> 'int' '='
|   | |-DeclRefExpr 0x1bd89eeeb80 <col:5> 'int' lvalue Var 0x1bd89eec1c8 'pbit' 'int'
|   | `-IntegerLiteral 0x1bd89eeebb8 <col:12> 'int' 0
|   |-ForStmt 0x1bd89eef2f8 <line:308:5, line:320:5>
|   | |-BinaryOperator 0x1bd89eeecb8 <line:308:10, col:33> 'int' '='
|   | | |-DeclRefExpr 0x1bd89eeec00 <col:10> 'int' lvalue Var 0x1bd89eebfc8 'i' 'int'
|   | | `-BinaryOperator 0x1bd89eeec98 <col:14, col:33> 'int' '-'
|   | |   |-ImplicitCastExpr 0x1bd89eeec80 <col:14> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1bd89eeec38 <col:14> 'int' lvalue Var 0x1bd89eec048 'cardinality_bits' 'int'
|   | |   `-IntegerLiteral 0x1bd89eeec58 <col:33> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1bd89eeed38 <col:36, col:41> 'int' '>='
|   | | |-ImplicitCastExpr 0x1bd89eeed20 <col:36> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89eeecd8 <col:36> 'int' lvalue Var 0x1bd89eebfc8 'i' 'int'
|   | | `-IntegerLiteral 0x1bd89eeecf8 <col:41> 'int' 0
|   | |-UnaryOperator 0x1bd89eeed78 <col:44, col:45> 'int' postfix '--'
|   | | `-DeclRefExpr 0x1bd89eeed58 <col:44> 'int' lvalue Var 0x1bd89eebfc8 'i' 'int'
|   | `-CompoundStmt 0x1bd89eef2c8 <col:49, line:320:5>
|   |   |-DoStmt 0x1bd89eef060 <line:241:39, line:248:10>
|   |   | |-CompoundStmt 0x1bd89eef028 <line:241:42, line:247:52>
|   |   | `-IntegerLiteral 0x1bd89eef038 <line:248:9> 'int' 0
|   |   |-IfStmt 0x1bd89eef1c0 <line:311:9, line:312:18>
|   |   | |-OpaqueValueExpr 0x1bd89eef1a8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1bd89eef190 <col:13, col:18> 'err' 0x1bd89eecbd0
|   |   |-IfStmt 0x1bd89eef228 <line:313:9, line:314:18>
|   |   | |-OpaqueValueExpr 0x1bd89eef210 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1bd89eef1f8 <col:13, col:18> 'err' 0x1bd89eecbd0
|   |   `-CompoundAssignOperator 0x1bd89eef298 <line:319:9, col:17> 'int' '^=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1bd89eef240 <col:9> 'int' lvalue Var 0x1bd89eec1c8 'pbit' 'int'
|   |     `-ImplicitCastExpr 0x1bd89eef280 <col:17> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1bd89eef260 <col:17> 'int' lvalue Var 0x1bd89eec148 'kbit' 'int'
|   |-DoStmt 0x1bd89eef568 <line:241:39, line:248:10>
|   | |-CompoundStmt 0x1bd89eef530 <line:241:42, line:247:52>
|   | `-IntegerLiteral 0x1bd89eef540 <line:248:9> 'int' 0
|   |-BinaryOperator 0x1bd89eef5e8 <line:325:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1bd89eef588 <col:5> 'int' lvalue Var 0x1bd89eec5c0 'ret' 'int'
|   | `-IntegerLiteral 0x1bd89eef5c0 <col:11> 'int' 1
|   |-LabelStmt 0x1bd89eef720 <line:327:2, col:5> 'err'
|   | `-NullStmt 0x1bd89eef718 <col:5>
|   `-ReturnStmt 0x1bd89eef990 <line:332:5, col:12>
|     `-ImplicitCastExpr 0x1bd89eef978 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1bd89eef958 <col:12> 'int' lvalue Var 0x1bd89eec5c0 'ret' 'int'
|-FunctionDecl 0x1bd89eefe60 <line:358:1, line:763:1> line:358:5 invalid ec_wNAF_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1bd89eefa80 <col:17, col:33> col:33 invalid group 'const int *'
| |-ParmVarDecl 0x1bd89eefb00 <col:40, col:50> col:50 invalid r 'int *'
| |-ParmVarDecl 0x1bd89eefb80 <col:53, col:67> col:67 invalid scalar 'const int *'
| |-ParmVarDecl 0x1bd89eefbf8 <line:359:17, col:24> col:24 used num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1bd89eefc88 <col:29, <invalid sloc>> col:45 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1bd89eefd18 <col:55, <invalid sloc>> col:69 invalid scalars 'const int **':'const int **'
| |-ParmVarDecl 0x1bd89eefd98 <line:360:17, col:25> col:25 invalid ctx 'int *'
| `-CompoundStmt 0x1bd89efbaa8 <line:361:1, line:763:1>
|   |-DeclStmt 0x1bd89ef00f8 <line:363:5, col:37>
|   | `-VarDecl 0x1bd89ef0008 <col:5, col:21> col:21 invalid generator 'const int *'
|   |-DeclStmt 0x1bd89ef0210 <line:365:5, col:20>
|   | `-VarDecl 0x1bd89ef01a8 <col:5, col:12> col:12 used totalnum 'size_t':'unsigned long long'
|   |-DeclStmt 0x1bd89ef03b0 <line:366:5, col:40>
|   | |-VarDecl 0x1bd89ef0238 <col:5, col:24> col:12 used blocksize 'size_t':'unsigned long long' cinit
|   | | `-ImplicitCastExpr 0x1bd89ef02c8 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1bd89ef02a0 <col:24> 'int' 0
|   | `-VarDecl 0x1bd89ef02f0 <col:5, col:39> col:27 used numblocks 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1bd89ef0380 <col:39> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1bd89ef0358 <col:39> 'int' 0
|   |-DeclStmt 0x1bd89ef0480 <line:367:5, col:36>
|   | `-VarDecl 0x1bd89ef03d8 <col:5, col:35> col:12 used pre_points_per_block 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1bd89ef0468 <col:35> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1bd89ef0440 <col:35> 'int' 0
|   |-DeclStmt 0x1bd89ef05a0 <line:368:5, col:16>
|   | |-VarDecl 0x1bd89ef04a8 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   | `-VarDecl 0x1bd89ef0520 <col:5, col:15> col:15 used j 'size_t':'unsigned long long'
|   |-DeclStmt 0x1bd89ef0638 <line:369:5, col:10>
|   | `-VarDecl 0x1bd89ef05d0 <col:5, col:9> col:9 used k 'int'
|   |-DeclStmt 0x1bd89ef06f8 <line:370:5, col:26>
|   | `-VarDecl 0x1bd89ef0668 <col:5, col:25> col:9 used r_is_inverted 'int' cinit
|   |   `-IntegerLiteral 0x1bd89ef06d0 <col:25> 'int' 0
|   |-DeclStmt 0x1bd89ef07b8 <line:371:5, col:29>
|   | `-VarDecl 0x1bd89ef0728 <col:5, col:28> col:9 used r_is_at_infinity 'int' cinit
|   |   `-IntegerLiteral 0x1bd89ef0790 <col:28> 'int' 1
|   |-DeclStmt 0x1bd89ef08e8 <line:372:5, col:25>
|   | `-VarDecl 0x1bd89ef07e0 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:372:13 used wsize 'size_t *' cinit
|   |   `-ImplicitCastExpr 0x1bd89ef08d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'size_t *' <NullToPointer>
|   |     `-ParenExpr 0x1bd89ef08b0 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1bd89ef0888 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1bd89ef0848 <col:26> 'int' 0
|   |-DeclStmt 0x1bd89ef0a80 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:373:5, col:30>
|   | `-VarDecl 0x1bd89ef0978 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:373:19 used wNAF 'signed char **' cinit
|   |   `-ImplicitCastExpr 0x1bd89ef0a68 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char **' <NullToPointer>
|   |     `-ParenExpr 0x1bd89ef0a48 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1bd89ef0a20 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1bd89ef09e0 <col:26> 'int' 0
|   |-DeclStmt 0x1bd89ef0bb0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:374:5, col:28>
|   | `-VarDecl 0x1bd89ef0aa8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:374:13 used wNAF_len 'size_t *' cinit
|   |   `-ImplicitCastExpr 0x1bd89ef0b98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'size_t *' <NullToPointer>
|   |     `-ParenExpr 0x1bd89ef0b78 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1bd89ef0b50 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1bd89ef0b10 <col:26> 'int' 0
|   |-DeclStmt 0x1bd89ef0c80 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:375:5, col:23>
|   | `-VarDecl 0x1bd89ef0bd8 <col:5, col:22> col:12 used max_len 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x1bd89ef0c68 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x1bd89ef0c40 <col:22> 'int' 0
|   |-DeclStmt 0x1bd89ef0d10 <line:376:5, col:19>
|   | `-VarDecl 0x1bd89ef0ca8 <col:5, col:12> col:12 used num_val 'size_t':'unsigned long long'
|   |-DeclStmt 0x1bd89ef0fb0 <line:381:5, col:39>
|   | `-VarDecl 0x1bd89ef0ea8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:381:24 used pre_comp 'const EC_PRE_COMP *' cinit
|   |   `-ImplicitCastExpr 0x1bd89ef0f98 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const EC_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x1bd89ef0f78 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1bd89ef0f50 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1bd89ef0f10 <col:26> 'int' 0
|   |-DeclStmt 0x1bd89ef1070 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:382:5, col:23>
|   | `-VarDecl 0x1bd89ef0fe0 <col:5, col:22> col:9 used num_scalar 'int' cinit
|   |   `-IntegerLiteral 0x1bd89ef1048 <col:22> 'int' 0
|   |-DeclStmt 0x1bd89ef1130 <line:385:5, col:16>
|   | `-VarDecl 0x1bd89ef10a0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1bd89ef1108 <col:15> 'int' 0
|   |-IfStmt 0x1bd89ef11d0 <line:387:5, line:390:5>
|   | |-OpaqueValueExpr 0x1bd89ef11b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89ef11a0 <line:387:40, line:390:5>
|   |   `-ReturnStmt 0x1bd89ef1190 <line:389:9, col:16>
|   |     `-IntegerLiteral 0x1bd89ef1168 <col:16> 'int' 0
|   |-IfStmt 0x1bd89ef1478 <line:392:5, line:394:5>
|   | |-OpaqueValueExpr 0x1bd89ef1460 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89ef1450 <line:392:41, line:394:5>
|   |-IfStmt 0x1bd89ef19d0 <line:396:5, line:422:5>
|   | |-OpaqueValueExpr 0x1bd89ef19b8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89ef1998 <line:396:68, line:422:5>
|   |   |-IfStmt 0x1bd89ef17b0 <line:401:9, line:411:9>
|   |   | |-OpaqueValueExpr 0x1bd89ef1798 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1bd89ef1788 <line:401:45, line:411:9>
|   |   `-IfStmt 0x1bd89ef1980 <line:412:9, line:421:9>
|   |     |-OpaqueValueExpr 0x1bd89ef1968 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1bd89ef1958 <line:412:45, line:421:9>
|   |-ForStmt 0x1bd89ef1c20 <line:424:5, line:429:5>
|   | |-BinaryOperator 0x1bd89ef1a60 <line:424:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1bd89ef19e8 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1bd89ef1a48 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1bd89ef1a20 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1bd89ef1af0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1bd89ef1ac0 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89ef1a80 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1bd89ef1ad8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bd89ef1aa0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x1bd89ef1b30 <col:26, col:27> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1bd89ef1b10 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1bd89ef1c08 <col:31, line:429:5>
|   |   `-IfStmt 0x1bd89ef1bf0 <line:425:9, line:428:9>
|   |     |-OpaqueValueExpr 0x1bd89ef1bd8 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1bd89ef1bc0 <line:425:52, line:428:9>
|   |       `-ReturnStmt 0x1bd89ef1bb0 <line:427:13, col:20>
|   |         `-IntegerLiteral 0x1bd89ef1b88 <col:20> 'int' 0
|   |-IfStmt 0x1bd89ef1f78 <line:431:5, line:435:5>
|   | |-OpaqueValueExpr 0x1bd89ef1f60 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89ef1f48 <line:431:22, line:435:5>
|   |   `-IfStmt 0x1bd89ef1f30 <line:433:9, line:434:18>
|   |     |-OpaqueValueExpr 0x1bd89ef1f18 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1bd89ef1f00 <col:13, col:18> 'err' 0x1bd89ef1eb0
|   |-IfStmt 0x1bd89ef2e98 <line:437:5, line:478:5>
|   | |-OpaqueValueExpr 0x1bd89ef2e80 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89ef2e60 <line:437:25, line:478:5>
|   |   |-IfStmt 0x1bd89ef2228 <line:439:9, line:442:9>
|   |   | |-OpaqueValueExpr 0x1bd89ef2210 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x1bd89ef21f8 <line:439:32, line:442:9>
|   |   |   `-GotoStmt 0x1bd89ef21e0 <line:441:13, col:18> 'err' 0x1bd89ef1eb0
|   |   `-IfStmt 0x1bd89ef2e38 <line:447:9, line:477:9> has_else
|   |     |-OpaqueValueExpr 0x1bd89ef2e20 <<invalid sloc>> '_Bool'
|   |     |-CompoundStmt 0x1bd89ef2be8 <line:449:21, line:471:9>
|   |     | |-BinaryOperator 0x1bd89ef25a0 <line:450:13, col:35> 'size_t':'unsigned long long' '='
|   |     | | |-DeclRefExpr 0x1bd89ef24e8 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0238 'blocksize' 'size_t':'unsigned long long'
|   |     | | `-ImplicitCastExpr 0x1bd89ef2588 <col:25, col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |   `-MemberExpr 0x1bd89ef2558 <col:25, col:35> 'const size_t':'const unsigned long long' lvalue ->blocksize 0x1bd89e444d0
|   |     | |     `-ImplicitCastExpr 0x1bd89ef2540 <col:25> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | |       `-DeclRefExpr 0x1bd89ef2520 <col:25> 'const EC_PRE_COMP *' lvalue Var 0x1bd89ef0ea8 'pre_comp' 'const EC_PRE_COMP *'
|   |     | |-IfStmt 0x1bd89ef27f8 <line:461:13, line:462:39>
|   |     | | |-BinaryOperator 0x1bd89ef2718 <line:461:17, col:39> 'int' '>'
|   |     | | | |-ImplicitCastExpr 0x1bd89ef26e8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | | | `-DeclRefExpr 0x1bd89ef2660 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef02f0 'numblocks' 'size_t':'unsigned long long'
|   |     | | | `-ImplicitCastExpr 0x1bd89ef2700 <col:29, col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | |   `-MemberExpr 0x1bd89ef26b8 <col:29, col:39> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x1bd89e44538
|   |     | | |     `-ImplicitCastExpr 0x1bd89ef26a0 <col:29> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | | |       `-DeclRefExpr 0x1bd89ef2680 <col:29> 'const EC_PRE_COMP *' lvalue Var 0x1bd89ef0ea8 'pre_comp' 'const EC_PRE_COMP *'
|   |     | | `-BinaryOperator 0x1bd89ef27d8 <line:462:17, col:39> 'size_t':'unsigned long long' '='
|   |     | |   |-DeclRefExpr 0x1bd89ef2738 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef02f0 'numblocks' 'size_t':'unsigned long long'
|   |     | |   `-ImplicitCastExpr 0x1bd89ef27c0 <col:29, col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     `-MemberExpr 0x1bd89ef2790 <col:29, col:39> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x1bd89e44538
|   |     | |       `-ImplicitCastExpr 0x1bd89ef2778 <col:29> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | |         `-DeclRefExpr 0x1bd89ef2758 <col:29> 'const EC_PRE_COMP *' lvalue Var 0x1bd89ef0ea8 'pre_comp' 'const EC_PRE_COMP *'
|   |     | |-BinaryOperator 0x1bd89ef29c8 <line:464:13, col:65> 'size_t':'unsigned long long' '='
|   |     | | |-DeclRefExpr 0x1bd89ef2810 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef03d8 'pre_points_per_block' 'size_t':'unsigned long long'
|   |     | | `-BinaryOperator 0x1bd89ef29a8 <col:36, col:65> 'size_t':'unsigned long long' '<<'
|   |     | |   |-CStyleCastExpr 0x1bd89ef2880 <col:36, col:44> 'size_t':'unsigned long long' <IntegralCast>
|   |     | |   | `-IntegerLiteral 0x1bd89ef2848 <col:44> 'int' 1
|   |     | |   `-ParenExpr 0x1bd89ef2988 <col:49, col:65> 'unsigned long long'
|   |     | |     `-BinaryOperator 0x1bd89ef2968 <col:50, col:64> 'unsigned long long' '-'
|   |     | |       |-ImplicitCastExpr 0x1bd89ef2938 <col:50, col:60> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |       | `-MemberExpr 0x1bd89ef28e0 <col:50, col:60> 'const size_t':'const unsigned long long' lvalue ->w 0x1bd89e445a0
|   |     | |       |   `-ImplicitCastExpr 0x1bd89ef28c8 <col:50> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | |       |     `-DeclRefExpr 0x1bd89ef28a8 <col:50> 'const EC_PRE_COMP *' lvalue Var 0x1bd89ef0ea8 'pre_comp' 'const EC_PRE_COMP *'
|   |     | |       `-ImplicitCastExpr 0x1bd89ef2950 <col:64> 'unsigned long long' <IntegralCast>
|   |     | |         `-IntegerLiteral 0x1bd89ef2910 <col:64> 'int' 1
|   |     | `-IfStmt 0x1bd89ef2bd0 <line:467:13, line:470:13>
|   |     |   |-BinaryOperator 0x1bd89ef2b60 <line:467:17, col:77> 'int' '!='
|   |     |   | |-ImplicitCastExpr 0x1bd89ef2b48 <col:17, col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   | | `-MemberExpr 0x1bd89ef2a20 <col:17, col:27> 'const size_t':'const unsigned long long' lvalue ->num 0x1bd89e44680
|   |     |   | |   `-ImplicitCastExpr 0x1bd89ef2a08 <col:17> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     |   | |     `-DeclRefExpr 0x1bd89ef29e8 <col:17> 'const EC_PRE_COMP *' lvalue Var 0x1bd89ef0ea8 'pre_comp' 'const EC_PRE_COMP *'
|   |     |   | `-ParenExpr 0x1bd89ef2b28 <col:34, col:77> 'unsigned long long'
|   |     |   |   `-BinaryOperator 0x1bd89ef2b08 <col:35, col:57> 'unsigned long long' '*'
|   |     |   |     |-ImplicitCastExpr 0x1bd89ef2ad8 <col:35, col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   |     | `-MemberExpr 0x1bd89ef2a88 <col:35, col:45> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x1bd89e44538
|   |     |   |     |   `-ImplicitCastExpr 0x1bd89ef2a70 <col:35> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     |   |     |     `-DeclRefExpr 0x1bd89ef2a50 <col:35> 'const EC_PRE_COMP *' lvalue Var 0x1bd89ef0ea8 'pre_comp' 'const EC_PRE_COMP *'
|   |     |   |     `-ImplicitCastExpr 0x1bd89ef2af0 <col:57> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   |       `-DeclRefExpr 0x1bd89ef2ab8 <col:57> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef03d8 'pre_points_per_block' 'size_t':'unsigned long long'
|   |     |   `-CompoundStmt 0x1bd89ef2bb8 <col:80, line:470:13>
|   |     |     `-GotoStmt 0x1bd89ef2ba0 <line:469:17, col:22> 'err' 0x1bd89ef1eb0
|   |     `-CompoundStmt 0x1bd89ef2df8 <line:471:16, line:477:9>
|   |       |-BinaryOperator 0x1bd89ef2cd8 <line:473:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'const EC_PRE_COMP *' '='
|   |       | |-DeclRefExpr 0x1bd89ef2c18 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:473:13> 'const EC_PRE_COMP *' lvalue Var 0x1bd89ef0ea8 'pre_comp' 'const EC_PRE_COMP *'
|   |       | `-ImplicitCastExpr 0x1bd89ef2cc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const EC_PRE_COMP *' <NullToPointer>
|   |       |   `-ParenExpr 0x1bd89ef2ca0 <col:17, col:27> 'void *'
|   |       |     `-CStyleCastExpr 0x1bd89ef2c78 <col:18, col:26> 'void *' <NullToPointer>
|   |       |       `-IntegerLiteral 0x1bd89ef2c38 <col:26> 'int' 0
|   |       |-BinaryOperator 0x1bd89ef2d58 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:474:13, col:25> 'size_t':'unsigned long long' '='
|   |       | |-DeclRefExpr 0x1bd89ef2cf8 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef02f0 'numblocks' 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x1bd89ef2d40 <col:25> 'size_t':'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x1bd89ef2d18 <col:25> 'int' 1
|   |       `-BinaryOperator 0x1bd89ef2dd8 <line:475:13, col:26> 'int' '='
|   |         |-DeclRefExpr 0x1bd89ef2d78 <col:13> 'int' lvalue Var 0x1bd89ef0fe0 'num_scalar' 'int'
|   |         `-IntegerLiteral 0x1bd89ef2db0 <col:26> 'int' 1
|   |-BinaryOperator 0x1bd89ef2f78 <line:480:5, col:22> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1bd89ef2eb0 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef01a8 'totalnum' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1bd89ef2f58 <col:16, col:22> 'unsigned long long' '+'
|   |   |-ImplicitCastExpr 0x1bd89ef2f28 <col:16> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1bd89ef2ee8 <col:16> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x1bd89ef2f40 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1bd89ef2f08 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef02f0 'numblocks' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1bd89ef3250 <line:482:5, col:55> 'size_t *' '='
|   | |-DeclRefExpr 0x1bd89ef2f98 <col:5> 'size_t *' lvalue Var 0x1bd89ef07e0 'wsize' 'size_t *'
|   | `-ImplicitCastExpr 0x1bd89ef3238 <col:13, col:55> 'size_t *' <IntegralToPointer>
|   |   `-CallExpr 0x1bd89ef3210 <col:13, col:55> 'int'
|   |     |-ImplicitCastExpr 0x1bd89ef31f8 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1bd89ef30c0 <col:13> 'int ()' Function 0x1bd89ef2ff8 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1bd89ef31d8 <col:28, col:54> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1bd89ef31c0 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1bd89ef30e0 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef01a8 'totalnum' 'size_t':'unsigned long long'
|   |       `-UnaryExprOrTypeTraitExpr 0x1bd89ef31a0 <col:39, col:54> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1bd89ef3180 <col:45, col:54> 'size_t':'unsigned long long' lvalue
|   |           `-ArraySubscriptExpr 0x1bd89ef3160 <col:46, col:53> 'size_t':'unsigned long long' lvalue
|   |             |-ImplicitCastExpr 0x1bd89ef3148 <col:46> 'size_t *' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1bd89ef3100 <col:46> 'size_t *' lvalue Var 0x1bd89ef07e0 'wsize' 'size_t *' non_odr_use_unevaluated
|   |             `-IntegerLiteral 0x1bd89ef3120 <col:52> 'int' 0
|   |-BinaryOperator 0x1bd89ef3438 <line:483:5, col:61> 'size_t *' '='
|   | |-DeclRefExpr 0x1bd89ef3270 <col:5> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   | `-ImplicitCastExpr 0x1bd89ef3420 <col:16, col:61> 'size_t *' <IntegralToPointer>
|   |   `-CallExpr 0x1bd89ef33f8 <col:16, col:61> 'int'
|   |     |-ImplicitCastExpr 0x1bd89ef33e0 <col:16> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1bd89ef32a8 <col:16> 'int ()' Function 0x1bd89ef2ff8 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1bd89ef33c0 <col:31, col:60> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x1bd89ef33a8 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1bd89ef32c8 <col:31> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef01a8 'totalnum' 'size_t':'unsigned long long'
|   |       `-UnaryExprOrTypeTraitExpr 0x1bd89ef3388 <col:42, col:60> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1bd89ef3368 <col:48, col:60> 'size_t':'unsigned long long' lvalue
|   |           `-ArraySubscriptExpr 0x1bd89ef3348 <col:49, col:59> 'size_t':'unsigned long long' lvalue
|   |             |-ImplicitCastExpr 0x1bd89ef3330 <col:49> 'size_t *' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1bd89ef32e8 <col:49> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *' non_odr_use_unevaluated
|   |             `-IntegerLiteral 0x1bd89ef3308 <col:58> 'int' 0
|   |-BinaryOperator 0x1bd89ef36a0 <line:485:5, col:59> 'signed char **' '='
|   | |-DeclRefExpr 0x1bd89ef3458 <col:5> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   | `-ImplicitCastExpr 0x1bd89ef3688 <col:12, col:59> 'signed char **' <IntegralToPointer>
|   |   `-CallExpr 0x1bd89ef3660 <col:12, col:59> 'int'
|   |     |-ImplicitCastExpr 0x1bd89ef3648 <col:12> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1bd89ef3490 <col:12> 'int ()' Function 0x1bd89ef2ff8 'OPENSSL_malloc' 'int ()'
|   |     `-BinaryOperator 0x1bd89ef3628 <col:27, col:58> 'unsigned long long' '*'
|   |       |-ParenExpr 0x1bd89ef3548 <col:27, col:40> 'unsigned long long'
|   |       | `-BinaryOperator 0x1bd89ef3528 <col:28, col:39> 'unsigned long long' '+'
|   |       |   |-ImplicitCastExpr 0x1bd89ef34f8 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x1bd89ef34b0 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef01a8 'totalnum' 'size_t':'unsigned long long'
|   |       |   `-ImplicitCastExpr 0x1bd89ef3510 <col:39> 'unsigned long long' <IntegralCast>
|   |       |     `-IntegerLiteral 0x1bd89ef34d0 <col:39> 'int' 1
|   |       `-UnaryExprOrTypeTraitExpr 0x1bd89ef3608 <col:44, col:58> 'unsigned long long' sizeof
|   |         `-ParenExpr 0x1bd89ef35e8 <col:50, col:58> 'signed char *' lvalue
|   |           `-ArraySubscriptExpr 0x1bd89ef35c8 <col:51, col:57> 'signed char *' lvalue
|   |             |-ImplicitCastExpr 0x1bd89ef35b0 <col:51> 'signed char **' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1bd89ef3568 <col:51> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **' non_odr_use_unevaluated
|   |             `-IntegerLiteral 0x1bd89ef3588 <col:56> 'int' 0
|   |-IfStmt 0x1bd89ef3960 <line:489:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
|   | |-BinaryOperator 0x1bd89ef3800 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:489:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1bd89ef37d0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:489:9> 'signed char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89ef3728 <col:9> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   | | `-ImplicitCastExpr 0x1bd89ef37e8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char **' <BitCast>
|   | |   `-ParenExpr 0x1bd89ef37b0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1bd89ef3788 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1bd89ef3748 <col:26> 'int' 0
|   | `-BinaryOperator 0x1bd89ef3940 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:490:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |   |-ArraySubscriptExpr 0x1bd89ef3880 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:490:9, col:15> 'signed char *' lvalue
|   |   | |-ImplicitCastExpr 0x1bd89ef3868 <col:9> 'signed char **' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x1bd89ef3820 <col:9> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |   | `-IntegerLiteral 0x1bd89ef3840 <col:14> 'int' 0
|   |   `-ImplicitCastExpr 0x1bd89ef3928 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |     `-ParenExpr 0x1bd89ef3908 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x1bd89ef38e0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x1bd89ef38a0 <col:26> 'int' 0
|   |-IfStmt 0x1bd89ef3d90 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:492:5, line:495:5>
|   | |-OpaqueValueExpr 0x1bd89ef3d78 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89ef3d60 <line:492:79, line:495:5>
|   |   `-GotoStmt 0x1bd89ef3d48 <line:494:9, col:14> 'err' 0x1bd89ef1eb0
|   |-BinaryOperator 0x1bd89ef3e20 <line:500:5, col:15> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1bd89ef3da8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0ca8 'num_val' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1bd89ef3e08 <col:15> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1bd89ef3de0 <col:15> 'int' 0
|   |-ForStmt 0x1bd89ef53a0 <line:502:5, line:516:5>
|   | |-BinaryOperator 0x1bd89ef3ea0 <line:502:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1bd89ef3e40 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1bd89ef3e88 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1bd89ef3e60 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1bd89ef3fb0 <col:17, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x1bd89ef3f88 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89ef3ec0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x1bd89ef3f68 <col:21, col:27> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x1bd89ef3f20 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1bd89ef3ee0 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1bd89ef3f50 <col:27> 'unsigned long long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1bd89ef3f38 <col:27> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1bd89ef3f00 <col:27> 'int' lvalue Var 0x1bd89ef0fe0 'num_scalar' 'int'
|   | |-UnaryOperator 0x1bd89ef3ff0 <col:39, col:40> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1bd89ef3fd0 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1bd89ef5360 <col:44, line:516:5>
|   |   |-DeclStmt 0x1bd89ef4080 <line:503:9, col:20>
|   |   | `-VarDecl 0x1bd89ef4018 <col:9, col:16> col:16 used bits 'size_t':'unsigned long long'
|   |   |-BinaryOperator 0x1bd89ef4860 <line:506:9, line:349:21> 'size_t':'unsigned long long' '='
|   |   | |-ArraySubscriptExpr 0x1bd89ef4230 <line:506:9, col:16> 'size_t':'unsigned long long' lvalue
|   |   | | |-ImplicitCastExpr 0x1bd89ef4200 <col:9> 'size_t *' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1bd89ef41c0 <col:9> 'size_t *' lvalue Var 0x1bd89ef07e0 'wsize' 'size_t *'
|   |   | | `-ImplicitCastExpr 0x1bd89ef4218 <col:15> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1bd89ef41e0 <col:15> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |   | `-ParenExpr 0x1bd89ef4840 <line:343:17, line:349:21> 'size_t':'unsigned long long'
|   |   |   `-CStyleCastExpr 0x1bd89ef4818 <line:343:18, line:349:20> 'size_t':'unsigned long long' <IntegralCast>
|   |   |     `-ParenExpr 0x1bd89ef47f8 <line:344:18, line:349:20> 'int'
|   |   |       `-ConditionalOperator 0x1bd89ef4798 <line:344:19, line:349:19> 'int'
|   |   |         |-BinaryOperator 0x1bd89ef42e8 <line:344:19, col:26> 'int' '>='
|   |   |         | |-ImplicitCastExpr 0x1bd89ef42b8 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         | | `-ParenExpr 0x1bd89ef4270 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |         | |   `-DeclRefExpr 0x1bd89ef4250 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef4018 'bits' 'size_t':'unsigned long long'
|   |   |         | `-ImplicitCastExpr 0x1bd89ef42d0 <line:344:26> 'unsigned long long' <IntegralCast>
|   |   |         |   `-IntegerLiteral 0x1bd89ef4290 <col:26> 'int' 2000
|   |   |         |-IntegerLiteral 0x1bd89ef4308 <col:33> 'int' 6
|   |   |         `-ConditionalOperator 0x1bd89ef4768 <line:345:19, line:349:19> 'int'
|   |   |           |-BinaryOperator 0x1bd89ef43c8 <line:345:19, col:27> 'int' '>='
|   |   |           | |-ImplicitCastExpr 0x1bd89ef4398 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |           | | `-ParenExpr 0x1bd89ef4350 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |           | |   `-DeclRefExpr 0x1bd89ef4330 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef4018 'bits' 'size_t':'unsigned long long'
|   |   |           | `-ImplicitCastExpr 0x1bd89ef43b0 <line:345:27> 'unsigned long long' <IntegralCast>
|   |   |           |   `-IntegerLiteral 0x1bd89ef4370 <col:27> 'int' 800
|   |   |           |-IntegerLiteral 0x1bd89ef43e8 <col:33> 'int' 5
|   |   |           `-ConditionalOperator 0x1bd89ef4738 <line:346:19, line:349:19> 'int'
|   |   |             |-BinaryOperator 0x1bd89ef44a8 <line:346:19, col:27> 'int' '>='
|   |   |             | |-ImplicitCastExpr 0x1bd89ef4478 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |             | | `-ParenExpr 0x1bd89ef4430 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |             | |   `-DeclRefExpr 0x1bd89ef4410 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef4018 'bits' 'size_t':'unsigned long long'
|   |   |             | `-ImplicitCastExpr 0x1bd89ef4490 <line:346:27> 'unsigned long long' <IntegralCast>
|   |   |             |   `-IntegerLiteral 0x1bd89ef4450 <col:27> 'int' 300
|   |   |             |-IntegerLiteral 0x1bd89ef44c8 <col:33> 'int' 4
|   |   |             `-ConditionalOperator 0x1bd89ef4708 <line:347:19, line:349:19> 'int'
|   |   |               |-BinaryOperator 0x1bd89ef4588 <line:347:19, col:28> 'int' '>='
|   |   |               | |-ImplicitCastExpr 0x1bd89ef4558 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |               | | `-ParenExpr 0x1bd89ef4510 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |               | |   `-DeclRefExpr 0x1bd89ef44f0 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef4018 'bits' 'size_t':'unsigned long long'
|   |   |               | `-ImplicitCastExpr 0x1bd89ef4570 <line:347:28> 'unsigned long long' <IntegralCast>
|   |   |               |   `-IntegerLiteral 0x1bd89ef4530 <col:28> 'int' 70
|   |   |               |-IntegerLiteral 0x1bd89ef45a8 <col:33> 'int' 3
|   |   |               `-ConditionalOperator 0x1bd89ef46d8 <line:348:19, line:349:19> 'int'
|   |   |                 |-BinaryOperator 0x1bd89ef4668 <line:348:19, col:28> 'int' '>='
|   |   |                 | |-ImplicitCastExpr 0x1bd89ef4638 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |                 | | `-ParenExpr 0x1bd89ef45f0 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |   |                 | |   `-DeclRefExpr 0x1bd89ef45d0 <line:506:51> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef4018 'bits' 'size_t':'unsigned long long'
|   |   |                 | `-ImplicitCastExpr 0x1bd89ef4650 <line:348:28> 'unsigned long long' <IntegralCast>
|   |   |                 |   `-IntegerLiteral 0x1bd89ef4610 <col:28> 'int' 20
|   |   |                 |-IntegerLiteral 0x1bd89ef4688 <col:33> 'int' 2
|   |   |                 `-IntegerLiteral 0x1bd89ef46b0 <line:349:19> 'int' 1
|   |   |-CompoundAssignOperator 0x1bd89ef4a48 <line:507:9, col:46> 'size_t':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   | |-DeclRefExpr 0x1bd89ef4880 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0ca8 'num_val' 'size_t':'unsigned long long'
|   |   | `-BinaryOperator 0x1bd89ef4a28 <col:20, col:46> 'size_t':'unsigned long long' '<<'
|   |   |   |-CStyleCastExpr 0x1bd89ef48d8 <col:20, col:28> 'size_t':'unsigned long long' <IntegralCast>
|   |   |   | `-IntegerLiteral 0x1bd89ef48a0 <col:28> 'int' 1
|   |   |   `-ParenExpr 0x1bd89ef4a08 <col:33, col:46> 'unsigned long long'
|   |   |     `-BinaryOperator 0x1bd89ef49e8 <col:34, col:45> 'unsigned long long' '-'
|   |   |       |-ImplicitCastExpr 0x1bd89ef49b8 <col:34, col:41> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       | `-ArraySubscriptExpr 0x1bd89ef4970 <col:34, col:41> 'size_t':'unsigned long long' lvalue
|   |   |       |   |-ImplicitCastExpr 0x1bd89ef4940 <col:34> 'size_t *' <LValueToRValue>
|   |   |       |   | `-DeclRefExpr 0x1bd89ef4900 <col:34> 'size_t *' lvalue Var 0x1bd89ef07e0 'wsize' 'size_t *'
|   |   |       |   `-ImplicitCastExpr 0x1bd89ef4958 <col:40> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x1bd89ef4920 <col:40> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |   |       `-ImplicitCastExpr 0x1bd89ef49d0 <col:45> 'unsigned long long' <IntegralCast>
|   |   |         `-IntegerLiteral 0x1bd89ef4990 <col:45> 'int' 1
|   |   |-BinaryOperator 0x1bd89ef4c08 <line:508:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |   | |-ArraySubscriptExpr 0x1bd89ef4b48 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:508:9, col:19> 'signed char *' lvalue
|   |   | | |-ImplicitCastExpr 0x1bd89ef4b30 <col:9> 'signed char **' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1bd89ef4a78 <col:9> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |   | | `-BinaryOperator 0x1bd89ef4b10 <col:14, col:18> 'unsigned long long' '+'
|   |   | |   |-ImplicitCastExpr 0x1bd89ef4ae0 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   | `-DeclRefExpr 0x1bd89ef4a98 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |   | |   `-ImplicitCastExpr 0x1bd89ef4af8 <col:18> 'unsigned long long' <IntegralCast>
|   |   | |     `-IntegerLiteral 0x1bd89ef4ab8 <col:18> 'int' 1
|   |   | `-ImplicitCastExpr 0x1bd89ef4bf0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |   |   `-ParenExpr 0x1bd89ef4bd0 <col:17, col:27> 'void *'
|   |   |     `-CStyleCastExpr 0x1bd89ef4ba8 <col:18, col:26> 'void *' <NullToPointer>
|   |   |       `-IntegerLiteral 0x1bd89ef4b68 <col:26> 'int' 0
|   |   |-IfStmt 0x1bd89ef5130 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:512:9, line:513:18>
|   |   | |-BinaryOperator 0x1bd89ef50f8 <line:512:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1bd89ef50c8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:512:13, col:19> 'signed char *' <LValueToRValue>
|   |   | | | `-ArraySubscriptExpr 0x1bd89ef5020 <col:13, col:19> 'signed char *' lvalue
|   |   | | |   |-ImplicitCastExpr 0x1bd89ef4ff0 <col:13> 'signed char **' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1bd89ef4fb0 <col:13> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |   | | |   `-ImplicitCastExpr 0x1bd89ef5008 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1bd89ef4fd0 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x1bd89ef50e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <BitCast>
|   |   | |   `-ParenExpr 0x1bd89ef50a8 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1bd89ef5080 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1bd89ef5040 <col:26> 'int' 0
|   |   | `-GotoStmt 0x1bd89ef5118 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:513:13, col:18> 'err' 0x1bd89ef1eb0
|   |   `-IfStmt 0x1bd89ef5348 <line:514:9, line:515:33>
|   |     |-BinaryOperator 0x1bd89ef5240 <line:514:13, col:27> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1bd89ef5210 <col:13, col:23> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-ArraySubscriptExpr 0x1bd89ef51b8 <col:13, col:23> 'size_t':'unsigned long long' lvalue
|   |     | |   |-ImplicitCastExpr 0x1bd89ef5188 <col:13> 'size_t *' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x1bd89ef5148 <col:13> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   |     | |   `-ImplicitCastExpr 0x1bd89ef51a0 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x1bd89ef5168 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1bd89ef5228 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1bd89ef51d8 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0bd8 'max_len' 'size_t':'unsigned long long'
|   |     `-BinaryOperator 0x1bd89ef5328 <line:515:13, col:33> 'size_t':'unsigned long long' '='
|   |       |-DeclRefExpr 0x1bd89ef5260 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0bd8 'max_len' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x1bd89ef5310 <col:23, col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x1bd89ef52f0 <col:23, col:33> 'size_t':'unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x1bd89ef52c0 <col:23> 'size_t *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x1bd89ef5280 <col:23> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   |           `-ImplicitCastExpr 0x1bd89ef52d8 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |             `-DeclRefExpr 0x1bd89ef52a0 <col:32> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |-IfStmt 0x1bd89ef7e50 <line:518:5, line:625:5>
|   | |-ImplicitCastExpr 0x1bd89ef53f8 <line:518:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | `-DeclRefExpr 0x1bd89ef53d8 <col:9> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef02f0 'numblocks' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1bd89ef7e38 <col:20, line:625:5>
|   |   `-IfStmt 0x1bd89ef7e10 <line:521:9, line:624:9> has_else
|   |     |-BinaryOperator 0x1bd89ef54e8 <line:521:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1bd89ef54b8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:521:13> 'const EC_PRE_COMP *' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1bd89ef5410 <col:13> 'const EC_PRE_COMP *' lvalue Var 0x1bd89ef0ea8 'pre_comp' 'const EC_PRE_COMP *'
|   |     | `-ImplicitCastExpr 0x1bd89ef54d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const EC_PRE_COMP *' <BitCast>
|   |     |   `-ParenExpr 0x1bd89ef5498 <col:17, col:27> 'void *'
|   |     |     `-CStyleCastExpr 0x1bd89ef5470 <col:18, col:26> 'void *' <NullToPointer>
|   |     |       `-IntegerLiteral 0x1bd89ef5430 <col:26> 'int' 0
|   |     |-CompoundStmt 0x1bd89ef55f0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:521:31, line:527:9>
|   |     | `-IfStmt 0x1bd89ef55d8 <line:522:13, line:525:13>
|   |     |   |-BinaryOperator 0x1bd89ef5568 <line:522:17, col:31> 'int' '!='
|   |     |   | |-ImplicitCastExpr 0x1bd89ef5550 <col:17> 'int' <LValueToRValue>
|   |     |   | | `-DeclRefExpr 0x1bd89ef5508 <col:17> 'int' lvalue Var 0x1bd89ef0fe0 'num_scalar' 'int'
|   |     |   | `-IntegerLiteral 0x1bd89ef5528 <col:31> 'int' 1
|   |     |   `-CompoundStmt 0x1bd89ef55c0 <col:34, line:525:13>
|   |     |     `-GotoStmt 0x1bd89ef55a8 <line:524:17, col:22> 'err' 0x1bd89ef1eb0
|   |     `-CompoundStmt 0x1bd89ef7dd0 <line:527:16, line:624:9>
|   |       |-DeclStmt 0x1bd89ef5728 <line:528:13, col:41>
|   |       | `-VarDecl 0x1bd89ef5620 <col:13, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ec_mult.c:528:26 used tmp_wNAF 'signed char *' cinit
|   |       |   `-ImplicitCastExpr 0x1bd89ef5710 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |       |     `-ParenExpr 0x1bd89ef56f0 <col:17, col:27> 'void *'
|   |       |       `-CStyleCastExpr 0x1bd89ef56c8 <col:18, col:26> 'void *' <NullToPointer>
|   |       |         `-IntegerLiteral 0x1bd89ef5688 <col:26> 'int' 0
|   |       |-DeclStmt 0x1bd89ef57f8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:529:13, col:31>
|   |       | `-VarDecl 0x1bd89ef5750 <col:13, col:30> col:20 used tmp_len 'size_t':'unsigned long long' cinit
|   |       |   `-ImplicitCastExpr 0x1bd89ef57e0 <col:30> 'size_t':'unsigned long long' <IntegralCast>
|   |       |     `-IntegerLiteral 0x1bd89ef57b8 <col:30> 'int' 0
|   |       |-IfStmt 0x1bd89ef58e0 <line:531:13, line:534:13>
|   |       | |-BinaryOperator 0x1bd89ef5870 <line:531:17, col:31> 'int' '!='
|   |       | | |-ImplicitCastExpr 0x1bd89ef5858 <col:17> 'int' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1bd89ef5810 <col:17> 'int' lvalue Var 0x1bd89ef0fe0 'num_scalar' 'int'
|   |       | | `-IntegerLiteral 0x1bd89ef5830 <col:31> 'int' 0
|   |       | `-CompoundStmt 0x1bd89ef58c8 <col:34, line:534:13>
|   |       |   `-GotoStmt 0x1bd89ef58b0 <line:533:17, col:22> 'err' 0x1bd89ef1eb0
|   |       |-BinaryOperator 0x1bd89ef5a08 <line:539:13, col:36> 'size_t':'unsigned long long' '='
|   |       | |-ArraySubscriptExpr 0x1bd89ef5968 <col:13, col:22> 'size_t':'unsigned long long' lvalue
|   |       | | |-ImplicitCastExpr 0x1bd89ef5938 <col:13> 'size_t *' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1bd89ef58f8 <col:13> 'size_t *' lvalue Var 0x1bd89ef07e0 'wsize' 'size_t *'
|   |       | | `-ImplicitCastExpr 0x1bd89ef5950 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1bd89ef5918 <col:19> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x1bd89ef59f0 <col:26, col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |   `-MemberExpr 0x1bd89ef59c0 <col:26, col:36> 'const size_t':'const unsigned long long' lvalue ->w 0x1bd89e445a0
|   |       |     `-ImplicitCastExpr 0x1bd89ef59a8 <col:26> 'const EC_PRE_COMP *' <LValueToRValue>
|   |       |       `-DeclRefExpr 0x1bd89ef5988 <col:26> 'const EC_PRE_COMP *' lvalue Var 0x1bd89ef0ea8 'pre_comp' 'const EC_PRE_COMP *'
|   |       |-IfStmt 0x1bd89ef5bc8 <line:541:13, line:542:22>
|   |       | |-UnaryOperator 0x1bd89ef5b98 <line:541:17, col:18> 'int' prefix '!' cannot overflow
|   |       | | `-ImplicitCastExpr 0x1bd89ef5b80 <col:18> 'signed char *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1bd89ef5b60 <col:18> 'signed char *' lvalue Var 0x1bd89ef5620 'tmp_wNAF' 'signed char *'
|   |       | `-GotoStmt 0x1bd89ef5bb0 <line:542:17, col:22> 'err' 0x1bd89ef1eb0
|   |       `-IfStmt 0x1bd89ef7da8 <line:544:13, line:623:13> has_else
|   |         |-BinaryOperator 0x1bd89ef5c50 <line:544:17, col:28> 'int' '<='
|   |         | |-ImplicitCastExpr 0x1bd89ef5c20 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1bd89ef5be0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef5750 'tmp_len' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x1bd89ef5c38 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x1bd89ef5c00 <col:28> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0bd8 'max_len' 'size_t':'unsigned long long'
|   |         |-CompoundStmt 0x1bd89ef61d0 <col:37, line:560:13>
|   |         | |-BinaryOperator 0x1bd89ef5cd0 <line:551:17, col:29> 'size_t':'unsigned long long' '='
|   |         | | |-DeclRefExpr 0x1bd89ef5c70 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef02f0 'numblocks' 'size_t':'unsigned long long'
|   |         | | `-ImplicitCastExpr 0x1bd89ef5cb8 <col:29> 'size_t':'unsigned long long' <IntegralCast>
|   |         | |   `-IntegerLiteral 0x1bd89ef5c90 <col:29> 'int' 1
|   |         | |-BinaryOperator 0x1bd89ef5da8 <line:552:17, col:34> 'size_t':'unsigned long long' '='
|   |         | | |-DeclRefExpr 0x1bd89ef5cf0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef01a8 'totalnum' 'size_t':'unsigned long long'
|   |         | | `-BinaryOperator 0x1bd89ef5d88 <col:28, col:34> 'unsigned long long' '+'
|   |         | |   |-ImplicitCastExpr 0x1bd89ef5d58 <col:28> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | |   | `-DeclRefExpr 0x1bd89ef5d10 <col:28> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   |         | |   `-ImplicitCastExpr 0x1bd89ef5d70 <col:34> 'unsigned long long' <IntegralCast>
|   |         | |     `-IntegerLiteral 0x1bd89ef5d30 <col:34> 'int' 1
|   |         | |-BinaryOperator 0x1bd89ef5e90 <line:553:17, col:29> 'signed char *' '='
|   |         | | |-ArraySubscriptExpr 0x1bd89ef5e38 <col:17, col:25> 'signed char *' lvalue
|   |         | | | |-ImplicitCastExpr 0x1bd89ef5e08 <col:17> 'signed char **' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1bd89ef5dc8 <col:17> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |         | | | `-ImplicitCastExpr 0x1bd89ef5e20 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | |   `-DeclRefExpr 0x1bd89ef5de8 <col:22> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   |         | | `-ImplicitCastExpr 0x1bd89ef5e78 <col:29> 'signed char *' <LValueToRValue>
|   |         | |   `-DeclRefExpr 0x1bd89ef5e58 <col:29> 'signed char *' lvalue Var 0x1bd89ef5620 'tmp_wNAF' 'signed char *'
|   |         | |-BinaryOperator 0x1bd89ef6070 <line:554:17, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |         | | |-ArraySubscriptExpr 0x1bd89ef5f80 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:554:17, col:29> 'signed char *' lvalue
|   |         | | | |-ImplicitCastExpr 0x1bd89ef5f68 <col:17> 'signed char **' <LValueToRValue>
|   |         | | | | `-DeclRefExpr 0x1bd89ef5eb0 <col:17> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |         | | | `-BinaryOperator 0x1bd89ef5f48 <col:22, col:28> 'unsigned long long' '+'
|   |         | | |   |-ImplicitCastExpr 0x1bd89ef5f18 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | |   | `-DeclRefExpr 0x1bd89ef5ed0 <col:22> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   |         | | |   `-ImplicitCastExpr 0x1bd89ef5f30 <col:28> 'unsigned long long' <IntegralCast>
|   |         | | |     `-IntegerLiteral 0x1bd89ef5ef0 <col:28> 'int' 1
|   |         | | `-ImplicitCastExpr 0x1bd89ef6058 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |         | |   `-ParenExpr 0x1bd89ef6038 <col:17, col:27> 'void *'
|   |         | |     `-CStyleCastExpr 0x1bd89ef6010 <col:18, col:26> 'void *' <NullToPointer>
|   |         | |       `-IntegerLiteral 0x1bd89ef5fd0 <col:26> 'int' 0
|   |         | `-BinaryOperator 0x1bd89ef6158 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:555:17, col:33> 'size_t':'unsigned long long' '='
|   |         |   |-ArraySubscriptExpr 0x1bd89ef6100 <col:17, col:29> 'size_t':'unsigned long long' lvalue
|   |         |   | |-ImplicitCastExpr 0x1bd89ef60d0 <col:17> 'size_t *' <LValueToRValue>
|   |         |   | | `-DeclRefExpr 0x1bd89ef6090 <col:17> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   |         |   | `-ImplicitCastExpr 0x1bd89ef60e8 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |   |   `-DeclRefExpr 0x1bd89ef60b0 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   |         |   `-ImplicitCastExpr 0x1bd89ef6140 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |     `-DeclRefExpr 0x1bd89ef6120 <col:33> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef5750 'tmp_len' 'size_t':'unsigned long long'
|   |         `-CompoundStmt 0x1bd89ef7d70 <line:560:20, line:623:13>
|   |           |-DeclStmt 0x1bd89ef6288 <line:566:17, col:32>
|   |           | `-VarDecl 0x1bd89ef6220 <col:17, col:30> col:30 used pp 'signed char *'
|   |           |-IfStmt 0x1bd89ef6808 <line:569:17, line:580:17>
|   |           | |-BinaryOperator 0x1bd89ef6368 <line:569:21, col:43> 'int' '<'
|   |           | | |-ImplicitCastExpr 0x1bd89ef6350 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | | | `-DeclRefExpr 0x1bd89ef62a0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef5750 'tmp_len' 'size_t':'unsigned long long'
|   |           | | `-BinaryOperator 0x1bd89ef6330 <col:31, col:43> 'unsigned long long' '*'
|   |           | |   |-ImplicitCastExpr 0x1bd89ef6300 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |   | `-DeclRefExpr 0x1bd89ef62c0 <col:31> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef02f0 'numblocks' 'size_t':'unsigned long long'
|   |           | |   `-ImplicitCastExpr 0x1bd89ef6318 <col:43> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x1bd89ef62e0 <col:43> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0238 'blocksize' 'size_t':'unsigned long long'
|   |           | `-CompoundStmt 0x1bd89ef67e0 <col:54, line:580:17>
|   |           |   |-BinaryOperator 0x1bd89ef6510 <line:573:21, col:61> 'size_t':'unsigned long long' '='
|   |           |   | |-DeclRefExpr 0x1bd89ef6388 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef02f0 'numblocks' 'size_t':'unsigned long long'
|   |           |   | `-BinaryOperator 0x1bd89ef64f0 <col:33, col:61> 'unsigned long long' '/'
|   |           |   |   |-ParenExpr 0x1bd89ef6498 <col:33, col:57> 'unsigned long long'
|   |           |   |   | `-BinaryOperator 0x1bd89ef6478 <col:34, col:56> 'unsigned long long' '-'
|   |           |   |   |   |-BinaryOperator 0x1bd89ef6418 <col:34, col:44> 'unsigned long long' '+'
|   |           |   |   |   | |-ImplicitCastExpr 0x1bd89ef63e8 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   |   | | `-DeclRefExpr 0x1bd89ef63a8 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef5750 'tmp_len' 'size_t':'unsigned long long'
|   |           |   |   |   | `-ImplicitCastExpr 0x1bd89ef6400 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   |   |   `-DeclRefExpr 0x1bd89ef63c8 <col:44> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0238 'blocksize' 'size_t':'unsigned long long'
|   |           |   |   |   `-ImplicitCastExpr 0x1bd89ef6460 <col:56> 'unsigned long long' <IntegralCast>
|   |           |   |   |     `-IntegerLiteral 0x1bd89ef6438 <col:56> 'int' 1
|   |           |   |   `-ImplicitCastExpr 0x1bd89ef64d8 <col:61> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |     `-DeclRefExpr 0x1bd89ef64b8 <col:61> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0238 'blocksize' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x1bd89ef66f8 <line:574:21, line:578:21>
|   |           |   | |-BinaryOperator 0x1bd89ef65e8 <line:574:25, col:47> 'int' '>'
|   |           |   | | |-ImplicitCastExpr 0x1bd89ef65b8 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x1bd89ef6530 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef02f0 'numblocks' 'size_t':'unsigned long long'
|   |           |   | | `-ImplicitCastExpr 0x1bd89ef65d0 <col:37, col:47> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   `-MemberExpr 0x1bd89ef6588 <col:37, col:47> 'const size_t':'const unsigned long long' lvalue ->numblocks 0x1bd89e44538
|   |           |   | |     `-ImplicitCastExpr 0x1bd89ef6570 <col:37> 'const EC_PRE_COMP *' <LValueToRValue>
|   |           |   | |       `-DeclRefExpr 0x1bd89ef6550 <col:37> 'const EC_PRE_COMP *' lvalue Var 0x1bd89ef0ea8 'pre_comp' 'const EC_PRE_COMP *'
|   |           |   | `-CompoundStmt 0x1bd89ef66d8 <col:58, line:578:21>
|   |           |   |   |-CallExpr 0x1bd89ef6680 <line:576:25, col:46> 'int'
|   |           |   |   | |-ImplicitCastExpr 0x1bd89ef6668 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |   | | `-DeclRefExpr 0x1bd89ef6628 <col:25> 'int ()' Function 0x1bd89eea4f8 'OPENSSL_free' 'int ()'
|   |           |   |   | `-ImplicitCastExpr 0x1bd89ef66a8 <col:38> 'signed char *' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x1bd89ef6648 <col:38> 'signed char *' lvalue Var 0x1bd89ef5620 'tmp_wNAF' 'signed char *'
|   |           |   |   `-GotoStmt 0x1bd89ef66c0 <line:577:25, col:30> 'err' 0x1bd89ef1eb0
|   |           |   `-BinaryOperator 0x1bd89ef67c0 <line:579:21, col:38> 'size_t':'unsigned long long' '='
|   |           |     |-DeclRefExpr 0x1bd89ef6710 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef01a8 'totalnum' 'size_t':'unsigned long long'
|   |           |     `-BinaryOperator 0x1bd89ef67a0 <col:32, col:38> 'unsigned long long' '+'
|   |           |       |-ImplicitCastExpr 0x1bd89ef6770 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |       | `-DeclRefExpr 0x1bd89ef6730 <col:32> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   |           |       `-ImplicitCastExpr 0x1bd89ef6788 <col:38> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |         `-DeclRefExpr 0x1bd89ef6750 <col:38> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef02f0 'numblocks' 'size_t':'unsigned long long'
|   |           |-BinaryOperator 0x1bd89ef6890 <line:583:17, col:22> 'signed char *' '='
|   |           | |-DeclRefExpr 0x1bd89ef6820 <col:17> 'signed char *' lvalue Var 0x1bd89ef6220 'pp' 'signed char *'
|   |           | `-ImplicitCastExpr 0x1bd89ef6878 <col:22> 'signed char *' <LValueToRValue>
|   |           |   `-DeclRefExpr 0x1bd89ef6858 <col:22> 'signed char *' lvalue Var 0x1bd89ef5620 'tmp_wNAF' 'signed char *'
|   |           |-ForStmt 0x1bd89ef7ca0 <line:586:17, line:621:17>
|   |           | |-BinaryOperator 0x1bd89ef6940 <line:586:22, col:26> 'size_t':'unsigned long long' '='
|   |           | | |-DeclRefExpr 0x1bd89ef68e8 <col:22> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           | | `-ImplicitCastExpr 0x1bd89ef6928 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x1bd89ef6908 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   |           | |-<<<NULL>>>
|   |           | |-BinaryOperator 0x1bd89ef69d0 <col:31, col:35> 'int' '<'
|   |           | | |-ImplicitCastExpr 0x1bd89ef69a0 <col:31> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | | | `-DeclRefExpr 0x1bd89ef6960 <col:31> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           | | `-ImplicitCastExpr 0x1bd89ef69b8 <col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x1bd89ef6980 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef01a8 'totalnum' 'size_t':'unsigned long long'
|   |           | |-UnaryOperator 0x1bd89ef6a10 <col:45, col:46> 'size_t':'unsigned long long' postfix '++'
|   |           | | `-DeclRefExpr 0x1bd89ef69f0 <col:45> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           | `-CompoundStmt 0x1bd89ef7c50 <col:50, line:621:17>
|   |           |   |-IfStmt 0x1bd89ef6f30 <line:587:21, line:600:39> has_else
|   |           |   | |-BinaryOperator 0x1bd89ef6af8 <line:587:25, col:40> 'int' '<'
|   |           |   | | |-ImplicitCastExpr 0x1bd89ef6ae0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x1bd89ef6a28 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |   | | `-BinaryOperator 0x1bd89ef6ac0 <col:29, col:40> 'unsigned long long' '-'
|   |           |   | |   |-ImplicitCastExpr 0x1bd89ef6a90 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   | `-DeclRefExpr 0x1bd89ef6a48 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef01a8 'totalnum' 'size_t':'unsigned long long'
|   |           |   | |   `-ImplicitCastExpr 0x1bd89ef6aa8 <col:40> 'unsigned long long' <IntegralCast>
|   |           |   | |     `-IntegerLiteral 0x1bd89ef6a68 <col:40> 'int' 1
|   |           |   | |-CompoundStmt 0x1bd89ef6e20 <col:43, line:595:21>
|   |           |   | | |-BinaryOperator 0x1bd89ef6be0 <line:588:25, col:39> 'size_t':'unsigned long long' '='
|   |           |   | | | |-ArraySubscriptExpr 0x1bd89ef6b88 <col:25, col:35> 'size_t':'unsigned long long' lvalue
|   |           |   | | | | |-ImplicitCastExpr 0x1bd89ef6b58 <col:25> 'size_t *' <LValueToRValue>
|   |           |   | | | | | `-DeclRefExpr 0x1bd89ef6b18 <col:25> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   |           |   | | | | `-ImplicitCastExpr 0x1bd89ef6b70 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | |   `-DeclRefExpr 0x1bd89ef6b38 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |   | | | `-ImplicitCastExpr 0x1bd89ef6bc8 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | |   `-DeclRefExpr 0x1bd89ef6ba8 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0238 'blocksize' 'size_t':'unsigned long long'
|   |           |   | | |-IfStmt 0x1bd89ef6d80 <line:589:25, line:593:25>
|   |           |   | | | |-BinaryOperator 0x1bd89ef6c70 <line:589:29, col:39> 'int' '<'
|   |           |   | | | | |-ImplicitCastExpr 0x1bd89ef6c40 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | | | `-DeclRefExpr 0x1bd89ef6c00 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef5750 'tmp_len' 'size_t':'unsigned long long'
|   |           |   | | | | `-ImplicitCastExpr 0x1bd89ef6c58 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | |   `-DeclRefExpr 0x1bd89ef6c20 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0238 'blocksize' 'size_t':'unsigned long long'
|   |           |   | | | `-CompoundStmt 0x1bd89ef6d60 <col:50, line:593:25>
|   |           |   | | |   |-CallExpr 0x1bd89ef6d08 <line:591:29, col:50> 'int'
|   |           |   | | |   | |-ImplicitCastExpr 0x1bd89ef6cf0 <col:29> 'int (*)()' <FunctionToPointerDecay>
|   |           |   | | |   | | `-DeclRefExpr 0x1bd89ef6cb0 <col:29> 'int ()' Function 0x1bd89eea4f8 'OPENSSL_free' 'int ()'
|   |           |   | | |   | `-ImplicitCastExpr 0x1bd89ef6d30 <col:42> 'signed char *' <LValueToRValue>
|   |           |   | | |   |   `-DeclRefExpr 0x1bd89ef6cd0 <col:42> 'signed char *' lvalue Var 0x1bd89ef5620 'tmp_wNAF' 'signed char *'
|   |           |   | | |   `-GotoStmt 0x1bd89ef6d48 <line:592:29, col:34> 'err' 0x1bd89ef1eb0
|   |           |   | | `-CompoundAssignOperator 0x1bd89ef6df0 <line:594:25, col:36> 'size_t':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           |   | |   |-DeclRefExpr 0x1bd89ef6d98 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef5750 'tmp_len' 'size_t':'unsigned long long'
|   |           |   | |   `-ImplicitCastExpr 0x1bd89ef6dd8 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |     `-DeclRefExpr 0x1bd89ef6db8 <col:36> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0238 'blocksize' 'size_t':'unsigned long long'
|   |           |   | `-BinaryOperator 0x1bd89ef6f10 <line:600:25, col:39> 'size_t':'unsigned long long' '='
|   |           |   |   |-ArraySubscriptExpr 0x1bd89ef6eb8 <col:25, col:35> 'size_t':'unsigned long long' lvalue
|   |           |   |   | |-ImplicitCastExpr 0x1bd89ef6e88 <col:25> 'size_t *' <LValueToRValue>
|   |           |   |   | | `-DeclRefExpr 0x1bd89ef6e48 <col:25> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   |           |   |   | `-ImplicitCastExpr 0x1bd89ef6ea0 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x1bd89ef6e68 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |   |   `-ImplicitCastExpr 0x1bd89ef6ef8 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |     `-DeclRefExpr 0x1bd89ef6ed8 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef5750 'tmp_len' 'size_t':'unsigned long long'
|   |           |   |-BinaryOperator 0x1bd89ef70e8 <line:602:21, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'signed char *' '='
|   |           |   | |-ArraySubscriptExpr 0x1bd89ef7028 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:602:21, col:31> 'signed char *' lvalue
|   |           |   | | |-ImplicitCastExpr 0x1bd89ef7010 <col:21> 'signed char **' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x1bd89ef6f58 <col:21> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |           |   | | `-BinaryOperator 0x1bd89ef6ff0 <col:26, col:30> 'unsigned long long' '+'
|   |           |   | |   |-ImplicitCastExpr 0x1bd89ef6fc0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   | `-DeclRefExpr 0x1bd89ef6f78 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |   | |   `-ImplicitCastExpr 0x1bd89ef6fd8 <col:30> 'unsigned long long' <IntegralCast>
|   |           |   | |     `-IntegerLiteral 0x1bd89ef6f98 <col:30> 'int' 1
|   |           |   | `-ImplicitCastExpr 0x1bd89ef70d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <NullToPointer>
|   |           |   |   `-ParenExpr 0x1bd89ef70b0 <col:17, col:27> 'void *'
|   |           |   |     `-CStyleCastExpr 0x1bd89ef7088 <col:18, col:26> 'void *' <NullToPointer>
|   |           |   |       `-IntegerLiteral 0x1bd89ef7048 <col:26> 'int' 0
|   |           |   |-BinaryOperator 0x1bd89ef72b8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:603:21, col:57> 'signed char *' '='
|   |           |   | |-ArraySubscriptExpr 0x1bd89ef7178 <col:21, col:27> 'signed char *' lvalue
|   |           |   | | |-ImplicitCastExpr 0x1bd89ef7148 <col:21> 'signed char **' <LValueToRValue>
|   |           |   | | | `-DeclRefExpr 0x1bd89ef7108 <col:21> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |           |   | | `-ImplicitCastExpr 0x1bd89ef7160 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   `-DeclRefExpr 0x1bd89ef7128 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |   | `-ImplicitCastExpr 0x1bd89ef72a0 <col:31, col:57> 'signed char *' <IntegralToPointer>
|   |           |   |   `-CallExpr 0x1bd89ef7260 <col:31, col:57> 'int'
|   |           |   |     |-ImplicitCastExpr 0x1bd89ef7248 <col:31> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |     | `-DeclRefExpr 0x1bd89ef7198 <col:31> 'int ()' Function 0x1bd89ef2ff8 'OPENSSL_malloc' 'int ()'
|   |           |   |     `-ImplicitCastExpr 0x1bd89ef7288 <col:46, col:56> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |       `-ArraySubscriptExpr 0x1bd89ef7228 <col:46, col:56> 'size_t':'unsigned long long' lvalue
|   |           |   |         |-ImplicitCastExpr 0x1bd89ef71f8 <col:46> 'size_t *' <LValueToRValue>
|   |           |   |         | `-DeclRefExpr 0x1bd89ef71b8 <col:46> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   |           |   |         `-ImplicitCastExpr 0x1bd89ef7210 <col:55> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |           `-DeclRefExpr 0x1bd89ef71d8 <col:55> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x1bd89ef7530 <line:604:21, line:608:21>
|   |           |   | |-BinaryOperator 0x1bd89ef7420 <line:604:25, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |           |   | | |-ImplicitCastExpr 0x1bd89ef73f0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:604:25, col:31> 'signed char *' <LValueToRValue>
|   |           |   | | | `-ArraySubscriptExpr 0x1bd89ef7348 <col:25, col:31> 'signed char *' lvalue
|   |           |   | | |   |-ImplicitCastExpr 0x1bd89ef7318 <col:25> 'signed char **' <LValueToRValue>
|   |           |   | | |   | `-DeclRefExpr 0x1bd89ef72d8 <col:25> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |           |   | | |   `-ImplicitCastExpr 0x1bd89ef7330 <col:30> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | |     `-DeclRefExpr 0x1bd89ef72f8 <col:30> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |   | | `-ImplicitCastExpr 0x1bd89ef7408 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <BitCast>
|   |           |   | |   `-ParenExpr 0x1bd89ef73d0 <col:17, col:27> 'void *'
|   |           |   | |     `-CStyleCastExpr 0x1bd89ef73a8 <col:18, col:26> 'void *' <NullToPointer>
|   |           |   | |       `-IntegerLiteral 0x1bd89ef7368 <col:26> 'int' 0
|   |           |   | `-CompoundStmt 0x1bd89ef7510 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:604:42, line:608:21>
|   |           |   |   |-CallExpr 0x1bd89ef74b8 <line:606:25, col:46> 'int'
|   |           |   |   | |-ImplicitCastExpr 0x1bd89ef74a0 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |   | | `-DeclRefExpr 0x1bd89ef7460 <col:25> 'int ()' Function 0x1bd89eea4f8 'OPENSSL_free' 'int ()'
|   |           |   |   | `-ImplicitCastExpr 0x1bd89ef74e0 <col:38> 'signed char *' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x1bd89ef7480 <col:38> 'signed char *' lvalue Var 0x1bd89ef5620 'tmp_wNAF' 'signed char *'
|   |           |   |   `-GotoStmt 0x1bd89ef74f8 <line:607:25, col:30> 'err' 0x1bd89ef1eb0
|   |           |   |-CallExpr 0x1bd89ef7730 <line:609:21, col:52> 'void *'
|   |           |   | |-ImplicitCastExpr 0x1bd89ef7718 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |           |   | | `-DeclRefExpr 0x1bd89ef7548 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x1bd89d76ca8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |           |   | |-ImplicitCastExpr 0x1bd89ef7780 <col:28, col:34> 'void *' <BitCast>
|   |           |   | | `-ImplicitCastExpr 0x1bd89ef7768 <col:28, col:34> 'signed char *' <LValueToRValue>
|   |           |   | |   `-ArraySubscriptExpr 0x1bd89ef75d8 <col:28, col:34> 'signed char *' lvalue
|   |           |   | |     |-ImplicitCastExpr 0x1bd89ef75a8 <col:28> 'signed char **' <LValueToRValue>
|   |           |   | |     | `-DeclRefExpr 0x1bd89ef7568 <col:28> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |           |   | |     `-ImplicitCastExpr 0x1bd89ef75c0 <col:33> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |       `-DeclRefExpr 0x1bd89ef7588 <col:33> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |   | |-ImplicitCastExpr 0x1bd89ef77b0 <col:37> 'const void *' <BitCast>
|   |           |   | | `-ImplicitCastExpr 0x1bd89ef7798 <col:37> 'signed char *' <LValueToRValue>
|   |           |   | |   `-DeclRefExpr 0x1bd89ef75f8 <col:37> 'signed char *' lvalue Var 0x1bd89ef6220 'pp' 'signed char *'
|   |           |   | `-ImplicitCastExpr 0x1bd89ef77c8 <col:41, col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |   `-ArraySubscriptExpr 0x1bd89ef7688 <col:41, col:51> 'size_t':'unsigned long long' lvalue
|   |           |   |     |-ImplicitCastExpr 0x1bd89ef7658 <col:41> 'size_t *' <LValueToRValue>
|   |           |   |     | `-DeclRefExpr 0x1bd89ef7618 <col:41> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   |           |   |     `-ImplicitCastExpr 0x1bd89ef7670 <col:50> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |       `-DeclRefExpr 0x1bd89ef7638 <col:50> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x1bd89ef79c8 <line:610:21, line:611:45>
|   |           |   | |-BinaryOperator 0x1bd89ef78c0 <line:610:25, col:39> 'int' '>'
|   |           |   | | |-ImplicitCastExpr 0x1bd89ef7890 <col:25, col:35> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | | `-ArraySubscriptExpr 0x1bd89ef7850 <col:25, col:35> 'size_t':'unsigned long long' lvalue
|   |           |   | | |   |-ImplicitCastExpr 0x1bd89ef7820 <col:25> 'size_t *' <LValueToRValue>
|   |           |   | | |   | `-DeclRefExpr 0x1bd89ef77e0 <col:25> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   |           |   | | |   `-ImplicitCastExpr 0x1bd89ef7838 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | | |     `-DeclRefExpr 0x1bd89ef7800 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |   | | `-ImplicitCastExpr 0x1bd89ef78a8 <col:39> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | |   `-DeclRefExpr 0x1bd89ef7870 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0bd8 'max_len' 'size_t':'unsigned long long'
|   |           |   | `-BinaryOperator 0x1bd89ef79a8 <line:611:25, col:45> 'size_t':'unsigned long long' '='
|   |           |   |   |-DeclRefExpr 0x1bd89ef78e0 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0bd8 'max_len' 'size_t':'unsigned long long'
|   |           |   |   `-ImplicitCastExpr 0x1bd89ef7990 <col:35, col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |     `-ArraySubscriptExpr 0x1bd89ef7970 <col:35, col:45> 'size_t':'unsigned long long' lvalue
|   |           |   |       |-ImplicitCastExpr 0x1bd89ef7940 <col:35> 'size_t *' <LValueToRValue>
|   |           |   |       | `-DeclRefExpr 0x1bd89ef7900 <col:35> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   |           |   |       `-ImplicitCastExpr 0x1bd89ef7958 <col:44> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   |         `-DeclRefExpr 0x1bd89ef7920 <col:44> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |   |-IfStmt 0x1bd89ef7b70 <line:613:21, line:617:21>
|   |           |   | |-OpaqueValueExpr 0x1bd89ef7b58 <<invalid sloc>> '_Bool'
|   |           |   | `-CompoundStmt 0x1bd89ef7b38 <line:613:46, line:617:21>
|   |           |   |   |-CallExpr 0x1bd89ef7ae0 <line:615:25, col:46> 'int'
|   |           |   |   | |-ImplicitCastExpr 0x1bd89ef7ac8 <col:25> 'int (*)()' <FunctionToPointerDecay>
|   |           |   |   | | `-DeclRefExpr 0x1bd89ef7a88 <col:25> 'int ()' Function 0x1bd89eea4f8 'OPENSSL_free' 'int ()'
|   |           |   |   | `-ImplicitCastExpr 0x1bd89ef7b08 <col:38> 'signed char *' <LValueToRValue>
|   |           |   |   |   `-DeclRefExpr 0x1bd89ef7aa8 <col:38> 'signed char *' lvalue Var 0x1bd89ef5620 'tmp_wNAF' 'signed char *'
|   |           |   |   `-GotoStmt 0x1bd89ef7b20 <line:616:25, col:30> 'err' 0x1bd89ef1eb0
|   |           |   `-CompoundAssignOperator 0x1bd89ef7c20 <line:620:21, col:27> 'signed char *' '+=' ComputeLHSTy='signed char *' ComputeResultTy='signed char *'
|   |           |     |-DeclRefExpr 0x1bd89ef7bc8 <col:21> 'signed char *' lvalue Var 0x1bd89ef6220 'pp' 'signed char *'
|   |           |     `-ImplicitCastExpr 0x1bd89ef7c08 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |       `-DeclRefExpr 0x1bd89ef7be8 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0238 'blocksize' 'size_t':'unsigned long long'
|   |           `-CallExpr 0x1bd89ef7d30 <line:622:17, col:38> 'int'
|   |             |-ImplicitCastExpr 0x1bd89ef7d18 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |             | `-DeclRefExpr 0x1bd89ef7cd8 <col:17> 'int ()' Function 0x1bd89eea4f8 'OPENSSL_free' 'int ()'
|   |             `-ImplicitCastExpr 0x1bd89ef7d58 <col:30> 'signed char *' <LValueToRValue>
|   |               `-DeclRefExpr 0x1bd89ef7cf8 <col:30> 'signed char *' lvalue Var 0x1bd89ef5620 'tmp_wNAF' 'signed char *'
|   |-IfStmt 0x1bd89ef88d8 <line:633:5, line:636:5>
|   | |-OpaqueValueExpr 0x1bd89ef88c0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89ef88a8 <line:633:22, line:636:5>
|   |   `-GotoStmt 0x1bd89ef8890 <line:635:9, col:14> 'err' 0x1bd89ef1eb0
|   |-ForStmt 0x1bd89ef8fb8 <line:641:5, line:649:5>
|   | |-BinaryOperator 0x1bd89ef89f8 <line:641:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1bd89ef8998 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1bd89ef89e0 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1bd89ef89b8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1bd89ef8af8 <col:17, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x1bd89ef8ae0 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89ef8a18 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x1bd89ef8ac0 <col:21, col:27> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x1bd89ef8a78 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1bd89ef8a38 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1bd89ef8aa8 <col:27> 'unsigned long long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1bd89ef8a90 <col:27> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1bd89ef8a58 <col:27> 'int' lvalue Var 0x1bd89ef0fe0 'num_scalar' 'int'
|   | |-UnaryOperator 0x1bd89ef8b38 <col:39, col:40> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1bd89ef8b18 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1bd89ef8fa0 <col:44, line:649:5>
|   |   `-ForStmt 0x1bd89ef8f68 <line:643:9, line:648:9>
|   |     |-BinaryOperator 0x1bd89ef8be8 <line:643:14, col:18> 'size_t':'unsigned long long' '='
|   |     | |-DeclRefExpr 0x1bd89ef8b70 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0520 'j' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1bd89ef8bd0 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1bd89ef8ba8 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1bd89ef8e08 <col:21, col:53> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1bd89ef8df0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1bd89ef8c08 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0520 'j' 'size_t':'unsigned long long'
|   |     | `-ParenExpr 0x1bd89ef8dd0 <col:25, col:53> 'size_t':'unsigned long long'
|   |     |   `-BinaryOperator 0x1bd89ef8db0 <col:26, col:52> 'size_t':'unsigned long long' '<<'
|   |     |     |-CStyleCastExpr 0x1bd89ef8c60 <col:26, col:34> 'size_t':'unsigned long long' <IntegralCast>
|   |     |     | `-IntegerLiteral 0x1bd89ef8c28 <col:34> 'int' 1
|   |     |     `-ParenExpr 0x1bd89ef8d90 <col:39, col:52> 'unsigned long long'
|   |     |       `-BinaryOperator 0x1bd89ef8d70 <col:40, col:51> 'unsigned long long' '-'
|   |     |         |-ImplicitCastExpr 0x1bd89ef8d40 <col:40, col:47> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |         | `-ArraySubscriptExpr 0x1bd89ef8cf8 <col:40, col:47> 'size_t':'unsigned long long' lvalue
|   |     |         |   |-ImplicitCastExpr 0x1bd89ef8cc8 <col:40> 'size_t *' <LValueToRValue>
|   |     |         |   | `-DeclRefExpr 0x1bd89ef8c88 <col:40> 'size_t *' lvalue Var 0x1bd89ef07e0 'wsize' 'size_t *'
|   |     |         |   `-ImplicitCastExpr 0x1bd89ef8ce0 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |         |     `-DeclRefExpr 0x1bd89ef8ca8 <col:46> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |     |         `-ImplicitCastExpr 0x1bd89ef8d58 <col:51> 'unsigned long long' <IntegralCast>
|   |     |           `-IntegerLiteral 0x1bd89ef8d18 <col:51> 'int' 1
|   |     |-UnaryOperator 0x1bd89ef8e48 <col:56, col:57> 'size_t':'unsigned long long' postfix '++'
|   |     | `-DeclRefExpr 0x1bd89ef8e28 <col:56> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0520 'j' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x1bd89ef8f50 <col:61, line:648:9>
|   |       `-IfStmt 0x1bd89ef8f38 <line:645:13, line:646:22>
|   |         |-OpaqueValueExpr 0x1bd89ef8f20 <<invalid sloc>> '_Bool'
|   |         `-GotoStmt 0x1bd89ef8f08 <col:17, col:22> 'err' 0x1bd89ef1eb0
|   |-IfStmt 0x1bd89ef9078 <line:650:5, line:653:5>
|   | |-OpaqueValueExpr 0x1bd89ef9060 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89ef9048 <line:650:32, line:653:5>
|   |   `-GotoStmt 0x1bd89ef9030 <line:652:9, col:14> 'err' 0x1bd89ef1eb0
|   |-IfStmt 0x1bd89ef9168 <line:655:5, line:656:14>
|   | |-OpaqueValueExpr 0x1bd89ef9150 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89ef9138 <col:9, col:14> 'err' 0x1bd89ef1eb0
|   |-ForStmt 0x1bd89ef9c38 <line:665:5, line:683:5>
|   | |-BinaryOperator 0x1bd89ef91e0 <line:665:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1bd89ef9180 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1bd89ef91c8 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1bd89ef91a0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1bd89ef92e0 <col:17, col:27> 'int' '<'
|   | | |-ImplicitCastExpr 0x1bd89ef92c8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89ef9200 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | | `-BinaryOperator 0x1bd89ef92a8 <col:21, col:27> 'unsigned long long' '+'
|   | |   |-ImplicitCastExpr 0x1bd89ef9260 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1bd89ef9220 <col:21> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   | |   `-ImplicitCastExpr 0x1bd89ef9290 <col:27> 'unsigned long long' <IntegralCast>
|   | |     `-ImplicitCastExpr 0x1bd89ef9278 <col:27> 'int' <LValueToRValue>
|   | |       `-DeclRefExpr 0x1bd89ef9240 <col:27> 'int' lvalue Var 0x1bd89ef0fe0 'num_scalar' 'int'
|   | |-UnaryOperator 0x1bd89ef9320 <col:39, col:40> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1bd89ef9300 <col:39> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1bd89ef9c18 <col:44, line:683:5>
|   |   |-IfStmt 0x1bd89ef9578 <line:666:9, line:672:9> has_else
|   |   | |-BinaryOperator 0x1bd89ef93a8 <line:666:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1bd89ef9378 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1bd89ef9338 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x1bd89ef9390 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1bd89ef9358 <col:17> 'size_t':'unsigned long long' lvalue ParmVar 0x1bd89eefbf8 'num' 'size_t':'unsigned long long'
|   |   | |-CompoundStmt 0x1bd89ef9498 <col:22, line:669:9>
|   |   | | `-IfStmt 0x1bd89ef9480 <line:667:13, line:668:22>
|   |   | |   |-OpaqueValueExpr 0x1bd89ef9468 <<invalid sloc>> '_Bool'
|   |   | |   `-GotoStmt 0x1bd89ef9450 <col:17, col:22> 'err' 0x1bd89ef1eb0
|   |   | `-CompoundStmt 0x1bd89ef9560 <line:669:16, line:672:9>
|   |   |   `-IfStmt 0x1bd89ef9548 <line:670:13, line:671:22>
|   |   |     |-OpaqueValueExpr 0x1bd89ef9530 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x1bd89ef9518 <col:17, col:22> 'err' 0x1bd89ef1eb0
|   |   `-IfStmt 0x1bd89ef9c00 <line:674:9, line:682:9>
|   |     |-BinaryOperator 0x1bd89ef9688 <line:674:13, col:24> 'int' '>'
|   |     | |-ImplicitCastExpr 0x1bd89ef9658 <col:13, col:20> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-ArraySubscriptExpr 0x1bd89ef9610 <col:13, col:20> 'size_t':'unsigned long long' lvalue
|   |     | |   |-ImplicitCastExpr 0x1bd89ef95e0 <col:13> 'size_t *' <LValueToRValue>
|   |     | |   | `-DeclRefExpr 0x1bd89ef95a0 <col:13> 'size_t *' lvalue Var 0x1bd89ef07e0 'wsize' 'size_t *'
|   |     | |   `-ImplicitCastExpr 0x1bd89ef95f8 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x1bd89ef95c0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1bd89ef9670 <col:24> 'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1bd89ef9630 <col:24> 'int' 1
|   |     `-CompoundStmt 0x1bd89ef9be0 <col:27, line:682:9>
|   |       |-IfStmt 0x1bd89ef9740 <line:675:13, line:676:22>
|   |       | |-OpaqueValueExpr 0x1bd89ef9728 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x1bd89ef9710 <col:17, col:22> 'err' 0x1bd89ef1eb0
|   |       `-ForStmt 0x1bd89ef9ba8 <line:677:13, line:681:13>
|   |         |-BinaryOperator 0x1bd89ef97b8 <line:677:18, col:22> 'size_t':'unsigned long long' '='
|   |         | |-DeclRefExpr 0x1bd89ef9758 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0520 'j' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x1bd89ef97a0 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1bd89ef9778 <col:22> 'int' 1
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x1bd89ef99d8 <col:25, col:57> 'int' '<'
|   |         | |-ImplicitCastExpr 0x1bd89ef99c0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1bd89ef97d8 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0520 'j' 'size_t':'unsigned long long'
|   |         | `-ParenExpr 0x1bd89ef99a0 <col:29, col:57> 'size_t':'unsigned long long'
|   |         |   `-BinaryOperator 0x1bd89ef9980 <col:30, col:56> 'size_t':'unsigned long long' '<<'
|   |         |     |-CStyleCastExpr 0x1bd89ef9830 <col:30, col:38> 'size_t':'unsigned long long' <IntegralCast>
|   |         |     | `-IntegerLiteral 0x1bd89ef97f8 <col:38> 'int' 1
|   |         |     `-ParenExpr 0x1bd89ef9960 <col:43, col:56> 'unsigned long long'
|   |         |       `-BinaryOperator 0x1bd89ef9940 <col:44, col:55> 'unsigned long long' '-'
|   |         |         |-ImplicitCastExpr 0x1bd89ef9910 <col:44, col:51> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |         | `-ArraySubscriptExpr 0x1bd89ef98c8 <col:44, col:51> 'size_t':'unsigned long long' lvalue
|   |         |         |   |-ImplicitCastExpr 0x1bd89ef9898 <col:44> 'size_t *' <LValueToRValue>
|   |         |         |   | `-DeclRefExpr 0x1bd89ef9858 <col:44> 'size_t *' lvalue Var 0x1bd89ef07e0 'wsize' 'size_t *'
|   |         |         |   `-ImplicitCastExpr 0x1bd89ef98b0 <col:50> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |         |     `-DeclRefExpr 0x1bd89ef9878 <col:50> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |         |         `-ImplicitCastExpr 0x1bd89ef9928 <col:55> 'unsigned long long' <IntegralCast>
|   |         |           `-IntegerLiteral 0x1bd89ef98e8 <col:55> 'int' 1
|   |         |-UnaryOperator 0x1bd89ef9a18 <col:60, col:61> 'size_t':'unsigned long long' postfix '++'
|   |         | `-DeclRefExpr 0x1bd89ef99f8 <col:60> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0520 'j' 'size_t':'unsigned long long'
|   |         `-CompoundStmt 0x1bd89ef9b90 <col:65, line:681:13>
|   |           `-IfStmt 0x1bd89ef9b78 <line:678:17, line:680:26>
|   |             |-OpaqueValueExpr 0x1bd89ef9b60 <<invalid sloc>> '_Bool'
|   |             `-GotoStmt 0x1bd89ef9b48 <col:21, col:26> 'err' 0x1bd89ef1eb0
|   |-IfStmt 0x1bd89ef9dd0 <line:685:5, line:686:14>
|   | |-OpaqueValueExpr 0x1bd89ef9db8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89ef9da0 <col:9, col:14> 'err' 0x1bd89ef1eb0
|   |-BinaryOperator 0x1bd89ef9e48 <line:688:5, col:24> 'int' '='
|   | |-DeclRefExpr 0x1bd89ef9de8 <col:5> 'int' lvalue Var 0x1bd89ef0728 'r_is_at_infinity' 'int'
|   | `-IntegerLiteral 0x1bd89ef9e20 <col:24> 'int' 1
|   |-ForStmt 0x1bd89efaf58 <line:690:5, line:729:5>
|   | |-BinaryOperator 0x1bd89ef9f50 <line:690:10, col:24> 'int' '='
|   | | |-DeclRefExpr 0x1bd89ef9e68 <col:10> 'int' lvalue Var 0x1bd89ef05d0 'k' 'int'
|   | | `-ImplicitCastExpr 0x1bd89ef9f38 <col:14, col:24> 'int' <IntegralCast>
|   | |   `-BinaryOperator 0x1bd89ef9f18 <col:14, col:24> 'unsigned long long' '-'
|   | |     |-ImplicitCastExpr 0x1bd89ef9ee8 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1bd89ef9ea0 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef0bd8 'max_len' 'size_t':'unsigned long long'
|   | |     `-ImplicitCastExpr 0x1bd89ef9f00 <col:24> 'unsigned long long' <IntegralCast>
|   | |       `-IntegerLiteral 0x1bd89ef9ec0 <col:24> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1bd89ef9fd0 <col:27, col:32> 'int' '>='
|   | | |-ImplicitCastExpr 0x1bd89ef9fb8 <col:27> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89ef9f70 <col:27> 'int' lvalue Var 0x1bd89ef05d0 'k' 'int'
|   | | `-IntegerLiteral 0x1bd89ef9f90 <col:32> 'int' 0
|   | |-UnaryOperator 0x1bd89efa010 <col:35, col:36> 'int' postfix '--'
|   | | `-DeclRefExpr 0x1bd89ef9ff0 <col:35> 'int' lvalue Var 0x1bd89ef05d0 'k' 'int'
|   | `-CompoundStmt 0x1bd89efaf38 <col:40, line:729:5>
|   |   |-IfStmt 0x1bd89efa0f8 <line:691:9, line:694:9>
|   |   | |-UnaryOperator 0x1bd89efa060 <line:691:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x1bd89efa048 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1bd89efa028 <col:14> 'int' lvalue Var 0x1bd89ef0728 'r_is_at_infinity' 'int'
|   |   | `-CompoundStmt 0x1bd89efa0e0 <col:32, line:694:9>
|   |   |   `-IfStmt 0x1bd89efa0c8 <line:692:13, line:693:22>
|   |   |     |-OpaqueValueExpr 0x1bd89efa0b0 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x1bd89efa098 <col:17, col:22> 'err' 0x1bd89ef1eb0
|   |   `-ForStmt 0x1bd89efaf00 <line:696:9, line:728:9>
|   |     |-BinaryOperator 0x1bd89efa170 <line:696:14, col:18> 'size_t':'unsigned long long' '='
|   |     | |-DeclRefExpr 0x1bd89efa110 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1bd89efa158 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |     |   `-IntegerLiteral 0x1bd89efa130 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x1bd89efa200 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1bd89efa1d0 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1bd89efa190 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1bd89efa1e8 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1bd89efa1b0 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef01a8 'totalnum' 'size_t':'unsigned long long'
|   |     |-UnaryOperator 0x1bd89efa240 <col:35, col:36> 'size_t':'unsigned long long' postfix '++'
|   |     | `-DeclRefExpr 0x1bd89efa220 <col:35> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |     `-CompoundStmt 0x1bd89efaee8 <col:40, line:728:9>
|   |       `-IfStmt 0x1bd89efaed0 <line:697:13, line:727:13>
|   |         |-BinaryOperator 0x1bd89efa370 <line:697:17, col:39> 'int' '>'
|   |         | |-ImplicitCastExpr 0x1bd89efa358 <col:17, col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-ArraySubscriptExpr 0x1bd89efa2c8 <col:17, col:27> 'size_t':'unsigned long long' lvalue
|   |         | |   |-ImplicitCastExpr 0x1bd89efa298 <col:17> 'size_t *' <LValueToRValue>
|   |         | |   | `-DeclRefExpr 0x1bd89efa258 <col:17> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   |         | |   `-ImplicitCastExpr 0x1bd89efa2b0 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | |     `-DeclRefExpr 0x1bd89efa278 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |         | `-CStyleCastExpr 0x1bd89efa330 <col:31, col:39> 'size_t':'unsigned long long' <IntegralCast>
|   |         |   `-ImplicitCastExpr 0x1bd89efa318 <col:39> 'int' <LValueToRValue> part_of_explicit_cast
|   |         |     `-DeclRefExpr 0x1bd89efa2e8 <col:39> 'int' lvalue Var 0x1bd89ef05d0 'k' 'int'
|   |         `-CompoundStmt 0x1bd89efaea8 <col:42, line:727:13>
|   |           |-DeclStmt 0x1bd89efa540 <line:698:17, col:39>
|   |           | `-VarDecl 0x1bd89efa3a8 <col:17, col:38> col:21 used digit 'int' cinit
|   |           |   `-ImplicitCastExpr 0x1bd89efa528 <col:29, col:38> 'int' <IntegralCast>
|   |           |     `-ImplicitCastExpr 0x1bd89efa510 <col:29, col:38> 'signed char' <LValueToRValue>
|   |           |       `-ArraySubscriptExpr 0x1bd89efa4f0 <col:29, col:38> 'signed char' lvalue
|   |           |         |-ImplicitCastExpr 0x1bd89efa4c0 <col:29, col:35> 'signed char *' <LValueToRValue>
|   |           |         | `-ArraySubscriptExpr 0x1bd89efa480 <col:29, col:35> 'signed char *' lvalue
|   |           |         |   |-ImplicitCastExpr 0x1bd89efa450 <col:29> 'signed char **' <LValueToRValue>
|   |           |         |   | `-DeclRefExpr 0x1bd89efa410 <col:29> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |           |         |   `-ImplicitCastExpr 0x1bd89efa468 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |         |     `-DeclRefExpr 0x1bd89efa430 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1bd89ef04a8 'i' 'size_t':'unsigned long long'
|   |           |         `-ImplicitCastExpr 0x1bd89efa4d8 <col:37> 'int' <LValueToRValue>
|   |           |           `-DeclRefExpr 0x1bd89efa4a0 <col:37> 'int' lvalue Var 0x1bd89ef05d0 'k' 'int'
|   |           |-DeclStmt 0x1bd89efa5d8 <line:699:17, col:27>
|   |           | `-VarDecl 0x1bd89efa570 <col:17, col:21> col:21 used is_neg 'int'
|   |           `-IfStmt 0x1bd89efae90 <line:701:17, line:726:17>
|   |             |-ImplicitCastExpr 0x1bd89efa628 <line:701:21> 'int' <LValueToRValue>
|   |             | `-DeclRefExpr 0x1bd89efa5f0 <col:21> 'int' lvalue Var 0x1bd89efa3a8 'digit' 'int'
|   |             `-CompoundStmt 0x1bd89efae60 <col:28, line:726:17>
|   |               |-BinaryOperator 0x1bd89efa6f8 <line:702:21, col:38> 'int' '='
|   |               | |-DeclRefExpr 0x1bd89efa640 <col:21> 'int' lvalue Var 0x1bd89efa570 'is_neg' 'int'
|   |               | `-BinaryOperator 0x1bd89efa6d8 <col:30, col:38> 'int' '<'
|   |               |   |-ImplicitCastExpr 0x1bd89efa6c0 <col:30> 'int' <LValueToRValue>
|   |               |   | `-DeclRefExpr 0x1bd89efa678 <col:30> 'int' lvalue Var 0x1bd89efa3a8 'digit' 'int'
|   |               |   `-IntegerLiteral 0x1bd89efa698 <col:38> 'int' 0
|   |               |-IfStmt 0x1bd89efa7e0 <line:704:21, line:705:34>
|   |               | |-ImplicitCastExpr 0x1bd89efa738 <line:704:25> 'int' <LValueToRValue>
|   |               | | `-DeclRefExpr 0x1bd89efa718 <col:25> 'int' lvalue Var 0x1bd89efa570 'is_neg' 'int'
|   |               | `-BinaryOperator 0x1bd89efa7c0 <line:705:25, col:34> 'int' '='
|   |               |   |-DeclRefExpr 0x1bd89efa750 <col:25> 'int' lvalue Var 0x1bd89efa3a8 'digit' 'int'
|   |               |   `-UnaryOperator 0x1bd89efa7a8 <col:33, col:34> 'int' prefix '-'
|   |               |     `-ImplicitCastExpr 0x1bd89efa790 <col:34> 'int' <LValueToRValue>
|   |               |       `-DeclRefExpr 0x1bd89efa770 <col:34> 'int' lvalue Var 0x1bd89efa3a8 'digit' 'int'
|   |               |-IfStmt 0x1bd89efab38 <line:707:21, line:713:21>
|   |               | |-BinaryOperator 0x1bd89efa890 <line:707:25, col:35> 'int' '!='
|   |               | | |-ImplicitCastExpr 0x1bd89efa860 <col:25> 'int' <LValueToRValue>
|   |               | | | `-DeclRefExpr 0x1bd89efa7f8 <col:25> 'int' lvalue Var 0x1bd89efa570 'is_neg' 'int'
|   |               | | `-ImplicitCastExpr 0x1bd89efa878 <col:35> 'int' <LValueToRValue>
|   |               | |   `-DeclRefExpr 0x1bd89efa818 <col:35> 'int' lvalue Var 0x1bd89ef0668 'r_is_inverted' 'int'
|   |               | `-CompoundStmt 0x1bd89efab18 <col:50, line:713:21>
|   |               |   |-IfStmt 0x1bd89efaa70 <line:708:25, line:711:25>
|   |               |   | |-UnaryOperator 0x1bd89efa8e8 <line:708:29, col:30> 'int' prefix '!' cannot overflow
|   |               |   | | `-ImplicitCastExpr 0x1bd89efa8d0 <col:30> 'int' <LValueToRValue>
|   |               |   | |   `-DeclRefExpr 0x1bd89efa8b0 <col:30> 'int' lvalue Var 0x1bd89ef0728 'r_is_at_infinity' 'int'
|   |               |   | `-CompoundStmt 0x1bd89efaa58 <col:48, line:711:25>
|   |               |   |   `-IfStmt 0x1bd89efaa40 <line:709:29, line:710:38>
|   |               |   |     |-OpaqueValueExpr 0x1bd89efaa28 <<invalid sloc>> '_Bool'
|   |               |   |     `-GotoStmt 0x1bd89efaa10 <col:33, col:38> 'err' 0x1bd89ef1eb0
|   |               |   `-BinaryOperator 0x1bd89efaaf8 <line:712:25, col:42> 'int' '='
|   |               |     |-DeclRefExpr 0x1bd89efaa88 <col:25> 'int' lvalue Var 0x1bd89ef0668 'r_is_inverted' 'int'
|   |               |     `-UnaryOperator 0x1bd89efaae0 <col:41, col:42> 'int' prefix '!' cannot overflow
|   |               |       `-ImplicitCastExpr 0x1bd89efaac8 <col:42> 'int' <LValueToRValue>
|   |               |         `-DeclRefExpr 0x1bd89efaaa8 <col:42> 'int' lvalue Var 0x1bd89ef0668 'r_is_inverted' 'int'
|   |               `-IfStmt 0x1bd89efae38 <line:717:21, line:725:21> has_else
|   |                 |-ImplicitCastExpr 0x1bd89efab70 <line:717:25> 'int' <LValueToRValue>
|   |                 | `-DeclRefExpr 0x1bd89efab50 <col:25> 'int' lvalue Var 0x1bd89ef0728 'r_is_at_infinity' 'int'
|   |                 |-CompoundStmt 0x1bd89efacf8 <col:43, line:721:21>
|   |                 | |-IfStmt 0x1bd89efac78 <line:718:25, line:719:34>
|   |                 | | |-OpaqueValueExpr 0x1bd89efac60 <<invalid sloc>> '_Bool'
|   |                 | | `-GotoStmt 0x1bd89efac48 <col:29, col:34> 'err' 0x1bd89ef1eb0
|   |                 | `-BinaryOperator 0x1bd89efacd8 <line:720:25, col:44> 'int' '='
|   |                 |   |-DeclRefExpr 0x1bd89efac90 <col:25> 'int' lvalue Var 0x1bd89ef0728 'r_is_at_infinity' 'int'
|   |                 |   `-IntegerLiteral 0x1bd89efacb0 <col:44> 'int' 0
|   |                 `-CompoundStmt 0x1bd89efae20 <line:721:28, line:725:21>
|   |                   `-IfStmt 0x1bd89efae08 <line:722:25, line:724:34>
|   |                     |-OpaqueValueExpr 0x1bd89efadf0 <<invalid sloc>> '_Bool'
|   |                     `-GotoStmt 0x1bd89efadd8 <col:29, col:34> 'err' 0x1bd89ef1eb0
|   |-IfStmt 0x1bd89efb118 <line:731:5, line:738:5> has_else
|   | |-ImplicitCastExpr 0x1bd89efafb0 <line:731:9> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1bd89efaf90 <col:9> 'int' lvalue Var 0x1bd89ef0728 'r_is_at_infinity' 'int'
|   | |-CompoundStmt 0x1bd89efb030 <col:27, line:734:5>
|   | | `-IfStmt 0x1bd89efb018 <line:732:9, line:733:18>
|   | |   |-OpaqueValueExpr 0x1bd89efb000 <<invalid sloc>> '_Bool'
|   | |   `-GotoStmt 0x1bd89efafe8 <col:13, col:18> 'err' 0x1bd89ef1eb0
|   | `-CompoundStmt 0x1bd89efb100 <line:734:12, line:738:5>
|   |   `-IfStmt 0x1bd89efb0e8 <line:735:9, line:737:22>
|   |     |-ImplicitCastExpr 0x1bd89efb068 <line:735:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x1bd89efb048 <col:13> 'int' lvalue Var 0x1bd89ef0668 'r_is_inverted' 'int'
|   |     `-IfStmt 0x1bd89efb0d0 <line:736:13, line:737:22>
|   |       |-OpaqueValueExpr 0x1bd89efb0b8 <<invalid sloc>> '_Bool'
|   |       `-GotoStmt 0x1bd89efb0a0 <col:17, col:22> 'err' 0x1bd89ef1eb0
|   |-BinaryOperator 0x1bd89efb1a0 <line:740:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1bd89efb140 <col:5> 'int' lvalue Var 0x1bd89ef10a0 'ret' 'int'
|   | `-IntegerLiteral 0x1bd89efb178 <col:11> 'int' 1
|   |-LabelStmt 0x1bd89efb1e8 <line:742:2, col:5> 'err'
|   | `-NullStmt 0x1bd89efb1e0 <col:5>
|   |-CallExpr 0x1bd89efb278 <line:745:5, col:23> 'int'
|   | |-ImplicitCastExpr 0x1bd89efb260 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1bd89efb220 <col:5> 'int ()' Function 0x1bd89eea4f8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1bd89efb2a0 <col:18> 'size_t *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bd89efb240 <col:18> 'size_t *' lvalue Var 0x1bd89ef07e0 'wsize' 'size_t *'
|   |-CallExpr 0x1bd89efb310 <line:746:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x1bd89efb2f8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1bd89efb2b8 <col:5> 'int ()' Function 0x1bd89eea4f8 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1bd89efb338 <col:18> 'size_t *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bd89efb2d8 <col:18> 'size_t *' lvalue Var 0x1bd89ef0aa8 'wNAF_len' 'size_t *'
|   |-IfStmt 0x1bd89efb898 <line:747:5, line:754:5>
|   | |-BinaryOperator 0x1bd89efb428 <line:747:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   | | |-ImplicitCastExpr 0x1bd89efb3f8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:747:9> 'signed char **' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89efb350 <col:9> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   | | `-ImplicitCastExpr 0x1bd89efb410 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char **' <BitCast>
|   | |   `-ParenExpr 0x1bd89efb3d8 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1bd89efb3b0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1bd89efb370 <col:26> 'int' 0
|   | `-CompoundStmt 0x1bd89efb870 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:747:23, line:754:5>
|   |   |-DeclStmt 0x1bd89efb4d0 <line:748:9, col:24>
|   |   | `-VarDecl 0x1bd89efb468 <col:9, col:23> col:23 used w 'signed char **'
|   |   |-ForStmt 0x1bd89efb7a0 <line:750:9, line:751:28>
|   |   | |-BinaryOperator 0x1bd89efb558 <line:750:14, col:18> 'signed char **' '='
|   |   | | |-DeclRefExpr 0x1bd89efb4e8 <col:14> 'signed char **' lvalue Var 0x1bd89efb468 'w' 'signed char **'
|   |   | | `-ImplicitCastExpr 0x1bd89efb540 <col:18> 'signed char **' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1bd89efb520 <col:18> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1bd89efb680 <col:24, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |   | | |-ImplicitCastExpr 0x1bd89efb650 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:750:24, col:25> 'signed char *' <LValueToRValue>
|   |   | | | `-UnaryOperator 0x1bd89efb5b0 <col:24, col:25> 'signed char *' lvalue prefix '*' cannot overflow
|   |   | | |   `-ImplicitCastExpr 0x1bd89efb598 <col:25> 'signed char **' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1bd89efb578 <col:25> 'signed char **' lvalue Var 0x1bd89efb468 'w' 'signed char **'
|   |   | | `-ImplicitCastExpr 0x1bd89efb668 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'signed char *' <BitCast>
|   |   | |   `-ParenExpr 0x1bd89efb630 <col:17, col:27> 'void *'
|   |   | |     `-CStyleCastExpr 0x1bd89efb608 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |       `-IntegerLiteral 0x1bd89efb5c8 <col:26> 'int' 0
|   |   | |-UnaryOperator 0x1bd89efb6c0 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:750:36, col:37> 'signed char **' postfix '++'
|   |   | | `-DeclRefExpr 0x1bd89efb6a0 <col:36> 'signed char **' lvalue Var 0x1bd89efb468 'w' 'signed char **'
|   |   | `-CallExpr 0x1bd89efb760 <line:751:13, col:28> 'int'
|   |   |   |-ImplicitCastExpr 0x1bd89efb748 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x1bd89efb6d8 <col:13> 'int ()' Function 0x1bd89eea4f8 'OPENSSL_free' 'int ()'
|   |   |   `-ImplicitCastExpr 0x1bd89efb788 <col:26, col:27> 'signed char *' <LValueToRValue>
|   |   |     `-UnaryOperator 0x1bd89efb730 <col:26, col:27> 'signed char *' lvalue prefix '*' cannot overflow
|   |   |       `-ImplicitCastExpr 0x1bd89efb718 <col:27> 'signed char **' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1bd89efb6f8 <col:27> 'signed char **' lvalue Var 0x1bd89efb468 'w' 'signed char **'
|   |   `-CallExpr 0x1bd89efb830 <line:753:9, col:26> 'int'
|   |     |-ImplicitCastExpr 0x1bd89efb818 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1bd89efb7d8 <col:9> 'int ()' Function 0x1bd89eea4f8 'OPENSSL_free' 'int ()'
|   |     `-ImplicitCastExpr 0x1bd89efb858 <col:22> 'signed char **' <LValueToRValue>
|   |       `-DeclRefExpr 0x1bd89efb7f8 <col:22> 'signed char **' lvalue Var 0x1bd89ef0978 'wNAF' 'signed char **'
|   |-IfStmt 0x1bd89efba28 <line:755:5, line:760:5>
|   | |-OpaqueValueExpr 0x1bd89efba10 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89efba00 <line:755:22, line:760:5>
|   `-ReturnStmt 0x1bd89efba98 <line:762:5, col:12>
|     `-ImplicitCastExpr 0x1bd89efba80 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1bd89efba60 <col:12> 'int' lvalue Var 0x1bd89ef10a0 'ret' 'int'
|-FunctionDecl 0x1bd89efbd68 <line:785:1, line:936:1> line:785:5 invalid ec_wNAF_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1bd89efbc48 <col:29, col:39> col:39 invalid group 'int *'
| |-ParmVarDecl 0x1bd89efbcc8 <col:46, col:54> col:54 invalid ctx 'int *'
| `-CompoundStmt 0x1bd89f444c0 <line:786:1, line:936:1>
|   |-DeclStmt 0x1bd89efbeb0 <line:787:5, col:30>
|   | `-VarDecl 0x1bd89efbe48 <col:5, col:21> col:21 invalid generator 'const int *'
|   |-DeclStmt 0x1bd89efc0e0 <line:790:5, col:24>
|   | `-VarDecl 0x1bd89efc078 <col:5, col:19> col:19 invalid order 'const int *'
|   |-DeclStmt 0x1bd89efc480 <line:791:5, col:71>
|   | |-VarDecl 0x1bd89efc108 <col:5, col:12> col:12 used i 'size_t':'unsigned long long'
|   | |-VarDecl 0x1bd89efc180 <col:5, col:15> col:15 used bits 'size_t':'unsigned long long'
|   | |-VarDecl 0x1bd89efc1f8 <col:5, col:21> col:21 used w 'size_t':'unsigned long long'
|   | |-VarDecl 0x1bd89efc270 <col:5, col:24> col:24 used pre_points_per_block 'size_t':'unsigned long long'
|   | |-VarDecl 0x1bd89efc2e8 <col:5, col:46> col:46 used blocksize 'size_t':'unsigned long long'
|   | |-VarDecl 0x1bd89efc360 <col:5, col:57> col:57 used numblocks 'size_t':'unsigned long long'
|   | `-VarDecl 0x1bd89efc3d8 <col:5, col:68> col:68 used num 'size_t':'unsigned long long'
|   |-DeclStmt 0x1bd89efc598 <line:793:5, col:26>
|   | `-VarDecl 0x1bd89efc530 <col:5, col:18> col:18 used pre_comp 'EC_PRE_COMP *'
|   |-DeclStmt 0x1bd89efc658 <line:794:5, col:16>
|   | `-VarDecl 0x1bd89efc5c8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1bd89efc630 <col:15> 'int' 0
|   |-IfStmt 0x1bd89efc780 <line:798:5, line:799:16>
|   | |-OpaqueValueExpr 0x1bd89efc768 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1bd89efc758 <col:9, col:16>
|   |   `-IntegerLiteral 0x1bd89efc730 <col:16> 'int' 0
|   |-IfStmt 0x1bd89efc908 <line:802:5, line:805:5>
|   | |-OpaqueValueExpr 0x1bd89efc8f0 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89efc8d8 <line:802:28, line:805:5>
|   |   `-GotoStmt 0x1bd89efc8c0 <line:804:9, col:14> 'err' 0x1bd89efc870
|   |-IfStmt 0x1bd89efcb00 <line:807:5, line:811:5>
|   | |-OpaqueValueExpr 0x1bd89efcae8 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89efcad0 <line:807:22, line:811:5>
|   |   `-IfStmt 0x1bd89efcab8 <line:809:9, line:810:18>
|   |     |-OpaqueValueExpr 0x1bd89efcaa0 <<invalid sloc>> '_Bool'
|   |     `-GotoStmt 0x1bd89efca88 <col:13, col:18> 'err' 0x1bd89efc870
|   |-IfStmt 0x1bd89efcd00 <line:816:5, line:817:14>
|   | |-OpaqueValueExpr 0x1bd89efcce8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89efccd0 <col:9, col:14> 'err' 0x1bd89efc870
|   |-IfStmt 0x1bd89efcda0 <line:818:5, line:821:5>
|   | |-OpaqueValueExpr 0x1bd89efcd88 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89efcd70 <line:818:28, line:821:5>
|   |   `-GotoStmt 0x1bd89efcd58 <line:820:9, col:14> 'err' 0x1bd89efc870
|   |-BinaryOperator 0x1bd89efce88 <line:830:5, col:17> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1bd89efce10 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc2e8 'blocksize' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1bd89efce70 <col:17> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1bd89efce48 <col:17> 'int' 8
|   |-BinaryOperator 0x1bd89efcf20 <line:831:5, col:9> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1bd89efcea8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc1f8 'w' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1bd89efcf08 <col:9> 'size_t':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x1bd89efcee0 <col:9> 'int' 4
|   |-IfStmt 0x1bd89efdc10 <line:832:5, line:835:5>
|   | |-BinaryOperator 0x1bd89efd588 <line:343:17, line:832:48> 'int' '>'
|   | | |-ParenExpr 0x1bd89efd530 <line:343:17, line:349:21> 'size_t':'unsigned long long'
|   | | | `-CStyleCastExpr 0x1bd89efd508 <line:343:18, line:349:20> 'size_t':'unsigned long long' <IntegralCast>
|   | | |   `-ParenExpr 0x1bd89efd4e8 <line:344:18, line:349:20> 'int'
|   | | |     `-ConditionalOperator 0x1bd89efd488 <line:344:19, line:349:19> 'int'
|   | | |       |-BinaryOperator 0x1bd89efcfd8 <line:344:19, col:26> 'int' '>='
|   | | |       | |-ImplicitCastExpr 0x1bd89efcfa8 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |       | | `-ParenExpr 0x1bd89efcf60 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |       | |   `-DeclRefExpr 0x1bd89efcf40 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc180 'bits' 'size_t':'unsigned long long'
|   | | |       | `-ImplicitCastExpr 0x1bd89efcfc0 <line:344:26> 'unsigned long long' <IntegralCast>
|   | | |       |   `-IntegerLiteral 0x1bd89efcf80 <col:26> 'int' 2000
|   | | |       |-IntegerLiteral 0x1bd89efcff8 <col:33> 'int' 6
|   | | |       `-ConditionalOperator 0x1bd89efd458 <line:345:19, line:349:19> 'int'
|   | | |         |-BinaryOperator 0x1bd89efd0b8 <line:345:19, col:27> 'int' '>='
|   | | |         | |-ImplicitCastExpr 0x1bd89efd088 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |         | | `-ParenExpr 0x1bd89efd040 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |         | |   `-DeclRefExpr 0x1bd89efd020 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc180 'bits' 'size_t':'unsigned long long'
|   | | |         | `-ImplicitCastExpr 0x1bd89efd0a0 <line:345:27> 'unsigned long long' <IntegralCast>
|   | | |         |   `-IntegerLiteral 0x1bd89efd060 <col:27> 'int' 800
|   | | |         |-IntegerLiteral 0x1bd89efd0d8 <col:33> 'int' 5
|   | | |         `-ConditionalOperator 0x1bd89efd428 <line:346:19, line:349:19> 'int'
|   | | |           |-BinaryOperator 0x1bd89efd198 <line:346:19, col:27> 'int' '>='
|   | | |           | |-ImplicitCastExpr 0x1bd89efd168 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           | | `-ParenExpr 0x1bd89efd120 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |           | |   `-DeclRefExpr 0x1bd89efd100 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc180 'bits' 'size_t':'unsigned long long'
|   | | |           | `-ImplicitCastExpr 0x1bd89efd180 <line:346:27> 'unsigned long long' <IntegralCast>
|   | | |           |   `-IntegerLiteral 0x1bd89efd140 <col:27> 'int' 300
|   | | |           |-IntegerLiteral 0x1bd89efd1b8 <col:33> 'int' 4
|   | | |           `-ConditionalOperator 0x1bd89efd3f8 <line:347:19, line:349:19> 'int'
|   | | |             |-BinaryOperator 0x1bd89efd278 <line:347:19, col:28> 'int' '>='
|   | | |             | |-ImplicitCastExpr 0x1bd89efd248 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |             | | `-ParenExpr 0x1bd89efd200 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |             | |   `-DeclRefExpr 0x1bd89efd1e0 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc180 'bits' 'size_t':'unsigned long long'
|   | | |             | `-ImplicitCastExpr 0x1bd89efd260 <line:347:28> 'unsigned long long' <IntegralCast>
|   | | |             |   `-IntegerLiteral 0x1bd89efd220 <col:28> 'int' 70
|   | | |             |-IntegerLiteral 0x1bd89efd298 <col:33> 'int' 3
|   | | |             `-ConditionalOperator 0x1bd89efd3c8 <line:348:19, line:349:19> 'int'
|   | | |               |-BinaryOperator 0x1bd89efd358 <line:348:19, col:28> 'int' '>='
|   | | |               | |-ImplicitCastExpr 0x1bd89efd328 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |               | | `-ParenExpr 0x1bd89efd2e0 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   | | |               | |   `-DeclRefExpr 0x1bd89efd2c0 <line:832:40> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc180 'bits' 'size_t':'unsigned long long'
|   | | |               | `-ImplicitCastExpr 0x1bd89efd340 <line:348:28> 'unsigned long long' <IntegralCast>
|   | | |               |   `-IntegerLiteral 0x1bd89efd300 <col:28> 'int' 20
|   | | |               |-IntegerLiteral 0x1bd89efd378 <col:33> 'int' 2
|   | | |               `-IntegerLiteral 0x1bd89efd3a0 <line:349:19> 'int' 1
|   | | `-ImplicitCastExpr 0x1bd89efd570 <line:832:48> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bd89efd550 <col:48> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc1f8 'w' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1bd89efdbf8 <col:51, line:835:5>
|   |   `-BinaryOperator 0x1bd89efdbd8 <line:834:9, line:349:21> 'size_t':'unsigned long long' '='
|   |     |-DeclRefExpr 0x1bd89efd5a8 <line:834:9> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc1f8 'w' 'size_t':'unsigned long long'
|   |     `-ParenExpr 0x1bd89efdbb8 <line:343:17, line:349:21> 'size_t':'unsigned long long'
|   |       `-CStyleCastExpr 0x1bd89efdb90 <line:343:18, line:349:20> 'size_t':'unsigned long long' <IntegralCast>
|   |         `-ParenExpr 0x1bd89efdb70 <line:344:18, line:349:20> 'int'
|   |           `-ConditionalOperator 0x1bd89efdb10 <line:344:19, line:349:19> 'int'
|   |             |-BinaryOperator 0x1bd89efd660 <line:344:19, col:26> 'int' '>='
|   |             | |-ImplicitCastExpr 0x1bd89efd630 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |             | | `-ParenExpr 0x1bd89efd5e8 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |             | |   `-DeclRefExpr 0x1bd89efd5c8 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc180 'bits' 'size_t':'unsigned long long'
|   |             | `-ImplicitCastExpr 0x1bd89efd648 <line:344:26> 'unsigned long long' <IntegralCast>
|   |             |   `-IntegerLiteral 0x1bd89efd608 <col:26> 'int' 2000
|   |             |-IntegerLiteral 0x1bd89efd680 <col:33> 'int' 6
|   |             `-ConditionalOperator 0x1bd89efdae0 <line:345:19, line:349:19> 'int'
|   |               |-BinaryOperator 0x1bd89efd740 <line:345:19, col:27> 'int' '>='
|   |               | |-ImplicitCastExpr 0x1bd89efd710 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |               | | `-ParenExpr 0x1bd89efd6c8 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |               | |   `-DeclRefExpr 0x1bd89efd6a8 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc180 'bits' 'size_t':'unsigned long long'
|   |               | `-ImplicitCastExpr 0x1bd89efd728 <line:345:27> 'unsigned long long' <IntegralCast>
|   |               |   `-IntegerLiteral 0x1bd89efd6e8 <col:27> 'int' 800
|   |               |-IntegerLiteral 0x1bd89efd760 <col:33> 'int' 5
|   |               `-ConditionalOperator 0x1bd89efdab0 <line:346:19, line:349:19> 'int'
|   |                 |-BinaryOperator 0x1bd89efd820 <line:346:19, col:27> 'int' '>='
|   |                 | |-ImplicitCastExpr 0x1bd89efd7f0 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |                 | | `-ParenExpr 0x1bd89efd7a8 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |                 | |   `-DeclRefExpr 0x1bd89efd788 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc180 'bits' 'size_t':'unsigned long long'
|   |                 | `-ImplicitCastExpr 0x1bd89efd808 <line:346:27> 'unsigned long long' <IntegralCast>
|   |                 |   `-IntegerLiteral 0x1bd89efd7c8 <col:27> 'int' 300
|   |                 |-IntegerLiteral 0x1bd89efd840 <col:33> 'int' 4
|   |                 `-ConditionalOperator 0x1bd89efda80 <line:347:19, line:349:19> 'int'
|   |                   |-BinaryOperator 0x1bd89efd900 <line:347:19, col:28> 'int' '>='
|   |                   | |-ImplicitCastExpr 0x1bd89efd8d0 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |                   | | `-ParenExpr 0x1bd89efd888 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |                   | |   `-DeclRefExpr 0x1bd89efd868 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc180 'bits' 'size_t':'unsigned long long'
|   |                   | `-ImplicitCastExpr 0x1bd89efd8e8 <line:347:28> 'unsigned long long' <IntegralCast>
|   |                   |   `-IntegerLiteral 0x1bd89efd8a8 <col:28> 'int' 70
|   |                   |-IntegerLiteral 0x1bd89efd920 <col:33> 'int' 3
|   |                   `-ConditionalOperator 0x1bd89efda50 <line:348:19, line:349:19> 'int'
|   |                     |-BinaryOperator 0x1bd89efd9e0 <line:348:19, col:28> 'int' '>='
|   |                     | |-ImplicitCastExpr 0x1bd89efd9b0 <col:19, col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |                     | | `-ParenExpr 0x1bd89efd968 <col:19, col:21> 'size_t':'unsigned long long' lvalue
|   |                     | |   `-DeclRefExpr 0x1bd89efd948 <line:834:44> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc180 'bits' 'size_t':'unsigned long long'
|   |                     | `-ImplicitCastExpr 0x1bd89efd9c8 <line:348:28> 'unsigned long long' <IntegralCast>
|   |                     |   `-IntegerLiteral 0x1bd89efd988 <col:28> 'int' 20
|   |                     |-IntegerLiteral 0x1bd89efda00 <col:33> 'int' 2
|   |                     `-IntegerLiteral 0x1bd89efda28 <line:349:19> 'int' 1
|   |-BinaryOperator 0x1bd89efddc8 <line:837:5, col:42> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1bd89efdc28 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc360 'numblocks' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1bd89efdda8 <col:17, col:42> 'unsigned long long' '/'
|   |   |-ParenExpr 0x1bd89efdd50 <col:17, col:38> 'unsigned long long'
|   |   | `-BinaryOperator 0x1bd89efdd30 <col:18, col:37> 'unsigned long long' '-'
|   |   |   |-BinaryOperator 0x1bd89efdcd0 <col:18, col:25> 'unsigned long long' '+'
|   |   |   | |-ImplicitCastExpr 0x1bd89efdca0 <col:18> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x1bd89efdc60 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc180 'bits' 'size_t':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x1bd89efdcb8 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1bd89efdc80 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc2e8 'blocksize' 'size_t':'unsigned long long'
|   |   |   `-ImplicitCastExpr 0x1bd89efdd18 <col:37> 'unsigned long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x1bd89efdcf0 <col:37> 'int' 1
|   |   `-ImplicitCastExpr 0x1bd89efdd90 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1bd89efdd70 <col:42> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc2e8 'blocksize' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1bd89efdf58 <line:841:5, col:47> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1bd89efdde8 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc270 'pre_points_per_block' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1bd89efdf38 <col:28, col:47> 'size_t':'unsigned long long' '<<'
|   |   |-CStyleCastExpr 0x1bd89efde58 <col:28, col:36> 'size_t':'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x1bd89efde20 <col:36> 'int' 1
|   |   `-ParenExpr 0x1bd89efdf18 <col:41, col:47> 'unsigned long long'
|   |     `-BinaryOperator 0x1bd89efdef8 <col:42, col:46> 'unsigned long long' '-'
|   |       |-ImplicitCastExpr 0x1bd89efdec8 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1bd89efde80 <col:42> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc1f8 'w' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x1bd89efdee0 <col:46> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x1bd89efdea0 <col:46> 'int' 1
|   |-BinaryOperator 0x1bd89efe040 <line:842:5, col:34> 'size_t':'unsigned long long' '='
|   | |-DeclRefExpr 0x1bd89efdf78 <col:5> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc3d8 'num' 'size_t':'unsigned long long'
|   | `-BinaryOperator 0x1bd89efe020 <col:11, col:34> 'unsigned long long' '*'
|   |   |-ImplicitCastExpr 0x1bd89efdff0 <col:11> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1bd89efdfb0 <col:11> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc270 'pre_points_per_block' 'size_t':'unsigned long long'
|   |   `-ImplicitCastExpr 0x1bd89efe008 <col:34> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x1bd89efdfd0 <col:34> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc360 'numblocks' 'size_t':'unsigned long long'
|   |-IfStmt 0x1bd89efe228 <line:846:5, line:849:5>
|   | |-OpaqueValueExpr 0x1bd89efe210 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89efe1f8 <line:846:25, line:849:5>
|   |   `-GotoStmt 0x1bd89efe1e0 <line:848:9, col:14> 'err' 0x1bd89efc870
|   |-ForStmt 0x1bd89efe5a8 <line:853:5, line:858:5>
|   | |-BinaryOperator 0x1bd89efe360 <line:853:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1bd89efe2e8 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc108 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1bd89efe348 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1bd89efe320 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1bd89efe3f0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1bd89efe3c0 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89efe380 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc108 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1bd89efe3d8 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bd89efe3a0 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc3d8 'num' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x1bd89efe430 <col:26, col:27> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1bd89efe410 <col:26> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc108 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1bd89efe590 <col:31, line:858:5>
|   |   `-IfStmt 0x1bd89efe578 <line:854:9, line:857:9>
|   |     |-OpaqueValueExpr 0x1bd89efe560 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x1bd89efe548 <line:854:53, line:857:9>
|   |       `-GotoStmt 0x1bd89efe530 <line:856:13, col:18> 'err' 0x1bd89efc870
|   |-IfStmt 0x1bd89efe798 <line:860:5, line:864:5>
|   | |-OpaqueValueExpr 0x1bd89efe780 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89efe768 <line:861:50, line:864:5>
|   |   `-GotoStmt 0x1bd89efe750 <line:863:9, col:14> 'err' 0x1bd89efc870
|   |-IfStmt 0x1bd89efe800 <line:866:5, line:867:14>
|   | |-OpaqueValueExpr 0x1bd89efe7e8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89efe7d0 <col:9, col:14> 'err' 0x1bd89efc870
|   |-ForStmt 0x1bd89f43b00 <line:870:5, line:905:5>
|   | |-BinaryOperator 0x1bd89f430f8 <line:870:10, col:14> 'size_t':'unsigned long long' '='
|   | | |-DeclRefExpr 0x1bd89efe818 <col:10> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc108 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1bd89f430e0 <col:14> 'size_t':'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x1bd89efe838 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1bd89f43188 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x1bd89f43158 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1bd89f43118 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc108 'i' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1bd89f43170 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bd89f43138 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc360 'numblocks' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x1bd89f431c8 <col:32, col:33> 'size_t':'unsigned long long' postfix '++'
|   | | `-DeclRefExpr 0x1bd89f431a8 <col:32> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc108 'i' 'size_t':'unsigned long long'
|   | `-CompoundStmt 0x1bd89f43ac8 <col:37, line:905:5>
|   |   |-DeclStmt 0x1bd89f43258 <line:871:9, col:17>
|   |   | `-VarDecl 0x1bd89f431f0 <col:9, col:16> col:16 used j 'size_t':'unsigned long long'
|   |   |-IfStmt 0x1bd89f432c0 <line:873:9, line:874:18>
|   |   | |-OpaqueValueExpr 0x1bd89f432a8 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1bd89f43290 <col:13, col:18> 'err' 0x1bd89efc870
|   |   |-IfStmt 0x1bd89f43328 <line:876:9, line:877:18>
|   |   | |-OpaqueValueExpr 0x1bd89f43310 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x1bd89f432f8 <col:13, col:18> 'err' 0x1bd89efc870
|   |   |-ForStmt 0x1bd89f43548 <line:879:9, line:885:9>
|   |   | |-BinaryOperator 0x1bd89f433b8 <line:879:14, col:18> 'size_t':'unsigned long long' '='
|   |   | | |-DeclRefExpr 0x1bd89f43340 <col:14> 'size_t':'unsigned long long' lvalue Var 0x1bd89f431f0 'j' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x1bd89f433a0 <col:18> 'size_t':'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1bd89f43378 <col:18> 'int' 1
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x1bd89f43448 <col:21, col:25> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1bd89f43418 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1bd89f433d8 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1bd89f431f0 'j' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x1bd89f43430 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1bd89f433f8 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc270 'pre_points_per_block' 'size_t':'unsigned long long'
|   |   | |-<<<NULL>>>
|   |   | `-CompoundStmt 0x1bd89f43530 <col:59, line:885:9>
|   |   |   `-IfStmt 0x1bd89f43518 <line:883:13, line:884:22>
|   |   |     |-OpaqueValueExpr 0x1bd89f43500 <<invalid sloc>> '_Bool'
|   |   |     `-GotoStmt 0x1bd89f434e8 <col:17, col:22> 'err' 0x1bd89efc870
|   |   `-IfStmt 0x1bd89f43ab0 <line:887:9, line:904:9>
|   |     |-BinaryOperator 0x1bd89f43650 <line:887:13, col:29> 'int' '<'
|   |     | |-ImplicitCastExpr 0x1bd89f43638 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1bd89f43580 <col:13> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc108 'i' 'size_t':'unsigned long long'
|   |     | `-BinaryOperator 0x1bd89f43618 <col:17, col:29> 'unsigned long long' '-'
|   |     |   |-ImplicitCastExpr 0x1bd89f435e8 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1bd89f435a0 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc360 'numblocks' 'size_t':'unsigned long long'
|   |     |   `-ImplicitCastExpr 0x1bd89f43600 <col:29> 'unsigned long long' <IntegralCast>
|   |     |     `-IntegerLiteral 0x1bd89f435c0 <col:29> 'int' 1
|   |     `-CompoundStmt 0x1bd89f43a80 <col:32, line:904:9>
|   |       |-DeclStmt 0x1bd89f436e8 <line:891:13, col:21>
|   |       | `-VarDecl 0x1bd89f43680 <col:13, col:20> col:20 used k 'size_t':'unsigned long long'
|   |       |-IfStmt 0x1bd89f437e8 <line:893:13, line:896:13>
|   |       | |-BinaryOperator 0x1bd89f43778 <line:893:17, col:30> 'int' '<='
|   |       | | |-ImplicitCastExpr 0x1bd89f43748 <col:17> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | | `-DeclRefExpr 0x1bd89f43700 <col:17> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc2e8 'blocksize' 'size_t':'unsigned long long'
|   |       | | `-ImplicitCastExpr 0x1bd89f43760 <col:30> 'unsigned long long' <IntegralCast>
|   |       | |   `-IntegerLiteral 0x1bd89f43720 <col:30> 'int' 2
|   |       | `-CompoundStmt 0x1bd89f437d0 <col:33, line:896:13>
|   |       |   `-GotoStmt 0x1bd89f437b8 <line:895:17, col:22> 'err' 0x1bd89efc870
|   |       |-IfStmt 0x1bd89f43850 <line:898:13, line:899:22>
|   |       | |-OpaqueValueExpr 0x1bd89f43838 <<invalid sloc>> '_Bool'
|   |       | `-GotoStmt 0x1bd89f43820 <col:17, col:22> 'err' 0x1bd89efc870
|   |       `-ForStmt 0x1bd89f43a48 <line:900:13, line:903:13>
|   |         |-BinaryOperator 0x1bd89f438e0 <line:900:18, col:22> 'size_t':'unsigned long long' '='
|   |         | |-DeclRefExpr 0x1bd89f43868 <col:18> 'size_t':'unsigned long long' lvalue Var 0x1bd89f43680 'k' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x1bd89f438c8 <col:22> 'size_t':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x1bd89f438a0 <col:22> 'int' 2
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x1bd89f43970 <col:25, col:29> 'int' '<'
|   |         | |-ImplicitCastExpr 0x1bd89f43940 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x1bd89f43900 <col:25> 'size_t':'unsigned long long' lvalue Var 0x1bd89f43680 'k' 'size_t':'unsigned long long'
|   |         | `-ImplicitCastExpr 0x1bd89f43958 <col:29> 'size_t':'unsigned long long' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x1bd89f43920 <col:29> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc2e8 'blocksize' 'size_t':'unsigned long long'
|   |         |-UnaryOperator 0x1bd89f439b0 <col:40, col:41> 'size_t':'unsigned long long' postfix '++'
|   |         | `-DeclRefExpr 0x1bd89f43990 <col:40> 'size_t':'unsigned long long' lvalue Var 0x1bd89f43680 'k' 'size_t':'unsigned long long'
|   |         `-CompoundStmt 0x1bd89f43a30 <col:45, line:903:13>
|   |           `-IfStmt 0x1bd89f43a18 <line:901:17, line:902:26>
|   |             |-OpaqueValueExpr 0x1bd89f43a00 <<invalid sloc>> '_Bool'
|   |             `-GotoStmt 0x1bd89f439e8 <col:21, col:26> 'err' 0x1bd89efc870
|   |-IfStmt 0x1bd89f43ba8 <line:907:5, line:908:14>
|   | |-OpaqueValueExpr 0x1bd89f43b90 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x1bd89f43b78 <col:9, col:14> 'err' 0x1bd89efc870
|   |-BinaryOperator 0x1bd89f43c98 <line:911:5, col:27> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1bd89f43c30 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->blocksize 0x1bd89e444d0
|   | | `-ImplicitCastExpr 0x1bd89f43c18 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bd89f43bf8 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1bd89efc530 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1bd89f43c80 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bd89f43c60 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc2e8 'blocksize' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1bd89f43d58 <line:912:5, col:27> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1bd89f43cf0 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->numblocks 0x1bd89e44538
|   | | `-ImplicitCastExpr 0x1bd89f43cd8 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bd89f43cb8 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1bd89efc530 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1bd89f43d40 <col:27> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bd89f43d20 <col:27> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc360 'numblocks' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1bd89f43e18 <line:913:5, col:19> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1bd89f43db0 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->w 0x1bd89e445a0
|   | | `-ImplicitCastExpr 0x1bd89f43d98 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bd89f43d78 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1bd89efc530 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1bd89f43e00 <col:19> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bd89f43de0 <col:19> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc1f8 'w' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1bd89f43f98 <line:916:5, col:21> 'size_t':'unsigned long long' '='
|   | |-MemberExpr 0x1bd89f43f30 <col:5, col:15> 'size_t':'unsigned long long' lvalue ->num 0x1bd89e44680
|   | | `-ImplicitCastExpr 0x1bd89f43f18 <col:5> 'EC_PRE_COMP *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1bd89f43ef8 <col:5> 'EC_PRE_COMP *' lvalue Var 0x1bd89efc530 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1bd89f43f80 <col:21> 'size_t':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bd89f43f60 <col:21> 'size_t':'unsigned long long' lvalue Var 0x1bd89efc3d8 'num' 'size_t':'unsigned long long'
|   |-BinaryOperator 0x1bd89f440b8 <line:918:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'EC_PRE_COMP *' '='
|   | |-DeclRefExpr 0x1bd89f43ff8 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:918:5> 'EC_PRE_COMP *' lvalue Var 0x1bd89efc530 'pre_comp' 'EC_PRE_COMP *'
|   | `-ImplicitCastExpr 0x1bd89f440a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'EC_PRE_COMP *' <NullToPointer>
|   |   `-ParenExpr 0x1bd89f44080 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x1bd89f44058 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x1bd89f44018 <col:26> 'int' 0
|   |-BinaryOperator 0x1bd89f44138 <.//openssl//file_jk/after\crypto\ec\ec_mult.c:919:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x1bd89f440d8 <col:5> 'int' lvalue Var 0x1bd89efc5c8 'ret' 'int'
|   | `-IntegerLiteral 0x1bd89f44110 <col:11> 'int' 1
|   |-LabelStmt 0x1bd89f44208 <line:921:2, col:5> 'err'
|   | `-NullStmt 0x1bd89f44200 <col:5>
|   |-CallExpr 0x1bd89f442f0 <line:925:5, col:33> 'void'
|   | |-ImplicitCastExpr 0x1bd89f442d8 <col:5> 'void (*)(EC_PRE_COMP *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1bd89f44240 <col:5> 'void (EC_PRE_COMP *)' Function 0x1bd89eeae48 'EC_ec_pre_comp_free' 'void (EC_PRE_COMP *)'
|   | `-ImplicitCastExpr 0x1bd89f44318 <col:25> 'EC_PRE_COMP *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1bd89f44260 <col:25> 'EC_PRE_COMP *' lvalue Var 0x1bd89efc530 'pre_comp' 'EC_PRE_COMP *'
|   |-IfStmt 0x1bd89f44420 <line:926:5, line:932:5>
|   | |-OpaqueValueExpr 0x1bd89f44408 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1bd89f443f8 <line:926:17, line:932:5>
|   `-ReturnStmt 0x1bd89f444b0 <line:935:5, col:12>
|     `-ImplicitCastExpr 0x1bd89f44498 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1bd89f44478 <col:12> 'int' lvalue Var 0x1bd89efc5c8 'ret' 'int'
`-FunctionDecl 0x1bd89f44680 <line:938:1, line:941:1> line:938:5 invalid ec_wNAF_have_precompute_mult 'int (const int *)'
  |-ParmVarDecl 0x1bd89f445e8 <col:34, col:50> col:50 invalid group 'const int *'
  `-CompoundStmt 0x1bd89f447e8 <line:939:1, line:941:1>
