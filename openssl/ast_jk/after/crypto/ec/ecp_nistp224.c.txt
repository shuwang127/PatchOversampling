TranslationUnitDecl 0x28de9d14948 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x28de9d151e0 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x28de9d14ee0 '__int128'
|-TypedefDecl 0x28de9d15250 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x28de9d14f00 'unsigned __int128'
|-TypedefDecl 0x28de9d15588 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x28de9d15340 'struct __NSConstantString_tag'
|   `-Record 0x28de9d152a8 '__NSConstantString_tag'
|-TypedefDecl 0x28de9d155f8 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-TypedefDecl 0x28de9d15690 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x28de9d15650 'char *'
|   `-BuiltinType 0x28de9d149e0 'char'
|-TypedefDecl 0x28de9d15700 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x28de9d15650 'char *'
|   `-BuiltinType 0x28de9d149e0 'char'
|-TypedefDecl 0x28de9d157c0 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-TypedefDecl 0x28de9d15830 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x28de9d15650 'char *'
|   `-BuiltinType 0x28de9d149e0 'char'
|-FunctionDecl 0x28deb705470 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x28deb705510 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x28deb705580 <col:21> Implicit
|-FunctionDecl 0x28deb7055d8 prev 0x28deb705470 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x28deb705300 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x28deb7056c8 <col:21> Inherited Implicit
|-TypedefDecl 0x28deb705708 prev 0x28de9d155f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-TypedefDecl 0x28deb7057b0 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x28deb705780 'size_t' sugar
|   |-Typedef 0x28deb705708 'size_t'
|   `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-TypedefDecl 0x28deb705820 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x28de9d14a80 'long long'
|-TypedefDecl 0x28deb705890 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x28de9d14a80 'long long'
|-TypedefDecl 0x28deb705900 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x28de9d14ac0 'unsigned short'
|-TypedefDecl 0x28deb705970 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x28de9d14ac0 'unsigned short'
|-TypedefDecl 0x28deb7059e0 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x28de9d14ac0 'unsigned short'
|-TypedefDecl 0x28deb705a50 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x28de9d14a40 'int'
|-TypedefDecl 0x28deb705ac0 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x28de9d14a60 'long'
|-TypedefDecl 0x28deb705b30 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x28de9d14a80 'long long'
|-TypedefDecl 0x28deb705bc0 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x28deb705b90 '__time64_t' sugar
|   |-Typedef 0x28deb705b30 '__time64_t'
|   `-BuiltinType 0x28de9d14a80 'long long'
|-FunctionDecl 0x28deb705d38 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x28deb705f58 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x28deb728730 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x28deb706098 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x28deb706110 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x28deb706188 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x28deb706208 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x28deb7284d0 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x28deb728810 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x28deb7288d0 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x28deb728a40 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x28deb7289f0 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x28deb728990 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x28deb7288b0 'struct threadlocaleinfostruct'
|       `-Record 0x28deb7375c0 'threadlocaleinfostruct'
|-TypedefDecl 0x28deb728b50 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x28deb728b00 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x28deb728aa0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x28deb728970 'struct threadmbcinfostruct'
|       `-Record 0x28deb7288d0 'threadmbcinfostruct'
|-RecordDecl 0x28deb728ba8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x28deb728c60 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x28deb728d20 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28deb728db0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x28deb728e40 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x28deb728ef8 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x28deb728ea0 'struct localeinfo_struct' sugar
|   `-RecordType 0x28deb728d00 'struct localeinfo_struct'
|     `-Record 0x28deb728c60 'localeinfo_struct'
|-TypedefDecl 0x28deb728fd0 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x28deb728f80 'struct localeinfo_struct *'
|   `-ElaboratedType 0x28deb728ea0 'struct localeinfo_struct' sugar
|     `-RecordType 0x28deb728d00 'struct localeinfo_struct'
|       `-Record 0x28deb728c60 'localeinfo_struct'
|-RecordDecl 0x28deb729048 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x28deb729100 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28deb729178 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x28deb729238 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x28deb7292d0 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x28deb729340 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x28deb7293f8 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x28deb7293a0 'struct localerefcount' sugar
|   `-RecordType 0x28deb7290e0 'struct localerefcount'
|     `-Record 0x28deb729048 'localerefcount'
|-RecordDecl 0x28deb7375c0 prev 0x28deb728810 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x28deb737640 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28deb7376b8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x28deb737728 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x28deb737798 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x28deb737808 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x28deb7379c8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x28deb737a38 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x28deb737aa8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x28deb737b18 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x28deb737b88 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x28deb737bf8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x28deb737c50 parent 0x28de9d14948 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x28deb737de0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x28deb737e50 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x28deb737ec0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x28deb737f30 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x28deb737fd0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x28deb738040 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x28deb738150 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x28deb738288 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x28deb738338 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x28deb7382e0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x28deb7288b0 'struct threadlocaleinfostruct'
|     `-Record 0x28deb7375c0 'threadlocaleinfostruct'
|-TypedefDecl 0x28deb7383c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdint.h:8:1, col:28> col:28 int8_t 'signed char'
| `-BuiltinType 0x28de9d14a00 'signed char'
|-TypedefDecl 0x28deb738430 <line:9:1, col:28> col:28 int16_t 'short'
| `-BuiltinType 0x28de9d14a20 'short'
|-TypedefDecl 0x28deb7384a0 <line:10:1, col:28> col:28 referenced int32_t 'int'
| `-BuiltinType 0x28de9d14a40 'int'
|-TypedefDecl 0x28deb738510 <line:11:1, col:28> col:28 referenced int64_t 'long long'
| `-BuiltinType 0x28de9d14a80 'long long'
|-TypedefDecl 0x28deb73c610 <line:12:1, col:28> col:28 referenced uint8_t 'unsigned char'
| `-BuiltinType 0x28de9d14aa0 'unsigned char'
|-TypedefDecl 0x28deb73c680 <line:13:1, col:28> col:28 uint16_t 'unsigned short'
| `-BuiltinType 0x28de9d14ac0 'unsigned short'
|-TypedefDecl 0x28deb73c6f0 <line:14:1, col:28> col:28 uint32_t 'unsigned int'
| `-BuiltinType 0x28de9d14ae0 'unsigned int'
|-TypedefDecl 0x28deb73c760 <line:15:1, col:28> col:28 referenced uint64_t 'unsigned long long'
| `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-TypedefDecl 0x28deb73c7d0 <line:17:1, col:28> col:28 int_least8_t 'signed char'
| `-BuiltinType 0x28de9d14a00 'signed char'
|-TypedefDecl 0x28deb73c840 <line:18:1, col:28> col:28 int_least16_t 'short'
| `-BuiltinType 0x28de9d14a20 'short'
|-TypedefDecl 0x28deb73c8b0 <line:19:1, col:28> col:28 int_least32_t 'int'
| `-BuiltinType 0x28de9d14a40 'int'
|-TypedefDecl 0x28deb73c920 <line:20:1, col:28> col:28 int_least64_t 'long long'
| `-BuiltinType 0x28de9d14a80 'long long'
|-TypedefDecl 0x28deb73c990 <line:21:1, col:28> col:28 uint_least8_t 'unsigned char'
| `-BuiltinType 0x28de9d14aa0 'unsigned char'
|-TypedefDecl 0x28deb73ca00 <line:22:1, col:28> col:28 uint_least16_t 'unsigned short'
| `-BuiltinType 0x28de9d14ac0 'unsigned short'
|-TypedefDecl 0x28deb73ca70 <line:23:1, col:28> col:28 uint_least32_t 'unsigned int'
| `-BuiltinType 0x28de9d14ae0 'unsigned int'
|-TypedefDecl 0x28deb73cae0 <line:24:1, col:28> col:28 uint_least64_t 'unsigned long long'
| `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-TypedefDecl 0x28deb73cb50 <line:26:1, col:28> col:28 int_fast8_t 'signed char'
| `-BuiltinType 0x28de9d14a00 'signed char'
|-TypedefDecl 0x28deb73cbc0 <line:27:1, col:28> col:28 int_fast16_t 'int'
| `-BuiltinType 0x28de9d14a40 'int'
|-TypedefDecl 0x28deb73cc30 <line:28:1, col:28> col:28 int_fast32_t 'int'
| `-BuiltinType 0x28de9d14a40 'int'
|-TypedefDecl 0x28deb73cca0 <line:29:1, col:28> col:28 int_fast64_t 'long long'
| `-BuiltinType 0x28de9d14a80 'long long'
|-TypedefDecl 0x28deb73cd10 <line:30:1, col:28> col:28 uint_fast8_t 'unsigned char'
| `-BuiltinType 0x28de9d14aa0 'unsigned char'
|-TypedefDecl 0x28deb73cd80 <line:31:1, col:28> col:28 uint_fast16_t 'unsigned int'
| `-BuiltinType 0x28de9d14ae0 'unsigned int'
|-TypedefDecl 0x28deb73cdf0 <line:32:1, col:28> col:28 uint_fast32_t 'unsigned int'
| `-BuiltinType 0x28de9d14ae0 'unsigned int'
|-TypedefDecl 0x28deb73ce60 <line:33:1, col:28> col:28 uint_fast64_t 'unsigned long long'
| `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-TypedefDecl 0x28deb73ced0 <line:53:1, col:28> col:28 intmax_t 'long long'
| `-BuiltinType 0x28de9d14a80 'long long'
|-TypedefDecl 0x28deb73cf40 <line:54:1, col:28> col:28 uintmax_t 'unsigned long long'
| `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-FunctionDecl 0x28deb73d360 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:47:9, col:142> col:25 _memccpy 'void *(void *, const void *, int, size_t) __attribute__((cdecl))':'void *(void *, const void *, int, size_t)'
| |-ParmVarDecl 0x28deb73cfb0 <col:69, col:76> col:76 _Dst 'void *'
| |-ParmVarDecl 0x28deb73d060 <col:87, col:100> col:100 _Src 'const void *'
| |-ParmVarDecl 0x28deb73d0e0 <col:111, col:115> col:115 _Val 'int'
| `-ParmVarDecl 0x28deb73d158 <col:126, col:133> col:133 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb740778 <line:48:54> col:54 implicit memchr 'void *(const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x28deb740818 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x28deb740880 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x28deb7408e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb740968 prev 0x28deb740778 <col:38, col:150> col:54 memchr 'void *(const void *, int, unsigned long long)'
| |-ParmVarDecl 0x28deb73d450 <col:94, col:107> col:107 _Buf 'const void *'
| |-ParmVarDecl 0x28deb73d4d0 <col:119, col:123> col:123 _Val 'int'
| `-ParmVarDecl 0x28deb73d548 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb740d28 <line:49:24, col:162> col:40 _memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x28deb740a50 <col:77, col:90> col:90 _Buf1 'const void *'
| |-ParmVarDecl 0x28deb740ad0 <col:125, col:138> col:138 _Buf2 'const void *'
| `-ParmVarDecl 0x28deb740b48 <col:150, col:157> col:157 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7411b0 <line:50:24, col:192> col:40 _memicmp_l 'int (const void *, const void *, size_t, _locale_t) __attribute__((cdecl))':'int (const void *, const void *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb740e10 <col:79, col:92> col:92 _Buf1 'const void *'
| |-ParmVarDecl 0x28deb740e90 <col:127, col:140> col:140 _Buf2 'const void *'
| |-ParmVarDecl 0x28deb740f08 <col:152, col:159> col:159 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb740fa0 <col:175, col:185> col:185 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7414b8 <line:51:32> col:32 implicit memcmp 'int (const void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x28deb741558 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x28deb7415c0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x28deb7456a0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb745720 prev 0x28deb7414b8 <col:16, col:144> col:32 memcmp 'int (const void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x28deb7412a0 <col:63, col:76> col:76 _Buf1 'const void *'
| |-ParmVarDecl 0x28deb741320 <col:107, col:120> col:120 _Buf2 'const void *'
| `-ParmVarDecl 0x28deb741398 <col:132, col:139> col:139 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb745ad8 <line:55:17> col:17 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x28deb745b78 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x28deb745be0 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x28deb745c48 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb745cc8 prev 0x28deb745ad8 <col:1, col:127> col:17 used memcpy 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x28deb745808 <col:54, col:61> col:61 _Dst 'void *'
| |-ParmVarDecl 0x28deb745888 <col:91, col:104> col:104 _Src 'const void *'
| `-ParmVarDecl 0x28deb745900 <col:115, col:122> col:122 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb746168 <line:57:9, col:191> col:26 memcpy_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x28deb745dd8 <col:82, col:89> col:89 _Dst 'void *'
| |-ParmVarDecl 0x28deb745e70 <col:100, col:108> col:108 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28deb745ef0 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x28deb745f68 <col:174, col:182> col:182 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28deb746528 <line:94:25> col:25 implicit used memset 'void *(void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x28deb7465c8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x28deb746630 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x28deb73e630 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb73e6b0 prev 0x28deb746528 <col:9, col:107> col:25 used memset 'void *(void *, int, unsigned long long)'
| |-ParmVarDecl 0x28deb746258 <col:62, col:69> col:69 _Dst 'void *'
| |-ParmVarDecl 0x28deb7462d8 <col:80, col:84> col:84 _Val 'int'
| `-ParmVarDecl 0x28deb746350 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb73eb28 <line:98:57> col:57 implicit memccpy 'void *(void *, const void *, int, unsigned long long)' extern
| |-ParmVarDecl 0x28deb73ebc8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x28deb73ec30 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x28deb73ec98 <<invalid sloc>> <invalid sloc> 'int'
| `-ParmVarDecl 0x28deb73ed00 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb73ed88 prev 0x28deb73eb28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:98:187> col:57 memccpy 'void *(void *, const void *, int, unsigned long long)'
| |-ParmVarDecl 0x28deb73e870 <col:95, col:102> col:102 _Dst 'void *'
| |-ParmVarDecl 0x28deb73e8f0 <col:136, col:149> col:149 _Src 'const void *'
| |-ParmVarDecl 0x28deb73e970 <col:160, col:164> col:164 _Val 'int'
| |-ParmVarDecl 0x28deb73e9e8 <col:175, col:182> col:182 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb73ee48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memccpy. See online help for details." ""
|-FunctionDecl 0x28deb73f228 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:99:190> col:69 memicmp 'int (const void *, const void *, size_t) __attribute__((cdecl))':'int (const void *, const void *, size_t)'
| |-ParmVarDecl 0x28deb73f010 <col:105, col:118> col:118 _Buf1 'const void *'
| |-ParmVarDecl 0x28deb73f090 <col:153, col:166> col:166 _Buf2 'const void *'
| |-ParmVarDecl 0x28deb73f108 <col:178, col:185> col:185 _Size 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb73f2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _memicmp. See online help for details." ""
|-FunctionDecl 0x28deb73f6e0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:105:40, col:144> col:56 _strset_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x28deb73f408 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x28deb73f480 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb73f500 <col:134, col:138> col:138 _Value 'int'
|-FunctionDecl 0x28deb73fab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:107:88 _strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x28deb73f8c0 <col:108, col:114> col:114 _Dest 'char *'
| |-ParmVarDecl 0x28deb73f940 <col:126, col:131> col:131 _Value 'int'
| `-DeprecatedAttr 0x28deb73fb60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb73ff70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:109:40, col:158> col:56 strcpy_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x28deb73fca8 <col:94, col:101> col:101 _Dst 'char *'
| |-ParmVarDecl 0x28deb73fd20 <col:112, col:120> col:120 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x28deb73fda0 <col:141, col:154> col:154 _Src 'const char *'
|-FunctionDecl 0x28deb740340 <line:112:88> col:88 implicit strcpy 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x28deb7403e0 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x28deb740448 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28deb7404c0 prev 0x28deb740340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:112:88 strcpy 'char *(char *, const char *)'
| |-ParmVarDecl 0x28deb740150 <col:142, col:148> col:148 _Dest 'char *'
| |-ParmVarDecl 0x28deb7401d0 <col:162, col:176> col:176 _Source 'const char *'
| `-DeprecatedAttr 0x28deb740570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb741970 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:114:40, col:161> col:56 strcat_s 'errno_t (char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *)'
| |-ParmVarDecl 0x28deb741760 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x28deb7417d8 <col:115, col:123> col:123 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x28deb741858 <col:144, col:157> col:157 _Src 'const char *'
|-FunctionDecl 0x28deb741c98 <line:118:88> col:88 implicit strcat 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x28deb741d38 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x28deb741da0 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28deb741e18 prev 0x28deb741c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:118:88 strcat 'char *(char *, const char *)'
| |-ParmVarDecl 0x28deb741b18 <col:170, col:176> col:176 _Dest 'char *'
| |-ParmVarDecl 0x28deb741b98 <col:190, col:204> col:204 _Source 'const char *'
| `-DeprecatedAttr 0x28deb741ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strcat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb742200 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:120:32> col:32 implicit strcmp 'int (const char *, const char *)' extern
| |-ParmVarDecl 0x28deb7422a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb742308 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28deb742380 prev 0x28deb742200 <col:16, col:91> col:32 strcmp 'int (const char *, const char *)'
| |-ParmVarDecl 0x28deb742010 <col:46, col:59> col:59 _Str1 'const char *'
| `-ParmVarDecl 0x28deb742090 <col:73, col:86> col:86 _Str2 'const char *'
|-FunctionDecl 0x28deb743680 <line:121:32> col:32 implicit strlen 'unsigned long long (const char *)' extern
| `-ParmVarDecl 0x28deb743720 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28deb743790 prev 0x28deb743680 <col:16, col:63> col:32 strlen 'unsigned long long (const char *)'
| `-ParmVarDecl 0x28deb742460 <col:46, col:59> col:59 _Str 'const char *'
|-FunctionDecl 0x28deb743a88 <line:125:1, col:92> col:17 used strnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x28deb743868 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x28deb7438e0 <col:76, col:83> col:83 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb743cd8 <line:127:16, line:133:1> line:130:19 strnlen_s 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' static inline
| |-ParmVarDecl 0x28deb743b68 <col:56, col:69> col:69 used _Str 'const char *'
| |-ParmVarDecl 0x28deb743be0 <col:80, col:87> col:87 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x28deb744008 <line:131:1, line:133:1>
|   `-ReturnStmt 0x28deb743ff8 <line:132:5, col:51>
|     `-ConditionalOperator 0x28deb743fc8 <col:12, col:51> 'unsigned long long'
|       |-ParenExpr 0x28deb743e38 <col:12, col:20> 'int'
|       | `-BinaryOperator 0x28deb743e18 <col:13, col:19> 'int' '=='
|       |   |-ImplicitCastExpr 0x28deb743de8 <col:13> 'const char *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x28deb743da0 <col:13> 'const char *' lvalue ParmVar 0x28deb743b68 '_Str' 'const char *'
|       |   `-ImplicitCastExpr 0x28deb743e00 <col:19> 'const char *' <NullToPointer>
|       |     `-IntegerLiteral 0x28deb743dc0 <col:19> 'int' 0
|       |-ImplicitCastExpr 0x28deb743fb0 <col:24> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x28deb743e58 <col:24> 'int' 0
|       `-CallExpr 0x28deb743f50 <col:28, col:51> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x28deb743f38 <col:28> 'size_t (*)(const char *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x28deb743e80 <col:28> 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)' Function 0x28deb743a88 'strnlen' 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
|         |-ImplicitCastExpr 0x28deb743f80 <col:36> 'const char *' <LValueToRValue>
|         | `-DeclRefExpr 0x28deb743ea0 <col:36> 'const char *' lvalue ParmVar 0x28deb743b68 '_Str' 'const char *'
|         `-ImplicitCastExpr 0x28deb743f98 <col:42> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x28deb743ec0 <col:42> 'size_t':'unsigned long long' lvalue ParmVar 0x28deb743be0 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7442e0 <line:136:28, col:209> col:44 memmove_s 'errno_t (void *, rsize_t, const void *, rsize_t) __attribute__((cdecl))':'errno_t (void *, rsize_t, const void *, rsize_t)'
| |-ParmVarDecl 0x28deb744038 <col:100, col:107> col:107 _Dst 'void *'
| |-ParmVarDecl 0x28deb7440b0 <col:118, col:126> col:126 _DstSize 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28deb744130 <col:168, col:181> col:181 _Src 'const void *'
| `-ParmVarDecl 0x28deb7441a8 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28deb742670 <line:139:67> col:67 implicit memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x28deb742710 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x28deb742778 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x28deb7427e0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb742860 prev 0x28deb742670 <col:51, col:186> col:67 memmove 'void *(void *, const void *, unsigned long long)'
| |-ParmVarDecl 0x28deb7443d0 <col:109, col:116> col:116 _Dst 'void *'
| |-ParmVarDecl 0x28deb744450 <col:150, col:163> col:163 _Src 'const void *'
| `-ParmVarDecl 0x28deb7444c8 <col:174, col:181> col:181 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb742a98 <line:146:24, col:76> col:40 _strdup 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| `-ParmVarDecl 0x28deb742948 <col:59, col:72> col:72 _Src 'const char *'
|-FunctionDecl 0x28deb742d60 <line:152:54> col:54 implicit strchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x28deb742e00 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb742e68 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28deb742ee0 prev 0x28deb742d60 <col:38, col:100> col:54 strchr 'char *(const char *, int)'
| |-ParmVarDecl 0x28deb742b70 <col:68, col:81> col:81 _Str 'const char *'
| `-ParmVarDecl 0x28deb742bf0 <col:92, col:96> col:96 _Val 'int'
|-FunctionDecl 0x28deb743140 <line:153:24, col:103> col:40 _stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28deb742fc0 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x28deb743040 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x28deb7433a0 <line:154:24, col:103> col:40 _strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28deb743220 <col:57, col:70> col:70 _Str1 'const char *'
| `-ParmVarDecl 0x28deb7432a0 <col:85, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x28deb744778 <line:155:24, col:133> col:40 _stricmp_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x28deb743480 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x28deb743500 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x28deb743578 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7449e0 <line:156:24, col:103> col:40 strcoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28deb744860 <col:56, col:69> col:69 _Str1 'const char *'
| `-ParmVarDecl 0x28deb7448e0 <col:84, col:98> col:98 _Str2 'const char *'
|-FunctionDecl 0x28deb744cd8 <line:157:24, col:133> col:40 _strcoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x28deb744ac0 <col:59, col:72> col:72 _Str1 'const char *'
| |-ParmVarDecl 0x28deb744b40 <col:87, col:100> col:100 _Str2 'const char *'
| `-ParmVarDecl 0x28deb744bb8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb744f40 <line:158:24, col:104> col:40 _stricoll 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28deb744dc0 <col:58, col:71> col:71 _Str1 'const char *'
| `-ParmVarDecl 0x28deb744e40 <col:86, col:99> col:99 _Str2 'const char *'
|-FunctionDecl 0x28deb745238 <line:159:24, col:134> col:40 _stricoll_l 'int (const char *, const char *, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, _locale_t)'
| |-ParmVarDecl 0x28deb745020 <col:60, col:73> col:73 _Str1 'const char *'
| |-ParmVarDecl 0x28deb7450a0 <col:88, col:101> col:101 _Str2 'const char *'
| `-ParmVarDecl 0x28deb745118 <col:117, col:127> col:127 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb78ff60 <line:160:24, col:167> col:40 _strncoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x28deb745320 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x28deb7453a0 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x28deb745418 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7903c0 <line:161:24, col:195> col:40 _strncoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb790048 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x28deb7900c8 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x28deb790140 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7901b8 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7906c8 <line:162:24, col:167> col:40 _strnicoll 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x28deb7904b0 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x28deb790530 <col:126, col:139> col:139 _Str2 'const char *'
| `-ParmVarDecl 0x28deb7905a8 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb790a60 <line:163:24, col:196> col:40 _strnicoll_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7907b0 <col:80, col:93> col:93 _Str1 'const char *'
| |-ParmVarDecl 0x28deb790830 <col:127, col:140> col:140 _Str2 'const char *'
| |-ParmVarDecl 0x28deb7908a8 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb790920 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb790d78 <line:164:40> col:40 implicit strcspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x28deb790e18 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb790e80 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28deb795fc0 prev 0x28deb790d78 <col:24, col:104> col:40 strcspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x28deb790b50 <col:56, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x28deb790bd0 <col:83, col:96> col:96 _Control 'const char *'
|-FunctionDecl 0x28deb796280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:165:118> col:77 _strerror 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x28deb7961a0 <col:98, col:111> col:111 _ErrMsg 'const char *'
| `-DeprecatedAttr 0x28deb796328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb796700 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:166:28, col:155> col:44 _strerror_s 'errno_t (char *, size_t, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *)'
| |-ParmVarDecl 0x28deb796470 <col:85, col:92> col:92 _Buf 'char *'
| |-ParmVarDecl 0x28deb7964e8 <col:103, col:110> col:110 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb796568 <col:135, col:148> col:148 _ErrMsg 'const char *'
|-FunctionDecl 0x28deb796a18 <line:168:76> col:76 implicit strerror 'char *(int)' extern
| `-ParmVarDecl 0x28deb796ab8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28deb796b28 prev 0x28deb796a18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:168:93> col:76 strerror 'char *(int)'
| |-ParmVarDecl 0x28deb7968e0 <col:90> col:93 'int'
| `-DeprecatedAttr 0x28deb796bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb791f80 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:170:28, col:139> col:44 strerror_s 'errno_t (char *, size_t, int) __attribute__((cdecl))':'errno_t (char *, size_t, int)'
| |-ParmVarDecl 0x28deb796d18 <col:84, col:91> col:91 _Buf 'char *'
| |-ParmVarDecl 0x28deb796d90 <col:102, col:109> col:109 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb796e10 <col:128, col:132> col:132 _ErrNum 'int'
|-FunctionDecl 0x28deb792288 <line:173:28, col:109> col:44 _strlwr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x28deb792068 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x28deb7920e0 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb792578 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:175:79 _strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28deb792428 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x28deb792620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb792a30 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:176:28, col:139> col:44 _strlwr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb792768 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x28deb7927e0 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb792858 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb792e00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:178:82 _strlwr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x28deb792bd8 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x28deb792c50 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28deb792eb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strlwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb78f3c8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:180:40, col:206> col:56 strncat_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x28deb78f050 <col:98, col:105> col:105 _Dst 'char *'
| |-ParmVarDecl 0x28deb78f0c8 <col:116, col:124> col:124 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28deb78f148 <col:165, col:178> col:178 _Src 'const char *'
| `-ParmVarDecl 0x28deb78f1c0 <col:189, col:197> col:197 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28deb78f848 <line:186:83> col:83 implicit strncat 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x28deb78f8e8 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x28deb78f950 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb78f9b8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb78fa38 prev 0x28deb78f848 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:186:83 strncat 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x28deb78f578 <col:161, col:167> col:167 _Dest 'char *'
| |-ParmVarDecl 0x28deb78f5f8 <col:198, col:212> col:212 _Source 'const char *'
| |-ParmVarDecl 0x28deb78f670 <col:226, col:234> col:234 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb78faf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb78fe50 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:188:40> col:40 implicit strncmp 'int (const char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x28deb794fb0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x28deb795018 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb795080 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb795100 prev 0x28deb78fe50 <col:24, col:163> col:40 strncmp 'int (const char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x28deb78fc38 <col:75, col:88> col:88 _Str1 'const char *'
| |-ParmVarDecl 0x28deb78fcb8 <col:122, col:135> col:135 _Str2 'const char *'
| `-ParmVarDecl 0x28deb78fd30 <col:147, col:154> col:154 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb795400 <line:189:24, col:165> col:40 _strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x28deb7951e8 <col:77, col:90> col:90 _Str1 'const char *'
| |-ParmVarDecl 0x28deb795268 <col:124, col:137> col:137 _Str2 'const char *'
| `-ParmVarDecl 0x28deb7952e0 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb795798 <line:190:24, col:195> col:40 _strnicmp_l 'int (const char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7954e8 <col:79, col:92> col:92 _Str1 'const char *'
| |-ParmVarDecl 0x28deb795568 <col:126, col:139> col:139 _Str2 'const char *'
| |-ParmVarDecl 0x28deb7955e0 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb795658 <col:178, col:188> col:188 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb795b30 <line:192:40, col:203> col:56 strncpy_s 'errno_t (char *, rsize_t, const char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t, const char *, rsize_t)'
| |-ParmVarDecl 0x28deb795888 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x28deb795900 <col:113, col:121> col:121 _SizeInBytes 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28deb795980 <col:162, col:175> col:175 _Src 'const char *'
| `-ParmVarDecl 0x28deb7959f8 <col:186, col:194> col:194 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28deb795ef8 <line:195:83> col:83 implicit strncpy 'char *(char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x28deb797fe0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x28deb798048 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb7980b0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb798130 prev 0x28deb795ef8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:195:83 strncpy 'char *(char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x28deb795ce0 <col:167, col:173> col:173 _Dest 'char *'
| |-ParmVarDecl 0x28deb795d60 <col:204, col:218> col:218 _Source 'const char *'
| |-ParmVarDecl 0x28deb795dd8 <col:232, col:240> col:240 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb7981e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7986a8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:196:40, col:174> col:56 _strnset_s 'errno_t (char *, size_t, int, size_t) __attribute__((cdecl))':'errno_t (char *, size_t, int, size_t)'
| |-ParmVarDecl 0x28deb798330 <col:99, col:106> col:106 _Str 'char *'
| |-ParmVarDecl 0x28deb7983a8 <col:117, col:124> col:124 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb798428 <col:143, col:147> col:147 _Val 'int'
| `-ParmVarDecl 0x28deb7984a0 <col:158, col:165> col:165 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb798b28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:198:83 _strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x28deb798858 <col:163, col:169> col:169 _Dest 'char *'
| |-ParmVarDecl 0x28deb7988d8 <col:181, col:186> col:186 _Val 'int'
| |-ParmVarDecl 0x28deb798950 <col:197, col:205> col:205 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb798be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb798f10 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:199:54> col:54 implicit strpbrk 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x28deb796fd0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb797038 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28deb7970b0 prev 0x28deb798f10 <col:38, col:116> col:54 strpbrk 'char *(const char *, const char *)'
| |-ParmVarDecl 0x28deb798d28 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x28deb798da8 <col:95, col:108> col:108 _Control 'const char *'
|-FunctionDecl 0x28deb797310 <line:200:54> col:54 implicit strrchr 'char *(const char *, int)' extern
| |-ParmVarDecl 0x28deb7973b0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb797418 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28deb797490 prev 0x28deb797310 <col:38, col:100> col:54 strrchr 'char *(const char *, int)'
| |-ParmVarDecl 0x28deb797190 <col:69, col:82> col:82 _Str 'const char *'
| `-ParmVarDecl 0x28deb797210 <col:93, col:97> col:97 _Ch 'int'
|-FunctionDecl 0x28deb797650 <line:201:9, col:54> col:25 _strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| `-ParmVarDecl 0x28deb797570 <col:43, col:50> col:50 _Str 'char *'
|-FunctionDecl 0x28deb7978a0 <line:202:40> col:40 implicit strspn 'unsigned long long (const char *, const char *)' extern
| |-ParmVarDecl 0x28deb797940 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb7979a8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28deb797a20 prev 0x28deb7978a0 <col:24, col:101> col:40 strspn 'unsigned long long (const char *, const char *)'
| |-ParmVarDecl 0x28deb797728 <col:54, col:67> col:67 _Str 'const char *'
| `-ParmVarDecl 0x28deb7977a8 <col:80, col:93> col:93 _Control 'const char *'
|-FunctionDecl 0x28deb797c80 <line:203:70> col:70 implicit strstr 'char *(const char *, const char *)' extern
| |-ParmVarDecl 0x28deb797d20 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb797d88 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28deb797e00 prev 0x28deb797c80 <col:54, col:130> col:70 strstr 'char *(const char *, const char *)'
| |-ParmVarDecl 0x28deb797b00 <col:84, col:97> col:97 _Str 'const char *'
| `-ParmVarDecl 0x28deb797b80 <col:110, col:123> col:123 _SubStr 'const char *'
|-FunctionDecl 0x28deb7910f0 <line:204:74> col:74 implicit strtok 'char *(char *, const char *)' extern
| |-ParmVarDecl 0x28deb791190 <<invalid sloc>> <invalid sloc> 'char *'
| `-ParmVarDecl 0x28deb7911f8 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28deb791270 prev 0x28deb7910f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:204:134> col:74 strtok 'char *(char *, const char *)'
| |-ParmVarDecl 0x28deb790f70 <col:95, col:102> col:102 _Str 'char *'
| |-ParmVarDecl 0x28deb790ff0 <col:115, col:128> col:128 _Delim 'const char *'
| `-DeprecatedAttr 0x28deb791320 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strtok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb791708 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:206:36, col:162> col:52 strtok_s 'char *(char *, const char *, char **) __attribute__((cdecl))':'char *(char *, const char *, char **)'
| |-ParmVarDecl 0x28deb791468 <col:75, col:82> col:82 _Str 'char *'
| |-ParmVarDecl 0x28deb7914e8 <col:95, col:108> col:108 _Delim 'const char *'
| `-ParmVarDecl 0x28deb791568 <col:146, col:154> col:154 _Context 'char **'
|-FunctionDecl 0x28deb791960 <line:208:28, col:109> col:44 _strupr_s 'errno_t (char *, size_t) __attribute__((cdecl))':'errno_t (char *, size_t)'
| |-ParmVarDecl 0x28deb7917f0 <col:79, col:86> col:86 _Str 'char *'
| `-ParmVarDecl 0x28deb791868 <col:97, col:104> col:104 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb791be0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:210:79 _strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28deb791b00 <col:99, col:105> col:105 _String 'char *'
| `-DeprecatedAttr 0x28deb791c88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb794008 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:211:28, col:130> col:44 _strupr_s_l 'errno_t (char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb791dd0 <col:81, col:88> col:88 _Str 'char *'
| |-ParmVarDecl 0x28deb791e48 <col:99, col:106> col:106 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb791ec0 <col:113, col:123> col:123 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb794328 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:213:82 _strupr_l 'char *(char *, _locale_t) __attribute__((cdecl))':'char *(char *, _locale_t)'
| |-ParmVarDecl 0x28deb7941b0 <col:148, col:154> col:154 _String 'char *'
| |-ParmVarDecl 0x28deb794228 <col:172, col:183> col:183 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28deb7943d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _strupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7947f0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:214:44> col:44 implicit strxfrm 'unsigned long long (char *, const char *, unsigned long long)' extern
| |-ParmVarDecl 0x28deb794890 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x28deb7948f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb794960 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb7949e0 prev 0x28deb7947f0 <col:28, col:155> col:44 strxfrm 'unsigned long long (char *, const char *, unsigned long long)'
| |-ParmVarDecl 0x28deb794520 <col:95, col:102> col:102 _Dst 'char *'
| |-ParmVarDecl 0x28deb7945a0 <col:115, col:128> col:128 _Src 'const char *'
| `-ParmVarDecl 0x28deb794618 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb794e38 <line:215:28, col:185> col:44 _strxfrm_l 'size_t (char *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb794ac8 <col:97, col:104> col:104 _Dst 'char *'
| |-ParmVarDecl 0x28deb794b48 <col:117, col:130> col:130 _Src 'const char *'
| |-ParmVarDecl 0x28deb794bc0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb794c38 <col:168, col:178> col:178 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb799188 <line:245:71> col:71 implicit strdup 'char *(const char *)' extern
| `-ParmVarDecl 0x28deb799228 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x28deb799298 prev 0x28deb799188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:245:106> col:71 strdup 'char *(const char *)'
| |-ParmVarDecl 0x28deb7990a8 <col:89, col:102> col:102 _Src 'const char *'
| `-DeprecatedAttr 0x28deb799340 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strdup. See online help for details." ""
|-FunctionDecl 0x28deb799688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:252:129> col:69 strcmpi 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28deb799508 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x28deb799588 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x28deb799738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strcmpi. See online help for details." ""
|-FunctionDecl 0x28deb799a80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:253:129> col:69 stricmp 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x28deb799900 <col:84, col:97> col:97 _Str1 'const char *'
| |-ParmVarDecl 0x28deb799980 <col:111, col:124> col:124 _Str2 'const char *'
| `-DeprecatedAttr 0x28deb799b30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _stricmp. See online help for details." ""
|-FunctionDecl 0x28deb799dd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:254:84> col:56 strlwr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28deb799cf8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x28deb799e80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strlwr. See online help for details." ""
|-FunctionDecl 0x28deb79a2d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:255:193> col:70 strnicmp 'int (const char *, const char *, size_t) __attribute__((cdecl))':'int (const char *, const char *, size_t)'
| |-ParmVarDecl 0x28deb79a0b8 <col:106, col:119> col:119 _Str1 'const char *'
| |-ParmVarDecl 0x28deb79a138 <col:153, col:166> col:166 _Str 'const char *'
| |-ParmVarDecl 0x28deb79a1b0 <col:177, col:184> col:184 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb79a388 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnicmp. See online help for details." ""
|-FunctionDecl 0x28deb79a768 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:256:143> col:57 strnset 'char *(char *, int, size_t) __attribute__((cdecl))':'char *(char *, int, size_t)'
| |-ParmVarDecl 0x28deb79a550 <col:94, col:101> col:101 _Str 'char *'
| |-ParmVarDecl 0x28deb79a5d0 <col:112, col:116> col:116 _Val 'int'
| |-ParmVarDecl 0x28deb79a648 <col:127, col:134> col:134 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb79a820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strnset. See online help for details." ""
|-FunctionDecl 0x28deb79aac8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:257:84> col:56 strrev 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28deb79a9e8 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x28deb79ab70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strrev. See online help for details." ""
|-FunctionDecl 0x28deb79aeb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:258:99> col:56 strset 'char *(char *, int) __attribute__((cdecl))':'char *(char *, int)'
| |-ParmVarDecl 0x28deb79ad38 <col:73, col:80> col:80 _Str 'char *'
| |-ParmVarDecl 0x28deb79adb8 <col:91, col:95> col:95 _Val 'int'
| `-DeprecatedAttr 0x28deb79af68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strset. See online help for details." ""
|-FunctionDecl 0x28deb7931f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:259:84> col:56 strupr 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x28deb793110 <col:73, col:80> col:80 _Str 'char *'
| `-DeprecatedAttr 0x28deb793298 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _strupr. See online help for details." ""
|-FunctionDecl 0x28deb793530 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:273:24, col:77> col:42 _wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| `-ParmVarDecl 0x28deb7933b8 <col:57, col:73> col:73 _Str 'const wchar_t *'
|-FunctionDecl 0x28deb7938c0 <line:280:40, col:167> col:56 wcscat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x28deb793600 <col:97, col:107> col:107 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28deb793678 <col:118, col:126> col:126 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7936f0 <col:147, col:163> col:163 _Src 'const wchar_t *'
|-FunctionDecl 0x28deb793c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:284:82 wcscat 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb793a60 <col:164, col:173> col:173 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28deb793ad8 <col:187, col:204> col:204 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x28deb793d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb79f158 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:288:41> col:41 implicit wcschr 'unsigned short *(const unsigned short *, unsigned short)' extern
| |-ParmVarDecl 0x28deb79f1f8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x28deb79f260 <<invalid sloc>> <invalid sloc> 'unsigned short'
|-FunctionDecl 0x28deb79f2d8 prev 0x28deb79f158 <col:23, col:88> col:41 wcschr 'unsigned short *(const unsigned short *, unsigned short)'
| |-ParmVarDecl 0x28deb793e68 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb793ee0 <col:77, col:85> col:85 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x28deb79f5d0 <line:289:36> col:36 implicit wcscmp 'int (const unsigned short *, const unsigned short *)' extern
| |-ParmVarDecl 0x28deb79f670 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x28deb79f6d8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x28deb79f750 prev 0x28deb79f5d0 <col:24, col:101> col:36 wcscmp 'int (const unsigned short *, const unsigned short *)'
| |-ParmVarDecl 0x28deb79f3b0 <col:50, col:66> col:66 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x28deb79f428 <col:80, col:96> col:96 _Str2 'const wchar_t *'
|-FunctionDecl 0x28deb79fa30 <line:291:40, col:164> col:56 wcscpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *)'
| |-ParmVarDecl 0x28deb79f828 <col:94, col:104> col:104 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28deb79f8a0 <col:115, col:123> col:123 _SizeInWords 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x28deb79f918 <col:144, col:160> col:160 _Src 'const wchar_t *'
|-FunctionDecl 0x28deb79fd40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:294:82 wcscpy 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb79fbd0 <col:136, col:145> col:145 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28deb79fc48 <col:159, col:176> col:176 _Source 'const wchar_t *'
| `-DeprecatedAttr 0x28deb79fdf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcscpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7a0168 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:295:24, col:107> col:39 wcscspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb79ff30 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb79ffa8 <col:83, col:99> col:99 _Control 'const wchar_t *'
|-FunctionDecl 0x28deb7a03b0 <line:296:39> col:39 implicit wcslen 'unsigned long long (const unsigned short *)' extern
| `-ParmVarDecl 0x28deb7a0450 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
|-FunctionDecl 0x28deb7a04c0 prev 0x28deb7a03b0 <col:24, col:73> col:39 wcslen 'unsigned long long (const unsigned short *)'
| `-ParmVarDecl 0x28deb7a0240 <col:53, col:69> col:69 _Str 'const wchar_t *'
|-FunctionDecl 0x28deb7a07a8 <line:300:1, col:94> col:16 used wcsnlen 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7a0590 <col:51, col:67> col:67 _Src 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a0608 <col:78, col:85> col:85 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7a09f0 <line:302:16, line:308:1> line:305:18 wcsnlen_s 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' static inline
| |-ParmVarDecl 0x28deb7a0880 <col:55, col:71> col:71 used _Src 'const wchar_t *'
| |-ParmVarDecl 0x28deb7a08f8 <col:82, col:89> col:89 used _MaxCount 'size_t':'unsigned long long'
| `-CompoundStmt 0x28deb7a0d88 <line:306:1, line:308:1>
|   `-ReturnStmt 0x28deb7a0d78 <line:307:5, col:56>
|     `-ConditionalOperator 0x28deb7a0d48 <col:12, col:56> 'unsigned long long'
|       |-ParenExpr 0x28deb7a0bb0 <col:12, col:25> 'int'
|       | `-BinaryOperator 0x28deb7a0b90 <col:13, line:36:27> 'int' '=='
|       |   |-ImplicitCastExpr 0x28deb7a0b60 <line:307:13> 'const wchar_t *' <LValueToRValue>
|       |   | `-DeclRefExpr 0x28deb7a0ab8 <col:13> 'const wchar_t *' lvalue ParmVar 0x28deb7a0880 '_Src' 'const wchar_t *'
|       |   `-ImplicitCastExpr 0x28deb7a0b78 <line:36:17, col:27> 'const wchar_t *' <BitCast>
|       |     `-ParenExpr 0x28deb7a0b40 <col:17, col:27> 'void *'
|       |       `-CStyleCastExpr 0x28deb7a0b18 <col:18, col:26> 'void *' <NullToPointer>
|       |         `-IntegerLiteral 0x28deb7a0ad8 <col:26> 'int' 0
|       |-ImplicitCastExpr 0x28deb7a0d30 <line:307:29> 'unsigned long long' <IntegralCast>
|       | `-IntegerLiteral 0x28deb7a0bd0 <col:29> 'int' 0
|       `-CallExpr 0x28deb7a0cd0 <col:33, col:56> 'size_t':'unsigned long long'
|         |-ImplicitCastExpr 0x28deb7a0cb8 <col:33> 'size_t (*)(const wchar_t *, size_t) __attribute__((cdecl))' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x28deb7a0bf8 <col:33> 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)' Function 0x28deb7a07a8 'wcsnlen' 'size_t (const wchar_t *, size_t) __attribute__((cdecl))':'size_t (const wchar_t *, size_t)'
|         |-ImplicitCastExpr 0x28deb7a0d00 <col:41> 'const wchar_t *' <LValueToRValue>
|         | `-DeclRefExpr 0x28deb7a0c18 <col:41> 'const wchar_t *' lvalue ParmVar 0x28deb7a0880 '_Src' 'const wchar_t *'
|         `-ImplicitCastExpr 0x28deb7a0d18 <col:47> 'size_t':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x28deb7a0c38 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x28deb7a08f8 '_MaxCount' 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb79b0f8 <line:311:40, col:212> col:56 wcsncat_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x28deb7a0db0 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28deb7a0e28 <col:119, col:127> col:127 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7a0ea0 <col:168, col:184> col:184 _Src 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a0f18 <col:195, col:203> col:203 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28deb79b560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:316:86 wcsncat 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb79b2a0 <col:167, col:176> col:176 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28deb79b318 <col:207, col:224> col:224 _Source 'const wchar_t *'
| |-ParmVarDecl 0x28deb79b390 <col:238, col:246> col:246 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb79b618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncat_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb79ba28 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:318:36> col:36 implicit wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)' extern
| |-ParmVarDecl 0x28deb79bac8 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| |-ParmVarDecl 0x28deb79bb30 <<invalid sloc>> <invalid sloc> 'const unsigned short *'
| `-ParmVarDecl 0x28deb79bb98 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb79bc18 prev 0x28deb79ba28 <col:24, col:165> col:36 wcsncmp 'int (const unsigned short *, const unsigned short *, unsigned long long)'
| |-ParmVarDecl 0x28deb79b758 <col:71, col:87> col:87 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb79b7d0 <col:121, col:137> col:137 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28deb79b848 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7a3090 <line:320:40, col:209> col:56 wcsncpy_s 'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t) __attribute__((cdecl))':'errno_t (wchar_t *, rsize_t, const wchar_t *, rsize_t)'
| |-ParmVarDecl 0x28deb79bcf8 <col:95, col:105> col:105 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28deb79bd70 <col:116, col:124> col:124 _SizeInWords 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28deb79bde8 <col:165, col:181> col:181 _Src 'const wchar_t *'
| `-ParmVarDecl 0x28deb79be60 <col:192, col:200> col:200 _MaxCount 'rsize_t':'unsigned long long'
|-FunctionDecl 0x28deb7a3440 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:323:86 wcsncpy 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7a3238 <col:179, col:188> col:188 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28deb7a32b0 <col:219, col:236> col:236 _Source 'const wchar_t *'
| |-ParmVarDecl 0x28deb7a3328 <col:250, col:258> col:258 _Count 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb7a34f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcsncpy_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7a3858 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:324:38, col:124> col:56 wcspbrk 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb7a3638 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a36b0 <col:100, col:116> col:116 _Control 'const wchar_t *'
|-FunctionDecl 0x28deb7a3aa0 <line:325:38, col:109> col:56 wcsrchr 'wchar_t *(const wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(const wchar_t *, wchar_t)'
| |-ParmVarDecl 0x28deb7a3930 <col:71, col:87> col:87 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a39a8 <col:98, col:106> col:106 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x28deb7a3ce8 <line:326:24, col:106> col:39 wcsspn 'size_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'size_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb7a3b78 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a3bf0 <col:82, col:98> col:98 _Control 'const wchar_t *'
|-FunctionDecl 0x28deb7a3f30 <line:329:23, col:107> col:41 wcsstr 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb7a3dc0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a3e38 <col:84, col:100> col:100 _SubStr 'const wchar_t *'
|-FunctionDecl 0x28deb79e280 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:330:142> col:76 wcstok 'wchar_t *(wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb79e110 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x28deb79e188 <col:120, col:136> col:136 _Delim 'const wchar_t *'
| `-DeprecatedAttr 0x28deb79e330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstok_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb79e790 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:332:36, col:173> col:54 wcstok_s 'wchar_t *(wchar_t *, const wchar_t *, wchar_t **) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x28deb79e470 <col:77, col:87> col:87 _Str 'wchar_t *'
| |-ParmVarDecl 0x28deb79e4e8 <col:100, col:116> col:116 _Delim 'const wchar_t *'
| `-ParmVarDecl 0x28deb79e5c0 <col:154, col:165> col:165 _Context 'wchar_t **'
|-FunctionDecl 0x28deb79eab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:334:105> col:79 _wcserror 'wchar_t *(int) __attribute__((cdecl))':'wchar_t *(int)'
| |-ParmVarDecl 0x28deb79e938 <col:94, col:98> col:98 _ErrNum 'int'
| `-DeprecatedAttr 0x28deb79eb58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb79ef60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:335:28, col:147> col:44 _wcserror_s 'errno_t (wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, int)'
| |-ParmVarDecl 0x28deb79ec98 <col:89, col:99> col:99 _Buf 'wchar_t *'
| |-ParmVarDecl 0x28deb79ed10 <col:110, col:117> col:117 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb79ed90 <col:136, col:140> col:140 _ErrNum 'int'
|-FunctionDecl 0x28deb79c200 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:337:122> col:80 __wcserror 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x28deb79c128 <col:102, col:118> col:118 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x28deb79c2a8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __wcserror_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb79c670 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:338:28, col:165> col:44 __wcserror_s 'errno_t (wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x28deb79c3e8 <col:90, col:100> col:100 _Buffer 'wchar_t *'
| |-ParmVarDecl 0x28deb79c460 <col:114, col:121> col:121 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb79c4d8 <col:142, col:158> col:158 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x28deb79c8c8 <line:341:24, col:103> col:36 _wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb79c750 <col:52, col:68> col:68 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x28deb79c7c8 <col:82, col:98> col:98 _Str2 'const wchar_t *'
|-FunctionDecl 0x28deb79cc68 <line:342:24, col:133> col:36 _wcsicmp_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28deb79c9a0 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb79ca18 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28deb79ca90 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb79cf58 <line:343:24, col:167> col:36 _wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb79cd48 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb79cdc0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28deb79ce38 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7a8480 <line:344:24, col:197> col:36 _wcsnicmp_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7a8108 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb7a8180 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x28deb7a81f8 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7a8270 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7a88d8 <line:345:40, col:181> col:56 _wcsnset_s 'errno_t (wchar_t *, size_t, wchar_t, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t, size_t)'
| |-ParmVarDecl 0x28deb7a8568 <col:99, col:109> col:109 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28deb7a85e0 <col:120, col:127> col:127 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7a8658 <col:146, col:154> col:154 _Val 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x28deb7a86d0 <col:165, col:172> col:172 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7a8d40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1980:149> D:\Microsoft Visual Studio 12.0\VC\include\string.h:347:86 _wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x28deb7a8a80 <col:172, col:181> col:181 _Str 'wchar_t *'
| |-ParmVarDecl 0x28deb7a8af8 <col:187, col:196> col:196 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x28deb7a8b70 <col:207, col:215> col:215 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb7a8df8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsnset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7a40a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:348:9, col:59> col:27 _wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| `-ParmVarDecl 0x28deb7a8f38 <col:45, col:55> col:55 _Str 'wchar_t *'
|-FunctionDecl 0x28deb7a4430 <line:349:40, col:159> col:56 _wcsset_s 'errno_t (wchar_t *, size_t, wchar_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, wchar_t)'
| |-ParmVarDecl 0x28deb7a4170 <col:98, col:108> col:108 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28deb7a41e8 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7a4260 <col:145, col:153> col:153 _Value 'wchar_t':'unsigned short'
|-FunctionDecl 0x28deb7a47e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:351:85 _wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x28deb7a45d0 <col:150, col:159> col:159 _Str 'wchar_t *'
| |-ParmVarDecl 0x28deb7a4648 <col:165, col:174> col:174 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x28deb7a4898 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsset_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7a4bf8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:353:28, col:126> col:44 _wcslwr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7a49d8 <col:86, col:96> col:96 _Str 'wchar_t *'
| `-ParmVarDecl 0x28deb7a4a50 <col:107, col:114> col:114 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7a4e68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:355:82 _wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28deb7a4d90 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x28deb7a4f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7a5370 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:356:28, col:156> col:44 _wcslwr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7a50b0 <col:88, col:98> col:98 _Str 'wchar_t *'
| |-ParmVarDecl 0x28deb7a5128 <col:109, col:116> col:116 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7a51a0 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7a5728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:358:85 _wcslwr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28deb7a5510 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x28deb7a5588 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28deb7a57d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcslwr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7a5a88 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:359:28, col:112> col:44 _wcsupr_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7a5918 <col:79, col:89> col:89 _Str 'wchar_t *'
| `-ParmVarDecl 0x28deb7a5990 <col:100, col:107> col:107 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7a5cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\string.h:361:82 _wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28deb7a5c20 <col:102, col:111> col:111 _String 'wchar_t *'
| `-DeprecatedAttr 0x28deb7a5da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7a7110 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:362:28, col:142> col:44 _wcsupr_s_l 'errno_t (wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7a5ee0 <col:81, col:91> col:91 _Str 'wchar_t *'
| |-ParmVarDecl 0x28deb7a5f58 <col:102, col:109> col:109 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7a5fd0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7a7420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1939:133> D:\Microsoft Visual Studio 12.0\VC\include\string.h:364:85 _wcsupr_l 'wchar_t *(wchar_t *, _locale_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28deb7a72b0 <col:154, col:163> col:163 _String 'wchar_t *'
| |-ParmVarDecl 0x28deb7a7328 <col:181, col:192> col:192 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28deb7a74d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcsupr_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7a78d0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:365:28, col:159> col:43 wcsxfrm 'size_t (wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7a7610 <col:93, col:103> col:103 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28deb7a7688 <col:116, col:132> col:132 _Src 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a7700 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7a7d18 <line:366:28, col:189> col:43 _wcsxfrm_l 'size_t (wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7a79b0 <col:96, col:106> col:106 _Dst 'wchar_t *'
| |-ParmVarDecl 0x28deb7a7a28 <col:119, col:134> col:134 _Src 'const wchar_t *'
| |-ParmVarDecl 0x28deb7a7aa0 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7a7b18 <col:172, col:182> col:182 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7a7f78 <line:367:24, col:102> col:36 wcscoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb7a7e00 <col:51, col:67> col:67 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a7e78 <col:81, col:97> col:97 _Str2 'const wchar_t *'
|-FunctionDecl 0x28deb7a1208 <line:368:24, col:133> col:36 _wcscoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28deb7a8050 <col:54, col:70> col:70 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb7a1070 <col:84, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a10e8 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7a1460 <line:369:24, col:104> col:36 _wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb7a12e8 <col:53, col:69> col:69 _Str1 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a1360 <col:83, col:99> col:99 _Str2 'const wchar_t *'
|-FunctionDecl 0x28deb7a1748 <line:370:24, col:133> col:36 _wcsicoll_l 'int (const wchar_t *, const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28deb7a1538 <col:55, col:71> col:71 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb7a15b0 <col:85, col:100> col:100 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a1628 <col:116, col:126> col:126 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7a1a38 <line:371:24, col:167> col:36 _wcsncoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7a1828 <col:73, col:89> col:89 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb7a18a0 <col:123, col:139> col:139 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a1918 <col:151, col:158> col:158 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7a1dc0 <line:372:24, col:197> col:36 _wcsncoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7a1b18 <col:75, col:91> col:91 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb7a1b90 <col:125, col:141> col:141 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x28deb7a1c08 <col:153, col:160> col:160 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7a1c80 <col:180, col:190> col:190 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7ad178 <line:373:24, col:168> col:36 _wcsnicoll 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7a1ea8 <col:74, col:90> col:90 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb7a1f20 <col:124, col:140> col:140 _Str2 'const wchar_t *'
| `-ParmVarDecl 0x28deb7a1f98 <col:152, col:159> col:159 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7ad500 <line:374:24, col:198> col:36 _wcsnicoll_l 'int (const wchar_t *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7ad258 <col:76, col:92> col:92 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb7ad2d0 <col:126, col:142> col:142 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x28deb7ad348 <col:154, col:161> col:161 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7ad3c0 <col:181, col:191> col:191 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7ad760 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:403:108> col:74 wcsdup 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x28deb7ad688 <col:88, col:104> col:104 _Str 'const wchar_t *'
| `-DeprecatedAttr 0x28deb7ad808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsdup. See online help for details." ""
|-FunctionDecl 0x28deb7adb40 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:413:135> col:69 wcsicmp 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb7ad9c8 <col:84, col:100> col:100 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb7ada40 <col:114, col:130> col:130 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x28deb7adbf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicmp. See online help for details." ""
|-FunctionDecl 0x28deb7adfc0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:414:200> col:70 wcsnicmp 'int (const wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7addb0 <col:106, col:122> col:122 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb7ade28 <col:156, col:172> col:172 _Str2 'const wchar_t *'
| |-ParmVarDecl 0x28deb7adea0 <col:184, col:191> col:191 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb7ae078 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnicmp. See online help for details." ""
|-FunctionDecl 0x28deb7a9470 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:415:153> col:60 wcsnset 'wchar_t *(wchar_t *, wchar_t, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t, size_t)'
| |-ParmVarDecl 0x28deb7a9268 <col:97, col:107> col:107 _Str 'wchar_t *'
| |-ParmVarDecl 0x28deb7a92e0 <col:118, col:126> col:126 _Val 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x28deb7a9358 <col:137, col:144> col:144 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb7a9528 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsnset. See online help for details." ""
|-FunctionDecl 0x28deb7a97c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:416:90> col:59 wcsrev 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28deb7a96e8 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x28deb7a9868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsrev. See online help for details." ""
|-FunctionDecl 0x28deb7a9b98 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:417:104> col:59 wcsset 'wchar_t *(wchar_t *, wchar_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, wchar_t)'
| |-ParmVarDecl 0x28deb7a9a28 <col:76, col:86> col:86 _Str 'wchar_t *'
| |-ParmVarDecl 0x28deb7a9aa0 <col:92, col:100> col:100 _Val 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x28deb7a9c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsset. See online help for details." ""
|-FunctionDecl 0x28deb7a9ee0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:418:90> col:59 wcslwr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28deb7a9e08 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x28deb7a9f88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcslwr. See online help for details." ""
|-FunctionDecl 0x28deb7ac2a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:419:90> col:59 wcsupr 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x28deb7ac1d0 <col:76, col:86> col:86 _Str 'wchar_t *'
| `-DeprecatedAttr 0x28deb7ac350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsupr. See online help for details." ""
|-FunctionDecl 0x28deb7ac688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\string.h:420:137> col:70 wcsicoll 'int (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb7ac510 <col:86, col:102> col:102 _Str1 'const wchar_t *'
| |-ParmVarDecl 0x28deb7ac588 <col:116, col:132> col:132 _Str2 'const wchar_t *'
| `-DeprecatedAttr 0x28deb7ac738 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _wcsicoll. See online help for details." ""
|-TypedefDecl 0x28deb7aca38 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x28deb7ac9d0 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x28deb7ac970 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x28deb7ac920 'int (void)' sugar
|     | `-FunctionProtoType 0x28deb7ac8f0 'int (void)' cdecl
|     |   `-BuiltinType 0x28de9d14a40 'int'
|     `-ParenType 0x28deb7ac920 'int (void)' sugar
|       `-FunctionProtoType 0x28deb7ac8f0 'int (void)' cdecl
|         `-BuiltinType 0x28de9d14a40 'int'
|-RecordDecl 0x28deb7aca90 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x28deb7acb50 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28deb7acbc8 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x28deb7acc38 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x28deb7acce8 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x28deb7acc90 'struct _div_t' sugar
|   `-RecordType 0x28deb7acb30 'struct _div_t'
|     `-Record 0x28deb7aca90 '_div_t'
|-RecordDecl 0x28deb7acd58 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x28deb7ace10 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28deb7ace88 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x28deb7acef8 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x28deb7acfa8 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x28deb7acf50 'struct _ldiv_t' sugar
|   `-RecordType 0x28deb7acdf0 'struct _ldiv_t'
|     `-Record 0x28deb7acd58 '_ldiv_t'
|-RecordDecl 0x28deb7ad018 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x28deb7ad0d0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x28deb7b5018 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x28deb7b5088 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x28deb7b5138 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x28deb7b50e0 'struct _lldiv_t' sugar
|   `-RecordType 0x28deb7ad0b0 'struct _lldiv_t'
|     `-Record 0x28deb7ad018 '_lldiv_t'
|-RecordDecl 0x28deb7b51d0 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x28deb7b5290 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x28deb7b5390 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x28deb7b5448 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x28deb7b53f0 'struct _LDOUBLE' sugar
|   `-RecordType 0x28deb7b5270 '_LDOUBLE'
|     `-Record 0x28deb7b51d0 ''
|-RecordDecl 0x28deb7b54b8 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x28deb7b5588 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x28deb7b5638 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x28deb7b55e0 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x28deb7b5550 '_CRT_DOUBLE'
|     `-Record 0x28deb7b54b8 ''
|-RecordDecl 0x28deb7b56a8 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x28deb7b5778 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x28deb7b5828 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x28deb7b57d0 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x28deb7b5740 '_CRT_FLOAT'
|     `-Record 0x28deb7b56a8 ''
|-RecordDecl 0x28deb7b5898 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x28deb7b5968 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x28deb7b5a18 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x28deb7b59c0 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x28deb7b5930 '_LONGDOUBLE'
|     `-Record 0x28deb7b5898 ''
|-RecordDecl 0x28deb7b5ab0 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x28deb7b5b70 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x28deb7b5c70 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x28deb7b5d28 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x28deb7b5cd0 'struct _LDBL12' sugar
|   `-RecordType 0x28deb7b5b50 '_LDBL12'
|     `-Record 0x28deb7b5ab0 ''
|-VarDecl 0x28deb7b5db0 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x28deb7b5f30 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x28deb7b7178 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x28deb7b7018 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x28deb7b73c0 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x28deb7b7360 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x28deb7b7300 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x28deb7b72b0 'void (void)' sugar
|     | `-FunctionProtoType 0x28deb705c90 'void (void)' cdecl
|     |   `-BuiltinType 0x28de9d149a0 'void'
|     `-ParenType 0x28deb7b72b0 'void (void)' sugar
|       `-FunctionProtoType 0x28deb705c90 'void (void)' cdecl
|         `-BuiltinType 0x28de9d149a0 'void'
|-FunctionDecl 0x28deb7b75c0 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x28deb7b7450 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x28deb7b77d8 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x28deb7b7c28 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x28deb7b7ba0 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x28deb7b7b40 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x28deb7b7af0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x28deb728590 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x28de9d149a0 'void'
|     |   |-PointerType 0x28deb706060 'const wchar_t *'
|     |   | `-QualType 0x28deb706011 'const wchar_t' const
|     |   |   `-TypedefType 0x28deb706010 'wchar_t' sugar
|     |   |     |-Typedef 0x28deb705900 'wchar_t'
|     |   |     `-BuiltinType 0x28de9d14ac0 'unsigned short'
|     |   |-PointerType 0x28deb706060 'const wchar_t *'
|     |   | `-QualType 0x28deb706011 'const wchar_t' const
|     |   |   `-TypedefType 0x28deb706010 'wchar_t' sugar
|     |   |     |-Typedef 0x28deb705900 'wchar_t'
|     |   |     `-BuiltinType 0x28de9d14ac0 'unsigned short'
|     |   |-PointerType 0x28deb706060 'const wchar_t *'
|     |   | `-QualType 0x28deb706011 'const wchar_t' const
|     |   |   `-TypedefType 0x28deb706010 'wchar_t' sugar
|     |   |     |-Typedef 0x28deb705900 'wchar_t'
|     |   |     `-BuiltinType 0x28de9d14ac0 'unsigned short'
|     |   |-BuiltinType 0x28de9d14ae0 'unsigned int'
|     |   `-TypedefType 0x28deb706270 'uintptr_t' sugar
|     |     |-Typedef 0x28de9d157c0 'uintptr_t'
|     |     `-BuiltinType 0x28de9d14b20 'unsigned long long'
|     `-ParenType 0x28deb7b7af0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x28deb728590 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x28de9d149a0 'void'
|         |-PointerType 0x28deb706060 'const wchar_t *'
|         | `-QualType 0x28deb706011 'const wchar_t' const
|         |   `-TypedefType 0x28deb706010 'wchar_t' sugar
|         |     |-Typedef 0x28deb705900 'wchar_t'
|         |     `-BuiltinType 0x28de9d14ac0 'unsigned short'
|         |-PointerType 0x28deb706060 'const wchar_t *'
|         | `-QualType 0x28deb706011 'const wchar_t' const
|         |   `-TypedefType 0x28deb706010 'wchar_t' sugar
|         |     |-Typedef 0x28deb705900 'wchar_t'
|         |     `-BuiltinType 0x28de9d14ac0 'unsigned short'
|         |-PointerType 0x28deb706060 'const wchar_t *'
|         | `-QualType 0x28deb706011 'const wchar_t' const
|         |   `-TypedefType 0x28deb706010 'wchar_t' sugar
|         |     |-Typedef 0x28deb705900 'wchar_t'
|         |     `-BuiltinType 0x28de9d14ac0 'unsigned short'
|         |-BuiltinType 0x28de9d14ae0 'unsigned int'
|         `-TypedefType 0x28deb706270 'uintptr_t' sugar
|           |-Typedef 0x28de9d157c0 'uintptr_t'
|           `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-FunctionDecl 0x28deb7b7e20 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x28deb7b7cb0 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x28deb7ba078 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x28deb7ba260 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x28deb7ba4a0 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x28deb7ba330 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x28deb7ba6f0 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x28deb7ba578 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x28deb7ba910 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x28deb7bab50 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x28deb7ba9e0 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x28deb7bada0 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x28deb7bac28 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x28deb7bb060 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x28deb7bb100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7bb3c0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x28deb7bb460 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x28deb7bb5a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x28deb7bb640 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x28deb7bb6d8 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x28deb7bb770 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x28deb7bb808 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x28deb7bb960 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x28deb7bb9c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x28deb7bbbc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x28deb7bbc30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7bbef0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x28deb7bbd78 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x28deb7bc150 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x28deb7bbfc8 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x28deb7bc2e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x28deb7bc350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7bc570 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x28deb7bc498 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x28deb7bc720 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x28deb7bc648 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x28deb7bc970 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x28deb7bca10 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28deb7bca80 prev 0x28deb7bc970 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x28deb7bc7f8 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x28deb7bcc30 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x28deb7bccd0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28deb7bcd40 prev 0x28deb7bcc30 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x28deb7bcb58 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x28deb7bcec8 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x28deb7bcf68 prev 0x28deb7bcec8 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x28deb7b9200 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x28deb7b9010 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x28deb7b9090 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x28deb7b93f8 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x28deb7b9498 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x28deb7b9508 <col:19> Implicit
| `-ConstAttr 0x28deb7b9560 <col:19> Implicit
|-FunctionDecl 0x28deb7b9588 prev 0x28deb7b93f8 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x28deb7b92e0 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x28deb7b9678 <col:19> Inherited Implicit
| `-ConstAttr 0x28deb7b96a0 <col:19> Inherited Implicit
|-FunctionDecl 0x28deb7b9828 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x28deb7b98c8 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x28deb7b9938 <col:19> Implicit
| `-ConstAttr 0x28deb7b9990 <col:19> Implicit
|-FunctionDecl 0x28deb7b99b8 prev 0x28deb7b9828 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x28deb7b96e0 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x28deb7b9aa8 <col:19> Inherited Implicit
| `-ConstAttr 0x28deb7b9ad0 <col:19> Inherited Implicit
|-FunctionDecl 0x28deb7b9c58 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x28deb7b9cf8 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x28deb7b9d68 <col:19> Implicit
| `-ConstAttr 0x28deb7b9dc0 <col:19> Implicit
|-FunctionDecl 0x28deb7b9de8 prev 0x28deb7b9c58 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x28deb7b9b10 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x28deb7b9ed8 <col:19> Inherited Implicit
| `-ConstAttr 0x28deb7b9f00 <col:19> Inherited Implicit
|-FunctionDecl 0x28deb7be060 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x28deb7b9f40 <col:35> col:42 'long long'
|-FunctionDecl 0x28deb7be358 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x28deb7be1f8 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x28deb7be578 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x28deb7be430 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x28deb7be870 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x28deb7be650 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x28deb7be6c8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7bea98 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x28deb7be950 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x28deb7bed90 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x28deb7beb70 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x28deb7bebe8 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7befb8 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x28deb7bee70 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x28deb7b8250 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x28deb7b8030 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x28deb7b80a8 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7b8478 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x28deb7b8330 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x28deb7b8770 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x28deb7b8550 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x28deb7b85c8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7c00e0 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x28deb7b8850 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x28deb7b88d0 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x28deb7b8948 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7b89c0 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7b8d20 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x28deb7b8da0 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x28deb7c0868 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x28deb7c01e0 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x28deb7c0260 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x28deb7c02d8 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7c0350 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7c0628 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x28deb7c0f70 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x28deb7c0960 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x28deb7c09d8 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7c0a50 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7c0cb8 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x28deb7c0d38 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x28deb7c1568 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x28deb7c1090 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x28deb7c1108 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7c1180 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7c1360 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x28deb7c17a8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x28deb7c1848 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x28deb7c18b8 <col:47> Implicit
| `-ConstAttr 0x28deb7c1910 <col:47> Implicit
|-FunctionDecl 0x28deb7c1938 prev 0x28deb7c17a8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x28deb7c1658 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x28deb7c1a28 <col:47> Inherited Implicit
| `-ConstAttr 0x28deb7c1a50 <col:47> Inherited Implicit
|-FunctionDecl 0x28deb7c1bd8 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x28deb7c1c78 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x28deb7c1ce8 <col:47> Implicit
| `-ConstAttr 0x28deb7c1d40 <col:47> Implicit
|-FunctionDecl 0x28deb7c1d68 prev 0x28deb7c1bd8 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x28deb7c1a90 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x28deb7c1e58 <col:47> Inherited Implicit
| `-ConstAttr 0x28deb7c1e80 <col:47> Inherited Implicit
|-FunctionDecl 0x28deb7c30b0 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x28deb7c3150 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x28deb7c31c0 <col:49> Implicit
| `-ConstAttr 0x28deb7c3218 <col:49> Implicit
|-FunctionDecl 0x28deb7c3240 prev 0x28deb7c30b0 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x28deb7c1ec0 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x28deb7c3330 <col:49> Inherited Implicit
| `-ConstAttr 0x28deb7c3358 <col:49> Inherited Implicit
|-FunctionDecl 0x28deb7c35d8 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x28deb7c33b8 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x28deb7c3438 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x28deb7c3858 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x28deb7c3778 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x28deb7c3900 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7c3e18 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x28deb7c3a98 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x28deb7c3b18 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7c3b90 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7c3c10 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x28deb7c41e0 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x28deb7c3f08 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x28deb7c3f80 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x28deb7c4000 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x28deb7c4648 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x28deb7c42c8 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x28deb7c4348 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7c43c0 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7c4440 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x28deb7c4ac8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x28deb7c4830 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x28deb7c48b0 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x28deb7c4930 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x28deb7c4b80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7bd050 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x28deb7c4cc8 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x28deb7c4d48 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7c4dc0 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7c4e40 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x28deb7bd498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x28deb7bd200 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x28deb7bd280 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7bd300 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x28deb7bd550 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7bda18 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x28deb7bd698 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x28deb7bd718 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7bd790 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7bd810 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x28deb7bde68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x28deb7bdbc8 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x28deb7bdc48 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7bdcc8 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x28deb7bdf20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7ca218 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x28deb7ca138 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x28deb7ca468 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x28deb7ca2f0 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x28deb7ca368 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7ca7e8 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x28deb7ca548 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x28deb7ca5c8 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x28deb7ca648 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x28deb7cac50 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7ca8d0 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x28deb7ca950 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x28deb7ca9d0 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x28deb7caa48 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7cafd8 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x28deb7cad40 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x28deb7cadc0 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x28deb7cae40 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x28deb7c5450 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7c50d0 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x28deb7c5150 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x28deb7c51d0 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x28deb7c5248 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7c5788 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x28deb7c5568 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x28deb7c55e8 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x28deb7c5aa8 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x28deb7c5888 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x28deb7c5908 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x28deb7c5f08 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x28deb7c5b88 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x28deb7c5c08 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7c5c80 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7c5d00 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x28deb7cb3c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x28deb7cb130 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x28deb7cb1b0 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x28deb7cb230 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x28deb7cb480 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7cb7f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x28deb7cb5c8 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x28deb7cb640 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7cbb98 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7cb8d0 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x28deb7cb948 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7cb9c0 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7cbd58 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x28deb7cbc80 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x28deb7cc048 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x28deb7cbe30 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x28deb7cbea8 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7cc2b0 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x28deb7cc140 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x28deb7cc1b8 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7cc650 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7cc390 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x28deb7cc408 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7cc480 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7cca08 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x28deb7cc730 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x28deb7cc7b0 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x28deb7cc828 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7cce60 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7ccae8 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x28deb7ccb68 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x28deb7ccbe0 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7ccc58 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7cd380 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x28deb7ccf48 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x28deb7ccfc0 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28deb7cd038 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7cd0b8 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x28deb7cd150 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7cd800 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x28deb7cd530 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28deb7cd5b0 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x28deb7cd628 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb7cd8b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7cdeb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7cd9f8 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x28deb7cda70 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28deb7cdae8 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7cdb68 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x28deb7cdbe0 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7cdc58 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7c63d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7ce0a8 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28deb7c60e0 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x28deb7c6158 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7c61d0 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28deb7c6498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7c6698 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x28deb7c6848 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x28deb7c6768 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x28deb7c6a60 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x28deb7c6920 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x28deb7c6d20 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x28deb7c6dc0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb7c6e28 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x28deb7c6ea0 prev 0x28deb7c6d20 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x28deb7c6b38 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x28deb7c6bb8 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x28deb7ce2d8 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x28deb7c6f80 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x28deb7c7000 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x28deb7c7078 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7ce658 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x28deb7ce6f8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x28deb7ce760 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x28deb7ce7c8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28deb7ce848 prev 0x28deb7ce658 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x28deb7ce3c0 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x28deb7ce440 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x28deb7ce4c0 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x28deb7cecb0 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7ce930 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x28deb7ce9b0 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x28deb7cea30 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x28deb7ceaa8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7cefc0 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x28deb7cf060 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x28deb7cf0c8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x28deb7c70f0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28deb7c7170 prev 0x28deb7cefc0 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x28deb7ceda0 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x28deb7cee20 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x28deb7ceea0 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x28deb7c7510 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7c7258 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x28deb7c72d8 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x28deb7c7358 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x28deb7c73d0 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7c7898 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x28deb7c7938 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x28deb7c79a0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x28deb7c7a08 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28deb7c7a88 prev 0x28deb7c7898 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x28deb7c7600 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x28deb7c7680 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x28deb7c7700 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x28deb7c7ef0 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7c7b70 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x28deb7c7bf0 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x28deb7c7c70 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x28deb7c7ce8 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7c8220 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x28deb7c82c0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x28deb7c8328 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x28deb7c8390 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x28deb7c8410 prev 0x28deb7c8220 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x28deb7c7fe0 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x28deb7c8060 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x28deb7c8100 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x28deb7c87b0 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7c84f8 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x28deb7c8578 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x28deb7c85f8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x28deb7c8670 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7c8a90 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x28deb7c8b30 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb7c8b98 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x28deb7c8c10 prev 0x28deb7c8a90 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x28deb7c88a0 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x28deb7c8920 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x28deb7c8fc8 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x28deb7c8cf0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x28deb7c8d70 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x28deb7c8de8 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7c9300 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x28deb7c93a0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x28deb7c9408 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x28deb7c9480 prev 0x28deb7c9300 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x28deb7c9110 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x28deb7c9190 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x28deb7c9838 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x28deb7c9560 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x28deb7c95e0 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x28deb7c9658 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7c9a00 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x28deb7c9920 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x28deb7c9e58 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x28deb7c9ad8 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x28deb7c9b58 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7c9bd0 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7c9c50 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x28deb7d8808 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x28deb7ca008 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x28deb7ca088 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x28deb7d8670 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x28deb7d88c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7d8cf0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x28deb7d8ac8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x28deb7d8b40 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x28deb7d8da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7d9278 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x28deb7d8fa8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x28deb7d9020 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x28deb7d9098 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28deb7d9330 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7da818 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x28deb7d9478 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x28deb7d94f8 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x28deb7d9570 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7d95e8 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x28deb7dad20 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x28deb7da908 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x28deb7da988 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x28deb7daa00 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7daa78 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x28deb7daaf0 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7db230 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7dae10 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x28deb7dae90 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x28deb7daf08 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7daf80 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x28deb7daff8 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7d4670 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7db3e8 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x28deb7db460 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x28deb7db4d8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x28deb7d4728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7d4d28 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7d4868 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x28deb7d48e8 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x28deb7d4960 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7d49d8 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x28deb7d4a50 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7d4ac8 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7d5258 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x28deb7d4ee8 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x28deb7d4f60 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x28deb7d4fd8 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7d5050 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x28deb7d5318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7d3690 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x28deb7d3730 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x28deb7d3798 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb7d3810 prev 0x28deb7d3690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x28deb7d5458 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7d54d0 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x28deb7d38c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x28deb7d3918 <line:615:33> restrict
|-FunctionDecl 0x28deb7d3ab0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x28deb7d3970 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x28deb7d3b58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x28deb7d3d58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x28deb7d3df8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb7d3e68 prev 0x28deb7d3d58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x28deb7d3bd8 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x28deb7d3f10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x28deb7d3f68 <line:615:33> restrict
|-FunctionDecl 0x28deb7d41e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x28deb7d4280 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x28deb7d42e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x28deb7d4360 prev 0x28deb7d41e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x28deb7d3fc0 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x28deb7d4038 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x28deb7d4410 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x28deb7d4468 <line:615:33> restrict
|-FunctionDecl 0x28deb7db818 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x28deb7d44c0 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x28deb7d4538 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7d45b0 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x28deb7db8d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x28deb7db928 <line:615:33> restrict
|-FunctionDecl 0x28deb7dba58 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x28deb7db980 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x28deb7dbb00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x28deb7dbcf8 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x28deb7dbb80 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7dbbf8 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x28deb7dbda8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x28deb7dbe00 <line:615:33> restrict
|-FunctionDecl 0x28deb7dc118 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x28deb7dbe50 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7dbec8 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7dbf40 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x28deb7dc1d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x28deb7dc228 <line:615:33> restrict
|-FunctionDecl 0x28deb7dc490 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x28deb7dc280 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x28deb7dc2f8 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7dc370 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x28deb7dc548 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x28deb7dc5a0 <line:615:33> restrict
|-FunctionDecl 0x28deb7dc9b0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x28deb7dc5f8 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x28deb7dc6b0 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7dc728 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7dc7a0 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x28deb7dca70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x28deb7dcac8 <line:615:33> restrict
|-FunctionDecl 0x28deb7dcdc8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x28deb7dcb20 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x28deb7dcb98 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7dcc10 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7dcc88 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x28deb7dce88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x28deb7dcee0 <line:615:33> restrict
|-FunctionDecl 0x28deb7dd358 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x28deb7dcf38 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x28deb7dcfb0 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7dd028 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7dd0a0 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7dd118 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x28deb7dd420 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x28deb7dd478 <line:615:33> restrict
|-FunctionDecl 0x28deb7dd7a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x28deb7dd4d0 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x28deb7dd548 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7dd5c0 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7ddbf8 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x28deb7dd888 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x28deb7dd900 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28deb7dd978 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7dd9f8 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x28deb7de070 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x28deb7ddda8 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x28deb7dde20 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28deb7ddea0 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x28deb7de128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7de5e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x28deb7de270 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x28deb7de2e8 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28deb7de360 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7de3e0 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x28deb7d69f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x28deb7d6728 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x28deb7d67a0 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28deb7d6820 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x28deb7d6aa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7d6f68 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x28deb7d6bf0 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x28deb7d6c68 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28deb7d6ce0 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7d6d60 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x28deb7d73e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x28deb7d7118 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x28deb7d7190 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x28deb7d7210 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x28deb7d7498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7de890 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x28deb7d75d8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7de6e8 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x28deb7dec38 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x28deb7de968 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7de9e8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x28deb7dea60 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7deff8 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x28deb7ded18 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7ded98 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x28deb7dee18 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x28deb7df460 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7df0d8 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7df158 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x28deb7df1d8 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x28deb7df250 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7d77b8 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x28deb7df548 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7df5c8 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x28deb7df648 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x28deb7d7c20 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7d7898 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7d7918 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x28deb7d7998 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x28deb7d7a10 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7d7fe8 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x28deb7d7d08 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7d7d88 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x28deb7d7e08 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x28deb7d8450 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7d80c8 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7d8148 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x28deb7d81c8 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x28deb7d8240 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7df8b8 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x28deb7d8538 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7d85b8 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x28deb7df6e0 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x28deb7dfd20 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7df998 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7dfa18 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x28deb7dfa98 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x28deb7dfb10 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e0030 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x28deb7dfe08 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7dfe88 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x28deb7e03d8 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x28deb7e0108 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7e0188 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x28deb7e0200 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e06f0 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x28deb7e04b8 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7e0538 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x28deb7e0a98 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x28deb7e07c8 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7e0848 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x28deb7e08c0 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e0d10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x28deb7e0c38 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x28deb7e0db8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7e1268 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x28deb7e0ef8 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x28deb7e0f70 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28deb7e0fe8 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7e1060 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x28deb7e1620 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb7e1358 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x28deb7e13d0 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x28deb7e1448 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x28deb7e38a8 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x28deb7e3730 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x28deb7e3af8 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x28deb7e3978 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x28deb7e3df0 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28deb7e3bc8 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7e3c40 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e3fa8 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x28deb7e3ec8 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x28deb7e42a0 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28deb7e4078 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7e40f0 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e44f8 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x28deb7e4378 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x28deb7e4800 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28deb7e45c8 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7e4640 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e4a58 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x28deb7e48d8 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x28deb7e4d50 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28deb7e4b28 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7e4ba0 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e51a8 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x28deb7e4e30 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x28deb7e4ea8 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28deb7e4f20 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7e4fa0 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x28deb7e5620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x28deb7e5358 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x28deb7e53d0 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28deb7e5450 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x28deb7e56d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7e5bb8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x28deb7e5840 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x28deb7e58b8 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28deb7e5930 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb7e59b0 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x28deb7e6030 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x28deb7e5d68 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x28deb7e5de0 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x28deb7e5e60 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x28deb7e60e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7e6308 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x28deb7e6228 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x28deb7e6550 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x28deb7e63d8 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x28deb7e6450 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e6870 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x28deb7e6628 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7e66a8 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x28deb7e6750 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x28deb7e6c08 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7e6950 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7e69d0 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x28deb7e6a50 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x28deb7e6ac8 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e6f10 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x28deb7e6cf0 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7e6d70 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x28deb7e6df0 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x28deb7e72a8 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x28deb7e6ff0 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x28deb7e7070 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x28deb7e70f0 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x28deb7e7168 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e75b0 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x28deb7e7398 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x28deb7e7418 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x28deb7e7490 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7e7bc8 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x28deb7e7698 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7e7760 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7e77e0 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x28deb7e7860 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x28deb7e78e0 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x28deb7e7960 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x28deb7e80c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x28deb7e7d88 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x28deb7e7e08 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x28deb7e7e88 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x28deb7e7f08 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x28deb7e8180 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7e86b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x28deb7e82c8 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7e8340 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7e83c0 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x28deb7e8440 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x28deb7e84c0 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x28deb7e8540 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x28deb7e2af0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x28deb7e2830 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x28deb7e28b0 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x28deb7e2930 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x28deb7e29b0 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x28deb7e2bb0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7e3078 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x28deb7e2cf8 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7e2d70 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7e2df0 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x28deb7e2e70 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x28deb7e34c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x28deb7e3228 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x28deb7e32a8 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x28deb7e3328 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x28deb7e3580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7e89d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x28deb7e87a8 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x28deb7e8828 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x28deb7e8d50 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x28deb7e8b28 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x28deb7e8ba8 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x28deb7e90d0 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x28deb7e8ea8 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x28deb7e8f28 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x28deb7e9478 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x28deb7e91a8 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x28deb7e9228 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x28deb7e92a0 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e17e8 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x28deb7e9558 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x28deb7e95d8 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x28deb7e9650 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e1b98 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x28deb7e18c8 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x28deb7e1948 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x28deb7e19c0 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x28deb7e1e70 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x28deb7e1f10 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x28deb7e1f78 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x28deb7e1ff0 <col:46> Implicit
|-FunctionDecl 0x28deb7e2048 prev 0x28deb7e1e70 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x28deb7e1c80 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x28deb7e1d00 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x28deb7e2140 <col:46> Inherited Implicit
|-FunctionDecl 0x28deb7e2300 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x28deb7e23a0 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x28deb7e2408 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x28deb7e2480 <col:46> Implicit
|-FunctionDecl 0x28deb7e24d8 prev 0x28deb7e2300 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x28deb7e2180 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x28deb7e2200 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x28deb7e25d0 <col:46> Inherited Implicit
|-FunctionDecl 0x28deb7eab88 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x28deb7e2610 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x28deb7e2688 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7ea7a8 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x28deb7ea828 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x28deb7ea8a8 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x28deb7ea928 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x28deb7eb130 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x28deb7ead48 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x28deb7eadc8 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x28deb7eae48 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x28deb7eaec8 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x28deb7eaf48 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x28deb7eb1f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7eb4d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x28deb7eb360 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x28deb7eb6f0 <line:831:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x28deb7eb5a8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x28deb7ee8e8 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x28deb7ee808 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x28deb7eeba8 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x28deb7ee9c0 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x28deb7eea40 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x28deb7eee70 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x28deb7eef10 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x28deb7eef78 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x28deb7eeff0 <col:30> Implicit
|-FunctionDecl 0x28deb7ef048 prev 0x28deb7eee70 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x28deb7eec88 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x28deb7eed08 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x28deb7ef140 <col:30> Inherited Implicit
|-FunctionDecl 0x28deb7ef370 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x28deb7ef410 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x28deb7ef478 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x28deb7ef4f0 <col:34> Implicit
|-FunctionDecl 0x28deb7ef548 prev 0x28deb7ef370 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x28deb7ef180 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x28deb7ef200 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x28deb7ef640 <col:34> Inherited Implicit
|-FunctionDecl 0x28deb7ec7f0 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x28deb7ec890 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x28deb7ec8f8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x28deb7ec970 <col:30> Implicit
|-FunctionDecl 0x28deb7ec9c8 prev 0x28deb7ec7f0 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x28deb7ef680 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x28deb7ef700 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x28deb7ecac0 <col:30> Inherited Implicit
|-FunctionDecl 0x28deb7ecc80 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x28deb7ecd20 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x28deb7ecd88 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x28deb7ece00 <col:34> Implicit
|-FunctionDecl 0x28deb7ece58 prev 0x28deb7ecc80 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x28deb7ecb00 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x28deb7ecb80 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x28deb7ecf50 <col:34> Inherited Implicit
|-FunctionDecl 0x28deb7ed308 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x28deb7ecf90 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x28deb7ed010 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x28deb7ed090 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x28deb7ed108 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7e9780 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x28deb7ed4b8 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x28deb7ed538 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x28deb7ed5b8 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x28deb7e9838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7e9e20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x28deb7e9a40 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x28deb7e9ac0 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x28deb7e9b40 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x28deb7e9bc0 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x28deb7e9c40 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x28deb7e9ee8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7f1800 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x28deb7ea030 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x28deb7ea0b0 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x28deb7ea128 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7ea1a8 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x28deb7ea220 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7ea2a0 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x28deb7ea318 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7ea398 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x28deb7ea410 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7f1bb0 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x28deb7f1918 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x28deb7f1998 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x28deb7f1a18 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x28deb7f1e98 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7f1c90 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x28deb7f1d08 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x28deb7f1d80 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7f2438 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb7f1f78 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x28deb7f1ff0 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7f2068 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x28deb7f20e0 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x28deb7f2158 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x28deb7f21d0 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x28deb7eb9d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb7f25f0 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x28deb7f2668 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x28deb7f26e0 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x28deb7f2758 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x28deb7eb7a0 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x28deb7eba98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7ebd50 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:885:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x28deb7ebbd8 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x28deb7ebf00 <line:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x28deb7ebe20 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x28deb7ec1a8 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x28deb7ebfd0 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x28deb7ec048 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x28deb7ec5e8 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7ec280 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x28deb7ec2f8 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x28deb7ec370 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x28deb7ec3e8 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7f2ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x28deb7f2810 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x28deb7f2888 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x28deb7f2900 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x28deb7f2b88 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7f31a0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x28deb7f2d88 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x28deb7f2e00 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x28deb7f2e78 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x28deb7f2ef0 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x28deb7f2f68 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x28deb7f3268 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7f3a80 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x28deb7f33a8 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x28deb7f3420 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x28deb7f3498 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7f3510 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x28deb7f3588 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7f3600 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x28deb7f3678 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7f36f0 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x28deb7f3768 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb7f3da0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x28deb7f3c98 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x28deb7f3e48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x28deb7f4238 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x28deb7f4058 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x28deb7f40d8 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x28deb7f42e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x28deb7f4630 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x28deb7f44f0 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x28deb7f46d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x28deb7f4ca0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x28deb7f49e0 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x28deb7f4a60 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x28deb7f4ae0 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x28deb7f4b60 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x28deb7f4d60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x28deb7f4e58 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7f5390 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x28deb7f50d0 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x28deb7f5150 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x28deb7f51d0 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x28deb7f5250 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x28deb7f5450 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x28deb7f5548 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7f59f8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x28deb7f57c0 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x28deb7f5858 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x28deb7f58d8 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x28deb7f5ab0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x28deb7f5ba8 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7f6040 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x28deb7f5e20 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x28deb7f5ea0 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7f5f20 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x28deb7f60f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x28deb7f61f0 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7f6688 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x28deb7f6468 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x28deb7f64e8 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x28deb7f6568 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x28deb7f6740 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x28deb7f6850 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7f6ae8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x28deb7f6a08 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x28deb7f6b90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x28deb7f6f70 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x28deb7f6d58 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x28deb7f6dd8 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x28deb7f6e58 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x28deb7f7028 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x28deb7f7510 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x28deb7f72f0 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x28deb7f7370 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x28deb7f73f0 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x28deb7f75c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x28deb7f76c0 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x28deb7ef838 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x28deb7f77d0 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-RecordDecl 0x28deb7ef8f8 <.//openssl//file_jk/after\crypto\ec/ec_lcl.h:52:1, line:180:1> line:52:8 struct ec_method_st definition
| |-FieldDecl 0x28deb7ef9c8 <line:54:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x28deb7efa38 <line:56:5, col:9> col:9 field_type 'int'
| |-FieldDecl 0x28deb7efbd8 <line:61:5, col:34> col:11 group_init 'int (*)(int *)'
| |-FieldDecl 0x28deb7efda0 <line:62:5, col:37> col:12 group_finish 'void (*)(int *)'
| |-FieldDecl 0x28deb7efeb0 <line:63:5, col:43> col:12 group_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x28deb7f0120 <line:64:5, col:52> col:11 group_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x28deb7f0538 <line:67:5, line:68:54> line:67:11 group_set_curve 'int (*)(int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x28deb7fca58 <line:69:5, line:70:37> line:69:11 group_get_curve 'int (*)(const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x28deb7fcc28 <line:72:5, col:46> col:11 group_get_degree 'int (*)(const int *)'
| |-FieldDecl 0x28deb7fcd40 <line:73:5, col:46> col:11 group_order_bits 'int (*)(const int *)'
| |-FieldDecl 0x28deb7fcfb0 <line:75:5, col:64> col:11 group_check_discriminant 'int (*)(const int *, int *)'
| |-FieldDecl 0x28deb7fd0c8 <line:80:5, col:34> col:11 point_init 'int (*)(int *)'
| |-FieldDecl 0x28deb7fd1d8 <line:81:5, col:37> col:12 point_finish 'void (*)(int *)'
| |-FieldDecl 0x28deb7fd2e8 <line:82:5, col:43> col:12 point_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x28deb7fd488 <line:83:5, col:52> col:11 point_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x28deb7fd628 <line:92:5, col:63> col:11 point_set_to_infinity 'int (*)(const int *, int *)'
| |-FieldDecl 0x28deb7fdb00 <line:93:5, line:96:76> line:93:11 point_set_Jprojective_coordinates_GFp 'int (*)(const int *, int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x28deb7fdfb0 <line:97:5, line:100:59> line:97:11 point_get_Jprojective_coordinates_GFp 'int (*)(const int *, const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x28deb7fe3c8 <line:101:5, line:103:50> line:101:11 point_set_affine_coordinates 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x28deb7fe7d8 <line:104:5, line:105:72> line:104:11 point_get_affine_coordinates 'int (*)(const int *, const int *, int *, int *, int *)'
| |-FieldDecl 0x28deb7fabc8 <line:106:5, line:108:54> line:106:11 point_set_compressed_coordinates 'int (*)(const int *, int *, const int *, int, int *)'
| |-FieldDecl 0x28deb7fb0e8 <line:110:5, line:112:46> line:110:14 point2oct 'size_t (*)(const int *, const int *, int, unsigned char *, size_t, int *)'
| |-FieldDecl 0x28deb7fb548 <line:113:5, line:114:43> line:113:11 oct2point 'int (*)(const int *, int *, const unsigned char *, size_t, int *)'
| |-FieldDecl 0x28deb7f8870 <line:116:5, line:117:44> line:116:11 add 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x28deb7f8c00 <line:118:5, col:75> col:11 dbl 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x28deb7f8ef8 <line:119:5, col:58> col:11 invert 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x28deb7f9160 <line:123:5, col:62> col:11 is_at_infinity 'int (*)(const int *, const int *)'
| |-FieldDecl 0x28deb7f9458 <line:124:5, col:69> col:11 is_on_curve 'int (*)(const int *, const int *, int *)'
| |-FieldDecl 0x28deb7f97e0 <line:125:5, line:126:31> line:125:11 point_cmp 'int (*)(const int *, const int *, const int *, int *)'
| |-FieldDecl 0x28deb7fba58 <line:128:5, col:63> col:11 make_affine 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x28deb7fbed0 <line:129:5, line:130:40> line:129:11 points_make_affine 'int (*)(const int *, size_t, int **, int *)'
| |-FieldDecl 0x28deb7fc508 <line:136:5, line:138:25> line:136:11 mul 'int (*)(const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-FieldDecl 0x28deb7fc770 <line:139:5, col:54> col:11 precompute_mult 'int (*)(int *, int *)'
| |-FieldDecl 0x28deb7fe8d0 <line:140:5, col:55> col:11 have_precompute_mult 'int (*)(const int *)'
| |-FieldDecl 0x28deb7fec08 <line:148:5, line:149:48> line:148:11 field_mul 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x28deb7feeb8 <line:150:5, col:77> col:11 field_sqr 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x28deb7ff1f0 <line:151:5, line:152:48> line:151:11 field_div 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x28deb7ff4a0 <line:159:5, col:77> col:11 field_inv 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x28deb7ff750 <line:161:5, line:162:34> line:161:11 field_encode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x28deb7f79a0 <line:164:5, line:165:34> line:164:11 field_decode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x28deb7f7bc8 <line:166:5, col:67> col:11 field_set_to_one 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x28deb7f7ef0 <line:168:5, col:75> col:14 priv2oct 'size_t (*)(const int *, unsigned char *, size_t)'
| |-FieldDecl 0x28deb7f8218 <line:169:5, col:72> col:11 oct2priv 'int (*)(int *, const unsigned char *, size_t)'
| |-FieldDecl 0x28deb7f83b8 <line:170:5, col:61> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x28deb7f84d0 <line:171:5, col:32> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x28deb7f85e8 <line:172:5, col:40> col:11 keycheck 'int (*)(const int *)'
| |-FieldDecl 0x28deb7f8700 <line:173:5, col:35> col:11 keygenpub 'int (*)(int *)'
| |-FieldDecl 0x28deb803968 <line:174:5, col:50> col:11 keycopy 'int (*)(int *, const int *)'
| |-FieldDecl 0x28deb803a78 <line:175:5, col:36> col:12 keyfinish 'void (*)(int *)'
| |-FieldDecl 0x28deb803e80 <line:177:5, line:178:72> line:177:11 ecdh_compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| `-FieldDecl 0x28deb8040a8 <line:179:5, col:77> col:11 blind_coordinates 'int (*)(const int *, int *, int *)'
|-RecordDecl 0x28deb804100 <line:185:9, col:16> col:16 struct nistp224_pre_comp_st
|-TypedefDecl 0x28deb804218 <col:1, col:37> col:37 referenced NISTP224_PRE_COMP 'struct nistp224_pre_comp_st':'struct nistp224_pre_comp_st'
| `-ElaboratedType 0x28deb8041c0 'struct nistp224_pre_comp_st' sugar
|   `-RecordType 0x28deb8041a0 'struct nistp224_pre_comp_st'
|     `-Record 0x28deb782468 'nistp224_pre_comp_st'
|-RecordDecl 0x28deb804288 <line:186:9, col:16> col:16 struct nistp256_pre_comp_st
|-TypedefDecl 0x28deb804398 <col:1, col:37> col:37 referenced NISTP256_PRE_COMP 'struct nistp256_pre_comp_st':'struct nistp256_pre_comp_st'
| `-ElaboratedType 0x28deb804340 'struct nistp256_pre_comp_st' sugar
|   `-RecordType 0x28deb804320 'struct nistp256_pre_comp_st'
|     `-Record 0x28deb804288 'nistp256_pre_comp_st'
|-RecordDecl 0x28deb804408 <line:187:9, col:16> col:16 struct nistp521_pre_comp_st
|-TypedefDecl 0x28deb804518 <col:1, col:37> col:37 referenced NISTP521_PRE_COMP 'struct nistp521_pre_comp_st':'struct nistp521_pre_comp_st'
| `-ElaboratedType 0x28deb8044c0 'struct nistp521_pre_comp_st' sugar
|   `-RecordType 0x28deb8044a0 'struct nistp521_pre_comp_st'
|     `-Record 0x28deb804408 'nistp521_pre_comp_st'
|-RecordDecl 0x28deb804588 <line:188:9, col:16> col:16 struct nistz256_pre_comp_st
|-TypedefDecl 0x28deb804698 <col:1, col:37> col:37 referenced NISTZ256_PRE_COMP 'struct nistz256_pre_comp_st':'struct nistz256_pre_comp_st'
| `-ElaboratedType 0x28deb804640 'struct nistz256_pre_comp_st' sugar
|   `-RecordType 0x28deb804620 'struct nistz256_pre_comp_st'
|     `-Record 0x28deb804588 'nistz256_pre_comp_st'
|-RecordDecl 0x28deb804708 <line:189:9, col:16> col:16 struct ec_pre_comp_st
|-TypedefDecl 0x28deb804818 <col:1, col:31> col:31 referenced EC_PRE_COMP 'struct ec_pre_comp_st':'struct ec_pre_comp_st'
| `-ElaboratedType 0x28deb8047c0 'struct ec_pre_comp_st' sugar
|   `-RecordType 0x28deb8047a0 'struct ec_pre_comp_st'
|     `-Record 0x28deb804708 'ec_pre_comp_st'
|-RecordDecl 0x28deb804888 <line:191:1, line:256:1> line:191:8 invalid struct ec_group_st definition
| |-FieldDecl 0x28deb805978 <line:192:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x28deb8059e8 <line:193:5, col:15> col:15 invalid generator 'int *'
| |-FieldDecl 0x28deb805a58 <line:194:5, col:13> col:13 invalid order 'int *'
| |-FieldDecl 0x28deb805ac8 <col:5, col:21> col:21 invalid cofactor 'int *'
| |-FieldDecl 0x28deb805b38 <line:195:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x28deb805ba8 <line:196:5, col:9> col:9 asn1_flag 'int'
| |-FieldDecl 0x28deb805c18 <line:197:5, col:29> col:29 invalid asn1_form 'int'
| |-FieldDecl 0x28deb805c88 <line:198:5, col:20> col:20 seed 'unsigned char *'
| |-FieldDecl 0x28deb805cf0 <line:200:5, col:12> col:12 seed_len 'size_t':'unsigned long long'
| |-FieldDecl 0x28deb805d60 <line:210:5, col:13> col:13 invalid field 'int *'
| |-FieldDecl 0x28deb805e60 <line:218:5, col:15> col:9 poly 'int [6]'
| |-FieldDecl 0x28deb805ed0 <line:226:5, col:13> col:13 invalid a 'int *'
| |-FieldDecl 0x28deb805f40 <col:5, col:17> col:17 invalid b 'int *'
| |-FieldDecl 0x28deb805fb0 <line:228:5, col:9> col:9 a_is_minus3 'int'
| |-FieldDecl 0x28deb806020 <line:230:5, col:11> col:11 field_data1 'void *'
| |-FieldDecl 0x28deb806090 <line:232:5, col:11> col:11 field_data2 'void *'
| |-FieldDecl 0x28deb806420 <line:234:5, line:235:36> line:234:11 field_mod_func 'int (*)(int *, const int *, const int *, int *)'
| |-FieldDecl 0x28deb806490 <line:237:5, col:18> col:18 invalid mont_data 'int *'
| |-EnumDecl 0x28deb8064e8 <line:244:5, line:248:5> line:244:5
| | |-EnumConstantDecl 0x28deb8065c0 <line:245:9> col:9 PCT_none 'int'
| | |-EnumConstantDecl 0x28deb806618 <line:246:9> col:9 referenced PCT_nistp224 'int'
| | |-EnumConstantDecl 0x28deb806670 <col:23> col:23 PCT_nistp256 'int'
| | |-EnumConstantDecl 0x28deb8066c8 <col:37> col:37 PCT_nistp521 'int'
| | |-EnumConstantDecl 0x28deb806720 <col:51> col:51 PCT_nistz256 'int'
| | `-EnumConstantDecl 0x28deb806778 <line:247:9> col:9 PCT_ec 'int'
| |-FieldDecl 0x28deb806828 <line:244:5, line:248:7> col:7 pre_comp_type 'enum (anonymous enum at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:244:5)':'enum ec_group_st::(anonymous at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:244:5)'
| |-RecordDecl 0x28deb806880 <line:249:5, line:255:5> line:249:5 union definition
| | |-FieldDecl 0x28deb8069d8 <line:250:9, col:28> col:28 nistp224 'NISTP224_PRE_COMP *'
| | |-FieldDecl 0x28deb806ab8 <line:251:9, col:28> col:28 nistp256 'NISTP256_PRE_COMP *'
| | |-FieldDecl 0x28deb806b98 <line:252:9, col:28> col:28 nistp521 'NISTP521_PRE_COMP *'
| | |-FieldDecl 0x28deb806c78 <line:253:9, col:28> col:28 nistz256 'NISTZ256_PRE_COMP *'
| | `-FieldDecl 0x28deb806d58 <line:254:9, col:22> col:22 ec 'EC_PRE_COMP *'
| `-FieldDecl 0x28deb806e08 <line:249:5, line:255:7> col:7 pre_comp 'union (anonymous union at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:249:5)':'union ec_group_st::(anonymous at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:249:5)'
|-RecordDecl 0x28deb806e60 <line:263:1, line:276:1> line:263:8 invalid struct ec_key_st definition
| |-FieldDecl 0x28deb806f38 <line:264:5, col:26> col:26 invalid meth 'const int *'
| |-FieldDecl 0x28deb806fa8 <line:265:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x28deb807018 <line:266:5, col:9> col:9 version 'int'
| |-FieldDecl 0x28deb807088 <line:267:5, col:15> col:15 invalid group 'int *'
| |-FieldDecl 0x28deb8070f8 <line:268:5, col:15> col:15 invalid pub_key 'int *'
| |-FieldDecl 0x28deb807168 <line:269:5, col:13> col:13 invalid priv_key 'int *'
| |-FieldDecl 0x28deb8071d8 <line:270:5, col:18> col:18 enc_flag 'unsigned int'
| |-FieldDecl 0x28deb807248 <line:271:5, col:29> col:29 invalid conv_form 'int'
| |-FieldDecl 0x28deb8072b8 <line:272:5, col:9> col:9 references 'int'
| |-FieldDecl 0x28deb807328 <line:273:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x28deb807398 <line:274:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x28deb807408 <line:275:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x28deb807460 <line:278:1, line:292:1> line:278:8 invalid struct ec_point_st definition
| |-FieldDecl 0x28deb807538 <line:279:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x28deb8075a8 <line:281:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x28deb807618 <line:286:5, col:13> col:13 invalid X 'int *'
| |-FieldDecl 0x28deb807688 <line:287:5, col:13> col:13 invalid Y 'int *'
| |-FieldDecl 0x28deb8076f8 <line:288:5, col:13> col:13 invalid Z 'int *'
| `-FieldDecl 0x28deb807768 <line:290:5, col:9> col:9 Z_is_one 'int'
|-FunctionDecl 0x28deb8008f0 <line:295:1, line:305:1> line:295:24 invalid ec_point_is_compat 'int (const int *, const int *)' static
| |-ParmVarDecl 0x28deb8077d8 <col:43, col:59> col:59 invalid point 'const int *'
| |-ParmVarDecl 0x28deb807858 <line:296:43, col:59> col:59 invalid group 'const int *'
| `-CompoundStmt 0x28deb800aa8 <line:297:1, line:305:1>
|   |-IfStmt 0x28deb800a58 <line:298:5, line:302:16>
|   | |-OpaqueValueExpr 0x28deb800a40 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x28deb800a30 <col:9, col:16>
|   |   `-IntegerLiteral 0x28deb800a08 <col:16> 'int' 0
|   `-ReturnStmt 0x28deb800a98 <line:304:5, col:12>
|     `-IntegerLiteral 0x28deb800a70 <col:12> 'int' 1
|-FunctionDecl 0x28deb800bc8 <line:308:1, col:64> col:20 EC_nistp224_pre_comp_dup 'NISTP224_PRE_COMP *(NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x28deb800ad8 <col:45, col:63> col:64 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x28deb800d88 <line:309:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x28deb800c98 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x28deb800f48 <line:310:1, col:64> col:20 EC_nistp521_pre_comp_dup 'NISTP521_PRE_COMP *(NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x28deb800e58 <col:45, col:63> col:64 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x28deb801108 <line:311:1, col:64> col:20 EC_nistz256_pre_comp_dup 'NISTZ256_PRE_COMP *(NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x28deb801018 <col:45, col:63> col:64 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x28deb801268 prev 0x28deb800d88 <line:312:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x28deb8011d8 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x28deb801418 <line:313:1, col:46> col:14 EC_ec_pre_comp_dup 'EC_PRE_COMP *(EC_PRE_COMP *)'
| `-ParmVarDecl 0x28deb801320 <col:33, col:45> col:46 'EC_PRE_COMP *'
|-FunctionDecl 0x28deb801580 <line:315:1, col:38> col:6 invalid EC_pre_comp_free 'void (int *)'
| `-ParmVarDecl 0x28deb8014f0 <col:23, col:33> col:33 invalid group 'int *'
|-FunctionDecl 0x28deb801728 <line:316:1, col:51> col:6 used EC_nistp224_pre_comp_free 'void (NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x28deb801638 <col:32, col:50> col:51 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x28deb7ff8e0 <line:317:1, col:51> col:6 EC_nistp256_pre_comp_free 'void (NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x28deb8017f8 <col:32, col:50> col:51 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x28deb7ffaa8 <line:318:1, col:51> col:6 EC_nistp521_pre_comp_free 'void (NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x28deb7ff9b0 <col:32, col:50> col:51 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x28deb7ffc68 <line:319:1, col:51> col:6 EC_nistz256_pre_comp_free 'void (NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x28deb7ffb78 <col:32, col:50> col:51 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x28deb7ffe28 <line:320:1, col:39> col:6 EC_ec_pre_comp_free 'void (EC_PRE_COMP *)'
| `-ParmVarDecl 0x28deb7ffd38 <col:26, col:38> col:39 'EC_PRE_COMP *'
|-FunctionDecl 0x28deb8002e0 <line:326:1, line:328:25> line:326:5 invalid ec_wNAF_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x28deb7fff00 <col:17, col:33> col:33 invalid group 'const int *'
| |-ParmVarDecl 0x28deb7fff80 <col:40, col:50> col:50 invalid r 'int *'
| |-ParmVarDecl 0x28deb800000 <col:53, col:67> col:67 invalid scalar 'const int *'
| |-ParmVarDecl 0x28deb800078 <line:327:17, col:24> col:24 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb800108 <col:29, <invalid sloc>> col:45 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x28deb800198 <col:55, <invalid sloc>> col:69 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x28deb800218 <line:328:17, <invalid sloc>> col:25 invalid 'int *'
|-FunctionDecl 0x28deb8004f0 <line:329:1, col:54> col:5 invalid ec_wNAF_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x28deb8003d0 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x28deb800450 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x28deb800650 <line:330:1, col:55> col:5 invalid ec_wNAF_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x28deb8005b8 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x28deb8007a8 <line:333:1, col:40> col:5 invalid ec_GFp_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x28deb800710 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x28deb808998 <line:334:1, col:43> col:6 invalid ec_GFp_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x28deb800868 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x28deb808ae8 <line:335:1, col:49> col:6 invalid ec_GFp_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x28deb808a58 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x28deb808cc8 <line:336:1, col:58> col:5 invalid ec_GFp_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x28deb808ba8 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x28deb808c28 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x28deb809048 <line:337:1, line:338:77> line:337:5 invalid ec_GFp_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb808d90 <col:35, <invalid sloc>> col:45 invalid 'int *'
| |-ParmVarDecl 0x28deb808e10 <col:47, col:61> col:61 invalid p 'const int *'
| |-ParmVarDecl 0x28deb808e90 <line:338:35, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x28deb808f10 <col:52, col:66> col:66 invalid b 'const int *'
| `-ParmVarDecl 0x28deb808f90 <col:69, <invalid sloc>> col:77 invalid 'int *'
|-FunctionDecl 0x28deb8093e0 <line:339:1, line:340:54> line:339:5 invalid ec_GFp_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x28deb809128 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| |-ParmVarDecl 0x28deb8091a8 <col:53, col:61> col:61 invalid p 'int *'
| |-ParmVarDecl 0x28deb809228 <col:64, col:72> col:72 invalid a 'int *'
| |-ParmVarDecl 0x28deb8092a8 <line:340:35, col:43> col:43 invalid b 'int *'
| `-ParmVarDecl 0x28deb809328 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x28deb809558 <line:341:1, col:52> col:5 invalid ec_GFp_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x28deb8094c0 <col:36, <invalid sloc>> col:52 invalid 'const int *'
|-FunctionDecl 0x28deb809738 <line:342:1, col:70> col:5 invalid ec_GFp_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x28deb809618 <col:44, <invalid sloc>> col:60 invalid 'const int *'
| `-ParmVarDecl 0x28deb809698 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x28deb809898 <line:343:1, col:40> col:5 invalid ec_GFp_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x28deb809800 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x28deb801990 <line:344:1, col:43> col:6 invalid ec_GFp_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x28deb801900 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x28deb801ae0 <line:345:1, col:49> col:6 invalid ec_GFp_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x28deb801a50 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x28deb801cc0 <line:346:1, col:58> col:5 invalid ec_GFp_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x28deb801ba0 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x28deb801c20 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x28deb801ea8 <line:347:1, col:69> col:5 invalid ec_GFp_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x28deb801d88 <col:41, <invalid sloc>> col:57 invalid 'const int *'
| `-ParmVarDecl 0x28deb801e08 <col:59, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x28deb8022b0 <line:348:1, line:351:76> line:348:5 invalid ec_GFp_simple_set_Jprojective_coordinates_GFp 'int (const int *, int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb801f70 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x28deb801ff0 <line:349:51, <invalid sloc>> col:61 invalid 'int *'
| |-ParmVarDecl 0x28deb802070 <col:63, col:77> col:77 invalid x 'const int *'
| |-ParmVarDecl 0x28deb8020f0 <line:350:51, col:65> col:65 invalid y 'const int *'
| |-ParmVarDecl 0x28deb802170 <line:351:51, col:65> col:65 invalid z 'const int *'
| `-ParmVarDecl 0x28deb8021f0 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x28deb8026d8 <line:352:1, line:355:59> line:352:5 invalid ec_GFp_simple_get_Jprojective_coordinates_GFp 'int (const int *, const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x28deb802398 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x28deb802418 <line:353:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x28deb802498 <col:69, col:77> col:77 invalid x 'int *'
| |-ParmVarDecl 0x28deb802518 <line:354:51, col:59> col:59 invalid y 'int *'
| |-ParmVarDecl 0x28deb802598 <col:62, col:70> col:70 invalid z 'int *'
| `-ParmVarDecl 0x28deb802618 <line:355:51, <invalid sloc>> col:59 invalid 'int *'
|-FunctionDecl 0x28deb809b38 <line:356:1, line:358:73> line:356:5 invalid ec_GFp_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb8027c0 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x28deb802840 <col:66, <invalid sloc>> col:76 invalid 'int *'
| |-ParmVarDecl 0x28deb809980 <line:357:48, col:62> col:62 invalid x 'const int *'
| |-ParmVarDecl 0x28deb809a00 <line:358:48, col:62> col:62 invalid y 'const int *'
| `-ParmVarDecl 0x28deb809a80 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x28deb809ed0 <line:359:1, line:361:67> line:359:5 invalid ec_GFp_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x28deb809c18 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x28deb809c98 <line:360:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x28deb809d18 <col:66, col:74> col:74 invalid x 'int *'
| |-ParmVarDecl 0x28deb809d98 <line:361:48, col:56> col:56 invalid y 'int *'
| `-ParmVarDecl 0x28deb809e18 <col:59, <invalid sloc>> col:67 invalid 'int *'
|-FunctionDecl 0x28deb80a268 <line:362:1, line:364:54> line:362:5 invalid ec_GFp_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x28deb809fb0 <col:46, <invalid sloc>> col:62 invalid 'const int *'
| |-ParmVarDecl 0x28deb80a030 <col:64, <invalid sloc>> col:74 invalid 'int *'
| |-ParmVarDecl 0x28deb80a0b0 <line:363:46, col:60> col:60 invalid x 'const int *'
| |-ParmVarDecl 0x28deb80a130 <col:63, col:67> col:67 y_bit 'int'
| `-ParmVarDecl 0x28deb80a1b0 <line:364:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x28deb80a678 <line:365:1, line:367:72> line:365:8 invalid ec_GFp_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x28deb80a348 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x28deb80a3c8 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| |-ParmVarDecl 0x28deb80a448 <line:366:32, col:56> col:56 invalid form 'int'
| |-ParmVarDecl 0x28deb80a4c8 <line:367:32, col:47> col:47 buf 'unsigned char *'
| |-ParmVarDecl 0x28deb80a540 <col:52, col:59> col:59 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb80a5c0 <col:64, <invalid sloc>> col:72 invalid 'int *'
|-FunctionDecl 0x28deb8029c8 <line:368:1, line:369:75> line:368:5 invalid ec_GFp_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x28deb80a760 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x28deb80a7e0 <col:47, <invalid sloc>> col:57 invalid 'int *'
| |-ParmVarDecl 0x28deb80a860 <line:369:29, col:50> col:50 buf 'const unsigned char *'
| |-ParmVarDecl 0x28deb80a8d8 <col:55, col:62> col:62 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb802910 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x28deb802d60 <line:370:1, line:371:50> line:370:5 invalid ec_GFp_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb802aa8 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x28deb802b28 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x28deb802ba8 <col:54, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x28deb802c28 <line:371:23, col:39> col:39 invalid b 'const int *'
| `-ParmVarDecl 0x28deb802ca8 <col:42, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x28deb803070 <line:372:1, line:373:31> line:372:5 invalid ec_GFp_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x28deb802e40 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x28deb802ec0 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x28deb802f40 <col:54, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x28deb802fc0 <line:373:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x28deb8032f0 <line:374:1, col:64> col:5 invalid ec_GFp_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x28deb803148 <col:26, <invalid sloc>> col:42 invalid 'const int *'
| |-ParmVarDecl 0x28deb8031c8 <col:44, <invalid sloc>> col:54 invalid 'int *'
| `-ParmVarDecl 0x28deb803248 <col:56, <invalid sloc>> col:64 invalid 'int *'
|-FunctionDecl 0x28deb8034e0 <line:375:1, col:68> col:5 invalid ec_GFp_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x28deb8033c0 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| `-ParmVarDecl 0x28deb803440 <col:52, <invalid sloc>> col:68 invalid 'const int *'
|-FunctionDecl 0x28deb803750 <line:376:1, col:75> col:5 invalid ec_GFp_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb8035a8 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x28deb803628 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| `-ParmVarDecl 0x28deb8036a8 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x28deb80caf8 <line:377:1, line:378:31> line:377:5 invalid ec_GFp_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb803820 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x28deb8038a0 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x28deb80c9c8 <col:60, col:76> col:76 invalid b 'const int *'
| `-ParmVarDecl 0x28deb80ca48 <line:378:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x28deb80cd78 <line:379:1, col:69> col:5 invalid ec_GFp_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x28deb80cbd0 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x28deb80cc50 <col:49, <invalid sloc>> col:59 invalid 'int *'
| `-ParmVarDecl 0x28deb80ccd0 <col:61, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x28deb80d080 <line:380:1, line:381:60> line:380:5 invalid ec_GFp_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x28deb80ce48 <col:38, <invalid sloc>> col:54 invalid 'const int *'
| |-ParmVarDecl 0x28deb80cec0 <col:56, col:63> col:63 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb80cf50 <line:381:38, <invalid sloc>> col:48 invalid 'int **':'int **'
| `-ParmVarDecl 0x28deb80cfd0 <col:52, <invalid sloc>> col:60 invalid 'int *'
|-FunctionDecl 0x28deb80d410 <line:382:1, line:383:54> line:382:5 invalid ec_GFp_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb80d158 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x28deb80d1d8 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x28deb80d258 <col:58, col:72> col:72 invalid a 'const int *'
| |-ParmVarDecl 0x28deb80d2d8 <line:383:29, col:43> col:43 invalid b 'const int *'
| `-ParmVarDecl 0x28deb80d358 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x28deb80d720 <line:384:1, line:385:37> line:384:5 invalid ec_GFp_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x28deb80d4f0 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x28deb80d570 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x28deb80d5f0 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x28deb80d670 <line:385:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x28deb810aa0 <line:386:1, line:387:37> line:386:5 invalid ec_GFp_simple_field_inv 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x28deb80d7f8 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x28deb80d878 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x28deb80d8f8 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x28deb8109f0 <line:387:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x28deb810d20 <line:388:1, line:389:48> line:388:5 invalid ec_GFp_simple_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x28deb810b78 <col:37, col:53> col:53 invalid group 'const int *'
| |-ParmVarDecl 0x28deb810bf8 <col:60, col:70> col:70 invalid p 'int *'
| `-ParmVarDecl 0x28deb810c78 <line:389:37, col:45> col:45 invalid ctx 'int *'
|-FunctionDecl 0x28deb810e88 <line:392:1, col:38> col:5 invalid ec_GFp_mont_group_init 'int (int *)'
| `-ParmVarDecl 0x28deb810df0 <col:28, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x28deb811200 <line:393:1, line:394:58> line:393:5 invalid ec_GFp_mont_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb810f48 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x28deb810fc8 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x28deb811048 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x28deb8110c8 <line:394:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x28deb811148 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x28deb811370 <line:395:1, col:41> col:6 invalid ec_GFp_mont_group_finish 'void (int *)'
| `-ParmVarDecl 0x28deb8112e0 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x28deb8114c0 <line:396:1, col:47> col:6 invalid ec_GFp_mont_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x28deb811430 <col:37, <invalid sloc>> col:47 invalid 'int *'
|-FunctionDecl 0x28deb8116a0 <line:397:1, col:56> col:5 invalid ec_GFp_mont_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x28deb811580 <col:28, <invalid sloc>> col:38 invalid 'int *'
| `-ParmVarDecl 0x28deb811600 <col:40, <invalid sloc>> col:56 invalid 'const int *'
|-FunctionDecl 0x28deb811a50 <line:398:1, line:399:52> line:398:5 invalid ec_GFp_mont_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb811768 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x28deb8117e8 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x28deb811868 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x28deb8118e8 <line:399:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x28deb811968 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x28deb811d60 <line:400:1, line:401:35> line:400:5 invalid ec_GFp_mont_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x28deb811b30 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x28deb811bb0 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x28deb811c30 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x28deb811cb0 <line:401:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x28deb812068 <line:402:1, line:403:35> line:402:5 invalid ec_GFp_mont_field_inv 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x28deb811e38 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x28deb811eb8 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x28deb811f38 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x28deb811fb8 <line:403:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x28deb812370 <line:404:1, line:405:38> line:404:5 invalid ec_GFp_mont_field_encode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x28deb812140 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x28deb8121c0 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x28deb812240 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x28deb8122c0 <line:405:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x28deb812678 <line:406:1, line:407:38> line:406:5 invalid ec_GFp_mont_field_decode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x28deb812448 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x28deb8124c8 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x28deb812548 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x28deb8125c8 <line:407:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x28deb8128f8 <line:408:1, col:71> col:5 invalid ec_GFp_mont_field_set_to_one 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x28deb812750 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| |-ParmVarDecl 0x28deb8127d0 <col:52, col:60> col:60 invalid r 'int *'
| `-ParmVarDecl 0x28deb812850 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x28deb80dae0 <line:411:1, col:63> col:5 invalid ec_GFp_nist_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x28deb80d9c0 <col:28, col:38> col:38 invalid dest 'int *'
| `-ParmVarDecl 0x28deb80da40 <col:44, col:60> col:60 invalid src 'const int *'
|-FunctionDecl 0x28deb80de60 <line:412:1, line:413:58> line:412:5 invalid ec_GFp_nist_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb80dba8 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x28deb80dc28 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x28deb80dca8 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x28deb80dd28 <line:413:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x28deb80dda8 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x28deb80e1f8 <line:414:1, line:415:52> line:414:5 invalid ec_GFp_nist_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb80df40 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x28deb80dfc0 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x28deb80e040 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x28deb80e0c0 <line:415:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x28deb80e140 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x28deb80e508 <line:416:1, line:417:35> line:416:5 invalid ec_GFp_nist_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x28deb80e2d8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x28deb80e358 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x28deb80e3d8 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x28deb80e458 <line:417:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x28deb80e678 <line:420:1, col:41> col:5 invalid ec_GF2m_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x28deb80e5e0 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x28deb80e7c8 <line:421:1, col:44> col:6 invalid ec_GF2m_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x28deb80e738 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x28deb80e918 <line:422:1, col:50> col:6 invalid ec_GF2m_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x28deb80e888 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x28deb80aac8 <line:423:1, col:59> col:5 invalid ec_GF2m_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x28deb80a9a8 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x28deb80aa28 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x28deb80ae48 <line:424:1, line:426:44> line:424:5 invalid ec_GF2m_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb80ab90 <col:36, <invalid sloc>> col:46 invalid 'int *'
| |-ParmVarDecl 0x28deb80ac10 <col:48, col:62> col:62 invalid p 'const int *'
| |-ParmVarDecl 0x28deb80ac90 <line:425:36, col:50> col:50 invalid a 'const int *'
| |-ParmVarDecl 0x28deb80ad10 <col:53, col:67> col:67 invalid b 'const int *'
| `-ParmVarDecl 0x28deb80ad90 <line:426:36, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x28deb80b1e0 <line:427:1, line:428:55> line:427:5 invalid ec_GF2m_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x28deb80af28 <col:36, <invalid sloc>> col:52 invalid 'const int *'
| |-ParmVarDecl 0x28deb80afa8 <col:54, col:62> col:62 invalid p 'int *'
| |-ParmVarDecl 0x28deb80b028 <col:65, col:73> col:73 invalid a 'int *'
| |-ParmVarDecl 0x28deb80b0a8 <line:428:36, col:44> col:44 invalid b 'int *'
| `-ParmVarDecl 0x28deb80b128 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x28deb80b358 <line:429:1, col:53> col:5 invalid ec_GF2m_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x28deb80b2c0 <col:37, <invalid sloc>> col:53 invalid 'const int *'
|-FunctionDecl 0x28deb80b538 <line:430:1, col:71> col:5 invalid ec_GF2m_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x28deb80b418 <col:45, <invalid sloc>> col:61 invalid 'const int *'
| `-ParmVarDecl 0x28deb80b498 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x28deb80b698 <line:431:1, col:41> col:5 invalid ec_GF2m_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x28deb80b600 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x28deb80b7e8 <line:432:1, col:44> col:6 invalid ec_GF2m_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x28deb80b758 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x28deb80e9d0 <line:433:1, col:50> col:6 invalid ec_GF2m_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x28deb80b8a8 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x28deb80ebb0 <line:434:1, col:59> col:5 invalid ec_GF2m_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x28deb80ea90 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x28deb80eb10 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x28deb80ed98 <line:435:1, col:70> col:5 invalid ec_GF2m_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x28deb80ec78 <col:42, <invalid sloc>> col:58 invalid 'const int *'
| `-ParmVarDecl 0x28deb80ecf8 <col:60, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x28deb80f118 <line:436:1, line:438:74> line:436:5 invalid ec_GF2m_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb80ee60 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x28deb80eee0 <col:67, <invalid sloc>> col:77 invalid 'int *'
| |-ParmVarDecl 0x28deb80ef60 <line:437:49, col:63> col:63 invalid x 'const int *'
| |-ParmVarDecl 0x28deb80efe0 <line:438:49, col:63> col:63 invalid y 'const int *'
| `-ParmVarDecl 0x28deb80f060 <col:66, <invalid sloc>> col:74 invalid 'int *'
|-FunctionDecl 0x28deb80f4b0 <line:439:1, line:441:68> line:439:5 invalid ec_GF2m_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x28deb80f1f8 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x28deb80f278 <line:440:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x28deb80f2f8 <col:67, col:75> col:75 invalid x 'int *'
| |-ParmVarDecl 0x28deb80f378 <line:441:49, col:57> col:57 invalid y 'int *'
| `-ParmVarDecl 0x28deb80f3f8 <col:60, <invalid sloc>> col:68 invalid 'int *'
|-FunctionDecl 0x28deb80f848 <line:442:1, line:444:55> line:442:5 invalid ec_GF2m_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x28deb80f590 <col:47, <invalid sloc>> col:63 invalid 'const int *'
| |-ParmVarDecl 0x28deb80f610 <col:65, <invalid sloc>> col:75 invalid 'int *'
| |-ParmVarDecl 0x28deb80f690 <line:443:47, col:61> col:61 invalid x 'const int *'
| |-ParmVarDecl 0x28deb80f710 <col:64, col:68> col:68 y_bit 'int'
| `-ParmVarDecl 0x28deb80f790 <line:444:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x28deb80fc90 <line:445:1, line:447:73> line:445:8 invalid ec_GF2m_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x28deb80f928 <col:33, <invalid sloc>> col:49 invalid 'const int *'
| |-ParmVarDecl 0x28deb80f9e0 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x28deb80fa60 <line:446:33, col:57> col:57 invalid form 'int'
| |-ParmVarDecl 0x28deb80fae0 <line:447:33, col:48> col:48 buf 'unsigned char *'
| |-ParmVarDecl 0x28deb80fb58 <col:53, col:60> col:60 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb80fbd8 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x28deb810028 <line:448:1, line:449:76> line:448:5 invalid ec_GF2m_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x28deb80fd78 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x28deb80fdf8 <col:48, <invalid sloc>> col:58 invalid 'int *'
| |-ParmVarDecl 0x28deb80fe78 <line:449:30, col:51> col:51 buf 'const unsigned char *'
| |-ParmVarDecl 0x28deb80fef0 <col:56, col:63> col:63 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x28deb80ff70 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x28deb8103c0 <line:450:1, line:451:51> line:450:5 invalid ec_GF2m_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb810108 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x28deb810188 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x28deb810208 <col:55, col:71> col:71 invalid a 'const int *'
| |-ParmVarDecl 0x28deb810288 <line:451:24, col:40> col:40 invalid b 'const int *'
| `-ParmVarDecl 0x28deb810308 <col:43, <invalid sloc>> col:51 invalid 'int *'
|-FunctionDecl 0x28deb8106d0 <line:452:1, line:453:32> line:452:5 invalid ec_GF2m_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x28deb8104a0 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x28deb810520 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x28deb8105a0 <col:55, col:71> col:71 invalid a 'const int *'
| `-ParmVarDecl 0x28deb810620 <line:453:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x28deb812a10 <line:454:1, col:65> col:5 invalid ec_GF2m_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x28deb8107a8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x28deb810828 <col:45, <invalid sloc>> col:55 invalid 'int *'
| `-ParmVarDecl 0x28deb8108a8 <col:57, <invalid sloc>> col:65 invalid 'int *'
|-FunctionDecl 0x28deb812c00 <line:455:1, col:69> col:5 invalid ec_GF2m_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x28deb812ae0 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| `-ParmVarDecl 0x28deb812b60 <col:53, <invalid sloc>> col:69 invalid 'const int *'
|-FunctionDecl 0x28deb812e70 <line:456:1, col:76> col:5 invalid ec_GF2m_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb812cc8 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x28deb812d48 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| `-ParmVarDecl 0x28deb812dc8 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x28deb813170 <line:457:1, line:458:32> line:457:5 invalid ec_GF2m_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb812f40 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x28deb812fc0 <col:42, col:58> col:58 invalid a 'const int *'
| |-ParmVarDecl 0x28deb813040 <col:61, col:77> col:77 invalid b 'const int *'
| `-ParmVarDecl 0x28deb8130c0 <line:458:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x28deb8133f0 <line:459:1, col:70> col:5 invalid ec_GF2m_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x28deb813248 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x28deb8132c8 <col:50, <invalid sloc>> col:60 invalid 'int *'
| `-ParmVarDecl 0x28deb813348 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x28deb8136f8 <line:460:1, line:461:61> line:460:5 invalid ec_GF2m_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x28deb8134c0 <col:39, <invalid sloc>> col:55 invalid 'const int *'
| |-ParmVarDecl 0x28deb813538 <col:57, col:64> col:64 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb8135c8 <line:461:39, <invalid sloc>> col:49 invalid 'int **':'int **'
| `-ParmVarDecl 0x28deb813648 <col:53, <invalid sloc>> col:61 invalid 'int *'
|-FunctionDecl 0x28deb7a6178 <line:462:1, line:463:55> line:462:5 invalid ec_GF2m_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb8137d0 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x28deb813850 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x28deb8138d0 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x28deb813950 <line:463:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x28deb7a60c0 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x28deb7a6488 <line:464:1, line:465:38> line:464:5 invalid ec_GF2m_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x28deb7a6258 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x28deb7a62d8 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x28deb7a6358 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x28deb7a63d8 <line:465:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x28deb7a6818 <line:466:1, line:467:55> line:466:5 invalid ec_GF2m_simple_field_div 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb7a6560 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x28deb7a65e0 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x28deb7a6660 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x28deb7a66e0 <line:467:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x28deb7a6760 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x28deb7a6cd8 <line:470:1, line:473:32> line:470:5 invalid ec_GF2m_simple_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x28deb7a68f8 <col:24, col:40> col:40 invalid group 'const int *'
| |-ParmVarDecl 0x28deb7a6978 <col:47, col:57> col:57 invalid r 'int *'
| |-ParmVarDecl 0x28deb7a69f8 <line:471:24, col:38> col:38 invalid scalar 'const int *'
| |-ParmVarDecl 0x28deb7a6a70 <col:46, col:53> col:53 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb7a6b00 <line:472:24, <invalid sloc>> col:40 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x28deb7a6b90 <col:50, <invalid sloc>> col:64 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x28deb7a6c10 <line:473:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x28deb7a6ee8 <line:474:1, col:57> col:5 invalid ec_GF2m_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x28deb7a6dc8 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x28deb7a6e48 <col:46, col:54> col:54 invalid ctx 'int *'
|-FunctionDecl 0x28deb8228c0 <line:475:1, col:55> col:5 invalid ec_GF2m_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x28deb7a6fb0 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x28deb822a18 <line:479:1, col:47> col:5 invalid ec_GFp_nistp224_group_init 'int (int *)'
| `-ParmVarDecl 0x28deb822980 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x28deb822d90 <line:480:1, line:482:45> line:480:5 invalid ec_GFp_nistp224_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb822ad8 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x28deb822b58 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x28deb822bd8 <line:481:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x28deb822c58 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x28deb822cd8 <line:482:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x28deb823128 <line:483:1, line:486:61> line:483:5 invalid ec_GFp_nistp224_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x28deb822e70 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x28deb822ef0 <line:484:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x28deb822f70 <line:485:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x28deb822ff0 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x28deb823070 <line:486:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x28deb8235e8 <line:487:1, line:490:33> line:487:5 invalid ec_GFp_nistp224_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x28deb823208 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x28deb823288 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x28deb823308 <line:488:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x28deb823380 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb823410 <line:489:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x28deb8234a0 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x28deb823520 <line:490:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x28deb827b10 <line:491:1, line:494:68> line:491:5 invalid ec_GFp_nistp224_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x28deb8236d8 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x28deb823758 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x28deb8237d8 <line:492:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x28deb823850 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb827938 <line:493:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x28deb8279c8 <line:494:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x28deb827a48 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x28deb827d20 <line:495:1, col:65> col:5 invalid ec_GFp_nistp224_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x28deb827c00 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x28deb827c80 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x28deb827e80 <line:496:1, col:63> col:5 invalid ec_GFp_nistp224_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x28deb827de8 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x28deb827fd8 <line:499:1, col:47> col:5 invalid ec_GFp_nistp256_group_init 'int (int *)'
| `-ParmVarDecl 0x28deb827f40 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x28deb828350 <line:500:1, line:502:45> line:500:5 invalid ec_GFp_nistp256_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb828098 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x28deb828118 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x28deb828198 <line:501:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x28deb828218 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x28deb828298 <line:502:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x28deb8286e8 <line:503:1, line:506:61> line:503:5 invalid ec_GFp_nistp256_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x28deb828430 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x28deb8284b0 <line:504:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x28deb828530 <line:505:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x28deb8285b0 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x28deb828630 <line:506:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x28deb820b80 <line:507:1, line:510:33> line:507:5 invalid ec_GFp_nistp256_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x28deb8287c8 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x28deb828848 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x28deb8208a0 <line:508:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x28deb820918 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb8209a8 <line:509:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x28deb820a38 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x28deb820ab8 <line:510:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x28deb821050 <line:511:1, line:514:68> line:511:5 invalid ec_GFp_nistp256_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x28deb820c70 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x28deb820cf0 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x28deb820d70 <line:512:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x28deb820de8 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb820e78 <line:513:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x28deb820f08 <line:514:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x28deb820f88 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x28deb821260 <line:515:1, col:65> col:5 invalid ec_GFp_nistp256_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x28deb821140 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x28deb8211c0 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x28deb8213c0 <line:516:1, col:63> col:5 invalid ec_GFp_nistp256_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x28deb821328 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x28deb821518 <line:519:1, col:47> col:5 invalid ec_GFp_nistp521_group_init 'int (int *)'
| `-ParmVarDecl 0x28deb821480 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x28deb8248e0 <line:520:1, line:522:45> line:520:5 invalid ec_GFp_nistp521_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb8215d8 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x28deb821658 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x28deb8216d8 <line:521:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x28deb821758 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x28deb8217d8 <line:522:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x28deb824c78 <line:523:1, line:526:61> line:523:5 invalid ec_GFp_nistp521_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x28deb8249c0 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x28deb824a40 <line:524:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x28deb824ac0 <line:525:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x28deb824b40 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x28deb824bc0 <line:526:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x28deb825138 <line:527:1, line:530:33> line:527:5 invalid ec_GFp_nistp521_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x28deb824d58 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x28deb824dd8 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x28deb824e58 <line:528:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x28deb824ed0 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb824f60 <line:529:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x28deb824ff0 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x28deb825070 <line:530:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x28deb825608 <line:531:1, line:534:68> line:531:5 invalid ec_GFp_nistp521_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x28deb825228 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x28deb8252a8 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x28deb825328 <line:532:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x28deb8253a0 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb825430 <line:533:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x28deb8254c0 <line:534:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x28deb825540 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x28deb825818 <line:535:1, col:65> col:5 invalid ec_GFp_nistp521_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x28deb8256f8 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x28deb825778 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x28deb823968 <line:536:1, col:63> col:5 invalid ec_GFp_nistp521_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x28deb8238d0 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x28deb828e28 <line:539:1, line:563:75> line:539:6 used ec_GFp_nistp_points_make_affine_internal 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
| |-ParmVarDecl 0x28deb823a20 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb823aa0 <col:59, col:65> col:65 point_array 'void *'
| |-ParmVarDecl 0x28deb823b18 <line:540:47, col:54> col:54 felem_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb823b98 <line:541:47, col:53> col:53 tmp_felems 'void *'
| |-ParmVarDecl 0x28deb823d60 <line:542:47, col:75> col:54 felem_one 'void (*)(void *)'
| |-ParmVarDecl 0x28deb823f58 <line:543:47, line:544:72> line:543:53 felem_is_zero 'int (*)(const void *)'
| |-ParmVarDecl 0x28deb8241f8 <line:545:47, line:547:72> line:545:54 felem_assign 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x28deb8243d0 <line:548:47, line:550:72> line:548:54 felem_square 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x28deb824710 <line:551:47, line:555:70> line:551:54 felem_mul 'void (*)(void *, const void *, const void *)'
| |-ParmVarDecl 0x28deb828960 <line:556:47, line:558:69> line:556:54 felem_inv 'void (*)(void *, const void *)'
| `-ParmVarDecl 0x28deb828b38 <line:559:47, line:563:74> line:559:54 felem_contract 'void (*)(void *, const void *)'
|-FunctionDecl 0x28deb829178 <line:564:1, line:565:76> line:564:6 used ec_GFp_nistp_recode_scalar_bits 'void (unsigned char *, unsigned char *, unsigned char)'
| |-ParmVarDecl 0x28deb828f50 <col:38, col:53> col:53 sign 'unsigned char *'
| |-ParmVarDecl 0x28deb828fd0 <line:565:38, col:53> col:53 digit 'unsigned char *'
| `-ParmVarDecl 0x28deb829050 <col:60, col:74> col:74 in 'unsigned char'
|-FunctionDecl 0x28deb8292f8 <line:567:1, col:39> col:5 invalid ec_precompute_mont_data 'int (int *)'
| `-ParmVarDecl 0x28deb829260 <col:29, <invalid sloc>> col:39 invalid 'int *'
|-FunctionDecl 0x28deb829450 <line:568:1, col:53> col:5 invalid ec_group_simple_order_bits 'int (const int *)'
| `-ParmVarDecl 0x28deb8293b8 <col:32, col:48> col:48 invalid group 'const int *'
|-FunctionDecl 0x28deb8296a8 <line:578:1, line:579:61> line:578:8 invalid ec_key_simple_priv2oct 'size_t (const int *, unsigned char *, size_t)'
| |-ParmVarDecl 0x28deb829510 <col:31, col:45> col:45 invalid eckey 'const int *'
| |-ParmVarDecl 0x28deb829590 <line:579:31, col:46> col:46 buf 'unsigned char *'
| `-ParmVarDecl 0x28deb829608 <col:51, col:58> col:58 len 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb8218b0 <line:580:1, col:79> col:5 invalid ec_key_simple_oct2priv 'int (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x28deb829778 <col:28, col:36> col:36 invalid eckey 'int *'
| |-ParmVarDecl 0x28deb8297f8 <col:43, col:64> col:64 buf 'const unsigned char *'
| `-ParmVarDecl 0x28deb829870 <col:69, col:76> col:76 len 'size_t':'unsigned long long'
|-FunctionDecl 0x28deb821a18 <line:581:1, col:45> col:5 invalid ec_key_simple_generate_key 'int (int *)'
| `-ParmVarDecl 0x28deb821980 <col:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x28deb821b70 <line:582:1, col:52> col:5 invalid ec_key_simple_generate_public_key 'int (int *)'
| `-ParmVarDecl 0x28deb821ad8 <col:39, col:47> col:47 invalid eckey 'int *'
|-FunctionDecl 0x28deb821cc8 <line:583:1, col:48> col:5 invalid ec_key_simple_check_key 'int (const int *)'
| `-ParmVarDecl 0x28deb821c30 <col:29, col:43> col:43 invalid eckey 'const int *'
|-RecordDecl 0x28deb821d70 <line:587:1, line:612:1> line:587:8 invalid struct ec_key_method_st definition
| |-FieldDecl 0x28deb821e48 <line:588:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x28deb821ed0 <line:589:5, col:13> col:13 flags 'int32_t':'int'
| |-FieldDecl 0x28deb821fe8 <line:590:5, col:28> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x28deb8220f8 <line:591:5, col:31> col:12 finish 'void (*)(int *)'
| |-FieldDecl 0x28deb822298 <line:592:5, col:48> col:11 copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x28deb822438 <line:593:5, col:54> col:11 set_group 'int (*)(int *, const int *)'
| |-FieldDecl 0x28deb8225d8 <line:594:5, col:59> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x28deb822778 <line:595:5, col:59> col:11 set_public 'int (*)(int *, const int *)'
| |-FieldDecl 0x28deb82b950 <line:596:5, col:30> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x28deb82bc00 <line:597:5, line:598:67> line:597:11 compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| |-FieldDecl 0x28deb82c200 <line:599:5, line:601:47> line:599:11 sign 'int (*)(int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-FieldDecl 0x28deb82c5a0 <line:602:5, line:603:34> line:602:11 sign_setup 'int (*)(int *, int *, int **, int **)'
| |-FieldDecl 0x28deb82d9f8 <line:604:5, <invalid sloc>> col:18 invalid sign_sig 'int *(*)(const unsigned char *, int, const int *, const int *, int *)'
| |-FieldDecl 0x28deb82dea0 <line:608:5, line:609:74> line:608:11 verify 'int (*)(int, const unsigned char *, int, const unsigned char *, int, int *)'
| `-FieldDecl 0x28deb82e230 <line:610:5, line:611:58> line:610:11 verify_sig 'int (*)(const unsigned char *, int, const int *, int *)'
|-FunctionDecl 0x28deb82e338 <line:616:1, col:34> col:5 invalid ossl_ec_key_gen 'int (int *)'
| `-ParmVarDecl 0x28deb82e2a0 <col:21, col:29> col:29 invalid eckey 'int *'
|-FunctionDecl 0x28deb82e628 <line:617:1, line:618:70> line:617:5 invalid ossl_ecdh_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x28deb82e400 <col:27, col:43> col:43 pout 'unsigned char **'
| |-ParmVarDecl 0x28deb82e478 <col:49, col:57> col:57 poutlen 'size_t *'
| |-ParmVarDecl 0x28deb82e4f8 <line:618:27, col:43> col:43 invalid pub_key 'const int *'
| `-ParmVarDecl 0x28deb82e578 <col:52, col:66> col:66 invalid ecdh 'const int *'
|-FunctionDecl 0x28deb866010 <line:619:1, line:620:72> line:619:5 invalid ecdh_simple_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x28deb82e708 <col:29, col:45> col:45 pout 'unsigned char **'
| |-ParmVarDecl 0x28deb82e780 <col:51, col:59> col:59 poutlen 'size_t *'
| |-ParmVarDecl 0x28deb82e800 <line:620:29, col:45> col:45 invalid pub_key 'const int *'
| `-ParmVarDecl 0x28deb82e880 <col:54, col:68> col:68 invalid ecdh 'const int *'
|-RecordDecl 0x28deb8660d0 <line:622:1, line:625:1> line:622:8 invalid struct ECDSA_SIG_st definition
| |-FieldDecl 0x28deb8661a8 <line:623:5, col:13> col:13 invalid r 'int *'
| `-FieldDecl 0x28deb866218 <line:624:5, col:13> col:13 invalid s 'int *'
|-FunctionDecl 0x28deb8664c8 <line:627:1, line:628:38> line:627:5 invalid ossl_ecdsa_sign_setup 'int (int *, int *, int **, int **)'
| |-ParmVarDecl 0x28deb866288 <col:27, col:35> col:35 invalid eckey 'int *'
| |-ParmVarDecl 0x28deb866308 <col:42, col:50> col:50 invalid ctx_in 'int *'
| |-ParmVarDecl 0x28deb866390 <col:58, col:67> col:67 invalid kinvp 'int **'
| `-ParmVarDecl 0x28deb866418 <line:628:27, col:36> col:36 invalid rp 'int **'
|-FunctionDecl 0x28deb8669f0 <line:629:1, line:631:71> line:629:5 invalid ossl_ecdsa_sign 'int (int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb8665a0 <col:21, col:25> col:25 type 'int'
| |-ParmVarDecl 0x28deb866620 <col:31, col:52> col:52 dgst 'const unsigned char *'
| |-ParmVarDecl 0x28deb8666a0 <col:58, col:62> col:62 dlen 'int'
| |-ParmVarDecl 0x28deb866720 <line:630:21, col:36> col:36 sig 'unsigned char *'
| |-ParmVarDecl 0x28deb8667a0 <col:41, col:55> col:55 siglen 'unsigned int *'
| |-ParmVarDecl 0x28deb866820 <line:631:21, col:35> col:35 invalid kinv 'const int *'
| |-ParmVarDecl 0x28deb8668a0 <col:41, col:55> col:55 invalid r 'const int *'
| `-ParmVarDecl 0x28deb866920 <col:58, col:66> col:66 invalid eckey 'int *'
|-FunctionDecl 0x28deb866da0 <line:632:1, line:634:45> line:632:12 invalid ossl_ecdsa_sign_sig 'int *(const unsigned char *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb866ae8 <col:32, col:53> col:53 dgst 'const unsigned char *'
| |-ParmVarDecl 0x28deb866b68 <col:59, col:63> col:63 dgst_len 'int'
| |-ParmVarDecl 0x28deb866be8 <line:633:32, col:46> col:46 invalid in_kinv 'const int *'
| |-ParmVarDecl 0x28deb866c68 <col:55, col:69> col:69 invalid in_r 'const int *'
| `-ParmVarDecl 0x28deb866ce8 <line:634:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x28deb8671c0 <line:635:1, line:636:78> line:635:5 invalid ossl_ecdsa_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'
| |-ParmVarDecl 0x28deb866e80 <col:23, col:27> col:27 type 'int'
| |-ParmVarDecl 0x28deb866f00 <col:33, col:54> col:54 dgst 'const unsigned char *'
| |-ParmVarDecl 0x28deb866f80 <col:60, col:64> col:64 dgst_len 'int'
| |-ParmVarDecl 0x28deb867000 <line:636:23, col:44> col:44 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x28deb867080 <col:52, col:56> col:56 sig_len 'int'
| `-ParmVarDecl 0x28deb867100 <col:65, col:73> col:73 invalid eckey 'int *'
|-FunctionDecl 0x28deb8674d8 <line:637:1, line:638:62> line:637:5 invalid ossl_ecdsa_verify_sig 'int (const unsigned char *, int, const int *, int *)'
| |-ParmVarDecl 0x28deb8672a8 <col:27, col:48> col:48 dgst 'const unsigned char *'
| |-ParmVarDecl 0x28deb867328 <col:54, col:58> col:58 dgst_len 'int'
| |-ParmVarDecl 0x28deb8673a8 <line:638:27, col:44> col:44 invalid sig 'const int *'
| `-ParmVarDecl 0x28deb867428 <col:49, col:57> col:57 invalid eckey 'int *'
|-FunctionDecl 0x28deb867ab0 <line:640:1, line:641:47> line:640:5 X25519 'int (uint8_t *, const uint8_t *, const uint8_t *)'
| |-ParmVarDecl 0x28deb867700 <col:12, col:37> col:20 out_shared_key 'uint8_t *':'uint8_t *'
| |-ParmVarDecl 0x28deb867870 <col:40, col:68> col:54 private_key 'const uint8_t *':'const uint8_t *'
| `-ParmVarDecl 0x28deb867938 <line:641:12, col:46> col:26 peer_public_value 'const uint8_t *':'const uint8_t *'
|-FunctionDecl 0x28deb867de8 <line:642:1, line:643:62> line:642:6 X25519_public_from_private 'void (uint8_t *, const uint8_t *)'
| |-ParmVarDecl 0x28deb867be0 <col:33, col:60> col:41 out_public_value 'uint8_t *':'uint8_t *'
| `-ParmVarDecl 0x28deb867ca8 <line:643:33, col:61> col:47 private_key 'const uint8_t *':'const uint8_t *'
|-FunctionDecl 0x28deb8680c8 <line:645:1, col:79> col:5 invalid ec_point_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x28deb867ec8 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x28deb867f48 <col:55, col:65> col:65 invalid p 'int *'
| `-ParmVarDecl 0x28deb868020 <col:68, col:76> col:76 invalid ctx 'int *'
|-TypedefDecl 0x28deb868190 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:51:1, col:17> col:17 referenced u8 'uint8_t':'unsigned char'
| `-TypedefType 0x28deb8675a0 'uint8_t' sugar
|   |-Typedef 0x28deb73c610 'uint8_t'
|   `-BuiltinType 0x28de9d14aa0 'unsigned char'
|-TypedefDecl 0x28deb868220 <line:52:1, col:18> col:18 referenced u64 'uint64_t':'unsigned long long'
| `-TypedefType 0x28deb8681f0 'uint64_t' sugar
|   |-Typedef 0x28deb73c760 'uint64_t'
|   `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-TypedefDecl 0x28deb8682b8 <line:74:1, col:18> col:18 referenced limb 'uint64_t':'unsigned long long'
| `-TypedefType 0x28deb8681f0 'uint64_t' sugar
|   |-Typedef 0x28deb73c760 'uint64_t'
|   `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-TypedefDecl 0x28deb868328 <line:75:1, col:19> col:19 referenced invalid widelimb 'int'
| `-BuiltinType 0x28de9d14a40 'int'
|-TypedefDecl 0x28deb868478 <line:77:1, col:21> col:14 referenced felem 'limb [4]'
| `-ConstantArrayType 0x28deb868420 'limb [4]' 4 
|   `-TypedefType 0x28deb868380 'limb' sugar
|     |-Typedef 0x28deb8682b8 'limb'
|     `-TypedefType 0x28deb8681f0 'uint64_t' sugar
|       |-Typedef 0x28deb73c760 'uint64_t'
|       `-BuiltinType 0x28de9d14b20 'unsigned long long'
|-TypedefDecl 0x28deb8685c8 <line:78:1, col:29> col:18 referenced widefelem 'widelimb [7]'
| `-ConstantArrayType 0x28deb868570 'widelimb [7]' 7 
|   `-TypedefType 0x28deb8684d0 'widelimb' sugar
|     |-Typedef 0x28deb868328 'widelimb'
|     `-BuiltinType 0x28de9d14a40 'int'
|-TypedefDecl 0x28deb868718 <line:85:1, col:30> col:12 referenced felem_bytearray 'u8 [28]'
| `-ConstantArrayType 0x28deb8686c0 'u8 [28]' 28 
|   `-TypedefType 0x28deb868620 'u8' sugar
|     |-Typedef 0x28deb868190 'u8'
|     `-TypedefType 0x28deb8675a0 'uint8_t' sugar
|       |-Typedef 0x28deb73c610 'uint8_t'
|       `-BuiltinType 0x28de9d14aa0 'unsigned char'
|-VarDecl 0x28deb868868 <line:87:1, line:103:1> line:87:30 used nistp224_curve_params 'const felem_bytearray [5]' static cinit
| `-InitListExpr 0x28deb7732e8 <col:57, line:103:1> 'const felem_bytearray [5]'
|   |-InitListExpr 0x28deb773360 <line:88:5, line:90:52> 'const felem_bytearray':'u8 const[28]'
|   | |-ImplicitCastExpr 0x28deb773480 <line:88:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8688d0 <col:6> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773498 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8688f8 <col:12> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7734b0 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868920 <col:18> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7734c8 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868948 <col:24> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7734e0 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868970 <col:30> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7734f8 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868998 <col:36> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773510 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8689c0 <col:42> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773528 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8689e8 <col:48> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773540 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868a10 <col:54> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773558 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868a38 <col:60> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773570 <line:89:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868a60 <col:6> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773588 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868a88 <col:12> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7735a0 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868ab0 <col:18> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7735b8 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868ad8 <col:24> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7735d0 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868b00 <col:30> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7735e8 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868b28 <col:36> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773600 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868b50 <col:42> 'int' 0
|   | |-ImplicitCastExpr 0x28deb773618 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868b78 <col:48> 'int' 0
|   | |-ImplicitCastExpr 0x28deb773630 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868ba0 <col:54> 'int' 0
|   | |-ImplicitCastExpr 0x28deb773648 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868bc8 <col:60> 'int' 0
|   | |-ImplicitCastExpr 0x28deb773660 <line:90:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868bf0 <col:6> 'int' 0
|   | |-ImplicitCastExpr 0x28deb773678 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868c18 <col:12> 'int' 0
|   | |-ImplicitCastExpr 0x28deb773690 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868c40 <col:18> 'int' 0
|   | |-ImplicitCastExpr 0x28deb7736a8 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868c68 <col:24> 'int' 0
|   | |-ImplicitCastExpr 0x28deb7736c0 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868c90 <col:30> 'int' 0
|   | |-ImplicitCastExpr 0x28deb7736d8 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868cb8 <col:36> 'int' 0
|   | |-ImplicitCastExpr 0x28deb7736f0 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868ce0 <col:42> 'int' 0
|   | `-ImplicitCastExpr 0x28deb773708 <col:48> 'u8':'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x28deb868d08 <col:48> 'int' 1
|   |-InitListExpr 0x28deb773730 <line:91:5, line:93:52> 'const felem_bytearray':'u8 const[28]'
|   | |-ImplicitCastExpr 0x28deb773850 <line:91:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868e50 <col:6> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773868 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868e78 <col:12> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773880 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868ea0 <col:18> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773898 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868ec8 <col:24> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7738b0 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868ef0 <col:30> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7738c8 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868f18 <col:36> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7738e0 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868f40 <col:42> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7738f8 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868f68 <col:48> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773910 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868f90 <col:54> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773928 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868fb8 <col:60> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773940 <line:92:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb868fe0 <col:6> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773958 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869008 <col:12> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773970 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869030 <col:18> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773988 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869058 <col:24> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7739a0 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869080 <col:30> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7739b8 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8690a8 <col:36> 'int' 254
|   | |-ImplicitCastExpr 0x28deb7739d0 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8690d0 <col:42> 'int' 255
|   | |-ImplicitCastExpr 0x28deb7739e8 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8690f8 <col:48> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773a00 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869120 <col:54> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773a18 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869148 <col:60> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773a30 <line:93:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869170 <col:6> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773a48 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869198 <col:12> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773a60 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8691c0 <col:18> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773a78 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8691e8 <col:24> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773a90 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869210 <col:30> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773aa8 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869238 <col:36> 'int' 255
|   | |-ImplicitCastExpr 0x28deb773ac0 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869260 <col:42> 'int' 255
|   | `-ImplicitCastExpr 0x28deb773ad8 <col:48> 'u8':'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x28deb869288 <col:48> 'int' 254
|   |-InitListExpr 0x28deb773b00 <line:94:5, line:96:52> 'const felem_bytearray':'u8 const[28]'
|   | |-ImplicitCastExpr 0x28deb773c20 <line:94:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8693d0 <col:6> 'int' 180
|   | |-ImplicitCastExpr 0x28deb773c38 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8693f8 <col:12> 'int' 5
|   | |-ImplicitCastExpr 0x28deb773c50 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869420 <col:18> 'int' 10
|   | |-ImplicitCastExpr 0x28deb773c68 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869448 <col:24> 'int' 133
|   | |-ImplicitCastExpr 0x28deb773c80 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869470 <col:30> 'int' 12
|   | |-ImplicitCastExpr 0x28deb773c98 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869498 <col:36> 'int' 4
|   | |-ImplicitCastExpr 0x28deb773cb0 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8694c0 <col:42> 'int' 179
|   | |-ImplicitCastExpr 0x28deb773cc8 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8694e8 <col:48> 'int' 171
|   | |-ImplicitCastExpr 0x28deb773ce0 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869510 <col:54> 'int' 245
|   | |-ImplicitCastExpr 0x28deb773cf8 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869538 <col:60> 'int' 65
|   | |-ImplicitCastExpr 0x28deb773d10 <line:95:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869560 <col:6> 'int' 50
|   | |-ImplicitCastExpr 0x28deb773d28 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869588 <col:12> 'int' 86
|   | |-ImplicitCastExpr 0x28deb773d40 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8695b0 <col:18> 'int' 80
|   | |-ImplicitCastExpr 0x28deb773d58 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8695d8 <col:24> 'int' 68
|   | |-ImplicitCastExpr 0x28deb773d70 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869600 <col:30> 'int' 176
|   | |-ImplicitCastExpr 0x28deb773d88 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869628 <col:36> 'int' 183
|   | |-ImplicitCastExpr 0x28deb773da0 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869650 <col:42> 'int' 215
|   | |-ImplicitCastExpr 0x28deb773db8 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869678 <col:48> 'int' 191
|   | |-ImplicitCastExpr 0x28deb773dd0 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8696a0 <col:54> 'int' 216
|   | |-ImplicitCastExpr 0x28deb773de8 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8696c8 <col:60> 'int' 186
|   | |-ImplicitCastExpr 0x28deb773e00 <line:96:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8696f0 <col:6> 'int' 39
|   | |-ImplicitCastExpr 0x28deb773e18 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869718 <col:12> 'int' 11
|   | |-ImplicitCastExpr 0x28deb773e30 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869740 <col:18> 'int' 57
|   | |-ImplicitCastExpr 0x28deb773e48 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869768 <col:24> 'int' 67
|   | |-ImplicitCastExpr 0x28deb773e60 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869790 <col:30> 'int' 35
|   | |-ImplicitCastExpr 0x28deb773e78 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8697b8 <col:36> 'int' 85
|   | |-ImplicitCastExpr 0x28deb773e90 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8697e0 <col:42> 'int' 255
|   | `-ImplicitCastExpr 0x28deb773ea8 <col:48> 'u8':'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x28deb869808 <col:48> 'int' 180
|   |-InitListExpr 0x28deb773ed0 <line:97:5, line:99:52> 'const felem_bytearray':'u8 const[28]'
|   | |-ImplicitCastExpr 0x28deb773ff0 <line:97:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869950 <col:6> 'int' 183
|   | |-ImplicitCastExpr 0x28deb774008 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869978 <col:12> 'int' 14
|   | |-ImplicitCastExpr 0x28deb774020 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8699a0 <col:18> 'int' 12
|   | |-ImplicitCastExpr 0x28deb774038 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8699c8 <col:24> 'int' 189
|   | |-ImplicitCastExpr 0x28deb774050 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb8699f0 <col:30> 'int' 107
|   | |-ImplicitCastExpr 0x28deb774068 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869a18 <col:36> 'int' 180
|   | |-ImplicitCastExpr 0x28deb774080 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869a40 <col:42> 'int' 191
|   | |-ImplicitCastExpr 0x28deb774098 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869a68 <col:48> 'int' 127
|   | |-ImplicitCastExpr 0x28deb7740b0 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869a90 <col:54> 'int' 50
|   | |-ImplicitCastExpr 0x28deb7740c8 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869ab8 <col:60> 'int' 19
|   | |-ImplicitCastExpr 0x28deb7740e0 <line:98:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869ae0 <col:6> 'int' 144
|   | |-ImplicitCastExpr 0x28deb7740f8 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869b08 <col:12> 'int' 185
|   | |-ImplicitCastExpr 0x28deb774110 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869b30 <col:18> 'int' 74
|   | |-ImplicitCastExpr 0x28deb774128 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869b58 <col:24> 'int' 3
|   | |-ImplicitCastExpr 0x28deb774140 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869b80 <col:30> 'int' 193
|   | |-ImplicitCastExpr 0x28deb774158 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869ba8 <col:36> 'int' 211
|   | |-ImplicitCastExpr 0x28deb774170 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869bd0 <col:42> 'int' 86
|   | |-ImplicitCastExpr 0x28deb774188 <col:48> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869bf8 <col:48> 'int' 194
|   | |-ImplicitCastExpr 0x28deb7741a0 <col:54> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869c20 <col:54> 'int' 17
|   | |-ImplicitCastExpr 0x28deb7741b8 <col:60> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869c48 <col:60> 'int' 34
|   | |-ImplicitCastExpr 0x28deb7741d0 <line:99:6> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869c70 <col:6> 'int' 52
|   | |-ImplicitCastExpr 0x28deb7741e8 <col:12> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869c98 <col:12> 'int' 50
|   | |-ImplicitCastExpr 0x28deb774200 <col:18> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869cc0 <col:18> 'int' 128
|   | |-ImplicitCastExpr 0x28deb774218 <col:24> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869ce8 <col:24> 'int' 214
|   | |-ImplicitCastExpr 0x28deb774230 <col:30> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869d10 <col:30> 'int' 17
|   | |-ImplicitCastExpr 0x28deb774248 <col:36> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869d38 <col:36> 'int' 92
|   | |-ImplicitCastExpr 0x28deb774260 <col:42> 'u8':'unsigned char' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb869d60 <col:42> 'int' 29
|   | `-ImplicitCastExpr 0x28deb774278 <col:48> 'u8':'unsigned char' <IntegralCast>
|   |   `-IntegerLiteral 0x28deb869d88 <col:48> 'int' 33
|   `-InitListExpr 0x28deb7742a0 <line:100:5, line:102:52> 'const felem_bytearray':'u8 const[28]'
|     |-ImplicitCastExpr 0x28deb7743c0 <line:100:6> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb869ed0 <col:6> 'int' 189
|     |-ImplicitCastExpr 0x28deb7743d8 <col:12> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb869ef8 <col:12> 'int' 55
|     |-ImplicitCastExpr 0x28deb7743f0 <col:18> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb869f20 <col:18> 'int' 99
|     |-ImplicitCastExpr 0x28deb774408 <col:24> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb869f48 <col:24> 'int' 136
|     |-ImplicitCastExpr 0x28deb774420 <col:30> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb869f70 <col:30> 'int' 181
|     |-ImplicitCastExpr 0x28deb774438 <col:36> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb869f98 <col:36> 'int' 247
|     |-ImplicitCastExpr 0x28deb774450 <col:42> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb869fc0 <col:42> 'int' 35
|     |-ImplicitCastExpr 0x28deb774468 <col:48> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb869fe8 <col:48> 'int' 251
|     |-ImplicitCastExpr 0x28deb774480 <col:54> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772da0 <col:54> 'int' 76
|     |-ImplicitCastExpr 0x28deb774498 <col:60> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772dc8 <col:60> 'int' 34
|     |-ImplicitCastExpr 0x28deb7744b0 <line:101:6> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772df0 <col:6> 'int' 223
|     |-ImplicitCastExpr 0x28deb7744c8 <col:12> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772e18 <col:12> 'int' 230
|     |-ImplicitCastExpr 0x28deb7744e0 <col:18> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772e40 <col:18> 'int' 205
|     |-ImplicitCastExpr 0x28deb7744f8 <col:24> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772e68 <col:24> 'int' 67
|     |-ImplicitCastExpr 0x28deb774510 <col:30> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772e90 <col:30> 'int' 117
|     |-ImplicitCastExpr 0x28deb774528 <col:36> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772eb8 <col:36> 'int' 160
|     |-ImplicitCastExpr 0x28deb774540 <col:42> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772ee0 <col:42> 'int' 90
|     |-ImplicitCastExpr 0x28deb774558 <col:48> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772f08 <col:48> 'int' 7
|     |-ImplicitCastExpr 0x28deb774570 <col:54> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772f30 <col:54> 'int' 71
|     |-ImplicitCastExpr 0x28deb774588 <col:60> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772f58 <col:60> 'int' 100
|     |-ImplicitCastExpr 0x28deb7745a0 <line:102:6> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772f80 <col:6> 'int' 68
|     |-ImplicitCastExpr 0x28deb7745b8 <col:12> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772fa8 <col:12> 'int' 213
|     |-ImplicitCastExpr 0x28deb7745d0 <col:18> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772fd0 <col:18> 'int' 129
|     |-ImplicitCastExpr 0x28deb7745e8 <col:24> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb772ff8 <col:24> 'int' 153
|     |-ImplicitCastExpr 0x28deb774600 <col:30> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb773020 <col:30> 'int' 133
|     |-ImplicitCastExpr 0x28deb774618 <col:36> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb773048 <col:36> 'int' 0
|     |-ImplicitCastExpr 0x28deb774630 <col:42> 'u8':'unsigned char' <IntegralCast>
|     | `-IntegerLiteral 0x28deb773070 <col:42> 'int' 126
|     `-ImplicitCastExpr 0x28deb774648 <col:48> 'u8':'unsigned char' <IntegralCast>
|       `-IntegerLiteral 0x28deb773098 <col:48> 'int' 52
|-VarDecl 0x28deb7748e8 <line:136:1, line:233:1> line:136:20 used gmul 'const felem [2][16][3]' static cinit
| `-InitListExpr 0x28deb77bd28 <col:37, line:233:1> 'const felem [2][16][3]'
|   |-InitListExpr 0x28deb77c078 <line:137:1, line:184:16> 'const felem [16][3]'
|   | |-InitListExpr 0x28deb77c168 <line:137:2, line:139:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77c1d0 <line:137:3, col:14> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77c230 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb774950 <col:4> 'int' 0
|   | | | |-ImplicitCastExpr 0x28deb77c248 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb774978 <col:7> 'int' 0
|   | | | |-ImplicitCastExpr 0x28deb77c260 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7749a0 <col:10> 'int' 0
|   | | | `-ImplicitCastExpr 0x28deb77c278 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb7749c8 <col:13> 'int' 0
|   | | |-InitListExpr 0x28deb77c2a0 <line:138:3, col:14> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77c300 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb774a50 <col:4> 'int' 0
|   | | | |-ImplicitCastExpr 0x28deb77c318 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb774a78 <col:7> 'int' 0
|   | | | |-ImplicitCastExpr 0x28deb77c330 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb774aa0 <col:10> 'int' 0
|   | | | `-ImplicitCastExpr 0x28deb77c348 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb774ac8 <col:13> 'int' 0
|   | | `-InitListExpr 0x28deb77c370 <line:139:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77c3d0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb774b50 <col:4> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77c3e8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb774b78 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77c400 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb774ba0 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77c418 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb774bc8 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77c460 <line:140:2, line:142:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77c4c8 <line:140:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77c528 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb774ca8 <col:4> 'long long' 14215405738138913
|   | | | |-ImplicitCastExpr 0x28deb77c540 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb774cd0 <col:22> 'long long' 54557040081707572
|   | | | |-ImplicitCastExpr 0x28deb77c558 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb774cf8 <col:40> 'long long' 35802381656082947
|   | | | `-ImplicitCastExpr 0x28deb77c570 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb774d20 <col:58> 'long long' 51525368618398911
|   | | |-InitListExpr 0x28deb77c598 <line:141:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77c5f8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb774dd0 <col:4> 'long long' 60096666400751156
|   | | | |-ImplicitCastExpr 0x28deb77c610 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb774df8 <col:22> 'long long' 33108880804766788
|   | | | |-ImplicitCastExpr 0x28deb77c628 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb774e20 <col:40> 'long long' 70733931823418691
|   | | | `-ImplicitCastExpr 0x28deb77c640 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb774e48 <col:58> 'long long' 53259671233230627
|   | | `-InitListExpr 0x28deb77c668 <line:142:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77c6c8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb774ed0 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77c6e0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb774ef8 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77c6f8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb774f20 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77c710 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb774f48 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77c758 <line:143:2, line:145:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77c7c0 <line:143:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77c820 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775028 <col:4> 'long long' 71378600081669097
|   | | | |-ImplicitCastExpr 0x28deb77c838 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775050 <col:22> 'long long' 53101353446198878
|   | | | |-ImplicitCastExpr 0x28deb77c850 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775078 <col:40> 'long long' 9643677127944771
|   | | | `-ImplicitCastExpr 0x28deb77c868 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb7750a0 <col:58> 'long long' 8806794754890693
|   | | |-InitListExpr 0x28deb77c890 <line:144:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77c8f0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775128 <col:4> 'long long' 11787557387672643
|   | | | |-ImplicitCastExpr 0x28deb77c908 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775150 <col:22> 'long long' 66683595736409698
|   | | | |-ImplicitCastExpr 0x28deb77c920 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775178 <col:40> 'long long' 62071344511258832
|   | | | `-ImplicitCastExpr 0x28deb77c938 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb7751a0 <col:58> 'long long' 42804938177827617
|   | | `-InitListExpr 0x28deb77c960 <line:145:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77c9c0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775228 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77c9d8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775250 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77c9f0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775278 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77ca08 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb7752a0 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77ca50 <line:146:2, line:148:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77cab8 <line:146:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77cb18 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775380 <col:4> 'long long' 30749386935733944
|   | | | |-ImplicitCastExpr 0x28deb77cb30 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7753a8 <col:22> 'long long' 24100114246361841
|   | | | |-ImplicitCastExpr 0x28deb77cb48 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7753d0 <col:40> 'long long' 6449338927450687
|   | | | `-ImplicitCastExpr 0x28deb77cb60 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb7753f8 <col:58> 'long long' 67233816825210696
|   | | |-InitListExpr 0x28deb77cb88 <line:147:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77cbe8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775480 <col:4> 'long long' 68010914192828013
|   | | | |-ImplicitCastExpr 0x28deb77cc00 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7754a8 <col:22> 'long long' 48399079136688607
|   | | | |-ImplicitCastExpr 0x28deb77cc18 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7754d0 <col:40> 'long long' 13854281485496300
|   | | | `-ImplicitCastExpr 0x28deb77cc30 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb7754f8 <col:58> 'long long' 26093033259862551
|   | | `-InitListExpr 0x28deb77cc58 <line:148:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77ccb8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775580 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77ccd0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb7755a8 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77cce8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb7755d0 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77cd00 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb7755f8 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77cd48 <line:149:2, line:151:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77cdf0 <line:149:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77ce50 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7756d8 <col:4> 'long long' 1760964184319715
|   | | | |-ImplicitCastExpr 0x28deb77ce68 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775700 <col:22> 'long long' 41090027584401568
|   | | | |-ImplicitCastExpr 0x28deb77ce80 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775728 <col:40> 'long long' 67532174447950347
|   | | | `-ImplicitCastExpr 0x28deb77ce98 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb775750 <col:58> 'long long' 1294857651850942
|   | | |-InitListExpr 0x28deb77cec0 <line:150:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77cf20 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7757d8 <col:4> 'long long' 32950441342316381
|   | | | |-ImplicitCastExpr 0x28deb77cf38 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775800 <col:22> 'long long' 37393468670956624
|   | | | |-ImplicitCastExpr 0x28deb77cf50 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775828 <col:40> 'long long' 36547193909475078
|   | | | `-ImplicitCastExpr 0x28deb77cf68 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb775850 <col:58> 'long long' 29580121932532827
|   | | `-InitListExpr 0x28deb77cf90 <line:151:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77cff0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb7758d8 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77d008 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775900 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77d020 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775928 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77d038 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb775950 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77d080 <line:152:2, line:154:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77d0e8 <line:152:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77d148 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775a30 <col:4> 'long long' 66029711509099974
|   | | | |-ImplicitCastExpr 0x28deb77d160 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775a58 <col:22> 'long long' 2357355352064724
|   | | | |-ImplicitCastExpr 0x28deb77d178 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775a80 <col:40> 'long long' 62261198381500593
|   | | | `-ImplicitCastExpr 0x28deb77d190 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb775aa8 <col:58> 'long long' 41424473139086755
|   | | |-InitListExpr 0x28deb77d1b8 <line:153:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77d218 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775b30 <col:4> 'long long' 44747090636954559
|   | | | |-ImplicitCastExpr 0x28deb77d230 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775b58 <col:22> 'long long' 18408407550890224
|   | | | |-ImplicitCastExpr 0x28deb77d248 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775b80 <col:40> 'long long' 71473164347156647
|   | | | `-ImplicitCastExpr 0x28deb77d260 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb775ba8 <col:58> 'long long' 23149671595181610
|   | | `-InitListExpr 0x28deb77d288 <line:154:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77d2e8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775c30 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77d300 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775c58 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77d318 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775c80 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77d330 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb775ca8 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77d378 <line:155:2, line:157:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77d3e0 <line:155:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77d440 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775d88 <col:4> 'long long' 36644373851745395
|   | | | |-ImplicitCastExpr 0x28deb77d458 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775db0 <col:22> 'long long' 45067346634300687
|   | | | |-ImplicitCastExpr 0x28deb77d470 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775dd8 <col:40> 'long long' 15269155078675364
|   | | | `-ImplicitCastExpr 0x28deb77d488 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb775e00 <col:58> 'long long' 55047824290902620
|   | | |-InitListExpr 0x28deb77d4b0 <line:156:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77d510 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775e88 <col:4> 'long long' 52870985989664036
|   | | | |-ImplicitCastExpr 0x28deb77d528 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775eb0 <col:22> 'long long' 62482831525149420
|   | | | |-ImplicitCastExpr 0x28deb77d540 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb775ed8 <col:40> 'long long' 55050187086899839
|   | | | `-ImplicitCastExpr 0x28deb77d558 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb775f00 <col:58> 'long long' 8720744547476036
|   | | `-InitListExpr 0x28deb77d580 <line:157:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77d5e0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775f88 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77d5f8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775fb0 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77d610 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb775fd8 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77d628 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb776000 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77d670 <line:158:2, line:160:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77d6d8 <line:158:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77d738 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7760e0 <col:4> 'long long' 21566442933681569
|   | | | |-ImplicitCastExpr 0x28deb77d750 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776108 <col:22> 'long long' 58858973370079675
|   | | | |-ImplicitCastExpr 0x28deb77d768 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776130 <col:40> 'long long' 71931372512054140
|   | | | `-ImplicitCastExpr 0x28deb77d780 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb776158 <col:58> 'long long' 10714412583876681
|   | | |-InitListExpr 0x28deb77d7a8 <line:159:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77d808 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7761e0 <col:4> 'long long' 19370324697435552
|   | | | |-ImplicitCastExpr 0x28deb77d820 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776208 <col:22> 'long long' 57908507923887355
|   | | | |-ImplicitCastExpr 0x28deb77d838 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776230 <col:40> 'long long' 42340026435320969
|   | | | `-ImplicitCastExpr 0x28deb77d850 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb776258 <col:58> 'long long' 71608876929167634
|   | | `-InitListExpr 0x28deb77d878 <line:160:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77d8d8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb7762e0 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77d8f0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb776308 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77d908 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb776330 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77d920 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb776358 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77d968 <line:161:2, line:163:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77d9d0 <line:161:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77da30 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776438 <col:4> 'long long' 63768024459850029
|   | | | |-ImplicitCastExpr 0x28deb77da48 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776460 <col:22> 'long long' 56043627304934510
|   | | | |-ImplicitCastExpr 0x28deb77da60 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776488 <col:40> 'long long' 34260102009486412
|   | | | `-ImplicitCastExpr 0x28deb77da78 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb7764b0 <col:58> 'long long' 1626393528605511
|   | | |-InitListExpr 0x28deb77daa0 <line:162:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77db00 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776538 <col:4> 'long long' 44894586669579834
|   | | | |-ImplicitCastExpr 0x28deb77db18 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776560 <col:22> 'long long' 6862401668738010
|   | | | |-ImplicitCastExpr 0x28deb77db30 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776588 <col:40> 'long long' 28182317526089046
|   | | | `-ImplicitCastExpr 0x28deb77db48 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb7765b0 <col:58> 'long long' 32234762541237140
|   | | `-InitListExpr 0x28deb77db70 <line:163:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77dbd0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb776638 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77dbe8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb776660 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77dc00 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb776688 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77dc18 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb7766b0 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77dc60 <line:164:2, line:166:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77dcc8 <line:164:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77dd28 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776790 <col:4> 'long long' 1241452496952329
|   | | | |-ImplicitCastExpr 0x28deb77dd40 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7767b8 <col:22> 'long long' 32837518891159477
|   | | | |-ImplicitCastExpr 0x28deb77dd58 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7767e0 <col:40> 'long long' 51964745771230176
|   | | | `-ImplicitCastExpr 0x28deb77dd70 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb776808 <col:58> 'long long' 18517456905243677
|   | | |-InitListExpr 0x28deb77dd98 <line:165:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77ddf8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776890 <col:4> 'long long' 64715081076890241
|   | | | |-ImplicitCastExpr 0x28deb77de10 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7768b8 <col:22> 'long long' 17397160098818133
|   | | | |-ImplicitCastExpr 0x28deb77de28 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7768e0 <col:40> 'long long' 8160769644386790
|   | | | `-ImplicitCastExpr 0x28deb77de40 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb776908 <col:58> 'long long' 4044017734465703
|   | | `-InitListExpr 0x28deb77de68 <line:166:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77dec8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb776990 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77dee0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb7769b8 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77def8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb7769e0 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77df10 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb776a08 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77df58 <line:167:2, line:169:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77dfc0 <line:167:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77e020 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776ae8 <col:4> 'long long' 61557443266865279
|   | | | |-ImplicitCastExpr 0x28deb77e038 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776b10 <col:22> 'long long' 19193158631805686
|   | | | |-ImplicitCastExpr 0x28deb77e050 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776b38 <col:40> 'long long' 63114965174238904
|   | | | `-ImplicitCastExpr 0x28deb77e068 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb776b60 <col:58> 'long long' 57153014074658596
|   | | |-InitListExpr 0x28deb77e090 <line:168:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77e0f0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776be8 <col:4> 'long long' 33295952022928805
|   | | | |-ImplicitCastExpr 0x28deb77e108 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776c10 <col:22> 'long long' 6856166956736580
|   | | | |-ImplicitCastExpr 0x28deb77e120 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776c38 <col:40> 'long long' 41238105016811088
|   | | | `-ImplicitCastExpr 0x28deb77e138 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb776c60 <col:58> 'long long' 55172608173881473
|   | | `-InitListExpr 0x28deb77e160 <line:169:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77e1c0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb776ce8 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77e1d8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb776d10 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77e1f0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb776d38 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77e208 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb776d60 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77e250 <line:170:2, line:172:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77e2b8 <line:170:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77e318 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776e78 <col:4> 'long long' 51955431143051104
|   | | | |-ImplicitCastExpr 0x28deb77e330 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776ea0 <col:22> 'long long' 48951545393908131
|   | | | |-ImplicitCastExpr 0x28deb77e348 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776ec8 <col:40> 'long long' 7332110390559962
|   | | | `-ImplicitCastExpr 0x28deb77e360 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb776ef0 <col:58> 'long long' 6585796058786180
|   | | |-InitListExpr 0x28deb77e388 <line:171:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77e3e8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776f78 <col:4> 'long long' 33542384203444382
|   | | | |-ImplicitCastExpr 0x28deb77e400 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776fa0 <col:22> 'long long' 10058797968965999
|   | | | |-ImplicitCastExpr 0x28deb77e418 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb776fc8 <col:40> 'long long' 21426027006873135
|   | | | `-ImplicitCastExpr 0x28deb77e430 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb776ff0 <col:58> 'long long' 63791559461639017
|   | | `-InitListExpr 0x28deb77e458 <line:172:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77e4b8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb777078 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77e4d0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb7770a0 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77e4e8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb7770c8 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77e500 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb7770f0 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77e548 <line:173:2, line:175:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77e5b0 <line:173:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77e610 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7771d0 <col:4> 'long long' 24521654599544755
|   | | | |-ImplicitCastExpr 0x28deb77e628 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7771f8 <col:22> 'long long' 48950835715048786
|   | | | |-ImplicitCastExpr 0x28deb77e640 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb777220 <col:40> 'long long' 56486885804635390
|   | | | `-ImplicitCastExpr 0x28deb77e658 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb777248 <col:58> 'long long' 30538161968627171
|   | | |-InitListExpr 0x28deb77e680 <line:174:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77e6e0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7772d0 <col:4> 'long long' 71951289672484434
|   | | | |-ImplicitCastExpr 0x28deb77e6f8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7772f8 <col:22> 'long long' 50802807143032121
|   | | | |-ImplicitCastExpr 0x28deb77e710 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb777320 <col:40> 'long long' 45762139208909556
|   | | | `-ImplicitCastExpr 0x28deb77e728 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb777348 <col:58> 'long long' 11379042128140896
|   | | `-InitListExpr 0x28deb77e750 <line:175:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77e7b0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb7773d0 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77e7c8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb7773f8 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77e7e0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb777420 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77e7f8 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb777448 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77e840 <line:176:2, line:178:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77e8a8 <line:176:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77e908 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb777528 <col:4> 'long long' 18220922147849391
|   | | | |-ImplicitCastExpr 0x28deb77e920 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb777550 <col:22> 'long long' 2697206093288044
|   | | | |-ImplicitCastExpr 0x28deb77e938 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb777578 <col:40> 'long long' 53180879631546064
|   | | | `-ImplicitCastExpr 0x28deb77e950 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb7775a0 <col:58> 'long long' 9383343528083543
|   | | |-InitListExpr 0x28deb77e978 <line:177:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77e9d8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb777628 <col:4> 'long long' 39346355303216222
|   | | | |-ImplicitCastExpr 0x28deb77e9f0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb777650 <col:22> 'long long' 67866619231686511
|   | | | |-ImplicitCastExpr 0x28deb77ea08 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb777678 <col:40> 'long long' 37772318539245749
|   | | | `-ImplicitCastExpr 0x28deb77ea20 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb7776a0 <col:58> 'long long' 65271359694450105
|   | | `-InitListExpr 0x28deb77ea48 <line:178:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77eaa8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb777728 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77eac0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb777750 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77ead8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb777778 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77eaf0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb7777a0 <col:13> 'int' 0
|   | |-InitListExpr 0x28deb77eb38 <line:179:2, line:181:15> 'const felem [3]'
|   | | |-InitListExpr 0x28deb77eba0 <line:179:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77ec00 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb777880 <col:4> 'long long' 49944528290716795
|   | | | |-ImplicitCastExpr 0x28deb77ec18 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7778a8 <col:22> 'long long' 48476314201006552
|   | | | |-ImplicitCastExpr 0x28deb77ec30 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7778d0 <col:40> 'long long' 7926935861973702
|   | | | `-ImplicitCastExpr 0x28deb77ec48 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb7778f8 <col:58> 'long long' 56315968460949481
|   | | |-InitListExpr 0x28deb77ec70 <line:180:3, col:74> 'const felem':'limb const[4]'
|   | | | |-ImplicitCastExpr 0x28deb77ecd0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb777980 <col:4> 'long long' 11418713148600607
|   | | | |-ImplicitCastExpr 0x28deb77ece8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7779a8 <col:22> 'long long' 2383810739544042
|   | | | |-ImplicitCastExpr 0x28deb77ed00 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   | | | | `-IntegerLiteral 0x28deb7779d0 <col:40> 'long long' 69034399404693108
|   | | | `-ImplicitCastExpr 0x28deb77ed18 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   | | |   `-IntegerLiteral 0x28deb7779f8 <col:58> 'long long' 8489243135795900
|   | | `-InitListExpr 0x28deb77ed40 <line:181:3, col:14> 'const felem':'limb const[4]'
|   | |   |-ImplicitCastExpr 0x28deb77eda0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb777a80 <col:4> 'int' 1
|   | |   |-ImplicitCastExpr 0x28deb77edb8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb777aa8 <col:7> 'int' 0
|   | |   |-ImplicitCastExpr 0x28deb77edd0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   | |   | `-IntegerLiteral 0x28deb777ad0 <col:10> 'int' 0
|   | |   `-ImplicitCastExpr 0x28deb77ee00 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   | |     `-IntegerLiteral 0x28deb777af8 <col:13> 'int' 0
|   | `-InitListExpr 0x28deb77ee48 <line:182:2, line:184:15> 'const felem [3]'
|   |   |-InitListExpr 0x28deb77eeb0 <line:182:3, col:74> 'const felem':'limb const[4]'
|   |   | |-ImplicitCastExpr 0x28deb77ef10 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x28deb777bd8 <col:4> 'long long' 44809056590259435
|   |   | |-ImplicitCastExpr 0x28deb77ef28 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x28deb777c00 <col:22> 'long long' 1914876046564940
|   |   | |-ImplicitCastExpr 0x28deb77ef40 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x28deb777c28 <col:40> 'long long' 71801422434380147
|   |   | `-ImplicitCastExpr 0x28deb77ef58 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x28deb777c50 <col:58> 'long long' 68027829451324504
|   |   |-InitListExpr 0x28deb77ef80 <line:183:3, col:74> 'const felem':'limb const[4]'
|   |   | |-ImplicitCastExpr 0x28deb77efe0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x28deb777cd8 <col:4> 'long long' 62240249598010623
|   |   | |-ImplicitCastExpr 0x28deb77eff8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x28deb777d00 <col:22> 'long long' 62677691397309147
|   |   | |-ImplicitCastExpr 0x28deb77f010 <col:40> 'limb':'unsigned long long' <IntegralCast>
|   |   | | `-IntegerLiteral 0x28deb777d28 <col:40> 'long long' 32834184294422163
|   |   | `-ImplicitCastExpr 0x28deb77f028 <col:58> 'limb':'unsigned long long' <IntegralCast>
|   |   |   `-IntegerLiteral 0x28deb777d50 <col:58> 'long long' 67174968371586392
|   |   `-InitListExpr 0x28deb77f050 <line:184:3, col:14> 'const felem':'limb const[4]'
|   |     |-ImplicitCastExpr 0x28deb77f0b0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|   |     | `-IntegerLiteral 0x28deb777dd8 <col:4> 'int' 1
|   |     |-ImplicitCastExpr 0x28deb77f0c8 <col:7> 'limb':'unsigned long long' <IntegralCast>
|   |     | `-IntegerLiteral 0x28deb777e00 <col:7> 'int' 0
|   |     |-ImplicitCastExpr 0x28deb77f0e0 <col:10> 'limb':'unsigned long long' <IntegralCast>
|   |     | `-IntegerLiteral 0x28deb777e28 <col:10> 'int' 0
|   |     `-ImplicitCastExpr 0x28deb77f0f8 <col:13> 'limb':'unsigned long long' <IntegralCast>
|   |       `-IntegerLiteral 0x28deb777e50 <col:13> 'int' 0
|   `-InitListExpr 0x28deb77f410 <line:185:1, line:232:16> 'const felem [16][3]'
|     |-InitListExpr 0x28deb77f500 <line:185:2, line:187:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb77f568 <line:185:3, col:14> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb77f5c8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb777ff0 <col:4> 'int' 0
|     | | |-ImplicitCastExpr 0x28deb77f5e0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778018 <col:7> 'int' 0
|     | | |-ImplicitCastExpr 0x28deb77f5f8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778040 <col:10> 'int' 0
|     | | `-ImplicitCastExpr 0x28deb77f610 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb778068 <col:13> 'int' 0
|     | |-InitListExpr 0x28deb77f638 <line:186:3, col:14> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb77f698 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7780f0 <col:4> 'int' 0
|     | | |-ImplicitCastExpr 0x28deb77f6b0 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778118 <col:7> 'int' 0
|     | | |-ImplicitCastExpr 0x28deb77f6c8 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778140 <col:10> 'int' 0
|     | | `-ImplicitCastExpr 0x28deb77f6e0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb778168 <col:13> 'int' 0
|     | `-InitListExpr 0x28deb77f708 <line:187:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb77f768 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb7781f0 <col:4> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb77f780 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb778218 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb77f798 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb778240 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb77f7b0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb778268 <col:13> 'int' 0
|     |-InitListExpr 0x28deb77f7f8 <line:188:2, line:190:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb77f860 <line:188:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb77f8c0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778348 <col:4> 'long long' 42332462233023828
|     | | |-ImplicitCastExpr 0x28deb77f8d8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778370 <col:22> 'long long' 42243062983880493
|     | | |-ImplicitCastExpr 0x28deb77f8f0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778398 <col:40> 'long long' 58027427525010455
|     | | `-ImplicitCastExpr 0x28deb77f908 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb7783c0 <col:58> 'long long' 59490963410320433
|     | |-InitListExpr 0x28deb77f930 <line:189:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb77f990 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778448 <col:4> 'long long' 37661422047375710
|     | | |-ImplicitCastExpr 0x28deb77f9a8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778470 <col:22> 'long long' 9350132935584427
|     | | |-ImplicitCastExpr 0x28deb77f9c0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778498 <col:40> 'long long' 45389832818299846
|     | | `-ImplicitCastExpr 0x28deb77f9d8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb7784c0 <col:58> 'long long' 15017233711959853
|     | `-InitListExpr 0x28deb77fa00 <line:190:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb77fa60 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb778548 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb77fa78 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb778570 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb77fa90 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb778598 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb77faa8 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb7785c0 <col:13> 'int' 0
|     |-InitListExpr 0x28deb77faf0 <line:191:2, line:193:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb77fb58 <line:191:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb77fbb8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7786a0 <col:4> 'long long' 7398951664410213
|     | | |-ImplicitCastExpr 0x28deb77fbd0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7786c8 <col:22> 'long long' 60475672073594172
|     | | |-ImplicitCastExpr 0x28deb77fbe8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7786f0 <col:40> 'long long' 65189123520720006
|     | | `-ImplicitCastExpr 0x28deb77fc00 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb778718 <col:58> 'long long' 28643743500374243
|     | |-InitListExpr 0x28deb77fc28 <line:192:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb77fc88 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7787a0 <col:4> 'long long' 70475444581864262
|     | | |-ImplicitCastExpr 0x28deb77fca0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7787c8 <col:22> 'long long' 68053533660433071
|     | | |-ImplicitCastExpr 0x28deb77fcb8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7787f0 <col:40> 'long long' 55479242755132331
|     | | `-ImplicitCastExpr 0x28deb77fcd0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb778818 <col:58> 'long long' 731566529102474
|     | `-InitListExpr 0x28deb77fcf8 <line:193:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb77fd58 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb7788a0 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb77fd70 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb7788c8 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb77fd88 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb7788f0 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb77fda0 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb778918 <col:13> 'int' 0
|     |-InitListExpr 0x28deb77fde8 <line:194:2, line:196:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb77fe50 <line:194:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb77feb0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7789f8 <col:4> 'long long' 33904912311162351
|     | | |-ImplicitCastExpr 0x28deb77fec8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778a20 <col:22> 'long long' 37915670572403972
|     | | |-ImplicitCastExpr 0x28deb77fee0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778a48 <col:40> 'long long' 61931713228770714
|     | | `-ImplicitCastExpr 0x28deb77fef8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb778a70 <col:58> 'long long' 59556603249994803
|     | |-InitListExpr 0x28deb77ff20 <line:195:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb77ff80 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778af8 <col:4> 'long long' 12229322042053423
|     | | |-ImplicitCastExpr 0x28deb77ff98 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778b20 <col:22> 'long long' 53667417733410291
|     | | |-ImplicitCastExpr 0x28deb77ffb0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778b48 <col:40> 'long long' 62062863872954880
|     | | `-ImplicitCastExpr 0x28deb77ffc8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb778b70 <col:58> 'long long' 59213258449723648
|     | `-InitListExpr 0x28deb77fff0 <line:196:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb780050 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb778bf8 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb780068 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb778c20 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb780080 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb778c48 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb780098 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb778c70 <col:13> 'int' 0
|     |-InitListExpr 0x28deb7800e0 <line:197:2, line:199:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb780148 <line:197:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb7801a8 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778d50 <col:4> 'long long' 41174889044835069
|     | | |-ImplicitCastExpr 0x28deb7801c0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778d78 <col:22> 'long long' 48461860850250128
|     | | |-ImplicitCastExpr 0x28deb7801d8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778dd0 <col:40> 'long long' 40209832863945724
|     | | `-ImplicitCastExpr 0x28deb7801f0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb778df8 <col:58> 'long long' 36688508243763925
|     | |-InitListExpr 0x28deb780218 <line:198:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb780278 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778e80 <col:4> 'long long' 39821100915975713
|     | | |-ImplicitCastExpr 0x28deb780290 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778ea8 <col:22> 'long long' 10027667342093709
|     | | |-ImplicitCastExpr 0x28deb7802a8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb778ed0 <col:40> 'long long' 49411097451828917
|     | | `-ImplicitCastExpr 0x28deb7802c0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb778ef8 <col:58> 'long long' 61039442818226922
|     | `-InitListExpr 0x28deb7802e8 <line:199:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb780348 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb778f80 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb780360 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb778fa8 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb780378 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb778fd0 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb780390 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb778ff8 <col:13> 'int' 0
|     |-InitListExpr 0x28deb7803d8 <line:200:2, line:202:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb780440 <line:200:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb7804a0 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7790d8 <col:4> 'long long' 33400705216086256
|     | | |-ImplicitCastExpr 0x28deb7804b8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779100 <col:22> 'long long' 65773690130261649
|     | | |-ImplicitCastExpr 0x28deb7804d0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779128 <col:40> 'long long' 29591350155084583
|     | | `-ImplicitCastExpr 0x28deb7804e8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb779150 <col:58> 'long long' 27904408962553022
|     | |-InitListExpr 0x28deb780510 <line:201:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb780570 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7791d8 <col:4> 'long long' 19878918007644842
|     | | |-ImplicitCastExpr 0x28deb780588 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779200 <col:22> 'long long' 39760458290838277
|     | | |-ImplicitCastExpr 0x28deb7805a0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779228 <col:40> 'long long' 8882603977681800
|     | | `-ImplicitCastExpr 0x28deb7805b8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb779250 <col:58> 'long long' 64454190132739665
|     | `-InitListExpr 0x28deb7805e0 <line:202:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb780640 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb7792d8 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb780658 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb779300 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb780670 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb779328 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb780688 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb779350 <col:13> 'int' 0
|     |-InitListExpr 0x28deb7806d0 <line:203:2, line:205:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb780738 <line:203:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb780798 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779430 <col:4> 'long long' 36697159835102230
|     | | |-ImplicitCastExpr 0x28deb7807b0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779458 <col:22> 'long long' 575617900413498
|     | | |-ImplicitCastExpr 0x28deb7807c8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779480 <col:40> 'long long' 29339469010895205
|     | | `-ImplicitCastExpr 0x28deb7807e0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb7794a8 <col:58> 'long long' 5910771084751601
|     | |-InitListExpr 0x28deb780808 <line:204:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb780868 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779530 <col:4> 'long long' 14138852356790521
|     | | |-ImplicitCastExpr 0x28deb780880 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779558 <col:22> 'long long' 20623455015356372
|     | | |-ImplicitCastExpr 0x28deb780898 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779580 <col:40> 'long long' 54424934377855695
|     | | `-ImplicitCastExpr 0x28deb7808b0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb7795a8 <col:58> 'long long' 3323637626710203
|     | `-InitListExpr 0x28deb7808d8 <line:205:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb780938 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb779630 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb780950 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb779658 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb780968 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb779680 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb780980 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb7796a8 <col:13> 'int' 0
|     |-InitListExpr 0x28deb7809c8 <line:206:2, line:208:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb780a30 <line:206:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb780a90 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779788 <col:4> 'long long' 41284609216738756
|     | | |-ImplicitCastExpr 0x28deb780aa8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7797b0 <col:22> 'long long' 23348383899184552
|     | | |-ImplicitCastExpr 0x28deb780ac0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7797d8 <col:40> 'long long' 57208799144709267
|     | | `-ImplicitCastExpr 0x28deb780ad8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb779800 <col:58> 'long long' 18021335613985331
|     | |-InitListExpr 0x28deb780b00 <line:207:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb780b60 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779888 <col:4> 'long long' 71519866587154834
|     | | |-ImplicitCastExpr 0x28deb780b78 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7798b0 <col:22> 'long long' 331650310714647
|     | | |-ImplicitCastExpr 0x28deb780b90 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb7798d8 <col:40> 'long long' 7414810685154214
|     | | `-ImplicitCastExpr 0x28deb780ba8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb779900 <col:58> 'long long' 1962338185252335
|     | `-InitListExpr 0x28deb780bd0 <line:208:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb780c30 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb779988 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb780c48 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb7799b0 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb780c60 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb7799d8 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb780c78 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb779a00 <col:13> 'int' 0
|     |-InitListExpr 0x28deb780cc0 <line:209:2, line:211:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb780d28 <line:209:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb780d88 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779ae0 <col:4> 'long long' 20952864667040953
|     | | |-ImplicitCastExpr 0x28deb780da0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779b08 <col:22> 'long long' 53105343129885304
|     | | |-ImplicitCastExpr 0x28deb780db8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779b30 <col:40> 'long long' 17663783448724262
|     | | `-ImplicitCastExpr 0x28deb780dd0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb779b58 <col:58> 'long long' 61941988514011822
|     | |-InitListExpr 0x28deb780e10 <line:210:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb780e70 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779be0 <col:4> 'long long' 58374853219681168
|     | | |-ImplicitCastExpr 0x28deb780e88 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779c08 <col:22> 'long long' 25954017644378996
|     | | |-ImplicitCastExpr 0x28deb780ea0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779c30 <col:40> 'long long' 43623027367233463
|     | | `-ImplicitCastExpr 0x28deb780eb8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb779c58 <col:58> 'long long' 42061554624494661
|     | `-InitListExpr 0x28deb780ee0 <line:211:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb780f40 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb779ce0 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb780f58 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb779d08 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb780f70 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb779d30 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb780f88 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb779d58 <col:13> 'int' 0
|     |-InitListExpr 0x28deb780fd0 <line:212:2, line:214:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb781038 <line:212:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb781098 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779e38 <col:4> 'long long' 18866340853038698
|     | | |-ImplicitCastExpr 0x28deb7810b0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779e60 <col:22> 'long long' 41174294738871394
|     | | |-ImplicitCastExpr 0x28deb7810c8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779e88 <col:40> 'long long' 69059630486859566
|     | | `-ImplicitCastExpr 0x28deb7810e0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb779eb0 <col:58> 'long long' 53229817573778734
|     | |-InitListExpr 0x28deb781108 <line:213:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb781168 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779f38 <col:4> 'long long' 1229341092743632
|     | | |-ImplicitCastExpr 0x28deb781180 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779f60 <col:22> 'long long' 11808623625303923
|     | | |-ImplicitCastExpr 0x28deb781198 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb779f88 <col:40> 'long long' 32750466386186109
|     | | `-ImplicitCastExpr 0x28deb7811b0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb779fb0 <col:58> 'long long' 7063500670951355
|     | `-InitListExpr 0x28deb7811d8 <line:214:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb781238 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77a038 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb781250 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77a060 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb781268 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77a088 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb781280 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb77a0b0 <col:13> 'int' 0
|     |-InitListExpr 0x28deb7812c8 <line:215:2, line:217:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb781330 <line:215:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb781390 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a190 <col:4> 'long long' 25736141242682233
|     | | |-ImplicitCastExpr 0x28deb7813a8 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a1b8 <col:22> 'long long' 20639221590945830
|     | | |-ImplicitCastExpr 0x28deb7813c0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a1e0 <col:40> 'long long' 63648179904700148
|     | | `-ImplicitCastExpr 0x28deb7813d8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb77a208 <col:58> 'long long' 55382561624164830
|     | |-InitListExpr 0x28deb781400 <line:216:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb781460 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a290 <col:4> 'long long' 13648133609350424
|     | | |-ImplicitCastExpr 0x28deb781478 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a2b8 <col:22> 'long long' 13987049300520376
|     | | |-ImplicitCastExpr 0x28deb781490 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a2e0 <col:40> 'long long' 20241014388399759
|     | | `-ImplicitCastExpr 0x28deb7814a8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb77a308 <col:58> 'long long' 56125148414327283
|     | `-InitListExpr 0x28deb7814d0 <line:217:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb781530 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77a390 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb781548 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77a3b8 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb781560 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77a3e0 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb781578 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb77a408 <col:13> 'int' 0
|     |-InitListExpr 0x28deb7815c0 <line:218:2, line:220:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb781628 <line:218:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb781688 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a4e8 <col:4> 'long long' 16887184962971910
|     | | |-ImplicitCastExpr 0x28deb7816a0 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a510 <col:22> 'long long' 20148389049946259
|     | | |-ImplicitCastExpr 0x28deb7816b8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a538 <col:40> 'long long' 62590757308324646
|     | | `-ImplicitCastExpr 0x28deb7816d0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb77a560 <col:58> 'long long' 11679895284435717
|     | |-InitListExpr 0x28deb7816f8 <line:219:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb781758 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a5e8 <col:4> 'long long' 31555794398004138
|     | | |-ImplicitCastExpr 0x28deb781770 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a610 <col:22> 'long long' 31652418437296597
|     | | |-ImplicitCastExpr 0x28deb781788 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a638 <col:40> 'long long' 5565067883491094
|     | | `-ImplicitCastExpr 0x28deb7817a0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb77a660 <col:58> 'long long' 42948060693069400
|     | `-InitListExpr 0x28deb7817c8 <line:220:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb781828 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77a6e8 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb781840 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77a710 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb781858 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77a738 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb781870 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb77a760 <col:13> 'int' 0
|     |-InitListExpr 0x28deb7818b8 <line:221:2, line:223:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb781920 <line:221:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb781980 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a840 <col:4> 'long long' 4484933557700496
|     | | |-ImplicitCastExpr 0x28deb781998 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a868 <col:22> 'long long' 12797448631115054
|     | | |-ImplicitCastExpr 0x28deb7819b0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a890 <col:40> 'long long' 41696350946270356
|     | | `-ImplicitCastExpr 0x28deb7819c8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb77a8b8 <col:58> 'long long' 52844113124987323
|     | |-InitListExpr 0x28deb7819f0 <line:222:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb781a50 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a940 <col:4> 'long long' 50320894428189032
|     | | |-ImplicitCastExpr 0x28deb781a68 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a968 <col:22> 'long long' 4608360979303795
|     | | |-ImplicitCastExpr 0x28deb781a80 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77a990 <col:40> 'long long' 45000129293402240
|     | | `-ImplicitCastExpr 0x28deb781a98 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb77a9b8 <col:58> 'long long' 34760599269173168
|     | `-InitListExpr 0x28deb781ac0 <line:223:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb781b20 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77aa40 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb781b38 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77aa68 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb781b50 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77aa90 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb781b68 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb77aab8 <col:13> 'int' 0
|     |-InitListExpr 0x28deb781bb0 <line:224:2, line:226:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb781c18 <line:224:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb781c78 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77ab98 <col:4> 'long long' 48724297006178995
|     | | |-ImplicitCastExpr 0x28deb781c90 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77abc0 <col:22> 'long long' 67574095596594845
|     | | |-ImplicitCastExpr 0x28deb781ca8 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77abe8 <col:40> 'long long' 30183651778200389
|     | | `-ImplicitCastExpr 0x28deb781cc0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb77ac10 <col:58> 'long long' 18251160955299033
|     | |-InitListExpr 0x28deb781ce8 <line:225:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb781d48 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77ac98 <col:4> 'long long' 38854541824519485
|     | | |-ImplicitCastExpr 0x28deb781d60 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77acc0 <col:22> 'long long' 43405894546881848
|     | | |-ImplicitCastExpr 0x28deb781d78 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77ace8 <col:40> 'long long' 25178753450613532
|     | | `-ImplicitCastExpr 0x28deb781d90 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb77ad10 <col:58> 'long long' 62159745794163690
|     | `-InitListExpr 0x28deb781db8 <line:226:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb781e18 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77ad98 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb781e30 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77ade0 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb781e48 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77ae08 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb781e60 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb77ae30 <col:13> 'int' 0
|     |-InitListExpr 0x28deb781ea8 <line:227:2, line:229:15> 'const felem [3]'
|     | |-InitListExpr 0x28deb781f10 <line:227:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb781f70 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77af10 <col:4> 'long long' 48681561500723115
|     | | |-ImplicitCastExpr 0x28deb781f88 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77af38 <col:22> 'long long' 21533324478502711
|     | | |-ImplicitCastExpr 0x28deb781fa0 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77af60 <col:40> 'long long' 55818039270904196
|     | | `-ImplicitCastExpr 0x28deb781fb8 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb77af88 <col:58> 'long long' 3040451452578746
|     | |-InitListExpr 0x28deb781fe0 <line:228:3, col:74> 'const felem':'limb const[4]'
|     | | |-ImplicitCastExpr 0x28deb782040 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77b010 <col:4> 'long long' 30400509585702766
|     | | |-ImplicitCastExpr 0x28deb782058 <col:22> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77b038 <col:22> 'long long' 71720626911765290
|     | | |-ImplicitCastExpr 0x28deb782070 <col:40> 'limb':'unsigned long long' <IntegralCast>
|     | | | `-IntegerLiteral 0x28deb77b060 <col:40> 'long long' 7308408247352024
|     | | `-ImplicitCastExpr 0x28deb782088 <col:58> 'limb':'unsigned long long' <IntegralCast>
|     | |   `-IntegerLiteral 0x28deb77b088 <col:58> 'long long' 1419608241050629
|     | `-InitListExpr 0x28deb7820b0 <line:229:3, col:14> 'const felem':'limb const[4]'
|     |   |-ImplicitCastExpr 0x28deb782110 <col:4> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77b110 <col:4> 'int' 1
|     |   |-ImplicitCastExpr 0x28deb782128 <col:7> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77b138 <col:7> 'int' 0
|     |   |-ImplicitCastExpr 0x28deb782140 <col:10> 'limb':'unsigned long long' <IntegralCast>
|     |   | `-IntegerLiteral 0x28deb77b160 <col:10> 'int' 0
|     |   `-ImplicitCastExpr 0x28deb782158 <col:13> 'limb':'unsigned long long' <IntegralCast>
|     |     `-IntegerLiteral 0x28deb77b188 <col:13> 'int' 0
|     `-InitListExpr 0x28deb7821a0 <line:230:2, line:232:15> 'const felem [3]'
|       |-InitListExpr 0x28deb782208 <line:230:3, col:74> 'const felem':'limb const[4]'
|       | |-ImplicitCastExpr 0x28deb782268 <col:4> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x28deb77b268 <col:4> 'long long' 66796554085571222
|       | |-ImplicitCastExpr 0x28deb782280 <col:22> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x28deb77b290 <col:22> 'long long' 26158445393921034
|       | |-ImplicitCastExpr 0x28deb782298 <col:40> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x28deb77b2b8 <col:40> 'long long' 33651971713134491
|       | `-ImplicitCastExpr 0x28deb7822b0 <col:58> 'limb':'unsigned long long' <IntegralCast>
|       |   `-IntegerLiteral 0x28deb77b2e0 <col:58> 'long long' 32657111288886622
|       |-InitListExpr 0x28deb7822d8 <line:231:3, col:74> 'const felem':'limb const[4]'
|       | |-ImplicitCastExpr 0x28deb782338 <col:4> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x28deb77b368 <col:4> 'long long' 14152348376426694
|       | |-ImplicitCastExpr 0x28deb782350 <col:22> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x28deb77b390 <col:22> 'long long' 50782694041125259
|       | |-ImplicitCastExpr 0x28deb782368 <col:40> 'limb':'unsigned long long' <IntegralCast>
|       | | `-IntegerLiteral 0x28deb77b3b8 <col:40> 'long long' 40839628717987281
|       | `-ImplicitCastExpr 0x28deb782380 <col:58> 'limb':'unsigned long long' <IntegralCast>
|       |   `-IntegerLiteral 0x28deb77b3e0 <col:58> 'long long' 17443819558305038
|       `-InitListExpr 0x28deb7823a8 <line:232:3, col:14> 'const felem':'limb const[4]'
|         |-ImplicitCastExpr 0x28deb782408 <col:4> 'limb':'unsigned long long' <IntegralCast>
|         | `-IntegerLiteral 0x28deb77b468 <col:4> 'int' 1
|         |-ImplicitCastExpr 0x28deb782420 <col:7> 'limb':'unsigned long long' <IntegralCast>
|         | `-IntegerLiteral 0x28deb77b490 <col:7> 'int' 0
|         |-ImplicitCastExpr 0x28deb782438 <col:10> 'limb':'unsigned long long' <IntegralCast>
|         | `-IntegerLiteral 0x28deb77b4b8 <col:10> 'int' 0
|         `-ImplicitCastExpr 0x28deb782450 <col:13> 'limb':'unsigned long long' <IntegralCast>
|           `-IntegerLiteral 0x28deb77b4e0 <col:13> 'int' 0
|-RecordDecl 0x28deb782468 prev 0x28deb804100 <line:236:1, line:240:1> line:236:8 invalid struct nistp224_pre_comp_st definition
| |-FieldDecl 0x28deb782698 <line:237:5, col:30> col:11 referenced g_pre_comp 'felem [2][16][3]'
| |-FieldDecl 0x28deb782708 <line:238:5, col:9> col:9 referenced references 'int'
| `-FieldDecl 0x28deb782778 <line:239:5, col:20> col:20 invalid lock 'int *'
|-FunctionDecl 0x28deb7828a0 <line:242:1, line:299:1> line:242:18 invalid EC_GFp_nistp224_method 'const int *(void)'
| `-CompoundStmt 0x28deb782bd0 <line:243:1, line:299:1>
|   `-DeclStmt 0x28deb782bb8 <line:244:5, line:296:6>
|     `-VarDecl 0x28deb782970 <line:244:5, col:28> col:28 invalid ret 'const int' static
|-FunctionDecl 0x28deb782ee8 <line:304:1, line:310:1> line:304:13 used bin28_to_felem 'void (limb *, const u8 *)' static
| |-ParmVarDecl 0x28deb782c60 <col:28, col:34> col:34 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb782d90 <col:39, col:53> col:48 used in 'const u8 *':'const u8 *'
| `-CompoundStmt 0x28deb783928 <line:305:1, line:310:1>
|   |-BinaryOperator 0x28deb7831e8 <line:306:5, col:42> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb783010 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb782ff8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb782fb0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb782c60 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb782fd0 <col:9> 'int' 0
|   | `-BinaryOperator 0x28deb7831c8 <col:14, col:42> 'unsigned long long' '&'
|   |   |-ImplicitCastExpr 0x28deb783198 <col:14, col:38> 'uint64_t':'unsigned long long' <LValueToRValue>
|   |   | `-UnaryOperator 0x28deb783158 <col:14, col:38> 'const uint64_t':'const unsigned long long' lvalue prefix '*' cannot overflow
|   |   |   `-ParenExpr 0x28deb783138 <col:15, col:38> 'const uint64_t *'
|   |   |     `-CStyleCastExpr 0x28deb783110 <col:16, col:37> 'const uint64_t *' <BitCast>
|   |   |       `-ImplicitCastExpr 0x28deb7830f8 <col:34, col:37> 'const u8 *':'const u8 *' <LValueToRValue> part_of_explicit_cast
|   |   |         `-ParenExpr 0x28deb7830d8 <col:34, col:37> 'const u8 *':'const u8 *' lvalue
|   |   |           `-DeclRefExpr 0x28deb783030 <col:35> 'const u8 *':'const u8 *' lvalue ParmVar 0x28deb782d90 'in' 'const u8 *':'const u8 *'
|   |   `-ImplicitCastExpr 0x28deb7831b0 <col:42> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x28deb783170 <col:42> 'long long' 72057594037927935
|   |-BinaryOperator 0x28deb783450 <line:307:5, col:48> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb783268 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb783250 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb783208 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb782c60 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb783228 <col:9> 'int' 1
|   | `-BinaryOperator 0x28deb783430 <col:14, col:48> 'unsigned long long' '&'
|   |   |-ImplicitCastExpr 0x28deb783400 <col:14, col:44> 'uint64_t':'unsigned long long' <LValueToRValue>
|   |   | `-ParenExpr 0x28deb7833b8 <col:14, col:44> 'const uint64_t':'const unsigned long long' lvalue
|   |   |   `-UnaryOperator 0x28deb7833a0 <col:15, col:43> 'const uint64_t':'const unsigned long long' lvalue prefix '*' cannot overflow
|   |   |     `-ParenExpr 0x28deb783380 <col:16, col:43> 'const uint64_t *'
|   |   |       `-CStyleCastExpr 0x28deb783358 <col:17, col:42> 'const uint64_t *' <BitCast>
|   |   |         `-ParenExpr 0x28deb783338 <col:35, col:42> 'const u8 *':'const u8 *'
|   |   |           `-BinaryOperator 0x28deb7832e8 <col:36, col:41> 'const u8 *':'const u8 *' '+'
|   |   |             |-ImplicitCastExpr 0x28deb7832d0 <col:36> 'const u8 *':'const u8 *' <LValueToRValue>
|   |   |             | `-DeclRefExpr 0x28deb783288 <col:36> 'const u8 *':'const u8 *' lvalue ParmVar 0x28deb782d90 'in' 'const u8 *':'const u8 *'
|   |   |             `-IntegerLiteral 0x28deb7832a8 <col:41> 'int' 7
|   |   `-ImplicitCastExpr 0x28deb783418 <col:48> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x28deb7833d8 <col:48> 'long long' 72057594037927935
|   |-BinaryOperator 0x28deb7836b8 <line:308:5, col:49> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb7834d0 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb7834b8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb783470 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb782c60 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb783490 <col:9> 'int' 2
|   | `-BinaryOperator 0x28deb783698 <col:14, col:49> 'unsigned long long' '&'
|   |   |-ImplicitCastExpr 0x28deb783668 <col:14, col:45> 'uint64_t':'unsigned long long' <LValueToRValue>
|   |   | `-ParenExpr 0x28deb783620 <col:14, col:45> 'const uint64_t':'const unsigned long long' lvalue
|   |   |   `-UnaryOperator 0x28deb783608 <col:15, col:44> 'const uint64_t':'const unsigned long long' lvalue prefix '*' cannot overflow
|   |   |     `-ParenExpr 0x28deb7835e8 <col:16, col:44> 'const uint64_t *'
|   |   |       `-CStyleCastExpr 0x28deb7835c0 <col:17, col:43> 'const uint64_t *' <BitCast>
|   |   |         `-ParenExpr 0x28deb7835a0 <col:35, col:43> 'const u8 *':'const u8 *'
|   |   |           `-BinaryOperator 0x28deb783550 <col:36, col:41> 'const u8 *':'const u8 *' '+'
|   |   |             |-ImplicitCastExpr 0x28deb783538 <col:36> 'const u8 *':'const u8 *' <LValueToRValue>
|   |   |             | `-DeclRefExpr 0x28deb7834f0 <col:36> 'const u8 *':'const u8 *' lvalue ParmVar 0x28deb782d90 'in' 'const u8 *':'const u8 *'
|   |   |             `-IntegerLiteral 0x28deb783510 <col:41> 'int' 14
|   |   `-ImplicitCastExpr 0x28deb783680 <col:49> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x28deb783640 <col:49> 'long long' 72057594037927935
|   `-BinaryOperator 0x28deb783908 <line:309:5, col:48> 'limb':'unsigned long long' '='
|     |-ArraySubscriptExpr 0x28deb783738 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x28deb783720 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb7836d8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb782c60 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x28deb7836f8 <col:9> 'int' 3
|     `-BinaryOperator 0x28deb7838e8 <col:14, col:48> 'uint64_t':'unsigned long long' '>>'
|       |-ImplicitCastExpr 0x28deb7838d0 <col:14, col:43> 'uint64_t':'unsigned long long' <LValueToRValue>
|       | `-ParenExpr 0x28deb783888 <col:14, col:43> 'const uint64_t':'const unsigned long long' lvalue
|       |   `-UnaryOperator 0x28deb783870 <col:15, col:42> 'const uint64_t':'const unsigned long long' lvalue prefix '*' cannot overflow
|       |     `-ParenExpr 0x28deb783850 <col:16, col:42> 'const uint64_t *'
|       |       `-CStyleCastExpr 0x28deb783828 <col:17, col:41> 'const uint64_t *' <BitCast>
|       |         `-ParenExpr 0x28deb783808 <col:35, col:41> 'const u8 *':'const u8 *'
|       |           `-BinaryOperator 0x28deb7837b8 <col:36, col:39> 'const u8 *':'const u8 *' '+'
|       |             |-ImplicitCastExpr 0x28deb7837a0 <col:36> 'const u8 *':'const u8 *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x28deb783758 <col:36> 'const u8 *':'const u8 *' lvalue ParmVar 0x28deb782d90 'in' 'const u8 *':'const u8 *'
|       |             `-IntegerLiteral 0x28deb783778 <col:39> 'int' 20
|       `-IntegerLiteral 0x28deb7838a8 <col:48> 'int' 8
|-FunctionDecl 0x28deb783c48 <line:312:1, line:321:1> line:312:13 used felem_to_bin28 'void (u8 *, const limb *)' static
| |-ParmVarDecl 0x28deb783a20 <col:28, col:37> col:31 used out 'u8 *':'u8 *'
| |-ParmVarDecl 0x28deb783b00 <col:40, col:52> col:52 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb784978 <line:313:1, line:321:1>
|   |-DeclStmt 0x28deb783d90 <line:314:5, col:15>
|   | `-VarDecl 0x28deb783d28 <col:5, col:14> col:14 used i 'unsigned int'
|   `-ForStmt 0x28deb784940 <line:315:5, line:320:5>
|     |-BinaryOperator 0x28deb783e20 <line:315:10, col:14> 'unsigned int' '='
|     | |-DeclRefExpr 0x28deb783da8 <col:10> 'unsigned int' lvalue Var 0x28deb783d28 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x28deb783e08 <col:14> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x28deb783de0 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x28deb783eb8 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x28deb783e88 <col:17> 'unsigned int' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb783e40 <col:17> 'unsigned int' lvalue Var 0x28deb783d28 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x28deb783ea0 <col:21> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x28deb783e60 <col:21> 'int' 7
|     |-UnaryOperator 0x28deb783ef8 <col:24, col:26> 'unsigned int' prefix '++'
|     | `-DeclRefExpr 0x28deb783ed8 <col:26> 'unsigned int' lvalue Var 0x28deb783d28 'i' 'unsigned int'
|     `-CompoundStmt 0x28deb784910 <col:29, line:320:5>
|       |-BinaryOperator 0x28deb784128 <line:316:9, col:33> 'u8':'unsigned char' '='
|       | |-ArraySubscriptExpr 0x28deb783f80 <col:9, col:14> 'u8':'unsigned char' lvalue
|       | | |-ImplicitCastExpr 0x28deb783f50 <col:9> 'u8 *':'u8 *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x28deb783f10 <col:9> 'u8 *':'u8 *' lvalue ParmVar 0x28deb783a20 'out' 'u8 *':'u8 *'
|       | | `-ImplicitCastExpr 0x28deb783f68 <col:13> 'unsigned int' <LValueToRValue>
|       | |   `-DeclRefExpr 0x28deb783f30 <col:13> 'unsigned int' lvalue Var 0x28deb783d28 'i' 'unsigned int'
|       | `-ImplicitCastExpr 0x28deb784110 <col:18, col:33> 'u8':'unsigned char' <IntegralCast>
|       |   `-BinaryOperator 0x28deb7840f0 <col:18, col:33> 'limb':'unsigned long long' '>>'
|       |     |-ImplicitCastExpr 0x28deb7840d8 <col:18, col:22> 'limb':'unsigned long long' <LValueToRValue>
|       |     | `-ArraySubscriptExpr 0x28deb784000 <col:18, col:22> 'const limb':'const unsigned long long' lvalue
|       |     |   |-ImplicitCastExpr 0x28deb783fe8 <col:18> 'const limb *':'const limb *' <LValueToRValue>
|       |     |   | `-DeclRefExpr 0x28deb783fa0 <col:18> 'const limb *':'const limb *' lvalue ParmVar 0x28deb783b00 'in' 'const limb *':'const limb *'
|       |     |   `-IntegerLiteral 0x28deb783fc0 <col:21> 'int' 0
|       |     `-ParenExpr 0x28deb7840b8 <col:27, col:33> 'unsigned int'
|       |       `-BinaryOperator 0x28deb784098 <col:28, col:32> 'unsigned int' '*'
|       |         |-ImplicitCastExpr 0x28deb784080 <col:28> 'unsigned int' <IntegralCast>
|       |         | `-IntegerLiteral 0x28deb784020 <col:28> 'int' 8
|       |         `-ImplicitCastExpr 0x28deb784068 <col:32> 'unsigned int' <LValueToRValue>
|       |           `-DeclRefExpr 0x28deb784048 <col:32> 'unsigned int' lvalue Var 0x28deb783d28 'i' 'unsigned int'
|       |-BinaryOperator 0x28deb7843c0 <line:317:9, col:37> 'u8':'unsigned char' '='
|       | |-ArraySubscriptExpr 0x28deb784218 <col:9, col:18> 'u8':'unsigned char' lvalue
|       | | |-ImplicitCastExpr 0x28deb784200 <col:9> 'u8 *':'u8 *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x28deb784148 <col:9> 'u8 *':'u8 *' lvalue ParmVar 0x28deb783a20 'out' 'u8 *':'u8 *'
|       | | `-BinaryOperator 0x28deb7841e0 <col:13, col:17> 'unsigned int' '+'
|       | |   |-ImplicitCastExpr 0x28deb7841b0 <col:13> 'unsigned int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x28deb784168 <col:13> 'unsigned int' lvalue Var 0x28deb783d28 'i' 'unsigned int'
|       | |   `-ImplicitCastExpr 0x28deb7841c8 <col:17> 'unsigned int' <IntegralCast>
|       | |     `-IntegerLiteral 0x28deb784188 <col:17> 'int' 7
|       | `-ImplicitCastExpr 0x28deb7843a8 <col:22, col:37> 'u8':'unsigned char' <IntegralCast>
|       |   `-BinaryOperator 0x28deb784388 <col:22, col:37> 'limb':'unsigned long long' '>>'
|       |     |-ImplicitCastExpr 0x28deb784370 <col:22, col:26> 'limb':'unsigned long long' <LValueToRValue>
|       |     | `-ArraySubscriptExpr 0x28deb784298 <col:22, col:26> 'const limb':'const unsigned long long' lvalue
|       |     |   |-ImplicitCastExpr 0x28deb784280 <col:22> 'const limb *':'const limb *' <LValueToRValue>
|       |     |   | `-DeclRefExpr 0x28deb784238 <col:22> 'const limb *':'const limb *' lvalue ParmVar 0x28deb783b00 'in' 'const limb *':'const limb *'
|       |     |   `-IntegerLiteral 0x28deb784258 <col:25> 'int' 1
|       |     `-ParenExpr 0x28deb784350 <col:31, col:37> 'unsigned int'
|       |       `-BinaryOperator 0x28deb784330 <col:32, col:36> 'unsigned int' '*'
|       |         |-ImplicitCastExpr 0x28deb784318 <col:32> 'unsigned int' <IntegralCast>
|       |         | `-IntegerLiteral 0x28deb7842b8 <col:32> 'int' 8
|       |         `-ImplicitCastExpr 0x28deb784300 <col:36> 'unsigned int' <LValueToRValue>
|       |           `-DeclRefExpr 0x28deb7842e0 <col:36> 'unsigned int' lvalue Var 0x28deb783d28 'i' 'unsigned int'
|       |-BinaryOperator 0x28deb784658 <line:318:9, col:38> 'u8':'unsigned char' '='
|       | |-ArraySubscriptExpr 0x28deb7844b0 <col:9, col:19> 'u8':'unsigned char' lvalue
|       | | |-ImplicitCastExpr 0x28deb784498 <col:9> 'u8 *':'u8 *' <LValueToRValue>
|       | | | `-DeclRefExpr 0x28deb7843e0 <col:9> 'u8 *':'u8 *' lvalue ParmVar 0x28deb783a20 'out' 'u8 *':'u8 *'
|       | | `-BinaryOperator 0x28deb784478 <col:13, col:17> 'unsigned int' '+'
|       | |   |-ImplicitCastExpr 0x28deb784448 <col:13> 'unsigned int' <LValueToRValue>
|       | |   | `-DeclRefExpr 0x28deb784400 <col:13> 'unsigned int' lvalue Var 0x28deb783d28 'i' 'unsigned int'
|       | |   `-ImplicitCastExpr 0x28deb784460 <col:17> 'unsigned int' <IntegralCast>
|       | |     `-IntegerLiteral 0x28deb784420 <col:17> 'int' 14
|       | `-ImplicitCastExpr 0x28deb784640 <col:23, col:38> 'u8':'unsigned char' <IntegralCast>
|       |   `-BinaryOperator 0x28deb784620 <col:23, col:38> 'limb':'unsigned long long' '>>'
|       |     |-ImplicitCastExpr 0x28deb784608 <col:23, col:27> 'limb':'unsigned long long' <LValueToRValue>
|       |     | `-ArraySubscriptExpr 0x28deb784530 <col:23, col:27> 'const limb':'const unsigned long long' lvalue
|       |     |   |-ImplicitCastExpr 0x28deb784518 <col:23> 'const limb *':'const limb *' <LValueToRValue>
|       |     |   | `-DeclRefExpr 0x28deb7844d0 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x28deb783b00 'in' 'const limb *':'const limb *'
|       |     |   `-IntegerLiteral 0x28deb7844f0 <col:26> 'int' 2
|       |     `-ParenExpr 0x28deb7845e8 <col:32, col:38> 'unsigned int'
|       |       `-BinaryOperator 0x28deb7845c8 <col:33, col:37> 'unsigned int' '*'
|       |         |-ImplicitCastExpr 0x28deb7845b0 <col:33> 'unsigned int' <IntegralCast>
|       |         | `-IntegerLiteral 0x28deb784550 <col:33> 'int' 8
|       |         `-ImplicitCastExpr 0x28deb784598 <col:37> 'unsigned int' <LValueToRValue>
|       |           `-DeclRefExpr 0x28deb784578 <col:37> 'unsigned int' lvalue Var 0x28deb783d28 'i' 'unsigned int'
|       `-BinaryOperator 0x28deb7848f0 <line:319:9, col:38> 'u8':'unsigned char' '='
|         |-ArraySubscriptExpr 0x28deb784748 <col:9, col:19> 'u8':'unsigned char' lvalue
|         | |-ImplicitCastExpr 0x28deb784730 <col:9> 'u8 *':'u8 *' <LValueToRValue>
|         | | `-DeclRefExpr 0x28deb784678 <col:9> 'u8 *':'u8 *' lvalue ParmVar 0x28deb783a20 'out' 'u8 *':'u8 *'
|         | `-BinaryOperator 0x28deb784710 <col:13, col:17> 'unsigned int' '+'
|         |   |-ImplicitCastExpr 0x28deb7846e0 <col:13> 'unsigned int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x28deb784698 <col:13> 'unsigned int' lvalue Var 0x28deb783d28 'i' 'unsigned int'
|         |   `-ImplicitCastExpr 0x28deb7846f8 <col:17> 'unsigned int' <IntegralCast>
|         |     `-IntegerLiteral 0x28deb7846b8 <col:17> 'int' 21
|         `-ImplicitCastExpr 0x28deb7848d8 <col:23, col:38> 'u8':'unsigned char' <IntegralCast>
|           `-BinaryOperator 0x28deb7848b8 <col:23, col:38> 'limb':'unsigned long long' '>>'
|             |-ImplicitCastExpr 0x28deb7848a0 <col:23, col:27> 'limb':'unsigned long long' <LValueToRValue>
|             | `-ArraySubscriptExpr 0x28deb7847c8 <col:23, col:27> 'const limb':'const unsigned long long' lvalue
|             |   |-ImplicitCastExpr 0x28deb7847b0 <col:23> 'const limb *':'const limb *' <LValueToRValue>
|             |   | `-DeclRefExpr 0x28deb784768 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x28deb783b00 'in' 'const limb *':'const limb *'
|             |   `-IntegerLiteral 0x28deb784788 <col:26> 'int' 3
|             `-ParenExpr 0x28deb784880 <col:32, col:38> 'unsigned int'
|               `-BinaryOperator 0x28deb784860 <col:33, col:37> 'unsigned int' '*'
|                 |-ImplicitCastExpr 0x28deb784848 <col:33> 'unsigned int' <IntegralCast>
|                 | `-IntegerLiteral 0x28deb7847e8 <col:33> 'int' 8
|                 `-ImplicitCastExpr 0x28deb784830 <col:37> 'unsigned int' <LValueToRValue>
|                   `-DeclRefExpr 0x28deb784810 <col:37> 'unsigned int' lvalue Var 0x28deb783d28 'i' 'unsigned int'
|-FunctionDecl 0x28deb784c08 <line:324:1, line:329:1> line:324:13 used flip_endian 'void (u8 *, const u8 *, unsigned int)' static
| |-ParmVarDecl 0x28deb7849a8 <col:25, col:29> col:29 used out 'u8 *'
| |-ParmVarDecl 0x28deb784a20 <col:34, col:44> col:44 used in 'const u8 *'
| |-ParmVarDecl 0x28deb784aa0 <col:48, col:57> col:57 used len 'unsigned int'
| `-CompoundStmt 0x28deb785140 <line:325:1, line:329:1>
|   |-DeclStmt 0x28deb784d58 <line:326:5, col:15>
|   | `-VarDecl 0x28deb784cf0 <col:5, col:14> col:14 used i 'unsigned int'
|   `-ForStmt 0x28deb785108 <line:327:5, line:328:32>
|     |-BinaryOperator 0x28deb784de8 <line:327:10, col:14> 'unsigned int' '='
|     | |-DeclRefExpr 0x28deb784d70 <col:10> 'unsigned int' lvalue Var 0x28deb784cf0 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x28deb784dd0 <col:14> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x28deb784da8 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x28deb784ea0 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x28deb784e70 <col:17> 'unsigned int' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb784e30 <col:17> 'unsigned int' lvalue Var 0x28deb784cf0 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x28deb784e88 <col:21> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x28deb784e50 <col:21> 'unsigned int' lvalue ParmVar 0x28deb784aa0 'len' 'unsigned int'
|     |-UnaryOperator 0x28deb784ee0 <col:26, col:28> 'unsigned int' prefix '++'
|     | `-DeclRefExpr 0x28deb784ec0 <col:28> 'unsigned int' lvalue Var 0x28deb784cf0 'i' 'unsigned int'
|     `-BinaryOperator 0x28deb7850e8 <line:328:9, col:32> 'u8':'unsigned char' '='
|       |-ArraySubscriptExpr 0x28deb784f68 <col:9, col:14> 'u8':'unsigned char' lvalue
|       | |-ImplicitCastExpr 0x28deb784f38 <col:9> 'u8 *' <LValueToRValue>
|       | | `-DeclRefExpr 0x28deb784ef8 <col:9> 'u8 *' lvalue ParmVar 0x28deb7849a8 'out' 'u8 *'
|       | `-ImplicitCastExpr 0x28deb784f50 <col:13> 'unsigned int' <LValueToRValue>
|       |   `-DeclRefExpr 0x28deb784f18 <col:13> 'unsigned int' lvalue Var 0x28deb784cf0 'i' 'unsigned int'
|       `-ImplicitCastExpr 0x28deb7850d0 <col:18, col:32> 'u8':'unsigned char' <LValueToRValue>
|         `-ArraySubscriptExpr 0x28deb7850b0 <col:18, col:32> 'const u8':'const unsigned char' lvalue
|           |-ImplicitCastExpr 0x28deb785098 <col:18> 'const u8 *' <LValueToRValue>
|           | `-DeclRefExpr 0x28deb784f88 <col:18> 'const u8 *' lvalue ParmVar 0x28deb784a20 'in' 'const u8 *'
|           `-BinaryOperator 0x28deb785078 <col:21, col:31> 'unsigned int' '-'
|             |-BinaryOperator 0x28deb785020 <col:21, col:27> 'unsigned int' '-'
|             | |-ImplicitCastExpr 0x28deb784ff0 <col:21> 'unsigned int' <LValueToRValue>
|             | | `-DeclRefExpr 0x28deb784fa8 <col:21> 'unsigned int' lvalue ParmVar 0x28deb784aa0 'len' 'unsigned int'
|             | `-ImplicitCastExpr 0x28deb785008 <col:27> 'unsigned int' <IntegralCast>
|             |   `-IntegerLiteral 0x28deb784fc8 <col:27> 'int' 1
|             `-ImplicitCastExpr 0x28deb785060 <col:31> 'unsigned int' <LValueToRValue>
|               `-DeclRefExpr 0x28deb785040 <col:31> 'unsigned int' lvalue Var 0x28deb784cf0 'i' 'unsigned int'
|-FunctionDecl 0x28deb785310 <line:332:1, line:353:1> line:332:12 invalid BN_to_felem 'int (limb *, const int *)' static
| |-ParmVarDecl 0x28deb785170 <col:24, col:30> col:30 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb7851f0 <col:35, col:49> col:49 invalid bn 'const int *'
| `-CompoundStmt 0x28deb786130 <line:333:1, line:353:1>
|   |-DeclStmt 0x28deb785450 <line:334:5, col:25>
|   | `-VarDecl 0x28deb7853e8 <col:5, col:21> col:21 used b_in 'felem_bytearray':'u8 [28]'
|   |-DeclStmt 0x28deb7854e0 <line:335:5, col:26>
|   | `-VarDecl 0x28deb785478 <col:5, col:21> col:21 used b_out 'felem_bytearray':'u8 [28]'
|   |-DeclStmt 0x28deb785578 <line:336:5, col:23>
|   | `-VarDecl 0x28deb785510 <col:5, col:14> col:14 used num_bytes 'unsigned int'
|   |-CallExpr 0x28deb7856d0 <line:339:5, col:35> 'void *'
|   | |-ImplicitCastExpr 0x28deb7856b8 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb785590 <col:5> 'void *(void *, int, unsigned long long)' Function 0x28deb73e6b0 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x28deb785720 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x28deb785708 <col:12> 'u8 *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb7855b0 <col:12> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb785478 'b_out' 'felem_bytearray':'u8 [28]'
|   | |-IntegerLiteral 0x28deb7855e8 <col:19> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x28deb785650 <col:22, col:34> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x28deb785630 <col:28, col:34> 'felem_bytearray':'u8 [28]' lvalue
|   |     `-DeclRefExpr 0x28deb785610 <col:29> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb785478 'b_out' 'felem_bytearray':'u8 [28]' non_odr_use_unevaluated
|   |-IfStmt 0x28deb785ad8 <line:341:5, line:344:5>
|   | |-BinaryOperator 0x28deb785958 <line:341:9, col:33> 'int' '>'
|   | | |-ImplicitCastExpr 0x28deb785940 <col:9> 'unsigned long long' <IntegralCast>
|   | | | `-ImplicitCastExpr 0x28deb785928 <col:9> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x28deb7858a8 <col:9> 'unsigned int' lvalue Var 0x28deb785510 'num_bytes' 'unsigned int'
|   | | `-UnaryExprOrTypeTraitExpr 0x28deb785908 <col:21, col:33> 'unsigned long long' sizeof
|   | |   `-ParenExpr 0x28deb7858e8 <col:27, col:33> 'felem_bytearray':'u8 [28]' lvalue
|   | |     `-DeclRefExpr 0x28deb7858c8 <col:28> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb785478 'b_out' 'felem_bytearray':'u8 [28]' non_odr_use_unevaluated
|   | `-CompoundStmt 0x28deb785ac0 <col:36, line:344:5>
|   |   `-ReturnStmt 0x28deb785ab0 <line:343:9, col:16>
|   |     `-IntegerLiteral 0x28deb785a88 <col:16> 'int' 0
|   |-IfStmt 0x28deb785c88 <line:345:5, line:348:5>
|   | |-OpaqueValueExpr 0x28deb785c70 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x28deb785c58 <line:345:29, line:348:5>
|   |   `-ReturnStmt 0x28deb785c48 <line:347:9, col:16>
|   |     `-IntegerLiteral 0x28deb785c20 <col:16> 'int' 0
|   |-CallExpr 0x28deb785f00 <line:350:5, col:39> 'void'
|   | |-ImplicitCastExpr 0x28deb785ee8 <col:5> 'void (*)(u8 *, const u8 *, unsigned int)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb785e08 <col:5> 'void (u8 *, const u8 *, unsigned int)' Function 0x28deb784c08 'flip_endian' 'void (u8 *, const u8 *, unsigned int)'
|   | |-ImplicitCastExpr 0x28deb785f38 <col:17> 'u8 *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb785e28 <col:17> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb785478 'b_out' 'felem_bytearray':'u8 [28]'
|   | |-ImplicitCastExpr 0x28deb785f68 <col:24> 'const u8 *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb785f50 <col:24> 'u8 *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb785e48 <col:24> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb7853e8 'b_in' 'felem_bytearray':'u8 [28]'
|   | `-ImplicitCastExpr 0x28deb785f80 <col:30> 'unsigned int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb785e68 <col:30> 'unsigned int' lvalue Var 0x28deb785510 'num_bytes' 'unsigned int'
|   |-CallExpr 0x28deb786080 <line:351:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x28deb786068 <col:5> 'void (*)(limb *, const u8 *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb785f98 <col:5> 'void (limb *, const u8 *)' Function 0x28deb782ee8 'bin28_to_felem' 'void (limb *, const u8 *)'
|   | |-ImplicitCastExpr 0x28deb7860b0 <col:20> 'limb *':'limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb785fb8 <col:20> 'limb *':'limb *' lvalue ParmVar 0x28deb785170 'out' 'limb *':'limb *'
|   | `-ImplicitCastExpr 0x28deb7860e0 <col:25> 'const u8 *':'const u8 *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb7860c8 <col:25> 'u8 *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb785ff0 <col:25> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb785478 'b_out' 'felem_bytearray':'u8 [28]'
|   `-ReturnStmt 0x28deb786120 <line:352:5, col:12>
|     `-IntegerLiteral 0x28deb7860f8 <col:12> 'int' 1
|-FunctionDecl 0x28deb786330 <line:356:1, line:362:1> line:356:16 invalid felem_to_BN 'int *(int *, const limb *)' static
| |-ParmVarDecl 0x28deb7861a0 <col:28, col:36> col:36 invalid out 'int *'
| |-ParmVarDecl 0x28deb786218 <col:41, col:53> col:53 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb7869c8 <line:357:1, line:362:1>
|   |-DeclStmt 0x28deb786500 <line:358:5, col:32>
|   | |-VarDecl 0x28deb786408 <col:5, col:21> col:21 used b_in 'felem_bytearray':'u8 [28]'
|   | `-VarDecl 0x28deb786480 <col:5, col:27> col:27 used b_out 'felem_bytearray':'u8 [28]'
|   |-CallExpr 0x28deb786620 <line:359:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb786608 <col:5> 'void (*)(u8 *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb786518 <col:5> 'void (u8 *, const limb *)' Function 0x28deb783c48 'felem_to_bin28' 'void (u8 *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb786650 <col:20> 'u8 *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb786538 <col:20> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb786408 'b_in' 'felem_bytearray':'u8 [28]'
|   | `-ImplicitCastExpr 0x28deb786668 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb786570 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb786218 'in' 'const limb *':'const limb *'
|   `-CallExpr 0x28deb786770 <line:360:5, col:43> 'void'
|     |-ImplicitCastExpr 0x28deb786758 <col:5> 'void (*)(u8 *, const u8 *, unsigned int)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x28deb786680 <col:5> 'void (u8 *, const u8 *, unsigned int)' Function 0x28deb784c08 'flip_endian' 'void (u8 *, const u8 *, unsigned int)'
|     |-ImplicitCastExpr 0x28deb7867a8 <col:17> 'u8 *' <ArrayToPointerDecay>
|     | `-DeclRefExpr 0x28deb7866a0 <col:17> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb786480 'b_out' 'felem_bytearray':'u8 [28]'
|     |-ImplicitCastExpr 0x28deb7867d8 <col:24> 'const u8 *' <NoOp>
|     | `-ImplicitCastExpr 0x28deb7867c0 <col:24> 'u8 *' <ArrayToPointerDecay>
|     |   `-DeclRefExpr 0x28deb7866d8 <col:24> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb786408 'b_in' 'felem_bytearray':'u8 [28]'
|     `-ImplicitCastExpr 0x28deb7867f0 <col:30, col:42> 'unsigned int' <IntegralCast>
|       `-UnaryExprOrTypeTraitExpr 0x28deb786738 <col:30, col:42> 'unsigned long long' sizeof
|         `-ParenExpr 0x28deb786718 <col:36, col:42> 'felem_bytearray':'u8 [28]' lvalue
|           `-DeclRefExpr 0x28deb7866f8 <col:37> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb786480 'b_out' 'felem_bytearray':'u8 [28]' non_odr_use_unevaluated
|-FunctionDecl 0x28deb786b08 <line:375:1, line:381:1> line:375:13 used felem_one 'void (limb *)' static
| |-ParmVarDecl 0x28deb786a00 <col:23, col:29> col:29 used out 'limb *':'limb *'
| |-CompoundStmt 0x28deb786f58 <line:376:1, line:381:1>
| | |-BinaryOperator 0x28deb786c88 <line:377:5, col:14> 'limb':'unsigned long long' '='
| | | |-ArraySubscriptExpr 0x28deb786c28 <col:5, col:10> 'limb':'unsigned long long' lvalue
| | | | |-ImplicitCastExpr 0x28deb786c10 <col:5> 'limb *':'limb *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x28deb786bc8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb786a00 'out' 'limb *':'limb *'
| | | | `-IntegerLiteral 0x28deb786be8 <col:9> 'int' 0
| | | `-ImplicitCastExpr 0x28deb786c70 <col:14> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x28deb786c48 <col:14> 'int' 1
| | |-BinaryOperator 0x28deb786d68 <line:378:5, col:14> 'limb':'unsigned long long' '='
| | | |-ArraySubscriptExpr 0x28deb786d08 <col:5, col:10> 'limb':'unsigned long long' lvalue
| | | | |-ImplicitCastExpr 0x28deb786cf0 <col:5> 'limb *':'limb *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x28deb786ca8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb786a00 'out' 'limb *':'limb *'
| | | | `-IntegerLiteral 0x28deb786cc8 <col:9> 'int' 1
| | | `-ImplicitCastExpr 0x28deb786d50 <col:14> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x28deb786d28 <col:14> 'int' 0
| | |-BinaryOperator 0x28deb786e58 <line:379:5, col:14> 'limb':'unsigned long long' '='
| | | |-ArraySubscriptExpr 0x28deb786de8 <col:5, col:10> 'limb':'unsigned long long' lvalue
| | | | |-ImplicitCastExpr 0x28deb786dd0 <col:5> 'limb *':'limb *' <LValueToRValue>
| | | | | `-DeclRefExpr 0x28deb786d88 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb786a00 'out' 'limb *':'limb *'
| | | | `-IntegerLiteral 0x28deb786da8 <col:9> 'int' 2
| | | `-ImplicitCastExpr 0x28deb786e40 <col:14> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x28deb786e08 <col:14> 'int' 0
| | `-BinaryOperator 0x28deb786f38 <line:380:5, col:14> 'limb':'unsigned long long' '='
| |   |-ArraySubscriptExpr 0x28deb786ed8 <col:5, col:10> 'limb':'unsigned long long' lvalue
| |   | |-ImplicitCastExpr 0x28deb786ec0 <col:5> 'limb *':'limb *' <LValueToRValue>
| |   | | `-DeclRefExpr 0x28deb786e78 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb786a00 'out' 'limb *':'limb *'
| |   | `-IntegerLiteral 0x28deb786e98 <col:9> 'int' 3
| |   `-ImplicitCastExpr 0x28deb786f20 <col:14> 'limb':'unsigned long long' <IntegralCast>
| |     `-IntegerLiteral 0x28deb786ef8 <col:14> 'int' 0
| `-FullComment 0x28deb9b5030 <line:364:4, col:78>
|   `-ParagraphComment 0x28deb9b5008 <col:4, col:78>
|     `-TextComment 0x28deb9b4fe0 <col:4, col:78> Text="***************************************************************************"
|-FunctionDecl 0x28deb787158 <line:383:1, line:389:1> line:383:13 used felem_assign 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x28deb786f98 <col:26, col:32> col:32 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb787010 <col:37, col:49> col:49 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb787700 <line:384:1, line:389:1>
|   |-BinaryOperator 0x28deb787338 <line:385:5, col:18> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb787280 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb787268 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb787220 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb786f98 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb787240 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb787320 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb787300 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb7872e8 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb7872a0 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x28deb787010 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb7872c0 <col:17> 'int' 0
|   |-BinaryOperator 0x28deb787470 <line:386:5, col:18> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb7873b8 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb7873a0 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb787358 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb786f98 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb787378 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb787458 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb787438 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb787420 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb7873d8 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x28deb787010 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb7873f8 <col:17> 'int' 1
|   |-BinaryOperator 0x28deb7875a8 <line:387:5, col:18> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb7874f0 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb7874d8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb787490 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb786f98 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb7874b0 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb787590 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb787570 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb787558 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb787510 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x28deb787010 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb787530 <col:17> 'int' 2
|   `-BinaryOperator 0x28deb7876e0 <line:388:5, col:18> 'limb':'unsigned long long' '='
|     |-ArraySubscriptExpr 0x28deb787628 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x28deb787610 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb7875c8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb786f98 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x28deb7875e8 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x28deb7876c8 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|       `-ArraySubscriptExpr 0x28deb7876a8 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|         |-ImplicitCastExpr 0x28deb787690 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|         | `-DeclRefExpr 0x28deb787648 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x28deb787010 'in' 'const limb *':'const limb *'
|         `-IntegerLiteral 0x28deb787668 <col:17> 'int' 3
|-FunctionDecl 0x28deb787880 <line:392:1, line:398:1> line:392:13 used felem_sum 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x28deb787740 <col:23, col:29> col:29 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb7877b8 <col:34, col:46> col:46 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb787e68 <line:393:1, line:398:1>
|   |-CompoundAssignOperator 0x28deb787a60 <line:394:5, col:19> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb7879a8 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb787990 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb787948 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb787740 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb787968 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb787a48 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb787a28 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb787a10 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb7879c8 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb7877b8 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb7879e8 <col:18> 'int' 0
|   |-CompoundAssignOperator 0x28deb787ba8 <line:395:5, col:19> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb787af0 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb787ad8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb787a90 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb787740 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb787ab0 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb787b90 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb787b70 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb787b58 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb787b10 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb7877b8 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb787b30 <col:18> 'int' 1
|   |-CompoundAssignOperator 0x28deb787cf0 <line:396:5, col:19> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb787c38 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb787c20 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb787bd8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb787740 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb787bf8 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb787cd8 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb787cb8 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb787ca0 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb787c58 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb7877b8 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb787c78 <col:18> 'int' 2
|   `-CompoundAssignOperator 0x28deb787e38 <line:397:5, col:19> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     |-ArraySubscriptExpr 0x28deb787d80 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x28deb787d68 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb787d20 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb787740 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x28deb787d40 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x28deb787e20 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|       `-ArraySubscriptExpr 0x28deb787e00 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|         |-ImplicitCastExpr 0x28deb787de8 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|         | `-DeclRefExpr 0x28deb787da0 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb7877b8 'in' 'const limb *':'const limb *'
|         `-IntegerLiteral 0x28deb787dc0 <col:18> 'int' 3
|-FunctionDecl 0x28deb787fe8 <line:402:1, line:414:1> line:402:13 used felem_neg 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x28deb787ea8 <col:23, col:29> col:29 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb787f20 <col:34, col:46> col:46 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb7890b8 <line:403:1, line:414:1>
|   |-DeclStmt 0x28deb788318 <line:404:5, col:71>
|   | `-VarDecl 0x28deb7880c0 <col:5, col:70> col:23 used two58p2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x28deb7882f8 <col:33, col:70> 'unsigned long long' '+'
|   |     |-ParenExpr 0x28deb7881f0 <col:33, col:50> 'limb':'unsigned long long'
|   |     | `-BinaryOperator 0x28deb7881d0 <col:34, col:48> 'limb':'unsigned long long' '<<'
|   |     |   |-ParenExpr 0x28deb788188 <col:34, col:43> 'limb':'unsigned long long'
|   |     |   | `-CStyleCastExpr 0x28deb788160 <col:35, col:42> 'limb':'unsigned long long' <IntegralCast>
|   |     |   |   `-IntegerLiteral 0x28deb788128 <col:42> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb7881a8 <col:48> 'int' 58
|   |     `-ParenExpr 0x28deb7882d8 <col:54, col:70> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x28deb7882b8 <col:55, col:69> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x28deb788270 <col:55, col:64> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x28deb788248 <col:56, col:63> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x28deb788210 <col:63> 'int' 1
|   |         `-IntegerLiteral 0x28deb788290 <col:69> 'int' 2
|   |-DeclStmt 0x28deb788598 <line:405:5, col:71>
|   | `-VarDecl 0x28deb788340 <col:5, col:70> col:23 used two58m2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x28deb788578 <col:33, col:70> 'unsigned long long' '-'
|   |     |-ParenExpr 0x28deb788470 <col:33, col:50> 'limb':'unsigned long long'
|   |     | `-BinaryOperator 0x28deb788450 <col:34, col:48> 'limb':'unsigned long long' '<<'
|   |     |   |-ParenExpr 0x28deb788408 <col:34, col:43> 'limb':'unsigned long long'
|   |     |   | `-CStyleCastExpr 0x28deb7883e0 <col:35, col:42> 'limb':'unsigned long long' <IntegralCast>
|   |     |   |   `-IntegerLiteral 0x28deb7883a8 <col:42> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb788428 <col:48> 'int' 58
|   |     `-ParenExpr 0x28deb788558 <col:54, col:70> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x28deb788538 <col:55, col:69> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x28deb7884f0 <col:55, col:64> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x28deb7884c8 <col:56, col:63> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x28deb788490 <col:63> 'int' 1
|   |         `-IntegerLiteral 0x28deb788510 <col:69> 'int' 2
|   |-DeclStmt 0x28deb788920 <line:406:5, line:407:47>
|   | `-VarDecl 0x28deb7885c0 <line:406:5, line:407:46> line:406:23 used two58m42m2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x28deb788900 <col:36, line:407:46> 'unsigned long long' '-'
|   |     |-BinaryOperator 0x28deb7887f8 <line:406:36, line:407:26> 'unsigned long long' '-'
|   |     | |-ParenExpr 0x28deb7886f0 <line:406:36, col:53> 'limb':'unsigned long long'
|   |     | | `-BinaryOperator 0x28deb7886d0 <col:37, col:51> 'limb':'unsigned long long' '<<'
|   |     | |   |-ParenExpr 0x28deb788688 <col:37, col:46> 'limb':'unsigned long long'
|   |     | |   | `-CStyleCastExpr 0x28deb788660 <col:38, col:45> 'limb':'unsigned long long' <IntegralCast>
|   |     | |   |   `-IntegerLiteral 0x28deb788628 <col:45> 'int' 1
|   |     | |   `-IntegerLiteral 0x28deb7886a8 <col:51> 'int' 58
|   |     | `-ParenExpr 0x28deb7887d8 <line:407:9, col:26> 'limb':'unsigned long long'
|   |     |   `-BinaryOperator 0x28deb7887b8 <col:10, col:24> 'limb':'unsigned long long' '<<'
|   |     |     |-ParenExpr 0x28deb788770 <col:10, col:19> 'limb':'unsigned long long'
|   |     |     | `-CStyleCastExpr 0x28deb788748 <col:11, col:18> 'limb':'unsigned long long' <IntegralCast>
|   |     |     |   `-IntegerLiteral 0x28deb788710 <col:18> 'int' 1
|   |     |     `-IntegerLiteral 0x28deb788790 <col:24> 'int' 42
|   |     `-ParenExpr 0x28deb7888e0 <col:30, col:46> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x28deb7888c0 <col:31, col:45> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x28deb788878 <col:31, col:40> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x28deb788850 <col:32, col:39> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x28deb788818 <col:39> 'int' 1
|   |         `-IntegerLiteral 0x28deb788898 <col:45> 'int' 2
|   |-BinaryOperator 0x28deb788ac0 <line:410:5, col:28> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb788998 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb788980 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb788938 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb787ea8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb788958 <col:9> 'int' 0
|   | `-BinaryOperator 0x28deb788aa0 <col:14, col:28> 'unsigned long long' '-'
|   |   |-ImplicitCastExpr 0x28deb788a70 <col:14> 'limb':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28deb7889b8 <col:14> 'const limb':'const unsigned long long' lvalue Var 0x28deb7880c0 'two58p2' 'const limb':'const unsigned long long'
|   |   `-ImplicitCastExpr 0x28deb788a88 <col:24, col:28> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb788a50 <col:24, col:28> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb788a38 <col:24> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x28deb7889f0 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x28deb787f20 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x28deb788a10 <col:27> 'int' 0
|   |-BinaryOperator 0x28deb788cb0 <line:411:5, col:31> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb788b88 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb788b70 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb788b28 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb787ea8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb788b48 <col:9> 'int' 1
|   | `-BinaryOperator 0x28deb788c90 <col:14, col:31> 'unsigned long long' '-'
|   |   |-ImplicitCastExpr 0x28deb788c60 <col:14> 'limb':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28deb788ba8 <col:14> 'const limb':'const unsigned long long' lvalue Var 0x28deb7885c0 'two58m42m2' 'const limb':'const unsigned long long'
|   |   `-ImplicitCastExpr 0x28deb788c78 <col:27, col:31> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb788c40 <col:27, col:31> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb788c28 <col:27> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x28deb788be0 <col:27> 'const limb *':'const limb *' lvalue ParmVar 0x28deb787f20 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x28deb788c00 <col:30> 'int' 1
|   |-BinaryOperator 0x28deb788ec0 <line:412:5, col:28> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb788d78 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb788d60 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb788d18 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb787ea8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb788d38 <col:9> 'int' 2
|   | `-BinaryOperator 0x28deb788ea0 <col:14, col:28> 'unsigned long long' '-'
|   |   |-ImplicitCastExpr 0x28deb788e70 <col:14> 'limb':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28deb788d98 <col:14> 'const limb':'const unsigned long long' lvalue Var 0x28deb788340 'two58m2' 'const limb':'const unsigned long long'
|   |   `-ImplicitCastExpr 0x28deb788e88 <col:24, col:28> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb788e50 <col:24, col:28> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb788e18 <col:24> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x28deb788dd0 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x28deb787f20 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x28deb788df0 <col:27> 'int' 2
|   `-BinaryOperator 0x28deb789098 <line:413:5, col:28> 'limb':'unsigned long long' '='
|     |-ArraySubscriptExpr 0x28deb788f88 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x28deb788f70 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb788f28 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb787ea8 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x28deb788f48 <col:9> 'int' 3
|     `-BinaryOperator 0x28deb789078 <col:14, col:28> 'unsigned long long' '-'
|       |-ImplicitCastExpr 0x28deb789048 <col:14> 'limb':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x28deb788fa8 <col:14> 'const limb':'const unsigned long long' lvalue Var 0x28deb788340 'two58m2' 'const limb':'const unsigned long long'
|       `-ImplicitCastExpr 0x28deb789060 <col:24, col:28> 'limb':'unsigned long long' <LValueToRValue>
|         `-ArraySubscriptExpr 0x28deb789028 <col:24, col:28> 'const limb':'const unsigned long long' lvalue
|           |-ImplicitCastExpr 0x28deb789010 <col:24> 'const limb *':'const limb *' <LValueToRValue>
|           | `-DeclRefExpr 0x28deb788fc8 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x28deb787f20 'in' 'const limb *':'const limb *'
|           `-IntegerLiteral 0x28deb788fe8 <col:27> 'int' 3
|-FunctionDecl 0x28deb789250 <line:418:1, line:435:1> line:418:13 used felem_diff 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x28deb789110 <col:24, col:30> col:30 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb789188 <col:35, col:47> col:47 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb78a580 <line:419:1, line:435:1>
|   |-DeclStmt 0x28deb789580 <line:420:5, col:71>
|   | `-VarDecl 0x28deb789328 <col:5, col:70> col:23 used two58p2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x28deb789560 <col:33, col:70> 'unsigned long long' '+'
|   |     |-ParenExpr 0x28deb789458 <col:33, col:50> 'limb':'unsigned long long'
|   |     | `-BinaryOperator 0x28deb789438 <col:34, col:48> 'limb':'unsigned long long' '<<'
|   |     |   |-ParenExpr 0x28deb7893f0 <col:34, col:43> 'limb':'unsigned long long'
|   |     |   | `-CStyleCastExpr 0x28deb7893c8 <col:35, col:42> 'limb':'unsigned long long' <IntegralCast>
|   |     |   |   `-IntegerLiteral 0x28deb789390 <col:42> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb789410 <col:48> 'int' 58
|   |     `-ParenExpr 0x28deb789540 <col:54, col:70> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x28deb789520 <col:55, col:69> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x28deb7894d8 <col:55, col:64> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x28deb7894b0 <col:56, col:63> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x28deb789478 <col:63> 'int' 1
|   |         `-IntegerLiteral 0x28deb7894f8 <col:69> 'int' 2
|   |-DeclStmt 0x28deb789800 <line:421:5, col:71>
|   | `-VarDecl 0x28deb7895a8 <col:5, col:70> col:23 used two58m2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x28deb7897e0 <col:33, col:70> 'unsigned long long' '-'
|   |     |-ParenExpr 0x28deb7896d8 <col:33, col:50> 'limb':'unsigned long long'
|   |     | `-BinaryOperator 0x28deb7896b8 <col:34, col:48> 'limb':'unsigned long long' '<<'
|   |     |   |-ParenExpr 0x28deb789670 <col:34, col:43> 'limb':'unsigned long long'
|   |     |   | `-CStyleCastExpr 0x28deb789648 <col:35, col:42> 'limb':'unsigned long long' <IntegralCast>
|   |     |   |   `-IntegerLiteral 0x28deb789610 <col:42> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb789690 <col:48> 'int' 58
|   |     `-ParenExpr 0x28deb7897c0 <col:54, col:70> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x28deb7897a0 <col:55, col:69> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x28deb789758 <col:55, col:64> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x28deb789730 <col:56, col:63> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x28deb7896f8 <col:63> 'int' 1
|   |         `-IntegerLiteral 0x28deb789778 <col:69> 'int' 2
|   |-DeclStmt 0x28deb789b88 <line:422:5, line:423:47>
|   | `-VarDecl 0x28deb789828 <line:422:5, line:423:46> line:422:23 used two58m42m2 'const limb':'const unsigned long long' static cinit
|   |   `-BinaryOperator 0x28deb789b68 <col:36, line:423:46> 'unsigned long long' '-'
|   |     |-BinaryOperator 0x28deb789a60 <line:422:36, line:423:26> 'unsigned long long' '-'
|   |     | |-ParenExpr 0x28deb789958 <line:422:36, col:53> 'limb':'unsigned long long'
|   |     | | `-BinaryOperator 0x28deb789938 <col:37, col:51> 'limb':'unsigned long long' '<<'
|   |     | |   |-ParenExpr 0x28deb7898f0 <col:37, col:46> 'limb':'unsigned long long'
|   |     | |   | `-CStyleCastExpr 0x28deb7898c8 <col:38, col:45> 'limb':'unsigned long long' <IntegralCast>
|   |     | |   |   `-IntegerLiteral 0x28deb789890 <col:45> 'int' 1
|   |     | |   `-IntegerLiteral 0x28deb789910 <col:51> 'int' 58
|   |     | `-ParenExpr 0x28deb789a40 <line:423:9, col:26> 'limb':'unsigned long long'
|   |     |   `-BinaryOperator 0x28deb789a20 <col:10, col:24> 'limb':'unsigned long long' '<<'
|   |     |     |-ParenExpr 0x28deb7899d8 <col:10, col:19> 'limb':'unsigned long long'
|   |     |     | `-CStyleCastExpr 0x28deb7899b0 <col:11, col:18> 'limb':'unsigned long long' <IntegralCast>
|   |     |     |   `-IntegerLiteral 0x28deb789978 <col:18> 'int' 1
|   |     |     `-IntegerLiteral 0x28deb7899f8 <col:24> 'int' 42
|   |     `-ParenExpr 0x28deb789b48 <col:30, col:46> 'limb':'unsigned long long'
|   |       `-BinaryOperator 0x28deb789b28 <col:31, col:45> 'limb':'unsigned long long' '<<'
|   |         |-ParenExpr 0x28deb789ae0 <col:31, col:40> 'limb':'unsigned long long'
|   |         | `-CStyleCastExpr 0x28deb789ab8 <col:32, col:39> 'limb':'unsigned long long' <IntegralCast>
|   |         |   `-IntegerLiteral 0x28deb789a80 <col:39> 'int' 1
|   |         `-IntegerLiteral 0x28deb789b00 <col:45> 'int' 2
|   |-CompoundAssignOperator 0x28deb789c70 <line:426:5, col:15> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb789c00 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb789be8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb789ba0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb789110 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb789bc0 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb789c58 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb789c20 <col:15> 'const limb':'const unsigned long long' lvalue Var 0x28deb789328 'two58p2' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x28deb789db8 <line:427:5, col:15> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb789d48 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb789d30 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb789ce8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb789110 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb789d08 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb789da0 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb789d68 <col:15> 'const limb':'const unsigned long long' lvalue Var 0x28deb789828 'two58m42m2' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x28deb789f00 <line:428:5, col:15> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb789e90 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb789e78 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb789e30 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb789110 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb789e50 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb789ee8 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb789eb0 <col:15> 'const limb':'const unsigned long long' lvalue Var 0x28deb7895a8 'two58m2' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x28deb78a030 <line:429:5, col:15> 'limb':'unsigned long long' '+=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb789fd8 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb789fc0 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb789f78 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb789110 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb789f98 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x28deb78a018 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb789ff8 <col:15> 'const limb':'const unsigned long long' lvalue Var 0x28deb7895a8 'two58m2' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x28deb78a178 <line:431:5, col:19> 'limb':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb78a0c0 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb78a0a8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78a060 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb789110 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb78a080 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb78a160 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78a140 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb78a128 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78a0e0 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb789188 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb78a100 <col:18> 'int' 0
|   |-CompoundAssignOperator 0x28deb78a2c0 <line:432:5, col:19> 'limb':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb78a208 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb78a1f0 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78a1a8 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb789110 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb78a1c8 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb78a2a8 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78a288 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb78a270 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78a228 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb789188 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb78a248 <col:18> 'int' 1
|   |-CompoundAssignOperator 0x28deb78a408 <line:433:5, col:19> 'limb':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb78a350 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb78a338 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78a2f0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb789110 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb78a310 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb78a3f0 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78a3d0 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb78a3b8 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78a370 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb789188 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb78a390 <col:18> 'int' 2
|   `-CompoundAssignOperator 0x28deb78a550 <line:434:5, col:19> 'limb':'unsigned long long' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     |-ArraySubscriptExpr 0x28deb78a498 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x28deb78a480 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb78a438 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb789110 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x28deb78a458 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x28deb78a538 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|       `-ArraySubscriptExpr 0x28deb78a518 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|         |-ImplicitCastExpr 0x28deb78a500 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|         | `-DeclRefExpr 0x28deb78a4b8 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb789188 'in' 'const limb *':'const limb *'
|         `-IntegerLiteral 0x28deb78a4d8 <col:18> 'int' 3
|-FunctionDecl 0x28deb78a8e8 <line:439:1, line:463:1> line:439:13 used widefelem_diff 'void (widelimb *, const widelimb *)' static
| |-ParmVarDecl 0x28deb78a680 <col:28, col:38> col:38 used out 'widelimb *':'widelimb *'
| |-ParmVarDecl 0x28deb78a7a0 <col:43, col:59> col:59 used in 'const widelimb *':'const widelimb *'
| `-CompoundStmt 0x28deb78c1a8 <line:440:1, line:463:1>
|   |-DeclStmt 0x28deb78aaf0 <line:441:5, col:57>
|   | `-VarDecl 0x28deb78a9c0 <col:5, col:54> col:27 used two120 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x28deb78aad0 <col:36, col:54> 'widelimb':'int' '<<'
|   |     |-ParenExpr 0x28deb78aa88 <col:36, col:49> 'widelimb':'int'
|   |     | `-CStyleCastExpr 0x28deb78aa60 <col:37, col:48> 'widelimb':'int' <NoOp>
|   |     |   `-IntegerLiteral 0x28deb78aa28 <col:48> 'int' 1
|   |     `-IntegerLiteral 0x28deb78aaa8 <col:54> 'int' 120
|   |-DeclStmt 0x28deb78ad70 <line:442:5, line:443:31>
|   | `-VarDecl 0x28deb78ab18 <line:442:5, line:443:30> line:442:27 used two120m64 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x28deb78ad50 <col:39, line:443:30> 'int' '-'
|   |     |-ParenExpr 0x28deb78ac48 <line:442:39, col:61> 'widelimb':'int'
|   |     | `-BinaryOperator 0x28deb78ac28 <col:40, col:58> 'widelimb':'int' '<<'
|   |     |   |-ParenExpr 0x28deb78abe0 <col:40, col:53> 'widelimb':'int'
|   |     |   | `-CStyleCastExpr 0x28deb78abb8 <col:41, col:52> 'widelimb':'int' <NoOp>
|   |     |   |   `-IntegerLiteral 0x28deb78ab80 <col:52> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb78ac00 <col:58> 'int' 120
|   |     `-ParenExpr 0x28deb78ad30 <line:443:9, col:30> 'widelimb':'int'
|   |       `-BinaryOperator 0x28deb78ad10 <col:10, col:28> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x28deb78acc8 <col:10, col:23> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x28deb78aca0 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x28deb78ac68 <col:22> 'int' 1
|   |         `-IntegerLiteral 0x28deb78ace8 <col:28> 'int' 64
|   |-DeclStmt 0x28deb78b120 <line:444:5, line:445:57>
|   | `-VarDecl 0x28deb78ad98 <line:444:5, line:445:56> line:444:27 used two120m104m64 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x28deb78b100 <col:43, line:445:56> 'int' '-'
|   |     |-BinaryOperator 0x28deb78aff8 <line:444:43, line:445:31> 'int' '-'
|   |     | |-ParenExpr 0x28deb78aef0 <line:444:43, col:65> 'widelimb':'int'
|   |     | | `-BinaryOperator 0x28deb78aed0 <col:44, col:62> 'widelimb':'int' '<<'
|   |     | |   |-ParenExpr 0x28deb78ae88 <col:44, col:57> 'widelimb':'int'
|   |     | |   | `-CStyleCastExpr 0x28deb78ae60 <col:45, col:56> 'widelimb':'int' <NoOp>
|   |     | |   |   `-IntegerLiteral 0x28deb78ae00 <col:56> 'int' 1
|   |     | |   `-IntegerLiteral 0x28deb78aea8 <col:62> 'int' 120
|   |     | `-ParenExpr 0x28deb78afd8 <line:445:9, col:31> 'widelimb':'int'
|   |     |   `-BinaryOperator 0x28deb78afb8 <col:10, col:28> 'widelimb':'int' '<<'
|   |     |     |-ParenExpr 0x28deb78af70 <col:10, col:23> 'widelimb':'int'
|   |     |     | `-CStyleCastExpr 0x28deb78af48 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |     |     |   `-IntegerLiteral 0x28deb78af10 <col:22> 'int' 1
|   |     |     `-IntegerLiteral 0x28deb78af90 <col:28> 'int' 104
|   |     `-ParenExpr 0x28deb78b0e0 <col:35, col:56> 'widelimb':'int'
|   |       `-BinaryOperator 0x28deb78b0c0 <col:36, col:54> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x28deb78b078 <col:36, col:49> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x28deb78b050 <col:37, col:48> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x28deb78b018 <col:48> 'int' 1
|   |         `-IntegerLiteral 0x28deb78b098 <col:54> 'int' 64
|   |-CompoundAssignOperator 0x28deb78b208 <line:448:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78b198 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78b180 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78b138 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78b158 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb78b1f0 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78b1b8 <col:15> 'const widelimb':'const int' lvalue Var 0x28deb78a9c0 'two120' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78b350 <line:449:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78b2e0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78b2c8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78b280 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78b2a0 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb78b338 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78b300 <col:15> 'const widelimb':'const int' lvalue Var 0x28deb78ab18 'two120m64' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78b480 <line:450:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78b428 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78b410 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78b3c8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78b3e8 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb78b468 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78b448 <col:15> 'const widelimb':'const int' lvalue Var 0x28deb78ab18 'two120m64' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78b568 <line:451:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78b510 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78b4f8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78b4b0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78b4d0 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x28deb78b550 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78b530 <col:15> 'const widelimb':'const int' lvalue Var 0x28deb78a9c0 'two120' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78b668 <line:452:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78b5f8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78b5e0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78b598 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78b5b8 <col:9> 'int' 4
|   | `-ImplicitCastExpr 0x28deb78b650 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78b618 <col:15> 'const widelimb':'const int' lvalue Var 0x28deb78ad98 'two120m104m64' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78b798 <line:453:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78b740 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78b728 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78b6e0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78b700 <col:9> 'int' 5
|   | `-ImplicitCastExpr 0x28deb78b780 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78b760 <col:15> 'const widelimb':'const int' lvalue Var 0x28deb78ab18 'two120m64' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78b880 <line:454:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78b828 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78b810 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78b7c8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78b7e8 <col:9> 'int' 6
|   | `-ImplicitCastExpr 0x28deb78b868 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78b848 <col:15> 'const widelimb':'const int' lvalue Var 0x28deb78ab18 'two120m64' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78b9c8 <line:456:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78b910 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78b8f8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78b8b0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78b8d0 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb78b9b0 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78b990 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x28deb78b978 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78b930 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb78a7a0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x28deb78b950 <col:18> 'int' 0
|   |-CompoundAssignOperator 0x28deb78bb10 <line:457:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78ba58 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78ba40 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78b9f8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78ba18 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb78baf8 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78bad8 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x28deb78bac0 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78ba78 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb78a7a0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x28deb78ba98 <col:18> 'int' 1
|   |-CompoundAssignOperator 0x28deb78bc58 <line:458:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78bba0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78bb88 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78bb40 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78bb60 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb78bc40 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78bc20 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x28deb78bc08 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78bbc0 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb78a7a0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x28deb78bbe0 <col:18> 'int' 2
|   |-CompoundAssignOperator 0x28deb78bda0 <line:459:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78bce8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78bcd0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78bc88 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78bca8 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x28deb78bd88 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78bd68 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x28deb78bd50 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78bd08 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb78a7a0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x28deb78bd28 <col:18> 'int' 3
|   |-CompoundAssignOperator 0x28deb78bee8 <line:460:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78be30 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78be18 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78bdd0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78bdf0 <col:9> 'int' 4
|   | `-ImplicitCastExpr 0x28deb78bed0 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78beb0 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x28deb78be98 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78be50 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb78a7a0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x28deb78be70 <col:18> 'int' 4
|   |-CompoundAssignOperator 0x28deb78c030 <line:461:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78bf78 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78bf60 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78bf18 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78bf38 <col:9> 'int' 5
|   | `-ImplicitCastExpr 0x28deb78c018 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78bff8 <col:15, col:19> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x28deb78bfe0 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78bf98 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb78a7a0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x28deb78bfb8 <col:18> 'int' 5
|   `-CompoundAssignOperator 0x28deb78c178 <line:462:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|     |-ArraySubscriptExpr 0x28deb78c0c0 <col:5, col:10> 'widelimb':'int' lvalue
|     | |-ImplicitCastExpr 0x28deb78c0a8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb78c060 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78a680 'out' 'widelimb *':'widelimb *'
|     | `-IntegerLiteral 0x28deb78c080 <col:9> 'int' 6
|     `-ImplicitCastExpr 0x28deb78c160 <col:15, col:19> 'widelimb':'int' <LValueToRValue>
|       `-ArraySubscriptExpr 0x28deb78c140 <col:15, col:19> 'const widelimb':'const int' lvalue
|         |-ImplicitCastExpr 0x28deb78c128 <col:15> 'const widelimb *':'const widelimb *' <LValueToRValue>
|         | `-DeclRefExpr 0x28deb78c0e0 <col:15> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb78a7a0 'in' 'const widelimb *':'const widelimb *'
|         `-IntegerLiteral 0x28deb78c100 <col:18> 'int' 6
|-FunctionDecl 0x28deb78c408 <line:467:1, line:486:1> line:467:13 used felem_diff_128_64 'void (widelimb *, const limb *)' static
| |-ParmVarDecl 0x28deb78c250 <col:31, col:41> col:41 used out 'widelimb *':'widelimb *'
| |-ParmVarDecl 0x28deb78c2c8 <col:46, col:58> col:58 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb78d750 <line:468:1, line:486:1>
|   |-DeclStmt 0x28deb78c738 <line:469:5, line:470:30>
|   | `-VarDecl 0x28deb78c4e0 <line:469:5, line:470:29> line:469:27 used two64p8 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x28deb78c718 <col:37, line:470:29> 'int' '+'
|   |     |-ParenExpr 0x28deb78c610 <line:469:37, col:58> 'widelimb':'int'
|   |     | `-BinaryOperator 0x28deb78c5f0 <col:38, col:56> 'widelimb':'int' '<<'
|   |     |   |-ParenExpr 0x28deb78c5a8 <col:38, col:51> 'widelimb':'int'
|   |     |   | `-CStyleCastExpr 0x28deb78c580 <col:39, col:50> 'widelimb':'int' <NoOp>
|   |     |   |   `-IntegerLiteral 0x28deb78c548 <col:50> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb78c5c8 <col:56> 'int' 64
|   |     `-ParenExpr 0x28deb78c6f8 <line:470:9, col:29> 'widelimb':'int'
|   |       `-BinaryOperator 0x28deb78c6d8 <col:10, col:28> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x28deb78c690 <col:10, col:23> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x28deb78c668 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x28deb78c630 <col:22> 'int' 1
|   |         `-IntegerLiteral 0x28deb78c6b0 <col:28> 'int' 8
|   |-DeclStmt 0x28deb78c9b8 <line:471:5, line:472:30>
|   | `-VarDecl 0x28deb78c760 <line:471:5, line:472:29> line:471:27 used two64m8 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x28deb78c998 <col:37, line:472:29> 'int' '-'
|   |     |-ParenExpr 0x28deb78c890 <line:471:37, col:58> 'widelimb':'int'
|   |     | `-BinaryOperator 0x28deb78c870 <col:38, col:56> 'widelimb':'int' '<<'
|   |     |   |-ParenExpr 0x28deb78c828 <col:38, col:51> 'widelimb':'int'
|   |     |   | `-CStyleCastExpr 0x28deb78c800 <col:39, col:50> 'widelimb':'int' <NoOp>
|   |     |   |   `-IntegerLiteral 0x28deb78c7c8 <col:50> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb78c848 <col:56> 'int' 64
|   |     `-ParenExpr 0x28deb78c978 <line:472:9, col:29> 'widelimb':'int'
|   |       `-BinaryOperator 0x28deb78c958 <col:10, col:28> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x28deb78c910 <col:10, col:23> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x28deb78c8e8 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x28deb78c8b0 <col:22> 'int' 1
|   |         `-IntegerLiteral 0x28deb78c930 <col:28> 'int' 8
|   |-DeclStmt 0x28deb78cd40 <line:473:5, line:474:55>
|   | `-VarDecl 0x28deb78c9e0 <line:473:5, line:474:54> line:473:27 used two64m48m8 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x28deb78cd20 <col:40, line:474:54> 'int' '-'
|   |     |-BinaryOperator 0x28deb78cc18 <line:473:40, line:474:30> 'int' '-'
|   |     | |-ParenExpr 0x28deb78cb10 <line:473:40, col:61> 'widelimb':'int'
|   |     | | `-BinaryOperator 0x28deb78caf0 <col:41, col:59> 'widelimb':'int' '<<'
|   |     | |   |-ParenExpr 0x28deb78caa8 <col:41, col:54> 'widelimb':'int'
|   |     | |   | `-CStyleCastExpr 0x28deb78ca80 <col:42, col:53> 'widelimb':'int' <NoOp>
|   |     | |   |   `-IntegerLiteral 0x28deb78ca48 <col:53> 'int' 1
|   |     | |   `-IntegerLiteral 0x28deb78cac8 <col:59> 'int' 64
|   |     | `-ParenExpr 0x28deb78cbf8 <line:474:9, col:30> 'widelimb':'int'
|   |     |   `-BinaryOperator 0x28deb78cbd8 <col:10, col:28> 'widelimb':'int' '<<'
|   |     |     |-ParenExpr 0x28deb78cb90 <col:10, col:23> 'widelimb':'int'
|   |     |     | `-CStyleCastExpr 0x28deb78cb68 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |     |     |   `-IntegerLiteral 0x28deb78cb30 <col:22> 'int' 1
|   |     |     `-IntegerLiteral 0x28deb78cbb0 <col:28> 'int' 48
|   |     `-ParenExpr 0x28deb78cd00 <col:34, col:54> 'widelimb':'int'
|   |       `-BinaryOperator 0x28deb78cce0 <col:35, col:53> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x28deb78cc98 <col:35, col:48> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x28deb78cc70 <col:36, col:47> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x28deb78cc38 <col:47> 'int' 1
|   |         `-IntegerLiteral 0x28deb78ccb8 <col:53> 'int' 8
|   |-CompoundAssignOperator 0x28deb78ce28 <line:477:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78cdb8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78cda0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78cd58 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78c250 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78cd78 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb78ce10 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78cdd8 <col:15> 'const widelimb':'const int' lvalue Var 0x28deb78c4e0 'two64p8' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78cf88 <line:478:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78cf18 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78cf00 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78ceb8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78c250 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78ced8 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb78cf70 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78cf38 <col:15> 'const widelimb':'const int' lvalue Var 0x28deb78c9e0 'two64m48m8' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78d0d0 <line:479:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78d060 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78d048 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78d000 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78c250 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78d020 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb78d0b8 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78d080 <col:15> 'const widelimb':'const int' lvalue Var 0x28deb78c760 'two64m8' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78d200 <line:480:5, col:15> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78d1a8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78d190 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78d148 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78c250 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78d168 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x28deb78d1e8 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78d1c8 <col:15> 'const widelimb':'const int' lvalue Var 0x28deb78c760 'two64m8' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78d348 <line:482:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb78d290 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78d278 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78d230 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78c250 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78d250 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb78d330 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78d310 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb78d2f8 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78d2b0 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78c2c8 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb78d2d0 <col:18> 'int' 0
|   |-CompoundAssignOperator 0x28deb78d490 <line:483:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb78d3d8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78d3c0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78d378 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78c250 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78d398 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb78d478 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78d458 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb78d440 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78d3f8 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78c2c8 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb78d418 <col:18> 'int' 1
|   |-CompoundAssignOperator 0x28deb78d5d8 <line:484:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb78d520 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78d508 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78d4c0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78c250 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78d4e0 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb78d5c0 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb78d5a0 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|   |     |-ImplicitCastExpr 0x28deb78d588 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb78d540 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78c2c8 'in' 'const limb *':'const limb *'
|   |     `-IntegerLiteral 0x28deb78d560 <col:18> 'int' 2
|   `-CompoundAssignOperator 0x28deb78d720 <line:485:5, col:19> 'widelimb':'int' '-=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     |-ArraySubscriptExpr 0x28deb78d668 <col:5, col:10> 'widelimb':'int' lvalue
|     | |-ImplicitCastExpr 0x28deb78d650 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb78d608 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78c250 'out' 'widelimb *':'widelimb *'
|     | `-IntegerLiteral 0x28deb78d628 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x28deb78d708 <col:15, col:19> 'limb':'unsigned long long' <LValueToRValue>
|       `-ArraySubscriptExpr 0x28deb78d6e8 <col:15, col:19> 'const limb':'const unsigned long long' lvalue
|         |-ImplicitCastExpr 0x28deb78d6d0 <col:15> 'const limb *':'const limb *' <LValueToRValue>
|         | `-DeclRefExpr 0x28deb78d688 <col:15> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78c2c8 'in' 'const limb *':'const limb *'
|         `-IntegerLiteral 0x28deb78d6a8 <col:18> 'int' 3
|-FunctionDecl 0x28deb78d988 <line:492:1, line:498:1> line:492:13 used felem_scalar 'void (limb *, const limb)' static
| |-ParmVarDecl 0x28deb78d7c8 <col:26, col:32> col:32 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb78d840 <col:37, col:48> col:48 used scalar 'const limb':'const unsigned long long'
| `-CompoundStmt 0x28deb78ddf0 <line:493:1, line:498:1>
|   |-CompoundAssignOperator 0x28deb78db08 <line:494:5, col:15> 'limb':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb78dab0 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb78da98 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78da50 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb78d7c8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb78da70 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb78daf0 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78dad0 <col:15> 'const limb':'const unsigned long long' lvalue ParmVar 0x28deb78d840 'scalar' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x28deb78dbf0 <line:495:5, col:15> 'limb':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb78db98 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb78db80 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78db38 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb78d7c8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb78db58 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb78dbd8 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78dbb8 <col:15> 'const limb':'const unsigned long long' lvalue ParmVar 0x28deb78d840 'scalar' 'const limb':'const unsigned long long'
|   |-CompoundAssignOperator 0x28deb78dcd8 <line:496:5, col:15> 'limb':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb78dc80 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb78dc68 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78dc20 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb78d7c8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb78dc40 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb78dcc0 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78dca0 <col:15> 'const limb':'const unsigned long long' lvalue ParmVar 0x28deb78d840 'scalar' 'const limb':'const unsigned long long'
|   `-CompoundAssignOperator 0x28deb78ddc0 <line:497:5, col:15> 'limb':'unsigned long long' '*=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|     |-ArraySubscriptExpr 0x28deb78dd68 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x28deb78dd50 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb78dd08 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb78d7c8 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x28deb78dd28 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x28deb78dda8 <col:15> 'limb':'unsigned long long' <LValueToRValue>
|       `-DeclRefExpr 0x28deb78dd88 <col:15> 'const limb':'const unsigned long long' lvalue ParmVar 0x28deb78d840 'scalar' 'const limb':'const unsigned long long'
|-FunctionDecl 0x28deb78dfe8 <line:504:1, line:513:1> line:504:13 used widefelem_scalar 'void (widelimb *, const widelimb)' static
| |-ParmVarDecl 0x28deb78de30 <col:30, col:40> col:40 used out 'widelimb *':'widelimb *'
| |-ParmVarDecl 0x28deb78dea8 <col:45, col:60> col:60 used scalar 'const widelimb':'const int'
| `-CompoundStmt 0x28deb78e708 <line:505:1, line:513:1>
|   |-CompoundAssignOperator 0x28deb78e168 <line:506:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78e110 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78e0f8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78e0b0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78de30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78e0d0 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb78e150 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78e130 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x28deb78dea8 'scalar' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78e250 <line:507:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78e1f8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78e1e0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78e198 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78de30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78e1b8 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb78e238 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78e218 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x28deb78dea8 'scalar' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78e338 <line:508:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78e2e0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78e2c8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78e280 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78de30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78e2a0 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb78e320 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78e300 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x28deb78dea8 'scalar' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78e420 <line:509:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78e3c8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78e3b0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78e368 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78de30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78e388 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x28deb78e408 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78e3e8 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x28deb78dea8 'scalar' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78e508 <line:510:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78e4b0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78e498 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78e450 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78de30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78e470 <col:9> 'int' 4
|   | `-ImplicitCastExpr 0x28deb78e4f0 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78e4d0 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x28deb78dea8 'scalar' 'const widelimb':'const int'
|   |-CompoundAssignOperator 0x28deb78e5f0 <line:511:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb78e598 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb78e580 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb78e538 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78de30 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb78e558 <col:9> 'int' 5
|   | `-ImplicitCastExpr 0x28deb78e5d8 <col:15> 'widelimb':'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb78e5b8 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x28deb78dea8 'scalar' 'const widelimb':'const int'
|   `-CompoundAssignOperator 0x28deb78e6d8 <line:512:5, col:15> 'widelimb':'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'
|     |-ArraySubscriptExpr 0x28deb78e680 <col:5, col:10> 'widelimb':'int' lvalue
|     | |-ImplicitCastExpr 0x28deb78e668 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb78e620 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78de30 'out' 'widelimb *':'widelimb *'
|     | `-IntegerLiteral 0x28deb78e640 <col:9> 'int' 6
|     `-ImplicitCastExpr 0x28deb78e6c0 <col:15> 'widelimb':'int' <LValueToRValue>
|       `-DeclRefExpr 0x28deb78e6a0 <col:15> 'const widelimb':'const int' lvalue ParmVar 0x28deb78dea8 'scalar' 'const widelimb':'const int'
|-FunctionDecl 0x28deb78e8a0 <line:516:1, line:529:1> line:516:13 used felem_square 'void (widelimb *, const limb *)' static
| |-ParmVarDecl 0x28deb78e760 <col:26, col:36> col:36 used out 'widelimb *':'widelimb *'
| |-ParmVarDecl 0x28deb78e7d8 <col:41, col:53> col:53 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb879628 <line:517:1, line:529:1>
|   |-DeclStmt 0x28deb78eaf0 <line:518:5, col:26>
|   | |-VarDecl 0x28deb78e978 <col:5, col:10> col:10 used tmp0 'limb':'unsigned long long'
|   | |-VarDecl 0x28deb78e9f0 <col:5, col:16> col:16 used tmp1 'limb':'unsigned long long'
|   | `-VarDecl 0x28deb78ea68 <col:5, col:22> col:22 used tmp2 'limb':'unsigned long long'
|   |-BinaryOperator 0x28deb78ec38 <line:519:5, col:20> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb78eb08 <col:5> 'limb':'unsigned long long' lvalue Var 0x28deb78e978 'tmp0' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x28deb78ec18 <col:12, col:20> 'unsigned long long' '*'
|   |   |-ImplicitCastExpr 0x28deb78ec00 <col:12> 'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x28deb78eb40 <col:12> 'int' 2
|   |   `-ImplicitCastExpr 0x28deb78ebe8 <col:16, col:20> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb78ebc8 <col:16, col:20> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb78ebb0 <col:16> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x28deb78eb68 <col:16> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x28deb78eb88 <col:19> 'int' 0
|   |-BinaryOperator 0x28deb78ed88 <line:520:5, col:20> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb78ec58 <col:5> 'limb':'unsigned long long' lvalue Var 0x28deb78e9f0 'tmp1' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x28deb78ed68 <col:12, col:20> 'unsigned long long' '*'
|   |   |-ImplicitCastExpr 0x28deb78ed50 <col:12> 'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x28deb78ec90 <col:12> 'int' 2
|   |   `-ImplicitCastExpr 0x28deb78ed38 <col:16, col:20> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb78ed18 <col:16, col:20> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb78ed00 <col:16> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x28deb78ecb8 <col:16> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x28deb78ecd8 <col:19> 'int' 1
|   |-BinaryOperator 0x28deb878160 <line:521:5, col:20> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb78eda8 <col:5> 'limb':'unsigned long long' lvalue Var 0x28deb78ea68 'tmp2' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x28deb878140 <col:12, col:20> 'unsigned long long' '*'
|   |   |-ImplicitCastExpr 0x28deb878128 <col:12> 'unsigned long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x28deb78ede0 <col:12> 'int' 2
|   |   `-ImplicitCastExpr 0x28deb878110 <col:16, col:20> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb8780f0 <col:16, col:20> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb78ee50 <col:16> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x28deb78ee08 <col:16> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x28deb78ee28 <col:19> 'int' 2
|   |-BinaryOperator 0x28deb8783d8 <line:522:5, col:39> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb8781e0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb8781c8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb878180 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78e760 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb8781a0 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb8783c0 <col:14, col:39> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb8783a0 <col:14, col:39> 'unsigned long long' '*'
|   |     |-ImplicitCastExpr 0x28deb878388 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | `-ParenExpr 0x28deb8782d0 <col:14, col:31> 'widelimb':'int'
|   |     |   `-CStyleCastExpr 0x28deb8782a8 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x28deb878290 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |       `-ArraySubscriptExpr 0x28deb878260 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     |         |-ImplicitCastExpr 0x28deb878248 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x28deb878200 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |     |         `-IntegerLiteral 0x28deb878220 <col:29> 'int' 0
|   |     `-ImplicitCastExpr 0x28deb878370 <col:35, col:39> 'limb':'unsigned long long' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x28deb878350 <col:35, col:39> 'const limb':'const unsigned long long' lvalue
|   |         |-ImplicitCastExpr 0x28deb878338 <col:35> 'const limb *':'const limb *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x28deb8782f0 <col:35> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |         `-IntegerLiteral 0x28deb878310 <col:38> 'int' 0
|   |-BinaryOperator 0x28deb8785f0 <line:523:5, col:35> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb878458 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb878440 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb8783f8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78e760 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb878418 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb8785d8 <col:14, col:35> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb8785b8 <col:14, col:35> 'unsigned long long' '*'
|   |     |-ImplicitCastExpr 0x28deb8785a0 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | `-ParenExpr 0x28deb878548 <col:14, col:31> 'widelimb':'int'
|   |     |   `-CStyleCastExpr 0x28deb878520 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x28deb878508 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |       `-ArraySubscriptExpr 0x28deb8784d8 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     |         |-ImplicitCastExpr 0x28deb8784c0 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x28deb878478 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |     |         `-IntegerLiteral 0x28deb878498 <col:29> 'int' 0
|   |     `-ImplicitCastExpr 0x28deb878588 <col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x28deb878568 <col:35> 'limb':'unsigned long long' lvalue Var 0x28deb78e9f0 'tmp1' 'limb':'unsigned long long'
|   |-BinaryOperator 0x28deb8789e8 <line:524:5, col:67> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb878670 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb878658 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb878610 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78e760 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb878630 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb8789d0 <col:14, col:67> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb8789b0 <col:14, col:67> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x28deb8787d0 <col:14, col:35> 'unsigned long long' '*'
|   |     | |-ImplicitCastExpr 0x28deb8787b8 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | | `-ParenExpr 0x28deb878760 <col:14, col:31> 'widelimb':'int'
|   |     | |   `-CStyleCastExpr 0x28deb878738 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     | |     `-ImplicitCastExpr 0x28deb878720 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |       `-ArraySubscriptExpr 0x28deb8786f0 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     | |         |-ImplicitCastExpr 0x28deb8786d8 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x28deb878690 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |     | |         `-IntegerLiteral 0x28deb8786b0 <col:29> 'int' 0
|   |     | `-ImplicitCastExpr 0x28deb8787a0 <col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x28deb878780 <col:35> 'limb':'unsigned long long' lvalue Var 0x28deb78ea68 'tmp2' 'limb':'unsigned long long'
|   |     `-BinaryOperator 0x28deb878990 <col:42, col:67> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x28deb878978 <col:42, col:59> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x28deb8788c0 <col:42, col:59> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x28deb878898 <col:43, col:58> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x28deb878880 <col:54, col:58> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x28deb878850 <col:54, col:58> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x28deb878838 <col:54> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x28deb8787f0 <col:54> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x28deb878810 <col:57> 'int' 1
|   |       `-ImplicitCastExpr 0x28deb878960 <col:63, col:67> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x28deb878940 <col:63, col:67> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x28deb878928 <col:63> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x28deb8788e0 <col:63> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x28deb878900 <col:66> 'int' 1
|   |-BinaryOperator 0x28deb878d80 <line:525:5, col:63> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb878a68 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb878a50 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb878a08 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78e760 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb878a28 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x28deb878d68 <col:14, col:63> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb878d48 <col:14, col:63> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x28deb878bc8 <col:14, col:35> 'unsigned long long' '*'
|   |     | |-ImplicitCastExpr 0x28deb878bb0 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | | `-ParenExpr 0x28deb878b58 <col:14, col:31> 'widelimb':'int'
|   |     | |   `-CStyleCastExpr 0x28deb878b30 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     | |     `-ImplicitCastExpr 0x28deb878b18 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |       `-ArraySubscriptExpr 0x28deb878ae8 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     | |         |-ImplicitCastExpr 0x28deb878ad0 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x28deb878a88 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |     | |         `-IntegerLiteral 0x28deb878aa8 <col:29> 'int' 3
|   |     | `-ImplicitCastExpr 0x28deb878b98 <col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x28deb878b78 <col:35> 'limb':'unsigned long long' lvalue Var 0x28deb78e978 'tmp0' 'limb':'unsigned long long'
|   |     `-BinaryOperator 0x28deb878d28 <col:42, col:63> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x28deb878d10 <col:42, col:59> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x28deb878cb8 <col:42, col:59> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x28deb878c90 <col:43, col:58> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x28deb878c78 <col:54, col:58> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x28deb878c48 <col:54, col:58> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x28deb878c30 <col:54> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x28deb878be8 <col:54> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x28deb878c08 <col:57> 'int' 1
|   |       `-ImplicitCastExpr 0x28deb878cf8 <col:63> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-DeclRefExpr 0x28deb878cd8 <col:63> 'limb':'unsigned long long' lvalue Var 0x28deb78ea68 'tmp2' 'limb':'unsigned long long'
|   |-BinaryOperator 0x28deb879178 <line:526:5, col:67> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb878e00 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb878de8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb878da0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78e760 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb878dc0 <col:9> 'int' 4
|   | `-ImplicitCastExpr 0x28deb879160 <col:14, col:67> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb879140 <col:14, col:67> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x28deb878f60 <col:14, col:35> 'unsigned long long' '*'
|   |     | |-ImplicitCastExpr 0x28deb878f48 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | | `-ParenExpr 0x28deb878ef0 <col:14, col:31> 'widelimb':'int'
|   |     | |   `-CStyleCastExpr 0x28deb878ec8 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     | |     `-ImplicitCastExpr 0x28deb878eb0 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |       `-ArraySubscriptExpr 0x28deb878e80 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     | |         |-ImplicitCastExpr 0x28deb878e68 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x28deb878e20 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |     | |         `-IntegerLiteral 0x28deb878e40 <col:29> 'int' 3
|   |     | `-ImplicitCastExpr 0x28deb878f30 <col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x28deb878f10 <col:35> 'limb':'unsigned long long' lvalue Var 0x28deb78e9f0 'tmp1' 'limb':'unsigned long long'
|   |     `-BinaryOperator 0x28deb879120 <col:42, col:67> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x28deb879108 <col:42, col:59> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x28deb879050 <col:42, col:59> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x28deb879028 <col:43, col:58> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x28deb879010 <col:54, col:58> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x28deb878fe0 <col:54, col:58> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x28deb878fc8 <col:54> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x28deb878f80 <col:54> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x28deb878fa0 <col:57> 'int' 2
|   |       `-ImplicitCastExpr 0x28deb8790f0 <col:63, col:67> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x28deb8790d0 <col:63, col:67> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x28deb8790b8 <col:63> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x28deb879070 <col:63> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x28deb879090 <col:66> 'int' 2
|   |-BinaryOperator 0x28deb879390 <line:527:5, col:35> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb8791f8 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb8791e0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb879198 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78e760 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb8791b8 <col:9> 'int' 5
|   | `-ImplicitCastExpr 0x28deb879378 <col:14, col:35> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb879358 <col:14, col:35> 'unsigned long long' '*'
|   |     |-ImplicitCastExpr 0x28deb879340 <col:14, col:31> 'unsigned long long' <IntegralCast>
|   |     | `-ParenExpr 0x28deb8792e8 <col:14, col:31> 'widelimb':'int'
|   |     |   `-CStyleCastExpr 0x28deb8792c0 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x28deb8792a8 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |       `-ArraySubscriptExpr 0x28deb879278 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|   |     |         |-ImplicitCastExpr 0x28deb879260 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x28deb879218 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|   |     |         `-IntegerLiteral 0x28deb879238 <col:29> 'int' 3
|   |     `-ImplicitCastExpr 0x28deb879328 <col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x28deb879308 <col:35> 'limb':'unsigned long long' lvalue Var 0x28deb78ea68 'tmp2' 'limb':'unsigned long long'
|   `-BinaryOperator 0x28deb879608 <line:528:5, col:39> 'widelimb':'int' '='
|     |-ArraySubscriptExpr 0x28deb879410 <col:5, col:10> 'widelimb':'int' lvalue
|     | |-ImplicitCastExpr 0x28deb8793f8 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb8793b0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb78e760 'out' 'widelimb *':'widelimb *'
|     | `-IntegerLiteral 0x28deb8793d0 <col:9> 'int' 6
|     `-ImplicitCastExpr 0x28deb8795f0 <col:14, col:39> 'widelimb':'int' <IntegralCast>
|       `-BinaryOperator 0x28deb8795d0 <col:14, col:39> 'unsigned long long' '*'
|         |-ImplicitCastExpr 0x28deb8795b8 <col:14, col:31> 'unsigned long long' <IntegralCast>
|         | `-ParenExpr 0x28deb879500 <col:14, col:31> 'widelimb':'int'
|         |   `-CStyleCastExpr 0x28deb8794d8 <col:15, col:30> 'widelimb':'int' <IntegralCast>
|         |     `-ImplicitCastExpr 0x28deb8794c0 <col:26, col:30> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|         |       `-ArraySubscriptExpr 0x28deb879490 <col:26, col:30> 'const limb':'const unsigned long long' lvalue
|         |         |-ImplicitCastExpr 0x28deb879478 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|         |         | `-DeclRefExpr 0x28deb879430 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|         |         `-IntegerLiteral 0x28deb879450 <col:29> 'int' 3
|         `-ImplicitCastExpr 0x28deb8795a0 <col:35, col:39> 'limb':'unsigned long long' <LValueToRValue>
|           `-ArraySubscriptExpr 0x28deb879580 <col:35, col:39> 'const limb':'const unsigned long long' lvalue
|             |-ImplicitCastExpr 0x28deb879568 <col:35> 'const limb *':'const limb *' <LValueToRValue>
|             | `-DeclRefExpr 0x28deb879520 <col:35> 'const limb *':'const limb *' lvalue ParmVar 0x28deb78e7d8 'in' 'const limb *':'const limb *'
|             `-IntegerLiteral 0x28deb879540 <col:38> 'int' 3
|-FunctionDecl 0x28deb8798f8 <line:532:1, line:544:1> line:532:13 used felem_mul 'void (widelimb *, const limb *, const limb *)' static
| |-ParmVarDecl 0x28deb8796a0 <col:23, col:33> col:33 used out 'widelimb *':'widelimb *'
| |-ParmVarDecl 0x28deb879718 <col:38, col:50> col:50 used in1 'const limb *':'const limb *'
| |-ParmVarDecl 0x28deb879790 <col:55, col:67> col:67 used in2 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb877bf0 <line:533:1, line:544:1>
|   |-BinaryOperator 0x28deb879c20 <line:534:5, col:41> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb879a28 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb879a10 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb8799c8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb8796a0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb8799e8 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb879c08 <col:14, col:41> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb879be8 <col:14, col:41> 'unsigned long long' '*'
|   |     |-ImplicitCastExpr 0x28deb879bd0 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | `-ParenExpr 0x28deb879b18 <col:14, col:32> 'widelimb':'int'
|   |     |   `-CStyleCastExpr 0x28deb879af0 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     |     `-ImplicitCastExpr 0x28deb879ad8 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |       `-ArraySubscriptExpr 0x28deb879aa8 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     |         |-ImplicitCastExpr 0x28deb879a90 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     |         | `-DeclRefExpr 0x28deb879a48 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |     |         `-IntegerLiteral 0x28deb879a68 <col:30> 'int' 0
|   |     `-ImplicitCastExpr 0x28deb879bb8 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |       `-ArraySubscriptExpr 0x28deb879b98 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |         |-ImplicitCastExpr 0x28deb879b80 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x28deb879b38 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |         `-IntegerLiteral 0x28deb879b58 <col:40> 'int' 0
|   |-BinaryOperator 0x28deb87a078 <line:535:5, col:72> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb879ca0 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb879c88 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb879c40 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb8796a0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb879c60 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb87a060 <col:14, col:72> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb87a040 <col:14, col:72> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x28deb879e60 <col:14, col:41> 'unsigned long long' '*'
|   |     | |-ImplicitCastExpr 0x28deb879e48 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | | `-ParenExpr 0x28deb879d90 <col:14, col:32> 'widelimb':'int'
|   |     | |   `-CStyleCastExpr 0x28deb879d68 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     | |     `-ImplicitCastExpr 0x28deb879d50 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |       `-ArraySubscriptExpr 0x28deb879d20 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     | |         |-ImplicitCastExpr 0x28deb879d08 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x28deb879cc0 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |     | |         `-IntegerLiteral 0x28deb879ce0 <col:30> 'int' 0
|   |     | `-ImplicitCastExpr 0x28deb879e30 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   `-ArraySubscriptExpr 0x28deb879e10 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     |     |-ImplicitCastExpr 0x28deb879df8 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x28deb879db0 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |     |     `-IntegerLiteral 0x28deb879dd0 <col:40> 'int' 1
|   |     `-BinaryOperator 0x28deb87a020 <col:45, col:72> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x28deb87a008 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x28deb879f50 <col:45, col:63> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x28deb879f28 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x28deb879f10 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x28deb879ee0 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x28deb879ec8 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x28deb879e80 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x28deb879ea0 <col:61> 'int' 1
|   |       `-ImplicitCastExpr 0x28deb879ff0 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x28deb879fd0 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x28deb879fb8 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x28deb879f70 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x28deb879f90 <col:71> 'int' 0
|   |-BinaryOperator 0x28deb8766b0 <line:536:5, line:537:41> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb8760f8 <line:536:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb8760e0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb87a098 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb8796a0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb87a0b8 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb876698 <col:14, line:537:41> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb876678 <line:536:14, line:537:41> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x28deb876498 <line:536:14, col:72> 'unsigned long long' '+'
|   |     | |-BinaryOperator 0x28deb8762b8 <col:14, col:41> 'unsigned long long' '*'
|   |     | | |-ImplicitCastExpr 0x28deb8762a0 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | | | `-ParenExpr 0x28deb8761e8 <col:14, col:32> 'widelimb':'int'
|   |     | | |   `-CStyleCastExpr 0x28deb8761c0 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     | | |     `-ImplicitCastExpr 0x28deb8761a8 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | | |       `-ArraySubscriptExpr 0x28deb876178 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     | | |         |-ImplicitCastExpr 0x28deb876160 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | | |         | `-DeclRefExpr 0x28deb876118 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |     | | |         `-IntegerLiteral 0x28deb876138 <col:30> 'int' 0
|   |     | | `-ImplicitCastExpr 0x28deb876288 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     | |   `-ArraySubscriptExpr 0x28deb876268 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     | |     |-ImplicitCastExpr 0x28deb876250 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x28deb876208 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |     | |     `-IntegerLiteral 0x28deb876228 <col:40> 'int' 2
|   |     | `-BinaryOperator 0x28deb876478 <col:45, col:72> 'unsigned long long' '*'
|   |     |   |-ImplicitCastExpr 0x28deb876460 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |     |   | `-ParenExpr 0x28deb8763a8 <col:45, col:63> 'widelimb':'int'
|   |     |   |   `-CStyleCastExpr 0x28deb876380 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |     |   |     `-ImplicitCastExpr 0x28deb876368 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |       `-ArraySubscriptExpr 0x28deb876338 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |     |   |         |-ImplicitCastExpr 0x28deb876320 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |         | `-DeclRefExpr 0x28deb8762d8 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |     |   |         `-IntegerLiteral 0x28deb8762f8 <col:61> 'int' 1
|   |     |   `-ImplicitCastExpr 0x28deb876448 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |     |     `-ArraySubscriptExpr 0x28deb876428 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |     |       |-ImplicitCastExpr 0x28deb876410 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x28deb8763c8 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |     |       `-IntegerLiteral 0x28deb8763e8 <col:71> 'int' 1
|   |     `-BinaryOperator 0x28deb876658 <line:537:14, col:41> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x28deb876640 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x28deb876588 <col:14, col:32> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x28deb876560 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x28deb876548 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x28deb876518 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x28deb876500 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x28deb8764b8 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x28deb8764d8 <col:30> 'int' 2
|   |       `-ImplicitCastExpr 0x28deb876628 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x28deb876608 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x28deb8765f0 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x28deb8765a8 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x28deb8765c8 <col:40> 'int' 0
|   |-BinaryOperator 0x28deb876ec8 <line:538:5, line:539:72> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb876730 <line:538:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb876718 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb8766d0 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb8796a0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb8766f0 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x28deb876eb0 <col:14, line:539:72> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb876e90 <line:538:14, line:539:72> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x28deb876cb0 <line:538:14, line:539:41> 'unsigned long long' '+'
|   |     | |-BinaryOperator 0x28deb876ad0 <line:538:14, col:72> 'unsigned long long' '+'
|   |     | | |-BinaryOperator 0x28deb8768f0 <col:14, col:41> 'unsigned long long' '*'
|   |     | | | |-ImplicitCastExpr 0x28deb8768d8 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | | | | `-ParenExpr 0x28deb876820 <col:14, col:32> 'widelimb':'int'
|   |     | | | |   `-CStyleCastExpr 0x28deb8767f8 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     | | | |     `-ImplicitCastExpr 0x28deb8767e0 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | | | |       `-ArraySubscriptExpr 0x28deb8767b0 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     | | | |         |-ImplicitCastExpr 0x28deb876798 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | | | |         | `-DeclRefExpr 0x28deb876750 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |     | | | |         `-IntegerLiteral 0x28deb876770 <col:30> 'int' 0
|   |     | | | `-ImplicitCastExpr 0x28deb8768c0 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     | | |   `-ArraySubscriptExpr 0x28deb8768a0 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     | | |     |-ImplicitCastExpr 0x28deb876888 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     | | |     | `-DeclRefExpr 0x28deb876840 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |     | | |     `-IntegerLiteral 0x28deb876860 <col:40> 'int' 3
|   |     | | `-BinaryOperator 0x28deb876ab0 <col:45, col:72> 'unsigned long long' '*'
|   |     | |   |-ImplicitCastExpr 0x28deb876a98 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |     | |   | `-ParenExpr 0x28deb8769e0 <col:45, col:63> 'widelimb':'int'
|   |     | |   |   `-CStyleCastExpr 0x28deb8769b8 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |     | |   |     `-ImplicitCastExpr 0x28deb8769a0 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |   |       `-ArraySubscriptExpr 0x28deb876970 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |     | |   |         |-ImplicitCastExpr 0x28deb876958 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |   |         | `-DeclRefExpr 0x28deb876910 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |     | |   |         `-IntegerLiteral 0x28deb876930 <col:61> 'int' 1
|   |     | |   `-ImplicitCastExpr 0x28deb876a80 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |     | |     `-ArraySubscriptExpr 0x28deb876a60 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |     | |       |-ImplicitCastExpr 0x28deb876a48 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |       | `-DeclRefExpr 0x28deb876a00 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |     | |       `-IntegerLiteral 0x28deb876a20 <col:71> 'int' 2
|   |     | `-BinaryOperator 0x28deb876c90 <line:539:14, col:41> 'unsigned long long' '*'
|   |     |   |-ImplicitCastExpr 0x28deb876c78 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     |   | `-ParenExpr 0x28deb876bc0 <col:14, col:32> 'widelimb':'int'
|   |     |   |   `-CStyleCastExpr 0x28deb876b98 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     |   |     `-ImplicitCastExpr 0x28deb876b80 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |       `-ArraySubscriptExpr 0x28deb876b50 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     |   |         |-ImplicitCastExpr 0x28deb876b38 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |         | `-DeclRefExpr 0x28deb876af0 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |     |   |         `-IntegerLiteral 0x28deb876b10 <col:30> 'int' 2
|   |     |   `-ImplicitCastExpr 0x28deb876c60 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     |     `-ArraySubscriptExpr 0x28deb876c40 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     |       |-ImplicitCastExpr 0x28deb876c28 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x28deb876be0 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |     |       `-IntegerLiteral 0x28deb876c00 <col:40> 'int' 1
|   |     `-BinaryOperator 0x28deb876e70 <col:45, col:72> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x28deb876e58 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x28deb876da0 <col:45, col:63> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x28deb876d78 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x28deb876d60 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x28deb876d30 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x28deb876d18 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x28deb876cd0 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x28deb876cf0 <col:61> 'int' 3
|   |       `-ImplicitCastExpr 0x28deb876e40 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x28deb876e20 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x28deb876e08 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x28deb876dc0 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x28deb876de0 <col:71> 'int' 0
|   |-BinaryOperator 0x28deb877500 <line:540:5, line:541:41> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb876f48 <line:540:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb876f30 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb876ee8 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb8796a0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb876f08 <col:9> 'int' 4
|   | `-ImplicitCastExpr 0x28deb8774e8 <col:14, line:541:41> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb8774c8 <line:540:14, line:541:41> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x28deb8772e8 <line:540:14, col:72> 'unsigned long long' '+'
|   |     | |-BinaryOperator 0x28deb877108 <col:14, col:41> 'unsigned long long' '*'
|   |     | | |-ImplicitCastExpr 0x28deb8770f0 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | | | `-ParenExpr 0x28deb877038 <col:14, col:32> 'widelimb':'int'
|   |     | | |   `-CStyleCastExpr 0x28deb877010 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     | | |     `-ImplicitCastExpr 0x28deb876ff8 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | | |       `-ArraySubscriptExpr 0x28deb876fc8 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     | | |         |-ImplicitCastExpr 0x28deb876fb0 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | | |         | `-DeclRefExpr 0x28deb876f68 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |     | | |         `-IntegerLiteral 0x28deb876f88 <col:30> 'int' 1
|   |     | | `-ImplicitCastExpr 0x28deb8770d8 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     | |   `-ArraySubscriptExpr 0x28deb8770b8 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     | |     |-ImplicitCastExpr 0x28deb8770a0 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |     | `-DeclRefExpr 0x28deb877058 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |     | |     `-IntegerLiteral 0x28deb877078 <col:40> 'int' 3
|   |     | `-BinaryOperator 0x28deb8772c8 <col:45, col:72> 'unsigned long long' '*'
|   |     |   |-ImplicitCastExpr 0x28deb8772b0 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |     |   | `-ParenExpr 0x28deb8771f8 <col:45, col:63> 'widelimb':'int'
|   |     |   |   `-CStyleCastExpr 0x28deb8771d0 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |     |   |     `-ImplicitCastExpr 0x28deb8771b8 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |       `-ArraySubscriptExpr 0x28deb877188 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |     |   |         |-ImplicitCastExpr 0x28deb877170 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |         | `-DeclRefExpr 0x28deb877128 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |     |   |         `-IntegerLiteral 0x28deb877148 <col:61> 'int' 2
|   |     |   `-ImplicitCastExpr 0x28deb877298 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |     |     `-ArraySubscriptExpr 0x28deb877278 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |     |       |-ImplicitCastExpr 0x28deb877260 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |     |       | `-DeclRefExpr 0x28deb877218 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |     |       `-IntegerLiteral 0x28deb877238 <col:71> 'int' 2
|   |     `-BinaryOperator 0x28deb8774a8 <line:541:14, col:41> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x28deb877490 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x28deb8773d8 <col:14, col:32> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x28deb8773b0 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x28deb877398 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x28deb877368 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x28deb877350 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x28deb877308 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x28deb877328 <col:30> 'int' 3
|   |       `-ImplicitCastExpr 0x28deb877478 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x28deb877458 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x28deb877440 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x28deb8773f8 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x28deb877418 <col:40> 'int' 1
|   |-BinaryOperator 0x28deb877958 <line:542:5, col:72> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb877580 <col:5, col:10> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb877568 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb877520 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb8796a0 'out' 'widelimb *':'widelimb *'
|   | | `-IntegerLiteral 0x28deb877540 <col:9> 'int' 5
|   | `-ImplicitCastExpr 0x28deb877940 <col:14, col:72> 'widelimb':'int' <IntegralCast>
|   |   `-BinaryOperator 0x28deb877920 <col:14, col:72> 'unsigned long long' '+'
|   |     |-BinaryOperator 0x28deb877740 <col:14, col:41> 'unsigned long long' '*'
|   |     | |-ImplicitCastExpr 0x28deb877728 <col:14, col:32> 'unsigned long long' <IntegralCast>
|   |     | | `-ParenExpr 0x28deb877670 <col:14, col:32> 'widelimb':'int'
|   |     | |   `-CStyleCastExpr 0x28deb877648 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|   |     | |     `-ImplicitCastExpr 0x28deb877630 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     | |       `-ArraySubscriptExpr 0x28deb877600 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|   |     | |         |-ImplicitCastExpr 0x28deb8775e8 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |     | |         | `-DeclRefExpr 0x28deb8775a0 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |     | |         `-IntegerLiteral 0x28deb8775c0 <col:30> 'int' 2
|   |     | `-ImplicitCastExpr 0x28deb877710 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   `-ArraySubscriptExpr 0x28deb8776f0 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|   |     |     |-ImplicitCastExpr 0x28deb8776d8 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |     |     | `-DeclRefExpr 0x28deb877690 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |     |     `-IntegerLiteral 0x28deb8776b0 <col:40> 'int' 3
|   |     `-BinaryOperator 0x28deb877900 <col:45, col:72> 'unsigned long long' '*'
|   |       |-ImplicitCastExpr 0x28deb8778e8 <col:45, col:63> 'unsigned long long' <IntegralCast>
|   |       | `-ParenExpr 0x28deb877830 <col:45, col:63> 'widelimb':'int'
|   |       |   `-CStyleCastExpr 0x28deb877808 <col:46, col:62> 'widelimb':'int' <IntegralCast>
|   |       |     `-ImplicitCastExpr 0x28deb8777f0 <col:57, col:62> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |       |       `-ArraySubscriptExpr 0x28deb8777c0 <col:57, col:62> 'const limb':'const unsigned long long' lvalue
|   |       |         |-ImplicitCastExpr 0x28deb8777a8 <col:57> 'const limb *':'const limb *' <LValueToRValue>
|   |       |         | `-DeclRefExpr 0x28deb877760 <col:57> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|   |       |         `-IntegerLiteral 0x28deb877780 <col:61> 'int' 3
|   |       `-ImplicitCastExpr 0x28deb8778d0 <col:67, col:72> 'limb':'unsigned long long' <LValueToRValue>
|   |         `-ArraySubscriptExpr 0x28deb8778b0 <col:67, col:72> 'const limb':'const unsigned long long' lvalue
|   |           |-ImplicitCastExpr 0x28deb877898 <col:67> 'const limb *':'const limb *' <LValueToRValue>
|   |           | `-DeclRefExpr 0x28deb877850 <col:67> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|   |           `-IntegerLiteral 0x28deb877870 <col:71> 'int' 2
|   `-BinaryOperator 0x28deb877bd0 <line:543:5, col:41> 'widelimb':'int' '='
|     |-ArraySubscriptExpr 0x28deb8779d8 <col:5, col:10> 'widelimb':'int' lvalue
|     | |-ImplicitCastExpr 0x28deb8779c0 <col:5> 'widelimb *':'widelimb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb877978 <col:5> 'widelimb *':'widelimb *' lvalue ParmVar 0x28deb8796a0 'out' 'widelimb *':'widelimb *'
|     | `-IntegerLiteral 0x28deb877998 <col:9> 'int' 6
|     `-ImplicitCastExpr 0x28deb877bb8 <col:14, col:41> 'widelimb':'int' <IntegralCast>
|       `-BinaryOperator 0x28deb877b98 <col:14, col:41> 'unsigned long long' '*'
|         |-ImplicitCastExpr 0x28deb877b80 <col:14, col:32> 'unsigned long long' <IntegralCast>
|         | `-ParenExpr 0x28deb877ac8 <col:14, col:32> 'widelimb':'int'
|         |   `-CStyleCastExpr 0x28deb877aa0 <col:15, col:31> 'widelimb':'int' <IntegralCast>
|         |     `-ImplicitCastExpr 0x28deb877a88 <col:26, col:31> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|         |       `-ArraySubscriptExpr 0x28deb877a58 <col:26, col:31> 'const limb':'const unsigned long long' lvalue
|         |         |-ImplicitCastExpr 0x28deb877a40 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|         |         | `-DeclRefExpr 0x28deb8779f8 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879718 'in1' 'const limb *':'const limb *'
|         |         `-IntegerLiteral 0x28deb877a18 <col:30> 'int' 3
|         `-ImplicitCastExpr 0x28deb877b68 <col:36, col:41> 'limb':'unsigned long long' <LValueToRValue>
|           `-ArraySubscriptExpr 0x28deb877b48 <col:36, col:41> 'const limb':'const unsigned long long' lvalue
|             |-ImplicitCastExpr 0x28deb877b30 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|             | `-DeclRefExpr 0x28deb877ae8 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x28deb879790 'in2' 'const limb *':'const limb *'
|             `-IntegerLiteral 0x28deb877b08 <col:40> 'int' 3
|-FunctionDecl 0x28deb877e08 <line:550:1, line:612:1> line:550:13 used felem_reduce 'void (limb *, const widelimb *)' static
| |-ParmVarDecl 0x28deb877c48 <col:26, col:32> col:32 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb877cc0 <col:37, col:53> col:53 used in 'const widelimb *':'const widelimb *'
| `-CompoundStmt 0x28deb8713f0 <line:551:1, line:612:1>
|   |-DeclStmt 0x28deb86a0e0 <line:552:5, line:553:31>
|   | `-VarDecl 0x28deb877ee0 <line:552:5, line:553:30> line:552:27 used two127p15 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x28deb86a0c0 <col:39, line:553:30> 'int' '+'
|   |     |-ParenExpr 0x28deb878010 <line:552:39, col:61> 'widelimb':'int'
|   |     | `-BinaryOperator 0x28deb877ff0 <col:40, col:58> 'widelimb':'int' '<<'
|   |     |   |-ParenExpr 0x28deb877fa8 <col:40, col:53> 'widelimb':'int'
|   |     |   | `-CStyleCastExpr 0x28deb877f80 <col:41, col:52> 'widelimb':'int' <NoOp>
|   |     |   |   `-IntegerLiteral 0x28deb877f48 <col:52> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb877fc8 <col:58> 'int' 127
|   |     `-ParenExpr 0x28deb86a0a0 <line:553:9, col:30> 'widelimb':'int'
|   |       `-BinaryOperator 0x28deb86a080 <col:10, col:28> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x28deb878090 <col:10, col:23> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x28deb878068 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x28deb878030 <col:22> 'int' 1
|   |         `-IntegerLiteral 0x28deb8780b0 <col:28> 'int' 15
|   |-DeclStmt 0x28deb86a360 <line:554:5, line:555:31>
|   | `-VarDecl 0x28deb86a108 <line:554:5, line:555:30> line:554:27 used two127m71 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x28deb86a340 <col:39, line:555:30> 'int' '-'
|   |     |-ParenExpr 0x28deb86a238 <line:554:39, col:61> 'widelimb':'int'
|   |     | `-BinaryOperator 0x28deb86a218 <col:40, col:58> 'widelimb':'int' '<<'
|   |     |   |-ParenExpr 0x28deb86a1d0 <col:40, col:53> 'widelimb':'int'
|   |     |   | `-CStyleCastExpr 0x28deb86a1a8 <col:41, col:52> 'widelimb':'int' <NoOp>
|   |     |   |   `-IntegerLiteral 0x28deb86a170 <col:52> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb86a1f0 <col:58> 'int' 127
|   |     `-ParenExpr 0x28deb86a320 <line:555:9, col:30> 'widelimb':'int'
|   |       `-BinaryOperator 0x28deb86a300 <col:10, col:28> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x28deb86a2b8 <col:10, col:23> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x28deb86a290 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x28deb86a258 <col:22> 'int' 1
|   |         `-IntegerLiteral 0x28deb86a2d8 <col:28> 'int' 71
|   |-DeclStmt 0x28deb86a6e8 <line:556:5, line:557:56>
|   | `-VarDecl 0x28deb86a388 <line:556:5, line:557:55> line:556:27 used two127m71m55 'const widelimb':'const int' static cinit
|   |   `-BinaryOperator 0x28deb86a6c8 <col:42, line:557:55> 'int' '-'
|   |     |-BinaryOperator 0x28deb86a5c0 <line:556:42, line:557:30> 'int' '-'
|   |     | |-ParenExpr 0x28deb86a4b8 <line:556:42, col:64> 'widelimb':'int'
|   |     | | `-BinaryOperator 0x28deb86a498 <col:43, col:61> 'widelimb':'int' '<<'
|   |     | |   |-ParenExpr 0x28deb86a450 <col:43, col:56> 'widelimb':'int'
|   |     | |   | `-CStyleCastExpr 0x28deb86a428 <col:44, col:55> 'widelimb':'int' <NoOp>
|   |     | |   |   `-IntegerLiteral 0x28deb86a3f0 <col:55> 'int' 1
|   |     | |   `-IntegerLiteral 0x28deb86a470 <col:61> 'int' 127
|   |     | `-ParenExpr 0x28deb86a5a0 <line:557:9, col:30> 'widelimb':'int'
|   |     |   `-BinaryOperator 0x28deb86a580 <col:10, col:28> 'widelimb':'int' '<<'
|   |     |     |-ParenExpr 0x28deb86a538 <col:10, col:23> 'widelimb':'int'
|   |     |     | `-CStyleCastExpr 0x28deb86a510 <col:11, col:22> 'widelimb':'int' <NoOp>
|   |     |     |   `-IntegerLiteral 0x28deb86a4d8 <col:22> 'int' 1
|   |     |     `-IntegerLiteral 0x28deb86a558 <col:28> 'int' 71
|   |     `-ParenExpr 0x28deb86a6a8 <col:34, col:55> 'widelimb':'int'
|   |       `-BinaryOperator 0x28deb86a688 <col:35, col:53> 'widelimb':'int' '<<'
|   |         |-ParenExpr 0x28deb86a640 <col:35, col:48> 'widelimb':'int'
|   |         | `-CStyleCastExpr 0x28deb86a618 <col:36, col:47> 'widelimb':'int' <NoOp>
|   |         |   `-IntegerLiteral 0x28deb86a5e0 <col:47> 'int' 1
|   |         `-IntegerLiteral 0x28deb86a660 <col:53> 'int' 55
|   |-DeclStmt 0x28deb86a840 <line:558:5, col:23>
|   | `-VarDecl 0x28deb86a7d8 <col:5, col:22> col:14 used output 'widelimb [5]'
|   |-BinaryOperator 0x28deb86a9f8 <line:561:5, col:25> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb86a8d0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86a8b8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86a858 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86a890 <col:12> 'int' 0
|   | `-BinaryOperator 0x28deb86a9d8 <col:17, col:25> 'int' '+'
|   |   |-ImplicitCastExpr 0x28deb86a9a8 <col:17, col:21> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb86a950 <col:17, col:21> 'const widelimb':'const int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb86a938 <col:17> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x28deb86a8f0 <col:17> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb877cc0 'in' 'const widelimb *':'const widelimb *'
|   |   |   `-IntegerLiteral 0x28deb86a910 <col:20> 'int' 0
|   |   `-ImplicitCastExpr 0x28deb86a9c0 <col:25> 'widelimb':'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x28deb86a970 <col:25> 'const widelimb':'const int' lvalue Var 0x28deb877ee0 'two127p15' 'const widelimb':'const int'
|   |-BinaryOperator 0x28deb86abe8 <line:562:5, col:25> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb86aac0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86aaa8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86aa60 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86aa80 <col:12> 'int' 1
|   | `-BinaryOperator 0x28deb86abc8 <col:17, col:25> 'int' '+'
|   |   |-ImplicitCastExpr 0x28deb86ab98 <col:17, col:21> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb86ab40 <col:17, col:21> 'const widelimb':'const int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb86ab28 <col:17> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x28deb86aae0 <col:17> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb877cc0 'in' 'const widelimb *':'const widelimb *'
|   |   |   `-IntegerLiteral 0x28deb86ab00 <col:20> 'int' 1
|   |   `-ImplicitCastExpr 0x28deb86abb0 <col:25> 'widelimb':'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x28deb86ab60 <col:25> 'const widelimb':'const int' lvalue Var 0x28deb86a388 'two127m71m55' 'const widelimb':'const int'
|   |-BinaryOperator 0x28deb86add8 <line:563:5, col:25> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb86acb0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86ac98 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86ac50 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86ac70 <col:12> 'int' 2
|   | `-BinaryOperator 0x28deb86adb8 <col:17, col:25> 'int' '+'
|   |   |-ImplicitCastExpr 0x28deb86ad88 <col:17, col:21> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb86ad30 <col:17, col:21> 'const widelimb':'const int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb86ad18 <col:17> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x28deb86acd0 <col:17> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb877cc0 'in' 'const widelimb *':'const widelimb *'
|   |   |   `-IntegerLiteral 0x28deb86acf0 <col:20> 'int' 2
|   |   `-ImplicitCastExpr 0x28deb86ada0 <col:25> 'widelimb':'int' <LValueToRValue>
|   |     `-DeclRefExpr 0x28deb86ad50 <col:25> 'const widelimb':'const int' lvalue Var 0x28deb86a108 'two127m71' 'const widelimb':'const int'
|   |-BinaryOperator 0x28deb86af58 <line:564:5, col:21> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb86aea0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86ae88 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86ae40 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86ae60 <col:12> 'int' 3
|   | `-ImplicitCastExpr 0x28deb86af40 <col:17, col:21> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb86af20 <col:17, col:21> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x28deb86af08 <col:17> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb86aec0 <col:17> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb877cc0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x28deb86aee0 <col:20> 'int' 3
|   |-BinaryOperator 0x28deb86b090 <line:565:5, col:21> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb86afd8 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86afc0 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86af78 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86af98 <col:12> 'int' 4
|   | `-ImplicitCastExpr 0x28deb86b078 <col:17, col:21> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb86b058 <col:17, col:21> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x28deb86b040 <col:17> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb86aff8 <col:17> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb877cc0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x28deb86b018 <col:20> 'int' 4
|   |-CompoundAssignOperator 0x28deb86b210 <line:568:5, col:27> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb86b110 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86b0f8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86b0b0 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86b0d0 <col:12> 'int' 4
|   | `-BinaryOperator 0x28deb86b1f0 <col:18, col:27> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x28deb86b1d8 <col:18, col:22> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb86b190 <col:18, col:22> 'const widelimb':'const int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb86b178 <col:18> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x28deb86b130 <col:18> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb877cc0 'in' 'const widelimb *':'const widelimb *'
|   |   |   `-IntegerLiteral 0x28deb86b150 <col:21> 'int' 6
|   |   `-IntegerLiteral 0x28deb86b1b0 <col:27> 'int' 16
|   |-CompoundAssignOperator 0x28deb86b408 <line:569:5, col:38> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb86b2a0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86b288 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86b240 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86b260 <col:12> 'int' 3
|   | `-BinaryOperator 0x28deb86b3e8 <col:18, col:38> 'int' '<<'
|   |   |-ParenExpr 0x28deb86b3a0 <col:18, col:33> 'int'
|   |   | `-BinaryOperator 0x28deb86b380 <col:19, col:27> 'int' '&'
|   |   |   |-ImplicitCastExpr 0x28deb86b368 <col:19, col:23> 'widelimb':'int' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x28deb86b320 <col:19, col:23> 'const widelimb':'const int' lvalue
|   |   |   |   |-ImplicitCastExpr 0x28deb86b308 <col:19> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x28deb86b2c0 <col:19> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb877cc0 'in' 'const widelimb *':'const widelimb *'
|   |   |   |   `-IntegerLiteral 0x28deb86b2e0 <col:22> 'int' 6
|   |   |   `-IntegerLiteral 0x28deb86b340 <col:27> 'int' 65535
|   |   `-IntegerLiteral 0x28deb86b3c0 <col:38> 'int' 40
|   |-CompoundAssignOperator 0x28deb86b550 <line:570:5, col:22> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb86b498 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86b480 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86b438 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86b458 <col:12> 'int' 2
|   | `-ImplicitCastExpr 0x28deb86b538 <col:18, col:22> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb86b518 <col:18, col:22> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x28deb86b500 <col:18> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb86b4b8 <col:18> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb877cc0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x28deb86b4d8 <col:21> 'int' 6
|   |-CompoundAssignOperator 0x28deb86b6e0 <line:572:5, col:27> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb86b5e0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86b5c8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86b580 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86b5a0 <col:12> 'int' 3
|   | `-BinaryOperator 0x28deb86b6c0 <col:18, col:27> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x28deb86b6a8 <col:18, col:22> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb86b660 <col:18, col:22> 'const widelimb':'const int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb86b648 <col:18> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x28deb86b600 <col:18> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb877cc0 'in' 'const widelimb *':'const widelimb *'
|   |   |   `-IntegerLiteral 0x28deb86b620 <col:21> 'int' 5
|   |   `-IntegerLiteral 0x28deb86b680 <col:27> 'int' 16
|   |-CompoundAssignOperator 0x28deb86b8d8 <line:573:5, col:38> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb86b770 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86b758 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86b710 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86b730 <col:12> 'int' 2
|   | `-BinaryOperator 0x28deb86b8b8 <col:18, col:38> 'int' '<<'
|   |   |-ParenExpr 0x28deb86b870 <col:18, col:33> 'int'
|   |   | `-BinaryOperator 0x28deb86b850 <col:19, col:27> 'int' '&'
|   |   |   |-ImplicitCastExpr 0x28deb86b838 <col:19, col:23> 'widelimb':'int' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x28deb86b7f0 <col:19, col:23> 'const widelimb':'const int' lvalue
|   |   |   |   |-ImplicitCastExpr 0x28deb86b7d8 <col:19> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x28deb86b790 <col:19> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb877cc0 'in' 'const widelimb *':'const widelimb *'
|   |   |   |   `-IntegerLiteral 0x28deb86b7b0 <col:22> 'int' 5
|   |   |   `-IntegerLiteral 0x28deb86b810 <col:27> 'int' 65535
|   |   `-IntegerLiteral 0x28deb86b890 <col:38> 'int' 40
|   |-CompoundAssignOperator 0x28deb86ba20 <line:574:5, col:22> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb86b968 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86b950 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86b908 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86b928 <col:12> 'int' 1
|   | `-ImplicitCastExpr 0x28deb86ba08 <col:18, col:22> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb86b9e8 <col:18, col:22> 'const widelimb':'const int' lvalue
|   |     |-ImplicitCastExpr 0x28deb86b9d0 <col:18> 'const widelimb *':'const widelimb *' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb86b988 <col:18> 'const widelimb *':'const widelimb *' lvalue ParmVar 0x28deb877cc0 'in' 'const widelimb *':'const widelimb *'
|   |     `-IntegerLiteral 0x28deb86b9a8 <col:21> 'int' 5
|   |-CompoundAssignOperator 0x28deb86bbb0 <line:576:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb86bab0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86ba98 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86ba50 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86ba70 <col:12> 'int' 2
|   | `-BinaryOperator 0x28deb86bb90 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x28deb86bb78 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb86bb30 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb86bb18 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x28deb86bad0 <col:18> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x28deb86baf0 <col:25> 'int' 4
|   |   `-IntegerLiteral 0x28deb86bb50 <col:31> 'int' 16
|   |-CompoundAssignOperator 0x28deb86bda8 <line:577:5, col:42> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb86bc40 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86bc28 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86bbe0 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86bc00 <col:12> 'int' 1
|   | `-BinaryOperator 0x28deb86bd88 <col:18, col:42> 'int' '<<'
|   |   |-ParenExpr 0x28deb86bd40 <col:18, col:37> 'int'
|   |   | `-BinaryOperator 0x28deb86bd20 <col:19, col:31> 'int' '&'
|   |   |   |-ImplicitCastExpr 0x28deb86bd08 <col:19, col:27> 'widelimb':'int' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x28deb86bcc0 <col:19, col:27> 'widelimb':'int' lvalue
|   |   |   |   |-ImplicitCastExpr 0x28deb86bca8 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x28deb86bc60 <col:19> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |   |   |   `-IntegerLiteral 0x28deb86bc80 <col:26> 'int' 4
|   |   |   `-IntegerLiteral 0x28deb86bce0 <col:31> 'int' 65535
|   |   `-IntegerLiteral 0x28deb86bd60 <col:42> 'int' 40
|   |-CompoundAssignOperator 0x28deb86bef0 <line:578:5, col:26> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb86be38 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86be20 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86bdd8 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86bdf8 <col:12> 'int' 0
|   | `-ImplicitCastExpr 0x28deb86bed8 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb86beb8 <col:18, col:26> 'widelimb':'int' lvalue
|   |     |-ImplicitCastExpr 0x28deb86bea0 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb86be58 <col:18> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |     `-IntegerLiteral 0x28deb86be78 <col:25> 'int' 4
|   |-CompoundAssignOperator 0x28deb8700b0 <line:581:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb86bf80 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb86bf68 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86bf20 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb86bf40 <col:12> 'int' 3
|   | `-BinaryOperator 0x28deb86c060 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x28deb86c048 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb86c000 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb86bfe8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x28deb86bfa0 <col:18> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x28deb86bfc0 <col:25> 'int' 2
|   |   `-IntegerLiteral 0x28deb86c020 <col:31> 'int' 56
|   |-CompoundAssignOperator 0x28deb870188 <line:582:5, col:18> 'widelimb':'int' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb870140 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb870128 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb8700e0 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb870100 <col:12> 'int' 2
|   | `-IntegerLiteral 0x28deb870160 <col:18> 'long long' 72057594037927935
|   |-BinaryOperator 0x28deb870318 <line:584:5, col:30> 'widelimb':'int' '='
|   | |-ArraySubscriptExpr 0x28deb870218 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb870200 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb8701b8 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb8701d8 <col:12> 'int' 4
|   | `-BinaryOperator 0x28deb8702f8 <col:17, col:30> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x28deb8702e0 <col:17, col:25> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb870298 <col:17, col:25> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb870280 <col:17> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x28deb870238 <col:17> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x28deb870258 <col:24> 'int' 3
|   |   `-IntegerLiteral 0x28deb8702b8 <col:30> 'int' 56
|   |-CompoundAssignOperator 0x28deb8703e0 <line:585:5, col:18> 'widelimb':'int' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb870398 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb870380 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb870338 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb870358 <col:12> 'int' 3
|   | `-IntegerLiteral 0x28deb8703b8 <col:18> 'long long' 72057594037927935
|   |-CompoundAssignOperator 0x28deb870570 <line:590:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb870470 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb870458 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb870410 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb870430 <col:12> 'int' 2
|   | `-BinaryOperator 0x28deb870550 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x28deb870538 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb8704f0 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb8704d8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x28deb870490 <col:18> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x28deb8704b0 <col:25> 'int' 4
|   |   `-IntegerLiteral 0x28deb870510 <col:31> 'int' 16
|   |-CompoundAssignOperator 0x28deb870768 <line:592:5, col:42> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb870600 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb8705e8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb8705a0 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb8705c0 <col:12> 'int' 1
|   | `-BinaryOperator 0x28deb870748 <col:18, col:42> 'int' '<<'
|   |   |-ParenExpr 0x28deb870700 <col:18, col:37> 'int'
|   |   | `-BinaryOperator 0x28deb8706e0 <col:19, col:31> 'int' '&'
|   |   |   |-ImplicitCastExpr 0x28deb8706c8 <col:19, col:27> 'widelimb':'int' <LValueToRValue>
|   |   |   | `-ArraySubscriptExpr 0x28deb870680 <col:19, col:27> 'widelimb':'int' lvalue
|   |   |   |   |-ImplicitCastExpr 0x28deb870668 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x28deb870620 <col:19> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |   |   |   `-IntegerLiteral 0x28deb870640 <col:26> 'int' 4
|   |   |   `-IntegerLiteral 0x28deb8706a0 <col:31> 'int' 65535
|   |   `-IntegerLiteral 0x28deb870720 <col:42> 'int' 40
|   |-CompoundAssignOperator 0x28deb8708b0 <line:593:5, col:26> 'widelimb':'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb8707f8 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb8707e0 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb870798 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb8707b8 <col:12> 'int' 0
|   | `-ImplicitCastExpr 0x28deb870898 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   `-ArraySubscriptExpr 0x28deb870878 <col:18, col:26> 'widelimb':'int' lvalue
|   |     |-ImplicitCastExpr 0x28deb870860 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb870818 <col:18> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |     `-IntegerLiteral 0x28deb870838 <col:25> 'int' 4
|   |-CompoundAssignOperator 0x28deb870a40 <line:596:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb870940 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb870928 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb8708e0 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb870900 <col:12> 'int' 1
|   | `-BinaryOperator 0x28deb870a20 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x28deb870a08 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb8709c0 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb8709a8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x28deb870960 <col:18> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x28deb870980 <col:25> 'int' 0
|   |   `-IntegerLiteral 0x28deb8709e0 <col:31> 'int' 56
|   |-BinaryOperator 0x28deb870c00 <line:597:5, col:26> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb870ad0 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb870ab8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb870a70 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb877c48 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb870a90 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb870be8 <col:14, col:26> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x28deb870bc8 <col:14, col:26> 'long long' '&'
|   |     |-ImplicitCastExpr 0x28deb870bb0 <col:14, col:22> 'long long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x28deb870b98 <col:14, col:22> 'widelimb':'int' <LValueToRValue>
|   |     |   `-ArraySubscriptExpr 0x28deb870b50 <col:14, col:22> 'widelimb':'int' lvalue
|   |     |     |-ImplicitCastExpr 0x28deb870b38 <col:14> 'widelimb *' <ArrayToPointerDecay>
|   |     |     | `-DeclRefExpr 0x28deb870af0 <col:14> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |     |     `-IntegerLiteral 0x28deb870b10 <col:21> 'int' 0
|   |     `-IntegerLiteral 0x28deb870b70 <col:26> 'long long' 72057594037927935
|   |-CompoundAssignOperator 0x28deb870d80 <line:599:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb870c80 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb870c68 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb870c20 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb870c40 <col:12> 'int' 2
|   | `-BinaryOperator 0x28deb870d60 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x28deb870d48 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb870d00 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb870ce8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x28deb870ca0 <col:18> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x28deb870cc0 <col:25> 'int' 1
|   |   `-IntegerLiteral 0x28deb870d20 <col:31> 'int' 56
|   |-BinaryOperator 0x28deb870f40 <line:601:5, col:26> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb870e10 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb870df8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb870db0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb877c48 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb870dd0 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb870f28 <col:14, col:26> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x28deb870f08 <col:14, col:26> 'long long' '&'
|   |     |-ImplicitCastExpr 0x28deb870ef0 <col:14, col:22> 'long long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x28deb870ed8 <col:14, col:22> 'widelimb':'int' <LValueToRValue>
|   |     |   `-ArraySubscriptExpr 0x28deb870e90 <col:14, col:22> 'widelimb':'int' lvalue
|   |     |     |-ImplicitCastExpr 0x28deb870e78 <col:14> 'widelimb *' <ArrayToPointerDecay>
|   |     |     | `-DeclRefExpr 0x28deb870e30 <col:14> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |     |     `-IntegerLiteral 0x28deb870e50 <col:21> 'int' 1
|   |     `-IntegerLiteral 0x28deb870eb0 <col:26> 'long long' 72057594037927935
|   |-CompoundAssignOperator 0x28deb8710c0 <line:602:5, col:31> 'widelimb':'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   | |-ArraySubscriptExpr 0x28deb870fc0 <col:5, col:13> 'widelimb':'int' lvalue
|   | | |-ImplicitCastExpr 0x28deb870fa8 <col:5> 'widelimb *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb870f60 <col:5> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   | | `-IntegerLiteral 0x28deb870f80 <col:12> 'int' 3
|   | `-BinaryOperator 0x28deb8710a0 <col:18, col:31> 'widelimb':'int' '>>'
|   |   |-ImplicitCastExpr 0x28deb871088 <col:18, col:26> 'widelimb':'int' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb871040 <col:18, col:26> 'widelimb':'int' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb871028 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x28deb870fe0 <col:18> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |   |   `-IntegerLiteral 0x28deb871000 <col:25> 'int' 2
|   |   `-IntegerLiteral 0x28deb871060 <col:31> 'int' 56
|   |-BinaryOperator 0x28deb871280 <line:604:5, col:26> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb871150 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb871138 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb8710f0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb877c48 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb871110 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb871268 <col:14, col:26> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x28deb871248 <col:14, col:26> 'long long' '&'
|   |     |-ImplicitCastExpr 0x28deb871230 <col:14, col:22> 'long long' <IntegralCast>
|   |     | `-ImplicitCastExpr 0x28deb871218 <col:14, col:22> 'widelimb':'int' <LValueToRValue>
|   |     |   `-ArraySubscriptExpr 0x28deb8711d0 <col:14, col:22> 'widelimb':'int' lvalue
|   |     |     |-ImplicitCastExpr 0x28deb8711b8 <col:14> 'widelimb *' <ArrayToPointerDecay>
|   |     |     | `-DeclRefExpr 0x28deb871170 <col:14> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|   |     |     `-IntegerLiteral 0x28deb871190 <col:21> 'int' 2
|   |     `-IntegerLiteral 0x28deb8711f0 <col:26> 'long long' 72057594037927935
|   `-BinaryOperator 0x28deb8713d0 <line:611:5, col:22> 'limb':'unsigned long long' '='
|     |-ArraySubscriptExpr 0x28deb871300 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x28deb8712e8 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb8712a0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb877c48 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x28deb8712c0 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x28deb8713b8 <col:14, col:22> 'limb':'unsigned long long' <IntegralCast>
|       `-ImplicitCastExpr 0x28deb8713a0 <col:14, col:22> 'widelimb':'int' <LValueToRValue>
|         `-ArraySubscriptExpr 0x28deb871380 <col:14, col:22> 'widelimb':'int' lvalue
|           |-ImplicitCastExpr 0x28deb871368 <col:14> 'widelimb *' <ArrayToPointerDecay>
|           | `-DeclRefExpr 0x28deb871320 <col:14> 'widelimb [5]' lvalue Var 0x28deb86a7d8 'output' 'widelimb [5]'
|           `-IntegerLiteral 0x28deb871340 <col:21> 'int' 3
|-FunctionDecl 0x28deb871650 <line:614:1, line:619:1> line:614:13 used felem_square_reduce 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x28deb871510 <col:33, col:39> col:39 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb871588 <col:44, col:56> col:56 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb871a38 <line:615:1, line:619:1>
|   |-DeclStmt 0x28deb871790 <line:616:5, col:18>
|   | `-VarDecl 0x28deb871728 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb871890 <line:617:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x28deb871878 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8717a8 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb8718c0 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8717c8 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb871728 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb8718d8 <col:23> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb871800 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x28deb871588 'in' 'const limb *':'const limb *'
|   `-CallExpr 0x28deb8719c0 <line:618:5, col:26> 'void'
|     |-ImplicitCastExpr 0x28deb8719a8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x28deb8718f0 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|     |-ImplicitCastExpr 0x28deb8719f0 <col:18> 'limb *':'limb *' <LValueToRValue>
|     | `-DeclRefExpr 0x28deb871910 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb871510 'out' 'limb *':'limb *'
|     `-ImplicitCastExpr 0x28deb871a20 <col:23> 'const widelimb *':'const widelimb *' <NoOp>
|       `-ImplicitCastExpr 0x28deb871a08 <col:23> 'widelimb *' <ArrayToPointerDecay>
|         `-DeclRefExpr 0x28deb871930 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x28deb871728 'tmp' 'widefelem':'widelimb [7]'
|-FunctionDecl 0x28deb871cc8 <line:621:1, line:626:1> line:621:13 used felem_mul_reduce 'void (limb *, const limb *, const limb *)' static
| |-ParmVarDecl 0x28deb871a70 <col:30, col:36> col:36 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb871ae8 <col:41, col:53> col:53 used in1 'const limb *':'const limb *'
| |-ParmVarDecl 0x28deb871b60 <col:58, col:70> col:70 used in2 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb86c090 <line:622:1, line:626:1>
|   |-DeclStmt 0x28deb871e10 <line:623:5, col:18>
|   | `-VarDecl 0x28deb871da8 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb871f30 <line:624:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb871f18 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb871e28 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb871f68 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb871e48 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb871da8 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb871f80 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb871e80 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x28deb871ae8 'in1' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x28deb871f98 <col:25> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb871ea0 <col:25> 'const limb *':'const limb *' lvalue ParmVar 0x28deb871b60 'in2' 'const limb *':'const limb *'
|   `-CallExpr 0x28deb872028 <line:625:5, col:26> 'void'
|     |-ImplicitCastExpr 0x28deb872010 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x28deb871fb0 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|     |-ImplicitCastExpr 0x28deb872058 <col:18> 'limb *':'limb *' <LValueToRValue>
|     | `-DeclRefExpr 0x28deb871fd0 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb871a70 'out' 'limb *':'limb *'
|     `-ImplicitCastExpr 0x28deb872088 <col:23> 'const widelimb *':'const widelimb *' <NoOp>
|       `-ImplicitCastExpr 0x28deb872070 <col:23> 'widelimb *' <ArrayToPointerDecay>
|         `-DeclRefExpr 0x28deb871ff0 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x28deb871da8 'tmp' 'widefelem':'widelimb [7]'
|-FunctionDecl 0x28deb86c208 <line:632:1, line:682:1> line:632:13 used felem_contract 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x28deb86c0c8 <col:28, col:34> col:34 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb86c140 <col:39, col:51> col:51 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb87ad40 <line:633:1, line:682:1>
|   |-DeclStmt 0x28deb86c448 <line:634:5, col:50>
|   | `-VarDecl 0x28deb86c300 <col:5, col:48> col:26 used two56 'const int64_t':'const long long' static cinit
|   |   `-ImplicitCastExpr 0x28deb86c430 <col:34, col:48> 'int64_t':'long long' <IntegralCast>
|   |     `-BinaryOperator 0x28deb86c410 <col:34, col:48> 'limb':'unsigned long long' '<<'
|   |       |-ParenExpr 0x28deb86c3c8 <col:34, col:43> 'limb':'unsigned long long'
|   |       | `-CStyleCastExpr 0x28deb86c3a0 <col:35, col:42> 'limb':'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x28deb86c368 <col:42> 'int' 1
|   |       `-IntegerLiteral 0x28deb86c3e8 <col:48> 'int' 56
|   |-DeclStmt 0x28deb86c630 <line:637:5, col:22>
|   | |-VarDecl 0x28deb86c538 <col:5, col:18> col:13 used tmp 'int64_t [4]'
|   | `-VarDecl 0x28deb86c5b0 <col:5, col:21> col:21 used a 'int64_t':'long long'
|   |-BinaryOperator 0x28deb86c7f0 <line:638:5, col:18> 'int64_t':'long long' '='
|   | |-ArraySubscriptExpr 0x28deb86c720 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86c708 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86c648 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86c680 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb86c7d8 <col:14, col:18> 'int64_t':'long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x28deb86c7c0 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb86c7a0 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb86c788 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x28deb86c740 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x28deb86c140 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x28deb86c760 <col:17> 'int' 0
|   |-BinaryOperator 0x28deb86c940 <line:639:5, col:18> 'int64_t':'long long' '='
|   | |-ArraySubscriptExpr 0x28deb86c870 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86c858 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86c810 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86c830 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb86c928 <col:14, col:18> 'int64_t':'long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x28deb86c910 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb86c8f0 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb86c8d8 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x28deb86c890 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x28deb86c140 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x28deb86c8b0 <col:17> 'int' 1
|   |-BinaryOperator 0x28deb86ca90 <line:640:5, col:18> 'int64_t':'long long' '='
|   | |-ArraySubscriptExpr 0x28deb86c9c0 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86c9a8 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86c960 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86c980 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb86ca78 <col:14, col:18> 'int64_t':'long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x28deb86ca60 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb86ca40 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb86ca28 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x28deb86c9e0 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x28deb86c140 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x28deb86ca00 <col:17> 'int' 2
|   |-BinaryOperator 0x28deb86cbe0 <line:641:5, col:18> 'int64_t':'long long' '='
|   | |-ArraySubscriptExpr 0x28deb86cb10 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86caf8 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86cab0 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86cad0 <col:9> 'int' 3
|   | `-ImplicitCastExpr 0x28deb86cbc8 <col:14, col:18> 'int64_t':'long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x28deb86cbb0 <col:14, col:18> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb86cb90 <col:14, col:18> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb86cb78 <col:14> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x28deb86cb30 <col:14> 'const limb *':'const limb *' lvalue ParmVar 0x28deb86c140 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x28deb86cb50 <col:17> 'int' 3
|   |-BinaryOperator 0x28deb86cd50 <line:643:5, col:21> 'int64_t':'long long' '='
|   | |-DeclRefExpr 0x28deb86cc00 <col:5> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   | `-ImplicitCastExpr 0x28deb86cd38 <col:9, col:21> 'int64_t':'long long' <IntegralCast>
|   |   `-ParenExpr 0x28deb86cd18 <col:9, col:21> 'limb':'unsigned long long'
|   |     `-BinaryOperator 0x28deb86ccf8 <col:10, col:19> 'limb':'unsigned long long' '>>'
|   |       |-ImplicitCastExpr 0x28deb86cce0 <col:10, col:14> 'limb':'unsigned long long' <LValueToRValue>
|   |       | `-ArraySubscriptExpr 0x28deb86cc98 <col:10, col:14> 'const limb':'const unsigned long long' lvalue
|   |       |   |-ImplicitCastExpr 0x28deb86cc80 <col:10> 'const limb *':'const limb *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x28deb86cc38 <col:10> 'const limb *':'const limb *' lvalue ParmVar 0x28deb86c140 'in' 'const limb *':'const limb *'
|   |       |   `-IntegerLiteral 0x28deb86cc58 <col:13> 'int' 3
|   |       `-IntegerLiteral 0x28deb86ccb8 <col:19> 'int' 56
|   |-CompoundAssignOperator 0x28deb86ce28 <line:644:5, col:15> 'int64_t':'long long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb86cdd0 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86cdb8 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86cd70 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86cd90 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb86ce10 <col:15> 'int64_t':'long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb86cdf0 <col:15> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   |-CompoundAssignOperator 0x28deb86cf58 <line:645:5, col:20> 'int64_t':'long long' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb86ceb8 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86cea0 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86ce58 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86ce78 <col:9> 'int' 1
|   | `-BinaryOperator 0x28deb86cf38 <col:15, col:20> 'int64_t':'long long' '<<'
|   |   |-ImplicitCastExpr 0x28deb86cf20 <col:15> 'int64_t':'long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28deb86ced8 <col:15> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   |   `-IntegerLiteral 0x28deb86cef8 <col:20> 'int' 40
|   |-CompoundAssignOperator 0x28deb86d030 <line:646:5, col:15> 'int64_t':'long long' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb86cfe8 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86cfd0 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86cf88 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86cfa8 <col:9> 'int' 3
|   | `-IntegerLiteral 0x28deb86d008 <col:15> 'long long' 72057594037927935
|   |-BinaryOperator 0x28deb86d728 <line:651:5, line:652:70> 'int64_t':'long long' '='
|   | |-DeclRefExpr 0x28deb86d060 <line:651:5> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   | `-ImplicitCastExpr 0x28deb86d710 <col:9, line:652:70> 'int64_t':'long long' <IntegralCast>
|   |   `-BinaryOperator 0x28deb86d6f0 <line:651:9, line:652:70> 'unsigned long long' '|'
|   |     |-ParenExpr 0x28deb86d388 <line:651:9, col:60> 'unsigned long long'
|   |     | `-BinaryOperator 0x28deb86d368 <col:10, col:59> 'unsigned long long' '+'
|   |     |   |-ParenExpr 0x28deb86d308 <col:10, col:55> 'unsigned long long'
|   |     |   | `-BinaryOperator 0x28deb86d2e8 <col:11, col:54> 'unsigned long long' '&'
|   |     |   |   |-BinaryOperator 0x28deb86d1b0 <col:11, col:23> 'unsigned long long' '&'
|   |     |   |   | |-ImplicitCastExpr 0x28deb86d180 <col:11, col:15> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   |   | | `-ArraySubscriptExpr 0x28deb86d0e0 <col:11, col:15> 'const limb':'const unsigned long long' lvalue
|   |     |   |   | |   |-ImplicitCastExpr 0x28deb86d0c8 <col:11> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |   | |   | `-DeclRefExpr 0x28deb86d080 <col:11> 'const limb *':'const limb *' lvalue ParmVar 0x28deb86c140 'in' 'const limb *':'const limb *'
|   |     |   |   | |   `-IntegerLiteral 0x28deb86d0a0 <col:14> 'int' 3
|   |     |   |   | `-ImplicitCastExpr 0x28deb86d198 <col:19, col:23> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   |   |   `-ArraySubscriptExpr 0x28deb86d160 <col:19, col:23> 'const limb':'const unsigned long long' lvalue
|   |     |   |   |     |-ImplicitCastExpr 0x28deb86d148 <col:19> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |   |     | `-DeclRefExpr 0x28deb86d100 <col:19> 'const limb *':'const limb *' lvalue ParmVar 0x28deb86c140 'in' 'const limb *':'const limb *'
|   |     |   |   |     `-IntegerLiteral 0x28deb86d120 <col:22> 'int' 2
|   |     |   |   `-ParenExpr 0x28deb86d2c8 <col:27, col:54> 'unsigned long long'
|   |     |   |     `-BinaryOperator 0x28deb86d2a8 <col:28, col:36> 'unsigned long long' '|'
|   |     |   |       |-ImplicitCastExpr 0x28deb86d278 <col:28, col:32> 'limb':'unsigned long long' <LValueToRValue>
|   |     |   |       | `-ArraySubscriptExpr 0x28deb86d230 <col:28, col:32> 'const limb':'const unsigned long long' lvalue
|   |     |   |       |   |-ImplicitCastExpr 0x28deb86d218 <col:28> 'const limb *':'const limb *' <LValueToRValue>
|   |     |   |       |   | `-DeclRefExpr 0x28deb86d1d0 <col:28> 'const limb *':'const limb *' lvalue ParmVar 0x28deb86c140 'in' 'const limb *':'const limb *'
|   |     |   |       |   `-IntegerLiteral 0x28deb86d1f0 <col:31> 'int' 1
|   |     |   |       `-ImplicitCastExpr 0x28deb86d290 <col:36> 'unsigned long long' <IntegralCast>
|   |     |   |         `-IntegerLiteral 0x28deb86d250 <col:36> 'long long' 1099511627775
|   |     |   `-ImplicitCastExpr 0x28deb86d350 <col:59> 'unsigned long long' <IntegralCast>
|   |     |     `-IntegerLiteral 0x28deb86d328 <col:59> 'int' 1
|   |     `-ImplicitCastExpr 0x28deb86d6d8 <line:652:9, col:70> 'unsigned long long' <IntegralCast>
|   |       `-ParenExpr 0x28deb86d6b8 <col:9, col:70> 'long long'
|   |         `-BinaryOperator 0x28deb86d698 <col:10, col:68> 'long long' '>>'
|   |           |-ParenExpr 0x28deb86d650 <col:10, col:63> 'long long'
|   |           | `-BinaryOperator 0x28deb86d630 <col:11, col:62> 'long long' '-'
|   |           |   |-CStyleCastExpr 0x28deb86d5c8 <col:11, col:58> 'int64_t':'long long' <IntegralCast>
|   |           |   | `-ParenExpr 0x28deb86d5a8 <col:21, col:58> 'unsigned long long'
|   |           |   |   `-BinaryOperator 0x28deb86d558 <col:22, col:57> 'unsigned long long' '+'
|   |           |   |     |-ImplicitCastExpr 0x28deb86d540 <col:22, col:26> 'limb':'unsigned long long' <LValueToRValue>
|   |           |   |     | `-ArraySubscriptExpr 0x28deb86d408 <col:22, col:26> 'const limb':'const unsigned long long' lvalue
|   |           |   |     |   |-ImplicitCastExpr 0x28deb86d3f0 <col:22> 'const limb *':'const limb *' <LValueToRValue>
|   |           |   |     |   | `-DeclRefExpr 0x28deb86d3a8 <col:22> 'const limb *':'const limb *' lvalue ParmVar 0x28deb86c140 'in' 'const limb *':'const limb *'
|   |           |   |     |   `-IntegerLiteral 0x28deb86d3c8 <col:25> 'int' 0
|   |           |   |     `-ParenExpr 0x28deb86d520 <col:30, col:57> 'unsigned long long'
|   |           |   |       `-BinaryOperator 0x28deb86d500 <col:31, col:39> 'unsigned long long' '&'
|   |           |   |         |-ImplicitCastExpr 0x28deb86d4d0 <col:31, col:35> 'limb':'unsigned long long' <LValueToRValue>
|   |           |   |         | `-ArraySubscriptExpr 0x28deb86d488 <col:31, col:35> 'const limb':'const unsigned long long' lvalue
|   |           |   |         |   |-ImplicitCastExpr 0x28deb86d470 <col:31> 'const limb *':'const limb *' <LValueToRValue>
|   |           |   |         |   | `-DeclRefExpr 0x28deb86d428 <col:31> 'const limb *':'const limb *' lvalue ParmVar 0x28deb86c140 'in' 'const limb *':'const limb *'
|   |           |   |         |   `-IntegerLiteral 0x28deb86d448 <col:34> 'int' 1
|   |           |   |         `-ImplicitCastExpr 0x28deb86d4e8 <col:39> 'unsigned long long' <IntegralCast>
|   |           |   |           `-IntegerLiteral 0x28deb86d4a8 <col:39> 'long long' 1099511627775
|   |           |   `-ImplicitCastExpr 0x28deb86d618 <col:62> 'long long' <IntegralCast>
|   |           |     `-IntegerLiteral 0x28deb86d5f0 <col:62> 'int' 1
|   |           `-IntegerLiteral 0x28deb86d670 <col:68> 'int' 63
|   |-CompoundAssignOperator 0x28deb86d790 <line:653:5, col:10> 'int64_t':'long long' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-DeclRefExpr 0x28deb86d748 <col:5> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   | `-IntegerLiteral 0x28deb86d768 <col:10> 'long long' 72057594037927935
|   |-BinaryOperator 0x28deb86d8e0 <line:655:5, col:20> 'int64_t':'long long' '='
|   | |-DeclRefExpr 0x28deb86d7c0 <col:5> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   | `-BinaryOperator 0x28deb86d8c0 <col:9, col:20> 'long long' '>>'
|   |   |-ParenExpr 0x28deb86d878 <col:9, col:15> 'long long'
|   |   | `-BinaryOperator 0x28deb86d858 <col:10, col:14> 'long long' '-'
|   |   |   |-ImplicitCastExpr 0x28deb86d828 <col:10> 'int64_t':'long long' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x28deb86d7e0 <col:10> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   |   |   `-ImplicitCastExpr 0x28deb86d840 <col:14> 'long long' <IntegralCast>
|   |   |     `-IntegerLiteral 0x28deb86d800 <col:14> 'int' 1
|   |   `-IntegerLiteral 0x28deb86d898 <col:20> 'int' 63
|   |-CompoundAssignOperator 0x28deb86da18 <line:657:5, col:19> 'int64_t':'long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb86d960 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86d948 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86d900 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86d920 <col:9> 'int' 3
|   | `-BinaryOperator 0x28deb86d9f8 <col:15, col:19> 'unsigned long long' '^'
|   |   |-ImplicitCastExpr 0x28deb86d9e0 <col:15> 'unsigned long long' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x28deb86d9c8 <col:15> 'int64_t':'long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28deb86d980 <col:15> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   |   `-IntegerLiteral 0x28deb86d9a0 <col:19> 'unsigned long long' 18446744073709551615
|   |-CompoundAssignOperator 0x28deb86db60 <line:658:5, col:19> 'int64_t':'long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb86daa8 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86da90 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86da48 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86da68 <col:9> 'int' 2
|   | `-BinaryOperator 0x28deb86db40 <col:15, col:19> 'unsigned long long' '^'
|   |   |-ImplicitCastExpr 0x28deb86db28 <col:15> 'unsigned long long' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x28deb86db10 <col:15> 'int64_t':'long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28deb86dac8 <col:15> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   |   `-IntegerLiteral 0x28deb86dae8 <col:19> 'unsigned long long' 18446744073709551615
|   |-CompoundAssignOperator 0x28deb86dd28 <line:659:5, col:42> 'int64_t':'long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   | |-ArraySubscriptExpr 0x28deb86dbf0 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86dbd8 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86db90 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86dbb0 <col:9> 'int' 1
|   | `-BinaryOperator 0x28deb86dd08 <col:15, col:42> 'unsigned long long' '|'
|   |   |-ParenExpr 0x28deb86dca8 <col:15, col:38> 'unsigned long long'
|   |   | `-BinaryOperator 0x28deb86dc88 <col:16, col:20> 'unsigned long long' '^'
|   |   |   |-ImplicitCastExpr 0x28deb86dc70 <col:16> 'unsigned long long' <IntegralCast>
|   |   |   | `-ImplicitCastExpr 0x28deb86dc58 <col:16> 'int64_t':'long long' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x28deb86dc10 <col:16> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   |   |   `-IntegerLiteral 0x28deb86dc30 <col:20> 'unsigned long long' 18446744073709551615
|   |   `-ImplicitCastExpr 0x28deb86dcf0 <col:42> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x28deb86dcc8 <col:42> 'long long' 1099511627775
|   |-CompoundAssignOperator 0x28deb86de70 <line:660:5, col:19> 'int64_t':'long long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb86ddb8 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86dda0 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86dd58 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86dd78 <col:9> 'int' 0
|   | `-BinaryOperator 0x28deb86de50 <col:15, col:19> 'long long' '&'
|   |   |-ImplicitCastExpr 0x28deb86de38 <col:15> 'long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x28deb86ddd8 <col:15> 'int' 1
|   |   `-ImplicitCastExpr 0x28deb86de20 <col:19> 'int64_t':'long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x28deb86de00 <col:19> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   |-BinaryOperator 0x28deb86dfa0 <line:666:5, col:19> 'int64_t':'long long' '='
|   | |-DeclRefExpr 0x28deb86dea0 <col:5> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   | `-BinaryOperator 0x28deb86df80 <col:9, col:19> 'int64_t':'long long' '>>'
|   |   |-ImplicitCastExpr 0x28deb86df68 <col:9, col:14> 'int64_t':'long long' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb86df20 <col:9, col:14> 'int64_t':'long long' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb86df08 <col:9> 'int64_t *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x28deb86dec0 <col:9> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   |   |   `-IntegerLiteral 0x28deb86dee0 <col:13> 'int' 0
|   |   `-IntegerLiteral 0x28deb86df40 <col:19> 'int' 63
|   |-CompoundAssignOperator 0x28deb87a170 <line:667:5, col:23> 'int64_t':'long long' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb86e020 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb86e008 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb86dfc0 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb86dfe0 <col:9> 'int' 0
|   | `-BinaryOperator 0x28deb87a150 <col:15, col:23> 'long long' '&'
|   |   |-ImplicitCastExpr 0x28deb87a120 <col:15> 'int64_t':'long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28deb86e040 <col:15> 'const int64_t':'const long long' lvalue Var 0x28deb86c300 'two56' 'const int64_t':'const long long'
|   |   `-ImplicitCastExpr 0x28deb87a138 <col:23> 'int64_t':'long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x28deb87a100 <col:23> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   |-CompoundAssignOperator 0x28deb87a300 <line:668:5, col:19> 'int64_t':'long long' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb87a248 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb87a230 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb87a1e8 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb87a208 <col:9> 'int' 1
|   | `-BinaryOperator 0x28deb87a2e0 <col:15, col:19> 'long long' '&'
|   |   |-ImplicitCastExpr 0x28deb87a2c8 <col:15> 'long long' <IntegralCast>
|   |   | `-IntegerLiteral 0x28deb87a268 <col:15> 'int' 1
|   |   `-ImplicitCastExpr 0x28deb87a2b0 <col:19> 'int64_t':'long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x28deb87a290 <col:19> 'int64_t':'long long' lvalue Var 0x28deb86c5b0 'a' 'int64_t':'long long'
|   |-CompoundAssignOperator 0x28deb87a490 <line:671:5, col:25> 'int64_t':'long long' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb87a390 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb87a378 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb87a330 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb87a350 <col:9> 'int' 2
|   | `-BinaryOperator 0x28deb87a470 <col:15, col:25> 'int64_t':'long long' '>>'
|   |   |-ImplicitCastExpr 0x28deb87a458 <col:15, col:20> 'int64_t':'long long' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb87a410 <col:15, col:20> 'int64_t':'long long' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb87a3f8 <col:15> 'int64_t *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x28deb87a3b0 <col:15> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   |   |   `-IntegerLiteral 0x28deb87a3d0 <col:19> 'int' 1
|   |   `-IntegerLiteral 0x28deb87a430 <col:25> 'int' 56
|   |-CompoundAssignOperator 0x28deb87a568 <line:672:5, col:15> 'int64_t':'long long' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb87a520 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb87a508 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb87a4c0 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb87a4e0 <col:9> 'int' 1
|   | `-IntegerLiteral 0x28deb87a540 <col:15> 'long long' 72057594037927935
|   |-CompoundAssignOperator 0x28deb87a6f8 <line:674:5, col:25> 'int64_t':'long long' '+=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb87a5f8 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb87a5e0 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb87a598 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb87a5b8 <col:9> 'int' 3
|   | `-BinaryOperator 0x28deb87a6d8 <col:15, col:25> 'int64_t':'long long' '>>'
|   |   |-ImplicitCastExpr 0x28deb87a6c0 <col:15, col:20> 'int64_t':'long long' <LValueToRValue>
|   |   | `-ArraySubscriptExpr 0x28deb87a678 <col:15, col:20> 'int64_t':'long long' lvalue
|   |   |   |-ImplicitCastExpr 0x28deb87a660 <col:15> 'int64_t *' <ArrayToPointerDecay>
|   |   |   | `-DeclRefExpr 0x28deb87a618 <col:15> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   |   |   `-IntegerLiteral 0x28deb87a638 <col:19> 'int' 2
|   |   `-IntegerLiteral 0x28deb87a698 <col:25> 'int' 56
|   |-CompoundAssignOperator 0x28deb87a7d0 <line:675:5, col:15> 'int64_t':'long long' '&=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   | |-ArraySubscriptExpr 0x28deb87a788 <col:5, col:10> 'int64_t':'long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb87a770 <col:5> 'int64_t *' <ArrayToPointerDecay>
|   | | | `-DeclRefExpr 0x28deb87a728 <col:5> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   | | `-IntegerLiteral 0x28deb87a748 <col:9> 'int' 2
|   | `-IntegerLiteral 0x28deb87a7a8 <col:15> 'long long' 72057594037927935
|   |-BinaryOperator 0x28deb87a930 <line:678:5, col:19> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb87a860 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb87a848 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb87a800 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb86c0c8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb87a820 <col:9> 'int' 0
|   | `-ImplicitCastExpr 0x28deb87a918 <col:14, col:19> 'limb':'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x28deb87a900 <col:14, col:19> 'int64_t':'long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb87a8e0 <col:14, col:19> 'int64_t':'long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb87a8c8 <col:14> 'int64_t *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x28deb87a880 <col:14> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   |       `-IntegerLiteral 0x28deb87a8a0 <col:18> 'int' 0
|   |-BinaryOperator 0x28deb87aa80 <line:679:5, col:19> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb87a9b0 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb87a998 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb87a950 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb86c0c8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb87a970 <col:9> 'int' 1
|   | `-ImplicitCastExpr 0x28deb87aa68 <col:14, col:19> 'limb':'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x28deb87aa50 <col:14, col:19> 'int64_t':'long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb87aa30 <col:14, col:19> 'int64_t':'long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb87aa18 <col:14> 'int64_t *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x28deb87a9d0 <col:14> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   |       `-IntegerLiteral 0x28deb87a9f0 <col:18> 'int' 1
|   |-BinaryOperator 0x28deb87abd0 <line:680:5, col:19> 'limb':'unsigned long long' '='
|   | |-ArraySubscriptExpr 0x28deb87ab00 <col:5, col:10> 'limb':'unsigned long long' lvalue
|   | | |-ImplicitCastExpr 0x28deb87aae8 <col:5> 'limb *':'limb *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb87aaa0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb86c0c8 'out' 'limb *':'limb *'
|   | | `-IntegerLiteral 0x28deb87aac0 <col:9> 'int' 2
|   | `-ImplicitCastExpr 0x28deb87abb8 <col:14, col:19> 'limb':'unsigned long long' <IntegralCast>
|   |   `-ImplicitCastExpr 0x28deb87aba0 <col:14, col:19> 'int64_t':'long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb87ab80 <col:14, col:19> 'int64_t':'long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb87ab68 <col:14> 'int64_t *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x28deb87ab20 <col:14> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|   |       `-IntegerLiteral 0x28deb87ab40 <col:18> 'int' 2
|   `-BinaryOperator 0x28deb87ad20 <line:681:5, col:19> 'limb':'unsigned long long' '='
|     |-ArraySubscriptExpr 0x28deb87ac50 <col:5, col:10> 'limb':'unsigned long long' lvalue
|     | |-ImplicitCastExpr 0x28deb87ac38 <col:5> 'limb *':'limb *' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb87abf0 <col:5> 'limb *':'limb *' lvalue ParmVar 0x28deb86c0c8 'out' 'limb *':'limb *'
|     | `-IntegerLiteral 0x28deb87ac10 <col:9> 'int' 3
|     `-ImplicitCastExpr 0x28deb87ad08 <col:14, col:19> 'limb':'unsigned long long' <IntegralCast>
|       `-ImplicitCastExpr 0x28deb87acf0 <col:14, col:19> 'int64_t':'long long' <LValueToRValue>
|         `-ArraySubscriptExpr 0x28deb87acd0 <col:14, col:19> 'int64_t':'long long' lvalue
|           |-ImplicitCastExpr 0x28deb87acb8 <col:14> 'int64_t *' <ArrayToPointerDecay>
|           | `-DeclRefExpr 0x28deb87ac70 <col:14> 'int64_t [4]' lvalue Var 0x28deb86c538 'tmp' 'int64_t [4]'
|           `-IntegerLiteral 0x28deb87ac90 <col:18> 'int' 3
|-FunctionDecl 0x28deb87af48 <line:689:1, line:702:1> line:689:13 used felem_is_zero 'limb (const limb *)' static
| |-ParmVarDecl 0x28deb87ae40 <col:27, col:39> col:39 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb87c708 <line:690:1, line:702:1>
|   |-DeclStmt 0x28deb87b190 <line:691:5, col:40>
|   | |-VarDecl 0x28deb87b018 <col:5, col:10> col:10 used zero 'limb':'unsigned long long'
|   | |-VarDecl 0x28deb87b090 <col:5, col:16> col:16 used two224m96p1 'limb':'unsigned long long'
|   | `-VarDecl 0x28deb87b108 <col:5, col:29> col:29 used two225m97p2 'limb':'unsigned long long'
|   |-BinaryOperator 0x28deb87b4a0 <line:693:5, col:40> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb87b1a8 <col:5> 'limb':'unsigned long long' lvalue Var 0x28deb87b018 'zero' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x28deb87b480 <col:12, col:40> 'unsigned long long' '|'
|   |   |-BinaryOperator 0x28deb87b3c8 <col:12, col:32> 'unsigned long long' '|'
|   |   | |-BinaryOperator 0x28deb87b310 <col:12, col:24> 'unsigned long long' '|'
|   |   | | |-ImplicitCastExpr 0x28deb87b2e0 <col:12, col:16> 'limb':'unsigned long long' <LValueToRValue>
|   |   | | | `-ArraySubscriptExpr 0x28deb87b240 <col:12, col:16> 'const limb':'const unsigned long long' lvalue
|   |   | | |   |-ImplicitCastExpr 0x28deb87b228 <col:12> 'const limb *':'const limb *' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x28deb87b1e0 <col:12> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |   | | |   `-IntegerLiteral 0x28deb87b200 <col:15> 'int' 0
|   |   | | `-ImplicitCastExpr 0x28deb87b2f8 <col:20, col:24> 'limb':'unsigned long long' <LValueToRValue>
|   |   | |   `-ArraySubscriptExpr 0x28deb87b2c0 <col:20, col:24> 'const limb':'const unsigned long long' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb87b2a8 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x28deb87b260 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |   | |     `-IntegerLiteral 0x28deb87b280 <col:23> 'int' 1
|   |   | `-ImplicitCastExpr 0x28deb87b3b0 <col:28, col:32> 'limb':'unsigned long long' <LValueToRValue>
|   |   |   `-ArraySubscriptExpr 0x28deb87b390 <col:28, col:32> 'const limb':'const unsigned long long' lvalue
|   |   |     |-ImplicitCastExpr 0x28deb87b378 <col:28> 'const limb *':'const limb *' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x28deb87b330 <col:28> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |   |     `-IntegerLiteral 0x28deb87b350 <col:31> 'int' 2
|   |   `-ImplicitCastExpr 0x28deb87b468 <col:36, col:40> 'limb':'unsigned long long' <LValueToRValue>
|   |     `-ArraySubscriptExpr 0x28deb87b448 <col:36, col:40> 'const limb':'const unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb87b430 <col:36> 'const limb *':'const limb *' <LValueToRValue>
|   |       | `-DeclRefExpr 0x28deb87b3e8 <col:36> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |       `-IntegerLiteral 0x28deb87b408 <col:39> 'int' 3
|   |-BinaryOperator 0x28deb87b6f0 <line:694:5, col:45> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb87b4c0 <col:5> 'limb':'unsigned long long' lvalue Var 0x28deb87b018 'zero' 'limb':'unsigned long long'
|   | `-ImplicitCastExpr 0x28deb87b6d8 <col:12, col:45> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x28deb87b6b8 <col:12, col:45> 'long long' '&'
|   |     |-ParenExpr 0x28deb87b658 <col:12, col:41> 'long long'
|   |     | `-BinaryOperator 0x28deb87b638 <col:13, col:39> 'long long' '>>'
|   |     |   |-ParenExpr 0x28deb87b5f0 <col:13, col:34> 'long long'
|   |     |   | `-BinaryOperator 0x28deb87b5d0 <col:14, col:33> 'long long' '-'
|   |     |   |   |-CStyleCastExpr 0x28deb87b568 <col:14, col:29> 'int64_t':'long long' <IntegralCast>
|   |     |   |   | `-ImplicitCastExpr 0x28deb87b550 <col:24, col:29> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |   |   `-ParenExpr 0x28deb87b530 <col:24, col:29> 'limb':'unsigned long long' lvalue
|   |     |   |   |     `-DeclRefExpr 0x28deb87b4e0 <col:25> 'limb':'unsigned long long' lvalue Var 0x28deb87b018 'zero' 'limb':'unsigned long long'
|   |     |   |   `-ImplicitCastExpr 0x28deb87b5b8 <col:33> 'long long' <IntegralCast>
|   |     |   |     `-IntegerLiteral 0x28deb87b590 <col:33> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb87b610 <col:39> 'int' 63
|   |     `-ImplicitCastExpr 0x28deb87b6a0 <col:45> 'long long' <IntegralCast>
|   |       `-IntegerLiteral 0x28deb87b678 <col:45> 'int' 1
|   |-BinaryOperator 0x28deb87bc08 <line:695:5, line:696:69> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb87b710 <line:695:5> 'limb':'unsigned long long' lvalue Var 0x28deb87b090 'two224m96p1' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x28deb87bbe8 <col:19, line:696:69> 'unsigned long long' '|'
|   |   |-BinaryOperator 0x28deb87bab0 <line:695:19, line:696:38> 'unsigned long long' '|'
|   |   | |-BinaryOperator 0x28deb87b978 <line:695:19, col:60> 'unsigned long long' '|'
|   |   | | |-ParenExpr 0x28deb87b840 <col:19, col:29> 'unsigned long long'
|   |   | | | `-BinaryOperator 0x28deb87b820 <col:20, col:28> 'unsigned long long' '^'
|   |   | | |   |-ImplicitCastExpr 0x28deb87b7f0 <col:20, col:24> 'limb':'unsigned long long' <LValueToRValue>
|   |   | | |   | `-ArraySubscriptExpr 0x28deb87b7a8 <col:20, col:24> 'const limb':'const unsigned long long' lvalue
|   |   | | |   |   |-ImplicitCastExpr 0x28deb87b790 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   |   | | |   |   | `-DeclRefExpr 0x28deb87b748 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |   | | |   |   `-IntegerLiteral 0x28deb87b768 <col:23> 'int' 0
|   |   | | |   `-ImplicitCastExpr 0x28deb87b808 <col:28> 'unsigned long long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x28deb87b7c8 <col:28> 'int' 1
|   |   | | `-ParenExpr 0x28deb87b958 <col:33, col:60> 'unsigned long long'
|   |   | |   `-BinaryOperator 0x28deb87b938 <col:34, col:42> 'unsigned long long' '^'
|   |   | |     |-ImplicitCastExpr 0x28deb87b908 <col:34, col:38> 'limb':'unsigned long long' <LValueToRValue>
|   |   | |     | `-ArraySubscriptExpr 0x28deb87b8c0 <col:34, col:38> 'const limb':'const unsigned long long' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb87b8a8 <col:34> 'const limb *':'const limb *' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x28deb87b860 <col:34> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |   | |     |   `-IntegerLiteral 0x28deb87b880 <col:37> 'int' 1
|   |   | |     `-ImplicitCastExpr 0x28deb87b920 <col:42> 'unsigned long long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x28deb87b8e0 <col:42> 'long long' 72056494526300160
|   |   | `-ParenExpr 0x28deb87ba90 <line:696:11, col:38> 'unsigned long long'
|   |   |   `-BinaryOperator 0x28deb87ba70 <col:12, col:20> 'unsigned long long' '^'
|   |   |     |-ImplicitCastExpr 0x28deb87ba40 <col:12, col:16> 'limb':'unsigned long long' <LValueToRValue>
|   |   |     | `-ArraySubscriptExpr 0x28deb87b9f8 <col:12, col:16> 'const limb':'const unsigned long long' lvalue
|   |   |     |   |-ImplicitCastExpr 0x28deb87b9e0 <col:12> 'const limb *':'const limb *' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x28deb87b998 <col:12> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |   |     |   `-IntegerLiteral 0x28deb87b9b8 <col:15> 'int' 2
|   |   |     `-ImplicitCastExpr 0x28deb87ba58 <col:20> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x28deb87ba18 <col:20> 'long long' 72057594037927935
|   |   `-ParenExpr 0x28deb87bbc8 <col:42, col:69> 'unsigned long long'
|   |     `-BinaryOperator 0x28deb87bba8 <col:43, col:51> 'unsigned long long' '^'
|   |       |-ImplicitCastExpr 0x28deb87bb78 <col:43, col:47> 'limb':'unsigned long long' <LValueToRValue>
|   |       | `-ArraySubscriptExpr 0x28deb87bb30 <col:43, col:47> 'const limb':'const unsigned long long' lvalue
|   |       |   |-ImplicitCastExpr 0x28deb87bb18 <col:43> 'const limb *':'const limb *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x28deb87bad0 <col:43> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |       |   `-IntegerLiteral 0x28deb87baf0 <col:46> 'int' 3
|   |       `-ImplicitCastExpr 0x28deb87bb90 <col:51> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x28deb87bb50 <col:51> 'long long' 72057594037927935
|   |-BinaryOperator 0x28deb87be58 <line:697:5, col:59> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb87bc28 <col:5> 'limb':'unsigned long long' lvalue Var 0x28deb87b090 'two224m96p1' 'limb':'unsigned long long'
|   | `-ImplicitCastExpr 0x28deb87be40 <col:19, col:59> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x28deb87be20 <col:19, col:59> 'long long' '&'
|   |     |-ParenExpr 0x28deb87bdc0 <col:19, col:55> 'long long'
|   |     | `-BinaryOperator 0x28deb87bda0 <col:20, col:53> 'long long' '>>'
|   |     |   |-ParenExpr 0x28deb87bd58 <col:20, col:48> 'long long'
|   |     |   | `-BinaryOperator 0x28deb87bd38 <col:21, col:47> 'long long' '-'
|   |     |   |   |-CStyleCastExpr 0x28deb87bcd0 <col:21, col:43> 'int64_t':'long long' <IntegralCast>
|   |     |   |   | `-ImplicitCastExpr 0x28deb87bcb8 <col:31, col:43> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |   |   `-ParenExpr 0x28deb87bc98 <col:31, col:43> 'limb':'unsigned long long' lvalue
|   |     |   |   |     `-DeclRefExpr 0x28deb87bc48 <col:32> 'limb':'unsigned long long' lvalue Var 0x28deb87b090 'two224m96p1' 'limb':'unsigned long long'
|   |     |   |   `-ImplicitCastExpr 0x28deb87bd20 <col:47> 'long long' <IntegralCast>
|   |     |   |     `-IntegerLiteral 0x28deb87bcf8 <col:47> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb87bd78 <col:53> 'int' 63
|   |     `-ImplicitCastExpr 0x28deb87be08 <col:59> 'long long' <IntegralCast>
|   |       `-IntegerLiteral 0x28deb87bde0 <col:59> 'int' 1
|   |-BinaryOperator 0x28deb87c380 <line:698:5, line:699:69> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb87be78 <line:698:5> 'limb':'unsigned long long' lvalue Var 0x28deb87b108 'two225m97p2' 'limb':'unsigned long long'
|   | `-BinaryOperator 0x28deb87c360 <col:19, line:699:69> 'unsigned long long' '|'
|   |   |-BinaryOperator 0x28deb87c228 <line:698:19, line:699:38> 'unsigned long long' '|'
|   |   | |-BinaryOperator 0x28deb87c0e0 <line:698:19, col:60> 'unsigned long long' '|'
|   |   | | |-ParenExpr 0x28deb87bfa8 <col:19, col:29> 'unsigned long long'
|   |   | | | `-BinaryOperator 0x28deb87bf88 <col:20, col:28> 'unsigned long long' '^'
|   |   | | |   |-ImplicitCastExpr 0x28deb87bf58 <col:20, col:24> 'limb':'unsigned long long' <LValueToRValue>
|   |   | | |   | `-ArraySubscriptExpr 0x28deb87bf10 <col:20, col:24> 'const limb':'const unsigned long long' lvalue
|   |   | | |   |   |-ImplicitCastExpr 0x28deb87bef8 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   |   | | |   |   | `-DeclRefExpr 0x28deb87beb0 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |   | | |   |   `-IntegerLiteral 0x28deb87bed0 <col:23> 'int' 0
|   |   | | |   `-ImplicitCastExpr 0x28deb87bf70 <col:28> 'unsigned long long' <IntegralCast>
|   |   | | |     `-IntegerLiteral 0x28deb87bf30 <col:28> 'int' 2
|   |   | | `-ParenExpr 0x28deb87c0c0 <col:33, col:60> 'unsigned long long'
|   |   | |   `-BinaryOperator 0x28deb87c0a0 <col:34, col:42> 'unsigned long long' '^'
|   |   | |     |-ImplicitCastExpr 0x28deb87c070 <col:34, col:38> 'limb':'unsigned long long' <LValueToRValue>
|   |   | |     | `-ArraySubscriptExpr 0x28deb87c028 <col:34, col:38> 'const limb':'const unsigned long long' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb87c010 <col:34> 'const limb *':'const limb *' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x28deb87bfc8 <col:34> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |   | |     |   `-IntegerLiteral 0x28deb87bfe8 <col:37> 'int' 1
|   |   | |     `-ImplicitCastExpr 0x28deb87c088 <col:42> 'unsigned long long' <IntegralCast>
|   |   | |       `-IntegerLiteral 0x28deb87c048 <col:42> 'long long' 72055395014672384
|   |   | `-ParenExpr 0x28deb87c208 <line:699:11, col:38> 'unsigned long long'
|   |   |   `-BinaryOperator 0x28deb87c1e8 <col:12, col:20> 'unsigned long long' '^'
|   |   |     |-ImplicitCastExpr 0x28deb87c1b8 <col:12, col:16> 'limb':'unsigned long long' <LValueToRValue>
|   |   |     | `-ArraySubscriptExpr 0x28deb87c170 <col:12, col:16> 'const limb':'const unsigned long long' lvalue
|   |   |     |   |-ImplicitCastExpr 0x28deb87c158 <col:12> 'const limb *':'const limb *' <LValueToRValue>
|   |   |     |   | `-DeclRefExpr 0x28deb87c110 <col:12> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |   |     |   `-IntegerLiteral 0x28deb87c130 <col:15> 'int' 2
|   |   |     `-ImplicitCastExpr 0x28deb87c1d0 <col:20> 'unsigned long long' <IntegralCast>
|   |   |       `-IntegerLiteral 0x28deb87c190 <col:20> 'long long' 72057594037927935
|   |   `-ParenExpr 0x28deb87c340 <col:42, col:69> 'unsigned long long'
|   |     `-BinaryOperator 0x28deb87c320 <col:43, col:51> 'unsigned long long' '^'
|   |       |-ImplicitCastExpr 0x28deb87c2f0 <col:43, col:47> 'limb':'unsigned long long' <LValueToRValue>
|   |       | `-ArraySubscriptExpr 0x28deb87c2a8 <col:43, col:47> 'const limb':'const unsigned long long' lvalue
|   |       |   |-ImplicitCastExpr 0x28deb87c290 <col:43> 'const limb *':'const limb *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x28deb87c248 <col:43> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87ae40 'in' 'const limb *':'const limb *'
|   |       |   `-IntegerLiteral 0x28deb87c268 <col:46> 'int' 3
|   |       `-ImplicitCastExpr 0x28deb87c308 <col:51> 'unsigned long long' <IntegralCast>
|   |         `-IntegerLiteral 0x28deb87c2c8 <col:51> 'long long' 144115188075855871
|   |-BinaryOperator 0x28deb87c5d0 <line:700:5, col:59> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb87c3a0 <col:5> 'limb':'unsigned long long' lvalue Var 0x28deb87b108 'two225m97p2' 'limb':'unsigned long long'
|   | `-ImplicitCastExpr 0x28deb87c5b8 <col:19, col:59> 'limb':'unsigned long long' <IntegralCast>
|   |   `-BinaryOperator 0x28deb87c598 <col:19, col:59> 'long long' '&'
|   |     |-ParenExpr 0x28deb87c538 <col:19, col:55> 'long long'
|   |     | `-BinaryOperator 0x28deb87c518 <col:20, col:53> 'long long' '>>'
|   |     |   |-ParenExpr 0x28deb87c4d0 <col:20, col:48> 'long long'
|   |     |   | `-BinaryOperator 0x28deb87c4b0 <col:21, col:47> 'long long' '-'
|   |     |   |   |-CStyleCastExpr 0x28deb87c448 <col:21, col:43> 'int64_t':'long long' <IntegralCast>
|   |     |   |   | `-ImplicitCastExpr 0x28deb87c430 <col:31, col:43> 'limb':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   |     |   |   |   `-ParenExpr 0x28deb87c410 <col:31, col:43> 'limb':'unsigned long long' lvalue
|   |     |   |   |     `-DeclRefExpr 0x28deb87c3c0 <col:32> 'limb':'unsigned long long' lvalue Var 0x28deb87b108 'two225m97p2' 'limb':'unsigned long long'
|   |     |   |   `-ImplicitCastExpr 0x28deb87c498 <col:47> 'long long' <IntegralCast>
|   |     |   |     `-IntegerLiteral 0x28deb87c470 <col:47> 'int' 1
|   |     |   `-IntegerLiteral 0x28deb87c4f0 <col:53> 'int' 63
|   |     `-ImplicitCastExpr 0x28deb87c580 <col:59> 'long long' <IntegralCast>
|   |       `-IntegerLiteral 0x28deb87c558 <col:59> 'int' 1
|   `-ReturnStmt 0x28deb87c6f8 <line:701:5, col:45>
|     `-ParenExpr 0x28deb87c6d8 <col:12, col:45> 'unsigned long long'
|       `-BinaryOperator 0x28deb87c6b8 <col:13, col:34> 'unsigned long long' '|'
|         |-BinaryOperator 0x28deb87c660 <col:13, col:20> 'unsigned long long' '|'
|         | |-ImplicitCastExpr 0x28deb87c630 <col:13> 'limb':'unsigned long long' <LValueToRValue>
|         | | `-DeclRefExpr 0x28deb87c5f0 <col:13> 'limb':'unsigned long long' lvalue Var 0x28deb87b018 'zero' 'limb':'unsigned long long'
|         | `-ImplicitCastExpr 0x28deb87c648 <col:20> 'limb':'unsigned long long' <LValueToRValue>
|         |   `-DeclRefExpr 0x28deb87c610 <col:20> 'limb':'unsigned long long' lvalue Var 0x28deb87b090 'two224m96p1' 'limb':'unsigned long long'
|         `-ImplicitCastExpr 0x28deb87c6a0 <col:34> 'limb':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x28deb87c680 <col:34> 'limb':'unsigned long long' lvalue Var 0x28deb87b108 'two225m97p2' 'limb':'unsigned long long'
|-FunctionDecl 0x28deb87c820 <line:704:1, line:707:1> line:704:12 used felem_is_zero_int 'int (const void *)' static
| |-ParmVarDecl 0x28deb87c770 <col:30, col:42> col:42 used in 'const void *'
| `-CompoundStmt 0x28deb87cb18 <line:705:1, line:707:1>
|   `-ReturnStmt 0x28deb87cb08 <line:706:5, col:48>
|     `-CStyleCastExpr 0x28deb87cae0 <col:12, col:48> 'int' <IntegralCast>
|       `-ParenExpr 0x28deb87cac0 <col:17, col:48> 'unsigned long long'
|         `-BinaryOperator 0x28deb87ca68 <col:18, col:47> 'unsigned long long' '&'
|           |-CallExpr 0x28deb87c990 <col:18, col:34> 'limb':'unsigned long long'
|           | |-ImplicitCastExpr 0x28deb87c978 <col:18> 'limb (*)(const limb *)' <FunctionToPointerDecay>
|           | | `-DeclRefExpr 0x28deb87c8e0 <col:18> 'limb (const limb *)' Function 0x28deb87af48 'felem_is_zero' 'limb (const limb *)'
|           | `-ImplicitCastExpr 0x28deb87c9d0 <col:32> 'const limb *':'const limb *' <BitCast>
|           |   `-ImplicitCastExpr 0x28deb87c9b8 <col:32> 'const void *' <LValueToRValue>
|           |     `-DeclRefExpr 0x28deb87c900 <col:32> 'const void *' lvalue ParmVar 0x28deb87c770 'in' 'const void *'
|           `-ParenExpr 0x28deb87ca48 <col:38, col:47> 'limb':'unsigned long long'
|             `-CStyleCastExpr 0x28deb87ca20 <col:39, col:46> 'limb':'unsigned long long' <IntegralCast>
|               `-IntegerLiteral 0x28deb87c9e8 <col:46> 'int' 1
|-FunctionDecl 0x28deb87cc80 <line:711:1, line:789:1> line:711:13 used felem_inv 'void (limb *, const limb *)' static
| |-ParmVarDecl 0x28deb87cb40 <col:23, col:29> col:29 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb87cbb8 <col:34, col:46> col:46 used in 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb86f610 <line:712:1, line:789:1>
|   |-DeclStmt 0x28deb87cf50 <line:713:5, col:36>
|   | |-VarDecl 0x28deb87cd58 <col:5, col:11> col:11 used ftmp 'felem':'limb [4]'
|   | |-VarDecl 0x28deb87cdd0 <col:5, col:17> col:17 used ftmp2 'felem':'limb [4]'
|   | |-VarDecl 0x28deb87ce48 <col:5, col:24> col:24 used ftmp3 'felem':'limb [4]'
|   | `-VarDecl 0x28deb87cec0 <col:5, col:31> col:31 used ftmp4 'felem':'limb [4]'
|   |-DeclStmt 0x28deb87cfe0 <line:714:5, col:18>
|   | `-VarDecl 0x28deb87cf78 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
|   |-DeclStmt 0x28deb87d078 <line:715:5, col:15>
|   | `-VarDecl 0x28deb87d010 <col:5, col:14> col:14 used i 'unsigned int'
|   |-CallExpr 0x28deb87d120 <line:717:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x28deb87d108 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d090 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb87d150 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d0b0 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb87d168 <col:23> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb87d0e8 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87cbb8 'in' 'const limb *':'const limb *'
|   |-CallExpr 0x28deb87d210 <line:718:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb87d1f8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d180 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb87d240 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d1a0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb87d270 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87d258 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87d1d8 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb87d320 <line:719:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb87d308 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d288 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb87d358 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d2a8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb87d370 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb87d2c8 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87cbb8 'in' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x28deb87d3a0 <col:24> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87d388 <col:24> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87d2e8 <col:24> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb87d430 <line:720:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb87d418 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d3b8 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb87d460 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d3d8 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb87d490 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87d478 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87d3f8 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb87d520 <line:721:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb87d508 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d4a8 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb87d550 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d4c8 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb87d580 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87d568 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87d4e8 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb87d610 <line:722:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb87d5f8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d598 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb87d640 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d5b8 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb87d670 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87d658 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87d5d8 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb87d720 <line:723:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb87d708 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d688 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb87d758 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d6a8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb87d770 <col:20> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb87d6c8 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87cbb8 'in' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x28deb87d7a0 <col:24> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87d788 <col:24> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87d6e8 <col:24> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb87d830 <line:724:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb87d818 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d7b8 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb87d860 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d7d8 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb87d890 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87d878 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87d7f8 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb87d920 <line:725:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb87d908 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d8a8 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb87d950 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d8c8 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb87d980 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87d968 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87d8e8 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb87da28 <line:726:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb87da10 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d998 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb87da58 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87d9b8 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb87da88 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87da70 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87d9f0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb87db18 <line:727:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb87db00 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87daa0 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb87db48 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87dac0 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb87db78 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87db60 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87dae0 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x28deb87dc08 <line:728:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb87dbf0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87db90 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb87dc38 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87dbb0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb87dc68 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87dc50 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87dbd0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb87dcf8 <line:729:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb87dce0 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87dc80 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb87dd28 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87dca0 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb87dd58 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87dd40 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87dcc0 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x28deb87dde8 <line:730:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb87ddd0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87dd70 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb87de18 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87dd90 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb87de48 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87de30 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87ddb0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb87def8 <line:731:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb87dee0 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87de60 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb87df30 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87de80 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb87df60 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb87df48 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb87dea0 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb87df90 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87df78 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87dec0 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb87e020 <line:732:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb87e008 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87dfa8 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb87e050 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87dfc8 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb87e080 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb87e068 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87dfe8 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb8740d0 <line:733:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb87e0f8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87e098 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb874100 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb87e0b8 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb874130 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb874118 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb87e0d8 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb8741c0 <line:734:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb8741a8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874148 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb8741f0 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874168 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb874220 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb874208 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb874188 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x28deb8745a0 <line:735:5, line:738:5>
|   | |-BinaryOperator 0x28deb8742b0 <line:735:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x28deb874238 <col:10> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb874298 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb874270 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x28deb874348 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x28deb874318 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb8742d0 <col:17> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb874330 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb8742f0 <col:21> 'int' 5
|   | |-UnaryOperator 0x28deb874388 <col:24, col:26> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x28deb874368 <col:26> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | `-CompoundStmt 0x28deb874580 <col:29, line:738:5>
|   |   |-CallExpr 0x28deb874418 <line:736:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x28deb874400 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb8743a0 <col:9> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb874448 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb8743c0 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x28deb874478 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb874460 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x28deb8743e0 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   |   `-CallExpr 0x28deb874508 <line:737:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x28deb8744f0 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb874490 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x28deb874538 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb8744b0 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x28deb874568 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x28deb874550 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x28deb8744d0 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb874670 <line:739:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb874658 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8745d8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb8746a8 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8745f8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb8746d8 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb8746c0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb874618 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb874708 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb8746f0 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb874638 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb874798 <line:740:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb874780 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874720 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb8747c8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874740 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb8747f8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb8747e0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb874760 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb874888 <line:741:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb874870 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874810 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb8748b8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874830 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb8748e8 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb8748d0 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb874850 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x28deb874990 <line:742:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb874978 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874900 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb8749c0 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874920 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb8749f0 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb8749d8 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb874958 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x28deb874d58 <line:743:5, line:746:5>
|   | |-BinaryOperator 0x28deb874a68 <line:743:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x28deb874a08 <col:10> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb874a50 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb874a28 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x28deb874b00 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x28deb874ad0 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb874a88 <col:17> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb874ae8 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb874aa8 <col:21> 'int' 11
|   | |-UnaryOperator 0x28deb874b40 <col:25, col:27> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x28deb874b20 <col:27> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | `-CompoundStmt 0x28deb874d38 <col:30, line:746:5>
|   |   |-CallExpr 0x28deb874bd0 <line:744:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x28deb874bb8 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb874b58 <col:9> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb874c00 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb874b78 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x28deb874c30 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb874c18 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x28deb874b98 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   |   `-CallExpr 0x28deb874cc0 <line:745:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x28deb874ca8 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb874c48 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x28deb874cf0 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb874c68 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x28deb874d20 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x28deb874d08 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x28deb874c88 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb874e28 <line:747:5, col:32> 'void'
|   | |-ImplicitCastExpr 0x28deb874e10 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874d90 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb874e60 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874db0 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb874e90 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb874e78 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb874dd0 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb874ec0 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb874ea8 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb874df0 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x28deb874f50 <line:748:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb874f38 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874ed8 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb874f80 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874ef8 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb874fb0 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb874f98 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb874f18 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb875040 <line:749:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb875028 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874fc8 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb875070 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874fe8 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb8750a0 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb875088 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb875008 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x28deb875130 <line:750:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb875118 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8750b8 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb875160 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8750d8 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb875190 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb875178 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb8750f8 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x28deb8754f8 <line:751:5, line:754:5>
|   | |-BinaryOperator 0x28deb875208 <line:751:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x28deb8751a8 <col:10> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb8751f0 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb8751c8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x28deb8752a0 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x28deb875270 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb875228 <col:17> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb875288 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb875248 <col:21> 'int' 23
|   | |-UnaryOperator 0x28deb8752e0 <col:25, col:27> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x28deb8752c0 <col:27> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | `-CompoundStmt 0x28deb8754d8 <col:30, line:754:5>
|   |   |-CallExpr 0x28deb875370 <line:752:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x28deb875358 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb8752f8 <col:9> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb8753a0 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb875318 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x28deb8753d0 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb8753b8 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x28deb875338 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   |   `-CallExpr 0x28deb875460 <line:753:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x28deb875448 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb8753e8 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x28deb875490 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb875408 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x28deb8754c0 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x28deb8754a8 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x28deb875428 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb8755c8 <line:755:5, col:32> 'void'
|   | |-ImplicitCastExpr 0x28deb8755b0 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875530 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb875600 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875550 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb875630 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb875618 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb875570 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb875660 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb875648 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb875590 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x28deb8756f0 <line:756:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb8756d8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875678 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb875720 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875698 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb875750 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb875738 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb8756b8 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb8757e0 <line:757:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb8757c8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875768 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb875810 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875788 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb875840 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb875828 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb8757a8 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   |-CallExpr 0x28deb8758e8 <line:758:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb8758d0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875858 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb875918 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875878 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cec0 'ftmp4' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb875948 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb875930 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb8758b0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x28deb875cb0 <line:759:5, line:762:5>
|   | |-BinaryOperator 0x28deb8759c0 <line:759:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x28deb875960 <col:10> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb8759a8 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb875980 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x28deb875a58 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x28deb875a28 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb8759e0 <col:17> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb875a40 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb875a00 <col:21> 'int' 47
|   | |-UnaryOperator 0x28deb875a98 <col:25, col:27> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x28deb875a78 <col:27> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | `-CompoundStmt 0x28deb875c90 <col:30, line:762:5>
|   |   |-CallExpr 0x28deb875b28 <line:760:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x28deb875b10 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb875ab0 <col:9> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb875b58 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb875ad0 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x28deb875b88 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb875b70 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x28deb875af0 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cec0 'ftmp4' 'felem':'limb [4]'
|   |   `-CallExpr 0x28deb875c18 <line:761:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x28deb875c00 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb875ba0 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x28deb875c48 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb875bc0 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb87cec0 'ftmp4' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x28deb875c78 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x28deb875c60 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x28deb875be0 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb875d80 <line:763:5, col:32> 'void'
|   | |-ImplicitCastExpr 0x28deb875d68 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875ce8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb875db8 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875d08 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb875de8 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb875dd0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb875d28 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb875e18 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb875e00 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb875d48 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cec0 'ftmp4' 'felem':'limb [4]'
|   |-CallExpr 0x28deb875ea8 <line:764:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb875e90 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875e30 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb875ed8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875e50 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb875f08 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb875ef0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb875e70 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb875f98 <line:765:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb875f80 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875f20 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb875fc8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb875f40 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb875ff8 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb875fe0 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb875f60 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   |-CallExpr 0x28deb876088 <line:766:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb876070 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb876010 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb8760b8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb876030 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cec0 'ftmp4' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb86e0b8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb86e0a0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb876050 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x28deb86e420 <line:767:5, line:770:5>
|   | |-BinaryOperator 0x28deb86e130 <line:767:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x28deb86e0d0 <col:10> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb86e118 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb86e0f0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x28deb86e1c8 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x28deb86e198 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb86e150 <col:17> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb86e1b0 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb86e170 <col:21> 'int' 23
|   | |-UnaryOperator 0x28deb86e208 <col:25, col:27> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x28deb86e1e8 <col:27> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | `-CompoundStmt 0x28deb86e400 <col:30, line:770:5>
|   |   |-CallExpr 0x28deb86e298 <line:768:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x28deb86e280 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb86e220 <col:9> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb86e2c8 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb86e240 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x28deb86e2f8 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb86e2e0 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x28deb86e260 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cec0 'ftmp4' 'felem':'limb [4]'
|   |   `-CallExpr 0x28deb86e388 <line:769:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x28deb86e370 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb86e310 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x28deb86e3b8 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb86e330 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb87cec0 'ftmp4' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x28deb86e3e8 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x28deb86e3d0 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x28deb86e350 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb86e4f0 <line:771:5, col:32> 'void'
|   | |-ImplicitCastExpr 0x28deb86e4d8 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86e458 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb86e528 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86e478 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb86e558 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb86e540 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb86e498 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb86e588 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb86e570 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb86e4b8 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cec0 'ftmp4' 'felem':'limb [4]'
|   |-CallExpr 0x28deb86e618 <line:772:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb86e600 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86e5a0 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb86e648 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86e5c0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb86e678 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb86e660 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb86e5e0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x28deb86e9e0 <line:773:5, line:776:5>
|   | |-BinaryOperator 0x28deb86e6f0 <line:773:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x28deb86e690 <col:10> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb86e6d8 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb86e6b0 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x28deb86e788 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x28deb86e758 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb86e710 <col:17> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb86e770 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb86e730 <col:21> 'int' 6
|   | |-UnaryOperator 0x28deb86e7c8 <col:24, col:26> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x28deb86e7a8 <col:26> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | `-CompoundStmt 0x28deb86e9c0 <col:29, line:776:5>
|   |   |-CallExpr 0x28deb86e858 <line:774:9, col:32> 'void'
|   |   | |-ImplicitCastExpr 0x28deb86e840 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb86e7e0 <col:9> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb86e888 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb86e800 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x28deb86e8b8 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb86e8a0 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x28deb86e820 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   |   `-CallExpr 0x28deb86e948 <line:775:9, col:32> 'void'
|   |     |-ImplicitCastExpr 0x28deb86e930 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb86e8d0 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x28deb86e978 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb86e8f0 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x28deb86e9a8 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x28deb86e990 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x28deb86e910 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb86eab0 <line:777:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb86ea98 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86ea18 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb86eae8 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86ea38 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb86eb18 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb86eb00 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb86ea58 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb87cdd0 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb86eb48 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb86eb30 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb86ea78 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb86ebd8 <line:778:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb86ebc0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86eb60 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb86ec08 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86eb80 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb86ec38 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb86ec20 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb86eba0 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb86ecc8 <line:779:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb86ecb0 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86ec50 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb86ecf8 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86ec70 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb86ed28 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb86ed10 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb86ec90 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb86edb8 <line:780:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb86eda0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86ed40 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb86ede8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86ed60 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb86ee18 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb86ee00 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb86ed80 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb86eec8 <line:781:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb86eeb0 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86ee30 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb86ef00 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86ee50 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb86ef30 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb86ef18 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb86ee70 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb86ef48 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb86ee90 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87cbb8 'in' 'const limb *':'const limb *'
|   |-CallExpr 0x28deb86efd8 <line:782:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb86efc0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86ef60 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb86f008 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86ef80 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb86f038 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb86f020 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb86efa0 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-ForStmt 0x28deb86f3a0 <line:783:5, line:786:5>
|   | |-BinaryOperator 0x28deb86f0b0 <line:783:10, col:14> 'unsigned int' '='
|   | | |-DeclRefExpr 0x28deb86f050 <col:10> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb86f098 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb86f070 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x28deb86f148 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x28deb86f118 <col:17> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb86f0d0 <col:17> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb86f130 <col:21> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb86f0f0 <col:21> 'int' 97
|   | |-UnaryOperator 0x28deb86f188 <col:25, col:27> 'unsigned int' prefix '++'
|   | | `-DeclRefExpr 0x28deb86f168 <col:27> 'unsigned int' lvalue Var 0x28deb87d010 'i' 'unsigned int'
|   | `-CompoundStmt 0x28deb86f380 <col:30, line:786:5>
|   |   |-CallExpr 0x28deb86f218 <line:784:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x28deb86f200 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb86f1a0 <col:9> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb86f248 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb86f1c0 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |   | `-ImplicitCastExpr 0x28deb86f278 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb86f260 <col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     `-DeclRefExpr 0x28deb86f1e0 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   |   `-CallExpr 0x28deb86f308 <line:785:9, col:31> 'void'
|   |     |-ImplicitCastExpr 0x28deb86f2f0 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb86f290 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   |     |-ImplicitCastExpr 0x28deb86f338 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb86f2b0 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x28deb86f368 <col:28> 'const widelimb *':'const widelimb *' <NoOp>
|   |       `-ImplicitCastExpr 0x28deb86f350 <col:28> 'widelimb *' <ArrayToPointerDecay>
|   |         `-DeclRefExpr 0x28deb86f2d0 <col:28> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb86f470 <line:787:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb86f458 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86f3d8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb86f4a8 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb86f3f8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb86f4d8 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb86f4c0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb86f418 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb87cd58 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb86f508 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb86f4f0 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb86f438 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb87ce48 'ftmp3' 'felem':'limb [4]'
|   `-CallExpr 0x28deb86f598 <line:788:5, col:26> 'void'
|     |-ImplicitCastExpr 0x28deb86f580 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x28deb86f520 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|     |-ImplicitCastExpr 0x28deb86f5c8 <col:18> 'limb *':'limb *' <LValueToRValue>
|     | `-DeclRefExpr 0x28deb86f540 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb87cb40 'out' 'limb *':'limb *'
|     `-ImplicitCastExpr 0x28deb86f5f8 <col:23> 'const widelimb *':'const widelimb *' <NoOp>
|       `-ImplicitCastExpr 0x28deb86f5e0 <col:23> 'widelimb *' <ArrayToPointerDecay>
|         `-DeclRefExpr 0x28deb86f560 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87cf78 'tmp' 'widefelem':'widelimb [7]'
|-FunctionDecl 0x28deb86fa38 <line:795:1, line:806:1> line:795:13 used copy_conditional 'void (limb *, const limb *, limb)' static
| |-ParmVarDecl 0x28deb86f7e0 <col:30, col:36> col:36 used out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb86f858 <col:41, col:53> col:53 used in 'const limb *':'const limb *'
| |-ParmVarDecl 0x28deb86f8d0 <col:57, col:62> col:62 used icopy 'limb':'unsigned long long'
| `-CompoundStmt 0x28deb87e360 <line:796:1, line:806:1>
|   |-DeclStmt 0x28deb86fb88 <line:797:5, col:15>
|   | `-VarDecl 0x28deb86fb20 <col:5, col:14> col:14 used i 'unsigned int'
|   |-DeclStmt 0x28deb86fc68 <line:801:5, col:29>
|   | `-VarDecl 0x28deb86fbb0 <col:5, col:24> col:16 used copy 'const limb':'const unsigned long long' cinit
|   |   `-UnaryOperator 0x28deb86fc50 <col:23, col:24> 'limb':'unsigned long long' prefix '-'
|   |     `-ImplicitCastExpr 0x28deb86fc38 <col:24> 'limb':'unsigned long long' <LValueToRValue>
|   |       `-DeclRefExpr 0x28deb86fc18 <col:24> 'limb':'unsigned long long' lvalue ParmVar 0x28deb86f8d0 'icopy' 'limb':'unsigned long long'
|   `-ForStmt 0x28deb87e2f8 <line:802:5, line:805:5>
|     |-BinaryOperator 0x28deb86fcf8 <line:802:10, col:14> 'unsigned int' '='
|     | |-DeclRefExpr 0x28deb86fc80 <col:10> 'unsigned int' lvalue Var 0x28deb86fb20 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x28deb86fce0 <col:14> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x28deb86fcb8 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x28deb86fd90 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x28deb86fd60 <col:17> 'unsigned int' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb86fd18 <col:17> 'unsigned int' lvalue Var 0x28deb86fb20 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x28deb86fd78 <col:21> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x28deb86fd38 <col:21> 'int' 4
|     |-UnaryOperator 0x28deb86fdd0 <col:24, col:26> 'unsigned int' prefix '++'
|     | `-DeclRefExpr 0x28deb86fdb0 <col:26> 'unsigned int' lvalue Var 0x28deb86fb20 'i' 'unsigned int'
|     `-CompoundStmt 0x28deb87e2d8 <col:29, line:805:5>
|       |-DeclStmt 0x28deb87e168 <line:803:9, col:49>
|       | `-VarDecl 0x28deb86fdf8 <col:9, col:48> col:20 used tmp 'const limb':'const unsigned long long' cinit
|       |   `-BinaryOperator 0x28deb870040 <col:26, col:48> 'unsigned long long' '&'
|       |     |-ImplicitCastExpr 0x28deb870028 <col:26> 'limb':'unsigned long long' <LValueToRValue>
|       |     | `-DeclRefExpr 0x28deb86fe60 <col:26> 'const limb':'const unsigned long long' lvalue Var 0x28deb86fbb0 'copy' 'const limb':'const unsigned long long'
|       |     `-ParenExpr 0x28deb870008 <col:33, col:48> 'unsigned long long'
|       |       `-BinaryOperator 0x28deb86ffe8 <col:34, col:47> 'unsigned long long' '^'
|       |         |-ImplicitCastExpr 0x28deb86ffb8 <col:34, col:38> 'limb':'unsigned long long' <LValueToRValue>
|       |         | `-ArraySubscriptExpr 0x28deb86ff08 <col:34, col:38> 'const limb':'const unsigned long long' lvalue
|       |         |   |-ImplicitCastExpr 0x28deb86fed8 <col:34> 'const limb *':'const limb *' <LValueToRValue>
|       |         |   | `-DeclRefExpr 0x28deb86fe98 <col:34> 'const limb *':'const limb *' lvalue ParmVar 0x28deb86f858 'in' 'const limb *':'const limb *'
|       |         |   `-ImplicitCastExpr 0x28deb86fef0 <col:37> 'unsigned int' <LValueToRValue>
|       |         |     `-DeclRefExpr 0x28deb86feb8 <col:37> 'unsigned int' lvalue Var 0x28deb86fb20 'i' 'unsigned int'
|       |         `-ImplicitCastExpr 0x28deb86ffd0 <col:42, col:47> 'limb':'unsigned long long' <LValueToRValue>
|       |           `-ArraySubscriptExpr 0x28deb86ff98 <col:42, col:47> 'limb':'unsigned long long' lvalue
|       |             |-ImplicitCastExpr 0x28deb86ff68 <col:42> 'limb *':'limb *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x28deb86ff28 <col:42> 'limb *':'limb *' lvalue ParmVar 0x28deb86f7e0 'out' 'limb *':'limb *'
|       |             `-ImplicitCastExpr 0x28deb86ff80 <col:46> 'unsigned int' <LValueToRValue>
|       |               `-DeclRefExpr 0x28deb86ff48 <col:46> 'unsigned int' lvalue Var 0x28deb86fb20 'i' 'unsigned int'
|       `-CompoundAssignOperator 0x28deb87e260 <line:804:9, col:19> 'limb':'unsigned long long' '^=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|         |-ArraySubscriptExpr 0x28deb87e1f0 <col:9, col:14> 'limb':'unsigned long long' lvalue
|         | |-ImplicitCastExpr 0x28deb87e1c0 <col:9> 'limb *':'limb *' <LValueToRValue>
|         | | `-DeclRefExpr 0x28deb87e180 <col:9> 'limb *':'limb *' lvalue ParmVar 0x28deb86f7e0 'out' 'limb *':'limb *'
|         | `-ImplicitCastExpr 0x28deb87e1d8 <col:13> 'unsigned int' <LValueToRValue>
|         |   `-DeclRefExpr 0x28deb87e1a0 <col:13> 'unsigned int' lvalue Var 0x28deb86fb20 'i' 'unsigned int'
|         `-ImplicitCastExpr 0x28deb87e248 <col:19> 'limb':'unsigned long long' <LValueToRValue>
|           `-DeclRefExpr 0x28deb87e210 <col:19> 'const limb':'const unsigned long long' lvalue Var 0x28deb86fdf8 'tmp' 'const limb':'const unsigned long long'
|-FunctionDecl 0x28deb87e7f8 <line:827:1, line:896:1> line:828:1 used point_double 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' static
| |-ParmVarDecl 0x28deb87e398 <col:14, col:20> col:20 used x_out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb87e410 <col:27, col:33> col:33 used y_out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb87e488 <col:40, col:46> col:46 used z_out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb87e500 <line:829:14, col:26> col:26 used x_in 'const limb *':'const limb *'
| |-ParmVarDecl 0x28deb87e578 <col:32, col:44> col:44 used y_in 'const limb *':'const limb *'
| |-ParmVarDecl 0x28deb87e5f0 <col:50, col:62> col:62 used z_in 'const limb *':'const limb *'
| |-CompoundStmt 0x28deb880c88 <line:830:1, line:896:1>
| | |-DeclStmt 0x28deb87e9e8 <line:831:5, col:24>
| | | |-VarDecl 0x28deb87e8f0 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
| | | `-VarDecl 0x28deb87e968 <col:5, col:20> col:20 used tmp2 'widefelem':'widelimb [7]'
| | |-DeclStmt 0x28deb87ed08 <line:832:5, col:49>
| | | |-VarDecl 0x28deb87ea10 <col:5, col:11> col:11 used delta 'felem':'limb [4]'
| | | |-VarDecl 0x28deb87ea88 <col:5, col:18> col:18 used gamma 'felem':'limb [4]'
| | | |-VarDecl 0x28deb87eb00 <col:5, col:25> col:25 used beta 'felem':'limb [4]'
| | | |-VarDecl 0x28deb87eb78 <col:5, col:31> col:31 used alpha 'felem':'limb [4]'
| | | |-VarDecl 0x28deb87ebf0 <col:5, col:38> col:38 used ftmp 'felem':'limb [4]'
| | | `-VarDecl 0x28deb87ec68 <col:5, col:44> col:44 used ftmp2 'felem':'limb [4]'
| | |-CallExpr 0x28deb87ee10 <line:834:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x28deb87edf8 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87ed20 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb87ee40 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87ed40 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ebf0 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87ee58 <col:24> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x28deb87ed78 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87e500 'x_in' 'const limb *':'const limb *'
| | |-CallExpr 0x28deb87ef00 <line:835:5, col:29> 'void'
| | | |-ImplicitCastExpr 0x28deb87eee8 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87ee70 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb87ef30 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87ee90 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ec68 'ftmp2' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87ef48 <col:25> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x28deb87eec8 <col:25> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87e500 'x_in' 'const limb *':'const limb *'
| | |-CallExpr 0x28deb87eff0 <line:838:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x28deb87efd8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87ef60 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb87f020 <col:18> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87ef80 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x28deb87f038 <col:23> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x28deb87efb8 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87e5f0 'z_in' 'const limb *':'const limb *'
| | |-CallExpr 0x28deb87f0e0 <line:839:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x28deb87f0c8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f050 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x28deb87f110 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f070 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ea10 'delta' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87f140 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87f128 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87f0a8 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x28deb87f1d0 <line:842:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x28deb87f1b8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f158 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb87f200 <col:18> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f178 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x28deb87f218 <col:23> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x28deb87f198 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87e578 'y_in' 'const limb *':'const limb *'
| | |-CallExpr 0x28deb87f2c0 <line:843:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x28deb87f2a8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f230 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x28deb87f2f0 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f250 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ea88 'gamma' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87f320 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87f308 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87f288 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x28deb87f3d0 <line:846:5, col:31> 'void'
| | | |-ImplicitCastExpr 0x28deb87f3b8 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f338 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb87f408 <col:15> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f358 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | | |-ImplicitCastExpr 0x28deb87f420 <col:20> 'const limb *':'const limb *' <LValueToRValue>
| | | | `-DeclRefExpr 0x28deb87f378 <col:20> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87e500 'x_in' 'const limb *':'const limb *'
| | | `-ImplicitCastExpr 0x28deb87f450 <col:26> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87f438 <col:26> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87f398 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb87ea88 'gamma' 'felem':'limb [4]'
| | |-CallExpr 0x28deb87f4f8 <line:847:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x28deb87f4e0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f468 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x28deb87f528 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f488 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87eb00 'beta' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87f558 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87f540 <col:24> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87f4c0 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x28deb87f5e8 <line:850:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x28deb87f5d0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f570 <col:5> 'void (limb *, const limb *)' Function 0x28deb789250 'felem_diff' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb87f618 <col:16> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f590 <col:16> 'felem':'limb [4]' lvalue Var 0x28deb87ebf0 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87f648 <col:22> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87f630 <col:22> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87f5b0 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb87ea10 'delta' 'felem':'limb [4]'
| | |-CallExpr 0x28deb87f6d8 <line:852:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x28deb87f6c0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f660 <col:5> 'void (limb *, const limb *)' Function 0x28deb787880 'felem_sum' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb87f708 <col:15> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f680 <col:15> 'felem':'limb [4]' lvalue Var 0x28deb87ec68 'ftmp2' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87f738 <col:22> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87f720 <col:22> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87f6a0 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb87ea10 'delta' 'felem':'limb [4]'
| | |-CallExpr 0x28deb87f830 <line:854:5, col:26> 'void'
| | | |-ImplicitCastExpr 0x28deb87f818 <col:5> 'void (*)(limb *, const limb)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f750 <col:5> 'void (limb *, const limb)' Function 0x28deb78d988 'felem_scalar' 'void (limb *, const limb)'
| | | |-ImplicitCastExpr 0x28deb87f860 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f770 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ec68 'ftmp2' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87f878 <col:25> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x28deb87f790 <col:25> 'int' 3
| | |-CallExpr 0x28deb87f928 <line:856:5, col:31> 'void'
| | | |-ImplicitCastExpr 0x28deb87f910 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f890 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb87f960 <col:15> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f8b0 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | | |-ImplicitCastExpr 0x28deb87f990 <col:20> 'const limb *':'const limb *' <NoOp>
| | | | `-ImplicitCastExpr 0x28deb87f978 <col:20> 'limb *' <ArrayToPointerDecay>
| | | |   `-DeclRefExpr 0x28deb87f8d0 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb87ebf0 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87f9c0 <col:26> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87f9a8 <col:26> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87f8f0 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb87ec68 'ftmp2' 'felem':'limb [4]'
| | |-CallExpr 0x28deb87fa68 <line:858:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x28deb87fa50 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f9d8 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x28deb87fa98 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87f9f8 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87eb78 'alpha' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87fac8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87fab0 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87fa30 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x28deb87fb58 <line:861:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x28deb87fb40 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87fae0 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb87fb88 <col:18> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87fb00 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x28deb87fbb8 <col:23> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87fba0 <col:23> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87fb20 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87eb78 'alpha' 'felem':'limb [4]'
| | |-CallExpr 0x28deb87fc48 <line:863:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x28deb87fc30 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87fbd0 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb87fc78 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87fbf0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ebf0 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87fca8 <col:24> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87fc90 <col:24> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87fc10 <col:24> 'felem':'limb [4]' lvalue Var 0x28deb87eb00 'beta' 'felem':'limb [4]'
| | |-CallExpr 0x28deb87fd40 <line:864:5, col:25> 'void'
| | | |-ImplicitCastExpr 0x28deb87fd28 <col:5> 'void (*)(limb *, const limb)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87fcc0 <col:5> 'void (limb *, const limb)' Function 0x28deb78d988 'felem_scalar' 'void (limb *, const limb)'
| | | |-ImplicitCastExpr 0x28deb87fd70 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87fce0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ebf0 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb87fd88 <col:24> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x28deb87fd00 <col:24> 'int' 8
| | |-CallExpr 0x28deb87fe18 <line:866:5, col:32> 'void'
| | | |-ImplicitCastExpr 0x28deb87fe00 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87fda0 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78c408 'felem_diff_128_64' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb87fe48 <col:23> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87fdc0 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x28deb87fe78 <col:28> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87fe60 <col:28> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87fde0 <col:28> 'felem':'limb [4]' lvalue Var 0x28deb87ebf0 'ftmp' 'felem':'limb [4]'
| | |-CallExpr 0x28deb87ff08 <line:868:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x28deb87fef0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87fe90 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x28deb87ff38 <col:18> 'limb *':'limb *' <LValueToRValue>
| | | | `-DeclRefExpr 0x28deb87feb0 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb87e398 'x_out' 'limb *':'limb *'
| | | `-ImplicitCastExpr 0x28deb87ff68 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb87ff50 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87fed0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x28deb87fff8 <line:871:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x28deb87ffe0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87ff80 <col:5> 'void (limb *, const limb *)' Function 0x28deb787880 'felem_sum' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb880028 <col:15> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb87ffa0 <col:15> 'felem':'limb [4]' lvalue Var 0x28deb87ea10 'delta' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb880058 <col:22> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb880040 <col:22> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb87ffc0 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb87ea88 'gamma' 'felem':'limb [4]'
| | |-CallExpr 0x28deb8800e8 <line:873:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x28deb8800d0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880070 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb880130 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880090 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87ebf0 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb880148 <col:24> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x28deb8800b0 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87e578 'y_in' 'const limb *':'const limb *'
| | |-CallExpr 0x28deb8801d8 <line:874:5, col:25> 'void'
| | | |-ImplicitCastExpr 0x28deb8801c0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880160 <col:5> 'void (limb *, const limb *)' Function 0x28deb787880 'felem_sum' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb880208 <col:15> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880180 <col:15> 'felem':'limb [4]' lvalue Var 0x28deb87ebf0 'ftmp' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb880220 <col:21> 'const limb *':'const limb *' <LValueToRValue>
| | |   `-DeclRefExpr 0x28deb8801a0 <col:21> 'const limb *':'const limb *' lvalue ParmVar 0x28deb87e5f0 'z_in' 'const limb *':'const limb *'
| | |-CallExpr 0x28deb8802b0 <line:876:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x28deb880298 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880238 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb8802e0 <col:18> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880258 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x28deb880310 <col:23> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb8802f8 <col:23> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb880278 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb87ebf0 'ftmp' 'felem':'limb [4]'
| | |-CallExpr 0x28deb8803a0 <line:878:5, col:33> 'void'
| | | |-ImplicitCastExpr 0x28deb880388 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880328 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78c408 'felem_diff_128_64' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb8803d0 <col:23> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880348 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x28deb880400 <col:28> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb8803e8 <col:28> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb880368 <col:28> 'felem':'limb [4]' lvalue Var 0x28deb87ea10 'delta' 'felem':'limb [4]'
| | |-CallExpr 0x28deb880490 <line:880:5, col:28> 'void'
| | | |-ImplicitCastExpr 0x28deb880478 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880418 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x28deb8804c0 <col:18> 'limb *':'limb *' <LValueToRValue>
| | | | `-DeclRefExpr 0x28deb880438 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb87e488 'z_out' 'limb *':'limb *'
| | | `-ImplicitCastExpr 0x28deb8804f0 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb8804d8 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb880458 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | |-CallExpr 0x28deb880588 <line:883:5, col:25> 'void'
| | | |-ImplicitCastExpr 0x28deb880570 <col:5> 'void (*)(limb *, const limb)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880508 <col:5> 'void (limb *, const limb)' Function 0x28deb78d988 'felem_scalar' 'void (limb *, const limb)'
| | | |-ImplicitCastExpr 0x28deb8805b8 <col:18> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880528 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb87eb00 'beta' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb8805d0 <col:24> 'limb':'unsigned long long' <IntegralCast>
| | |   `-IntegerLiteral 0x28deb880548 <col:24> 'int' 4
| | |-CallExpr 0x28deb880660 <line:885:5, col:27> 'void'
| | | |-ImplicitCastExpr 0x28deb880648 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb8805e8 <col:5> 'void (limb *, const limb *)' Function 0x28deb789250 'felem_diff' 'void (limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb880690 <col:16> 'limb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880608 <col:16> 'felem':'limb [4]' lvalue Var 0x28deb87eb00 'beta' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb8806c0 <col:22> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb8806a8 <col:22> 'limb *':'limb *' <LValueToRValue>
| | |     `-DeclRefExpr 0x28deb880628 <col:22> 'limb *':'limb *' lvalue ParmVar 0x28deb87e398 'x_out' 'limb *':'limb *'
| | |-CallExpr 0x28deb880770 <line:887:5, col:31> 'void'
| | | |-ImplicitCastExpr 0x28deb880758 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb8806d8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb8807a8 <col:15> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb8806f8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | | |-ImplicitCastExpr 0x28deb8807d8 <col:20> 'const limb *':'const limb *' <NoOp>
| | | | `-ImplicitCastExpr 0x28deb8807c0 <col:20> 'limb *' <ArrayToPointerDecay>
| | | |   `-DeclRefExpr 0x28deb880718 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb87eb78 'alpha' 'felem':'limb [4]'
| | | `-ImplicitCastExpr 0x28deb880808 <col:27> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb8807f0 <col:27> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb880738 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb87eb00 'beta' 'felem':'limb [4]'
| | |-CallExpr 0x28deb8808b0 <line:889:5, col:29> 'void'
| | | |-ImplicitCastExpr 0x28deb880898 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880820 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
| | | |-ImplicitCastExpr 0x28deb8808e0 <col:18> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880840 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e968 'tmp2' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x28deb880910 <col:24> 'const limb *':'const limb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb8808f8 <col:24> 'limb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb880878 <col:24> 'felem':'limb [4]' lvalue Var 0x28deb87ea88 'gamma' 'felem':'limb [4]'
| | |-CallExpr 0x28deb880a00 <line:891:5, col:29> 'void'
| | | |-ImplicitCastExpr 0x28deb8809e8 <col:5> 'void (*)(widelimb *, const widelimb)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880928 <col:5> 'void (widelimb *, const widelimb)' Function 0x28deb78dfe8 'widefelem_scalar' 'void (widelimb *, const widelimb)'
| | | |-ImplicitCastExpr 0x28deb880a30 <col:22> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880948 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e968 'tmp2' 'widefelem':'widelimb [7]'
| | | `-IntegerLiteral 0x28deb880968 <col:28> 'int' 8
| | |-CallExpr 0x28deb880b20 <line:893:5, col:29> 'void'
| | | |-ImplicitCastExpr 0x28deb880b08 <col:5> 'void (*)(widelimb *, const widelimb *)' <FunctionToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880a48 <col:5> 'void (widelimb *, const widelimb *)' Function 0x28deb78a8e8 'widefelem_diff' 'void (widelimb *, const widelimb *)'
| | | |-ImplicitCastExpr 0x28deb880b50 <col:20> 'widelimb *' <ArrayToPointerDecay>
| | | | `-DeclRefExpr 0x28deb880a68 <col:20> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| | | `-ImplicitCastExpr 0x28deb880b80 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| | |   `-ImplicitCastExpr 0x28deb880b68 <col:25> 'widelimb *' <ArrayToPointerDecay>
| | |     `-DeclRefExpr 0x28deb880a88 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e968 'tmp2' 'widefelem':'widelimb [7]'
| | `-CallExpr 0x28deb880c10 <line:895:5, col:28> 'void'
| |   |-ImplicitCastExpr 0x28deb880bf8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
| |   | `-DeclRefExpr 0x28deb880b98 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
| |   |-ImplicitCastExpr 0x28deb880c40 <col:18> 'limb *':'limb *' <LValueToRValue>
| |   | `-DeclRefExpr 0x28deb880bb8 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb87e410 'y_out' 'limb *':'limb *'
| |   `-ImplicitCastExpr 0x28deb880c70 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
| |     `-ImplicitCastExpr 0x28deb880c58 <col:25> 'widelimb *' <ArrayToPointerDecay>
| |       `-DeclRefExpr 0x28deb880bd8 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb87e8f0 'tmp' 'widefelem':'widelimb [7]'
| `-FullComment 0x28deb9b50e0 <line:808:4, col:78>
|   `-ParagraphComment 0x28deb9b50b8 <col:4, col:78>
|     `-TextComment 0x28deb9b5090 <col:4, col:78> Text="***************************************************************************"
|-FunctionDecl 0x28deb8814b8 <line:916:1, line:1079:1> line:916:13 used point_add 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' static
| |-ParmVarDecl 0x28deb880db0 <col:23, col:29> col:29 used x3 'limb *':'limb *'
| |-ParmVarDecl 0x28deb880e28 <col:33, col:39> col:39 used y3 'limb *':'limb *'
| |-ParmVarDecl 0x28deb880ea0 <col:43, col:49> col:49 used z3 'limb *':'limb *'
| |-ParmVarDecl 0x28deb880f18 <line:917:23, col:35> col:35 used x1 'const limb *':'const limb *'
| |-ParmVarDecl 0x28deb880f90 <col:39, col:51> col:51 used y1 'const limb *':'const limb *'
| |-ParmVarDecl 0x28deb881008 <col:55, col:67> col:67 used z1 'const limb *':'const limb *'
| |-ParmVarDecl 0x28deb881088 <line:918:23, col:33> col:33 used mixed 'const int'
| |-ParmVarDecl 0x28deb881100 <col:40, col:52> col:52 used x2 'const limb *':'const limb *'
| |-ParmVarDecl 0x28deb881178 <col:56, col:68> col:68 used y2 'const limb *':'const limb *'
| |-ParmVarDecl 0x28deb8811f0 <line:919:23, col:35> col:35 used z2 'const limb *':'const limb *'
| `-CompoundStmt 0x28deb883c88 <line:920:1, line:1079:1>
|   |-DeclStmt 0x28deb8819c8 <line:921:5, col:64>
|   | |-VarDecl 0x28deb8815d0 <col:5, col:11> col:11 used ftmp 'felem':'limb [4]'
|   | |-VarDecl 0x28deb881648 <col:5, col:17> col:17 used ftmp2 'felem':'limb [4]'
|   | |-VarDecl 0x28deb8816c0 <col:5, col:24> col:24 used ftmp3 'felem':'limb [4]'
|   | |-VarDecl 0x28deb881738 <col:5, col:31> col:31 used ftmp4 'felem':'limb [4]'
|   | |-VarDecl 0x28deb8817b0 <col:5, col:38> col:38 used ftmp5 'felem':'limb [4]'
|   | |-VarDecl 0x28deb881828 <col:5, col:45> col:45 used x_out 'felem':'limb [4]'
|   | |-VarDecl 0x28deb8818a0 <col:5, col:52> col:52 used y_out 'felem':'limb [4]'
|   | `-VarDecl 0x28deb881918 <col:5, col:59> col:59 used z_out 'felem':'limb [4]'
|   |-DeclStmt 0x28deb881ae8 <line:922:5, col:24>
|   | |-VarDecl 0x28deb8819f0 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
|   | `-VarDecl 0x28deb881a68 <col:5, col:20> col:20 used tmp2 'widefelem':'widelimb [7]'
|   |-DeclStmt 0x28deb881d08 <line:923:5, col:50>
|   | |-VarDecl 0x28deb881b10 <col:5, col:10> col:10 used z1_is_zero 'limb':'unsigned long long'
|   | |-VarDecl 0x28deb881b88 <col:5, col:22> col:22 used z2_is_zero 'limb':'unsigned long long'
|   | |-VarDecl 0x28deb881c00 <col:5, col:34> col:34 used x_equal 'limb':'unsigned long long'
|   | `-VarDecl 0x28deb881c78 <col:5, col:43> col:43 used y_equal 'limb':'unsigned long long'
|   |-IfStmt 0x28deb8727b0 <line:925:5, line:951:5> has_else
|   | |-UnaryOperator 0x28deb881d58 <line:925:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x28deb881d40 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x28deb881d20 <col:10> 'const int' lvalue ParmVar 0x28deb881088 'mixed' 'const int'
|   | |-CompoundStmt 0x28deb872590 <col:17, line:941:5>
|   | | |-CallExpr 0x28deb881e00 <line:927:9, col:29> 'void'
|   | | | |-ImplicitCastExpr 0x28deb881de8 <col:9> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb881d70 <col:9> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | | | |-ImplicitCastExpr 0x28deb881e30 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb881d90 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | | | `-ImplicitCastExpr 0x28deb881e48 <col:27> 'const limb *':'const limb *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x28deb881dc8 <col:27> 'const limb *':'const limb *' lvalue ParmVar 0x28deb8811f0 'z2' 'const limb *':'const limb *'
|   | | |-CallExpr 0x28deb881ef0 <line:928:9, col:32> 'void'
|   | | | |-ImplicitCastExpr 0x28deb881ed8 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb881e60 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | | | |-ImplicitCastExpr 0x28deb881f20 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb881e80 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881648 'ftmp2' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x28deb881f50 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x28deb881f38 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   | | |     `-DeclRefExpr 0x28deb881eb8 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | | |-CallExpr 0x28deb882000 <line:931:9, col:33> 'void'
|   | | | |-ImplicitCastExpr 0x28deb881fe8 <col:9> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb881f68 <col:9> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | | | |-ImplicitCastExpr 0x28deb882038 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb881f88 <col:19> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | | | |-ImplicitCastExpr 0x28deb882068 <col:24> 'const limb *':'const limb *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x28deb882050 <col:24> 'limb *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x28deb881fa8 <col:24> 'felem':'limb [4]' lvalue Var 0x28deb881648 'ftmp2' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x28deb882080 <col:31> 'const limb *':'const limb *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x28deb881fc8 <col:31> 'const limb *':'const limb *' lvalue ParmVar 0x28deb8811f0 'z2' 'const limb *':'const limb *'
|   | | |-CallExpr 0x28deb8720c0 <line:932:9, col:32> 'void'
|   | | | |-ImplicitCastExpr 0x28deb882110 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb882098 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | | | |-ImplicitCastExpr 0x28deb8720f0 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb8820b8 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881738 'ftmp4' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x28deb872120 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x28deb872108 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   | | |     `-DeclRefExpr 0x28deb8820f0 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | | |-CallExpr 0x28deb8721e8 <line:935:9, col:34> 'void'
|   | | | |-ImplicitCastExpr 0x28deb8721d0 <col:9> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb872138 <col:9> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | | | |-ImplicitCastExpr 0x28deb872220 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb872158 <col:19> 'widefelem':'widelimb [7]' lvalue Var 0x28deb881a68 'tmp2' 'widefelem':'widelimb [7]'
|   | | | |-ImplicitCastExpr 0x28deb872250 <col:25> 'const limb *':'const limb *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x28deb872238 <col:25> 'limb *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x28deb872190 <col:25> 'felem':'limb [4]' lvalue Var 0x28deb881738 'ftmp4' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x28deb872268 <col:32> 'const limb *':'const limb *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x28deb8721b0 <col:32> 'const limb *':'const limb *' lvalue ParmVar 0x28deb880f90 'y1' 'const limb *':'const limb *'
|   | | |-CallExpr 0x28deb8722f8 <line:936:9, col:33> 'void'
|   | | | |-ImplicitCastExpr 0x28deb8722e0 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb872280 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | | | |-ImplicitCastExpr 0x28deb872328 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb8722a0 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881738 'ftmp4' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x28deb872358 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   | | |   `-ImplicitCastExpr 0x28deb872340 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   | | |     `-DeclRefExpr 0x28deb8722c0 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x28deb881a68 'tmp2' 'widefelem':'widelimb [7]'
|   | | |-CallExpr 0x28deb872408 <line:939:9, col:34> 'void'
|   | | | |-ImplicitCastExpr 0x28deb8723f0 <col:9> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb872370 <col:9> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | | | |-ImplicitCastExpr 0x28deb872440 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb872390 <col:19> 'widefelem':'widelimb [7]' lvalue Var 0x28deb881a68 'tmp2' 'widefelem':'widelimb [7]'
|   | | | |-ImplicitCastExpr 0x28deb872470 <col:25> 'const limb *':'const limb *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x28deb872458 <col:25> 'limb *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x28deb8723b0 <col:25> 'felem':'limb [4]' lvalue Var 0x28deb881648 'ftmp2' 'felem':'limb [4]'
|   | | | `-ImplicitCastExpr 0x28deb872488 <col:32> 'const limb *':'const limb *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x28deb8723d0 <col:32> 'const limb *':'const limb *' lvalue ParmVar 0x28deb880f18 'x1' 'const limb *':'const limb *'
|   | | `-CallExpr 0x28deb872518 <line:940:9, col:33> 'void'
|   | |   |-ImplicitCastExpr 0x28deb872500 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x28deb8724a0 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |   |-ImplicitCastExpr 0x28deb872548 <col:22> 'limb *' <ArrayToPointerDecay>
|   | |   | `-DeclRefExpr 0x28deb8724c0 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881648 'ftmp2' 'felem':'limb [4]'
|   | |   `-ImplicitCastExpr 0x28deb872578 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   | |     `-ImplicitCastExpr 0x28deb872560 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   | |       `-DeclRefExpr 0x28deb8724e0 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x28deb881a68 'tmp2' 'widefelem':'widelimb [7]'
|   | `-CompoundStmt 0x28deb872790 <line:941:12, line:951:5>
|   |   |-CallExpr 0x28deb872658 <line:947:9, col:31> 'void'
|   |   | |-ImplicitCastExpr 0x28deb872640 <col:9> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb8725e0 <col:9> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb872688 <col:22> 'limb *' <ArrayToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb872600 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881738 'ftmp4' 'felem':'limb [4]'
|   |   | `-ImplicitCastExpr 0x28deb8726a0 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28deb872620 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x28deb880f90 'y1' 'const limb *':'const limb *'
|   |   `-CallExpr 0x28deb872730 <line:950:9, col:31> 'void'
|   |     |-ImplicitCastExpr 0x28deb872718 <col:9> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb8726b8 <col:9> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   |     |-ImplicitCastExpr 0x28deb872760 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb8726d8 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881648 'ftmp2' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x28deb872778 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   |       `-DeclRefExpr 0x28deb8726f8 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x28deb880f18 'x1' 'const limb *':'const limb *'
|   |-CallExpr 0x28deb872850 <line:954:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x28deb872838 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8727d8 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb872880 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8727f8 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb872898 <col:23> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb872818 <col:23> 'const limb *':'const limb *' lvalue ParmVar 0x28deb881008 'z1' 'const limb *':'const limb *'
|   |-CallExpr 0x28deb872940 <line:955:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb872928 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8728b0 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb872970 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8728d0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb8815d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb8729a0 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb872988 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb872908 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb872a50 <line:958:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb872a38 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8729b8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb872a88 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8729d8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb872ab8 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb872aa0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb8729f8 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb8815d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb872ad0 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb872a18 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb881008 'z1' 'const limb *':'const limb *'
|   |-CallExpr 0x28deb872b78 <line:959:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb872b60 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb872ae8 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb872ba8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb872b08 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb8816c0 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb872bd8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb872bc0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb872b40 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb872c88 <line:962:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x28deb872c70 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb872bf0 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb872cc0 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb872c10 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb872cf0 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb872cd8 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb872c30 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb8816c0 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb872d08 <col:27> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb872c50 <col:27> 'const limb *':'const limb *' lvalue ParmVar 0x28deb881178 'y2' 'const limb *':'const limb *'
|   |-CallExpr 0x28deb872d98 <line:966:5, col:33> 'void'
|   | |-ImplicitCastExpr 0x28deb872d80 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb872d20 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78c408 'felem_diff_128_64' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb872dc8 <col:23> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb872d40 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb872df8 <col:28> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb872de0 <col:28> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb872d60 <col:28> 'felem':'limb [4]' lvalue Var 0x28deb881738 'ftmp4' 'felem':'limb [4]'
|   |-CallExpr 0x28deb872e88 <line:968:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb872e70 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb872e10 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb872eb8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb872e30 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb8816c0 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb872ee8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb872ed0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb872e50 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb872f98 <line:971:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb872f80 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb872f00 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb872fd0 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb872f20 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb873000 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb872fe8 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb872f40 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb8815d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb873018 <col:26> 'const limb *':'const limb *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb872f60 <col:26> 'const limb *':'const limb *' lvalue ParmVar 0x28deb881100 'x2' 'const limb *':'const limb *'
|   |-CallExpr 0x28deb8730a8 <line:975:5, col:33> 'void'
|   | |-ImplicitCastExpr 0x28deb873090 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb873030 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78c408 'felem_diff_128_64' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb8730d8 <col:23> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb873050 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb873108 <col:28> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb8730f0 <col:28> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb873070 <col:28> 'felem':'limb [4]' lvalue Var 0x28deb881648 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x28deb873198 <line:977:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb873180 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb873120 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb8731c8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb873140 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb8815d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb8731f8 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb8731e0 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb873160 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   |-BinaryOperator 0x28deb8732f8 <line:983:5, col:33> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb873210 <col:5> 'limb':'unsigned long long' lvalue Var 0x28deb881c00 'x_equal' 'limb':'unsigned long long'
|   | `-CallExpr 0x28deb8732a0 <col:15, col:33> 'limb':'unsigned long long'
|   |   |-ImplicitCastExpr 0x28deb873288 <col:15> 'limb (*)(const limb *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x28deb873248 <col:15> 'limb (const limb *)' Function 0x28deb87af48 'felem_is_zero' 'limb (const limb *)'
|   |   `-ImplicitCastExpr 0x28deb8732e0 <col:29> 'const limb *':'const limb *' <NoOp>
|   |     `-ImplicitCastExpr 0x28deb8732c8 <col:29> 'limb *' <ArrayToPointerDecay>
|   |       `-DeclRefExpr 0x28deb873268 <col:29> 'felem':'limb [4]' lvalue Var 0x28deb8815d0 'ftmp' 'felem':'limb [4]'
|   |-BinaryOperator 0x28deb873400 <line:984:5, col:34> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb873318 <col:5> 'limb':'unsigned long long' lvalue Var 0x28deb881c78 'y_equal' 'limb':'unsigned long long'
|   | `-CallExpr 0x28deb8733a8 <col:15, col:34> 'limb':'unsigned long long'
|   |   |-ImplicitCastExpr 0x28deb873390 <col:15> 'limb (*)(const limb *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x28deb873350 <col:15> 'limb (const limb *)' Function 0x28deb87af48 'felem_is_zero' 'limb (const limb *)'
|   |   `-ImplicitCastExpr 0x28deb8733e8 <col:29> 'const limb *':'const limb *' <NoOp>
|   |     `-ImplicitCastExpr 0x28deb8733d0 <col:29> 'limb *' <ArrayToPointerDecay>
|   |       `-DeclRefExpr 0x28deb873370 <col:29> 'felem':'limb [4]' lvalue Var 0x28deb8816c0 'ftmp3' 'felem':'limb [4]'
|   |-BinaryOperator 0x28deb8734f0 <line:985:5, col:34> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb873420 <col:5> 'limb':'unsigned long long' lvalue Var 0x28deb881b10 'z1_is_zero' 'limb':'unsigned long long'
|   | `-CallExpr 0x28deb8734b0 <col:18, col:34> 'limb':'unsigned long long'
|   |   |-ImplicitCastExpr 0x28deb873498 <col:18> 'limb (*)(const limb *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x28deb873458 <col:18> 'limb (const limb *)' Function 0x28deb87af48 'felem_is_zero' 'limb (const limb *)'
|   |   `-ImplicitCastExpr 0x28deb8734d8 <col:32> 'const limb *':'const limb *' <LValueToRValue>
|   |     `-DeclRefExpr 0x28deb873478 <col:32> 'const limb *':'const limb *' lvalue ParmVar 0x28deb881008 'z1' 'const limb *':'const limb *'
|   |-BinaryOperator 0x28deb8735e0 <line:986:5, col:34> 'limb':'unsigned long long' '='
|   | |-DeclRefExpr 0x28deb873510 <col:5> 'limb':'unsigned long long' lvalue Var 0x28deb881b88 'z2_is_zero' 'limb':'unsigned long long'
|   | `-CallExpr 0x28deb8735a0 <col:18, col:34> 'limb':'unsigned long long'
|   |   |-ImplicitCastExpr 0x28deb873588 <col:18> 'limb (*)(const limb *)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x28deb873548 <col:18> 'limb (const limb *)' Function 0x28deb87af48 'felem_is_zero' 'limb (const limb *)'
|   |   `-ImplicitCastExpr 0x28deb8735c8 <col:32> 'const limb *':'const limb *' <LValueToRValue>
|   |     `-DeclRefExpr 0x28deb873568 <col:32> 'const limb *':'const limb *' lvalue ParmVar 0x28deb8811f0 'z2' 'const limb *':'const limb *'
|   |-IfStmt 0x28deb8739d0 <line:988:5, line:991:5>
|   | |-BinaryOperator 0x28deb873750 <line:988:9, col:47> 'int' '&&'
|   | | |-BinaryOperator 0x28deb8736e0 <col:9, col:32> 'int' '&&'
|   | | | |-BinaryOperator 0x28deb873670 <col:9, col:20> 'int' '&&'
|   | | | | |-ImplicitCastExpr 0x28deb873640 <col:9> 'limb':'unsigned long long' <LValueToRValue>
|   | | | | | `-DeclRefExpr 0x28deb873600 <col:9> 'limb':'unsigned long long' lvalue Var 0x28deb881c00 'x_equal' 'limb':'unsigned long long'
|   | | | | `-ImplicitCastExpr 0x28deb873658 <col:20> 'limb':'unsigned long long' <LValueToRValue>
|   | | | |   `-DeclRefExpr 0x28deb873620 <col:20> 'limb':'unsigned long long' lvalue Var 0x28deb881c78 'y_equal' 'limb':'unsigned long long'
|   | | | `-UnaryOperator 0x28deb8736c8 <col:31, col:32> 'int' prefix '!' cannot overflow
|   | | |   `-ImplicitCastExpr 0x28deb8736b0 <col:32> 'limb':'unsigned long long' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x28deb873690 <col:32> 'limb':'unsigned long long' lvalue Var 0x28deb881b10 'z1_is_zero' 'limb':'unsigned long long'
|   | | `-UnaryOperator 0x28deb873738 <col:46, col:47> 'int' prefix '!' cannot overflow
|   | |   `-ImplicitCastExpr 0x28deb873720 <col:47> 'limb':'unsigned long long' <LValueToRValue>
|   | |     `-DeclRefExpr 0x28deb873700 <col:47> 'limb':'unsigned long long' lvalue Var 0x28deb881b88 'z2_is_zero' 'limb':'unsigned long long'
|   | `-CompoundStmt 0x28deb8739b0 <col:59, line:991:5>
|   |   |-CallExpr 0x28deb8738c0 <line:989:9, col:44> 'void'
|   |   | |-ImplicitCastExpr 0x28deb8738a8 <col:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb873770 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x28deb87e7f8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb873910 <col:22> 'limb *':'limb *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x28deb873790 <col:22> 'limb *':'limb *' lvalue ParmVar 0x28deb880db0 'x3' 'limb *':'limb *'
|   |   | |-ImplicitCastExpr 0x28deb873928 <col:26> 'limb *':'limb *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x28deb8737b0 <col:26> 'limb *':'limb *' lvalue ParmVar 0x28deb880e28 'y3' 'limb *':'limb *'
|   |   | |-ImplicitCastExpr 0x28deb873940 <col:30> 'limb *':'limb *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x28deb8737d0 <col:30> 'limb *':'limb *' lvalue ParmVar 0x28deb880ea0 'z3' 'limb *':'limb *'
|   |   | |-ImplicitCastExpr 0x28deb873958 <col:34> 'const limb *':'const limb *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x28deb8737f0 <col:34> 'const limb *':'const limb *' lvalue ParmVar 0x28deb880f18 'x1' 'const limb *':'const limb *'
|   |   | |-ImplicitCastExpr 0x28deb873970 <col:38> 'const limb *':'const limb *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x28deb873810 <col:38> 'const limb *':'const limb *' lvalue ParmVar 0x28deb880f90 'y1' 'const limb *':'const limb *'
|   |   | `-ImplicitCastExpr 0x28deb873988 <col:42> 'const limb *':'const limb *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28deb873830 <col:42> 'const limb *':'const limb *' lvalue ParmVar 0x28deb881008 'z1' 'const limb *':'const limb *'
|   |   `-ReturnStmt 0x28deb8739a0 <line:990:9>
|   |-IfStmt 0x28deb873d68 <line:994:5, line:1000:5> has_else
|   | |-UnaryOperator 0x28deb873a20 <line:994:9, col:10> 'int' prefix '!' cannot overflow
|   | | `-ImplicitCastExpr 0x28deb873a08 <col:10> 'int' <LValueToRValue>
|   | |   `-DeclRefExpr 0x28deb8739e8 <col:10> 'const int' lvalue ParmVar 0x28deb881088 'mixed' 'const int'
|   | |-CompoundStmt 0x28deb873c58 <col:17, line:997:5>
|   | | |-CallExpr 0x28deb873ad0 <line:995:9, col:30> 'void'
|   | | | |-ImplicitCastExpr 0x28deb873ab8 <col:9> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb873a38 <col:9> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | | | |-ImplicitCastExpr 0x28deb873b08 <col:19> 'widelimb *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb873a58 <col:19> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | | | |-ImplicitCastExpr 0x28deb873b20 <col:24> 'const limb *':'const limb *' <LValueToRValue>
|   | | | | `-DeclRefExpr 0x28deb873a78 <col:24> 'const limb *':'const limb *' lvalue ParmVar 0x28deb881008 'z1' 'const limb *':'const limb *'
|   | | | `-ImplicitCastExpr 0x28deb873b38 <col:28> 'const limb *':'const limb *' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x28deb873a98 <col:28> 'const limb *':'const limb *' lvalue ParmVar 0x28deb8811f0 'z2' 'const limb *':'const limb *'
|   | | `-CallExpr 0x28deb873be0 <line:996:9, col:32> 'void'
|   | |   |-ImplicitCastExpr 0x28deb873bc8 <col:9> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x28deb873b50 <col:9> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |   |-ImplicitCastExpr 0x28deb873c10 <col:22> 'limb *' <ArrayToPointerDecay>
|   | |   | `-DeclRefExpr 0x28deb873b70 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb8817b0 'ftmp5' 'felem':'limb [4]'
|   | |   `-ImplicitCastExpr 0x28deb873c40 <col:29> 'const widelimb *':'const widelimb *' <NoOp>
|   | |     `-ImplicitCastExpr 0x28deb873c28 <col:29> 'widelimb *' <ArrayToPointerDecay>
|   | |       `-DeclRefExpr 0x28deb873ba8 <col:29> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | `-CompoundStmt 0x28deb873d50 <line:997:12, line:1000:5>
|   |   `-CallExpr 0x28deb873cf0 <line:999:9, col:31> 'void'
|   |     |-ImplicitCastExpr 0x28deb873cd8 <col:9> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb873c78 <col:9> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   |     |-ImplicitCastExpr 0x28deb873d20 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     | `-DeclRefExpr 0x28deb873c98 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb8817b0 'ftmp5' 'felem':'limb [4]'
|   |     `-ImplicitCastExpr 0x28deb873d38 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   |       `-DeclRefExpr 0x28deb873cb8 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x28deb881008 'z1' 'const limb *':'const limb *'
|   |-CallExpr 0x28deb873e28 <line:1003:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb873e10 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb873d90 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb873e60 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb873db0 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb873e90 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb873e78 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb873dd0 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb8815d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb873ec0 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb873ea8 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb873df0 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb8817b0 'ftmp5' 'felem':'limb [4]'
|   |-CallExpr 0x28deb873f68 <line:1004:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb873f50 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb873ed8 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb873f98 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb873ef8 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb881918 'z_out' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb873fc8 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb873fb0 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb873f30 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb874058 <line:1007:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x28deb874040 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb873fe0 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb874088 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb874000 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb8817b0 'ftmp5' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb882140 <col:25> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb8740a0 <col:25> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb874020 <col:25> 'felem':'limb [4]' lvalue Var 0x28deb8815d0 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb8821d0 <line:1008:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb8821b8 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882158 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb882200 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882178 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb882230 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb882218 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb882198 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb8815d0 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb8822c0 <line:1009:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb8822a8 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882248 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb8822f0 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882268 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb8815d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb882320 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb882308 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb882288 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb8823d0 <line:1012:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb8823b8 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882338 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb882408 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882358 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb882438 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb882420 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb882378 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb8815d0 'ftmp' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb882468 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb882450 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb882398 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb8817b0 'ftmp5' 'felem':'limb [4]'
|   |-CallExpr 0x28deb8824f8 <line:1013:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb8824e0 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882480 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb882528 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8824a0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb8817b0 'ftmp5' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb882558 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb882540 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb8824c0 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb882608 <line:1016:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb8825f0 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882570 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb882640 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882590 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb882670 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb882658 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb8825b0 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb881648 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb8826a0 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb882688 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb8825d0 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb8815d0 'ftmp' 'felem':'limb [4]'
|   |-CallExpr 0x28deb882730 <line:1017:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb882718 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8826b8 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb882760 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8826d8 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb881648 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb882790 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb882778 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb8826f8 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb882840 <line:1020:5, col:32> 'void'
|   | |-ImplicitCastExpr 0x28deb882828 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8827a8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb882878 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8827c8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb8828a8 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb882890 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb8827e8 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb881738 'ftmp4' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb8828d8 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb8828c0 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb882808 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb8817b0 'ftmp5' 'felem':'limb [4]'
|   |-CallExpr 0x28deb882968 <line:1024:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x28deb882950 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8828f0 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb882998 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882910 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb881a68 'tmp2' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb8829c8 <col:24> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb8829b0 <col:24> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb882930 <col:24> 'felem':'limb [4]' lvalue Var 0x28deb8816c0 'ftmp3' 'felem':'limb [4]'
|   |-CallExpr 0x28deb882a58 <line:1028:5, col:34> 'void'
|   | |-ImplicitCastExpr 0x28deb882a40 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8829e0 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78c408 'felem_diff_128_64' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb882a88 <col:23> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882a00 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x28deb881a68 'tmp2' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb882ab8 <col:29> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb882aa0 <col:29> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb882a20 <col:29> 'felem':'limb [4]' lvalue Var 0x28deb8817b0 'ftmp5' 'felem':'limb [4]'
|   |-CallExpr 0x28deb882b48 <line:1032:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x28deb882b30 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882ad0 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb882b78 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882af0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb8817b0 'ftmp5' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb882ba8 <col:25> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb882b90 <col:25> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb882b10 <col:25> 'felem':'limb [4]' lvalue Var 0x28deb881648 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x28deb882c40 <line:1033:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x28deb882c28 <col:5> 'void (*)(limb *, const limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882bc0 <col:5> 'void (limb *, const limb)' Function 0x28deb78d988 'felem_scalar' 'void (limb *, const limb)'
|   | |-ImplicitCastExpr 0x28deb882c70 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882be0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb8817b0 'ftmp5' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb882c88 <col:25> 'limb':'unsigned long long' <IntegralCast>
|   |   `-IntegerLiteral 0x28deb882c00 <col:25> 'int' 2
|   |-CallExpr 0x28deb882d18 <line:1040:5, col:34> 'void'
|   | |-ImplicitCastExpr 0x28deb882d00 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882ca0 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78c408 'felem_diff_128_64' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb882d48 <col:23> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882cc0 <col:23> 'widefelem':'widelimb [7]' lvalue Var 0x28deb881a68 'tmp2' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb882d78 <col:29> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb882d60 <col:29> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb882ce0 <col:29> 'felem':'limb [4]' lvalue Var 0x28deb8817b0 'ftmp5' 'felem':'limb [4]'
|   |-CallExpr 0x28deb882e20 <line:1042:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x28deb882e08 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882d90 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb882e50 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882db0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb881828 'x_out' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb882e80 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb882e68 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb882de8 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb881a68 'tmp2' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb882f10 <line:1045:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb882ef8 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882e98 <col:5> 'void (limb *, const limb *)' Function 0x28deb789250 'felem_diff' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb882f40 <col:16> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882eb8 <col:16> 'felem':'limb [4]' lvalue Var 0x28deb881648 'ftmp2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb882f70 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb882f58 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb882ed8 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb881828 'x_out' 'felem':'limb [4]'
|   |-CallExpr 0x28deb883020 <line:1051:5, col:33> 'void'
|   | |-ImplicitCastExpr 0x28deb883008 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882f88 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb883058 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb882fa8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb881a68 'tmp2' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb883088 <col:21> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb883070 <col:21> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb882fc8 <col:21> 'felem':'limb [4]' lvalue Var 0x28deb8816c0 'ftmp3' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb8830b8 <col:28> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb8830a0 <col:28> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb882fe8 <col:28> 'felem':'limb [4]' lvalue Var 0x28deb881648 'ftmp2' 'felem':'limb [4]'
|   |-CallExpr 0x28deb883148 <line:1058:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x28deb883130 <col:5> 'void (*)(widelimb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8830d0 <col:5> 'void (widelimb *, const widelimb *)' Function 0x28deb78a8e8 'widefelem_diff' 'void (widelimb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb883178 <col:20> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8830f0 <col:20> 'widefelem':'widelimb [7]' lvalue Var 0x28deb881a68 'tmp2' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb8831a8 <col:26> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb883190 <col:26> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb883110 <col:26> 'widefelem':'widelimb [7]' lvalue Var 0x28deb8819f0 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb883250 <line:1060:5, col:29> 'void'
|   | |-ImplicitCastExpr 0x28deb883238 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8831c0 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb883280 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8831e0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb8818a0 'y_out' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb8832b0 <col:25> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb883298 <col:25> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb883218 <col:25> 'widefelem':'widelimb [7]' lvalue Var 0x28deb881a68 'tmp2' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb8833c0 <line:1070:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x28deb8833a8 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8832c8 <col:5> 'void (limb *, const limb *, limb)' Function 0x28deb86fa38 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x28deb8833f8 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8832e8 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881828 'x_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x28deb883410 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb883308 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x28deb881100 'x2' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x28deb883428 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb883328 <col:33> 'limb':'unsigned long long' lvalue Var 0x28deb881b10 'z1_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x28deb8834d8 <line:1071:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x28deb8834c0 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb883440 <col:5> 'void (limb *, const limb *, limb)' Function 0x28deb86fa38 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x28deb883510 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb883460 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881828 'x_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x28deb883528 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb883480 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x28deb880f18 'x1' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x28deb883540 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb8834a0 <col:33> 'limb':'unsigned long long' lvalue Var 0x28deb881b88 'z2_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x28deb8835f0 <line:1072:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x28deb8835d8 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb883558 <col:5> 'void (limb *, const limb *, limb)' Function 0x28deb86fa38 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x28deb883628 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb883578 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb8818a0 'y_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x28deb883640 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb883598 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x28deb881178 'y2' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x28deb883658 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb8835b8 <col:33> 'limb':'unsigned long long' lvalue Var 0x28deb881b10 'z1_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x28deb883708 <line:1073:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x28deb8836f0 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb883670 <col:5> 'void (limb *, const limb *, limb)' Function 0x28deb86fa38 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x28deb883740 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb883690 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb8818a0 'y_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x28deb883758 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb8836b0 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x28deb880f90 'y1' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x28deb883770 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb8836d0 <col:33> 'limb':'unsigned long long' lvalue Var 0x28deb881b88 'z2_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x28deb883820 <line:1074:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x28deb883808 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb883788 <col:5> 'void (limb *, const limb *, limb)' Function 0x28deb86fa38 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x28deb883858 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8837a8 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881918 'z_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x28deb883870 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb8837c8 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x28deb8811f0 'z2' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x28deb883888 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb8837e8 <col:33> 'limb':'unsigned long long' lvalue Var 0x28deb881b10 'z1_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x28deb883938 <line:1075:5, col:43> 'void'
|   | |-ImplicitCastExpr 0x28deb883920 <col:5> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8838a0 <col:5> 'void (limb *, const limb *, limb)' Function 0x28deb86fa38 'copy_conditional' 'void (limb *, const limb *, limb)'
|   | |-ImplicitCastExpr 0x28deb883970 <col:22> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8838c0 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881918 'z_out' 'felem':'limb [4]'
|   | |-ImplicitCastExpr 0x28deb883988 <col:29> 'const limb *':'const limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb8838e0 <col:29> 'const limb *':'const limb *' lvalue ParmVar 0x28deb881008 'z1' 'const limb *':'const limb *'
|   | `-ImplicitCastExpr 0x28deb8839a0 <col:33> 'limb':'unsigned long long' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb883900 <col:33> 'limb':'unsigned long long' lvalue Var 0x28deb881b88 'z2_is_zero' 'limb':'unsigned long long'
|   |-CallExpr 0x28deb883a30 <line:1076:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb883a18 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb8839b8 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb883a60 <col:18> 'limb *':'limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb8839d8 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb880db0 'x3' 'limb *':'limb *'
|   | `-ImplicitCastExpr 0x28deb883a90 <col:22> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb883a78 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb8839f8 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881828 'x_out' 'felem':'limb [4]'
|   |-CallExpr 0x28deb883b20 <line:1077:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb883b08 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb883aa8 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb883b50 <col:18> 'limb *':'limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb883ac8 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb880e28 'y3' 'limb *':'limb *'
|   | `-ImplicitCastExpr 0x28deb883b80 <col:22> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb883b68 <col:22> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb883ae8 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb8818a0 'y_out' 'felem':'limb [4]'
|   `-CallExpr 0x28deb883c10 <line:1078:5, col:27> 'void'
|     |-ImplicitCastExpr 0x28deb883bf8 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x28deb883b98 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|     |-ImplicitCastExpr 0x28deb883c40 <col:18> 'limb *':'limb *' <LValueToRValue>
|     | `-DeclRefExpr 0x28deb883bb8 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb880ea0 'z3' 'limb *':'limb *'
|     `-ImplicitCastExpr 0x28deb883c70 <col:22> 'const limb *':'const limb *' <NoOp>
|       `-ImplicitCastExpr 0x28deb883c58 <col:22> 'limb *' <ArrayToPointerDecay>
|         `-DeclRefExpr 0x28deb883bd8 <col:22> 'felem':'limb [4]' lvalue Var 0x28deb881918 'z_out' 'felem':'limb [4]'
|-FunctionDecl 0x28deb8843c8 <line:1086:1, line:1104:1> line:1086:13 used select_point 'void (const u64, unsigned int, const felem (*)[3], felem *)' static
| |-ParmVarDecl 0x28deb883e50 <col:26, col:36> col:36 used idx 'const u64':'const unsigned long long'
| |-ParmVarDecl 0x28deb883ed0 <col:41, col:54> col:54 used size 'unsigned int'
| |-ParmVarDecl 0x28deb8840a0 <line:1087:26, col:50> col:38 used pre_comp 'const felem (*)[3]':'const felem (*)[3]'
| |-ParmVarDecl 0x28deb884220 <col:53, col:64> col:59 used out 'felem *':'felem *'
| `-CompoundStmt 0x28deb8855e8 <line:1088:1, line:1104:1>
|   |-DeclStmt 0x28deb8845b8 <line:1089:5, col:18>
|   | |-VarDecl 0x28deb8844b8 <col:5, col:14> col:14 used i 'unsigned int'
|   | `-VarDecl 0x28deb884538 <col:5, col:17> col:17 used j 'unsigned int'
|   |-DeclStmt 0x28deb884740 <line:1090:5, col:32>
|   | `-VarDecl 0x28deb8845e0 <col:5, col:31> col:11 used outlimbs 'limb *' cinit
|   |   `-UnaryOperator 0x28deb884728 <col:22, col:31> 'limb *' prefix '&' cannot overflow
|   |     `-ArraySubscriptExpr 0x28deb884708 <col:23, col:31> 'limb':'unsigned long long' lvalue
|   |       |-ImplicitCastExpr 0x28deb8846f0 <col:23, col:28> 'limb *' <ArrayToPointerDecay>
|   |       | `-ArraySubscriptExpr 0x28deb8846a8 <col:23, col:28> 'felem':'limb [4]' lvalue
|   |       |   |-ImplicitCastExpr 0x28deb884690 <col:23> 'felem *':'felem *' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x28deb884648 <col:23> 'felem *':'felem *' lvalue ParmVar 0x28deb884220 'out' 'felem *':'felem *'
|   |       |   `-IntegerLiteral 0x28deb884668 <col:27> 'int' 0
|   |       `-IntegerLiteral 0x28deb8846c8 <col:30> 'int' 0
|   |-CallExpr 0x28deb8848e0 <line:1092:5, col:36> 'void *'
|   | |-ImplicitCastExpr 0x28deb8848c8 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb884758 <col:5> 'void *(void *, int, unsigned long long)' Function 0x28deb73e6b0 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x28deb884930 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x28deb884918 <col:12> 'felem *':'felem *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x28deb884778 <col:12> 'felem *':'felem *' lvalue ParmVar 0x28deb884220 'out' 'felem *':'felem *'
|   | |-IntegerLiteral 0x28deb884798 <col:17> 'int' 0
|   | `-BinaryOperator 0x28deb884890 <col:20, col:35> 'unsigned long long' '*'
|   |   |-UnaryExprOrTypeTraitExpr 0x28deb884830 <col:20, col:31> 'unsigned long long' sizeof
|   |   | `-ParenExpr 0x28deb884810 <col:26, col:31> 'felem':'limb [4]' lvalue
|   |   |   `-UnaryOperator 0x28deb8847f8 <col:27, col:28> 'felem':'limb [4]' lvalue prefix '*' cannot overflow
|   |   |     `-ImplicitCastExpr 0x28deb8847e0 <col:28> 'felem *':'felem *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x28deb8847c0 <col:28> 'felem *':'felem *' lvalue ParmVar 0x28deb884220 'out' 'felem *':'felem *' non_odr_use_unevaluated
|   |   `-ImplicitCastExpr 0x28deb884878 <col:35> 'unsigned long long' <IntegralCast>
|   |     `-IntegerLiteral 0x28deb884850 <col:35> 'int' 3
|   `-ForStmt 0x28deb8855b0 <line:1093:5, line:1103:5>
|     |-BinaryOperator 0x28deb8849c0 <line:1093:10, col:14> 'unsigned int' '='
|     | |-DeclRefExpr 0x28deb884948 <col:10> 'unsigned int' lvalue Var 0x28deb8844b8 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x28deb8849a8 <col:14> 'unsigned int' <IntegralCast>
|     |   `-IntegerLiteral 0x28deb884980 <col:14> 'int' 0
|     |-<<<NULL>>>
|     |-BinaryOperator 0x28deb884a50 <col:17, col:21> 'int' '<'
|     | |-ImplicitCastExpr 0x28deb884a20 <col:17> 'unsigned int' <LValueToRValue>
|     | | `-DeclRefExpr 0x28deb8849e0 <col:17> 'unsigned int' lvalue Var 0x28deb8844b8 'i' 'unsigned int'
|     | `-ImplicitCastExpr 0x28deb884a38 <col:21> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x28deb884a00 <col:21> 'unsigned int' lvalue ParmVar 0x28deb883ed0 'size' 'unsigned int'
|     |-UnaryOperator 0x28deb884a90 <col:27, col:28> 'unsigned int' postfix '++'
|     | `-DeclRefExpr 0x28deb884a70 <col:27> 'unsigned int' lvalue Var 0x28deb8844b8 'i' 'unsigned int'
|     `-CompoundStmt 0x28deb885560 <col:32, line:1103:5>
|       |-DeclStmt 0x28deb884ce8 <line:1094:9, col:49>
|       | `-VarDecl 0x28deb884ab8 <col:9, col:48> col:21 used inlimbs 'const limb *' cinit
|       |   `-UnaryOperator 0x28deb884cd0 <col:31, col:48> 'const limb *' prefix '&' cannot overflow
|       |     `-ArraySubscriptExpr 0x28deb884cb0 <col:32, col:48> 'const limb':'const unsigned long long' lvalue
|       |       |-ImplicitCastExpr 0x28deb884c98 <col:32, col:45> 'const limb *' <ArrayToPointerDecay>
|       |       | `-ArraySubscriptExpr 0x28deb884c50 <col:32, col:45> 'const felem':'limb const[4]' lvalue
|       |       |   |-ImplicitCastExpr 0x28deb884c38 <col:32, col:42> 'const felem *' <ArrayToPointerDecay>
|       |       |   | `-ArraySubscriptExpr 0x28deb884b90 <col:32, col:42> 'const felem [3]' lvalue
|       |       |   |   |-ImplicitCastExpr 0x28deb884b60 <col:32> 'const felem (*)[3]':'const felem (*)[3]' <LValueToRValue>
|       |       |   |   | `-DeclRefExpr 0x28deb884b20 <col:32> 'const felem (*)[3]':'const felem (*)[3]' lvalue ParmVar 0x28deb8840a0 'pre_comp' 'const felem (*)[3]':'const felem (*)[3]'
|       |       |   |   `-ImplicitCastExpr 0x28deb884b78 <col:41> 'unsigned int' <LValueToRValue>
|       |       |   |     `-DeclRefExpr 0x28deb884b40 <col:41> 'unsigned int' lvalue Var 0x28deb8844b8 'i' 'unsigned int'
|       |       |   `-IntegerLiteral 0x28deb884bb0 <col:44> 'int' 0
|       |       `-IntegerLiteral 0x28deb884c70 <col:47> 'int' 0
|       |-DeclStmt 0x28deb884e20 <line:1095:9, col:27>
|       | `-VarDecl 0x28deb884d10 <col:9, col:24> col:13 used mask 'u64':'unsigned long long' cinit
|       |   `-BinaryOperator 0x28deb884e00 <col:20, col:24> 'unsigned long long' '^'
|       |     |-ImplicitCastExpr 0x28deb884de8 <col:20> 'unsigned long long' <IntegralCast>
|       |     | `-ImplicitCastExpr 0x28deb884db8 <col:20> 'unsigned int' <LValueToRValue>
|       |     |   `-DeclRefExpr 0x28deb884d78 <col:20> 'unsigned int' lvalue Var 0x28deb8844b8 'i' 'unsigned int'
|       |     `-ImplicitCastExpr 0x28deb884dd0 <col:24> 'u64':'unsigned long long' <LValueToRValue>
|       |       `-DeclRefExpr 0x28deb884d98 <col:24> 'const u64':'const unsigned long long' lvalue ParmVar 0x28deb883e50 'idx' 'const u64':'const unsigned long long'
|       |-CompoundAssignOperator 0x28deb884ef0 <line:1096:9, col:25> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       | |-DeclRefExpr 0x28deb884e38 <col:9> 'u64':'unsigned long long' lvalue Var 0x28deb884d10 'mask' 'u64':'unsigned long long'
|       | `-BinaryOperator 0x28deb884ed0 <col:17, col:25> 'u64':'unsigned long long' '>>'
|       |   |-ImplicitCastExpr 0x28deb884eb8 <col:17> 'u64':'unsigned long long' <LValueToRValue>
|       |   | `-DeclRefExpr 0x28deb884e70 <col:17> 'u64':'unsigned long long' lvalue Var 0x28deb884d10 'mask' 'u64':'unsigned long long'
|       |   `-IntegerLiteral 0x28deb884e90 <col:25> 'int' 4
|       |-CompoundAssignOperator 0x28deb884fc0 <line:1097:9, col:25> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       | |-DeclRefExpr 0x28deb884f20 <col:9> 'u64':'unsigned long long' lvalue Var 0x28deb884d10 'mask' 'u64':'unsigned long long'
|       | `-BinaryOperator 0x28deb884fa0 <col:17, col:25> 'u64':'unsigned long long' '>>'
|       |   |-ImplicitCastExpr 0x28deb884f88 <col:17> 'u64':'unsigned long long' <LValueToRValue>
|       |   | `-DeclRefExpr 0x28deb884f40 <col:17> 'u64':'unsigned long long' lvalue Var 0x28deb884d10 'mask' 'u64':'unsigned long long'
|       |   `-IntegerLiteral 0x28deb884f60 <col:25> 'int' 2
|       |-CompoundAssignOperator 0x28deb885090 <line:1098:9, col:25> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       | |-DeclRefExpr 0x28deb884ff0 <col:9> 'u64':'unsigned long long' lvalue Var 0x28deb884d10 'mask' 'u64':'unsigned long long'
|       | `-BinaryOperator 0x28deb885070 <col:17, col:25> 'u64':'unsigned long long' '>>'
|       |   |-ImplicitCastExpr 0x28deb885058 <col:17> 'u64':'unsigned long long' <LValueToRValue>
|       |   | `-DeclRefExpr 0x28deb885010 <col:17> 'u64':'unsigned long long' lvalue Var 0x28deb884d10 'mask' 'u64':'unsigned long long'
|       |   `-IntegerLiteral 0x28deb885030 <col:25> 'int' 1
|       |-CompoundAssignOperator 0x28deb885120 <line:1099:9, col:17> 'u64':'unsigned long long' '&=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|       | |-DeclRefExpr 0x28deb8850c0 <col:9> 'u64':'unsigned long long' lvalue Var 0x28deb884d10 'mask' 'u64':'unsigned long long'
|       | `-ImplicitCastExpr 0x28deb885108 <col:17> 'unsigned long long' <IntegralCast>
|       |   `-IntegerLiteral 0x28deb8850e0 <col:17> 'int' 1
|       |-UnaryOperator 0x28deb885170 <line:1100:9, col:13> 'u64':'unsigned long long' postfix '--'
|       | `-DeclRefExpr 0x28deb885150 <col:9> 'u64':'unsigned long long' lvalue Var 0x28deb884d10 'mask' 'u64':'unsigned long long'
|       `-ForStmt 0x28deb885528 <line:1101:9, line:1102:41>
|         |-BinaryOperator 0x28deb885200 <line:1101:14, col:18> 'unsigned int' '='
|         | |-DeclRefExpr 0x28deb885188 <col:14> 'unsigned int' lvalue Var 0x28deb884538 'j' 'unsigned int'
|         | `-ImplicitCastExpr 0x28deb8851e8 <col:18> 'unsigned int' <IntegralCast>
|         |   `-IntegerLiteral 0x28deb8851c0 <col:18> 'int' 0
|         |-<<<NULL>>>
|         |-BinaryOperator 0x28deb8852e0 <col:21, col:29> 'int' '<'
|         | |-ImplicitCastExpr 0x28deb8852b0 <col:21> 'unsigned int' <LValueToRValue>
|         | | `-DeclRefExpr 0x28deb885220 <col:21> 'unsigned int' lvalue Var 0x28deb884538 'j' 'unsigned int'
|         | `-ImplicitCastExpr 0x28deb8852c8 <col:25, col:29> 'unsigned int' <IntegralCast>
|         |   `-BinaryOperator 0x28deb885290 <col:25, col:29> 'int' '*'
|         |     |-IntegerLiteral 0x28deb885240 <col:25> 'int' 4
|         |     `-IntegerLiteral 0x28deb885268 <col:29> 'int' 3
|         |-UnaryOperator 0x28deb885320 <col:32, col:33> 'unsigned int' postfix '++'
|         | `-DeclRefExpr 0x28deb885300 <col:32> 'unsigned int' lvalue Var 0x28deb884538 'j' 'unsigned int'
|         `-CompoundAssignOperator 0x28deb8854f8 <line:1102:13, col:41> 'limb':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|           |-ArraySubscriptExpr 0x28deb8853c0 <col:13, col:23> 'limb':'unsigned long long' lvalue
|           | |-ImplicitCastExpr 0x28deb885390 <col:13> 'limb *' <LValueToRValue>
|           | | `-DeclRefExpr 0x28deb885338 <col:13> 'limb *' lvalue Var 0x28deb8845e0 'outlimbs' 'limb *'
|           | `-ImplicitCastExpr 0x28deb8853a8 <col:22> 'unsigned int' <LValueToRValue>
|           |   `-DeclRefExpr 0x28deb885370 <col:22> 'unsigned int' lvalue Var 0x28deb884538 'j' 'unsigned int'
|           `-BinaryOperator 0x28deb8854d8 <col:28, col:41> 'unsigned long long' '&'
|             |-ImplicitCastExpr 0x28deb8854a8 <col:28, col:37> 'limb':'unsigned long long' <LValueToRValue>
|             | `-ArraySubscriptExpr 0x28deb885468 <col:28, col:37> 'const limb':'const unsigned long long' lvalue
|             |   |-ImplicitCastExpr 0x28deb885438 <col:28> 'const limb *' <LValueToRValue>
|             |   | `-DeclRefExpr 0x28deb8853e0 <col:28> 'const limb *' lvalue Var 0x28deb884ab8 'inlimbs' 'const limb *'
|             |   `-ImplicitCastExpr 0x28deb885450 <col:36> 'unsigned int' <LValueToRValue>
|             |     `-DeclRefExpr 0x28deb885418 <col:36> 'unsigned int' lvalue Var 0x28deb884538 'j' 'unsigned int'
|             `-ImplicitCastExpr 0x28deb8854c0 <col:41> 'u64':'unsigned long long' <LValueToRValue>
|               `-DeclRefExpr 0x28deb885488 <col:41> 'u64':'unsigned long long' lvalue Var 0x28deb884d10 'mask' 'u64':'unsigned long long'
|-FunctionDecl 0x28deb885828 <line:1107:1, line:1112:1> line:1107:13 used get_bit 'char (const u8 *, unsigned int)' static
| |-ParmVarDecl 0x28deb885660 <col:21, col:43> col:43 used in 'const u8 *':'const u8 *'
| |-ParmVarDecl 0x28deb8856e0 <col:47, col:56> col:56 used i 'unsigned int'
| `-CompoundStmt 0x28deb885c60 <line:1108:1, line:1112:1>
|   |-IfStmt 0x28deb8859d8 <line:1109:5, line:1110:16>
|   | |-BinaryOperator 0x28deb885968 <line:1109:9, col:14> 'int' '>='
|   | | |-ImplicitCastExpr 0x28deb885938 <col:9> 'unsigned int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb8858f0 <col:9> 'unsigned int' lvalue ParmVar 0x28deb8856e0 'i' 'unsigned int'
|   | | `-ImplicitCastExpr 0x28deb885950 <col:14> 'unsigned int' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb885910 <col:14> 'int' 224
|   | `-ReturnStmt 0x28deb8859c8 <line:1110:9, col:16>
|   |   `-ImplicitCastExpr 0x28deb8859b0 <col:16> 'char' <IntegralCast>
|   |     `-IntegerLiteral 0x28deb885988 <col:16> 'int' 0
|   `-ReturnStmt 0x28deb885c50 <line:1111:5, col:38>
|     `-ImplicitCastExpr 0x28deb885c38 <col:12, col:38> 'char' <IntegralCast>
|       `-BinaryOperator 0x28deb885c18 <col:12, col:38> 'int' '&'
|         |-ParenExpr 0x28deb885bd0 <col:12, col:34> 'int'
|         | `-BinaryOperator 0x28deb885bb0 <col:13, col:33> 'int' '>>'
|         |   |-ImplicitCastExpr 0x28deb885b98 <col:13, col:22> 'int' <IntegralCast>
|         |   | `-ImplicitCastExpr 0x28deb885b80 <col:13, col:22> 'u8':'unsigned char' <LValueToRValue>
|         |   |   `-ArraySubscriptExpr 0x28deb885aa8 <col:13, col:22> 'const u8':'const unsigned char' lvalue
|         |   |     |-ImplicitCastExpr 0x28deb885a90 <col:13> 'const u8 *':'const u8 *' <LValueToRValue>
|         |   |     | `-DeclRefExpr 0x28deb8859f0 <col:13> 'const u8 *':'const u8 *' lvalue ParmVar 0x28deb885660 'in' 'const u8 *':'const u8 *'
|         |   |     `-BinaryOperator 0x28deb885a70 <col:16, col:21> 'unsigned int' '>>'
|         |   |       |-ImplicitCastExpr 0x28deb885a58 <col:16> 'unsigned int' <LValueToRValue>
|         |   |       | `-DeclRefExpr 0x28deb885a10 <col:16> 'unsigned int' lvalue ParmVar 0x28deb8856e0 'i' 'unsigned int'
|         |   |       `-IntegerLiteral 0x28deb885a30 <col:21> 'int' 3
|         |   `-ParenExpr 0x28deb885b60 <col:27, col:33> 'unsigned int'
|         |     `-BinaryOperator 0x28deb885b40 <col:28, col:32> 'unsigned int' '&'
|         |       |-ImplicitCastExpr 0x28deb885b10 <col:28> 'unsigned int' <LValueToRValue>
|         |       | `-DeclRefExpr 0x28deb885ac8 <col:28> 'unsigned int' lvalue ParmVar 0x28deb8856e0 'i' 'unsigned int'
|         |       `-ImplicitCastExpr 0x28deb885b28 <col:32> 'unsigned int' <IntegralCast>
|         |         `-IntegerLiteral 0x28deb885ae8 <col:32> 'int' 7
|         `-IntegerLiteral 0x28deb885bf0 <col:38> 'int' 1
|-FunctionDecl 0x28deb8867b8 <line:1121:1, line:1212:1> line:1121:13 used batch_mul 'void (limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])' static
| |-ParmVarDecl 0x28deb885c90 <col:23, col:29> col:29 used x_out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb885d08 <col:36, col:42> col:42 used y_out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb885d80 <col:49, col:55> col:55 used z_out 'limb *':'limb *'
| |-ParmVarDecl 0x28deb885f00 <line:1122:23, col:53> col:45 used scalars 'const felem_bytearray *':'const felem_bytearray *'
| |-ParmVarDecl 0x28deb885f80 <line:1123:23, col:38> col:38 used num_points 'const unsigned int'
| |-ParmVarDecl 0x28deb885ff8 <col:50, col:60> col:60 used g_scalar 'const u8 *'
| |-ParmVarDecl 0x28deb886078 <line:1124:23, col:33> col:33 used mixed 'const int'
| |-ParmVarDecl 0x28deb886330 <col:40, col:68> col:52 used pre_comp 'const felem (*)[17][3]':'const felem (*)[17][3]'
| |-ParmVarDecl 0x28deb886530 <line:1125:23, col:54> col:35 used g_pre_comp 'const felem (*)[16][3]':'const felem (*)[16][3]'
| `-CompoundStmt 0x28deb9910e0 <line:1126:1, line:1212:1>
|   |-DeclStmt 0x28deb8869d0 <line:1127:5, col:16>
|   | |-VarDecl 0x28deb8868d0 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x28deb886950 <col:5, col:12> col:12 used skip 'int'
|   |-DeclStmt 0x28deb886a68 <line:1128:5, col:17>
|   | `-VarDecl 0x28deb886a00 <col:5, col:14> col:14 used num 'unsigned int'
|   |-DeclStmt 0x28deb886c30 <line:1129:5, col:42>
|   | `-VarDecl 0x28deb886a98 <col:5, col:41> col:14 used gen_mul 'unsigned int' cinit
|   |   `-ImplicitCastExpr 0x28deb886c18 <col:24, col:41> 'unsigned int' <IntegralCast>
|   |     `-ParenExpr 0x28deb886bf8 <col:24, col:41> 'int'
|   |       `-BinaryOperator 0x28deb886bd8 <col:25, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '!='
|   |         |-ImplicitCastExpr 0x28deb886ba8 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1129:25> 'const u8 *' <LValueToRValue>
|   |         | `-DeclRefExpr 0x28deb886b00 <col:25> 'const u8 *' lvalue ParmVar 0x28deb885ff8 'g_scalar' 'const u8 *'
|   |         `-ImplicitCastExpr 0x28deb886bc0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const u8 *' <BitCast>
|   |           `-ParenExpr 0x28deb886b88 <col:17, col:27> 'void *'
|   |             `-CStyleCastExpr 0x28deb886b60 <col:18, col:26> 'void *' <NullToPointer>
|   |               `-IntegerLiteral 0x28deb886b20 <col:26> 'int' 0
|   |-DeclStmt 0x28deb886e68 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1130:5, col:24>
|   | |-VarDecl 0x28deb886ca8 <col:5, col:15> col:11 used nq 'felem [3]'
|   | `-VarDecl 0x28deb886de8 <col:5, col:23> col:18 used tmp 'felem [4]'
|   |-DeclStmt 0x28deb886ef8 <line:1131:5, col:13>
|   | `-VarDecl 0x28deb886e90 <col:5, col:9> col:9 used bits 'u64':'unsigned long long'
|   |-DeclStmt 0x28deb887018 <line:1132:5, col:19>
|   | |-VarDecl 0x28deb886f20 <col:5, col:8> col:8 used sign 'u8':'unsigned char'
|   | `-VarDecl 0x28deb886f98 <col:5, col:14> col:14 used digit 'u8':'unsigned char'
|   |-CallExpr 0x28deb887140 <line:1135:5, col:29> 'void *'
|   | |-ImplicitCastExpr 0x28deb887128 <col:5> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb887030 <col:5> 'void *(void *, int, unsigned long long)' Function 0x28deb73e6b0 'memset' 'void *(void *, int, unsigned long long)'
|   | |-ImplicitCastExpr 0x28deb887190 <col:12> 'void *' <BitCast>
|   | | `-ImplicitCastExpr 0x28deb887178 <col:12> 'felem *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb887050 <col:12> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   | |-IntegerLiteral 0x28deb887088 <col:16> 'int' 0
|   | `-UnaryExprOrTypeTraitExpr 0x28deb8870f0 <col:19, col:28> 'unsigned long long' sizeof
|   |   `-ParenExpr 0x28deb8870d0 <col:25, col:28> 'felem [3]' lvalue
|   |     `-DeclRefExpr 0x28deb8870b0 <col:26> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]' non_odr_use_unevaluated
|   |-BinaryOperator 0x28deb887208 <line:1142:5, col:12> 'int' '='
|   | |-DeclRefExpr 0x28deb8871a8 <col:5> 'int' lvalue Var 0x28deb886950 'skip' 'int'
|   | `-IntegerLiteral 0x28deb8871e0 <col:12> 'int' 1
|   |-ForStmt 0x28deb998cb0 <line:1144:5, line:1208:5>
|   | |-BinaryOperator 0x28deb887338 <line:1144:10, col:36> 'int' '='
|   | | |-DeclRefExpr 0x28deb887228 <col:10> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   | | `-ParenExpr 0x28deb887318 <col:14, col:36> 'int'
|   | |   `-ConditionalOperator 0x28deb8872e8 <col:15, col:34> 'int'
|   | |     |-ImplicitCastExpr 0x28deb8872d0 <col:15> 'unsigned int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x28deb887260 <col:15> 'const unsigned int' lvalue ParmVar 0x28deb885f80 'num_points' 'const unsigned int'
|   | |     |-IntegerLiteral 0x28deb887280 <col:28> 'int' 220
|   | |     `-IntegerLiteral 0x28deb8872a8 <col:34> 'int' 27
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x28deb8873b8 <col:39, col:44> 'int' '>='
|   | | |-ImplicitCastExpr 0x28deb8873a0 <col:39> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb887358 <col:39> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   | | `-IntegerLiteral 0x28deb887378 <col:44> 'int' 0
|   | |-UnaryOperator 0x28deb8873f8 <col:47, col:49> 'int' prefix '--'
|   | | `-DeclRefExpr 0x28deb8873d8 <col:49> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   | `-CompoundStmt 0x28deb998c88 <col:52, line:1208:5>
|   |   |-IfStmt 0x28deb8878c0 <line:1146:9, line:1147:66>
|   |   | |-UnaryOperator 0x28deb887448 <line:1146:13, col:14> 'int' prefix '!' cannot overflow
|   |   | | `-ImplicitCastExpr 0x28deb887430 <col:14> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x28deb887410 <col:14> 'int' lvalue Var 0x28deb886950 'skip' 'int'
|   |   | `-CallExpr 0x28deb887798 <line:1147:13, col:66> 'void'
|   |   |   |-ImplicitCastExpr 0x28deb887780 <col:13> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |   | `-DeclRefExpr 0x28deb887460 <col:13> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x28deb87e7f8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   |   |-ImplicitCastExpr 0x28deb8877e8 <col:26, col:30> 'limb *' <ArrayToPointerDecay>
|   |   |   | `-ArraySubscriptExpr 0x28deb8874e0 <col:26, col:30> 'felem':'limb [4]' lvalue
|   |   |   |   |-ImplicitCastExpr 0x28deb8874c8 <col:26> 'felem *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x28deb887480 <col:26> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   |   `-IntegerLiteral 0x28deb8874a0 <col:29> 'int' 0
|   |   |   |-ImplicitCastExpr 0x28deb887800 <col:33, col:37> 'limb *' <ArrayToPointerDecay>
|   |   |   | `-ArraySubscriptExpr 0x28deb887560 <col:33, col:37> 'felem':'limb [4]' lvalue
|   |   |   |   |-ImplicitCastExpr 0x28deb887548 <col:33> 'felem *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x28deb887500 <col:33> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   |   `-IntegerLiteral 0x28deb887520 <col:36> 'int' 1
|   |   |   |-ImplicitCastExpr 0x28deb887818 <col:40, col:44> 'limb *' <ArrayToPointerDecay>
|   |   |   | `-ArraySubscriptExpr 0x28deb8875e0 <col:40, col:44> 'felem':'limb [4]' lvalue
|   |   |   |   |-ImplicitCastExpr 0x28deb8875c8 <col:40> 'felem *' <ArrayToPointerDecay>
|   |   |   |   | `-DeclRefExpr 0x28deb887580 <col:40> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   |   `-IntegerLiteral 0x28deb8875a0 <col:43> 'int' 2
|   |   |   |-ImplicitCastExpr 0x28deb887848 <col:47, col:51> 'const limb *':'const limb *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x28deb887830 <col:47, col:51> 'limb *' <ArrayToPointerDecay>
|   |   |   |   `-ArraySubscriptExpr 0x28deb887660 <col:47, col:51> 'felem':'limb [4]' lvalue
|   |   |   |     |-ImplicitCastExpr 0x28deb887648 <col:47> 'felem *' <ArrayToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x28deb887600 <col:47> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   |     `-IntegerLiteral 0x28deb887620 <col:50> 'int' 0
|   |   |   |-ImplicitCastExpr 0x28deb887878 <col:54, col:58> 'const limb *':'const limb *' <NoOp>
|   |   |   | `-ImplicitCastExpr 0x28deb887860 <col:54, col:58> 'limb *' <ArrayToPointerDecay>
|   |   |   |   `-ArraySubscriptExpr 0x28deb8876e0 <col:54, col:58> 'felem':'limb [4]' lvalue
|   |   |   |     |-ImplicitCastExpr 0x28deb8876c8 <col:54> 'felem *' <ArrayToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x28deb887680 <col:54> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   |     `-IntegerLiteral 0x28deb8876a0 <col:57> 'int' 1
|   |   |   `-ImplicitCastExpr 0x28deb8878a8 <col:61, col:65> 'const limb *':'const limb *' <NoOp>
|   |   |     `-ImplicitCastExpr 0x28deb887890 <col:61, col:65> 'limb *' <ArrayToPointerDecay>
|   |   |       `-ArraySubscriptExpr 0x28deb887760 <col:61, col:65> 'felem':'limb [4]' lvalue
|   |   |         |-ImplicitCastExpr 0x28deb887748 <col:61> 'felem *' <ArrayToPointerDecay>
|   |   |         | `-DeclRefExpr 0x28deb887700 <col:61> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |         `-IntegerLiteral 0x28deb887720 <col:64> 'int' 2
|   |   |-IfStmt 0x28deb99ca48 <line:1150:9, line:1178:9>
|   |   | |-BinaryOperator 0x28deb8879c8 <line:1150:13, col:32> 'int' '&&'
|   |   | | |-ImplicitCastExpr 0x28deb8879b0 <col:13> 'unsigned int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x28deb8878d8 <col:13> 'unsigned int' lvalue Var 0x28deb886a98 'gen_mul' 'unsigned int'
|   |   | | `-ParenExpr 0x28deb887990 <col:24, col:32> 'int'
|   |   | |   `-BinaryOperator 0x28deb887970 <col:25, col:30> 'int' '<='
|   |   | |     |-ImplicitCastExpr 0x28deb887958 <col:25> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x28deb887910 <col:25> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |   | |     `-IntegerLiteral 0x28deb887930 <col:30> 'int' 27
|   |   | `-CompoundStmt 0x28deb99c9d8 <col:35, line:1178:9>
|   |   |   |-BinaryOperator 0x28deb887c28 <line:1152:13, col:50> 'u64':'unsigned long long' '='
|   |   |   | |-DeclRefExpr 0x28deb8879e8 <col:13> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x28deb887c10 <col:20, col:50> 'u64':'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x28deb887bf0 <col:20, col:50> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x28deb887bd8 <col:20, col:45> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x28deb887b50 <col:20, col:45> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb887b38 <col:20> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x28deb887a20 <col:20> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb887b80 <col:28> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x28deb887a40 <col:28> 'const u8 *' lvalue ParmVar 0x28deb885ff8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x28deb887b98 <col:38, col:42> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x28deb887ac0 <col:38, col:42> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x28deb887aa8 <col:38> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x28deb887a60 <col:38> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x28deb887a80 <col:42> 'int' 196
|   |   |   |     `-IntegerLiteral 0x28deb887bb0 <col:50> 'int' 3
|   |   |   |-CompoundAssignOperator 0x28deb887e18 <line:1153:13, col:51> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x28deb887c48 <col:13> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x28deb887e00 <col:21, col:51> 'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x28deb887de0 <col:21, col:51> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x28deb887dc8 <col:21, col:46> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x28deb887d40 <col:21, col:46> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb887d28 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x28deb887c68 <col:21> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb887d70 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x28deb887c88 <col:29> 'const u8 *' lvalue ParmVar 0x28deb885ff8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x28deb887d88 <col:39, col:43> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x28deb887d08 <col:39, col:43> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x28deb887cf0 <col:39> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x28deb887ca8 <col:39> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x28deb887cc8 <col:43> 'int' 140
|   |   |   |     `-IntegerLiteral 0x28deb887da0 <col:51> 'int' 2
|   |   |   |-CompoundAssignOperator 0x28deb888018 <line:1154:13, col:50> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x28deb887e48 <col:13> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x28deb888000 <col:21, col:50> 'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x28deb887fe0 <col:21, col:50> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x28deb887fc8 <col:21, col:45> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x28deb887f40 <col:21, col:45> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb887f28 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x28deb887e68 <col:21> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb887f70 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x28deb887e88 <col:29> 'const u8 *' lvalue ParmVar 0x28deb885ff8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x28deb887f88 <col:39, col:43> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x28deb887f08 <col:39, col:43> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x28deb887ef0 <col:39> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x28deb887ea8 <col:39> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x28deb887ec8 <col:43> 'int' 84
|   |   |   |     `-IntegerLiteral 0x28deb887fa0 <col:50> 'int' 1
|   |   |   |-CompoundAssignOperator 0x28deb99ad88 <line:1155:13, col:45> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x28deb888048 <col:13> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x28deb99ad70 <col:21, col:45> 'unsigned long long' <IntegralCast>
|   |   |   |   `-CallExpr 0x28deb99ad10 <col:21, col:45> 'char'
|   |   |   |     |-ImplicitCastExpr 0x28deb888128 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x28deb888068 <col:21> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |-ImplicitCastExpr 0x28deb99ad40 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x28deb888088 <col:29> 'const u8 *' lvalue ParmVar 0x28deb885ff8 'g_scalar' 'const u8 *'
|   |   |   |     `-ImplicitCastExpr 0x28deb99ad58 <col:39, col:43> 'unsigned int' <IntegralCast>
|   |   |   |       `-BinaryOperator 0x28deb888108 <col:39, col:43> 'int' '+'
|   |   |   |         |-ImplicitCastExpr 0x28deb8880f0 <col:39> 'int' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x28deb8880a8 <col:39> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |   |   |         `-IntegerLiteral 0x28deb8880c8 <col:43> 'int' 28
|   |   |   |-CallExpr 0x28deb99af50 <line:1157:13, col:54> 'void'
|   |   |   | |-ImplicitCastExpr 0x28deb99af38 <col:13> 'void (*)(const u64, unsigned int, const felem (*)[3], felem *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x28deb99adb8 <col:13> 'void (const u64, unsigned int, const felem (*)[3], felem *)' Function 0x28deb8843c8 'select_point' 'void (const u64, unsigned int, const felem (*)[3], felem *)'
|   |   |   | |-ImplicitCastExpr 0x28deb99af90 <col:26> 'u64':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x28deb99add8 <col:26> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |   |   | |-ImplicitCastExpr 0x28deb99afa8 <col:32> 'unsigned int' <IntegralCast>
|   |   |   | | `-IntegerLiteral 0x28deb99adf8 <col:32> 'int' 16
|   |   |   | |-ImplicitCastExpr 0x28deb99afc0 <col:36, col:48> 'const felem (*)[3]' <ArrayToPointerDecay>
|   |   |   | | `-ArraySubscriptExpr 0x28deb99ae80 <col:36, col:48> 'const felem [16][3]' lvalue
|   |   |   | |   |-ImplicitCastExpr 0x28deb99ae68 <col:36> 'const felem (*)[16][3]':'const felem (*)[16][3]' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x28deb99ae20 <col:36> 'const felem (*)[16][3]':'const felem (*)[16][3]' lvalue ParmVar 0x28deb886530 'g_pre_comp' 'const felem (*)[16][3]':'const felem (*)[16][3]'
|   |   |   | |   `-IntegerLiteral 0x28deb99ae40 <col:47> 'int' 1
|   |   |   | `-ImplicitCastExpr 0x28deb99afd8 <col:51> 'felem *' <ArrayToPointerDecay>
|   |   |   |   `-DeclRefExpr 0x28deb99aea0 <col:51> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |   |   |-IfStmt 0x28deb99b9f0 <line:1159:13, line:1166:13> has_else
|   |   |   | |-UnaryOperator 0x28deb99b028 <line:1159:17, col:18> 'int' prefix '!' cannot overflow
|   |   |   | | `-ImplicitCastExpr 0x28deb99b010 <col:18> 'int' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x28deb99aff0 <col:18> 'int' lvalue Var 0x28deb886950 'skip' 'int'
|   |   |   | |-CompoundStmt 0x28deb99b758 <col:24, line:1163:13>
|   |   |   | | `-CallExpr 0x28deb99b580 <line:1161:17, line:1162:73> 'void'
|   |   |   | |   |-ImplicitCastExpr 0x28deb99b568 <line:1161:17> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |   | |   | `-DeclRefExpr 0x28deb99b040 <col:17> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x28deb8814b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   |   | |   |-ImplicitCastExpr 0x28deb99b5f0 <col:27, col:31> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   | `-ArraySubscriptExpr 0x28deb99b0c0 <col:27, col:31> 'felem':'limb [4]' lvalue
|   |   |   | |   |   |-ImplicitCastExpr 0x28deb99b0a8 <col:27> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |   | `-DeclRefExpr 0x28deb99b060 <col:27> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   | |   |   `-IntegerLiteral 0x28deb99b080 <col:30> 'int' 0
|   |   |   | |   |-ImplicitCastExpr 0x28deb99b608 <col:34, col:38> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   | `-ArraySubscriptExpr 0x28deb99b140 <col:34, col:38> 'felem':'limb [4]' lvalue
|   |   |   | |   |   |-ImplicitCastExpr 0x28deb99b128 <col:34> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |   | `-DeclRefExpr 0x28deb99b0e0 <col:34> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   | |   |   `-IntegerLiteral 0x28deb99b100 <col:37> 'int' 1
|   |   |   | |   |-ImplicitCastExpr 0x28deb99b620 <col:41, col:45> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   | `-ArraySubscriptExpr 0x28deb99b1c0 <col:41, col:45> 'felem':'limb [4]' lvalue
|   |   |   | |   |   |-ImplicitCastExpr 0x28deb99b1a8 <col:41> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |   | `-DeclRefExpr 0x28deb99b160 <col:41> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   | |   |   `-IntegerLiteral 0x28deb99b180 <col:44> 'int' 2
|   |   |   | |   |-ImplicitCastExpr 0x28deb99b650 <line:1162:27, col:31> 'const limb *':'const limb *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x28deb99b638 <col:27, col:31> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   |   `-ArraySubscriptExpr 0x28deb99b240 <col:27, col:31> 'felem':'limb [4]' lvalue
|   |   |   | |   |     |-ImplicitCastExpr 0x28deb99b228 <col:27> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |     | `-DeclRefExpr 0x28deb99b1e0 <col:27> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   | |   |     `-IntegerLiteral 0x28deb99b200 <col:30> 'int' 0
|   |   |   | |   |-ImplicitCastExpr 0x28deb99b680 <col:34, col:38> 'const limb *':'const limb *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x28deb99b668 <col:34, col:38> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   |   `-ArraySubscriptExpr 0x28deb99b2c0 <col:34, col:38> 'felem':'limb [4]' lvalue
|   |   |   | |   |     |-ImplicitCastExpr 0x28deb99b2a8 <col:34> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |     | `-DeclRefExpr 0x28deb99b260 <col:34> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   | |   |     `-IntegerLiteral 0x28deb99b280 <col:37> 'int' 1
|   |   |   | |   |-ImplicitCastExpr 0x28deb99b6b0 <col:41, col:45> 'const limb *':'const limb *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x28deb99b698 <col:41, col:45> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   |   `-ArraySubscriptExpr 0x28deb99b340 <col:41, col:45> 'felem':'limb [4]' lvalue
|   |   |   | |   |     |-ImplicitCastExpr 0x28deb99b328 <col:41> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |     | `-DeclRefExpr 0x28deb99b2e0 <col:41> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   | |   |     `-IntegerLiteral 0x28deb99b300 <col:44> 'int' 2
|   |   |   | |   |-IntegerLiteral 0x28deb99b360 <col:48> 'int' 1
|   |   |   | |   |-ImplicitCastExpr 0x28deb99b6e0 <col:51, col:56> 'const limb *':'const limb *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x28deb99b6c8 <col:51, col:56> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   |   `-ArraySubscriptExpr 0x28deb99b3e8 <col:51, col:56> 'felem':'limb [4]' lvalue
|   |   |   | |   |     |-ImplicitCastExpr 0x28deb99b3d0 <col:51> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |     | `-DeclRefExpr 0x28deb99b388 <col:51> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |   |   | |   |     `-IntegerLiteral 0x28deb99b3a8 <col:55> 'int' 0
|   |   |   | |   |-ImplicitCastExpr 0x28deb99b710 <col:59, col:64> 'const limb *':'const limb *' <NoOp>
|   |   |   | |   | `-ImplicitCastExpr 0x28deb99b6f8 <col:59, col:64> 'limb *' <ArrayToPointerDecay>
|   |   |   | |   |   `-ArraySubscriptExpr 0x28deb99b468 <col:59, col:64> 'felem':'limb [4]' lvalue
|   |   |   | |   |     |-ImplicitCastExpr 0x28deb99b450 <col:59> 'felem *' <ArrayToPointerDecay>
|   |   |   | |   |     | `-DeclRefExpr 0x28deb99b408 <col:59> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |   |   | |   |     `-IntegerLiteral 0x28deb99b428 <col:63> 'int' 1
|   |   |   | |   `-ImplicitCastExpr 0x28deb99b740 <col:67, col:72> 'const limb *':'const limb *' <NoOp>
|   |   |   | |     `-ImplicitCastExpr 0x28deb99b728 <col:67, col:72> 'limb *' <ArrayToPointerDecay>
|   |   |   | |       `-ArraySubscriptExpr 0x28deb99b4e8 <col:67, col:72> 'felem':'limb [4]' lvalue
|   |   |   | |         |-ImplicitCastExpr 0x28deb99b4d0 <col:67> 'felem *' <ArrayToPointerDecay>
|   |   |   | |         | `-DeclRefExpr 0x28deb99b488 <col:67> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |   |   | |         `-IntegerLiteral 0x28deb99b4a8 <col:71> 'int' 2
|   |   |   | `-CompoundStmt 0x28deb99b9d0 <line:1163:20, line:1166:13>
|   |   |   |   |-CallExpr 0x28deb99b8d0 <line:1164:17, col:50> 'void *'
|   |   |   |   | |-ImplicitCastExpr 0x28deb99b8b8 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   |   |   | | `-DeclRefExpr 0x28deb99b770 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x28deb745cc8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   |   |   | |-ImplicitCastExpr 0x28deb99b920 <col:24> 'void *' <BitCast>
|   |   |   |   | | `-ImplicitCastExpr 0x28deb99b908 <col:24> 'felem *' <ArrayToPointerDecay>
|   |   |   |   | |   `-DeclRefExpr 0x28deb99b790 <col:24> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |   |   | |-ImplicitCastExpr 0x28deb99b950 <col:28> 'const void *' <BitCast>
|   |   |   |   | | `-ImplicitCastExpr 0x28deb99b938 <col:28> 'felem *' <ArrayToPointerDecay>
|   |   |   |   | |   `-DeclRefExpr 0x28deb99b7b0 <col:28> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |   |   |   | `-BinaryOperator 0x28deb99b840 <col:33, col:49> 'unsigned long long' '*'
|   |   |   |   |   |-ImplicitCastExpr 0x28deb99b828 <col:33> 'unsigned long long' <IntegralCast>
|   |   |   |   |   | `-IntegerLiteral 0x28deb99b7d0 <col:33> 'int' 3
|   |   |   |   |   `-UnaryExprOrTypeTraitExpr 0x28deb99b808 <col:37, col:49> 'unsigned long long' sizeof 'felem':'limb [4]'
|   |   |   |   `-BinaryOperator 0x28deb99b9b0 <line:1165:17, col:24> 'int' '='
|   |   |   |     |-DeclRefExpr 0x28deb99b968 <col:17> 'int' lvalue Var 0x28deb886950 'skip' 'int'
|   |   |   |     `-IntegerLiteral 0x28deb99b988 <col:24> 'int' 0
|   |   |   |-BinaryOperator 0x28deb99bbe8 <line:1169:13, col:50> 'u64':'unsigned long long' '='
|   |   |   | |-DeclRefExpr 0x28deb99ba18 <col:13> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x28deb99bbd0 <col:20, col:50> 'u64':'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x28deb99bbb0 <col:20, col:50> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x28deb99bb98 <col:20, col:45> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x28deb99bb10 <col:20, col:45> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb99baf8 <col:20> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x28deb99ba38 <col:20> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb99bb40 <col:28> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x28deb99ba58 <col:28> 'const u8 *' lvalue ParmVar 0x28deb885ff8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x28deb99bb58 <col:38, col:42> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x28deb99bad8 <col:38, col:42> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x28deb99bac0 <col:38> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x28deb99ba78 <col:38> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x28deb99ba98 <col:42> 'int' 168
|   |   |   |     `-IntegerLiteral 0x28deb99bb70 <col:50> 'int' 3
|   |   |   |-CompoundAssignOperator 0x28deb99bdd8 <line:1170:13, col:51> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x28deb99bc08 <col:13> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x28deb99bdc0 <col:21, col:51> 'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x28deb99bda0 <col:21, col:51> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x28deb99bd88 <col:21, col:46> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x28deb99bd00 <col:21, col:46> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb99bce8 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x28deb99bc28 <col:21> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb99bd30 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x28deb99bc48 <col:29> 'const u8 *' lvalue ParmVar 0x28deb885ff8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x28deb99bd48 <col:39, col:43> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x28deb99bcc8 <col:39, col:43> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x28deb99bcb0 <col:39> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x28deb99bc68 <col:39> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x28deb99bc88 <col:43> 'int' 112
|   |   |   |     `-IntegerLiteral 0x28deb99bd60 <col:51> 'int' 2
|   |   |   |-CompoundAssignOperator 0x28deb99bfd8 <line:1171:13, col:50> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x28deb99be08 <col:13> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x28deb99bfc0 <col:21, col:50> 'unsigned long long' <IntegralCast>
|   |   |   |   `-BinaryOperator 0x28deb99bfa0 <col:21, col:50> 'int' '<<'
|   |   |   |     |-ImplicitCastExpr 0x28deb99bf88 <col:21, col:45> 'int' <IntegralCast>
|   |   |   |     | `-CallExpr 0x28deb99bf00 <col:21, col:45> 'char'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb99bee8 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     |   | `-DeclRefExpr 0x28deb99be28 <col:21> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |   |-ImplicitCastExpr 0x28deb99bf30 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     |   | `-DeclRefExpr 0x28deb99be48 <col:29> 'const u8 *' lvalue ParmVar 0x28deb885ff8 'g_scalar' 'const u8 *'
|   |   |   |     |   `-ImplicitCastExpr 0x28deb99bf48 <col:39, col:43> 'unsigned int' <IntegralCast>
|   |   |   |     |     `-BinaryOperator 0x28deb99bec8 <col:39, col:43> 'int' '+'
|   |   |   |     |       |-ImplicitCastExpr 0x28deb99beb0 <col:39> 'int' <LValueToRValue>
|   |   |   |     |       | `-DeclRefExpr 0x28deb99be68 <col:39> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |   |   |     |       `-IntegerLiteral 0x28deb99be88 <col:43> 'int' 56
|   |   |   |     `-IntegerLiteral 0x28deb99bf60 <col:50> 'int' 1
|   |   |   |-CompoundAssignOperator 0x28deb99c130 <line:1172:13, col:40> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |   |   | |-DeclRefExpr 0x28deb99c008 <col:13> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |   |   | `-ImplicitCastExpr 0x28deb99c118 <col:21, col:40> 'unsigned long long' <IntegralCast>
|   |   |   |   `-CallExpr 0x28deb99c0a0 <col:21, col:40> 'char'
|   |   |   |     |-ImplicitCastExpr 0x28deb99c088 <col:21> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |   |     | `-DeclRefExpr 0x28deb99c028 <col:21> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |   |   |     |-ImplicitCastExpr 0x28deb99c0d0 <col:29> 'const u8 *' <LValueToRValue>
|   |   |   |     | `-DeclRefExpr 0x28deb99c048 <col:29> 'const u8 *' lvalue ParmVar 0x28deb885ff8 'g_scalar' 'const u8 *'
|   |   |   |     `-ImplicitCastExpr 0x28deb99c100 <col:39> 'unsigned int' <IntegralCast>
|   |   |   |       `-ImplicitCastExpr 0x28deb99c0e8 <col:39> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x28deb99c068 <col:39> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |   |   |-CallExpr 0x28deb99c280 <line:1174:13, col:54> 'void'
|   |   |   | |-ImplicitCastExpr 0x28deb99c268 <col:13> 'void (*)(const u64, unsigned int, const felem (*)[3], felem *)' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x28deb99c160 <col:13> 'void (const u64, unsigned int, const felem (*)[3], felem *)' Function 0x28deb8843c8 'select_point' 'void (const u64, unsigned int, const felem (*)[3], felem *)'
|   |   |   | |-ImplicitCastExpr 0x28deb99c2c0 <col:26> 'u64':'unsigned long long' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x28deb99c180 <col:26> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |   |   | |-ImplicitCastExpr 0x28deb99c2d8 <col:32> 'unsigned int' <IntegralCast>
|   |   |   | | `-IntegerLiteral 0x28deb99c1a0 <col:32> 'int' 16
|   |   |   | |-ImplicitCastExpr 0x28deb99c2f0 <col:36, col:48> 'const felem (*)[3]' <ArrayToPointerDecay>
|   |   |   | | `-ArraySubscriptExpr 0x28deb99c228 <col:36, col:48> 'const felem [16][3]' lvalue
|   |   |   | |   |-ImplicitCastExpr 0x28deb99c210 <col:36> 'const felem (*)[16][3]':'const felem (*)[16][3]' <LValueToRValue>
|   |   |   | |   | `-DeclRefExpr 0x28deb99c1c8 <col:36> 'const felem (*)[16][3]':'const felem (*)[16][3]' lvalue ParmVar 0x28deb886530 'g_pre_comp' 'const felem (*)[16][3]':'const felem (*)[16][3]'
|   |   |   | |   `-IntegerLiteral 0x28deb99c1e8 <col:47> 'int' 0
|   |   |   | `-ImplicitCastExpr 0x28deb99c308 <col:51> 'felem *' <ArrayToPointerDecay>
|   |   |   |   `-DeclRefExpr 0x28deb99c248 <col:51> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |   |   `-CallExpr 0x28deb99c800 <line:1175:13, line:1177:61> 'void'
|   |   |     |-ImplicitCastExpr 0x28deb99c7e8 <line:1175:13> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x28deb99c320 <col:13> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x28deb8814b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   |     |-ImplicitCastExpr 0x28deb99c870 <col:23, col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x28deb99c3a0 <col:23, col:27> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x28deb99c388 <col:23> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x28deb99c340 <col:23> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |     |   `-IntegerLiteral 0x28deb99c360 <col:26> 'int' 0
|   |   |     |-ImplicitCastExpr 0x28deb99c888 <col:30, col:34> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x28deb99c420 <col:30, col:34> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x28deb99c408 <col:30> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x28deb99c3c0 <col:30> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |     |   `-IntegerLiteral 0x28deb99c3e0 <col:33> 'int' 1
|   |   |     |-ImplicitCastExpr 0x28deb99c8a0 <col:37, col:41> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x28deb99c4a0 <col:37, col:41> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x28deb99c488 <col:37> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-DeclRefExpr 0x28deb99c440 <col:37> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |     |   `-IntegerLiteral 0x28deb99c460 <col:40> 'int' 2
|   |   |     |-ImplicitCastExpr 0x28deb99c8d0 <line:1176:23, col:27> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x28deb99c8b8 <col:23, col:27> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x28deb99c520 <col:23, col:27> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x28deb99c508 <col:23> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x28deb99c4c0 <col:23> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |     |     `-IntegerLiteral 0x28deb99c4e0 <col:26> 'int' 0
|   |   |     |-ImplicitCastExpr 0x28deb99c900 <col:30, col:34> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x28deb99c8e8 <col:30, col:34> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x28deb99c5a0 <col:30, col:34> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x28deb99c588 <col:30> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x28deb99c540 <col:30> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |     |     `-IntegerLiteral 0x28deb99c560 <col:33> 'int' 1
|   |   |     |-ImplicitCastExpr 0x28deb99c930 <col:37, col:41> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x28deb99c918 <col:37, col:41> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x28deb99c620 <col:37, col:41> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x28deb99c608 <col:37> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x28deb99c5c0 <col:37> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |   |     |     `-IntegerLiteral 0x28deb99c5e0 <col:40> 'int' 2
|   |   |     |-IntegerLiteral 0x28deb99c640 <line:1177:23> 'int' 1
|   |   |     |-ImplicitCastExpr 0x28deb99c960 <col:39, col:44> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x28deb99c948 <col:39, col:44> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x28deb99c6c8 <col:39, col:44> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x28deb99c6b0 <col:39> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x28deb99c668 <col:39> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |   |     |     `-IntegerLiteral 0x28deb99c688 <col:43> 'int' 0
|   |   |     |-ImplicitCastExpr 0x28deb99c990 <col:47, col:52> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x28deb99c978 <col:47, col:52> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x28deb99c748 <col:47, col:52> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x28deb99c730 <col:47> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-DeclRefExpr 0x28deb99c6e8 <col:47> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |   |     |     `-IntegerLiteral 0x28deb99c708 <col:51> 'int' 1
|   |   |     `-ImplicitCastExpr 0x28deb99c9c0 <col:55, col:60> 'const limb *':'const limb *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x28deb99c9a8 <col:55, col:60> 'limb *' <ArrayToPointerDecay>
|   |   |         `-ArraySubscriptExpr 0x28deb99c7c8 <col:55, col:60> 'felem':'limb [4]' lvalue
|   |   |           |-ImplicitCastExpr 0x28deb99c7b0 <col:55> 'felem *' <ArrayToPointerDecay>
|   |   |           | `-DeclRefExpr 0x28deb99c768 <col:55> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |   |           `-IntegerLiteral 0x28deb99c788 <col:59> 'int' 2
|   |   `-IfStmt 0x28deb998c70 <line:1181:9, line:1207:9>
|   |     |-BinaryOperator 0x28deb99cb80 <line:1181:13, col:38> 'int' '&&'
|   |     | |-ImplicitCastExpr 0x28deb99cb68 <col:13> 'unsigned int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x28deb99ca60 <col:13> 'const unsigned int' lvalue ParmVar 0x28deb885f80 'num_points' 'const unsigned int'
|   |     | `-ParenExpr 0x28deb99cb48 <col:27, col:38> 'int'
|   |     |   `-BinaryOperator 0x28deb99cb28 <col:28, col:37> 'int' '=='
|   |     |     |-BinaryOperator 0x28deb99cae0 <col:28, col:32> 'int' '%'
|   |     |     | |-ImplicitCastExpr 0x28deb99cac8 <col:28> 'int' <LValueToRValue>
|   |     |     | | `-DeclRefExpr 0x28deb99ca80 <col:28> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |     |     | `-IntegerLiteral 0x28deb99caa0 <col:32> 'int' 5
|   |     |     `-IntegerLiteral 0x28deb99cb00 <col:37> 'int' 0
|   |     `-CompoundStmt 0x28deb998c58 <col:41, line:1207:9>
|   |       `-ForStmt 0x28deb998c20 <line:1183:13, line:1206:13>
|   |         |-BinaryOperator 0x28deb99cc18 <line:1183:18, col:24> 'unsigned int' '='
|   |         | |-DeclRefExpr 0x28deb99cba0 <col:18> 'unsigned int' lvalue Var 0x28deb886a00 'num' 'unsigned int'
|   |         | `-ImplicitCastExpr 0x28deb99cc00 <col:24> 'unsigned int' <IntegralCast>
|   |         |   `-IntegerLiteral 0x28deb99cbd8 <col:24> 'int' 0
|   |         |-<<<NULL>>>
|   |         |-BinaryOperator 0x28deb99cca8 <col:27, col:33> 'int' '<'
|   |         | |-ImplicitCastExpr 0x28deb99cc78 <col:27> 'unsigned int' <LValueToRValue>
|   |         | | `-DeclRefExpr 0x28deb99cc38 <col:27> 'unsigned int' lvalue Var 0x28deb886a00 'num' 'unsigned int'
|   |         | `-ImplicitCastExpr 0x28deb99cc90 <col:33> 'unsigned int' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x28deb99cc58 <col:33> 'const unsigned int' lvalue ParmVar 0x28deb885f80 'num_points' 'const unsigned int'
|   |         |-UnaryOperator 0x28deb99cce8 <col:45, col:47> 'unsigned int' prefix '++'
|   |         | `-DeclRefExpr 0x28deb99ccc8 <col:47> 'unsigned int' lvalue Var 0x28deb886a00 'num' 'unsigned int'
|   |         `-CompoundStmt 0x28deb998bb8 <col:52, line:1206:13>
|   |           |-BinaryOperator 0x28deb996f30 <line:1184:17, col:56> 'u64':'unsigned long long' '='
|   |           | |-DeclRefExpr 0x28deb996cf0 <col:17> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x28deb996f18 <col:24, col:56> 'u64':'unsigned long long' <IntegralCast>
|   |           |   `-BinaryOperator 0x28deb996ef8 <col:24, col:56> 'int' '<<'
|   |           |     |-ImplicitCastExpr 0x28deb996ee0 <col:24, col:51> 'int' <IntegralCast>
|   |           |     | `-CallExpr 0x28deb996e58 <col:24, col:51> 'char'
|   |           |     |   |-ImplicitCastExpr 0x28deb996e40 <col:24> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     |   | `-DeclRefExpr 0x28deb996d10 <col:24> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |   |-ImplicitCastExpr 0x28deb996e88 <col:32, col:43> 'const u8 *' <ArrayToPointerDecay>
|   |           |     |   | `-ArraySubscriptExpr 0x28deb996da0 <col:32, col:43> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |   |-ImplicitCastExpr 0x28deb996d70 <col:32> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   |   | `-DeclRefExpr 0x28deb996d30 <col:32> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x28deb885f00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   |   `-ImplicitCastExpr 0x28deb996d88 <col:40> 'unsigned int' <LValueToRValue>
|   |           |     |   |     `-DeclRefExpr 0x28deb996d50 <col:40> 'unsigned int' lvalue Var 0x28deb886a00 'num' 'unsigned int'
|   |           |     |   `-ImplicitCastExpr 0x28deb996ea0 <col:46, col:50> 'unsigned int' <IntegralCast>
|   |           |     |     `-BinaryOperator 0x28deb996e20 <col:46, col:50> 'int' '+'
|   |           |     |       |-ImplicitCastExpr 0x28deb996e08 <col:46> 'int' <LValueToRValue>
|   |           |     |       | `-DeclRefExpr 0x28deb996dc0 <col:46> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |           |     |       `-IntegerLiteral 0x28deb996de0 <col:50> 'int' 4
|   |           |     `-IntegerLiteral 0x28deb996eb8 <col:56> 'int' 5
|   |           |-CompoundAssignOperator 0x28deb997190 <line:1185:17, col:57> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           | |-DeclRefExpr 0x28deb996f50 <col:17> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x28deb997178 <col:25, col:57> 'unsigned long long' <IntegralCast>
|   |           |   `-BinaryOperator 0x28deb997158 <col:25, col:57> 'int' '<<'
|   |           |     |-ImplicitCastExpr 0x28deb997140 <col:25, col:52> 'int' <IntegralCast>
|   |           |     | `-CallExpr 0x28deb9970b8 <col:25, col:52> 'char'
|   |           |     |   |-ImplicitCastExpr 0x28deb9970a0 <col:25> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     |   | `-DeclRefExpr 0x28deb996f70 <col:25> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |   |-ImplicitCastExpr 0x28deb9970e8 <col:33, col:44> 'const u8 *' <ArrayToPointerDecay>
|   |           |     |   | `-ArraySubscriptExpr 0x28deb997000 <col:33, col:44> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |   |-ImplicitCastExpr 0x28deb996fd0 <col:33> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   |   | `-DeclRefExpr 0x28deb996f90 <col:33> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x28deb885f00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   |   `-ImplicitCastExpr 0x28deb996fe8 <col:41> 'unsigned int' <LValueToRValue>
|   |           |     |   |     `-DeclRefExpr 0x28deb996fb0 <col:41> 'unsigned int' lvalue Var 0x28deb886a00 'num' 'unsigned int'
|   |           |     |   `-ImplicitCastExpr 0x28deb997100 <col:47, col:51> 'unsigned int' <IntegralCast>
|   |           |     |     `-BinaryOperator 0x28deb997080 <col:47, col:51> 'int' '+'
|   |           |     |       |-ImplicitCastExpr 0x28deb997068 <col:47> 'int' <LValueToRValue>
|   |           |     |       | `-DeclRefExpr 0x28deb997020 <col:47> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |           |     |       `-IntegerLiteral 0x28deb997040 <col:51> 'int' 3
|   |           |     `-IntegerLiteral 0x28deb997118 <col:57> 'int' 4
|   |           |-CompoundAssignOperator 0x28deb997400 <line:1186:17, col:57> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           | |-DeclRefExpr 0x28deb9971c0 <col:17> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x28deb9973e8 <col:25, col:57> 'unsigned long long' <IntegralCast>
|   |           |   `-BinaryOperator 0x28deb9973c8 <col:25, col:57> 'int' '<<'
|   |           |     |-ImplicitCastExpr 0x28deb9973b0 <col:25, col:52> 'int' <IntegralCast>
|   |           |     | `-CallExpr 0x28deb997328 <col:25, col:52> 'char'
|   |           |     |   |-ImplicitCastExpr 0x28deb997310 <col:25> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     |   | `-DeclRefExpr 0x28deb9971e0 <col:25> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |   |-ImplicitCastExpr 0x28deb997358 <col:33, col:44> 'const u8 *' <ArrayToPointerDecay>
|   |           |     |   | `-ArraySubscriptExpr 0x28deb997270 <col:33, col:44> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |   |-ImplicitCastExpr 0x28deb997240 <col:33> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   |   | `-DeclRefExpr 0x28deb997200 <col:33> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x28deb885f00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   |   `-ImplicitCastExpr 0x28deb997258 <col:41> 'unsigned int' <LValueToRValue>
|   |           |     |   |     `-DeclRefExpr 0x28deb997220 <col:41> 'unsigned int' lvalue Var 0x28deb886a00 'num' 'unsigned int'
|   |           |     |   `-ImplicitCastExpr 0x28deb997370 <col:47, col:51> 'unsigned int' <IntegralCast>
|   |           |     |     `-BinaryOperator 0x28deb9972f0 <col:47, col:51> 'int' '+'
|   |           |     |       |-ImplicitCastExpr 0x28deb9972d8 <col:47> 'int' <LValueToRValue>
|   |           |     |       | `-DeclRefExpr 0x28deb997290 <col:47> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |           |     |       `-IntegerLiteral 0x28deb9972b0 <col:51> 'int' 2
|   |           |     `-IntegerLiteral 0x28deb997388 <col:57> 'int' 3
|   |           |-CompoundAssignOperator 0x28deb997670 <line:1187:17, col:57> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           | |-DeclRefExpr 0x28deb997430 <col:17> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x28deb997658 <col:25, col:57> 'unsigned long long' <IntegralCast>
|   |           |   `-BinaryOperator 0x28deb997638 <col:25, col:57> 'int' '<<'
|   |           |     |-ImplicitCastExpr 0x28deb997620 <col:25, col:52> 'int' <IntegralCast>
|   |           |     | `-CallExpr 0x28deb997598 <col:25, col:52> 'char'
|   |           |     |   |-ImplicitCastExpr 0x28deb997580 <col:25> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     |   | `-DeclRefExpr 0x28deb997450 <col:25> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |   |-ImplicitCastExpr 0x28deb9975c8 <col:33, col:44> 'const u8 *' <ArrayToPointerDecay>
|   |           |     |   | `-ArraySubscriptExpr 0x28deb9974e0 <col:33, col:44> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |   |-ImplicitCastExpr 0x28deb9974b0 <col:33> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   |   | `-DeclRefExpr 0x28deb997470 <col:33> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x28deb885f00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   |   `-ImplicitCastExpr 0x28deb9974c8 <col:41> 'unsigned int' <LValueToRValue>
|   |           |     |   |     `-DeclRefExpr 0x28deb997490 <col:41> 'unsigned int' lvalue Var 0x28deb886a00 'num' 'unsigned int'
|   |           |     |   `-ImplicitCastExpr 0x28deb9975e0 <col:47, col:51> 'unsigned int' <IntegralCast>
|   |           |     |     `-BinaryOperator 0x28deb997560 <col:47, col:51> 'int' '+'
|   |           |     |       |-ImplicitCastExpr 0x28deb997548 <col:47> 'int' <LValueToRValue>
|   |           |     |       | `-DeclRefExpr 0x28deb997500 <col:47> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |           |     |       `-IntegerLiteral 0x28deb997520 <col:51> 'int' 1
|   |           |     `-IntegerLiteral 0x28deb9975f8 <col:57> 'int' 2
|   |           |-CompoundAssignOperator 0x28deb997898 <line:1188:17, col:53> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           | |-DeclRefExpr 0x28deb9976a0 <col:17> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x28deb997880 <col:25, col:53> 'unsigned long long' <IntegralCast>
|   |           |   `-BinaryOperator 0x28deb997860 <col:25, col:53> 'int' '<<'
|   |           |     |-ImplicitCastExpr 0x28deb997848 <col:25, col:48> 'int' <IntegralCast>
|   |           |     | `-CallExpr 0x28deb9977a8 <col:25, col:48> 'char'
|   |           |     |   |-ImplicitCastExpr 0x28deb997790 <col:25> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     |   | `-DeclRefExpr 0x28deb9976c0 <col:25> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |   |-ImplicitCastExpr 0x28deb9977d8 <col:33, col:44> 'const u8 *' <ArrayToPointerDecay>
|   |           |     |   | `-ArraySubscriptExpr 0x28deb997750 <col:33, col:44> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |   |-ImplicitCastExpr 0x28deb997720 <col:33> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   |   | `-DeclRefExpr 0x28deb9976e0 <col:33> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x28deb885f00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   |   `-ImplicitCastExpr 0x28deb997738 <col:41> 'unsigned int' <LValueToRValue>
|   |           |     |   |     `-DeclRefExpr 0x28deb997700 <col:41> 'unsigned int' lvalue Var 0x28deb886a00 'num' 'unsigned int'
|   |           |     |   `-ImplicitCastExpr 0x28deb997808 <col:47> 'unsigned int' <IntegralCast>
|   |           |     |     `-ImplicitCastExpr 0x28deb9977f0 <col:47> 'int' <LValueToRValue>
|   |           |     |       `-DeclRefExpr 0x28deb997770 <col:47> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |           |     `-IntegerLiteral 0x28deb997820 <col:53> 'int' 1
|   |           |-CompoundAssignOperator 0x28deb997aa8 <line:1189:17, col:52> 'u64':'unsigned long long' '|=' ComputeLHSTy='unsigned long long' ComputeResultTy='unsigned long long'
|   |           | |-DeclRefExpr 0x28deb9978c8 <col:17> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |           | `-ImplicitCastExpr 0x28deb997a90 <col:25, col:52> 'unsigned long long' <IntegralCast>
|   |           |   `-CallExpr 0x28deb997a30 <col:25, col:52> 'char'
|   |           |     |-ImplicitCastExpr 0x28deb997a18 <col:25> 'char (*)(const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |           |     | `-DeclRefExpr 0x28deb9978e8 <col:25> 'char (const u8 *, unsigned int)' Function 0x28deb885828 'get_bit' 'char (const u8 *, unsigned int)'
|   |           |     |-ImplicitCastExpr 0x28deb997a60 <col:33, col:44> 'const u8 *' <ArrayToPointerDecay>
|   |           |     | `-ArraySubscriptExpr 0x28deb997978 <col:33, col:44> 'const felem_bytearray':'u8 const[28]' lvalue
|   |           |     |   |-ImplicitCastExpr 0x28deb997948 <col:33> 'const felem_bytearray *':'const felem_bytearray *' <LValueToRValue>
|   |           |     |   | `-DeclRefExpr 0x28deb997908 <col:33> 'const felem_bytearray *':'const felem_bytearray *' lvalue ParmVar 0x28deb885f00 'scalars' 'const felem_bytearray *':'const felem_bytearray *'
|   |           |     |   `-ImplicitCastExpr 0x28deb997960 <col:41> 'unsigned int' <LValueToRValue>
|   |           |     |     `-DeclRefExpr 0x28deb997928 <col:41> 'unsigned int' lvalue Var 0x28deb886a00 'num' 'unsigned int'
|   |           |     `-ImplicitCastExpr 0x28deb997a78 <col:47, col:51> 'unsigned int' <IntegralCast>
|   |           |       `-BinaryOperator 0x28deb9979f8 <col:47, col:51> 'int' '-'
|   |           |         |-ImplicitCastExpr 0x28deb9979e0 <col:47> 'int' <LValueToRValue>
|   |           |         | `-DeclRefExpr 0x28deb997998 <col:47> 'int' lvalue Var 0x28deb8868d0 'i' 'int'
|   |           |         `-IntegerLiteral 0x28deb9979b8 <col:51> 'int' 1
|   |           |-CallExpr 0x28deb997c00 <line:1190:17, col:68> 'void'
|   |           | |-ImplicitCastExpr 0x28deb997be8 <col:17> 'void (*)(unsigned char *, unsigned char *, unsigned char)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x28deb997ad8 <col:17> 'void (unsigned char *, unsigned char *, unsigned char)' Function 0x28deb829178 'ec_GFp_nistp_recode_scalar_bits' 'void (unsigned char *, unsigned char *, unsigned char)'
|   |           | |-UnaryOperator 0x28deb997b30 <col:49, col:50> 'u8 *' prefix '&' cannot overflow
|   |           | | `-DeclRefExpr 0x28deb997af8 <col:50> 'u8':'unsigned char' lvalue Var 0x28deb886f20 'sign' 'u8':'unsigned char'
|   |           | |-UnaryOperator 0x28deb997b80 <col:56, col:57> 'u8 *' prefix '&' cannot overflow
|   |           | | `-DeclRefExpr 0x28deb997b48 <col:57> 'u8':'unsigned char' lvalue Var 0x28deb886f98 'digit' 'u8':'unsigned char'
|   |           | `-ImplicitCastExpr 0x28deb997c50 <col:64> 'unsigned char' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x28deb997c38 <col:64> 'u64':'unsigned long long' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x28deb997b98 <col:64> 'u64':'unsigned long long' lvalue Var 0x28deb886e90 'bits' 'u64':'unsigned long long'
|   |           |-CallExpr 0x28deb997d98 <line:1193:17, col:59> 'void'
|   |           | |-ImplicitCastExpr 0x28deb997d80 <col:17> 'void (*)(const u64, unsigned int, const felem (*)[3], felem *)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x28deb997c68 <col:17> 'void (const u64, unsigned int, const felem (*)[3], felem *)' Function 0x28deb8843c8 'select_point' 'void (const u64, unsigned int, const felem (*)[3], felem *)'
|   |           | |-ImplicitCastExpr 0x28deb997df0 <col:30> 'u64':'unsigned long long' <IntegralCast>
|   |           | | `-ImplicitCastExpr 0x28deb997dd8 <col:30> 'u8':'unsigned char' <LValueToRValue>
|   |           | |   `-DeclRefExpr 0x28deb997c88 <col:30> 'u8':'unsigned char' lvalue Var 0x28deb886f98 'digit' 'u8':'unsigned char'
|   |           | |-ImplicitCastExpr 0x28deb997e08 <col:37> 'unsigned int' <IntegralCast>
|   |           | | `-IntegerLiteral 0x28deb997ca8 <col:37> 'int' 17
|   |           | |-ImplicitCastExpr 0x28deb997e20 <col:41, col:53> 'const felem (*)[3]' <ArrayToPointerDecay>
|   |           | | `-ArraySubscriptExpr 0x28deb997d40 <col:41, col:53> 'const felem [17][3]' lvalue
|   |           | |   |-ImplicitCastExpr 0x28deb997d10 <col:41> 'const felem (*)[17][3]':'const felem (*)[17][3]' <LValueToRValue>
|   |           | |   | `-DeclRefExpr 0x28deb997cd0 <col:41> 'const felem (*)[17][3]':'const felem (*)[17][3]' lvalue ParmVar 0x28deb886330 'pre_comp' 'const felem (*)[17][3]':'const felem (*)[17][3]'
|   |           | |   `-ImplicitCastExpr 0x28deb997d28 <col:50> 'unsigned int' <LValueToRValue>
|   |           | |     `-DeclRefExpr 0x28deb997cf0 <col:50> 'unsigned int' lvalue Var 0x28deb886a00 'num' 'unsigned int'
|   |           | `-ImplicitCastExpr 0x28deb997e38 <col:56> 'felem *' <ArrayToPointerDecay>
|   |           |   `-DeclRefExpr 0x28deb997d60 <col:56> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |           |-CallExpr 0x28deb997f88 <line:1194:17, col:41> 'void'
|   |           | |-ImplicitCastExpr 0x28deb997f70 <col:17> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x28deb997e50 <col:17> 'void (limb *, const limb *)' Function 0x28deb787fe8 'felem_neg' 'void (limb *, const limb *)'
|   |           | |-ImplicitCastExpr 0x28deb997fb8 <col:27, col:32> 'limb *' <ArrayToPointerDecay>
|   |           | | `-ArraySubscriptExpr 0x28deb997ed0 <col:27, col:32> 'felem':'limb [4]' lvalue
|   |           | |   |-ImplicitCastExpr 0x28deb997eb8 <col:27> 'felem *' <ArrayToPointerDecay>
|   |           | |   | `-DeclRefExpr 0x28deb997e70 <col:27> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |           | |   `-IntegerLiteral 0x28deb997e90 <col:31> 'int' 3
|   |           | `-ImplicitCastExpr 0x28deb997fe8 <col:35, col:40> 'const limb *':'const limb *' <NoOp>
|   |           |   `-ImplicitCastExpr 0x28deb997fd0 <col:35, col:40> 'limb *' <ArrayToPointerDecay>
|   |           |     `-ArraySubscriptExpr 0x28deb997f50 <col:35, col:40> 'felem':'limb [4]' lvalue
|   |           |       |-ImplicitCastExpr 0x28deb997f38 <col:35> 'felem *' <ArrayToPointerDecay>
|   |           |       | `-DeclRefExpr 0x28deb997ef0 <col:35> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |           |       `-IntegerLiteral 0x28deb997f10 <col:39> 'int' 1
|   |           |-CallExpr 0x28deb998158 <line:1196:17, col:54> 'void'
|   |           | |-ImplicitCastExpr 0x28deb998140 <col:17> 'void (*)(limb *, const limb *, limb)' <FunctionToPointerDecay>
|   |           | | `-DeclRefExpr 0x28deb998000 <col:17> 'void (limb *, const limb *, limb)' Function 0x28deb86fa38 'copy_conditional' 'void (limb *, const limb *, limb)'
|   |           | |-ImplicitCastExpr 0x28deb998190 <col:34, col:39> 'limb *' <ArrayToPointerDecay>
|   |           | | `-ArraySubscriptExpr 0x28deb998080 <col:34, col:39> 'felem':'limb [4]' lvalue
|   |           | |   |-ImplicitCastExpr 0x28deb998068 <col:34> 'felem *' <ArrayToPointerDecay>
|   |           | |   | `-DeclRefExpr 0x28deb998020 <col:34> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |           | |   `-IntegerLiteral 0x28deb998040 <col:38> 'int' 1
|   |           | |-ImplicitCastExpr 0x28deb9981c0 <col:42, col:47> 'const limb *':'const limb *' <NoOp>
|   |           | | `-ImplicitCastExpr 0x28deb9981a8 <col:42, col:47> 'limb *' <ArrayToPointerDecay>
|   |           | |   `-ArraySubscriptExpr 0x28deb998100 <col:42, col:47> 'felem':'limb [4]' lvalue
|   |           | |     |-ImplicitCastExpr 0x28deb9980e8 <col:42> 'felem *' <ArrayToPointerDecay>
|   |           | |     | `-DeclRefExpr 0x28deb9980a0 <col:42> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |           | |     `-IntegerLiteral 0x28deb9980c0 <col:46> 'int' 3
|   |           | `-ImplicitCastExpr 0x28deb9981f0 <col:50> 'limb':'unsigned long long' <IntegralCast>
|   |           |   `-ImplicitCastExpr 0x28deb9981d8 <col:50> 'u8':'unsigned char' <LValueToRValue>
|   |           |     `-DeclRefExpr 0x28deb998120 <col:50> 'u8':'unsigned char' lvalue Var 0x28deb886f20 'sign' 'u8':'unsigned char'
|   |           `-IfStmt 0x28deb998b90 <line:1198:17, line:1205:17> has_else
|   |             |-UnaryOperator 0x28deb998240 <line:1198:21, col:22> 'int' prefix '!' cannot overflow
|   |             | `-ImplicitCastExpr 0x28deb998228 <col:22> 'int' <LValueToRValue>
|   |             |   `-DeclRefExpr 0x28deb998208 <col:22> 'int' lvalue Var 0x28deb886950 'skip' 'int'
|   |             |-CompoundStmt 0x28deb998920 <col:28, line:1202:17>
|   |             | `-CallExpr 0x28deb998730 <line:1199:21, line:1201:60> 'void'
|   |             |   |-ImplicitCastExpr 0x28deb998718 <line:1199:21> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |             |   | `-DeclRefExpr 0x28deb998258 <col:21> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x28deb8814b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |             |   |-ImplicitCastExpr 0x28deb9987a0 <col:31, col:35> 'limb *' <ArrayToPointerDecay>
|   |             |   | `-ArraySubscriptExpr 0x28deb9982d8 <col:31, col:35> 'felem':'limb [4]' lvalue
|   |             |   |   |-ImplicitCastExpr 0x28deb9982c0 <col:31> 'felem *' <ArrayToPointerDecay>
|   |             |   |   | `-DeclRefExpr 0x28deb998278 <col:31> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |             |   |   `-IntegerLiteral 0x28deb998298 <col:34> 'int' 0
|   |             |   |-ImplicitCastExpr 0x28deb9987b8 <col:38, col:42> 'limb *' <ArrayToPointerDecay>
|   |             |   | `-ArraySubscriptExpr 0x28deb998358 <col:38, col:42> 'felem':'limb [4]' lvalue
|   |             |   |   |-ImplicitCastExpr 0x28deb998340 <col:38> 'felem *' <ArrayToPointerDecay>
|   |             |   |   | `-DeclRefExpr 0x28deb9982f8 <col:38> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |             |   |   `-IntegerLiteral 0x28deb998318 <col:41> 'int' 1
|   |             |   |-ImplicitCastExpr 0x28deb9987d0 <col:45, col:49> 'limb *' <ArrayToPointerDecay>
|   |             |   | `-ArraySubscriptExpr 0x28deb9983d8 <col:45, col:49> 'felem':'limb [4]' lvalue
|   |             |   |   |-ImplicitCastExpr 0x28deb9983c0 <col:45> 'felem *' <ArrayToPointerDecay>
|   |             |   |   | `-DeclRefExpr 0x28deb998378 <col:45> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |             |   |   `-IntegerLiteral 0x28deb998398 <col:48> 'int' 2
|   |             |   |-ImplicitCastExpr 0x28deb998800 <line:1200:31, col:35> 'const limb *':'const limb *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x28deb9987e8 <col:31, col:35> 'limb *' <ArrayToPointerDecay>
|   |             |   |   `-ArraySubscriptExpr 0x28deb998458 <col:31, col:35> 'felem':'limb [4]' lvalue
|   |             |   |     |-ImplicitCastExpr 0x28deb998440 <col:31> 'felem *' <ArrayToPointerDecay>
|   |             |   |     | `-DeclRefExpr 0x28deb9983f8 <col:31> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |             |   |     `-IntegerLiteral 0x28deb998418 <col:34> 'int' 0
|   |             |   |-ImplicitCastExpr 0x28deb998830 <col:38, col:42> 'const limb *':'const limb *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x28deb998818 <col:38, col:42> 'limb *' <ArrayToPointerDecay>
|   |             |   |   `-ArraySubscriptExpr 0x28deb9984d8 <col:38, col:42> 'felem':'limb [4]' lvalue
|   |             |   |     |-ImplicitCastExpr 0x28deb9984c0 <col:38> 'felem *' <ArrayToPointerDecay>
|   |             |   |     | `-DeclRefExpr 0x28deb998478 <col:38> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |             |   |     `-IntegerLiteral 0x28deb998498 <col:41> 'int' 1
|   |             |   |-ImplicitCastExpr 0x28deb998860 <col:45, col:49> 'const limb *':'const limb *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x28deb998848 <col:45, col:49> 'limb *' <ArrayToPointerDecay>
|   |             |   |   `-ArraySubscriptExpr 0x28deb998558 <col:45, col:49> 'felem':'limb [4]' lvalue
|   |             |   |     |-ImplicitCastExpr 0x28deb998540 <col:45> 'felem *' <ArrayToPointerDecay>
|   |             |   |     | `-DeclRefExpr 0x28deb9984f8 <col:45> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |             |   |     `-IntegerLiteral 0x28deb998518 <col:48> 'int' 2
|   |             |   |-ImplicitCastExpr 0x28deb998878 <line:1201:31> 'int' <LValueToRValue>
|   |             |   | `-DeclRefExpr 0x28deb998578 <col:31> 'const int' lvalue ParmVar 0x28deb886078 'mixed' 'const int'
|   |             |   |-ImplicitCastExpr 0x28deb9988a8 <col:38, col:43> 'const limb *':'const limb *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x28deb998890 <col:38, col:43> 'limb *' <ArrayToPointerDecay>
|   |             |   |   `-ArraySubscriptExpr 0x28deb9985f8 <col:38, col:43> 'felem':'limb [4]' lvalue
|   |             |   |     |-ImplicitCastExpr 0x28deb9985e0 <col:38> 'felem *' <ArrayToPointerDecay>
|   |             |   |     | `-DeclRefExpr 0x28deb998598 <col:38> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |             |   |     `-IntegerLiteral 0x28deb9985b8 <col:42> 'int' 0
|   |             |   |-ImplicitCastExpr 0x28deb9988d8 <col:46, col:51> 'const limb *':'const limb *' <NoOp>
|   |             |   | `-ImplicitCastExpr 0x28deb9988c0 <col:46, col:51> 'limb *' <ArrayToPointerDecay>
|   |             |   |   `-ArraySubscriptExpr 0x28deb998678 <col:46, col:51> 'felem':'limb [4]' lvalue
|   |             |   |     |-ImplicitCastExpr 0x28deb998660 <col:46> 'felem *' <ArrayToPointerDecay>
|   |             |   |     | `-DeclRefExpr 0x28deb998618 <col:46> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |             |   |     `-IntegerLiteral 0x28deb998638 <col:50> 'int' 1
|   |             |   `-ImplicitCastExpr 0x28deb998908 <col:54, col:59> 'const limb *':'const limb *' <NoOp>
|   |             |     `-ImplicitCastExpr 0x28deb9988f0 <col:54, col:59> 'limb *' <ArrayToPointerDecay>
|   |             |       `-ArraySubscriptExpr 0x28deb9986f8 <col:54, col:59> 'felem':'limb [4]' lvalue
|   |             |         |-ImplicitCastExpr 0x28deb9986e0 <col:54> 'felem *' <ArrayToPointerDecay>
|   |             |         | `-DeclRefExpr 0x28deb998698 <col:54> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |             |         `-IntegerLiteral 0x28deb9986b8 <col:58> 'int' 2
|   |             `-CompoundStmt 0x28deb998b70 <line:1202:24, line:1205:17>
|   |               |-CallExpr 0x28deb998a70 <line:1203:21, col:54> 'void *'
|   |               | |-ImplicitCastExpr 0x28deb998a58 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |               | | `-DeclRefExpr 0x28deb998938 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x28deb745cc8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |               | |-ImplicitCastExpr 0x28deb998ac0 <col:28> 'void *' <BitCast>
|   |               | | `-ImplicitCastExpr 0x28deb998aa8 <col:28> 'felem *' <ArrayToPointerDecay>
|   |               | |   `-DeclRefExpr 0x28deb998958 <col:28> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |               | |-ImplicitCastExpr 0x28deb998af0 <col:32> 'const void *' <BitCast>
|   |               | | `-ImplicitCastExpr 0x28deb998ad8 <col:32> 'felem *' <ArrayToPointerDecay>
|   |               | |   `-DeclRefExpr 0x28deb998978 <col:32> 'felem [4]' lvalue Var 0x28deb886de8 'tmp' 'felem [4]'
|   |               | `-BinaryOperator 0x28deb998a08 <col:37, col:53> 'unsigned long long' '*'
|   |               |   |-ImplicitCastExpr 0x28deb9989f0 <col:37> 'unsigned long long' <IntegralCast>
|   |               |   | `-IntegerLiteral 0x28deb998998 <col:37> 'int' 3
|   |               |   `-UnaryExprOrTypeTraitExpr 0x28deb9989d0 <col:41, col:53> 'unsigned long long' sizeof 'felem':'limb [4]'
|   |               `-BinaryOperator 0x28deb998b50 <line:1204:21, col:28> 'int' '='
|   |                 |-DeclRefExpr 0x28deb998b08 <col:21> 'int' lvalue Var 0x28deb886950 'skip' 'int'
|   |                 `-IntegerLiteral 0x28deb998b28 <col:28> 'int' 0
|   |-CallExpr 0x28deb990d98 <line:1209:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x28deb990d80 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb990cc0 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb990dc8 <col:18> 'limb *':'limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb990ce0 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb885c90 'x_out' 'limb *':'limb *'
|   | `-ImplicitCastExpr 0x28deb990df8 <col:25, col:29> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb990de0 <col:25, col:29> 'limb *' <ArrayToPointerDecay>
|   |     `-ArraySubscriptExpr 0x28deb990d60 <col:25, col:29> 'felem':'limb [4]' lvalue
|   |       |-ImplicitCastExpr 0x28deb990d48 <col:25> 'felem *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x28deb990d00 <col:25> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |       `-IntegerLiteral 0x28deb990d20 <col:28> 'int' 0
|   |-CallExpr 0x28deb990ee8 <line:1210:5, col:30> 'void'
|   | |-ImplicitCastExpr 0x28deb990ed0 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb990e10 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb990f18 <col:18> 'limb *':'limb *' <LValueToRValue>
|   | | `-DeclRefExpr 0x28deb990e30 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb885d08 'y_out' 'limb *':'limb *'
|   | `-ImplicitCastExpr 0x28deb990f48 <col:25, col:29> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb990f30 <col:25, col:29> 'limb *' <ArrayToPointerDecay>
|   |     `-ArraySubscriptExpr 0x28deb990eb0 <col:25, col:29> 'felem':'limb [4]' lvalue
|   |       |-ImplicitCastExpr 0x28deb990e98 <col:25> 'felem *' <ArrayToPointerDecay>
|   |       | `-DeclRefExpr 0x28deb990e50 <col:25> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|   |       `-IntegerLiteral 0x28deb990e70 <col:28> 'int' 1
|   `-CallExpr 0x28deb991038 <line:1211:5, col:30> 'void'
|     |-ImplicitCastExpr 0x28deb991020 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x28deb990f60 <col:5> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|     |-ImplicitCastExpr 0x28deb991068 <col:18> 'limb *':'limb *' <LValueToRValue>
|     | `-DeclRefExpr 0x28deb990f80 <col:18> 'limb *':'limb *' lvalue ParmVar 0x28deb885d80 'z_out' 'limb *':'limb *'
|     `-ImplicitCastExpr 0x28deb991098 <col:25, col:29> 'const limb *':'const limb *' <NoOp>
|       `-ImplicitCastExpr 0x28deb991080 <col:25, col:29> 'limb *' <ArrayToPointerDecay>
|         `-ArraySubscriptExpr 0x28deb991000 <col:25, col:29> 'felem':'limb [4]' lvalue
|           |-ImplicitCastExpr 0x28deb990fe8 <col:25> 'felem *' <ArrayToPointerDecay>
|           | `-DeclRefExpr 0x28deb990fa0 <col:25> 'felem [3]' lvalue Var 0x28deb886ca8 'nq' 'felem [3]'
|           `-IntegerLiteral 0x28deb990fc0 <col:28> 'int' 2
|-FunctionDecl 0x28deb9911c8 <line:1219:1, line:1237:1> line:1219:27 used nistp224_pre_comp_new 'NISTP224_PRE_COMP *()' static
| |-CompoundStmt 0x28deb991c18 <line:1220:1, line:1237:1>
| | |-DeclStmt 0x28deb991520 <line:1221:5, col:58>
| | | `-VarDecl 0x28deb991290 <col:5, col:57> col:24 used ret 'NISTP224_PRE_COMP *' cinit
| | |   `-ImplicitCastExpr 0x28deb991508 <col:30, col:57> 'NISTP224_PRE_COMP *' <IntegralToPointer>
| | |     `-CallExpr 0x28deb9914e0 <col:30, col:57> 'int'
| | |       |-ImplicitCastExpr 0x28deb9914c8 <col:30> 'int (*)()' <FunctionToPointerDecay>
| | |       | `-DeclRefExpr 0x28deb9913e8 <col:30> 'int ()' Function 0x28deb991320 'OPENSSL_zalloc' 'int ()'
| | |       `-UnaryExprOrTypeTraitExpr 0x28deb991478 <col:45, col:56> 'unsigned long long' sizeof
| | |         `-ParenExpr 0x28deb991458 <col:51, col:56> 'NISTP224_PRE_COMP':'struct nistp224_pre_comp_st' lvalue
| | |           `-UnaryOperator 0x28deb991440 <col:52, col:53> 'NISTP224_PRE_COMP':'struct nistp224_pre_comp_st' lvalue prefix '*' cannot overflow
| | |             `-ImplicitCastExpr 0x28deb991428 <col:53> 'NISTP224_PRE_COMP *' <LValueToRValue>
| | |               `-DeclRefExpr 0x28deb991408 <col:53> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb991290 'ret' 'NISTP224_PRE_COMP *' non_odr_use_unevaluated
| | |-IfStmt 0x28deb991620 <line:1223:5, line:1226:5>
| | | |-UnaryOperator 0x28deb991588 <line:1223:9, col:10> 'int' prefix '!' cannot overflow
| | | | `-ImplicitCastExpr 0x28deb991570 <col:10> 'NISTP224_PRE_COMP *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x28deb991538 <col:10> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb991290 'ret' 'NISTP224_PRE_COMP *'
| | | `-CompoundStmt 0x28deb991608 <col:15, line:1226:5>
| | |   `-ReturnStmt 0x28deb9915f8 <line:1225:9, col:16>
| | |     `-ImplicitCastExpr 0x28deb9915e0 <col:16> 'NISTP224_PRE_COMP *' <LValueToRValue>
| | |       `-DeclRefExpr 0x28deb9915c0 <col:16> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb991290 'ret' 'NISTP224_PRE_COMP *'
| | |-BinaryOperator 0x28deb9916c8 <line:1228:5, col:23> 'int' '='
| | | |-MemberExpr 0x28deb991670 <col:5, col:10> 'int' lvalue ->references 0x28deb782708
| | | | `-ImplicitCastExpr 0x28deb991658 <col:5> 'NISTP224_PRE_COMP *' <LValueToRValue>
| | | |   `-DeclRefExpr 0x28deb991638 <col:5> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb991290 'ret' 'NISTP224_PRE_COMP *'
| | | `-IntegerLiteral 0x28deb9916a0 <col:23> 'int' 1
| | |-IfStmt 0x28deb991bb8 <line:1231:5, line:1235:5>
| | | |-OpaqueValueExpr 0x28deb991ba0 <<invalid sloc>> '_Bool'
| | | `-CompoundStmt 0x28deb991b80 <line:1231:28, line:1235:5>
| | |   |-CallExpr 0x28deb991a90 <line:1233:9, col:25> 'int'
| | |   | |-ImplicitCastExpr 0x28deb991a78 <col:9> 'int (*)()' <FunctionToPointerDecay>
| | |   | | `-DeclRefExpr 0x28deb991a38 <col:9> 'int ()' Function 0x28deb991970 'OPENSSL_free' 'int ()'
| | |   | `-ImplicitCastExpr 0x28deb991ab8 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
| | |   |   `-DeclRefExpr 0x28deb991a58 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb991290 'ret' 'NISTP224_PRE_COMP *'
| | |   `-ReturnStmt 0x28deb991b70 <line:1234:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27>
| | |     `-ImplicitCastExpr 0x28deb991b58 <col:17, col:27> 'NISTP224_PRE_COMP *' <NullToPointer>
| | |       `-ParenExpr 0x28deb991b38 <col:17, col:27> 'void *'
| | |         `-CStyleCastExpr 0x28deb991b10 <col:18, col:26> 'void *' <NullToPointer>
| | |           `-IntegerLiteral 0x28deb991ad0 <col:26> 'int' 0
| | `-ReturnStmt 0x28deb991c08 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1236:5, col:12>
| |   `-ImplicitCastExpr 0x28deb991bf0 <col:12> 'NISTP224_PRE_COMP *' <LValueToRValue>
| |     `-DeclRefExpr 0x28deb991bd0 <col:12> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb991290 'ret' 'NISTP224_PRE_COMP *'
| `-FullComment 0x28deb9b5190 <line:1214:4, col:78>
|   `-ParagraphComment 0x28deb9b5168 <col:4, col:78>
|     `-TextComment 0x28deb9b5140 <col:4, col:78> Text="***************************************************************************"
|-FunctionDecl 0x28deb991d08 prev 0x28deb800bc8 <line:1239:1, line:1245:1> line:1239:20 EC_nistp224_pre_comp_dup 'NISTP224_PRE_COMP *(NISTP224_PRE_COMP *)'
| |-ParmVarDecl 0x28deb991c60 <col:45, col:64> col:64 used p 'NISTP224_PRE_COMP *'
| `-CompoundStmt 0x28deb9921c8 <line:1240:1, line:1245:1>
|   |-DeclStmt 0x28deb991e30 <line:1241:5, col:10>
|   | `-VarDecl 0x28deb991dc8 <col:5, col:9> col:9 used i 'int'
|   `-ReturnStmt 0x28deb9921b8 <line:1244:5, col:12>
|     `-ImplicitCastExpr 0x28deb9921a0 <col:12> 'NISTP224_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x28deb992180 <col:12> 'NISTP224_PRE_COMP *' lvalue ParmVar 0x28deb991c60 'p' 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x28deb9922a0 prev 0x28deb801728 <line:1247:1, line:1262:1> line:1247:6 used EC_nistp224_pre_comp_free 'void (NISTP224_PRE_COMP *)'
| |-ParmVarDecl 0x28deb9921f8 <col:32, col:51> col:51 used p 'NISTP224_PRE_COMP *'
| `-CompoundStmt 0x28deb992c68 <line:1248:1, line:1262:1>
|   |-DeclStmt 0x28deb9923c8 <line:1249:5, col:10>
|   | `-VarDecl 0x28deb992360 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x28deb9924e8 <line:1251:5, line:1252:9>
|   | |-BinaryOperator 0x28deb9924b8 <line:1251:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x28deb992488 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1251:9> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb9923e0 <col:9> 'NISTP224_PRE_COMP *' lvalue ParmVar 0x28deb9921f8 'p' 'NISTP224_PRE_COMP *'
|   | | `-ImplicitCastExpr 0x28deb9924a0 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'NISTP224_PRE_COMP *' <BitCast>
|   | |   `-ParenExpr 0x28deb992468 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x28deb992440 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x28deb992400 <col:26> 'int' 0
|   | `-ReturnStmt 0x28deb9924d8 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1252:9>
|   |-IfStmt 0x28deb992870 <line:1256:5, line:1257:9>
|   | |-BinaryOperator 0x28deb992840 <line:1256:9, col:13> 'int' '>'
|   | | |-ImplicitCastExpr 0x28deb992828 <col:9> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb9927e0 <col:9> 'int' lvalue Var 0x28deb992360 'i' 'int'
|   | | `-IntegerLiteral 0x28deb992800 <col:13> 'int' 0
|   | `-ReturnStmt 0x28deb992860 <line:1257:9>
|   |-CallExpr 0x28deb992a30 <line:1258:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x28deb992a18 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb992978 <col:5> 'int ()' Function 0x28deb9928b0 'REF_ASSERT_ISNT' 'int ()'
|   | `-BinaryOperator 0x28deb9929f8 <col:21, col:25> 'int' '<'
|   |   |-ImplicitCastExpr 0x28deb9929e0 <col:21> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28deb992998 <col:21> 'int' lvalue Var 0x28deb992360 'i' 'int'
|   |   `-IntegerLiteral 0x28deb9929b8 <col:25> 'int' 0
|   `-CallExpr 0x28deb992bf8 <line:1261:5, col:19> 'int'
|     |-ImplicitCastExpr 0x28deb992be0 <col:5> 'int (*)()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x28deb992ba0 <col:5> 'int ()' Function 0x28deb991970 'OPENSSL_free' 'int ()'
|     `-ImplicitCastExpr 0x28deb992c20 <col:18> 'NISTP224_PRE_COMP *' <LValueToRValue>
|       `-DeclRefExpr 0x28deb992bc0 <col:18> 'NISTP224_PRE_COMP *' lvalue ParmVar 0x28deb9921f8 'p' 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x28deb99edc8 <line:1269:1, line:1275:1> line:1269:5 invalid ec_GFp_nistp224_group_init 'int (int *)'
| |-ParmVarDecl 0x28deb99ed30 <col:32, col:42> col:42 invalid group 'int *'
| |-CompoundStmt 0x28deb99efc8 <line:1270:1, line:1275:1>
| | |-DeclStmt 0x28deb99ef08 <line:1271:5, col:12>
| | | `-VarDecl 0x28deb99eea0 <col:5, col:9> col:9 used ret 'int'
| | `-ReturnStmt 0x28deb99efb8 <line:1274:5, col:12>
| |   `-ImplicitCastExpr 0x28deb99efa0 <col:12> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x28deb99ef80 <col:12> 'int' lvalue Var 0x28deb99eea0 'ret' 'int'
| `-FullComment 0x28deb9b5258 <line:1264:4, col:78>
|   `-ParagraphComment 0x28deb9b5230 <col:4, col:78>
|     `-TextComment 0x28deb9b5208 <col:4, col:78> Text="***************************************************************************"
|-FunctionDecl 0x28deb99f2b8 <line:1277:1, line:1307:1> line:1277:5 invalid ec_GFp_nistp224_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x28deb99f000 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x28deb99f080 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x28deb99f100 <line:1278:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x28deb99f180 <col:54, col:68> col:68 invalid b 'const int *'
| |-ParmVarDecl 0x28deb99f200 <line:1279:37, col:45> col:45 invalid ctx 'int *'
| `-CompoundStmt 0x28deb9a0360 <line:1280:1, line:1307:1>
|   |-DeclStmt 0x28deb99f440 <line:1281:5, col:16>
|   | `-VarDecl 0x28deb99f3b0 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x28deb99f418 <col:15> 'int' 0
|   |-IfStmt 0x28deb99f7b8 <line:1285:5, line:1287:20>
|   | |-OpaqueValueExpr 0x28deb99f7a0 <<invalid sloc>> '_Bool'
|   | `-IfStmt 0x28deb99f788 <line:1286:9, line:1287:20>
|   |   |-OpaqueValueExpr 0x28deb99f770 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x28deb99f760 <col:13, col:20>
|   |     `-IntegerLiteral 0x28deb99f738 <col:20> 'int' 0
|   |-IfStmt 0x28deb99fc48 <line:1289:5, line:1292:14>
|   | |-OpaqueValueExpr 0x28deb99fc30 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x28deb99fc18 <col:9, col:14> 'err' 0x28deb99fbc8
|   |-IfStmt 0x28deb9a0088 <line:1296:5, line:1300:5>
|   | |-OpaqueValueExpr 0x28deb9a0070 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x28deb9a0058 <line:1296:79, line:1300:5>
|   |   `-GotoStmt 0x28deb9a0040 <line:1299:9, col:14> 'err' 0x28deb99fbc8
|   |-LabelStmt 0x28deb9a01f0 <line:1303:2, col:5> 'err'
|   | `-NullStmt 0x28deb9a01e8 <col:5>
|   `-ReturnStmt 0x28deb9a0350 <line:1306:5, col:12>
|     `-ImplicitCastExpr 0x28deb9a0338 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x28deb9a0318 <col:12> 'int' lvalue Var 0x28deb99f3b0 'ret' 'int'
|-FunctionDecl 0x28deb9a0670 <line:1313:1, line:1355:1> line:1313:5 invalid ec_GFp_nistp224_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x28deb9a03b8 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x28deb9a0438 <line:1314:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x28deb9a04b8 <line:1315:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x28deb9a0538 <col:61, col:69> col:69 invalid y 'int *'
| |-ParmVarDecl 0x28deb9a05b8 <line:1316:50, col:58> col:58 invalid ctx 'int *'
| `-CompoundStmt 0x28deb99dcd0 <line:1317:1, line:1355:1>
|   |-DeclStmt 0x28deb9a0a58 <line:1318:5, col:43>
|   | |-VarDecl 0x28deb9a0760 <col:5, col:11> col:11 used z1 'felem':'limb [4]'
|   | |-VarDecl 0x28deb9a07d8 <col:5, col:15> col:15 used z2 'felem':'limb [4]'
|   | |-VarDecl 0x28deb9a0850 <col:5, col:19> col:19 used x_in 'felem':'limb [4]'
|   | |-VarDecl 0x28deb9a08c8 <col:5, col:25> col:25 used y_in 'felem':'limb [4]'
|   | |-VarDecl 0x28deb9a0940 <col:5, col:31> col:31 used x_out 'felem':'limb [4]'
|   | `-VarDecl 0x28deb9a09b8 <col:5, col:38> col:38 used y_out 'felem':'limb [4]'
|   |-DeclStmt 0x28deb9a0ae8 <line:1319:5, col:18>
|   | `-VarDecl 0x28deb9a0a80 <col:5, col:15> col:15 used tmp 'widefelem':'widelimb [7]'
|   |-IfStmt 0x28deb9a0c98 <line:1321:5, line:1325:5>
|   | |-OpaqueValueExpr 0x28deb9a0c80 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x28deb9a0c68 <line:1321:48, line:1325:5>
|   |   `-ReturnStmt 0x28deb9a0c58 <line:1324:9, col:16>
|   |     `-IntegerLiteral 0x28deb9a0c30 <col:16> 'int' 0
|   |-IfStmt 0x28deb99cda8 <line:1326:5, line:1328:16>
|   | |-OpaqueValueExpr 0x28deb99cd90 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x28deb99cd80 <col:9, col:16>
|   |   `-IntegerLiteral 0x28deb99cd58 <col:16> 'int' 0
|   |-CallExpr 0x28deb99ce50 <line:1329:5, col:21> 'void'
|   | |-ImplicitCastExpr 0x28deb99ce38 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99cdc0 <col:5> 'void (limb *, const limb *)' Function 0x28deb87cc80 'felem_inv' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb99ce80 <col:15> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99cde0 <col:15> 'felem':'limb [4]' lvalue Var 0x28deb9a07d8 'z2' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb99ceb0 <col:19> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb99ce98 <col:19> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb99ce18 <col:19> 'felem':'limb [4]' lvalue Var 0x28deb9a0760 'z1' 'felem':'limb [4]'
|   |-CallExpr 0x28deb99cf58 <line:1330:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x28deb99cf40 <col:5> 'void (*)(widelimb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99cec8 <col:5> 'void (widelimb *, const limb *)' Function 0x28deb78e8a0 'felem_square' 'void (widelimb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb99cf88 <col:18> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99cee8 <col:18> 'widefelem':'widelimb [7]' lvalue Var 0x28deb9a0a80 'tmp' 'widefelem':'widelimb [7]'
|   | `-ImplicitCastExpr 0x28deb99cfb8 <col:23> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb99cfa0 <col:23> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb99cf20 <col:23> 'felem':'limb [4]' lvalue Var 0x28deb9a07d8 'z2' 'felem':'limb [4]'
|   |-CallExpr 0x28deb99d048 <line:1331:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x28deb99d030 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99cfd0 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb99d078 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99cff0 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb9a0760 'z1' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb99d0a8 <col:22> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb99d090 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb99d010 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x28deb9a0a80 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb99d158 <line:1332:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb99d140 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d0c0 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb99d190 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d0e0 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb9a0a80 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb99d1c0 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb99d1a8 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb99d100 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb9a0850 'x_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb99d1f0 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb99d1d8 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb99d120 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb9a0760 'z1' 'felem':'limb [4]'
|   |-CallExpr 0x28deb99d280 <line:1333:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb99d268 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d208 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb99d2b0 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d228 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb9a0850 'x_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb99d2e0 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb99d2c8 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb99d248 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb9a0a80 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb99d388 <line:1334:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb99d370 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d2f8 <col:5> 'void (limb *, const limb *)' Function 0x28deb86c208 'felem_contract' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb99d3b8 <col:20> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d318 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb9a0940 'x_out' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb99d3e8 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb99d3d0 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb99d350 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb9a0850 'x_in' 'felem':'limb [4]'
|   |-IfStmt 0x28deb99d578 <line:1335:5, line:1341:5>
|   | |-OpaqueValueExpr 0x28deb99d560 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x28deb99d548 <line:1335:20, line:1341:5>
|   |   `-IfStmt 0x28deb99d530 <line:1336:9, line:1340:9>
|   |     |-OpaqueValueExpr 0x28deb99d518 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x28deb99d500 <line:1336:37, line:1340:9>
|   |       `-ReturnStmt 0x28deb99d4f0 <line:1339:13, col:20>
|   |         `-IntegerLiteral 0x28deb99d4c8 <col:20> 'int' 0
|   |-CallExpr 0x28deb99d628 <line:1342:5, col:26> 'void'
|   | |-ImplicitCastExpr 0x28deb99d610 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d590 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb99d660 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d5b0 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb9a0a80 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb99d690 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb99d678 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb99d5d0 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb9a0760 'z1' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb99d6c0 <col:24> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb99d6a8 <col:24> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb99d5f0 <col:24> 'felem':'limb [4]' lvalue Var 0x28deb9a07d8 'z2' 'felem':'limb [4]'
|   |-CallExpr 0x28deb99d750 <line:1343:5, col:25> 'void'
|   | |-ImplicitCastExpr 0x28deb99d738 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d6d8 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb99d780 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d6f8 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb9a0760 'z1' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb99d7b0 <col:22> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb99d798 <col:22> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb99d718 <col:22> 'widefelem':'widelimb [7]' lvalue Var 0x28deb9a0a80 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb99d860 <line:1344:5, col:28> 'void'
|   | |-ImplicitCastExpr 0x28deb99d848 <col:5> 'void (*)(widelimb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d7c8 <col:5> 'void (widelimb *, const limb *, const limb *)' Function 0x28deb8798f8 'felem_mul' 'void (widelimb *, const limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb99d898 <col:15> 'widelimb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d7e8 <col:15> 'widefelem':'widelimb [7]' lvalue Var 0x28deb9a0a80 'tmp' 'widefelem':'widelimb [7]'
|   | |-ImplicitCastExpr 0x28deb99d8c8 <col:20> 'const limb *':'const limb *' <NoOp>
|   | | `-ImplicitCastExpr 0x28deb99d8b0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | |   `-DeclRefExpr 0x28deb99d808 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb9a08c8 'y_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb99d8f8 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb99d8e0 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb99d828 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb9a0760 'z1' 'felem':'limb [4]'
|   |-CallExpr 0x28deb99d988 <line:1345:5, col:27> 'void'
|   | |-ImplicitCastExpr 0x28deb99d970 <col:5> 'void (*)(limb *, const widelimb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d910 <col:5> 'void (limb *, const widelimb *)' Function 0x28deb877e08 'felem_reduce' 'void (limb *, const widelimb *)'
|   | |-ImplicitCastExpr 0x28deb99d9b8 <col:18> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99d930 <col:18> 'felem':'limb [4]' lvalue Var 0x28deb9a08c8 'y_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb99d9e8 <col:24> 'const widelimb *':'const widelimb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb99d9d0 <col:24> 'widelimb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb99d950 <col:24> 'widefelem':'widelimb [7]' lvalue Var 0x28deb9a0a80 'tmp' 'widefelem':'widelimb [7]'
|   |-CallExpr 0x28deb99da90 <line:1346:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb99da78 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99da00 <col:5> 'void (limb *, const limb *)' Function 0x28deb86c208 'felem_contract' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb99dac0 <col:20> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb99da20 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb9a09b8 'y_out' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb99daf0 <col:27> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb99dad8 <col:27> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb99da58 <col:27> 'felem':'limb [4]' lvalue Var 0x28deb9a08c8 'y_in' 'felem':'limb [4]'
|   |-IfStmt 0x28deb99dc80 <line:1347:5, line:1353:5>
|   | |-OpaqueValueExpr 0x28deb99dc68 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x28deb99dc50 <line:1347:20, line:1353:5>
|   |   `-IfStmt 0x28deb99dc38 <line:1348:9, line:1352:9>
|   |     |-OpaqueValueExpr 0x28deb99dc20 <<invalid sloc>> '_Bool'
|   |     `-CompoundStmt 0x28deb99dc08 <line:1348:37, line:1352:9>
|   |       `-ReturnStmt 0x28deb99dbf8 <line:1351:13, col:20>
|   |         `-IntegerLiteral 0x28deb99dbd0 <col:20> 'int' 0
|   `-ReturnStmt 0x28deb99dcc0 <line:1354:5, col:12>
|     `-IntegerLiteral 0x28deb99dc98 <col:12> 'int' 1
|-FunctionDecl 0x28deb99e1a8 <line:1357:1, line:1384:1> line:1357:13 used make_points_affine 'void (size_t, felem (*)[3], felem *)' static
| |-ParmVarDecl 0x28deb99dd80 <col:32, col:39> col:39 used num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb99df20 <col:44, col:71> col:50 used points 'felem (*)[3]':'felem (*)[3]'
| |-ParmVarDecl 0x28deb99e040 <line:1358:32, col:62> col:38 used tmp_felems 'felem *':'felem *'
| `-CompoundStmt 0x28deb998f18 <line:1359:1, line:1384:1>
|   `-CallExpr 0x28deb998e10 <line:1364:5, line:1383:60> 'void'
|     |-ImplicitCastExpr 0x28deb998df8 <line:1364:5> 'void (*)(size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x28deb99e278 <col:5> 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))' Function 0x28deb828e28 'ec_GFp_nistp_points_make_affine_internal' 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
|     |-ImplicitCastExpr 0x28deb998e88 <col:46> 'size_t':'unsigned long long' <LValueToRValue>
|     | `-DeclRefExpr 0x28deb99e298 <col:46> 'size_t':'unsigned long long' lvalue ParmVar 0x28deb99dd80 'num' 'size_t':'unsigned long long'
|     |-ImplicitCastExpr 0x28deb998eb8 <line:1365:46> 'void *' <BitCast>
|     | `-ImplicitCastExpr 0x28deb998ea0 <col:46> 'felem (*)[3]':'felem (*)[3]' <LValueToRValue>
|     |   `-DeclRefExpr 0x28deb99e2b8 <col:46> 'felem (*)[3]':'felem (*)[3]' lvalue ParmVar 0x28deb99df20 'points' 'felem (*)[3]':'felem (*)[3]'
|     |-UnaryExprOrTypeTraitExpr 0x28deb99e2e8 <line:1366:46, col:58> 'unsigned long long' sizeof 'felem':'limb [4]'
|     |-ImplicitCastExpr 0x28deb998ee8 <line:1367:46> 'void *' <BitCast>
|     | `-ImplicitCastExpr 0x28deb998ed0 <col:46> 'felem *':'felem *' <LValueToRValue>
|     |   `-DeclRefExpr 0x28deb99e308 <col:46> 'felem *':'felem *' lvalue ParmVar 0x28deb99e040 'tmp_felems' 'felem *':'felem *'
|     |-CStyleCastExpr 0x28deb99e470 <line:1368:46, col:64> 'void (*)(void *)' <BitCast>
|     | `-ImplicitCastExpr 0x28deb99e458 <col:64> 'void (*)(limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|     |   `-DeclRefExpr 0x28deb99e3a8 <col:64> 'void (limb *)' Function 0x28deb786b08 'felem_one' 'void (limb *)'
|     |-ImplicitCastExpr 0x28deb998f00 <line:1369:46> 'int (*)(const void *)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x28deb99e498 <col:46> 'int (const void *)' Function 0x28deb87c820 'felem_is_zero_int' 'int (const void *)'
|     |-CStyleCastExpr 0x28deb99e630 <line:1370:46, line:1371:46> 'void (*)(void *, const void *)' <BitCast>
|     | `-ImplicitCastExpr 0x28deb99e618 <col:46> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|     |   `-DeclRefExpr 0x28deb99e5b8 <col:46> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|     |-CStyleCastExpr 0x28deb99e7d0 <line:1372:46, line:1373:46> 'void (*)(void *, const void *)' <BitCast>
|     | `-ImplicitCastExpr 0x28deb99e7b8 <col:46> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|     |   `-DeclRefExpr 0x28deb99e758 <col:46> 'void (limb *, const limb *)' Function 0x28deb871650 'felem_square_reduce' 'void (limb *, const limb *)'
|     |-CStyleCastExpr 0x28deb99ea50 <col:67, line:1379:46> 'void (*)(void *, const void *, const void *)' <BitCast>
|     | `-ImplicitCastExpr 0x28deb99ea38 <col:46> 'void (*)(limb *, const limb *, const limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|     |   `-DeclRefExpr 0x28deb99e978 <col:46> 'void (limb *, const limb *, const limb *)' Function 0x28deb871cc8 'felem_mul_reduce' 'void (limb *, const limb *, const limb *)'
|     |-CStyleCastExpr 0x28deb99ebf0 <line:1380:46, line:1381:46> 'void (*)(void *, const void *)' <BitCast>
|     | `-ImplicitCastExpr 0x28deb99ebd8 <col:46> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|     |   `-DeclRefExpr 0x28deb99eb78 <col:46> 'void (limb *, const limb *)' Function 0x28deb87cc80 'felem_inv' 'void (limb *, const limb *)'
|     `-CStyleCastExpr 0x28deb998d78 <line:1382:46, line:1383:46> 'void (*)(void *, const void *)' <BitCast>
|       `-ImplicitCastExpr 0x28deb998d60 <col:46> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay> part_of_explicit_cast
|         `-DeclRefExpr 0x28deb998d00 <col:46> 'void (limb *, const limb *)' Function 0x28deb86c208 'felem_contract' 'void (limb *, const limb *)'
|-FunctionDecl 0x28deb999328 <line:1390:1, line:1585:1> line:1390:5 invalid ec_GFp_nistp224_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x28deb998f48 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x28deb998fc8 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x28deb999048 <line:1391:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x28deb9990c0 <col:54, col:61> col:61 used num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x28deb999150 <line:1392:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x28deb9991e0 <line:1393:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| |-ParmVarDecl 0x28deb999260 <col:57, col:65> col:65 invalid ctx 'int *'
| `-CompoundStmt 0x28deb995598 <line:1394:1, line:1585:1>
|   |-DeclStmt 0x28deb9994c0 <line:1395:5, col:16>
|   | `-VarDecl 0x28deb999430 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x28deb999498 <col:15> 'int' 0
|   |-DeclStmt 0x28deb999558 <line:1396:5, col:10>
|   | `-VarDecl 0x28deb9994f0 <col:5, col:9> col:9 used j 'int'
|   |-DeclStmt 0x28deb9995f0 <line:1397:5, col:15>
|   | `-VarDecl 0x28deb999588 <col:5, col:14> col:14 used i 'unsigned int'
|   |-DeclStmt 0x28deb9996b0 <line:1398:5, col:18>
|   | `-VarDecl 0x28deb999620 <col:5, col:17> col:9 used mixed 'int' cinit
|   |   `-IntegerLiteral 0x28deb999688 <col:17> 'int' 0
|   |-DeclStmt 0x28deb9997c8 <line:1401:5, col:29>
|   | `-VarDecl 0x28deb999760 <col:5, col:21> col:21 used g_secret 'felem_bytearray':'u8 [28]'
|   |-DeclStmt 0x28deb999950 <line:1402:5, col:36>
|   | `-VarDecl 0x28deb999848 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1402:22 used secrets 'felem_bytearray *' cinit
|   |   `-ImplicitCastExpr 0x28deb999938 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem_bytearray *' <NullToPointer>
|   |     `-ParenExpr 0x28deb999918 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28deb9998f0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28deb9998b0 <col:26> 'int' 0
|   |-DeclStmt 0x28deb999c00 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1403:5, col:36>
|   | `-VarDecl 0x28deb999af8 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1403:13 used pre_comp 'felem (*)[17][3]' cinit
|   |   `-ImplicitCastExpr 0x28deb999be8 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem (*)[17][3]' <NullToPointer>
|   |     `-ParenExpr 0x28deb999bc8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28deb999ba0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28deb999b60 <col:26> 'int' 0
|   |-DeclStmt 0x28deb999d30 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1404:5, col:29>
|   | `-VarDecl 0x28deb999c28 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1404:12 used tmp_felems 'felem *' cinit
|   |   `-ImplicitCastExpr 0x28deb999d18 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem *' <NullToPointer>
|   |     `-ParenExpr 0x28deb999cf8 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28deb999cd0 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28deb999c90 <col:26> 'int' 0
|   |-DeclStmt 0x28deb999dc0 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1405:5, col:24>
|   | `-VarDecl 0x28deb999d58 <col:5, col:21> col:21 used tmp 'felem_bytearray':'u8 [28]'
|   |-DeclStmt 0x28deb999e58 <line:1406:5, col:23>
|   | `-VarDecl 0x28deb999df0 <col:5, col:14> col:14 used num_bytes 'unsigned int'
|   |-DeclStmt 0x28deb999f18 <line:1407:5, col:26>
|   | `-VarDecl 0x28deb999e88 <col:5, col:25> col:9 used have_pre_comp 'int' cinit
|   |   `-IntegerLiteral 0x28deb999ef0 <col:25> 'int' 0
|   |-DeclStmt 0x28deb999ff8 <line:1408:5, col:28>
|   | `-VarDecl 0x28deb999f40 <col:5, col:25> col:12 used num_points 'size_t':'unsigned long long' cinit
|   |   `-ImplicitCastExpr 0x28deb999fe0 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |     `-DeclRefExpr 0x28deb999fa8 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x28deb9990c0 'num' 'size_t':'unsigned long long'
|   |-DeclStmt 0x28deb99a318 <line:1409:5, col:48>
|   | |-VarDecl 0x28deb99a020 <col:5, col:11> col:11 used x_in 'felem':'limb [4]'
|   | |-VarDecl 0x28deb99a098 <col:5, col:17> col:17 used y_in 'felem':'limb [4]'
|   | |-VarDecl 0x28deb99a110 <col:5, col:23> col:23 used z_in 'felem':'limb [4]'
|   | |-VarDecl 0x28deb99a188 <col:5, col:29> col:29 used x_out 'felem':'limb [4]'
|   | |-VarDecl 0x28deb99a200 <col:5, col:36> col:36 used y_out 'felem':'limb [4]'
|   | `-VarDecl 0x28deb99a278 <col:5, col:43> col:43 used z_out 'felem':'limb [4]'
|   |-DeclStmt 0x28deb99a448 <line:1410:5, col:34>
|   | `-VarDecl 0x28deb99a340 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1410:24 used pre 'NISTP224_PRE_COMP *' cinit
|   |   `-ImplicitCastExpr 0x28deb99a430 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'NISTP224_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x28deb99a410 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28deb99a3e8 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28deb99a3a8 <col:26> 'int' 0
|   |-DeclStmt 0x28deb99a680 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1411:5, col:43>
|   | `-VarDecl 0x28deb99a578 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1411:18 used g_pre_comp 'const felem (*)[16][3]' cinit
|   |   `-ImplicitCastExpr 0x28deb99a668 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const felem (*)[16][3]' <NullToPointer>
|   |     `-ParenExpr 0x28deb99a648 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28deb99a620 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28deb99a5e0 <col:26> 'int' 0
|   |-DeclStmt 0x28deb99a828 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1413:5, col:29>
|   | `-VarDecl 0x28deb99a738 <col:5, col:21> col:21 invalid p 'const int *'
|   |-DeclStmt 0x28deb99a948 <line:1414:5, col:34>
|   | `-VarDecl 0x28deb99a858 <col:5, col:19> col:19 invalid p_scalar 'const int *'
|   |-IfStmt 0x28deb99ab48 <line:1416:5, line:1418:20>
|   | |-OpaqueValueExpr 0x28deb99ab30 <<invalid sloc>> '_Bool'
|   | `-IfStmt 0x28deb99ab18 <line:1417:9, line:1418:20>
|   |   |-OpaqueValueExpr 0x28deb99ab00 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x28deb99aaf0 <col:13, col:20>
|   |     `-IntegerLiteral 0x28deb99aac8 <col:20> 'int' 0
|   |-IfStmt 0x28deb9a0ef0 <line:1420:5, line:1424:14>
|   | |-OpaqueValueExpr 0x28deb9a0ed8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x28deb9a0ec0 <col:9, col:14> 'err' 0x28deb9a0e70
|   |-IfStmt 0x28deb9a1e80 <line:1426:5, line:1457:5>
|   | |-OpaqueValueExpr 0x28deb9a1e68 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x28deb9a1e30 <line:1426:25, line:1457:5>
|   |   |-IfStmt 0x28deb9a13a8 <line:1428:9, line:1433:33> has_else
|   |   | |-ImplicitCastExpr 0x28deb9a0fe8 <line:1428:13> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x28deb9a0fc8 <col:13> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb99a340 'pre' 'NISTP224_PRE_COMP *'
|   |   | |-BinaryOperator 0x28deb9a12b0 <line:1430:13, col:54> 'const felem (*)[16][3]' '='
|   |   | | |-DeclRefExpr 0x28deb9a1000 <col:13> 'const felem (*)[16][3]' lvalue Var 0x28deb99a578 'g_pre_comp' 'const felem (*)[16][3]'
|   |   | | `-CStyleCastExpr 0x28deb9a1288 <col:26, col:54> 'const felem (*)[16][3]' <NoOp>
|   |   | |   `-ImplicitCastExpr 0x28deb9a11b8 <col:49, col:54> 'felem (*)[16][3]' <ArrayToPointerDecay> part_of_explicit_cast
|   |   | |     `-MemberExpr 0x28deb9a10c0 <col:49, col:54> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |       `-ImplicitCastExpr 0x28deb9a10a8 <col:49> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x28deb9a1088 <col:49> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb99a340 'pre' 'NISTP224_PRE_COMP *'
|   |   | `-BinaryOperator 0x28deb9a1388 <line:1433:13, col:33> 'const felem (*)[16][3]' '='
|   |   |   |-DeclRefExpr 0x28deb9a12d0 <col:13> 'const felem (*)[16][3]' lvalue Var 0x28deb99a578 'g_pre_comp' 'const felem (*)[16][3]'
|   |   |   `-UnaryOperator 0x28deb9a1370 <col:26, col:33> 'const felem (*)[16][3]' prefix '&' cannot overflow
|   |   |     `-ArraySubscriptExpr 0x28deb9a1350 <col:27, col:33> 'const felem [16][3]' lvalue
|   |   |       |-ImplicitCastExpr 0x28deb9a1338 <col:27> 'const felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       | `-DeclRefExpr 0x28deb9a12f0 <col:27> 'const felem [2][16][3]' lvalue Var 0x28deb7748e8 'gmul' 'const felem [2][16][3]'
|   |   |       `-IntegerLiteral 0x28deb9a1310 <col:32> 'int' 0
|   |   |-IfStmt 0x28deb9a1598 <line:1435:9, line:1436:18>
|   |   | |-OpaqueValueExpr 0x28deb9a1580 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x28deb9a1568 <col:13, col:18> 'err' 0x28deb9a0e70
|   |   |-IfStmt 0x28deb9a19d8 <line:1438:9, line:1443:9>
|   |   | |-OpaqueValueExpr 0x28deb9a19c0 <<invalid sloc>> '_Bool'
|   |   | `-CompoundStmt 0x28deb9a19a8 <line:1440:51, line:1443:9>
|   |   |   `-GotoStmt 0x28deb9a1990 <line:1442:13, col:18> 'err' 0x28deb9a0e70
|   |   |-IfStmt 0x28deb9a1b30 <line:1444:9, line:1447:18>
|   |   | |-OpaqueValueExpr 0x28deb9a1b18 <<invalid sloc>> '_Bool'
|   |   | `-GotoStmt 0x28deb9a1b00 <col:13, col:18> 'err' 0x28deb9a0e70
|   |   `-IfStmt 0x28deb9a1e08 <line:1448:9, line:1456:39> has_else
|   |     |-OpaqueValueExpr 0x28deb9a1df0 <<invalid sloc>> '_Bool'
|   |     |-BinaryOperator 0x28deb9a1ce0 <line:1450:13, col:29> 'int' '='
|   |     | |-DeclRefExpr 0x28deb9a1c80 <col:13> 'int' lvalue Var 0x28deb999e88 'have_pre_comp' 'int'
|   |     | `-IntegerLiteral 0x28deb9a1cb8 <col:29> 'int' 1
|   |     `-BinaryOperator 0x28deb9a1dd0 <line:1456:13, col:39> 'size_t':'unsigned long long' '='
|   |       |-DeclRefExpr 0x28deb9a1d00 <col:13> 'size_t':'unsigned long long' lvalue Var 0x28deb999f40 'num_points' 'size_t':'unsigned long long'
|   |       `-BinaryOperator 0x28deb9a1db0 <col:26, col:39> 'unsigned long long' '+'
|   |         |-ImplicitCastExpr 0x28deb9a1d80 <col:26> 'size_t':'unsigned long long' <LValueToRValue>
|   |         | `-DeclRefExpr 0x28deb9a1d38 <col:26> 'size_t':'unsigned long long' lvalue Var 0x28deb999f40 'num_points' 'size_t':'unsigned long long'
|   |         `-ImplicitCastExpr 0x28deb9a1d98 <col:39> 'unsigned long long' <IntegralCast>
|   |           `-IntegerLiteral 0x28deb9a1d58 <col:39> 'int' 1
|   |-IfStmt 0x28deb9a3de8 <line:1459:5, line:1537:5>
|   | |-BinaryOperator 0x28deb9a1f10 <line:1459:9, col:22> 'int' '>'
|   | | |-ImplicitCastExpr 0x28deb9a1ee0 <col:9> 'size_t':'unsigned long long' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb9a1e98 <col:9> 'size_t':'unsigned long long' lvalue Var 0x28deb999f40 'num_points' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x28deb9a1ef8 <col:22> 'unsigned long long' <IntegralCast>
|   | |   `-IntegerLiteral 0x28deb9a1eb8 <col:22> 'int' 0
|   | `-CompoundStmt 0x28deb9a3da0 <col:25, line:1537:5>
|   |   |-IfStmt 0x28deb9a2060 <line:1460:9, line:1466:9>
|   |   | |-BinaryOperator 0x28deb9a1fa8 <line:1460:13, col:27> 'int' '>='
|   |   | | |-ImplicitCastExpr 0x28deb9a1f78 <col:13> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x28deb9a1f30 <col:13> 'size_t':'unsigned long long' lvalue Var 0x28deb999f40 'num_points' 'size_t':'unsigned long long'
|   |   | | `-ImplicitCastExpr 0x28deb9a1f90 <col:27> 'unsigned long long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x28deb9a1f50 <col:27> 'int' 3
|   |   | `-CompoundStmt 0x28deb9a2048 <col:30, line:1466:9>
|   |   |   `-BinaryOperator 0x28deb9a2028 <line:1465:13, col:21> 'int' '='
|   |   |     |-DeclRefExpr 0x28deb9a1fc8 <col:13> 'int' lvalue Var 0x28deb999620 'mixed' 'int'
|   |   |     `-IntegerLiteral 0x28deb9a2000 <col:21> 'int' 1
|   |   |-BinaryOperator 0x28deb9a2210 <line:1467:9, col:63> 'felem_bytearray *' '='
|   |   | |-DeclRefExpr 0x28deb9a2078 <col:9> 'felem_bytearray *' lvalue Var 0x28deb999848 'secrets' 'felem_bytearray *'
|   |   | `-ImplicitCastExpr 0x28deb9a21f8 <col:19, col:63> 'felem_bytearray *' <IntegralToPointer>
|   |   |   `-CallExpr 0x28deb9a21d0 <col:19, col:63> 'int'
|   |   |     |-ImplicitCastExpr 0x28deb9a21b8 <col:19> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x28deb9a20b0 <col:19> 'int ()' Function 0x28deb991320 'OPENSSL_zalloc' 'int ()'
|   |   |     `-BinaryOperator 0x28deb9a2198 <col:34, col:53> 'unsigned long long' '*'
|   |   |       |-UnaryExprOrTypeTraitExpr 0x28deb9a2140 <col:34, col:49> 'unsigned long long' sizeof
|   |   |       | `-ParenExpr 0x28deb9a2120 <col:40, col:49> 'felem_bytearray':'u8 [28]' lvalue
|   |   |       |   `-UnaryOperator 0x28deb9a2108 <col:41, col:42> 'felem_bytearray':'u8 [28]' lvalue prefix '*' cannot overflow
|   |   |       |     `-ImplicitCastExpr 0x28deb9a20f0 <col:42> 'felem_bytearray *' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x28deb9a20d0 <col:42> 'felem_bytearray *' lvalue Var 0x28deb999848 'secrets' 'felem_bytearray *' non_odr_use_unevaluated
|   |   |       `-ImplicitCastExpr 0x28deb9a2180 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x28deb9a2160 <col:53> 'size_t':'unsigned long long' lvalue Var 0x28deb999f40 'num_points' 'size_t':'unsigned long long'
|   |   |-BinaryOperator 0x28deb9a23c8 <line:1468:9, col:65> 'felem (*)[17][3]' '='
|   |   | |-DeclRefExpr 0x28deb9a2230 <col:9> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   | `-ImplicitCastExpr 0x28deb9a23b0 <col:20, col:65> 'felem (*)[17][3]' <IntegralToPointer>
|   |   |   `-CallExpr 0x28deb9a2388 <col:20, col:65> 'int'
|   |   |     |-ImplicitCastExpr 0x28deb9a2370 <col:20> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x28deb9a2268 <col:20> 'int ()' Function 0x28deb991320 'OPENSSL_zalloc' 'int ()'
|   |   |     `-BinaryOperator 0x28deb9a2350 <col:35, col:55> 'unsigned long long' '*'
|   |   |       |-UnaryExprOrTypeTraitExpr 0x28deb9a22f8 <col:35, col:51> 'unsigned long long' sizeof
|   |   |       | `-ParenExpr 0x28deb9a22d8 <col:41, col:51> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |       |   `-UnaryOperator 0x28deb9a22c0 <col:42, col:43> 'felem [17][3]':'felem [17][3]' lvalue prefix '*' cannot overflow
|   |   |       |     `-ImplicitCastExpr 0x28deb9a22a8 <col:43> 'felem (*)[17][3]' <LValueToRValue>
|   |   |       |       `-DeclRefExpr 0x28deb9a2288 <col:43> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]' non_odr_use_unevaluated
|   |   |       `-ImplicitCastExpr 0x28deb9a2338 <col:55> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x28deb9a2318 <col:55> 'size_t':'unsigned long long' lvalue Var 0x28deb999f40 'num_points' 'size_t':'unsigned long long'
|   |   |-IfStmt 0x28deb9a2748 <line:1469:9, line:1471:69>
|   |   | |-ImplicitCastExpr 0x28deb9a2408 <line:1469:13> 'int' <LValueToRValue>
|   |   | | `-DeclRefExpr 0x28deb9a23e8 <col:13> 'int' lvalue Var 0x28deb999620 'mixed' 'int'
|   |   | `-BinaryOperator 0x28deb9a2728 <line:1470:13, line:1471:69> 'felem *' '='
|   |   |   |-DeclRefExpr 0x28deb9a2420 <line:1470:13> 'felem *' lvalue Var 0x28deb999c28 'tmp_felems' 'felem *'
|   |   |   `-ImplicitCastExpr 0x28deb9a2710 <line:1471:17, col:69> 'felem *' <IntegralToPointer>
|   |   |     `-CallExpr 0x28deb9a26e8 <col:17, col:69> 'int'
|   |   |       |-ImplicitCastExpr 0x28deb9a26d0 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   |       | `-DeclRefExpr 0x28deb9a2548 <col:17> 'int ()' Function 0x28deb9a2480 'OPENSSL_malloc' 'int ()'
|   |   |       `-BinaryOperator 0x28deb9a26b0 <col:32, col:68> 'unsigned long long' '*'
|   |   |         |-UnaryExprOrTypeTraitExpr 0x28deb9a2578 <col:32, col:44> 'unsigned long long' sizeof 'felem':'limb [4]'
|   |   |         `-ParenExpr 0x28deb9a2690 <col:48, col:68> 'unsigned long long'
|   |   |           `-BinaryOperator 0x28deb9a2670 <col:49, col:67> 'unsigned long long' '+'
|   |   |             |-BinaryOperator 0x28deb9a2610 <col:49, col:62> 'unsigned long long' '*'
|   |   |             | |-ImplicitCastExpr 0x28deb9a25e0 <col:49> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |             | | `-DeclRefExpr 0x28deb9a2598 <col:49> 'size_t':'unsigned long long' lvalue Var 0x28deb999f40 'num_points' 'size_t':'unsigned long long'
|   |   |             | `-ImplicitCastExpr 0x28deb9a25f8 <col:62> 'unsigned long long' <IntegralCast>
|   |   |             |   `-IntegerLiteral 0x28deb9a25b8 <col:62> 'int' 17
|   |   |             `-ImplicitCastExpr 0x28deb9a2658 <col:67> 'unsigned long long' <IntegralCast>
|   |   |               `-IntegerLiteral 0x28deb9a2630 <col:67> 'int' 1
|   |   |-IfStmt 0x28deb9a2bb0 <line:1472:9, line:1476:9>
|   |   | |-BinaryOperator 0x28deb9a2b40 <line:1472:13, line:1473:46> 'int' '||'
|   |   | | |-BinaryOperator 0x28deb9a2990 <line:1472:13, col:51> 'int' '||'
|   |   | | | |-ParenExpr 0x28deb9a2858 <col:13, col:29> 'int'
|   |   | | | | `-BinaryOperator 0x28deb9a2838 <col:14, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | | | |   |-ImplicitCastExpr 0x28deb9a2808 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1472:14> 'felem_bytearray *' <LValueToRValue>
|   |   | | | |   | `-DeclRefExpr 0x28deb9a2760 <col:14> 'felem_bytearray *' lvalue Var 0x28deb999848 'secrets' 'felem_bytearray *'
|   |   | | | |   `-ImplicitCastExpr 0x28deb9a2820 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem_bytearray *' <BitCast>
|   |   | | | |     `-ParenExpr 0x28deb9a27e8 <col:17, col:27> 'void *'
|   |   | | | |       `-CStyleCastExpr 0x28deb9a27c0 <col:18, col:26> 'void *' <NullToPointer>
|   |   | | | |         `-IntegerLiteral 0x28deb9a2780 <col:26> 'int' 0
|   |   | | | `-ParenExpr 0x28deb9a2970 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1472:34, col:51> 'int'
|   |   | | |   `-BinaryOperator 0x28deb9a2950 <col:35, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | | |     |-ImplicitCastExpr 0x28deb9a2920 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1472:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   | | |     | `-DeclRefExpr 0x28deb9a2878 <col:35> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   | | |     `-ImplicitCastExpr 0x28deb9a2938 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem (*)[17][3]' <BitCast>
|   |   | | |       `-ParenExpr 0x28deb9a2900 <col:17, col:27> 'void *'
|   |   | | |         `-CStyleCastExpr 0x28deb9a28d8 <col:18, col:26> 'void *' <NullToPointer>
|   |   | | |           `-IntegerLiteral 0x28deb9a2898 <col:26> 'int' 0
|   |   | | `-ParenExpr 0x28deb9a2b20 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1473:16, col:46> 'int'
|   |   | |   `-BinaryOperator 0x28deb9a2b00 <col:17, col:45> 'int' '&&'
|   |   | |     |-ImplicitCastExpr 0x28deb9a2ae8 <col:17> 'int' <LValueToRValue>
|   |   | |     | `-DeclRefExpr 0x28deb9a29b0 <col:17> 'int' lvalue Var 0x28deb999620 'mixed' 'int'
|   |   | |     `-ParenExpr 0x28deb9a2ac8 <col:26, col:45> 'int'
|   |   | |       `-BinaryOperator 0x28deb9a2aa8 <col:27, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   |   | |         |-ImplicitCastExpr 0x28deb9a2a78 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1473:27> 'felem *' <LValueToRValue>
|   |   | |         | `-DeclRefExpr 0x28deb9a29d0 <col:27> 'felem *' lvalue Var 0x28deb999c28 'tmp_felems' 'felem *'
|   |   | |         `-ImplicitCastExpr 0x28deb9a2a90 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'felem *' <BitCast>
|   |   | |           `-ParenExpr 0x28deb9a2a58 <col:17, col:27> 'void *'
|   |   | |             `-CStyleCastExpr 0x28deb9a2a30 <col:18, col:26> 'void *' <NullToPointer>
|   |   | |               `-IntegerLiteral 0x28deb9a29f0 <col:26> 'int' 0
|   |   | `-CompoundStmt 0x28deb9a2b98 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1473:49, line:1476:9>
|   |   |   `-GotoStmt 0x28deb9a2b80 <line:1475:13, col:18> 'err' 0x28deb9a0e70
|   |   |-ForStmt 0x28deb9a3ae0 <line:1482:9, line:1534:9>
|   |   | |-BinaryOperator 0x28deb9a2c40 <line:1482:14, col:18> 'unsigned int' '='
|   |   | | |-DeclRefExpr 0x28deb9a2bc8 <col:14> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x28deb9a2c28 <col:18> 'unsigned int' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x28deb9a2c00 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x28deb9a2ce8 <col:21, col:25> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x28deb9a2cd0 <col:21> 'unsigned long long' <IntegralCast>
|   |   | | | `-ImplicitCastExpr 0x28deb9a2ca0 <col:21> 'unsigned int' <LValueToRValue>
|   |   | | |   `-DeclRefExpr 0x28deb9a2c60 <col:21> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   | | `-ImplicitCastExpr 0x28deb9a2cb8 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x28deb9a2c80 <col:25> 'size_t':'unsigned long long' lvalue Var 0x28deb999f40 'num_points' 'size_t':'unsigned long long'
|   |   | |-UnaryOperator 0x28deb9a2d28 <col:37, col:39> 'unsigned int' prefix '++'
|   |   | | `-DeclRefExpr 0x28deb9a2d08 <col:39> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   | `-CompoundStmt 0x28deb9a3ac0 <col:42, line:1534:9>
|   |   |   |-IfStmt 0x28deb992ee8 <line:1483:13, line:1493:13> has_else
|   |   |   | |-BinaryOperator 0x28deb992d58 <line:1483:17, col:22> 'int' '=='
|   |   |   | | |-ImplicitCastExpr 0x28deb992d40 <col:17> 'unsigned long long' <IntegralCast>
|   |   |   | | | `-ImplicitCastExpr 0x28deb992d10 <col:17> 'unsigned int' <LValueToRValue>
|   |   |   | | |   `-DeclRefExpr 0x28deb992cd0 <col:17> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |   | | `-ImplicitCastExpr 0x28deb992d28 <col:22> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x28deb992cf0 <col:22> 'size_t':'unsigned long long' lvalue ParmVar 0x28deb9990c0 'num' 'size_t':'unsigned long long'
|   |   |   | |-CompoundStmt 0x28deb992e88 <line:1485:13, line:1488:13>
|   |   |   | `-CompoundStmt 0x28deb992ed8 <line:1490:13, line:1493:13>
|   |   |   `-IfStmt 0x28deb9a3aa8 <line:1494:13, line:1533:13>
|   |   |     |-OpaqueValueExpr 0x28deb9a3a90 <<invalid sloc>> '_Bool'
|   |   |     `-CompoundStmt 0x28deb9a3a48 <line:1494:52, line:1533:13>
|   |   |       |-IfStmt 0x28deb993430 <line:1496:17, line:1508:21> has_else
|   |   |       | |-OpaqueValueExpr 0x28deb993418 <<invalid sloc>> '_Bool'
|   |   |       | |-CompoundStmt 0x28deb993398 <line:1497:52, line:1507:17>
|   |   |       | | `-IfStmt 0x28deb9932f0 <line:1502:21, line:1505:21>
|   |   |       | |   |-OpaqueValueExpr 0x28deb9932d8 <<invalid sloc>> '_Bool'
|   |   |       | |   `-CompoundStmt 0x28deb9932c0 <line:1502:77, line:1505:21>
|   |   |       | |     `-GotoStmt 0x28deb9932a8 <line:1504:25, col:30> 'err' 0x28deb9a0e70
|   |   |       | `-NullStmt 0x28deb993410 <line:1508:21>
|   |   |       |-CallExpr 0x28deb993560 <line:1509:17, col:55> 'void'
|   |   |       | |-ImplicitCastExpr 0x28deb993548 <col:17> 'void (*)(u8 *, const u8 *, unsigned int)' <FunctionToPointerDecay>
|   |   |       | | `-DeclRefExpr 0x28deb993458 <col:17> 'void (u8 *, const u8 *, unsigned int)' Function 0x28deb784c08 'flip_endian' 'void (u8 *, const u8 *, unsigned int)'
|   |   |       | |-ImplicitCastExpr 0x28deb993598 <col:29, col:38> 'u8 *' <ArrayToPointerDecay>
|   |   |       | | `-ArraySubscriptExpr 0x28deb9934e8 <col:29, col:38> 'felem_bytearray':'u8 [28]' lvalue
|   |   |       | |   |-ImplicitCastExpr 0x28deb9934b8 <col:29> 'felem_bytearray *' <LValueToRValue>
|   |   |       | |   | `-DeclRefExpr 0x28deb993478 <col:29> 'felem_bytearray *' lvalue Var 0x28deb999848 'secrets' 'felem_bytearray *'
|   |   |       | |   `-ImplicitCastExpr 0x28deb9934d0 <col:37> 'unsigned int' <LValueToRValue>
|   |   |       | |     `-DeclRefExpr 0x28deb993498 <col:37> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |       | |-ImplicitCastExpr 0x28deb9935c8 <col:41> 'const u8 *' <NoOp>
|   |   |       | | `-ImplicitCastExpr 0x28deb9935b0 <col:41> 'u8 *' <ArrayToPointerDecay>
|   |   |       | |   `-DeclRefExpr 0x28deb993508 <col:41> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb999d58 'tmp' 'felem_bytearray':'u8 [28]'
|   |   |       | `-ImplicitCastExpr 0x28deb9935e0 <col:46> 'unsigned int' <LValueToRValue>
|   |   |       |   `-DeclRefExpr 0x28deb993528 <col:46> 'unsigned int' lvalue Var 0x28deb999df0 'num_bytes' 'unsigned int'
|   |   |       |-IfStmt 0x28deb9936d0 <line:1511:17, line:1514:26>
|   |   |       | |-OpaqueValueExpr 0x28deb9936b8 <<invalid sloc>> '_Bool'
|   |   |       | `-GotoStmt 0x28deb9936a0 <col:21, col:26> 'err' 0x28deb9a0e70
|   |   |       |-CallExpr 0x28deb993890 <line:1515:17, col:54> 'void'
|   |   |       | |-ImplicitCastExpr 0x28deb993878 <col:17> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |   |       | | `-DeclRefExpr 0x28deb9936e8 <col:17> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   |   |       | |-ImplicitCastExpr 0x28deb9938c0 <col:30, col:46> 'limb *' <ArrayToPointerDecay>
|   |   |       | | `-ArraySubscriptExpr 0x28deb993838 <col:30, col:46> 'felem':'limb [4]' lvalue
|   |   |       | |   |-ImplicitCastExpr 0x28deb993820 <col:30, col:43> 'felem *' <ArrayToPointerDecay>
|   |   |       | |   | `-ArraySubscriptExpr 0x28deb9937d8 <col:30, col:43> 'felem [3]' lvalue
|   |   |       | |   |   |-ImplicitCastExpr 0x28deb9937c0 <col:30, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       | |   |   | `-ArraySubscriptExpr 0x28deb993778 <col:30, col:40> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |       | |   |   |   |-ImplicitCastExpr 0x28deb993748 <col:30> 'felem (*)[17][3]' <LValueToRValue>
|   |   |       | |   |   |   | `-DeclRefExpr 0x28deb993708 <col:30> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |       | |   |   |   `-ImplicitCastExpr 0x28deb993760 <col:39> 'unsigned int' <LValueToRValue>
|   |   |       | |   |   |     `-DeclRefExpr 0x28deb993728 <col:39> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |       | |   |   `-IntegerLiteral 0x28deb993798 <col:42> 'int' 1
|   |   |       | |   `-IntegerLiteral 0x28deb9937f8 <col:45> 'int' 0
|   |   |       | `-ImplicitCastExpr 0x28deb9938f0 <col:49> 'const limb *':'const limb *' <NoOp>
|   |   |       |   `-ImplicitCastExpr 0x28deb9938d8 <col:49> 'limb *' <ArrayToPointerDecay>
|   |   |       |     `-DeclRefExpr 0x28deb993858 <col:49> 'felem':'limb [4]' lvalue Var 0x28deb99a188 'x_out' 'felem':'limb [4]'
|   |   |       |-CallExpr 0x28deb993ab0 <line:1516:17, col:54> 'void'
|   |   |       | |-ImplicitCastExpr 0x28deb993a98 <col:17> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |   |       | | `-DeclRefExpr 0x28deb993908 <col:17> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   |   |       | |-ImplicitCastExpr 0x28deb993ae0 <col:30, col:46> 'limb *' <ArrayToPointerDecay>
|   |   |       | | `-ArraySubscriptExpr 0x28deb993a58 <col:30, col:46> 'felem':'limb [4]' lvalue
|   |   |       | |   |-ImplicitCastExpr 0x28deb993a40 <col:30, col:43> 'felem *' <ArrayToPointerDecay>
|   |   |       | |   | `-ArraySubscriptExpr 0x28deb9939f8 <col:30, col:43> 'felem [3]' lvalue
|   |   |       | |   |   |-ImplicitCastExpr 0x28deb9939e0 <col:30, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       | |   |   | `-ArraySubscriptExpr 0x28deb993998 <col:30, col:40> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |       | |   |   |   |-ImplicitCastExpr 0x28deb993968 <col:30> 'felem (*)[17][3]' <LValueToRValue>
|   |   |       | |   |   |   | `-DeclRefExpr 0x28deb993928 <col:30> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |       | |   |   |   `-ImplicitCastExpr 0x28deb993980 <col:39> 'unsigned int' <LValueToRValue>
|   |   |       | |   |   |     `-DeclRefExpr 0x28deb993948 <col:39> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |       | |   |   `-IntegerLiteral 0x28deb9939b8 <col:42> 'int' 1
|   |   |       | |   `-IntegerLiteral 0x28deb993a18 <col:45> 'int' 1
|   |   |       | `-ImplicitCastExpr 0x28deb993b10 <col:49> 'const limb *':'const limb *' <NoOp>
|   |   |       |   `-ImplicitCastExpr 0x28deb993af8 <col:49> 'limb *' <ArrayToPointerDecay>
|   |   |       |     `-DeclRefExpr 0x28deb993a78 <col:49> 'felem':'limb [4]' lvalue Var 0x28deb99a200 'y_out' 'felem':'limb [4]'
|   |   |       |-CallExpr 0x28deb993cd0 <line:1517:17, col:54> 'void'
|   |   |       | |-ImplicitCastExpr 0x28deb993cb8 <col:17> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   |   |       | | `-DeclRefExpr 0x28deb993b28 <col:17> 'void (limb *, const limb *)' Function 0x28deb787158 'felem_assign' 'void (limb *, const limb *)'
|   |   |       | |-ImplicitCastExpr 0x28deb993d00 <col:30, col:46> 'limb *' <ArrayToPointerDecay>
|   |   |       | | `-ArraySubscriptExpr 0x28deb993c78 <col:30, col:46> 'felem':'limb [4]' lvalue
|   |   |       | |   |-ImplicitCastExpr 0x28deb993c60 <col:30, col:43> 'felem *' <ArrayToPointerDecay>
|   |   |       | |   | `-ArraySubscriptExpr 0x28deb993c18 <col:30, col:43> 'felem [3]' lvalue
|   |   |       | |   |   |-ImplicitCastExpr 0x28deb993c00 <col:30, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       | |   |   | `-ArraySubscriptExpr 0x28deb993bb8 <col:30, col:40> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |       | |   |   |   |-ImplicitCastExpr 0x28deb993b88 <col:30> 'felem (*)[17][3]' <LValueToRValue>
|   |   |       | |   |   |   | `-DeclRefExpr 0x28deb993b48 <col:30> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |       | |   |   |   `-ImplicitCastExpr 0x28deb993ba0 <col:39> 'unsigned int' <LValueToRValue>
|   |   |       | |   |   |     `-DeclRefExpr 0x28deb993b68 <col:39> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |       | |   |   `-IntegerLiteral 0x28deb993bd8 <col:42> 'int' 1
|   |   |       | |   `-IntegerLiteral 0x28deb993c38 <col:45> 'int' 2
|   |   |       | `-ImplicitCastExpr 0x28deb993d30 <col:49> 'const limb *':'const limb *' <NoOp>
|   |   |       |   `-ImplicitCastExpr 0x28deb993d18 <col:49> 'limb *' <ArrayToPointerDecay>
|   |   |       |     `-DeclRefExpr 0x28deb993c98 <col:49> 'felem':'limb [4]' lvalue Var 0x28deb99a278 'z_out' 'felem':'limb [4]'
|   |   |       `-ForStmt 0x28deb9a3a10 <line:1518:17, line:1532:17>
|   |   |         |-BinaryOperator 0x28deb993da8 <line:1518:22, col:26> 'int' '='
|   |   |         | |-DeclRefExpr 0x28deb993d48 <col:22> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |         | `-IntegerLiteral 0x28deb993d80 <col:26> 'int' 2
|   |   |         |-<<<NULL>>>
|   |   |         |-BinaryOperator 0x28deb993e28 <col:29, col:34> 'int' '<='
|   |   |         | |-ImplicitCastExpr 0x28deb993e10 <col:29> 'int' <LValueToRValue>
|   |   |         | | `-DeclRefExpr 0x28deb993dc8 <col:29> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |         | `-IntegerLiteral 0x28deb993de8 <col:34> 'int' 16
|   |   |         |-UnaryOperator 0x28deb993e68 <col:38, col:40> 'int' prefix '++'
|   |   |         | `-DeclRefExpr 0x28deb993e48 <col:40> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |         `-CompoundStmt 0x28deb9a39f8 <col:43, line:1532:17>
|   |   |           `-IfStmt 0x28deb9a39d0 <line:1519:21, line:1531:21> has_else
|   |   |             |-BinaryOperator 0x28deb993ee0 <line:1519:25, col:29> 'int' '&'
|   |   |             | |-ImplicitCastExpr 0x28deb993ec8 <col:25> 'int' <LValueToRValue>
|   |   |             | | `-DeclRefExpr 0x28deb993e80 <col:25> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |             | `-IntegerLiteral 0x28deb993ea0 <col:29> 'int' 1
|   |   |             |-CompoundStmt 0x28deb9a2f28 <col:32, line:1526:21>
|   |   |             | `-CallExpr 0x28deb9a2d50 <line:1520:25, line:1525:56> 'void'
|   |   |             |   |-ImplicitCastExpr 0x28deb994c50 <line:1520:25> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |             |   | `-DeclRefExpr 0x28deb993f00 <col:25> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x28deb8814b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   |             |   |-ImplicitCastExpr 0x28deb9a2dc0 <col:35, col:51> 'limb *' <ArrayToPointerDecay>
|   |   |             |   | `-ArraySubscriptExpr 0x28deb994060 <col:35, col:51> 'felem':'limb [4]' lvalue
|   |   |             |   |   |-ImplicitCastExpr 0x28deb994048 <col:35, col:48> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |   | `-ArraySubscriptExpr 0x28deb994000 <col:35, col:48> 'felem [3]' lvalue
|   |   |             |   |   |   |-ImplicitCastExpr 0x28deb993fd0 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |   |   | `-ArraySubscriptExpr 0x28deb993f90 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |   |   |   |-ImplicitCastExpr 0x28deb993f60 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |   |   |   | `-DeclRefExpr 0x28deb993f20 <col:35> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |   |   |   `-ImplicitCastExpr 0x28deb993f78 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |   |   |   |     `-DeclRefExpr 0x28deb993f40 <col:44> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |             |   |   |   `-ImplicitCastExpr 0x28deb993fe8 <col:47> 'int' <LValueToRValue>
|   |   |             |   |   |     `-DeclRefExpr 0x28deb993fb0 <col:47> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |             |   |   `-IntegerLiteral 0x28deb994020 <col:50> 'int' 0
|   |   |             |   |-ImplicitCastExpr 0x28deb9a2dd8 <col:54, col:70> 'limb *' <ArrayToPointerDecay>
|   |   |             |   | `-ArraySubscriptExpr 0x28deb9941c0 <col:54, col:70> 'felem':'limb [4]' lvalue
|   |   |             |   |   |-ImplicitCastExpr 0x28deb9941a8 <col:54, col:67> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |   | `-ArraySubscriptExpr 0x28deb994160 <col:54, col:67> 'felem [3]' lvalue
|   |   |             |   |   |   |-ImplicitCastExpr 0x28deb994130 <col:54, col:64> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |   |   | `-ArraySubscriptExpr 0x28deb9940f0 <col:54, col:64> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |   |   |   |-ImplicitCastExpr 0x28deb9940c0 <col:54> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |   |   |   | `-DeclRefExpr 0x28deb994080 <col:54> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |   |   |   `-ImplicitCastExpr 0x28deb9940d8 <col:63> 'unsigned int' <LValueToRValue>
|   |   |             |   |   |   |     `-DeclRefExpr 0x28deb9940a0 <col:63> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |             |   |   |   `-ImplicitCastExpr 0x28deb994148 <col:66> 'int' <LValueToRValue>
|   |   |             |   |   |     `-DeclRefExpr 0x28deb994110 <col:66> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |             |   |   `-IntegerLiteral 0x28deb994180 <col:69> 'int' 1
|   |   |             |   |-ImplicitCastExpr 0x28deb9a2df0 <line:1521:35, col:51> 'limb *' <ArrayToPointerDecay>
|   |   |             |   | `-ArraySubscriptExpr 0x28deb994320 <col:35, col:51> 'felem':'limb [4]' lvalue
|   |   |             |   |   |-ImplicitCastExpr 0x28deb994308 <col:35, col:48> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |   | `-ArraySubscriptExpr 0x28deb9942c0 <col:35, col:48> 'felem [3]' lvalue
|   |   |             |   |   |   |-ImplicitCastExpr 0x28deb994290 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |   |   | `-ArraySubscriptExpr 0x28deb994250 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |   |   |   |-ImplicitCastExpr 0x28deb994220 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |   |   |   | `-DeclRefExpr 0x28deb9941e0 <col:35> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |   |   |   `-ImplicitCastExpr 0x28deb994238 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |   |   |   |     `-DeclRefExpr 0x28deb994200 <col:44> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |             |   |   |   `-ImplicitCastExpr 0x28deb9942a8 <col:47> 'int' <LValueToRValue>
|   |   |             |   |   |     `-DeclRefExpr 0x28deb994270 <col:47> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |             |   |   `-IntegerLiteral 0x28deb9942e0 <col:50> 'int' 2
|   |   |             |   |-ImplicitCastExpr 0x28deb9a2e20 <col:54, col:70> 'const limb *':'const limb *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x28deb9a2e08 <col:54, col:70> 'limb *' <ArrayToPointerDecay>
|   |   |             |   |   `-ArraySubscriptExpr 0x28deb994470 <col:54, col:70> 'felem':'limb [4]' lvalue
|   |   |             |   |     |-ImplicitCastExpr 0x28deb994458 <col:54, col:67> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |     | `-ArraySubscriptExpr 0x28deb994410 <col:54, col:67> 'felem [3]' lvalue
|   |   |             |   |     |   |-ImplicitCastExpr 0x28deb9943f8 <col:54, col:64> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |     |   | `-ArraySubscriptExpr 0x28deb9943b0 <col:54, col:64> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |     |   |   |-ImplicitCastExpr 0x28deb994380 <col:54> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |     |   |   | `-DeclRefExpr 0x28deb994340 <col:54> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |     |   |   `-ImplicitCastExpr 0x28deb994398 <col:63> 'unsigned int' <LValueToRValue>
|   |   |             |   |     |   |     `-DeclRefExpr 0x28deb994360 <col:63> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |             |   |     |   `-IntegerLiteral 0x28deb9943d0 <col:66> 'int' 1
|   |   |             |   |     `-IntegerLiteral 0x28deb994430 <col:69> 'int' 0
|   |   |             |   |-ImplicitCastExpr 0x28deb9a2e50 <line:1522:35, col:51> 'const limb *':'const limb *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x28deb9a2e38 <col:35, col:51> 'limb *' <ArrayToPointerDecay>
|   |   |             |   |   `-ArraySubscriptExpr 0x28deb9945c0 <col:35, col:51> 'felem':'limb [4]' lvalue
|   |   |             |   |     |-ImplicitCastExpr 0x28deb9945a8 <col:35, col:48> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |     | `-ArraySubscriptExpr 0x28deb994560 <col:35, col:48> 'felem [3]' lvalue
|   |   |             |   |     |   |-ImplicitCastExpr 0x28deb994548 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |     |   | `-ArraySubscriptExpr 0x28deb994500 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |     |   |   |-ImplicitCastExpr 0x28deb9944d0 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |     |   |   | `-DeclRefExpr 0x28deb994490 <col:35> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |     |   |   `-ImplicitCastExpr 0x28deb9944e8 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |   |     |   |     `-DeclRefExpr 0x28deb9944b0 <col:44> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |             |   |     |   `-IntegerLiteral 0x28deb994520 <col:47> 'int' 1
|   |   |             |   |     `-IntegerLiteral 0x28deb994580 <col:50> 'int' 1
|   |   |             |   |-ImplicitCastExpr 0x28deb9a2e80 <col:54, col:70> 'const limb *':'const limb *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x28deb9a2e68 <col:54, col:70> 'limb *' <ArrayToPointerDecay>
|   |   |             |   |   `-ArraySubscriptExpr 0x28deb994710 <col:54, col:70> 'felem':'limb [4]' lvalue
|   |   |             |   |     |-ImplicitCastExpr 0x28deb9946f8 <col:54, col:67> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |     | `-ArraySubscriptExpr 0x28deb9946b0 <col:54, col:67> 'felem [3]' lvalue
|   |   |             |   |     |   |-ImplicitCastExpr 0x28deb994698 <col:54, col:64> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |     |   | `-ArraySubscriptExpr 0x28deb994650 <col:54, col:64> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |     |   |   |-ImplicitCastExpr 0x28deb994620 <col:54> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |     |   |   | `-DeclRefExpr 0x28deb9945e0 <col:54> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |     |   |   `-ImplicitCastExpr 0x28deb994638 <col:63> 'unsigned int' <LValueToRValue>
|   |   |             |   |     |   |     `-DeclRefExpr 0x28deb994600 <col:63> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |             |   |     |   `-IntegerLiteral 0x28deb994670 <col:66> 'int' 1
|   |   |             |   |     `-IntegerLiteral 0x28deb9946d0 <col:69> 'int' 2
|   |   |             |   |-IntegerLiteral 0x28deb994730 <col:73> 'int' 0
|   |   |             |   |-ImplicitCastExpr 0x28deb9a2eb0 <line:1523:35, col:55> 'const limb *':'const limb *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x28deb9a2e98 <col:35, col:55> 'limb *' <ArrayToPointerDecay>
|   |   |             |   |   `-ArraySubscriptExpr 0x28deb9948e0 <col:35, col:55> 'felem':'limb [4]' lvalue
|   |   |             |   |     |-ImplicitCastExpr 0x28deb9948c8 <col:35, col:52> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |     | `-ArraySubscriptExpr 0x28deb994880 <col:35, col:52> 'felem [3]' lvalue
|   |   |             |   |     |   |-ImplicitCastExpr 0x28deb994868 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |     |   | `-ArraySubscriptExpr 0x28deb9947c8 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |     |   |   |-ImplicitCastExpr 0x28deb994798 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |     |   |   | `-DeclRefExpr 0x28deb994758 <col:35> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |     |   |   `-ImplicitCastExpr 0x28deb9947b0 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |   |     |   |     `-DeclRefExpr 0x28deb994778 <col:44> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |             |   |     |   `-BinaryOperator 0x28deb994848 <col:47, col:51> 'int' '-'
|   |   |             |   |     |     |-ImplicitCastExpr 0x28deb994830 <col:47> 'int' <LValueToRValue>
|   |   |             |   |     |     | `-DeclRefExpr 0x28deb9947e8 <col:47> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |             |   |     |     `-IntegerLiteral 0x28deb994808 <col:51> 'int' 1
|   |   |             |   |     `-IntegerLiteral 0x28deb9948a0 <col:54> 'int' 0
|   |   |             |   |-ImplicitCastExpr 0x28deb9a2ee0 <line:1524:35, col:55> 'const limb *':'const limb *' <NoOp>
|   |   |             |   | `-ImplicitCastExpr 0x28deb9a2ec8 <col:35, col:55> 'limb *' <ArrayToPointerDecay>
|   |   |             |   |   `-ArraySubscriptExpr 0x28deb994a88 <col:35, col:55> 'felem':'limb [4]' lvalue
|   |   |             |   |     |-ImplicitCastExpr 0x28deb994a70 <col:35, col:52> 'felem *' <ArrayToPointerDecay>
|   |   |             |   |     | `-ArraySubscriptExpr 0x28deb994a28 <col:35, col:52> 'felem [3]' lvalue
|   |   |             |   |     |   |-ImplicitCastExpr 0x28deb994a10 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |   |     |   | `-ArraySubscriptExpr 0x28deb994970 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |   |     |   |   |-ImplicitCastExpr 0x28deb994940 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |   |     |   |   | `-DeclRefExpr 0x28deb994900 <col:35> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |             |   |     |   |   `-ImplicitCastExpr 0x28deb994958 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |   |     |   |     `-DeclRefExpr 0x28deb994920 <col:44> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |             |   |     |   `-BinaryOperator 0x28deb9949f0 <col:47, col:51> 'int' '-'
|   |   |             |   |     |     |-ImplicitCastExpr 0x28deb9949d8 <col:47> 'int' <LValueToRValue>
|   |   |             |   |     |     | `-DeclRefExpr 0x28deb994990 <col:47> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |             |   |     |     `-IntegerLiteral 0x28deb9949b0 <col:51> 'int' 1
|   |   |             |   |     `-IntegerLiteral 0x28deb994a48 <col:54> 'int' 1
|   |   |             |   `-ImplicitCastExpr 0x28deb9a2f10 <line:1525:35, col:55> 'const limb *':'const limb *' <NoOp>
|   |   |             |     `-ImplicitCastExpr 0x28deb9a2ef8 <col:35, col:55> 'limb *' <ArrayToPointerDecay>
|   |   |             |       `-ArraySubscriptExpr 0x28deb994c30 <col:35, col:55> 'felem':'limb [4]' lvalue
|   |   |             |         |-ImplicitCastExpr 0x28deb994c18 <col:35, col:52> 'felem *' <ArrayToPointerDecay>
|   |   |             |         | `-ArraySubscriptExpr 0x28deb994bd0 <col:35, col:52> 'felem [3]' lvalue
|   |   |             |         |   |-ImplicitCastExpr 0x28deb994bb8 <col:35, col:45> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |             |         |   | `-ArraySubscriptExpr 0x28deb994b18 <col:35, col:45> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |             |         |   |   |-ImplicitCastExpr 0x28deb994ae8 <col:35> 'felem (*)[17][3]' <LValueToRValue>
|   |   |             |         |   |   | `-DeclRefExpr 0x28deb994aa8 <col:35> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |             |         |   |   `-ImplicitCastExpr 0x28deb994b00 <col:44> 'unsigned int' <LValueToRValue>
|   |   |             |         |   |     `-DeclRefExpr 0x28deb994ac8 <col:44> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |             |         |   `-BinaryOperator 0x28deb994b98 <col:47, col:51> 'int' '-'
|   |   |             |         |     |-ImplicitCastExpr 0x28deb994b80 <col:47> 'int' <LValueToRValue>
|   |   |             |         |     | `-DeclRefExpr 0x28deb994b38 <col:47> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |             |         |     `-IntegerLiteral 0x28deb994b58 <col:51> 'int' 1
|   |   |             |         `-IntegerLiteral 0x28deb994bf0 <col:54> 'int' 2
|   |   |             `-CompoundStmt 0x28deb9a39b8 <line:1526:28, line:1531:21>
|   |   |               `-CallExpr 0x28deb9a3890 <line:1527:25, line:1530:59> 'void'
|   |   |                 |-ImplicitCastExpr 0x28deb9a3878 <line:1527:25> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |                 | `-DeclRefExpr 0x28deb9a2f40 <col:25> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x28deb87e7f8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   |                 |-ImplicitCastExpr 0x28deb9a38e0 <col:38, col:54> 'limb *' <ArrayToPointerDecay>
|   |   |                 | `-ArraySubscriptExpr 0x28deb9a30a0 <col:38, col:54> 'felem':'limb [4]' lvalue
|   |   |                 |   |-ImplicitCastExpr 0x28deb9a3088 <col:38, col:51> 'felem *' <ArrayToPointerDecay>
|   |   |                 |   | `-ArraySubscriptExpr 0x28deb9a3040 <col:38, col:51> 'felem [3]' lvalue
|   |   |                 |   |   |-ImplicitCastExpr 0x28deb9a3010 <col:38, col:48> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                 |   |   | `-ArraySubscriptExpr 0x28deb9a2fd0 <col:38, col:48> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                 |   |   |   |-ImplicitCastExpr 0x28deb9a2fa0 <col:38> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                 |   |   |   | `-DeclRefExpr 0x28deb9a2f60 <col:38> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |                 |   |   |   `-ImplicitCastExpr 0x28deb9a2fb8 <col:47> 'unsigned int' <LValueToRValue>
|   |   |                 |   |   |     `-DeclRefExpr 0x28deb9a2f80 <col:47> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |                 |   |   `-ImplicitCastExpr 0x28deb9a3028 <col:50> 'int' <LValueToRValue>
|   |   |                 |   |     `-DeclRefExpr 0x28deb9a2ff0 <col:50> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |                 |   `-IntegerLiteral 0x28deb9a3060 <col:53> 'int' 0
|   |   |                 |-ImplicitCastExpr 0x28deb9a38f8 <col:57, col:73> 'limb *' <ArrayToPointerDecay>
|   |   |                 | `-ArraySubscriptExpr 0x28deb9a3200 <col:57, col:73> 'felem':'limb [4]' lvalue
|   |   |                 |   |-ImplicitCastExpr 0x28deb9a31e8 <col:57, col:70> 'felem *' <ArrayToPointerDecay>
|   |   |                 |   | `-ArraySubscriptExpr 0x28deb9a31a0 <col:57, col:70> 'felem [3]' lvalue
|   |   |                 |   |   |-ImplicitCastExpr 0x28deb9a3170 <col:57, col:67> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                 |   |   | `-ArraySubscriptExpr 0x28deb9a3130 <col:57, col:67> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                 |   |   |   |-ImplicitCastExpr 0x28deb9a3100 <col:57> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                 |   |   |   | `-DeclRefExpr 0x28deb9a30c0 <col:57> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |                 |   |   |   `-ImplicitCastExpr 0x28deb9a3118 <col:66> 'unsigned int' <LValueToRValue>
|   |   |                 |   |   |     `-DeclRefExpr 0x28deb9a30e0 <col:66> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |                 |   |   `-ImplicitCastExpr 0x28deb9a3188 <col:69> 'int' <LValueToRValue>
|   |   |                 |   |     `-DeclRefExpr 0x28deb9a3150 <col:69> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |                 |   `-IntegerLiteral 0x28deb9a31c0 <col:72> 'int' 1
|   |   |                 |-ImplicitCastExpr 0x28deb9a3910 <line:1528:38, col:54> 'limb *' <ArrayToPointerDecay>
|   |   |                 | `-ArraySubscriptExpr 0x28deb9a3360 <col:38, col:54> 'felem':'limb [4]' lvalue
|   |   |                 |   |-ImplicitCastExpr 0x28deb9a3348 <col:38, col:51> 'felem *' <ArrayToPointerDecay>
|   |   |                 |   | `-ArraySubscriptExpr 0x28deb9a3300 <col:38, col:51> 'felem [3]' lvalue
|   |   |                 |   |   |-ImplicitCastExpr 0x28deb9a32d0 <col:38, col:48> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                 |   |   | `-ArraySubscriptExpr 0x28deb9a3290 <col:38, col:48> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                 |   |   |   |-ImplicitCastExpr 0x28deb9a3260 <col:38> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                 |   |   |   | `-DeclRefExpr 0x28deb9a3220 <col:38> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |                 |   |   |   `-ImplicitCastExpr 0x28deb9a3278 <col:47> 'unsigned int' <LValueToRValue>
|   |   |                 |   |   |     `-DeclRefExpr 0x28deb9a3240 <col:47> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |                 |   |   `-ImplicitCastExpr 0x28deb9a32e8 <col:50> 'int' <LValueToRValue>
|   |   |                 |   |     `-DeclRefExpr 0x28deb9a32b0 <col:50> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |                 |   `-IntegerLiteral 0x28deb9a3320 <col:53> 'int' 2
|   |   |                 |-ImplicitCastExpr 0x28deb9a3940 <col:57, col:77> 'const limb *':'const limb *' <NoOp>
|   |   |                 | `-ImplicitCastExpr 0x28deb9a3928 <col:57, col:77> 'limb *' <ArrayToPointerDecay>
|   |   |                 |   `-ArraySubscriptExpr 0x28deb9a3508 <col:57, col:77> 'felem':'limb [4]' lvalue
|   |   |                 |     |-ImplicitCastExpr 0x28deb9a34f0 <col:57, col:74> 'felem *' <ArrayToPointerDecay>
|   |   |                 |     | `-ArraySubscriptExpr 0x28deb9a34a8 <col:57, col:74> 'felem [3]' lvalue
|   |   |                 |     |   |-ImplicitCastExpr 0x28deb9a3490 <col:57, col:67> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                 |     |   | `-ArraySubscriptExpr 0x28deb9a33f0 <col:57, col:67> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                 |     |   |   |-ImplicitCastExpr 0x28deb9a33c0 <col:57> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                 |     |   |   | `-DeclRefExpr 0x28deb9a3380 <col:57> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |                 |     |   |   `-ImplicitCastExpr 0x28deb9a33d8 <col:66> 'unsigned int' <LValueToRValue>
|   |   |                 |     |   |     `-DeclRefExpr 0x28deb9a33a0 <col:66> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |                 |     |   `-BinaryOperator 0x28deb9a3470 <col:69, col:73> 'int' '/'
|   |   |                 |     |     |-ImplicitCastExpr 0x28deb9a3458 <col:69> 'int' <LValueToRValue>
|   |   |                 |     |     | `-DeclRefExpr 0x28deb9a3410 <col:69> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |                 |     |     `-IntegerLiteral 0x28deb9a3430 <col:73> 'int' 2
|   |   |                 |     `-IntegerLiteral 0x28deb9a34c8 <col:76> 'int' 0
|   |   |                 |-ImplicitCastExpr 0x28deb9a3970 <line:1529:38, col:58> 'const limb *':'const limb *' <NoOp>
|   |   |                 | `-ImplicitCastExpr 0x28deb9a3958 <col:38, col:58> 'limb *' <ArrayToPointerDecay>
|   |   |                 |   `-ArraySubscriptExpr 0x28deb9a36b0 <col:38, col:58> 'felem':'limb [4]' lvalue
|   |   |                 |     |-ImplicitCastExpr 0x28deb9a3698 <col:38, col:55> 'felem *' <ArrayToPointerDecay>
|   |   |                 |     | `-ArraySubscriptExpr 0x28deb9a3650 <col:38, col:55> 'felem [3]' lvalue
|   |   |                 |     |   |-ImplicitCastExpr 0x28deb9a3638 <col:38, col:48> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                 |     |   | `-ArraySubscriptExpr 0x28deb9a3598 <col:38, col:48> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                 |     |   |   |-ImplicitCastExpr 0x28deb9a3568 <col:38> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                 |     |   |   | `-DeclRefExpr 0x28deb9a3528 <col:38> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |                 |     |   |   `-ImplicitCastExpr 0x28deb9a3580 <col:47> 'unsigned int' <LValueToRValue>
|   |   |                 |     |   |     `-DeclRefExpr 0x28deb9a3548 <col:47> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |                 |     |   `-BinaryOperator 0x28deb9a3618 <col:50, col:54> 'int' '/'
|   |   |                 |     |     |-ImplicitCastExpr 0x28deb9a3600 <col:50> 'int' <LValueToRValue>
|   |   |                 |     |     | `-DeclRefExpr 0x28deb9a35b8 <col:50> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |                 |     |     `-IntegerLiteral 0x28deb9a35d8 <col:54> 'int' 2
|   |   |                 |     `-IntegerLiteral 0x28deb9a3670 <col:57> 'int' 1
|   |   |                 `-ImplicitCastExpr 0x28deb9a39a0 <line:1530:38, col:58> 'const limb *':'const limb *' <NoOp>
|   |   |                   `-ImplicitCastExpr 0x28deb9a3988 <col:38, col:58> 'limb *' <ArrayToPointerDecay>
|   |   |                     `-ArraySubscriptExpr 0x28deb9a3858 <col:38, col:58> 'felem':'limb [4]' lvalue
|   |   |                       |-ImplicitCastExpr 0x28deb9a3840 <col:38, col:55> 'felem *' <ArrayToPointerDecay>
|   |   |                       | `-ArraySubscriptExpr 0x28deb9a37f8 <col:38, col:55> 'felem [3]' lvalue
|   |   |                       |   |-ImplicitCastExpr 0x28deb9a37e0 <col:38, col:48> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |                       |   | `-ArraySubscriptExpr 0x28deb9a3740 <col:38, col:48> 'felem [17][3]':'felem [17][3]' lvalue
|   |   |                       |   |   |-ImplicitCastExpr 0x28deb9a3710 <col:38> 'felem (*)[17][3]' <LValueToRValue>
|   |   |                       |   |   | `-DeclRefExpr 0x28deb9a36d0 <col:38> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   |                       |   |   `-ImplicitCastExpr 0x28deb9a3728 <col:47> 'unsigned int' <LValueToRValue>
|   |   |                       |   |     `-DeclRefExpr 0x28deb9a36f0 <col:47> 'unsigned int' lvalue Var 0x28deb999588 'i' 'unsigned int'
|   |   |                       |   `-BinaryOperator 0x28deb9a37c0 <col:50, col:54> 'int' '/'
|   |   |                       |     |-ImplicitCastExpr 0x28deb9a37a8 <col:50> 'int' <LValueToRValue>
|   |   |                       |     | `-DeclRefExpr 0x28deb9a3760 <col:50> 'int' lvalue Var 0x28deb9994f0 'j' 'int'
|   |   |                       |     `-IntegerLiteral 0x28deb9a3780 <col:54> 'int' 2
|   |   |                       `-IntegerLiteral 0x28deb9a3818 <col:57> 'int' 2
|   |   `-IfStmt 0x28deb9a3d88 <line:1535:9, line:1536:72>
|   |     |-ImplicitCastExpr 0x28deb9a3b38 <line:1535:13> 'int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x28deb9a3b18 <col:13> 'int' lvalue Var 0x28deb999620 'mixed' 'int'
|   |     `-CallExpr 0x28deb9a3d20 <line:1536:13, col:72> 'void'
|   |       |-ImplicitCastExpr 0x28deb9a3d08 <col:13> 'void (*)(size_t, felem (*)[3], felem *)' <FunctionToPointerDecay>
|   |       | `-DeclRefExpr 0x28deb9a3b50 <col:13> 'void (size_t, felem (*)[3], felem *)' Function 0x28deb99e1a8 'make_points_affine' 'void (size_t, felem (*)[3], felem *)'
|   |       |-BinaryOperator 0x28deb9a3be8 <col:32, col:45> 'unsigned long long' '*'
|   |       | |-ImplicitCastExpr 0x28deb9a3bb8 <col:32> 'size_t':'unsigned long long' <LValueToRValue>
|   |       | | `-DeclRefExpr 0x28deb9a3b70 <col:32> 'size_t':'unsigned long long' lvalue Var 0x28deb999f40 'num_points' 'size_t':'unsigned long long'
|   |       | `-ImplicitCastExpr 0x28deb9a3bd0 <col:45> 'unsigned long long' <IntegralCast>
|   |       |   `-IntegerLiteral 0x28deb9a3b90 <col:45> 'int' 17
|   |       |-ImplicitCastExpr 0x28deb9a3d58 <col:49, col:59> 'felem (*)[3]' <ArrayToPointerDecay>
|   |       | `-ArraySubscriptExpr 0x28deb9a3c68 <col:49, col:59> 'felem [17][3]':'felem [17][3]' lvalue
|   |       |   |-ImplicitCastExpr 0x28deb9a3c50 <col:49> 'felem (*)[17][3]' <LValueToRValue>
|   |       |   | `-DeclRefExpr 0x28deb9a3c08 <col:49> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |       |   `-IntegerLiteral 0x28deb9a3c28 <col:58> 'int' 0
|   |       `-ImplicitCastExpr 0x28deb9a3d70 <col:62> 'felem *' <LValueToRValue>
|   |         `-DeclRefExpr 0x28deb9a3c88 <col:62> 'felem *' lvalue Var 0x28deb999c28 'tmp_felems' 'felem *'
|   |-IfStmt 0x28deb994da0 <line:1540:5, line:1565:69> has_else
|   | |-OpaqueValueExpr 0x28deb994d88 <<invalid sloc>> '_Bool'
|   | |-CompoundStmt 0x28deb9a4910 <line:1540:46, line:1561:5>
|   | | |-CallExpr 0x28deb9a3fd8 <line:1541:9, col:45> 'void *'
|   | | | |-ImplicitCastExpr 0x28deb9a3fc0 <col:9> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb9a3ec8 <col:9> 'void *(void *, int, unsigned long long)' Function 0x28deb73e6b0 'memset' 'void *(void *, int, unsigned long long)'
|   | | | |-ImplicitCastExpr 0x28deb9a4028 <col:16> 'void *' <BitCast>
|   | | | | `-ImplicitCastExpr 0x28deb9a4010 <col:16> 'u8 *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x28deb9a3ee8 <col:16> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb999760 'g_secret' 'felem_bytearray':'u8 [28]'
|   | | | |-IntegerLiteral 0x28deb9a3f20 <col:26> 'int' 0
|   | | | `-UnaryExprOrTypeTraitExpr 0x28deb9a3f88 <col:29, col:44> 'unsigned long long' sizeof
|   | | |   `-ParenExpr 0x28deb9a3f68 <col:35, col:44> 'felem_bytearray':'u8 [28]' lvalue
|   | | |     `-DeclRefExpr 0x28deb9a3f48 <col:36> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb999760 'g_secret' 'felem_bytearray':'u8 [28]' non_odr_use_unevaluated
|   | | |-IfStmt 0x28deb9a4240 <line:1543:9, line:1554:13> has_else
|   | | | |-OpaqueValueExpr 0x28deb9a4228 <<invalid sloc>> '_Bool'
|   | | | |-CompoundStmt 0x28deb9a41a8 <line:1543:70, line:1553:9>
|   | | | | `-IfStmt 0x28deb9a4130 <line:1548:13, line:1551:13>
|   | | | |   |-OpaqueValueExpr 0x28deb9a4118 <<invalid sloc>> '_Bool'
|   | | | |   `-CompoundStmt 0x28deb9a4100 <line:1548:67, line:1551:13>
|   | | | |     `-GotoStmt 0x28deb9a40e8 <line:1550:17, col:22> 'err' 0x28deb9a0e70
|   | | | `-NullStmt 0x28deb9a4220 <line:1554:13>
|   | | |-CallExpr 0x28deb9a4300 <line:1555:9, col:45> 'void'
|   | | | |-ImplicitCastExpr 0x28deb9a42e8 <col:9> 'void (*)(u8 *, const u8 *, unsigned int)' <FunctionToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb9a4268 <col:9> 'void (u8 *, const u8 *, unsigned int)' Function 0x28deb784c08 'flip_endian' 'void (u8 *, const u8 *, unsigned int)'
|   | | | |-ImplicitCastExpr 0x28deb9a4338 <col:21> 'u8 *' <ArrayToPointerDecay>
|   | | | | `-DeclRefExpr 0x28deb9a4288 <col:21> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb999760 'g_secret' 'felem_bytearray':'u8 [28]'
|   | | | |-ImplicitCastExpr 0x28deb9a4368 <col:31> 'const u8 *' <NoOp>
|   | | | | `-ImplicitCastExpr 0x28deb9a4350 <col:31> 'u8 *' <ArrayToPointerDecay>
|   | | | |   `-DeclRefExpr 0x28deb9a42a8 <col:31> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb999d58 'tmp' 'felem_bytearray':'u8 [28]'
|   | | | `-ImplicitCastExpr 0x28deb9a4380 <col:36> 'unsigned int' <LValueToRValue>
|   | | |   `-DeclRefExpr 0x28deb9a42c8 <col:36> 'unsigned int' lvalue Var 0x28deb999df0 'num_bytes' 'unsigned int'
|   | | `-CallExpr 0x28deb9a47d0 <line:1557:9, line:1560:69> 'void'
|   | |   |-ImplicitCastExpr 0x28deb9a47b8 <line:1557:9> 'void (*)(limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])' <FunctionToPointerDecay>
|   | |   | `-DeclRefExpr 0x28deb9a4398 <col:9> 'void (limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])' Function 0x28deb8867b8 'batch_mul' 'void (limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])'
|   | |   |-ImplicitCastExpr 0x28deb9a4838 <col:19> 'limb *' <ArrayToPointerDecay>
|   | |   | `-DeclRefExpr 0x28deb9a43b8 <col:19> 'felem':'limb [4]' lvalue Var 0x28deb99a188 'x_out' 'felem':'limb [4]'
|   | |   |-ImplicitCastExpr 0x28deb9a4850 <col:26> 'limb *' <ArrayToPointerDecay>
|   | |   | `-DeclRefExpr 0x28deb9a43d8 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb99a200 'y_out' 'felem':'limb [4]'
|   | |   |-ImplicitCastExpr 0x28deb9a4868 <col:33> 'limb *' <ArrayToPointerDecay>
|   | |   | `-DeclRefExpr 0x28deb9a43f8 <col:33> 'felem':'limb [4]' lvalue Var 0x28deb99a278 'z_out' 'felem':'limb [4]'
|   | |   |-CStyleCastExpr 0x28deb9a4508 <line:1558:19, col:45> 'const felem_bytearray (*)' <NoOp>
|   | |   | `-ImplicitCastExpr 0x28deb9a44b0 <col:45> 'felem_bytearray *' <LValueToRValue> part_of_explicit_cast
|   | |   |   `-DeclRefExpr 0x28deb9a4418 <col:45> 'felem_bytearray *' lvalue Var 0x28deb999848 'secrets' 'felem_bytearray *'
|   | |   |-ImplicitCastExpr 0x28deb9a4898 <col:54> 'unsigned int' <IntegralCast>
|   | |   | `-ImplicitCastExpr 0x28deb9a4880 <col:54> 'size_t':'unsigned long long' <LValueToRValue>
|   | |   |   `-DeclRefExpr 0x28deb9a4530 <col:54> 'size_t':'unsigned long long' lvalue Var 0x28deb999f40 'num_points' 'size_t':'unsigned long long'
|   | |   |-ImplicitCastExpr 0x28deb9a48c8 <line:1559:19> 'const u8 *' <NoOp>
|   | |   | `-ImplicitCastExpr 0x28deb9a48b0 <col:19> 'u8 *' <ArrayToPointerDecay>
|   | |   |   `-DeclRefExpr 0x28deb9a4550 <col:19> 'felem_bytearray':'u8 [28]' lvalue Var 0x28deb999760 'g_secret' 'felem_bytearray':'u8 [28]'
|   | |   |-ImplicitCastExpr 0x28deb9a48e0 <line:1560:19> 'int' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x28deb9a4570 <col:19> 'int' lvalue Var 0x28deb999620 'mixed' 'int'
|   | |   |-CStyleCastExpr 0x28deb9a4718 <col:26, col:49> 'const felem (*)[17][3]' <NoOp>
|   | |   | `-ImplicitCastExpr 0x28deb9a46c8 <col:49> 'felem (*)[17][3]' <LValueToRValue> part_of_explicit_cast
|   | |   |   `-DeclRefExpr 0x28deb9a45e0 <col:49> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   | |   `-ImplicitCastExpr 0x28deb9a48f8 <col:59> 'const felem (*)[16][3]' <LValueToRValue>
|   | |     `-DeclRefExpr 0x28deb9a4740 <col:59> 'const felem (*)[16][3]' lvalue Var 0x28deb99a578 'g_pre_comp' 'const felem (*)[16][3]'
|   | `-CallExpr 0x28deb9a4cc0 <line:1563:9, line:1565:69> 'void'
|   |   |-ImplicitCastExpr 0x28deb9a4ca8 <line:1563:9> 'void (*)(limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x28deb9a4940 <col:9> 'void (limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])' Function 0x28deb8867b8 'batch_mul' 'void (limb *, limb *, limb *, const felem_bytearray *, const unsigned int, const u8 *, const int, const felem (*)[17][3], const felem (*)[16][3])'
|   |   |-ImplicitCastExpr 0x28deb9a4d28 <col:19> 'limb *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x28deb9a4960 <col:19> 'felem':'limb [4]' lvalue Var 0x28deb99a188 'x_out' 'felem':'limb [4]'
|   |   |-ImplicitCastExpr 0x28deb994ce0 <col:26> 'limb *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x28deb9a4980 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb99a200 'y_out' 'felem':'limb [4]'
|   |   |-ImplicitCastExpr 0x28deb994cf8 <col:33> 'limb *' <ArrayToPointerDecay>
|   |   | `-DeclRefExpr 0x28deb9a49a0 <col:33> 'felem':'limb [4]' lvalue Var 0x28deb99a278 'z_out' 'felem':'limb [4]'
|   |   |-CStyleCastExpr 0x28deb9a4a10 <line:1564:19, col:45> 'const felem_bytearray (*)' <NoOp>
|   |   | `-ImplicitCastExpr 0x28deb9a49f8 <col:45> 'felem_bytearray *' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x28deb9a49c0 <col:45> 'felem_bytearray *' lvalue Var 0x28deb999848 'secrets' 'felem_bytearray *'
|   |   |-ImplicitCastExpr 0x28deb994d28 <col:54> 'unsigned int' <IntegralCast>
|   |   | `-ImplicitCastExpr 0x28deb994d10 <col:54> 'size_t':'unsigned long long' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x28deb9a4a38 <col:54> 'size_t':'unsigned long long' lvalue Var 0x28deb999f40 'num_points' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x28deb994d40 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const u8 *' <NullToPointer>
|   |   | `-ParenExpr 0x28deb9a4ac0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x28deb9a4a98 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x28deb9a4a58 <col:26> 'int' 0
|   |   |-ImplicitCastExpr 0x28deb994d58 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1565:25> 'int' <LValueToRValue>
|   |   | `-DeclRefExpr 0x28deb9a4ae0 <col:25> 'int' lvalue Var 0x28deb999620 'mixed' 'int'
|   |   |-CStyleCastExpr 0x28deb9a4bf8 <col:32, col:55> 'const felem (*)[17][3]' <NoOp>
|   |   | `-ImplicitCastExpr 0x28deb9a4be0 <col:55> 'felem (*)[17][3]' <LValueToRValue> part_of_explicit_cast
|   |   |   `-DeclRefExpr 0x28deb9a4b50 <col:55> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |   `-ImplicitCastExpr 0x28deb994d70 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'const felem (*)[16][3]':'const felem (*)[16][3]' <NullToPointer>
|   |     `-ParenExpr 0x28deb9a4c88 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28deb9a4c60 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28deb9a4c20 <col:26> 'int' 0
|   |-CallExpr 0x28deb994e58 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1567:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb994e40 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb994dc8 <col:5> 'void (limb *, const limb *)' Function 0x28deb86c208 'felem_contract' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb994e88 <col:20> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb994de8 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb99a020 'x_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb994eb8 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb994ea0 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb994e20 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb99a188 'x_out' 'felem':'limb [4]'
|   |-CallExpr 0x28deb994f60 <line:1568:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb994f48 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb994ed0 <col:5> 'void (limb *, const limb *)' Function 0x28deb86c208 'felem_contract' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb994f90 <col:20> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb994ef0 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb99a098 'y_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb994fc0 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb994fa8 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb994f28 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb99a200 'y_out' 'felem':'limb [4]'
|   |-CallExpr 0x28deb995068 <line:1569:5, col:31> 'void'
|   | |-ImplicitCastExpr 0x28deb995050 <col:5> 'void (*)(limb *, const limb *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb994fd8 <col:5> 'void (limb *, const limb *)' Function 0x28deb86c208 'felem_contract' 'void (limb *, const limb *)'
|   | |-ImplicitCastExpr 0x28deb995098 <col:20> 'limb *' <ArrayToPointerDecay>
|   | | `-DeclRefExpr 0x28deb994ff8 <col:20> 'felem':'limb [4]' lvalue Var 0x28deb99a110 'z_in' 'felem':'limb [4]'
|   | `-ImplicitCastExpr 0x28deb9950c8 <col:26> 'const limb *':'const limb *' <NoOp>
|   |   `-ImplicitCastExpr 0x28deb9950b0 <col:26> 'limb *' <ArrayToPointerDecay>
|   |     `-DeclRefExpr 0x28deb995030 <col:26> 'felem':'limb [4]' lvalue Var 0x28deb99a278 'z_out' 'felem':'limb [4]'
|   |-IfStmt 0x28deb9951a8 <line:1570:5, line:1574:5>
|   | |-OpaqueValueExpr 0x28deb995190 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x28deb995178 <line:1571:34, line:1574:5>
|   |   `-GotoStmt 0x28deb995160 <line:1573:9, col:14> 'err' 0x28deb9a0e70
|   |-LabelStmt 0x28deb995240 <line:1577:2, col:5> 'err'
|   | `-NullStmt 0x28deb995238 <col:5>
|   |-CallExpr 0x28deb9953e0 <line:1581:5, col:25> 'int'
|   | |-ImplicitCastExpr 0x28deb9953c8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb995388 <col:5> 'int ()' Function 0x28deb991970 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x28deb995408 <col:18> 'felem_bytearray *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb9953a8 <col:18> 'felem_bytearray *' lvalue Var 0x28deb999848 'secrets' 'felem_bytearray *'
|   |-CallExpr 0x28deb995478 <line:1582:5, col:26> 'int'
|   | |-ImplicitCastExpr 0x28deb995460 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb995420 <col:5> 'int ()' Function 0x28deb991970 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x28deb9954a0 <col:18> 'felem (*)[17][3]' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb995440 <col:18> 'felem (*)[17][3]' lvalue Var 0x28deb999af8 'pre_comp' 'felem (*)[17][3]'
|   |-CallExpr 0x28deb995510 <line:1583:5, col:28> 'int'
|   | |-ImplicitCastExpr 0x28deb9954f8 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb9954b8 <col:5> 'int ()' Function 0x28deb991970 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x28deb995538 <col:18> 'felem *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb9954d8 <col:18> 'felem *' lvalue Var 0x28deb999c28 'tmp_felems' 'felem *'
|   `-ReturnStmt 0x28deb995588 <line:1584:5, col:12>
|     `-ImplicitCastExpr 0x28deb995570 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x28deb995550 <col:12> 'int' lvalue Var 0x28deb999430 'ret' 'int'
|-FunctionDecl 0x28deb9957d8 <line:1587:1, line:1710:1> line:1587:5 invalid ec_GFp_nistp224_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x28deb9956b8 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x28deb995738 <col:54, col:62> col:62 invalid ctx 'int *'
| `-CompoundStmt 0x28deb9a67d8 <line:1588:1, line:1710:1>
|   |-DeclStmt 0x28deb995948 <line:1589:5, col:16>
|   | `-VarDecl 0x28deb9958b8 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x28deb995920 <col:15> 'int' 0
|   |-DeclStmt 0x28deb995a78 <line:1590:5, col:34>
|   | `-VarDecl 0x28deb995970 <col:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> .//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1590:24 used pre 'NISTP224_PRE_COMP *' cinit
|   |   `-ImplicitCastExpr 0x28deb995a60 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'NISTP224_PRE_COMP *' <NullToPointer>
|   |     `-ParenExpr 0x28deb995a40 <col:17, col:27> 'void *'
|   |       `-CStyleCastExpr 0x28deb995a18 <col:18, col:26> 'void *' <NullToPointer>
|   |         `-IntegerLiteral 0x28deb9959d8 <col:26> 'int' 0
|   |-DeclStmt 0x28deb995ba8 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1591:5, col:13>
|   | |-VarDecl 0x28deb995aa8 <col:5, col:9> col:9 used i 'int'
|   | `-VarDecl 0x28deb995b28 <col:5, col:12> col:12 used j 'int'
|   |-DeclStmt 0x28deb995e10 <line:1595:5, col:25>
|   | `-VarDecl 0x28deb995da8 <col:5, col:24> col:11 used tmp_felems 'felem [32]'
|   |-IfStmt 0x28deb996010 <line:1599:5, line:1601:20>
|   | |-OpaqueValueExpr 0x28deb995ff8 <<invalid sloc>> '_Bool'
|   | `-IfStmt 0x28deb995fe0 <line:1600:9, line:1601:20>
|   |   |-OpaqueValueExpr 0x28deb995fc8 <<invalid sloc>> '_Bool'
|   |   `-ReturnStmt 0x28deb995fb8 <col:13, col:20>
|   |     `-IntegerLiteral 0x28deb995f90 <col:20> 'int' 0
|   |-IfStmt 0x28deb996218 <line:1603:5, line:1604:14>
|   | |-OpaqueValueExpr 0x28deb996200 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x28deb9961e8 <col:9, col:14> 'err' 0x28deb996198
|   |-IfStmt 0x28deb9962e8 <line:1606:5, line:1607:14>
|   | |-OpaqueValueExpr 0x28deb9962d0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x28deb9962b8 <col:9, col:14> 'err' 0x28deb996198
|   |-IfStmt 0x28deb9963d8 <line:1609:5, line:1610:14>
|   | |-OpaqueValueExpr 0x28deb9963c0 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x28deb9963a8 <col:9, col:14> 'err' 0x28deb996198
|   |-IfStmt 0x28deb9966d0 <line:1613:5, line:1614:14>
|   | |-OpaqueValueExpr 0x28deb9966b8 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x28deb9966a0 <col:9, col:14> 'err' 0x28deb996198
|   |-IfStmt 0x28deb9968e8 <line:1615:5, line:1616:14>
|   | |-BinaryOperator 0x28deb9968b0 <line:1615:9, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'int' '=='
|   | | |-ParenExpr 0x28deb9967f0 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1615:9, col:39> 'NISTP224_PRE_COMP *'
|   | | | `-BinaryOperator 0x28deb9967d0 <col:10, col:38> 'NISTP224_PRE_COMP *' '='
|   | | |   |-DeclRefExpr 0x28deb9966e8 <col:10> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   | | |   `-CallExpr 0x28deb9967b0 <col:16, col:38> 'NISTP224_PRE_COMP *'
|   | | |     `-ImplicitCastExpr 0x28deb996798 <col:16> 'NISTP224_PRE_COMP *(*)()' <FunctionToPointerDecay>
|   | | |       `-DeclRefExpr 0x28deb996720 <col:16> 'NISTP224_PRE_COMP *()' Function 0x28deb9911c8 'nistp224_pre_comp_new' 'NISTP224_PRE_COMP *()'
|   | | `-ImplicitCastExpr 0x28deb996898 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'NISTP224_PRE_COMP *' <BitCast>
|   | |   `-ParenExpr 0x28deb996878 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x28deb996850 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x28deb996810 <col:26> 'int' 0
|   | `-GotoStmt 0x28deb9968d0 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1616:9, col:14> 'err' 0x28deb996198
|   |-IfStmt 0x28deb996c18 <line:1620:5, line:1623:5>
|   | |-OpaqueValueExpr 0x28deb996c00 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x28deb996be0 <line:1620:69, line:1623:5>
|   |   |-CallExpr 0x28deb996ae0 <line:1621:9, col:62> 'void *'
|   |   | |-ImplicitCastExpr 0x28deb996ac8 <col:9> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb996948 <col:9> 'void *(void *, const void *, unsigned long long)' Function 0x28deb745cc8 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x28deb996b30 <col:16, col:21> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x28deb996b18 <col:16, col:21> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   `-MemberExpr 0x28deb9969a0 <col:16, col:21> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     `-ImplicitCastExpr 0x28deb996988 <col:16> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x28deb996968 <col:16> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |-ImplicitCastExpr 0x28deb996b60 <col:33> 'const void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x28deb996b48 <col:33> 'const felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   `-DeclRefExpr 0x28deb9969d0 <col:33> 'const felem [2][16][3]' lvalue Var 0x28deb7748e8 'gmul' 'const felem [2][16][3]'
|   |   | `-UnaryExprOrTypeTraitExpr 0x28deb996a78 <col:39, col:61> 'unsigned long long' sizeof
|   |   |   `-ParenExpr 0x28deb996a58 <col:45, col:61> 'felem [2][16][3]' lvalue
|   |   |     `-MemberExpr 0x28deb996a28 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698 non_odr_use_unevaluated
|   |   |       `-ImplicitCastExpr 0x28deb996a10 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x28deb9969f0 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *' non_odr_use_unevaluated
|   |   `-GotoStmt 0x28deb996bc8 <line:1622:9, col:14> 'done' 0x28deb996b78
|   |-IfStmt 0x28deb9ab1b0 <line:1624:5, line:1627:14>
|   | |-OpaqueValueExpr 0x28deb9ab198 <<invalid sloc>> '_Bool'
|   | `-GotoStmt 0x28deb9ab180 <col:9, col:14> 'err' 0x28deb996198
|   |-ForStmt 0x28deb9a8560 <line:1632:5, line:1655:5>
|   | |-BinaryOperator 0x28deb9ab228 <line:1632:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x28deb9ab1c8 <col:10> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   | | `-IntegerLiteral 0x28deb9ab200 <col:14> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x28deb9ab2a8 <col:17, col:22> 'int' '<='
|   | | |-ImplicitCastExpr 0x28deb9ab290 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb9ab248 <col:17> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   | | `-IntegerLiteral 0x28deb9ab268 <col:22> 'int' 8
|   | |-CompoundAssignOperator 0x28deb9ab328 <col:25, col:31> 'int' '<<=' ComputeLHSTy='int' ComputeResultTy='int'
|   | | |-DeclRefExpr 0x28deb9ab2c8 <col:25> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   | | `-IntegerLiteral 0x28deb9ab2e8 <col:31> 'int' 1
|   | `-CompoundStmt 0x28deb9a8528 <col:34, line:1655:5>
|   |   |-CallExpr 0x28deb9abd20 <line:1633:9, line:1635:72> 'void'
|   |   | |-ImplicitCastExpr 0x28deb9abd08 <line:1633:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb9ab358 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x28deb87e7f8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb9abd70 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9ab4f0 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9ab4d8 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9ab490 <col:22, col:42> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9ab460 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9ab420 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9ab408 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9ab3b0 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9ab398 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9ab378 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x28deb9ab3e0 <col:38> 'int' 1
|   |   | |   |   `-ImplicitCastExpr 0x28deb9ab478 <col:41> 'int' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x28deb9ab440 <col:41> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   `-IntegerLiteral 0x28deb9ab4b0 <col:44> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9abd88 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9ab688 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9ab670 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9ab628 <col:48, col:68> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9ab5f8 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9ab5b8 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9ab5a0 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9ab548 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9ab530 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9ab510 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x28deb9ab578 <col:64> 'int' 1
|   |   | |   |   `-ImplicitCastExpr 0x28deb9ab610 <col:67> 'int' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x28deb9ab5d8 <col:67> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   `-IntegerLiteral 0x28deb9ab648 <col:70> 'int' 1
|   |   | |-ImplicitCastExpr 0x28deb9abda0 <line:1634:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9ab820 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9ab808 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9ab7c0 <col:22, col:42> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9ab790 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9ab750 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9ab738 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9ab6e0 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9ab6c8 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9ab6a8 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x28deb9ab710 <col:38> 'int' 1
|   |   | |   |   `-ImplicitCastExpr 0x28deb9ab7a8 <col:41> 'int' <LValueToRValue>
|   |   | |   |     `-DeclRefExpr 0x28deb9ab770 <col:41> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   `-IntegerLiteral 0x28deb9ab7e0 <col:44> 'int' 2
|   |   | |-ImplicitCastExpr 0x28deb9abdd0 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9abdb8 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9ab9b8 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9ab9a0 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9ab958 <col:48, col:68> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9ab928 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9ab8e8 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9ab8d0 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9ab878 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9ab860 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9ab840 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-IntegerLiteral 0x28deb9ab8a8 <col:64> 'int' 0
|   |   | |     |   `-ImplicitCastExpr 0x28deb9ab940 <col:67> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x28deb9ab908 <col:67> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     `-IntegerLiteral 0x28deb9ab978 <col:70> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9abe00 <line:1635:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9abde8 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9abb50 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9abb38 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9abaf0 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9abac0 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9aba80 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9aba68 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9aba10 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9ab9f8 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9ab9d8 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-IntegerLiteral 0x28deb9aba40 <col:38> 'int' 0
|   |   | |     |   `-ImplicitCastExpr 0x28deb9abad8 <col:41> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x28deb9abaa0 <col:41> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     `-IntegerLiteral 0x28deb9abb10 <col:44> 'int' 1
|   |   | `-ImplicitCastExpr 0x28deb9abe30 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb9abe18 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x28deb9abce8 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x28deb9abcd0 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x28deb9abc88 <col:48, col:68> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x28deb9abc58 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x28deb9abc18 <col:48, col:65> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x28deb9abc00 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x28deb9abba8 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |       |   |   |   `-ImplicitCastExpr 0x28deb9abb90 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x28deb9abb70 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-IntegerLiteral 0x28deb9abbd8 <col:64> 'int' 0
|   |   |       |   `-ImplicitCastExpr 0x28deb9abc70 <col:67> 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x28deb9abc38 <col:67> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |       `-IntegerLiteral 0x28deb9abca8 <col:70> 'int' 2
|   |   |-ForStmt 0x28deb9aca88 <line:1636:9, line:1640:9>
|   |   | |-BinaryOperator 0x28deb9abea8 <line:1636:14, col:18> 'int' '='
|   |   | | |-DeclRefExpr 0x28deb9abe48 <col:14> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |   | | `-IntegerLiteral 0x28deb9abe80 <col:18> 'int' 0
|   |   | |-<<<NULL>>>
|   |   | |-BinaryOperator 0x28deb9abf28 <col:21, col:25> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x28deb9abf10 <col:21> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x28deb9abec8 <col:21> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |   | | `-IntegerLiteral 0x28deb9abee8 <col:25> 'int' 27
|   |   | |-UnaryOperator 0x28deb9abf68 <col:29, col:31> 'int' prefix '++'
|   |   | | `-DeclRefExpr 0x28deb9abf48 <col:31> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |   | `-CompoundStmt 0x28deb9aca70 <col:34, line:1640:9>
|   |   |   `-CallExpr 0x28deb9ac948 <line:1637:13, line:1639:76> 'void'
|   |   |     |-ImplicitCastExpr 0x28deb9ac930 <line:1637:13> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x28deb9abf80 <col:13> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x28deb87e7f8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   |     |-ImplicitCastExpr 0x28deb9ac998 <col:26, col:49> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x28deb9ac118 <col:26, col:49> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x28deb9ac100 <col:26, col:46> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-ArraySubscriptExpr 0x28deb9ac0b8 <col:26, col:46> 'felem [3]' lvalue
|   |   |     |   |   |-ImplicitCastExpr 0x28deb9ac088 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |     |   |   | `-ArraySubscriptExpr 0x28deb9ac048 <col:26, col:43> 'felem [16][3]' lvalue
|   |   |     |   |   |   |-ImplicitCastExpr 0x28deb9ac030 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |     |   |   |   | `-MemberExpr 0x28deb9abfd8 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |     |   |   |   |   `-ImplicitCastExpr 0x28deb9abfc0 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |     |   |   |   |     `-DeclRefExpr 0x28deb9abfa0 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |     |   |   |   `-IntegerLiteral 0x28deb9ac008 <col:42> 'int' 1
|   |   |     |   |   `-ImplicitCastExpr 0x28deb9ac0a0 <col:45> 'int' <LValueToRValue>
|   |   |     |   |     `-DeclRefExpr 0x28deb9ac068 <col:45> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |     |   `-IntegerLiteral 0x28deb9ac0d8 <col:48> 'int' 0
|   |   |     |-ImplicitCastExpr 0x28deb9ac9b0 <col:52, col:75> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x28deb9ac2b0 <col:52, col:75> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x28deb9ac298 <col:52, col:72> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-ArraySubscriptExpr 0x28deb9ac250 <col:52, col:72> 'felem [3]' lvalue
|   |   |     |   |   |-ImplicitCastExpr 0x28deb9ac220 <col:52, col:69> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |     |   |   | `-ArraySubscriptExpr 0x28deb9ac1e0 <col:52, col:69> 'felem [16][3]' lvalue
|   |   |     |   |   |   |-ImplicitCastExpr 0x28deb9ac1c8 <col:52, col:57> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |     |   |   |   | `-MemberExpr 0x28deb9ac170 <col:52, col:57> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |     |   |   |   |   `-ImplicitCastExpr 0x28deb9ac158 <col:52> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |     |   |   |   |     `-DeclRefExpr 0x28deb9ac138 <col:52> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |     |   |   |   `-IntegerLiteral 0x28deb9ac1a0 <col:68> 'int' 1
|   |   |     |   |   `-ImplicitCastExpr 0x28deb9ac238 <col:71> 'int' <LValueToRValue>
|   |   |     |   |     `-DeclRefExpr 0x28deb9ac200 <col:71> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |     |   `-IntegerLiteral 0x28deb9ac270 <col:74> 'int' 1
|   |   |     |-ImplicitCastExpr 0x28deb9ac9c8 <line:1638:26, col:49> 'limb *' <ArrayToPointerDecay>
|   |   |     | `-ArraySubscriptExpr 0x28deb9ac448 <col:26, col:49> 'felem':'limb [4]' lvalue
|   |   |     |   |-ImplicitCastExpr 0x28deb9ac430 <col:26, col:46> 'felem *' <ArrayToPointerDecay>
|   |   |     |   | `-ArraySubscriptExpr 0x28deb9ac3e8 <col:26, col:46> 'felem [3]' lvalue
|   |   |     |   |   |-ImplicitCastExpr 0x28deb9ac3b8 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |     |   |   | `-ArraySubscriptExpr 0x28deb9ac378 <col:26, col:43> 'felem [16][3]' lvalue
|   |   |     |   |   |   |-ImplicitCastExpr 0x28deb9ac360 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |     |   |   |   | `-MemberExpr 0x28deb9ac308 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |     |   |   |   |   `-ImplicitCastExpr 0x28deb9ac2f0 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |     |   |   |   |     `-DeclRefExpr 0x28deb9ac2d0 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |     |   |   |   `-IntegerLiteral 0x28deb9ac338 <col:42> 'int' 1
|   |   |     |   |   `-ImplicitCastExpr 0x28deb9ac3d0 <col:45> 'int' <LValueToRValue>
|   |   |     |   |     `-DeclRefExpr 0x28deb9ac398 <col:45> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |     |   `-IntegerLiteral 0x28deb9ac408 <col:48> 'int' 2
|   |   |     |-ImplicitCastExpr 0x28deb9ac9f8 <col:52, col:75> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x28deb9ac9e0 <col:52, col:75> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x28deb9ac5e0 <col:52, col:75> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x28deb9ac5c8 <col:52, col:72> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-ArraySubscriptExpr 0x28deb9ac580 <col:52, col:72> 'felem [3]' lvalue
|   |   |     |     |   |-ImplicitCastExpr 0x28deb9ac550 <col:52, col:69> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |     |     |   | `-ArraySubscriptExpr 0x28deb9ac510 <col:52, col:69> 'felem [16][3]' lvalue
|   |   |     |     |   |   |-ImplicitCastExpr 0x28deb9ac4f8 <col:52, col:57> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |     |     |   |   | `-MemberExpr 0x28deb9ac4a0 <col:52, col:57> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |     |     |   |   |   `-ImplicitCastExpr 0x28deb9ac488 <col:52> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |     |     |   |   |     `-DeclRefExpr 0x28deb9ac468 <col:52> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |     |     |   |   `-IntegerLiteral 0x28deb9ac4d0 <col:68> 'int' 1
|   |   |     |     |   `-ImplicitCastExpr 0x28deb9ac568 <col:71> 'int' <LValueToRValue>
|   |   |     |     |     `-DeclRefExpr 0x28deb9ac530 <col:71> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |     |     `-IntegerLiteral 0x28deb9ac5a0 <col:74> 'int' 0
|   |   |     |-ImplicitCastExpr 0x28deb9aca28 <line:1639:26, col:49> 'const limb *':'const limb *' <NoOp>
|   |   |     | `-ImplicitCastExpr 0x28deb9aca10 <col:26, col:49> 'limb *' <ArrayToPointerDecay>
|   |   |     |   `-ArraySubscriptExpr 0x28deb9ac778 <col:26, col:49> 'felem':'limb [4]' lvalue
|   |   |     |     |-ImplicitCastExpr 0x28deb9ac760 <col:26, col:46> 'felem *' <ArrayToPointerDecay>
|   |   |     |     | `-ArraySubscriptExpr 0x28deb9ac718 <col:26, col:46> 'felem [3]' lvalue
|   |   |     |     |   |-ImplicitCastExpr 0x28deb9ac6e8 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |     |     |   | `-ArraySubscriptExpr 0x28deb9ac6a8 <col:26, col:43> 'felem [16][3]' lvalue
|   |   |     |     |   |   |-ImplicitCastExpr 0x28deb9ac690 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |     |     |   |   | `-MemberExpr 0x28deb9ac638 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |     |     |   |   |   `-ImplicitCastExpr 0x28deb9ac620 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |     |     |   |   |     `-DeclRefExpr 0x28deb9ac600 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |     |     |   |   `-IntegerLiteral 0x28deb9ac668 <col:42> 'int' 1
|   |   |     |     |   `-ImplicitCastExpr 0x28deb9ac700 <col:45> 'int' <LValueToRValue>
|   |   |     |     |     `-DeclRefExpr 0x28deb9ac6c8 <col:45> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |     |     `-IntegerLiteral 0x28deb9ac738 <col:48> 'int' 1
|   |   |     `-ImplicitCastExpr 0x28deb9aca58 <col:52, col:75> 'const limb *':'const limb *' <NoOp>
|   |   |       `-ImplicitCastExpr 0x28deb9aca40 <col:52, col:75> 'limb *' <ArrayToPointerDecay>
|   |   |         `-ArraySubscriptExpr 0x28deb9ac910 <col:52, col:75> 'felem':'limb [4]' lvalue
|   |   |           |-ImplicitCastExpr 0x28deb9ac8f8 <col:52, col:72> 'felem *' <ArrayToPointerDecay>
|   |   |           | `-ArraySubscriptExpr 0x28deb9ac8b0 <col:52, col:72> 'felem [3]' lvalue
|   |   |           |   |-ImplicitCastExpr 0x28deb9ac880 <col:52, col:69> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |           |   | `-ArraySubscriptExpr 0x28deb9ac840 <col:52, col:69> 'felem [16][3]' lvalue
|   |   |           |   |   |-ImplicitCastExpr 0x28deb9ac828 <col:52, col:57> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |           |   |   | `-MemberExpr 0x28deb9ac7d0 <col:52, col:57> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |           |   |   |   `-ImplicitCastExpr 0x28deb9ac7b8 <col:52> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |           |   |   |     `-DeclRefExpr 0x28deb9ac798 <col:52> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |           |   |   `-IntegerLiteral 0x28deb9ac800 <col:68> 'int' 1
|   |   |           |   `-ImplicitCastExpr 0x28deb9ac898 <col:71> 'int' <LValueToRValue>
|   |   |           |     `-DeclRefExpr 0x28deb9ac860 <col:71> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |           `-IntegerLiteral 0x28deb9ac8d0 <col:74> 'int' 2
|   |   |-IfStmt 0x28deb9acb48 <line:1641:9, line:1642:13>
|   |   | |-BinaryOperator 0x28deb9acb20 <line:1641:13, col:18> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x28deb9acb08 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x28deb9acac0 <col:13> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | | `-IntegerLiteral 0x28deb9acae0 <col:18> 'int' 8
|   |   | `-BreakStmt 0x28deb9acb40 <line:1642:13>
|   |   |-CallExpr 0x28deb9a75f0 <line:1643:9, line:1646:72> 'void'
|   |   | |-ImplicitCastExpr 0x28deb9a75d8 <line:1643:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb9acb60 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x28deb87e7f8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb9a7640 <col:22, col:49> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9acd40 <col:22, col:49> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9acd28 <col:22, col:46> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9acce0 <col:22, col:46> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9accc8 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9acc28 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9acc10 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9acbb8 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9acba0 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9acb80 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x28deb9acbe8 <col:38> 'int' 0
|   |   | |   |   `-BinaryOperator 0x28deb9acca8 <col:41, col:45> 'int' '*'
|   |   | |   |     |-IntegerLiteral 0x28deb9acc48 <col:41> 'int' 2
|   |   | |   |     `-ImplicitCastExpr 0x28deb9acc90 <col:45> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x28deb9acc70 <col:45> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   `-IntegerLiteral 0x28deb9acd00 <col:48> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9a7658 <line:1644:22, col:49> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9a6f10 <col:22, col:49> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9a6ef8 <col:22, col:46> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9a6eb0 <col:22, col:46> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9a6e98 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9a6df8 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9a6de0 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9a6d88 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9a6d70 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9acd60 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x28deb9a6db8 <col:38> 'int' 0
|   |   | |   |   `-BinaryOperator 0x28deb9a6e78 <col:41, col:45> 'int' '*'
|   |   | |   |     |-IntegerLiteral 0x28deb9a6e18 <col:41> 'int' 2
|   |   | |   |     `-ImplicitCastExpr 0x28deb9a6e60 <col:45> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x28deb9a6e40 <col:45> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   `-IntegerLiteral 0x28deb9a6ed0 <col:48> 'int' 1
|   |   | |-ImplicitCastExpr 0x28deb9a7670 <line:1645:22, col:49> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9a70f0 <col:22, col:49> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9a70d8 <col:22, col:46> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9a7090 <col:22, col:46> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9a7078 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9a6fd8 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9a6fc0 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9a6f68 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9a6f50 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9a6f30 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-IntegerLiteral 0x28deb9a6f98 <col:38> 'int' 0
|   |   | |   |   `-BinaryOperator 0x28deb9a7058 <col:41, col:45> 'int' '*'
|   |   | |   |     |-IntegerLiteral 0x28deb9a6ff8 <col:41> 'int' 2
|   |   | |   |     `-ImplicitCastExpr 0x28deb9a7040 <col:45> 'int' <LValueToRValue>
|   |   | |   |       `-DeclRefExpr 0x28deb9a7020 <col:45> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   `-IntegerLiteral 0x28deb9a70b0 <col:48> 'int' 2
|   |   | |-ImplicitCastExpr 0x28deb9a76a0 <col:52, col:75> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9a7688 <col:52, col:75> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9a7288 <col:52, col:75> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9a7270 <col:52, col:72> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9a7228 <col:52, col:72> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9a71f8 <col:52, col:69> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9a71b8 <col:52, col:69> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9a71a0 <col:52, col:57> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9a7148 <col:52, col:57> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9a7130 <col:52> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9a7110 <col:52> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-IntegerLiteral 0x28deb9a7178 <col:68> 'int' 1
|   |   | |     |   `-ImplicitCastExpr 0x28deb9a7210 <col:71> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x28deb9a71d8 <col:71> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     `-IntegerLiteral 0x28deb9a7248 <col:74> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9a76d0 <line:1646:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9a76b8 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9a7420 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9a7408 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9a73c0 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9a7390 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9a7350 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9a7338 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9a72e0 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9a72c8 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9a72a8 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-IntegerLiteral 0x28deb9a7310 <col:38> 'int' 1
|   |   | |     |   `-ImplicitCastExpr 0x28deb9a73a8 <col:41> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x28deb9a7370 <col:41> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     `-IntegerLiteral 0x28deb9a73e0 <col:44> 'int' 1
|   |   | `-ImplicitCastExpr 0x28deb9a7700 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb9a76e8 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x28deb9a75b8 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x28deb9a75a0 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x28deb9a7558 <col:48, col:68> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x28deb9a7528 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x28deb9a74e8 <col:48, col:65> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x28deb9a74d0 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x28deb9a7478 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |       |   |   |   `-ImplicitCastExpr 0x28deb9a7460 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x28deb9a7440 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-IntegerLiteral 0x28deb9a74a8 <col:64> 'int' 1
|   |   |       |   `-ImplicitCastExpr 0x28deb9a7540 <col:67> 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x28deb9a7508 <col:67> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |       `-IntegerLiteral 0x28deb9a7578 <col:70> 'int' 2
|   |   `-ForStmt 0x28deb9a84f0 <line:1647:9, line:1654:9>
|   |     |-BinaryOperator 0x28deb9a7760 <line:1647:14, col:18> 'int' '='
|   |     | |-DeclRefExpr 0x28deb9a7718 <col:14> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |     | `-IntegerLiteral 0x28deb9a7738 <col:18> 'int' 0
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x28deb9a77e0 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x28deb9a77c8 <col:21> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x28deb9a7780 <col:21> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |     | `-IntegerLiteral 0x28deb9a77a0 <col:25> 'int' 27
|   |     |-UnaryOperator 0x28deb9a7820 <col:29, col:31> 'int' prefix '++'
|   |     | `-DeclRefExpr 0x28deb9a7800 <col:31> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |     `-CompoundStmt 0x28deb9a84d8 <col:34, line:1654:9>
|   |       `-CallExpr 0x28deb9a83b0 <line:1648:13, line:1653:54> 'void'
|   |         |-ImplicitCastExpr 0x28deb9a8398 <line:1648:13> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x28deb9a7838 <col:13> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)' Function 0x28deb87e7f8 'point_double' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *)'
|   |         |-ImplicitCastExpr 0x28deb9a8400 <col:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x28deb9a7a18 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x28deb9a7a00 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x28deb9a79b8 <col:26, col:50> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x28deb9a79a0 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x28deb9a7900 <col:26, col:43> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x28deb9a78e8 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x28deb9a7890 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |   |   |   |   `-ImplicitCastExpr 0x28deb9a7878 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x28deb9a7858 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-IntegerLiteral 0x28deb9a78c0 <col:42> 'int' 0
|   |         |   |   `-BinaryOperator 0x28deb9a7980 <col:45, col:49> 'int' '*'
|   |         |   |     |-IntegerLiteral 0x28deb9a7920 <col:45> 'int' 2
|   |         |   |     `-ImplicitCastExpr 0x28deb9a7968 <col:49> 'int' <LValueToRValue>
|   |         |   |       `-DeclRefExpr 0x28deb9a7948 <col:49> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |   `-IntegerLiteral 0x28deb9a79d8 <col:52> 'int' 0
|   |         |-ImplicitCastExpr 0x28deb9a8418 <line:1649:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x28deb9a7bf8 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x28deb9a7be0 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x28deb9a7b98 <col:26, col:50> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x28deb9a7b80 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x28deb9a7ae0 <col:26, col:43> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x28deb9a7ac8 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x28deb9a7a70 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |   |   |   |   `-ImplicitCastExpr 0x28deb9a7a58 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x28deb9a7a38 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-IntegerLiteral 0x28deb9a7aa0 <col:42> 'int' 0
|   |         |   |   `-BinaryOperator 0x28deb9a7b60 <col:45, col:49> 'int' '*'
|   |         |   |     |-IntegerLiteral 0x28deb9a7b00 <col:45> 'int' 2
|   |         |   |     `-ImplicitCastExpr 0x28deb9a7b48 <col:49> 'int' <LValueToRValue>
|   |         |   |       `-DeclRefExpr 0x28deb9a7b28 <col:49> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |   `-IntegerLiteral 0x28deb9a7bb8 <col:52> 'int' 1
|   |         |-ImplicitCastExpr 0x28deb9a8430 <line:1650:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x28deb9a7dd8 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x28deb9a7dc0 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x28deb9a7d78 <col:26, col:50> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x28deb9a7d60 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x28deb9a7cc0 <col:26, col:43> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x28deb9a7ca8 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x28deb9a7c50 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |   |   |   |   `-ImplicitCastExpr 0x28deb9a7c38 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x28deb9a7c18 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-IntegerLiteral 0x28deb9a7c80 <col:42> 'int' 0
|   |         |   |   `-BinaryOperator 0x28deb9a7d40 <col:45, col:49> 'int' '*'
|   |         |   |     |-IntegerLiteral 0x28deb9a7ce0 <col:45> 'int' 2
|   |         |   |     `-ImplicitCastExpr 0x28deb9a7d28 <col:49> 'int' <LValueToRValue>
|   |         |   |       `-DeclRefExpr 0x28deb9a7d08 <col:49> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |   `-IntegerLiteral 0x28deb9a7d98 <col:52> 'int' 2
|   |         |-ImplicitCastExpr 0x28deb9a8460 <line:1651:26, col:53> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x28deb9a8448 <col:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x28deb9a7fb8 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x28deb9a7fa0 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x28deb9a7f58 <col:26, col:50> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x28deb9a7f40 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x28deb9a7ea0 <col:26, col:43> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x28deb9a7e88 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x28deb9a7e30 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |     |   |   |   `-ImplicitCastExpr 0x28deb9a7e18 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x28deb9a7df8 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-IntegerLiteral 0x28deb9a7e60 <col:42> 'int' 0
|   |         |     |   `-BinaryOperator 0x28deb9a7f20 <col:45, col:49> 'int' '*'
|   |         |     |     |-IntegerLiteral 0x28deb9a7ec0 <col:45> 'int' 2
|   |         |     |     `-ImplicitCastExpr 0x28deb9a7f08 <col:49> 'int' <LValueToRValue>
|   |         |     |       `-DeclRefExpr 0x28deb9a7ee8 <col:49> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |     `-IntegerLiteral 0x28deb9a7f78 <col:52> 'int' 0
|   |         |-ImplicitCastExpr 0x28deb9a8490 <line:1652:26, col:53> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x28deb9a8478 <col:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x28deb9a8198 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x28deb9a8180 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x28deb9a8138 <col:26, col:50> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x28deb9a8120 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x28deb9a8080 <col:26, col:43> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x28deb9a8068 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x28deb9a8010 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |     |   |   |   `-ImplicitCastExpr 0x28deb9a7ff8 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x28deb9a7fd8 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-IntegerLiteral 0x28deb9a8040 <col:42> 'int' 0
|   |         |     |   `-BinaryOperator 0x28deb9a8100 <col:45, col:49> 'int' '*'
|   |         |     |     |-IntegerLiteral 0x28deb9a80a0 <col:45> 'int' 2
|   |         |     |     `-ImplicitCastExpr 0x28deb9a80e8 <col:49> 'int' <LValueToRValue>
|   |         |     |       `-DeclRefExpr 0x28deb9a80c8 <col:49> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |     `-IntegerLiteral 0x28deb9a8158 <col:52> 'int' 1
|   |         `-ImplicitCastExpr 0x28deb9a84c0 <line:1653:26, col:53> 'const limb *':'const limb *' <NoOp>
|   |           `-ImplicitCastExpr 0x28deb9a84a8 <col:26, col:53> 'limb *' <ArrayToPointerDecay>
|   |             `-ArraySubscriptExpr 0x28deb9a8378 <col:26, col:53> 'felem':'limb [4]' lvalue
|   |               |-ImplicitCastExpr 0x28deb9a8360 <col:26, col:50> 'felem *' <ArrayToPointerDecay>
|   |               | `-ArraySubscriptExpr 0x28deb9a8318 <col:26, col:50> 'felem [3]' lvalue
|   |               |   |-ImplicitCastExpr 0x28deb9a8300 <col:26, col:43> 'felem (*)[3]' <ArrayToPointerDecay>
|   |               |   | `-ArraySubscriptExpr 0x28deb9a8260 <col:26, col:43> 'felem [16][3]' lvalue
|   |               |   |   |-ImplicitCastExpr 0x28deb9a8248 <col:26, col:31> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |               |   |   | `-MemberExpr 0x28deb9a81f0 <col:26, col:31> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |               |   |   |   `-ImplicitCastExpr 0x28deb9a81d8 <col:26> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |               |   |   |     `-DeclRefExpr 0x28deb9a81b8 <col:26> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |               |   |   `-IntegerLiteral 0x28deb9a8220 <col:42> 'int' 0
|   |               |   `-BinaryOperator 0x28deb9a82e0 <col:45, col:49> 'int' '*'
|   |               |     |-IntegerLiteral 0x28deb9a8280 <col:45> 'int' 2
|   |               |     `-ImplicitCastExpr 0x28deb9a82c8 <col:49> 'int' <LValueToRValue>
|   |               |       `-DeclRefExpr 0x28deb9a82a8 <col:49> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |               `-IntegerLiteral 0x28deb9a8338 <col:52> 'int' 2
|   |-ForStmt 0x28deb9a61c0 <line:1656:5, line:1697:5>
|   | |-BinaryOperator 0x28deb9a85e0 <line:1656:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x28deb9a8598 <col:10> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   | | `-IntegerLiteral 0x28deb9a85b8 <col:14> 'int' 0
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x28deb9a8660 <col:17, col:21> 'int' '<'
|   | | |-ImplicitCastExpr 0x28deb9a8648 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x28deb9a8600 <col:17> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   | | `-IntegerLiteral 0x28deb9a8620 <col:21> 'int' 2
|   | |-UnaryOperator 0x28deb9a86a0 <col:24, col:25> 'int' postfix '++'
|   | | `-DeclRefExpr 0x28deb9a8680 <col:24> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   | `-CompoundStmt 0x28deb9a6180 <col:29, line:1697:5>
|   |   |-CallExpr 0x28deb9a89e0 <line:1658:9, col:71> 'void *'
|   |   | |-ImplicitCastExpr 0x28deb9a89c8 <col:9> 'void *(*)(void *, int, unsigned long long)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb9a86b8 <col:9> 'void *(void *, int, unsigned long long)' Function 0x28deb73e6b0 'memset' 'void *(void *, int, unsigned long long)'
|   |   | |-ImplicitCastExpr 0x28deb9a8a30 <col:16, col:36> 'void *' <BitCast>
|   |   | | `-ImplicitCastExpr 0x28deb9a8a18 <col:16, col:36> 'felem *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9a87f0 <col:16, col:36> 'felem [3]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9a87d8 <col:16, col:33> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9a8790 <col:16, col:33> 'felem [16][3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9a8760 <col:16, col:21> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   | `-MemberExpr 0x28deb9a8710 <col:16, col:21> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9a86f8 <col:16> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9a86d8 <col:16> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   `-ImplicitCastExpr 0x28deb9a8778 <col:32> 'int' <LValueToRValue>
|   |   | |     |     `-DeclRefExpr 0x28deb9a8740 <col:32> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     `-IntegerLiteral 0x28deb9a87b0 <col:35> 'int' 0
|   |   | |-IntegerLiteral 0x28deb9a8810 <col:39> 'int' 0
|   |   | `-UnaryExprOrTypeTraitExpr 0x28deb9a8990 <col:42, col:70> 'unsigned long long' sizeof
|   |   |   `-ParenExpr 0x28deb9a8970 <col:48, col:70> 'felem [3]' lvalue
|   |   |     `-ArraySubscriptExpr 0x28deb9a8950 <col:49, col:69> 'felem [3]' lvalue
|   |   |       |-ImplicitCastExpr 0x28deb9a8938 <col:49, col:66> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x28deb9a88f0 <col:49, col:66> 'felem [16][3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x28deb9a88c0 <col:49, col:54> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   | `-MemberExpr 0x28deb9a8870 <col:49, col:54> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698 non_odr_use_unevaluated
|   |   |       |   |   `-ImplicitCastExpr 0x28deb9a8858 <col:49> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x28deb9a8838 <col:49> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *' non_odr_use_unevaluated
|   |   |       |   `-ImplicitCastExpr 0x28deb9a88d8 <col:65> 'int' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x28deb9a88a0 <col:65> 'int' lvalue Var 0x28deb995aa8 'i' 'int' non_odr_use_unevaluated
|   |   |       `-IntegerLiteral 0x28deb9a8910 <col:68> 'int' 0
|   |   |-CallExpr 0x28deb9b1960 <line:1661:9, line:1665:43> 'void'
|   |   | |-ImplicitCastExpr 0x28deb9b1948 <line:1661:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb9a8a48 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x28deb8814b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb9b19d0 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9a8be0 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9a8bc8 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9a8b80 <col:19, col:39> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9a8b68 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9a8b20 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9a8af0 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9a8aa0 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9a8a88 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9a8a68 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9a8b08 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9a8ad0 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9a8b40 <col:38> 'int' 6
|   |   | |   `-IntegerLiteral 0x28deb9a8ba0 <col:41> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b19e8 <col:45, col:68> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9b0dd8 <col:45, col:68> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9b0dc0 <col:45, col:65> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9a8d18 <col:45, col:65> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9a8d00 <col:45, col:62> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9a8cb8 <col:45, col:62> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9a8c88 <col:45, col:50> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9a8c38 <col:45, col:50> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9a8c20 <col:45> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9a8c00 <col:45> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9a8ca0 <col:61> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9a8c68 <col:61> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9a8cd8 <col:64> 'int' 6
|   |   | |   `-IntegerLiteral 0x28deb9a8d38 <col:67> 'int' 1
|   |   | |-ImplicitCastExpr 0x28deb9b1a00 <line:1662:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9b0f70 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9b0f58 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9b0f10 <col:19, col:39> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9b0ef8 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9b0eb0 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9b0e80 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9b0e30 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9b0e18 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9b0df8 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9b0e98 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9b0e60 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9b0ed0 <col:38> 'int' 6
|   |   | |   `-IntegerLiteral 0x28deb9b0f30 <col:41> 'int' 2
|   |   | |-ImplicitCastExpr 0x28deb9b1a30 <col:45, col:68> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b1a18 <col:45, col:68> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b1108 <col:45, col:68> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b10f0 <col:45, col:65> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b10a8 <col:45, col:65> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b1090 <col:45, col:62> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b1048 <col:45, col:62> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b1018 <col:45, col:50> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b0fc8 <col:45, col:50> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b0fb0 <col:45> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b0f90 <col:45> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b1030 <col:61> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b0ff8 <col:61> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b1068 <col:64> 'int' 4
|   |   | |     `-IntegerLiteral 0x28deb9b10c8 <col:67> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b1a60 <line:1663:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b1a48 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b12a0 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b1288 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b1240 <col:19, col:39> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b1228 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b11e0 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b11b0 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b1160 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b1148 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b1128 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b11c8 <col:35> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b1190 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b1200 <col:38> 'int' 4
|   |   | |     `-IntegerLiteral 0x28deb9b1260 <col:41> 'int' 1
|   |   | |-ImplicitCastExpr 0x28deb9b1a90 <col:45, col:68> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b1a78 <col:45, col:68> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b1438 <col:45, col:68> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b1420 <col:45, col:65> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b13d8 <col:45, col:65> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b13c0 <col:45, col:62> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b1378 <col:45, col:62> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b1348 <col:45, col:50> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b12f8 <col:45, col:50> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b12e0 <col:45> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b12c0 <col:45> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b1360 <col:61> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b1328 <col:61> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b1398 <col:64> 'int' 4
|   |   | |     `-IntegerLiteral 0x28deb9b13f8 <col:67> 'int' 2
|   |   | |-IntegerLiteral 0x28deb9b1458 <line:1664:19> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b1ac0 <col:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b1aa8 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b15f8 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b15e0 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b1598 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b1580 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b1538 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b1508 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b14b8 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b14a0 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b1480 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b1520 <col:38> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b14e8 <col:38> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b1558 <col:41> 'int' 2
|   |   | |     `-IntegerLiteral 0x28deb9b15b8 <col:44> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b1af0 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b1ad8 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b1790 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b1778 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b1730 <col:48, col:68> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b1718 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b16d0 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b16a0 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b1650 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b1638 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b1618 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b16b8 <col:64> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b1680 <col:64> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b16f0 <col:67> 'int' 2
|   |   | |     `-IntegerLiteral 0x28deb9b1750 <col:70> 'int' 1
|   |   | `-ImplicitCastExpr 0x28deb9b1b20 <line:1665:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb9b1b08 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x28deb9b1928 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x28deb9b1910 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x28deb9b18c8 <col:19, col:39> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x28deb9b18b0 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x28deb9b1868 <col:19, col:36> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x28deb9b1838 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x28deb9b17e8 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |       |   |   |   `-ImplicitCastExpr 0x28deb9b17d0 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x28deb9b17b0 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-ImplicitCastExpr 0x28deb9b1850 <col:35> 'int' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x28deb9b1818 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |       |   `-IntegerLiteral 0x28deb9b1888 <col:38> 'int' 2
|   |   |       `-IntegerLiteral 0x28deb9b18e8 <col:41> 'int' 2
|   |   |-CallExpr 0x28deb9b29f0 <line:1667:9, line:1671:43> 'void'
|   |   | |-ImplicitCastExpr 0x28deb9b29d8 <line:1667:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb9b1b38 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x28deb8814b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb9b2a60 <col:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9b1cd0 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9b1cb8 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9b1c70 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9b1c58 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9b1c10 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9b1be0 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9b1b90 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9b1b78 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9b1b58 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9b1bf8 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9b1bc0 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9b1c30 <col:38> 'int' 10
|   |   | |   `-IntegerLiteral 0x28deb9b1c90 <col:42> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b2a78 <col:46, col:70> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9b1e68 <col:46, col:70> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9b1e50 <col:46, col:67> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9b1e08 <col:46, col:67> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9b1df0 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9b1da8 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9b1d78 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9b1d28 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9b1d10 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9b1cf0 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9b1d90 <col:62> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9b1d58 <col:62> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9b1dc8 <col:65> 'int' 10
|   |   | |   `-IntegerLiteral 0x28deb9b1e28 <col:69> 'int' 1
|   |   | |-ImplicitCastExpr 0x28deb9b2a90 <line:1668:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9b2000 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9b1fe8 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9b1fa0 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9b1f88 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9b1f40 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9b1f10 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9b1ec0 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9b1ea8 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9b1e88 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9b1f28 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9b1ef0 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9b1f60 <col:38> 'int' 10
|   |   | |   `-IntegerLiteral 0x28deb9b1fc0 <col:42> 'int' 2
|   |   | |-ImplicitCastExpr 0x28deb9b2ac0 <col:46, col:69> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b2aa8 <col:46, col:69> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b2198 <col:46, col:69> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b2180 <col:46, col:66> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b2138 <col:46, col:66> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b2120 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b20d8 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b20a8 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b2058 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b2040 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b2020 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b20c0 <col:62> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b2088 <col:62> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b20f8 <col:65> 'int' 8
|   |   | |     `-IntegerLiteral 0x28deb9b2158 <col:68> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b2af0 <line:1669:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b2ad8 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b2330 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b2318 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b22d0 <col:19, col:39> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b22b8 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b2270 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b2240 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b21f0 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b21d8 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b21b8 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b2258 <col:35> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b2220 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b2290 <col:38> 'int' 8
|   |   | |     `-IntegerLiteral 0x28deb9b22f0 <col:41> 'int' 1
|   |   | |-ImplicitCastExpr 0x28deb9b2b20 <col:45, col:68> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b2b08 <col:45, col:68> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b24c8 <col:45, col:68> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b24b0 <col:45, col:65> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b2468 <col:45, col:65> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b2450 <col:45, col:62> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b2408 <col:45, col:62> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b23d8 <col:45, col:50> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b2388 <col:45, col:50> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b2370 <col:45> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b2350 <col:45> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b23f0 <col:61> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b23b8 <col:61> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b2428 <col:64> 'int' 8
|   |   | |     `-IntegerLiteral 0x28deb9b2488 <col:67> 'int' 2
|   |   | |-IntegerLiteral 0x28deb9b24e8 <line:1670:19> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b2b50 <col:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b2b38 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b2688 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b2670 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b2628 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b2610 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b25c8 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b2598 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b2548 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b2530 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b2510 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b25b0 <col:38> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b2578 <col:38> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b25e8 <col:41> 'int' 2
|   |   | |     `-IntegerLiteral 0x28deb9b2648 <col:44> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b2b80 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b2b68 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b2820 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b2808 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b27c0 <col:48, col:68> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b27a8 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b2760 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b2730 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b26e0 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b26c8 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b26a8 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b2748 <col:64> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b2710 <col:64> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b2780 <col:67> 'int' 2
|   |   | |     `-IntegerLiteral 0x28deb9b27e0 <col:70> 'int' 1
|   |   | `-ImplicitCastExpr 0x28deb9b2bb0 <line:1671:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb9b2b98 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x28deb9b29b8 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x28deb9b29a0 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x28deb9b2958 <col:19, col:39> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x28deb9b2940 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x28deb9b28f8 <col:19, col:36> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x28deb9b28c8 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x28deb9b2878 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |       |   |   |   `-ImplicitCastExpr 0x28deb9b2860 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x28deb9b2840 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-ImplicitCastExpr 0x28deb9b28e0 <col:35> 'int' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x28deb9b28a8 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |       |   `-IntegerLiteral 0x28deb9b2918 <col:38> 'int' 2
|   |   |       `-IntegerLiteral 0x28deb9b2978 <col:41> 'int' 2
|   |   |-CallExpr 0x28deb9b3a98 <line:1673:9, line:1677:43> 'void'
|   |   | |-ImplicitCastExpr 0x28deb9b3a80 <line:1673:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb9b2bc8 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x28deb8814b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb9b3b08 <col:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9b2d60 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9b2d48 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9b2d00 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9b2ce8 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9b2ca0 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9b2c70 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9b2c20 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9b2c08 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9b2be8 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9b2c88 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9b2c50 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9b2cc0 <col:38> 'int' 12
|   |   | |   `-IntegerLiteral 0x28deb9b2d20 <col:42> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b3b20 <col:46, col:70> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9b2f10 <col:46, col:70> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9b2ef8 <col:46, col:67> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9b2eb0 <col:46, col:67> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9b2e98 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9b2e50 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9b2e20 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9b2dd0 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9b2da0 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9b2d80 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9b2e38 <col:62> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9b2e00 <col:62> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9b2e70 <col:65> 'int' 12
|   |   | |   `-IntegerLiteral 0x28deb9b2ed0 <col:69> 'int' 1
|   |   | |-ImplicitCastExpr 0x28deb9b3b38 <line:1674:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9b30a8 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9b3090 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9b3048 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9b3030 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9b2fe8 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9b2fb8 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9b2f68 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9b2f50 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9b2f30 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9b2fd0 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9b2f98 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9b3008 <col:38> 'int' 12
|   |   | |   `-IntegerLiteral 0x28deb9b3068 <col:42> 'int' 2
|   |   | |-ImplicitCastExpr 0x28deb9b3b68 <col:46, col:69> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b3b50 <col:46, col:69> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b3240 <col:46, col:69> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b3228 <col:46, col:66> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b31e0 <col:46, col:66> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b31c8 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b3180 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b3150 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b3100 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b30e8 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b30c8 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b3168 <col:62> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b3130 <col:62> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b31a0 <col:65> 'int' 8
|   |   | |     `-IntegerLiteral 0x28deb9b3200 <col:68> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b3b98 <line:1675:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b3b80 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b33d8 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b33c0 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b3378 <col:19, col:39> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b3360 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b3318 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b32e8 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b3298 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b3280 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b3260 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b3300 <col:35> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b32c8 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b3338 <col:38> 'int' 8
|   |   | |     `-IntegerLiteral 0x28deb9b3398 <col:41> 'int' 1
|   |   | |-ImplicitCastExpr 0x28deb9b3bc8 <col:45, col:68> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b3bb0 <col:45, col:68> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b3570 <col:45, col:68> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b3558 <col:45, col:65> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b3510 <col:45, col:65> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b34f8 <col:45, col:62> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b34b0 <col:45, col:62> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b3480 <col:45, col:50> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b3430 <col:45, col:50> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b3418 <col:45> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b33f8 <col:45> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b3498 <col:61> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b3460 <col:61> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b34d0 <col:64> 'int' 8
|   |   | |     `-IntegerLiteral 0x28deb9b3530 <col:67> 'int' 2
|   |   | |-IntegerLiteral 0x28deb9b3590 <line:1676:19> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b3bf8 <col:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b3be0 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b3730 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b3718 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b36d0 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b36b8 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b3670 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b3640 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b35f0 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b35d8 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b35b8 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b3658 <col:38> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b3620 <col:38> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b3690 <col:41> 'int' 4
|   |   | |     `-IntegerLiteral 0x28deb9b36f0 <col:44> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b3c28 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b3c10 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b38c8 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b38b0 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b3868 <col:48, col:68> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b3850 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b3808 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b37d8 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b3788 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b3770 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b3750 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b37f0 <col:64> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b37b8 <col:64> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b3828 <col:67> 'int' 4
|   |   | |     `-IntegerLiteral 0x28deb9b3888 <col:70> 'int' 1
|   |   | `-ImplicitCastExpr 0x28deb9b3c58 <line:1677:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb9b3c40 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x28deb9b3a60 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x28deb9b3a48 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x28deb9b3a00 <col:19, col:39> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x28deb9b39e8 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x28deb9b39a0 <col:19, col:36> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x28deb9b3970 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x28deb9b3920 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |       |   |   |   `-ImplicitCastExpr 0x28deb9b3908 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x28deb9b38e8 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-ImplicitCastExpr 0x28deb9b3988 <col:35> 'int' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x28deb9b3950 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |       |   `-IntegerLiteral 0x28deb9b39c0 <col:38> 'int' 4
|   |   |       `-IntegerLiteral 0x28deb9b3a20 <col:41> 'int' 2
|   |   |-CallExpr 0x28deb9b4b28 <line:1681:9, line:1685:43> 'void'
|   |   | |-ImplicitCastExpr 0x28deb9b4b10 <line:1681:9> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x28deb9b3c70 <col:9> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x28deb8814b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |   | |-ImplicitCastExpr 0x28deb9b4b98 <col:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9b3e08 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9b3df0 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9b3da8 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9b3d90 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9b3d48 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9b3d18 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9b3cc8 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9b3cb0 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9b3c90 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9b3d30 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9b3cf8 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9b3d68 <col:38> 'int' 14
|   |   | |   `-IntegerLiteral 0x28deb9b3dc8 <col:42> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b4bb0 <col:46, col:70> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9b3fa0 <col:46, col:70> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9b3f88 <col:46, col:67> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9b3f40 <col:46, col:67> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9b3f28 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9b3ee0 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9b3eb0 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9b3e60 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9b3e48 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9b3e28 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9b3ec8 <col:62> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9b3e90 <col:62> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9b3f00 <col:65> 'int' 14
|   |   | |   `-IntegerLiteral 0x28deb9b3f60 <col:69> 'int' 1
|   |   | |-ImplicitCastExpr 0x28deb9b4bc8 <line:1682:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | | `-ArraySubscriptExpr 0x28deb9b4138 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |   |-ImplicitCastExpr 0x28deb9b4120 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |   | `-ArraySubscriptExpr 0x28deb9b40d8 <col:19, col:40> 'felem [3]' lvalue
|   |   | |   |   |-ImplicitCastExpr 0x28deb9b40c0 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |   |   | `-ArraySubscriptExpr 0x28deb9b4078 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |   |   |   |-ImplicitCastExpr 0x28deb9b4048 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |   |   |   | `-MemberExpr 0x28deb9b3ff8 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |   |   |   |   `-ImplicitCastExpr 0x28deb9b3fe0 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |   |   |   |     `-DeclRefExpr 0x28deb9b3fc0 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |   |   |   `-ImplicitCastExpr 0x28deb9b4060 <col:35> 'int' <LValueToRValue>
|   |   | |   |   |     `-DeclRefExpr 0x28deb9b4028 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |   |   `-IntegerLiteral 0x28deb9b4098 <col:38> 'int' 14
|   |   | |   `-IntegerLiteral 0x28deb9b40f8 <col:42> 'int' 2
|   |   | |-ImplicitCastExpr 0x28deb9b4bf8 <col:46, col:70> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b4be0 <col:46, col:70> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b42d0 <col:46, col:70> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b42b8 <col:46, col:67> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b4270 <col:46, col:67> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b4258 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b4210 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b41e0 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b4190 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b4178 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b4158 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b41f8 <col:62> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b41c0 <col:62> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b4230 <col:65> 'int' 12
|   |   | |     `-IntegerLiteral 0x28deb9b4290 <col:69> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b4c28 <line:1683:19, col:43> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b4c10 <col:19, col:43> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b4468 <col:19, col:43> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b4450 <col:19, col:40> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b4408 <col:19, col:40> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b43f0 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b43a8 <col:19, col:36> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b4378 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b4328 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b4310 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b42f0 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b4390 <col:35> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b4358 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b43c8 <col:38> 'int' 12
|   |   | |     `-IntegerLiteral 0x28deb9b4428 <col:42> 'int' 1
|   |   | |-ImplicitCastExpr 0x28deb9b4c58 <col:46, col:70> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b4c40 <col:46, col:70> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b4600 <col:46, col:70> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b45e8 <col:46, col:67> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b45a0 <col:46, col:67> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b4588 <col:46, col:63> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b4540 <col:46, col:63> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b4510 <col:46, col:51> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b44c0 <col:46, col:51> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b44a8 <col:46> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b4488 <col:46> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b4528 <col:62> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b44f0 <col:62> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b4560 <col:65> 'int' 12
|   |   | |     `-IntegerLiteral 0x28deb9b45c0 <col:69> 'int' 2
|   |   | |-IntegerLiteral 0x28deb9b4620 <line:1684:19> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b4c88 <col:22, col:45> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b4c70 <col:22, col:45> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b47c0 <col:22, col:45> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b47a8 <col:22, col:42> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b4760 <col:22, col:42> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b4748 <col:22, col:39> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b4700 <col:22, col:39> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b46d0 <col:22, col:27> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b4680 <col:22, col:27> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b4668 <col:22> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b4648 <col:22> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b46e8 <col:38> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b46b0 <col:38> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b4720 <col:41> 'int' 2
|   |   | |     `-IntegerLiteral 0x28deb9b4780 <col:44> 'int' 0
|   |   | |-ImplicitCastExpr 0x28deb9b4cb8 <col:48, col:71> 'const limb *':'const limb *' <NoOp>
|   |   | | `-ImplicitCastExpr 0x28deb9b4ca0 <col:48, col:71> 'limb *' <ArrayToPointerDecay>
|   |   | |   `-ArraySubscriptExpr 0x28deb9b4958 <col:48, col:71> 'felem':'limb [4]' lvalue
|   |   | |     |-ImplicitCastExpr 0x28deb9b4940 <col:48, col:68> 'felem *' <ArrayToPointerDecay>
|   |   | |     | `-ArraySubscriptExpr 0x28deb9b48f8 <col:48, col:68> 'felem [3]' lvalue
|   |   | |     |   |-ImplicitCastExpr 0x28deb9b48e0 <col:48, col:65> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   | |     |   | `-ArraySubscriptExpr 0x28deb9b4898 <col:48, col:65> 'felem [16][3]' lvalue
|   |   | |     |   |   |-ImplicitCastExpr 0x28deb9b4868 <col:48, col:53> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   | |     |   |   | `-MemberExpr 0x28deb9b4818 <col:48, col:53> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   | |     |   |   |   `-ImplicitCastExpr 0x28deb9b4800 <col:48> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   | |     |   |   |     `-DeclRefExpr 0x28deb9b47e0 <col:48> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   | |     |   |   `-ImplicitCastExpr 0x28deb9b4880 <col:64> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x28deb9b4848 <col:64> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   | |     |   `-IntegerLiteral 0x28deb9b48b8 <col:67> 'int' 2
|   |   | |     `-IntegerLiteral 0x28deb9b4918 <col:70> 'int' 1
|   |   | `-ImplicitCastExpr 0x28deb9b4ce8 <line:1685:19, col:42> 'const limb *':'const limb *' <NoOp>
|   |   |   `-ImplicitCastExpr 0x28deb9b4cd0 <col:19, col:42> 'limb *' <ArrayToPointerDecay>
|   |   |     `-ArraySubscriptExpr 0x28deb9b4af0 <col:19, col:42> 'felem':'limb [4]' lvalue
|   |   |       |-ImplicitCastExpr 0x28deb9b4ad8 <col:19, col:39> 'felem *' <ArrayToPointerDecay>
|   |   |       | `-ArraySubscriptExpr 0x28deb9b4a90 <col:19, col:39> 'felem [3]' lvalue
|   |   |       |   |-ImplicitCastExpr 0x28deb9b4a78 <col:19, col:36> 'felem (*)[3]' <ArrayToPointerDecay>
|   |   |       |   | `-ArraySubscriptExpr 0x28deb9b4a30 <col:19, col:36> 'felem [16][3]' lvalue
|   |   |       |   |   |-ImplicitCastExpr 0x28deb9b4a00 <col:19, col:24> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |   |       |   |   | `-MemberExpr 0x28deb9b49b0 <col:19, col:24> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |   |       |   |   |   `-ImplicitCastExpr 0x28deb9b4998 <col:19> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   |       |   |   |     `-DeclRefExpr 0x28deb9b4978 <col:19> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |   |       |   |   `-ImplicitCastExpr 0x28deb9b4a18 <col:35> 'int' <LValueToRValue>
|   |   |       |   |     `-DeclRefExpr 0x28deb9b49e0 <col:35> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |   |       |   `-IntegerLiteral 0x28deb9b4a50 <col:38> 'int' 2
|   |   |       `-IntegerLiteral 0x28deb9b4ab0 <col:41> 'int' 2
|   |   `-ForStmt 0x28deb9a6148 <line:1686:9, line:1696:9>
|   |     |-BinaryOperator 0x28deb9b4d48 <line:1686:14, col:18> 'int' '='
|   |     | |-DeclRefExpr 0x28deb9b4d00 <col:14> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |     | `-IntegerLiteral 0x28deb9b4d20 <col:18> 'int' 1
|   |     |-<<<NULL>>>
|   |     |-BinaryOperator 0x28deb9a4d60 <col:21, col:25> 'int' '<'
|   |     | |-ImplicitCastExpr 0x28deb9b4db0 <col:21> 'int' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x28deb9b4d68 <col:21> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |     | `-IntegerLiteral 0x28deb9b4d88 <col:25> 'int' 8
|   |     |-UnaryOperator 0x28deb9a4da0 <col:28, col:30> 'int' prefix '++'
|   |     | `-DeclRefExpr 0x28deb9a4d80 <col:30> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |     `-CompoundStmt 0x28deb9a6130 <col:33, line:1696:9>
|   |       `-CallExpr 0x28deb9a5f58 <line:1688:13, line:1695:47> 'void'
|   |         |-ImplicitCastExpr 0x28deb9a5f40 <line:1688:13> 'void (*)(limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' <FunctionToPointerDecay>
|   |         | `-DeclRefExpr 0x28deb9a4db8 <col:13> 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)' Function 0x28deb8814b8 'point_add' 'void (limb *, limb *, limb *, const limb *, const limb *, const limb *, const int, const limb *, const limb *, const limb *)'
|   |         |-ImplicitCastExpr 0x28deb9a5fc8 <col:23, col:54> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x28deb9a4ff0 <col:23, col:54> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x28deb9a4fd8 <col:23, col:51> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x28deb9a4f90 <col:23, col:51> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x28deb9a4f78 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x28deb9a4e90 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x28deb9a4e60 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x28deb9a4e10 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |   |   |   |   `-ImplicitCastExpr 0x28deb9a4df8 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x28deb9a4dd8 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-ImplicitCastExpr 0x28deb9a4e78 <col:39> 'int' <LValueToRValue>
|   |         |   |   |     `-DeclRefExpr 0x28deb9a4e40 <col:39> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |   |   `-BinaryOperator 0x28deb9a4f58 <col:42, col:50> 'int' '+'
|   |         |   |     |-BinaryOperator 0x28deb9a4f10 <col:42, col:46> 'int' '*'
|   |         |   |     | |-IntegerLiteral 0x28deb9a4eb0 <col:42> 'int' 2
|   |         |   |     | `-ImplicitCastExpr 0x28deb9a4ef8 <col:46> 'int' <LValueToRValue>
|   |         |   |     |   `-DeclRefExpr 0x28deb9a4ed8 <col:46> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |         |   |     `-IntegerLiteral 0x28deb9a4f30 <col:50> 'int' 1
|   |         |   `-IntegerLiteral 0x28deb9a4fb0 <col:53> 'int' 0
|   |         |-ImplicitCastExpr 0x28deb9a5fe0 <line:1689:23, col:54> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x28deb9a5228 <col:23, col:54> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x28deb9a5210 <col:23, col:51> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x28deb9a51c8 <col:23, col:51> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x28deb9a51b0 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x28deb9a50c8 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x28deb9a5098 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x28deb9a5048 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |   |   |   |   `-ImplicitCastExpr 0x28deb9a5030 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x28deb9a5010 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-ImplicitCastExpr 0x28deb9a50b0 <col:39> 'int' <LValueToRValue>
|   |         |   |   |     `-DeclRefExpr 0x28deb9a5078 <col:39> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |   |   `-BinaryOperator 0x28deb9a5190 <col:42, col:50> 'int' '+'
|   |         |   |     |-BinaryOperator 0x28deb9a5148 <col:42, col:46> 'int' '*'
|   |         |   |     | |-IntegerLiteral 0x28deb9a50e8 <col:42> 'int' 2
|   |         |   |     | `-ImplicitCastExpr 0x28deb9a5130 <col:46> 'int' <LValueToRValue>
|   |         |   |     |   `-DeclRefExpr 0x28deb9a5110 <col:46> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |         |   |     `-IntegerLiteral 0x28deb9a5168 <col:50> 'int' 1
|   |         |   `-IntegerLiteral 0x28deb9a51e8 <col:53> 'int' 1
|   |         |-ImplicitCastExpr 0x28deb9a5ff8 <line:1690:23, col:54> 'limb *' <ArrayToPointerDecay>
|   |         | `-ArraySubscriptExpr 0x28deb9a5460 <col:23, col:54> 'felem':'limb [4]' lvalue
|   |         |   |-ImplicitCastExpr 0x28deb9a5448 <col:23, col:51> 'felem *' <ArrayToPointerDecay>
|   |         |   | `-ArraySubscriptExpr 0x28deb9a5400 <col:23, col:51> 'felem [3]' lvalue
|   |         |   |   |-ImplicitCastExpr 0x28deb9a53e8 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |   |   | `-ArraySubscriptExpr 0x28deb9a5300 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |   |   |   |-ImplicitCastExpr 0x28deb9a52d0 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |   |   |   | `-MemberExpr 0x28deb9a5280 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |   |   |   |   `-ImplicitCastExpr 0x28deb9a5268 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |   |   |   |     `-DeclRefExpr 0x28deb9a5248 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |   |   |   `-ImplicitCastExpr 0x28deb9a52e8 <col:39> 'int' <LValueToRValue>
|   |         |   |   |     `-DeclRefExpr 0x28deb9a52b0 <col:39> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |   |   `-BinaryOperator 0x28deb9a53c8 <col:42, col:50> 'int' '+'
|   |         |   |     |-BinaryOperator 0x28deb9a5380 <col:42, col:46> 'int' '*'
|   |         |   |     | |-IntegerLiteral 0x28deb9a5320 <col:42> 'int' 2
|   |         |   |     | `-ImplicitCastExpr 0x28deb9a5368 <col:46> 'int' <LValueToRValue>
|   |         |   |     |   `-DeclRefExpr 0x28deb9a5348 <col:46> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |         |   |     `-IntegerLiteral 0x28deb9a53a0 <col:50> 'int' 1
|   |         |   `-IntegerLiteral 0x28deb9a5420 <col:53> 'int' 2
|   |         |-ImplicitCastExpr 0x28deb9a6028 <line:1691:23, col:50> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x28deb9a6010 <col:23, col:50> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x28deb9a5650 <col:23, col:50> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x28deb9a5638 <col:23, col:47> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x28deb9a55f0 <col:23, col:47> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x28deb9a55d8 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x28deb9a5538 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x28deb9a5508 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x28deb9a54b8 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |     |   |   |   `-ImplicitCastExpr 0x28deb9a54a0 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x28deb9a5480 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-ImplicitCastExpr 0x28deb9a5520 <col:39> 'int' <LValueToRValue>
|   |         |     |   |     `-DeclRefExpr 0x28deb9a54e8 <col:39> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |     |   `-BinaryOperator 0x28deb9a55b8 <col:42, col:46> 'int' '*'
|   |         |     |     |-IntegerLiteral 0x28deb9a5558 <col:42> 'int' 2
|   |         |     |     `-ImplicitCastExpr 0x28deb9a55a0 <col:46> 'int' <LValueToRValue>
|   |         |     |       `-DeclRefExpr 0x28deb9a5580 <col:46> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |         |     `-IntegerLiteral 0x28deb9a5610 <col:49> 'int' 0
|   |         |-ImplicitCastExpr 0x28deb9a6058 <line:1692:23, col:50> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x28deb9a6040 <col:23, col:50> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x28deb9a5840 <col:23, col:50> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x28deb9a5828 <col:23, col:47> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x28deb9a57e0 <col:23, col:47> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x28deb9a57c8 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x28deb9a5728 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x28deb9a56f8 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x28deb9a56a8 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |     |   |   |   `-ImplicitCastExpr 0x28deb9a5690 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x28deb9a5670 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-ImplicitCastExpr 0x28deb9a5710 <col:39> 'int' <LValueToRValue>
|   |         |     |   |     `-DeclRefExpr 0x28deb9a56d8 <col:39> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |     |   `-BinaryOperator 0x28deb9a57a8 <col:42, col:46> 'int' '*'
|   |         |     |     |-IntegerLiteral 0x28deb9a5748 <col:42> 'int' 2
|   |         |     |     `-ImplicitCastExpr 0x28deb9a5790 <col:46> 'int' <LValueToRValue>
|   |         |     |       `-DeclRefExpr 0x28deb9a5770 <col:46> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |         |     `-IntegerLiteral 0x28deb9a5800 <col:49> 'int' 1
|   |         |-ImplicitCastExpr 0x28deb9a6088 <line:1693:23, col:50> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x28deb9a6070 <col:23, col:50> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x28deb9a5a30 <col:23, col:50> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x28deb9a5a18 <col:23, col:47> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x28deb9a59d0 <col:23, col:47> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x28deb9a59b8 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x28deb9a5918 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x28deb9a58e8 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x28deb9a5898 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |     |   |   |   `-ImplicitCastExpr 0x28deb9a5880 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x28deb9a5860 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-ImplicitCastExpr 0x28deb9a5900 <col:39> 'int' <LValueToRValue>
|   |         |     |   |     `-DeclRefExpr 0x28deb9a58c8 <col:39> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |     |   `-BinaryOperator 0x28deb9a5998 <col:42, col:46> 'int' '*'
|   |         |     |     |-IntegerLiteral 0x28deb9a5938 <col:42> 'int' 2
|   |         |     |     `-ImplicitCastExpr 0x28deb9a5980 <col:46> 'int' <LValueToRValue>
|   |         |     |       `-DeclRefExpr 0x28deb9a5960 <col:46> 'int' lvalue Var 0x28deb995b28 'j' 'int'
|   |         |     `-IntegerLiteral 0x28deb9a59f0 <col:49> 'int' 2
|   |         |-IntegerLiteral 0x28deb9a5a50 <col:53> 'int' 0
|   |         |-ImplicitCastExpr 0x28deb9a60b8 <line:1694:23, col:46> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x28deb9a60a0 <col:23, col:46> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x28deb9a5bf0 <col:23, col:46> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x28deb9a5bd8 <col:23, col:43> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x28deb9a5b90 <col:23, col:43> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x28deb9a5b78 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x28deb9a5b30 <col:23, col:40> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x28deb9a5b00 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x28deb9a5ab0 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |     |   |   |   `-ImplicitCastExpr 0x28deb9a5a98 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x28deb9a5a78 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-ImplicitCastExpr 0x28deb9a5b18 <col:39> 'int' <LValueToRValue>
|   |         |     |   |     `-DeclRefExpr 0x28deb9a5ae0 <col:39> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |     |   `-IntegerLiteral 0x28deb9a5b50 <col:42> 'int' 1
|   |         |     `-IntegerLiteral 0x28deb9a5bb0 <col:45> 'int' 0
|   |         |-ImplicitCastExpr 0x28deb9a60e8 <col:49, col:72> 'const limb *':'const limb *' <NoOp>
|   |         | `-ImplicitCastExpr 0x28deb9a60d0 <col:49, col:72> 'limb *' <ArrayToPointerDecay>
|   |         |   `-ArraySubscriptExpr 0x28deb9a5d88 <col:49, col:72> 'felem':'limb [4]' lvalue
|   |         |     |-ImplicitCastExpr 0x28deb9a5d70 <col:49, col:69> 'felem *' <ArrayToPointerDecay>
|   |         |     | `-ArraySubscriptExpr 0x28deb9a5d28 <col:49, col:69> 'felem [3]' lvalue
|   |         |     |   |-ImplicitCastExpr 0x28deb9a5d10 <col:49, col:66> 'felem (*)[3]' <ArrayToPointerDecay>
|   |         |     |   | `-ArraySubscriptExpr 0x28deb9a5cc8 <col:49, col:66> 'felem [16][3]' lvalue
|   |         |     |   |   |-ImplicitCastExpr 0x28deb9a5c98 <col:49, col:54> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |         |     |   |   | `-MemberExpr 0x28deb9a5c48 <col:49, col:54> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |         |     |   |   |   `-ImplicitCastExpr 0x28deb9a5c30 <col:49> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |         |     |   |   |     `-DeclRefExpr 0x28deb9a5c10 <col:49> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |         |     |   |   `-ImplicitCastExpr 0x28deb9a5cb0 <col:65> 'int' <LValueToRValue>
|   |         |     |   |     `-DeclRefExpr 0x28deb9a5c78 <col:65> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |         |     |   `-IntegerLiteral 0x28deb9a5ce8 <col:68> 'int' 1
|   |         |     `-IntegerLiteral 0x28deb9a5d48 <col:71> 'int' 1
|   |         `-ImplicitCastExpr 0x28deb9a6118 <line:1695:23, col:46> 'const limb *':'const limb *' <NoOp>
|   |           `-ImplicitCastExpr 0x28deb9a6100 <col:23, col:46> 'limb *' <ArrayToPointerDecay>
|   |             `-ArraySubscriptExpr 0x28deb9a5f20 <col:23, col:46> 'felem':'limb [4]' lvalue
|   |               |-ImplicitCastExpr 0x28deb9a5f08 <col:23, col:43> 'felem *' <ArrayToPointerDecay>
|   |               | `-ArraySubscriptExpr 0x28deb9a5ec0 <col:23, col:43> 'felem [3]' lvalue
|   |               |   |-ImplicitCastExpr 0x28deb9a5ea8 <col:23, col:40> 'felem (*)[3]' <ArrayToPointerDecay>
|   |               |   | `-ArraySubscriptExpr 0x28deb9a5e60 <col:23, col:40> 'felem [16][3]' lvalue
|   |               |   |   |-ImplicitCastExpr 0x28deb9a5e30 <col:23, col:28> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   |               |   |   | `-MemberExpr 0x28deb9a5de0 <col:23, col:28> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   |               |   |   |   `-ImplicitCastExpr 0x28deb9a5dc8 <col:23> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |               |   |   |     `-DeclRefExpr 0x28deb9a5da8 <col:23> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   |               |   |   `-ImplicitCastExpr 0x28deb9a5e48 <col:39> 'int' <LValueToRValue>
|   |               |   |     `-DeclRefExpr 0x28deb9a5e10 <col:39> 'int' lvalue Var 0x28deb995aa8 'i' 'int'
|   |               |   `-IntegerLiteral 0x28deb9a5e80 <col:42> 'int' 1
|   |               `-IntegerLiteral 0x28deb9a5ee0 <col:45> 'int' 2
|   |-CallExpr 0x28deb9a63f0 <line:1698:5, col:64> 'void'
|   | |-ImplicitCastExpr 0x28deb9a63d8 <col:5> 'void (*)(size_t, felem (*)[3], felem *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb9a61f8 <col:5> 'void (size_t, felem (*)[3], felem *)' Function 0x28deb99e1a8 'make_points_affine' 'void (size_t, felem (*)[3], felem *)'
|   | |-ImplicitCastExpr 0x28deb9a6428 <col:24> 'size_t':'unsigned long long' <IntegralCast>
|   | | `-IntegerLiteral 0x28deb9a6218 <col:24> 'int' 31
|   | |-UnaryOperator 0x28deb9a6388 <col:28, col:51> 'felem (*)[3]' prefix '&' cannot overflow
|   | | `-ParenExpr 0x28deb9a6368 <col:29, col:51> 'felem [3]' lvalue
|   | |   `-ArraySubscriptExpr 0x28deb9a6348 <col:30, col:50> 'felem [3]' lvalue
|   | |     |-ImplicitCastExpr 0x28deb9a6330 <col:30, col:47> 'felem (*)[3]' <ArrayToPointerDecay>
|   | |     | `-ArraySubscriptExpr 0x28deb9a62e8 <col:30, col:47> 'felem [16][3]' lvalue
|   | |     |   |-ImplicitCastExpr 0x28deb9a62d0 <col:30, col:35> 'felem (*)[16][3]' <ArrayToPointerDecay>
|   | |     |   | `-MemberExpr 0x28deb9a6278 <col:30, col:35> 'felem [2][16][3]' lvalue ->g_pre_comp 0x28deb782698
|   | |     |   |   `-ImplicitCastExpr 0x28deb9a6260 <col:30> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   | |     |   |     `-DeclRefExpr 0x28deb9a6240 <col:30> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   | |     |   `-IntegerLiteral 0x28deb9a62a8 <col:46> 'int' 0
|   | |     `-IntegerLiteral 0x28deb9a6308 <col:49> 'int' 1
|   | `-ImplicitCastExpr 0x28deb9a6440 <col:54> 'felem *' <ArrayToPointerDecay>
|   |   `-DeclRefExpr 0x28deb9a63a0 <col:54> 'felem [32]' lvalue Var 0x28deb995da8 'tmp_felems' 'felem [32]'
|   |-LabelStmt 0x28deb9a64a0 <line:1700:2, col:6> 'done'
|   | `-NullStmt 0x28deb9a6498 <col:6>
|   |-BinaryOperator 0x28deb9a6578 <line:1702:5, D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:27> 'NISTP224_PRE_COMP *' '='
|   | |-DeclRefExpr 0x28deb9a64b8 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1702:5> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   | `-ImplicitCastExpr 0x28deb9a6560 <D:\Microsoft Visual Studio 12.0\VC\include\string.h:36:17, col:27> 'NISTP224_PRE_COMP *' <NullToPointer>
|   |   `-ParenExpr 0x28deb9a6540 <col:17, col:27> 'void *'
|   |     `-CStyleCastExpr 0x28deb9a6518 <col:18, col:26> 'void *' <NullToPointer>
|   |       `-IntegerLiteral 0x28deb9a64d8 <col:26> 'int' 0
|   |-BinaryOperator 0x28deb9a65f8 <.//openssl//file_jk/after\crypto\ec\ecp_nistp224.c:1703:5, col:11> 'int' '='
|   | |-DeclRefExpr 0x28deb9a6598 <col:5> 'int' lvalue Var 0x28deb9958b8 'ret' 'int'
|   | `-IntegerLiteral 0x28deb9a65d0 <col:11> 'int' 1
|   |-LabelStmt 0x28deb9a6640 <line:1704:2, col:5> 'err'
|   | `-NullStmt 0x28deb9a6638 <col:5>
|   |-CallExpr 0x28deb9a6750 <line:1708:5, col:34> 'void'
|   | |-ImplicitCastExpr 0x28deb9a6738 <col:5> 'void (*)(NISTP224_PRE_COMP *)' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x28deb9a6698 <col:5> 'void (NISTP224_PRE_COMP *)' Function 0x28deb9922a0 'EC_nistp224_pre_comp_free' 'void (NISTP224_PRE_COMP *)'
|   | `-ImplicitCastExpr 0x28deb9a6778 <col:31> 'NISTP224_PRE_COMP *' <LValueToRValue>
|   |   `-DeclRefExpr 0x28deb9a66b8 <col:31> 'NISTP224_PRE_COMP *' lvalue Var 0x28deb995970 'pre' 'NISTP224_PRE_COMP *'
|   `-ReturnStmt 0x28deb9a67c8 <line:1709:5, col:12>
|     `-ImplicitCastExpr 0x28deb9a67b0 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x28deb9a6790 <col:12> 'int' lvalue Var 0x28deb9958b8 'ret' 'int'
`-FunctionDecl 0x28deb9a6940 <line:1712:1, line:1715:1> line:1712:5 invalid ec_GFp_nistp224_have_precompute_mult 'int (const int *)'
  |-ParmVarDecl 0x28deb9a68a8 <col:42, col:58> col:58 invalid group 'const int *'
  `-CompoundStmt 0x28deb9a6aa8 <line:1713:1, line:1715:1>
