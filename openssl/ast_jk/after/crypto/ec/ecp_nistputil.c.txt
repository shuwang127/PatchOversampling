TranslationUnitDecl 0x1c991ab4098 <<invalid sloc>> <invalid sloc> <undeserialized declarations>
|-TypedefDecl 0x1c991ab4930 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1c991ab4630 '__int128'
|-TypedefDecl 0x1c991ab49a0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1c991ab4650 'unsigned __int128'
|-TypedefDecl 0x1c991ab4cd8 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1c991ab4a90 'struct __NSConstantString_tag'
|   `-Record 0x1c991ab49f8 '__NSConstantString_tag'
|-TypedefDecl 0x1c991ab4d48 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1c991ab4270 'unsigned long long'
|-TypedefDecl 0x1c991ab4de0 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1c991ab4da0 'char *'
|   `-BuiltinType 0x1c991ab4130 'char'
|-TypedefDecl 0x1c991ab4e50 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1c991ab4da0 'char *'
|   `-BuiltinType 0x1c991ab4130 'char'
|-TypedefDecl 0x1c991ab4ec0 <D:\LLVM\lib\clang\10.0.0\include\stddef.h:35:1, col:26> col:26 ptrdiff_t 'long long'
| `-BuiltinType 0x1c991ab41d0 'long long'
|-TypedefDecl 0x1c991ab4f30 prev 0x1c991ab4d48 <line:46:1, col:23> col:23 size_t 'unsigned long long'
| `-BuiltinType 0x1c991ab4270 'unsigned long long'
|-TypedefDecl 0x1c991ab4fb8 <line:60:1, col:23> col:23 rsize_t 'unsigned long long'
| `-BuiltinType 0x1c991ab4270 'unsigned long long'
|-TypedefDecl 0x1c991ab5028 <line:74:1, col:24> col:24 wchar_t 'unsigned short'
| `-BuiltinType 0x1c991ab4210 'unsigned short'
|-ImportDecl 0x1c991b21000 <line:102:1> col:1 implicit _Builtin_stddef_max_align_t
|-TypedefDecl 0x1c991b210a8 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1c991ab4270 'unsigned long long'
|-TypedefDecl 0x1c991b21118 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1c991ab4da0 'char *'
|   `-BuiltinType 0x1c991ab4130 'char'
|-FunctionDecl 0x1c991b21360 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c991b21400 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1c991b21470 <col:21> Implicit
|-FunctionDecl 0x1c991b214c8 prev 0x1c991b21360 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1c991b211f8 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1c991b215b8 <col:21> Inherited Implicit
|-TypedefDecl 0x1c991b21670 prev 0x1c991b215e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1c991ab4270 'unsigned long long'
|-TypedefDecl 0x1c991b21700 prev 0x1c991ab4fb8 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1c991b216d0 'size_t' sugar
|   |-Typedef 0x1c991b21670 'size_t'
|   `-BuiltinType 0x1c991ab4270 'unsigned long long'
|-TypedefDecl 0x1c991b21788 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1c991ab41d0 'long long'
|-TypedefDecl 0x1c991b217f8 prev 0x1c991ab4ec0 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1c991ab41d0 'long long'
|-TypedefDecl 0x1c991b21880 prev 0x1c991ab5028 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1c991ab4210 'unsigned short'
|-TypedefDecl 0x1c991b21908 <line:541:1, col:24> col:24 wint_t 'unsigned short'
| `-BuiltinType 0x1c991ab4210 'unsigned short'
|-TypedefDecl 0x1c991b21978 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1c991ab4210 'unsigned short'
|-TypedefDecl 0x1c991b219e8 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1c991ab4190 'int'
|-TypedefDecl 0x1c991b21a58 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1c991ab41b0 'long'
|-TypedefDecl 0x1c991b21ac8 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1c991ab41d0 'long long'
|-TypedefDecl 0x1c991b21b50 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1c991b21b20 '__time64_t' sugar
|   |-Typedef 0x1c991b21ac8 '__time64_t'
|   `-BuiltinType 0x1c991ab41d0 'long long'
|-FunctionDecl 0x1c991b21cc8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1c991b21ee8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1c991c34570 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1c991c34108 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1c991c34180 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1c991c341f8 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1c991c34278 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1c991c34310 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1c991c34650 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1c991c34710 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1c991c34880 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1c991c34830 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1c991c347d0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1c991c346f0 'struct threadlocaleinfostruct'
|       `-Record 0x1c991c473d8 'threadlocaleinfostruct'
|-TypedefDecl 0x1c991c34990 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1c991c34940 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1c991c348e0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1c991c347b0 'struct threadmbcinfostruct'
|       `-Record 0x1c991c34710 'threadmbcinfostruct'
|-RecordDecl 0x1c991c349e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1c991c34aa0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1c991c34b60 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c991c34bf0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1c991c34c80 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1c991c34d38 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1c991c34ce0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1c991c34b40 'struct localeinfo_struct'
|     `-Record 0x1c991c34aa0 'localeinfo_struct'
|-TypedefDecl 0x1c991c34e10 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1c991c34dc0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1c991c34ce0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1c991c34b40 'struct localeinfo_struct'
|       `-Record 0x1c991c34aa0 'localeinfo_struct'
|-RecordDecl 0x1c991c34e88 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1c991c34f40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c991c34fb8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1c991c35078 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1c991c47240 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1c991c472b0 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1c991c47368 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1c991c47310 'struct localerefcount' sugar
|   `-RecordType 0x1c991c34f20 'struct localerefcount'
|     `-Record 0x1c991c34e88 'localerefcount'
|-RecordDecl 0x1c991c473d8 prev 0x1c991c34650 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1c991c47458 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c991c474d0 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1c991c47540 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1c991c475b0 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1c991c47620 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1c991c477e8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1c991c47858 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1c991c478c8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1c991c47938 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1c991c479a8 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1c991c47a18 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1c991c47a70 parent 0x1c991ab4098 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1c991c47c00 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1c991c47c70 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1c991c47ce0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1c991c47d50 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1c991c47df0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1c991c47e60 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1c991c47f70 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1c991c480a8 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1c991c48158 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1c991c48100 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1c991c346f0 'struct threadlocaleinfostruct'
|     `-Record 0x1c991c473d8 'threadlocaleinfostruct'
|-TypedefDecl 0x1c991c4a3e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:52:1, col:24> col:24 referenced _onexit_t 'int (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1c991c4a380 'int (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1c991c4a320 'int (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1c991c4a2d0 'int (void)' sugar
|     | `-FunctionProtoType 0x1c991c4a2a0 'int (void)' cdecl
|     |   `-BuiltinType 0x1c991ab4190 'int'
|     `-ParenType 0x1c991c4a2d0 'int (void)' sugar
|       `-FunctionProtoType 0x1c991c4a2a0 'int (void)' cdecl
|         `-BuiltinType 0x1c991ab4190 'int'
|-RecordDecl 0x1c991c4a440 <line:75:9, line:78:1> line:75:16 struct _div_t definition
| |-MaxFieldAlignmentAttr 0x1c991c4a500 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c991c4a578 <line:76:9, col:13> col:13 quot 'int'
| `-FieldDecl 0x1c991c4a5e8 <line:77:9, col:13> col:13 rem 'int'
|-TypedefDecl 0x1c991c4a698 <line:75:1, line:78:3> col:3 referenced div_t 'struct _div_t':'struct _div_t'
| `-ElaboratedType 0x1c991c4a640 'struct _div_t' sugar
|   `-RecordType 0x1c991c4a4e0 'struct _div_t'
|     `-Record 0x1c991c4a440 '_div_t'
|-RecordDecl 0x1c991c4a708 <line:80:9, line:83:1> line:80:16 struct _ldiv_t definition
| |-MaxFieldAlignmentAttr 0x1c991c4a7c0 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c991c4a838 <line:81:9, col:14> col:14 quot 'long'
| `-FieldDecl 0x1c991c4a8a8 <line:82:9, col:14> col:14 rem 'long'
|-TypedefDecl 0x1c991c4a958 <line:80:1, line:83:3> col:3 referenced ldiv_t 'struct _ldiv_t':'struct _ldiv_t'
| `-ElaboratedType 0x1c991c4a900 'struct _ldiv_t' sugar
|   `-RecordType 0x1c991c4a7a0 'struct _ldiv_t'
|     `-Record 0x1c991c4a708 '_ldiv_t'
|-RecordDecl 0x1c991c4a9c8 <line:85:9, line:88:1> line:85:16 struct _lldiv_t definition
| |-MaxFieldAlignmentAttr 0x1c991c4aa80 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1c991c4aaf8 <line:86:9, col:19> col:19 quot 'long long'
| `-FieldDecl 0x1c991c4ab68 <line:87:9, col:19> col:19 rem 'long long'
|-TypedefDecl 0x1c991c4ac18 <line:85:1, line:88:3> col:3 referenced lldiv_t 'struct _lldiv_t':'struct _lldiv_t'
| `-ElaboratedType 0x1c991c4abc0 'struct _lldiv_t' sugar
|   `-RecordType 0x1c991c4aa60 'struct _lldiv_t'
|     `-Record 0x1c991c4a9c8 '_lldiv_t'
|-RecordDecl 0x1c991c4acb0 <line:103:9, line:105:1> line:103:9 struct definition
| |-MaxFieldAlignmentAttr 0x1c991c4ad70 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1c991c4ae70 <line:104:5, col:24> col:19 ld 'unsigned char [10]'
|-TypedefDecl 0x1c991c4af28 <line:103:1, line:105:3> col:3 referenced _LDOUBLE 'struct _LDOUBLE':'_LDOUBLE'
| `-ElaboratedType 0x1c991c4aed0 'struct _LDOUBLE' sugar
|   `-RecordType 0x1c991c4ad50 '_LDOUBLE'
|     `-Record 0x1c991c4acb0 ''
|-RecordDecl 0x1c991c4af98 <line:122:9, line:124:1> line:122:9 struct definition
| `-FieldDecl 0x1c991c4b068 <line:123:9, col:16> col:16 x 'double'
|-TypedefDecl 0x1c991c4b118 <line:122:1, line:124:3> col:3 referenced _CRT_DOUBLE 'struct _CRT_DOUBLE':'_CRT_DOUBLE'
| `-ElaboratedType 0x1c991c4b0c0 'struct _CRT_DOUBLE' sugar
|   `-RecordType 0x1c991c4b030 '_CRT_DOUBLE'
|     `-Record 0x1c991c4af98 ''
|-RecordDecl 0x1c991c4b188 <line:126:9, line:128:1> line:126:9 struct definition
| `-FieldDecl 0x1c991c4f2b8 <line:127:5, col:11> col:11 f 'float'
|-TypedefDecl 0x1c991c4f368 <line:126:1, line:128:3> col:3 referenced _CRT_FLOAT 'struct _CRT_FLOAT':'_CRT_FLOAT'
| `-ElaboratedType 0x1c991c4f310 'struct _CRT_FLOAT' sugar
|   `-RecordType 0x1c991c4f280 '_CRT_FLOAT'
|     `-Record 0x1c991c4b188 ''
|-RecordDecl 0x1c991c4f3d8 <line:134:9, line:139:1> line:134:9 struct definition
| `-FieldDecl 0x1c991c4f4a8 <line:138:9, col:21> col:21 x 'long double'
|-TypedefDecl 0x1c991c4f558 <line:134:1, line:139:3> col:3 _LONGDOUBLE 'struct _LONGDOUBLE':'_LONGDOUBLE'
| `-ElaboratedType 0x1c991c4f500 'struct _LONGDOUBLE' sugar
|   `-RecordType 0x1c991c4f470 '_LONGDOUBLE'
|     `-Record 0x1c991c4f3d8 ''
|-RecordDecl 0x1c991c4f5f0 <line:144:9, line:146:1> line:144:9 struct definition
| |-MaxFieldAlignmentAttr 0x1c991c4f6b0 <<invalid sloc>> Implicit 32
| `-FieldDecl 0x1c991c4f7b0 <line:145:5, col:26> col:19 ld12 'unsigned char [12]'
|-TypedefDecl 0x1c991c4f868 <line:144:1, line:146:3> col:3 _LDBL12 'struct _LDBL12':'_LDBL12'
| `-ElaboratedType 0x1c991c4f810 'struct _LDBL12' sugar
|   `-RecordType 0x1c991c4f690 '_LDBL12'
|     `-Record 0x1c991c4f5f0 ''
|-VarDecl 0x1c991c4f8f0 <line:170:9, col:20> col:20 __mb_cur_max 'int' extern
|-FunctionDecl 0x1c991c4fa70 <line:175:9, col:44> col:21 ___mb_cur_max_func 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c991c4fcc8 <line:176:9, col:51> col:21 ___mb_cur_max_l_func 'int (_locale_t) __attribute__((cdecl))':'int (_locale_t)'
| `-ParmVarDecl 0x1c991c4fb60 <col:42> col:51 '_locale_t':'struct localeinfo_struct *'
|-TypedefDecl 0x1c991c4ff10 <line:215:1, col:24> col:24 referenced _purecall_handler 'void (*)(void) __attribute__((cdecl))'
| `-PointerType 0x1c991c4feb0 'void (*)(void) __attribute__((cdecl))'
|   `-AttributedType 0x1c991c4fe50 'void (void) __attribute__((cdecl))' sugar
|     |-ParenType 0x1c991c4fe00 'void (void)' sugar
|     | `-FunctionProtoType 0x1c991b21c20 'void (void)' cdecl
|     |   `-BuiltinType 0x1c991ab40f0 'void'
|     `-ParenType 0x1c991c4fe00 'void (void)' sugar
|       `-FunctionProtoType 0x1c991b21c20 'void (void)' cdecl
|         `-BuiltinType 0x1c991ab40f0 'void'
|-FunctionDecl 0x1c991c50110 <line:218:9, col:92> col:35 _set_purecall_handler '_purecall_handler (_purecall_handler) __attribute__((cdecl))':'_purecall_handler (_purecall_handler)'
| `-ParmVarDecl 0x1c991c4ffa0 <col:66, col:84> col:84 _Handler '_purecall_handler':'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1c991c4c2f8 <line:219:9, col:61> col:35 _get_purecall_handler '_purecall_handler (void) __attribute__((cdecl))':'_purecall_handler (void)'
|-TypedefDecl 0x1c991c4c748 <line:235:1, col:24> col:24 referenced _invalid_parameter_handler 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
| `-PointerType 0x1c991c4c6c0 'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|   `-AttributedType 0x1c991c4c660 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))' sugar
|     |-ParenType 0x1c991c4c610 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|     | `-FunctionProtoType 0x1c991c343d0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|     |   |-BuiltinType 0x1c991ab40f0 'void'
|     |   |-PointerType 0x1c991c340d0 'const wchar_t *'
|     |   | `-QualType 0x1c991b21fa1 'const wchar_t' const
|     |   |   `-TypedefType 0x1c991b21fa0 'wchar_t' sugar
|     |   |     |-Typedef 0x1c991b21880 'wchar_t'
|     |   |     `-BuiltinType 0x1c991ab4210 'unsigned short'
|     |   |-PointerType 0x1c991c340d0 'const wchar_t *'
|     |   | `-QualType 0x1c991b21fa1 'const wchar_t' const
|     |   |   `-TypedefType 0x1c991b21fa0 'wchar_t' sugar
|     |   |     |-Typedef 0x1c991b21880 'wchar_t'
|     |   |     `-BuiltinType 0x1c991ab4210 'unsigned short'
|     |   |-PointerType 0x1c991c340d0 'const wchar_t *'
|     |   | `-QualType 0x1c991b21fa1 'const wchar_t' const
|     |   |   `-TypedefType 0x1c991b21fa0 'wchar_t' sugar
|     |   |     |-Typedef 0x1c991b21880 'wchar_t'
|     |   |     `-BuiltinType 0x1c991ab4210 'unsigned short'
|     |   |-BuiltinType 0x1c991ab4230 'unsigned int'
|     |   `-TypedefType 0x1c991c342e0 'uintptr_t' sugar
|     |     |-Typedef 0x1c991b210a8 'uintptr_t'
|     |     `-BuiltinType 0x1c991ab4270 'unsigned long long'
|     `-ParenType 0x1c991c4c610 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' sugar
|       `-FunctionProtoType 0x1c991c343d0 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t)' cdecl
|         |-BuiltinType 0x1c991ab40f0 'void'
|         |-PointerType 0x1c991c340d0 'const wchar_t *'
|         | `-QualType 0x1c991b21fa1 'const wchar_t' const
|         |   `-TypedefType 0x1c991b21fa0 'wchar_t' sugar
|         |     |-Typedef 0x1c991b21880 'wchar_t'
|         |     `-BuiltinType 0x1c991ab4210 'unsigned short'
|         |-PointerType 0x1c991c340d0 'const wchar_t *'
|         | `-QualType 0x1c991b21fa1 'const wchar_t' const
|         |   `-TypedefType 0x1c991b21fa0 'wchar_t' sugar
|         |     |-Typedef 0x1c991b21880 'wchar_t'
|         |     `-BuiltinType 0x1c991ab4210 'unsigned short'
|         |-PointerType 0x1c991c340d0 'const wchar_t *'
|         | `-QualType 0x1c991b21fa1 'const wchar_t' const
|         |   `-TypedefType 0x1c991b21fa0 'wchar_t' sugar
|         |     |-Typedef 0x1c991b21880 'wchar_t'
|         |     `-BuiltinType 0x1c991ab4210 'unsigned short'
|         |-BuiltinType 0x1c991ab4230 'unsigned int'
|         `-TypedefType 0x1c991c342e0 'uintptr_t' sugar
|           |-Typedef 0x1c991b210a8 'uintptr_t'
|           `-BuiltinType 0x1c991ab4270 'unsigned long long'
|-FunctionDecl 0x1c991c4c940 <line:238:9, col:119> col:44 _set_invalid_parameter_handler '_invalid_parameter_handler (_invalid_parameter_handler) __attribute__((cdecl))':'_invalid_parameter_handler (_invalid_parameter_handler)'
| `-ParmVarDecl 0x1c991c4c7d0 <col:84, col:111> col:111 _Handler '_invalid_parameter_handler':'void (*)(const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((cdecl))'
|-FunctionDecl 0x1c991c4cb58 <line:239:9, col:79> col:44 _get_invalid_parameter_handler '_invalid_parameter_handler (void) __attribute__((cdecl))':'_invalid_parameter_handler (void)'
|-FunctionDecl 0x1c991c4cd40 <line:245:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1c991c4cfb0 <line:248:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1c991c4ce38 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1c991c50290 <line:249:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1c991c4d088 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x1c991c504b0 <line:252:9, col:48> col:33 __doserrno 'unsigned long *(void) __attribute__((cdecl))':'unsigned long *(void)'
|-FunctionDecl 0x1c991c506f0 <line:255:1, col:56> col:17 _set_doserrno 'errno_t (unsigned long) __attribute__((cdecl))':'errno_t (unsigned long)'
| `-ParmVarDecl 0x1c991c50580 <col:36, col:50> col:50 _Value 'unsigned long'
|-FunctionDecl 0x1c991c50940 <line:256:1, col:59> col:17 _get_doserrno 'errno_t (unsigned long *) __attribute__((cdecl))':'errno_t (unsigned long *)'
| `-ParmVarDecl 0x1c991c507c8 <col:37, col:53> col:53 _Value 'unsigned long *'
|-FunctionDecl 0x1c991c50c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:259:77> col:59 __sys_errlist 'char **(void) __attribute__((cdecl))':'char **(void)'
| `-DeprecatedAttr 0x1c991c50cc0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c50f80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:262:72> col:57 __sys_nerr 'int *(void) __attribute__((cdecl))':'int *(void)'
| `-DeprecatedAttr 0x1c991c51020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using strerror instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1c991c51168 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:288:9, col:20> col:20 __argc 'int' extern
|-VarDecl 0x1c991c51200 <line:289:9, col:24> col:24 __argv 'char **' extern
|-VarDecl 0x1c991c7d870 <line:290:9, col:27> col:27 __wargv 'wchar_t **' extern
|-VarDecl 0x1c991c7d908 <line:306:9, col:24> col:24 _environ 'char **' extern
|-VarDecl 0x1c991c7d9a0 <line:307:9, col:27> col:27 _wenviron 'wchar_t **' extern
|-VarDecl 0x1c991c7db30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:311:68> col:68 _pgmptr 'char *' extern
| `-DeprecatedAttr 0x1c991c7db98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_pgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-VarDecl 0x1c991c7ddd8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:312:72> col:72 _wpgmptr 'wchar_t *' extern
| `-DeprecatedAttr 0x1c991c7de40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_wpgmptr instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c7e100 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:339:1, col:61> col:17 _get_pgmptr 'errno_t (char **) __attribute__((cdecl))':'errno_t (char **)'
| `-ParmVarDecl 0x1c991c7df88 <col:47, col:55> col:55 _Value 'char **'
|-FunctionDecl 0x1c991c7e350 <line:340:1, col:65> col:17 _get_wpgmptr 'errno_t (wchar_t **) __attribute__((cdecl))':'errno_t (wchar_t **)'
| `-ParmVarDecl 0x1c991c7e1d8 <col:48, col:59> col:59 _Value 'wchar_t **'
|-VarDecl 0x1c991c7e520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:346:64> col:64 _fmode 'int' extern
| `-DeprecatedAttr 0x1c991c7e588 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _get_fmode instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c81840 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:353:9, col:50> col:25 _set_fmode 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1c991c7e6d0 <col:41, col:45> col:45 _Mode 'int'
|-FunctionDecl 0x1c991c819f0 <line:354:9, col:54> col:25 _get_fmode 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1c991c81918 <col:42, col:48> col:48 _PMode 'int *'
|-FunctionDecl 0x1c991c81c40 <line:376:43> col:43 implicit exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1c991c81ce0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1c991c81d50 prev 0x1c991c81c40 <col:9, col:62> col:43 exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1c991c81ac8 <col:53, col:57> col:57 _Code 'int'
|-FunctionDecl 0x1c991c81f00 <line:378:43> col:43 implicit _exit 'void (int) __attribute__((noreturn))' extern
| `-ParmVarDecl 0x1c991c81fa0 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1c991c82010 prev 0x1c991c81f00 <col:9, col:63> col:43 _exit 'void (int) __attribute__((noreturn))'
| `-ParmVarDecl 0x1c991c81e28 <col:54, col:58> col:58 _Code 'int'
|-FunctionDecl 0x1c991c82198 <line:379:43> col:43 implicit abort 'void (void) __attribute__((noreturn))' extern
|-FunctionDecl 0x1c991c82238 prev 0x1c991c82198 <col:9, col:53> col:43 abort 'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1c991c824f0 <line:382:9, col:99> col:30 _set_abort_behavior 'unsigned int (unsigned int, unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1c991c82308 <col:55, col:68> col:68 _Flags 'unsigned int'
| `-ParmVarDecl 0x1c991c82388 <col:81, col:94> col:94 _Mask 'unsigned int'
|-FunctionDecl 0x1c991c826e8 <line:384:19> col:19 implicit abs 'int (int)' extern
| |-ParmVarDecl 0x1c991c82788 <<invalid sloc>> <invalid sloc> 'int'
| |-NoThrowAttr 0x1c991c827f8 <col:19> Implicit
| `-ConstAttr 0x1c991c7e840 <col:19> Implicit
|-FunctionDecl 0x1c991c7e868 prev 0x1c991c826e8 <col:1, col:34> col:19 abs 'int (int)'
| |-ParmVarDecl 0x1c991c825d0 <col:28, col:32> col:32 _X 'int'
| |-NoThrowAttr 0x1c991c7e958 <col:19> Inherited Implicit
| `-ConstAttr 0x1c991c7e980 <col:19> Inherited Implicit
|-FunctionDecl 0x1c991c7eb08 <line:385:19> col:19 implicit labs 'long (long)' extern
| |-ParmVarDecl 0x1c991c7eba8 <<invalid sloc>> <invalid sloc> 'long'
| |-NoThrowAttr 0x1c991c7ec18 <col:19> Implicit
| `-ConstAttr 0x1c991c7ec70 <col:19> Implicit
|-FunctionDecl 0x1c991c7ec98 prev 0x1c991c7eb08 <col:1, col:36> col:19 labs 'long (long)'
| |-ParmVarDecl 0x1c991c7e9c0 <col:29, col:34> col:34 _X 'long'
| |-NoThrowAttr 0x1c991c7ed88 <col:19> Inherited Implicit
| `-ConstAttr 0x1c991c7edb0 <col:19> Inherited Implicit
|-FunctionDecl 0x1c991c7ef38 <line:386:19> col:19 implicit llabs 'long long (long long)' extern
| |-ParmVarDecl 0x1c991c7efd8 <<invalid sloc>> <invalid sloc> 'long long'
| |-NoThrowAttr 0x1c991c7f048 <col:19> Implicit
| `-ConstAttr 0x1c991c7f0a0 <col:19> Implicit
|-FunctionDecl 0x1c991c7f0c8 prev 0x1c991c7ef38 <col:1, col:42> col:19 llabs 'long long (long long)'
| |-ParmVarDecl 0x1c991c7edf0 <col:30, col:40> col:40 _X 'long long'
| |-NoThrowAttr 0x1c991c7f1b8 <col:19> Inherited Implicit
| `-ConstAttr 0x1c991c7f1e0 <col:19> Inherited Implicit
|-FunctionDecl 0x1c991c7f2e8 <line:388:9, col:42> col:28 _abs64 'long long (long long) __attribute__((cdecl))':'long long (long long)'
| `-ParmVarDecl 0x1c991c7f220 <col:35> col:42 'long long'
|-FunctionDecl 0x1c991c7f5e8 <line:426:9, col:53> col:24 atexit 'int (void (*)(void) __attribute__((cdecl))) __attribute__((cdecl))':'int (void (*)(void) __attribute__((cdecl)))'
| `-ParmVarDecl 0x1c991c7f480 <col:31, col:45> col:46 'void (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1c991c7f820 <line:428:24, col:71> col:40 atof 'double (const char *) __attribute__((cdecl))':'double (const char *)'
| `-ParmVarDecl 0x1c991c7f6c0 <col:52, col:64> col:64 _String 'const char *'
|-FunctionDecl 0x1c991c7fb20 <line:429:24, col:102> col:40 _atof_l 'double (const char *, _locale_t) __attribute__((cdecl))':'double (const char *, _locale_t)'
| |-ParmVarDecl 0x1c991c7f8f8 <col:55, col:67> col:67 _String 'const char *'
| `-ParmVarDecl 0x1c991c7f970 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c7fd48 <line:430:43, col:86> col:58 atoi 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c991c7fc00 <col:70, col:82> col:82 _Str 'const char *'
|-FunctionDecl 0x1c991c80040 <line:431:24, col:98> col:39 _atoi_l 'int (const char *, _locale_t) __attribute__((cdecl))':'int (const char *, _locale_t)'
| |-ParmVarDecl 0x1c991c7fe20 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1c991c7fe98 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c80268 <line:432:24, col:67> col:39 atol 'long (const char *) __attribute__((cdecl))':'long (const char *)'
| `-ParmVarDecl 0x1c991c80120 <col:51, col:63> col:63 _Str 'const char *'
|-FunctionDecl 0x1c991c80560 <line:433:24, col:98> col:39 _atol_l 'long (const char *, _locale_t) __attribute__((cdecl))':'long (const char *, _locale_t)'
| |-ParmVarDecl 0x1c991c80340 <col:54, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1c991c803b8 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c82850 <line:434:24, col:71> col:42 atoll 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1c991c80640 <col:55, col:67> col:67 _Str 'const char *'
|-FunctionDecl 0x1c991c82b50 <line:435:24, col:102> col:42 _atoll_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1c991c82928 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1c991c829a0 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c83440 <line:439:24, line:441:97> line:439:39 bsearch_s 'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void *(const void *, const void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1c991c82c60 <col:54, col:67> col:67 _Key 'const void *'
| |-ParmVarDecl 0x1c991c82ce0 <col:124, col:137> col:137 _Base 'const void *'
| |-ParmVarDecl 0x1c991c82d80 <line:440:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c82df8 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c83150 <line:441:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1c991c831d0 <col:82, col:89> col:89 _Context 'void *'
|-FunctionDecl 0x1c991c7cb98 <line:443:24, line:445:72> line:443:39 bsearch 'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void *(const void *, const void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1c991c83540 <col:52, col:65> col:65 _Key 'const void *'
| |-ParmVarDecl 0x1c991c835c0 <col:122, col:135> col:135 _Base 'const void *'
| |-ParmVarDecl 0x1c991c83638 <line:444:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c836b0 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c7c958 <line:445:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1c991c7d2a0 <line:448:9, line:450:96> line:448:22 qsort_s 'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *) __attribute__((cdecl))':'void (void *, rsize_t, rsize_t, int (*)(void *, const void *, const void *) __attribute__((cdecl)), void *)'
| |-ParmVarDecl 0x1c991c7cc90 <col:85, col:92> col:92 _Base 'void *'
| |-ParmVarDecl 0x1c991c7cd08 <line:449:14, col:22> col:22 _NumOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c7cd80 <col:43, col:51> col:51 _SizeOfElements 'rsize_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c7cfe8 <line:450:14, col:29> col:29 _PtFuncCompare 'int (*)(void *, const void *, const void *) __attribute__((cdecl))'
| `-ParmVarDecl 0x1c991c7d068 <col:82, col:88> col:88 _Context 'void *'
|-FunctionDecl 0x1c991c808a8 <line:452:9, line:454:72> line:452:22 qsort 'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl))) __attribute__((cdecl))':'void (void *, size_t, size_t, int (*)(const void *, const void *) __attribute__((cdecl)))'
| |-ParmVarDecl 0x1c991c7d398 <col:84, col:91> col:91 _Base 'void *'
| |-ParmVarDecl 0x1c991c7d410 <line:453:14, col:21> col:21 _NumOfElements 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c7d488 <col:42, col:49> col:49 _SizeOfElements 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c7d668 <line:454:14, col:29> col:29 _PtFuncCompare 'int (*)(const void *, const void *) __attribute__((cdecl))'
|-FunctionDecl 0x1c991c80ae8 <line:456:47> col:47 implicit _byteswap_ushort 'unsigned short (unsigned short)' extern
| |-ParmVarDecl 0x1c991c80b88 <<invalid sloc>> <invalid sloc> 'unsigned short'
| |-NoThrowAttr 0x1c991c80bf8 <col:47> Implicit
| `-ConstAttr 0x1c991c80c50 <col:47> Implicit
|-FunctionDecl 0x1c991c80c78 prev 0x1c991c80ae8 <col:24, col:90> col:47 _byteswap_ushort 'unsigned short (unsigned short)'
| |-ParmVarDecl 0x1c991c80998 <col:69, col:84> col:84 _Short 'unsigned short'
| |-NoThrowAttr 0x1c991c80d68 <col:47> Inherited Implicit
| `-ConstAttr 0x1c991c80d90 <col:47> Inherited Implicit
|-FunctionDecl 0x1c991c80f18 <line:457:47> col:47 implicit _byteswap_ulong 'unsigned long (unsigned long)' extern
| |-ParmVarDecl 0x1c991c80fb8 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-NoThrowAttr 0x1c991c81028 <col:47> Implicit
| `-ConstAttr 0x1c991c81080 <col:47> Implicit
|-FunctionDecl 0x1c991c810a8 prev 0x1c991c80f18 <col:24, col:88> col:47 _byteswap_ulong 'unsigned long (unsigned long)'
| |-ParmVarDecl 0x1c991c80dd0 <col:69, col:83> col:83 _Long 'unsigned long'
| |-NoThrowAttr 0x1c991c81198 <col:47> Inherited Implicit
| `-ConstAttr 0x1c991c811c0 <col:47> Inherited Implicit
|-FunctionDecl 0x1c991c81348 <line:458:49> col:49 implicit _byteswap_uint64 'unsigned long long (unsigned long long)' extern
| |-ParmVarDecl 0x1c991c813e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-NoThrowAttr 0x1c991c81458 <col:49> Implicit
| `-ConstAttr 0x1c991c814b0 <col:49> Implicit
|-FunctionDecl 0x1c991c814d8 prev 0x1c991c81348 <col:24, col:94> col:49 _byteswap_uint64 'unsigned long long (unsigned long long)'
| |-ParmVarDecl 0x1c991c81200 <col:71, col:88> col:88 _Int64 'unsigned long long'
| |-NoThrowAttr 0x1c991c815c8 <col:49> Inherited Implicit
| `-ConstAttr 0x1c991c815f0 <col:49> Inherited Implicit
|-FunctionDecl 0x1c991c89928 <line:459:24, col:85> col:39 div 'div_t (int, int) __attribute__((cdecl))':'div_t (int, int)'
| |-ParmVarDecl 0x1c991c81658 <col:48, col:52> col:52 _Numerator 'int'
| `-ParmVarDecl 0x1c991c816d8 <col:69, col:73> col:73 _Denominator 'int'
|-FunctionDecl 0x1c991c89c48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:462:109> col:74 getenv 'char *(const char *) __attribute__((cdecl))':'char *(const char *)'
| |-ParmVarDecl 0x1c991c89b00 <col:88, col:101> col:101 _VarName 'const char *'
| `-DeprecatedAttr 0x1c991c89cf0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _dupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c8a208 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:464:28, col:177> col:44 getenv_s 'errno_t (size_t *, char *, rsize_t, const char *) __attribute__((cdecl))':'errno_t (size_t *, char *, rsize_t, const char *)'
| |-ParmVarDecl 0x1c991c89e88 <col:59, col:68> col:68 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1c991c89f08 <col:110, col:117> col:117 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991c89f80 <col:131, col:139> col:139 _DstSize 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c8a000 <col:156, col:169> col:169 _VarName 'const char *'
|-FunctionDecl 0x1c991c8a5c0 <line:472:28, col:212> col:44 _dupenv_s 'errno_t (char **, size_t *, const char *) __attribute__((cdecl))':'errno_t (char **, size_t *, const char *)'
| |-ParmVarDecl 0x1c991c8a2f8 <col:127, col:134> col:134 _PBuffer 'char **'
| |-ParmVarDecl 0x1c991c8a370 <col:154, col:163> col:163 _PBufferSizeInBytes 'size_t *'
| `-ParmVarDecl 0x1c991c8a3f0 <col:191, col:204> col:204 _VarName 'const char *'
|-FunctionDecl 0x1c991c869f8 <line:479:28, col:141> col:44 _itoa_s 'errno_t (int, char *, size_t, int) __attribute__((cdecl))':'errno_t (int, char *, size_t, int)'
| |-ParmVarDecl 0x1c991c8a6a8 <col:57, col:61> col:61 _Value 'int'
| |-ParmVarDecl 0x1c991c8a728 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991c8a7a0 <col:112, col:119> col:119 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c8a820 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1c991c86e78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:481:79 _itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1c991c86be0 <col:91, col:96> col:96 _Value 'int'
| |-ParmVarDecl 0x1c991c86c60 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1c991c86ce0 <col:146, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1c991c86f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c873f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:482:28, col:145> col:44 _i64toa_s 'errno_t (long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long long, char *, size_t, int)'
| |-ParmVarDecl 0x1c991c87078 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1c991c870f8 <col:95, col:102> col:102 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991c87170 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c871f0 <col:135, col:139> col:139 _Radix 'int'
|-FunctionDecl 0x1c991c83860 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:483:140> col:59 _i64toa 'char *(long long, char *, int) __attribute__((cdecl))':'char *(long long, char *, int)'
| |-ParmVarDecl 0x1c991c875a8 <col:72, col:80> col:80 _Val 'long long'
| |-ParmVarDecl 0x1c991c87628 <col:109, col:116> col:116 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991c876a8 <col:130, col:134> col:134 _Radix 'int'
| `-DeprecatedAttr 0x1c991c83918 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c83dd8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:484:28, col:155> col:44 _ui64toa_s 'errno_t (unsigned long long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, char *, size_t, int)'
| |-ParmVarDecl 0x1c991c83a60 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1c991c83ae0 <col:105, col:112> col:112 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991c83b58 <col:126, col:133> col:133 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c83bd8 <col:145, col:149> col:149 _Radix 'int'
|-FunctionDecl 0x1c991c84228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:485:151> col:60 _ui64toa 'char *(unsigned long long, char *, int) __attribute__((cdecl))':'char *(unsigned long long, char *, int)'
| |-ParmVarDecl 0x1c991c83f88 <col:74, col:91> col:91 _Val 'unsigned long long'
| |-ParmVarDecl 0x1c991c84008 <col:120, col:127> col:127 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991c84088 <col:141, col:145> col:145 _Radix 'int'
| `-DeprecatedAttr 0x1c991c842e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64toa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c84508 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:486:24, col:75> col:40 _atoi64 'long long (const char *) __attribute__((cdecl))':'long long (const char *)'
| `-ParmVarDecl 0x1c991c84428 <col:55, col:68> col:68 _String 'const char *'
|-FunctionDecl 0x1c991c84758 <line:487:24, col:105> col:40 _atoi64_l 'long long (const char *, _locale_t) __attribute__((cdecl))':'long long (const char *, _locale_t)'
| |-ParmVarDecl 0x1c991c845e0 <col:57, col:70> col:70 _String 'const char *'
| `-ParmVarDecl 0x1c991c84658 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c88b48 <line:488:24, col:136> col:40 _strtoi64 'long long (const char *, char **, int) __attribute__((cdecl))':'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1c991c888b0 <col:57, col:70> col:70 _String 'const char *'
| |-ParmVarDecl 0x1c991c88930 <col:104, col:112> col:112 _EndPtr 'char **'
| `-ParmVarDecl 0x1c991c889b0 <col:126, col:130> col:130 _Radix 'int'
|-FunctionDecl 0x1c991c88fb0 <line:489:24, col:166> col:40 _strtoi64_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1c991c88c30 <col:59, col:72> col:72 _String 'const char *'
| |-ParmVarDecl 0x1c991c88cb0 <col:106, col:114> col:114 _EndPtr 'char **'
| |-ParmVarDecl 0x1c991c88d30 <col:128, col:132> col:132 _Radix 'int'
| `-ParmVarDecl 0x1c991c88da8 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c89338 <line:490:24, col:146> col:49 _strtoui64 'unsigned long long (const char *, char **, int) __attribute__((cdecl))':'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1c991c890a0 <col:67, col:80> col:80 _String 'const char *'
| |-ParmVarDecl 0x1c991c89120 <col:114, col:122> col:122 _EndPtr 'char **'
| `-ParmVarDecl 0x1c991c891a0 <col:136, col:140> col:140 _Radix 'int'
|-FunctionDecl 0x1c991c897a0 <line:491:24, col:177> col:49 _strtoui64_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1c991c89420 <col:69, col:82> col:82 _String 'const char *'
| |-ParmVarDecl 0x1c991c894a0 <col:116, col:124> col:124 _EndPtr 'char **'
| |-ParmVarDecl 0x1c991c89520 <col:138, col:143> col:143 _Radix 'int'
| `-ParmVarDecl 0x1c991c89598 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c8ab08 <line:492:24, col:88> col:39 ldiv 'ldiv_t (long, long) __attribute__((cdecl))':'ldiv_t (long, long)'
| |-ParmVarDecl 0x1c991c8a8e8 <col:49, col:54> col:54 _Numerator 'long'
| `-ParmVarDecl 0x1c991c8a968 <col:71, col:76> col:76 _Denominator 'long'
|-FunctionDecl 0x1c991c8ae28 <line:493:24, col:100> col:40 lldiv 'lldiv_t (long long, long long) __attribute__((cdecl))':'lldiv_t (long long, long long)'
| |-ParmVarDecl 0x1c991c8ac08 <col:51, col:61> col:61 _Numerator 'long long'
| `-ParmVarDecl 0x1c991c8ac88 <col:78, col:88> col:88 _Denominator 'long long'
|-FunctionDecl 0x1c991c8b288 <line:515:28, col:140> col:44 _ltoa_s 'errno_t (long, char *, size_t, int) __attribute__((cdecl))':'errno_t (long, char *, size_t, int)'
| |-ParmVarDecl 0x1c991c8af08 <col:57, col:62> col:62 _Val 'long'
| |-ParmVarDecl 0x1c991c8af88 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991c8b000 <col:111, col:118> col:118 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c8b080 <col:130, col:134> col:134 _Radix 'int'
|-FunctionDecl 0x1c991c8b6d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:517:79 _ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1c991c8b438 <col:91, col:97> col:97 _Value 'long'
| |-ParmVarDecl 0x1c991c8b4b8 <col:129, col:135> col:135 _Dest 'char *'
| |-ParmVarDecl 0x1c991c8b538 <col:147, col:152> col:152 _Radix 'int'
| `-DeprecatedAttr 0x1c991c8b790 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c84ab0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:518:24, col:128> col:39 mblen 'int (const char *, size_t) __attribute__((cdecl))':'int (const char *, size_t)'
| |-ParmVarDecl 0x1c991c84888 <col:89, col:102> col:102 _Ch 'const char *'
| `-ParmVarDecl 0x1c991c84900 <col:112, col:119> col:119 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991c84e58 <line:519:24, col:159> col:39 _mblen_l 'int (const char *, size_t, _locale_t) __attribute__((cdecl))':'int (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1c991c84b90 <col:92, col:105> col:105 _Ch 'const char *'
| |-ParmVarDecl 0x1c991c84c08 <col:115, col:122> col:122 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c84c80 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c850b0 <line:520:24, col:73> col:39 _mbstrlen 'size_t (const char *) __attribute__((cdecl))':'size_t (const char *)'
| `-ParmVarDecl 0x1c991c84f40 <col:56, col:69> col:69 _Str 'const char *'
|-FunctionDecl 0x1c991c853a8 <line:521:24, col:102> col:39 _mbstrlen_l 'size_t (const char *, _locale_t) __attribute__((cdecl))':'size_t (const char *, _locale_t)'
| |-ParmVarDecl 0x1c991c85188 <col:58, col:70> col:70 _Str 'const char *'
| `-ParmVarDecl 0x1c991c85200 <col:85, col:95> col:95 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c856a8 <line:522:24, col:96> col:39 _mbstrnlen 'size_t (const char *, size_t) __attribute__((cdecl))':'size_t (const char *, size_t)'
| |-ParmVarDecl 0x1c991c85488 <col:57, col:69> col:69 _Str 'const char *'
| `-ParmVarDecl 0x1c991c85500 <col:80, col:87> col:87 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991c85a60 <line:523:24, col:126> col:39 _mbstrnlen_l 'size_t (const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1c991c85788 <col:59, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1c991c85800 <col:82, col:89> col:89 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c85890 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c85e18 <line:524:9, col:170> col:24 mbtowc 'int (wchar_t *, const char *, size_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1c991c85b40 <col:54, col:64> col:64 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1c991c85bc0 <col:122, col:135> col:135 _SrcCh 'const char *'
| `-ParmVarDecl 0x1c991c85c38 <col:148, col:155> col:155 _SrcSizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991c86270 <line:525:9, col:201> col:24 _mbtowc_l 'int (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'int (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1c991c85ef8 <col:57, col:67> col:67 _DstCh 'wchar_t *'
| |-ParmVarDecl 0x1c991c85f78 <col:125, col:138> col:138 _SrcCh 'const char *'
| |-ParmVarDecl 0x1c991c85ff0 <col:151, col:158> col:158 _SrcSizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c86068 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c86770 <line:526:28, col:271> col:44 mbstowcs_s 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t)'
| |-ParmVarDecl 0x1c991c86358 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1c991c863d0 <col:155, col:165> col:165 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c991c86448 <col:179, col:186> col:186 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c864c8 <col:227, col:240> col:240 _SrcBuf 'const char *'
| `-ParmVarDecl 0x1c991c86540 <col:254, col:261> col:261 _MaxCount 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991c87c40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:528:56 mbstowcs 'size_t (wchar_t *, const char *, size_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t)'
| |-ParmVarDecl 0x1c991c87970 <col:97, col:106> col:106 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c991c879f0 <col:120, col:134> col:134 _Source 'const char *'
| |-ParmVarDecl 0x1c991c87a68 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1c991c87cf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using mbstowcs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c882f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:530:28, col:301> col:44 _mbstowcs_s_l 'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1c991c87e38 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1c991c87eb0 <col:158, col:168> col:168 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c991c87f28 <col:182, col:189> col:189 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c87fa8 <col:230, col:243> col:243 _SrcBuf 'const char *'
| |-ParmVarDecl 0x1c991c88020 <col:257, col:264> col:264 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c88098 <col:284, col:294> col:294 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c8f920 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:532:59 _mbstowcs_l 'size_t (wchar_t *, const char *, size_t, _locale_t) __attribute__((cdecl))':'size_t (wchar_t *, const char *, size_t, _locale_t)'
| |-ParmVarDecl 0x1c991c884e8 <col:149, col:158> col:158 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c991c88568 <col:172, col:186> col:186 _Source 'const char *'
| |-ParmVarDecl 0x1c991c885e0 <col:200, col:208> col:208 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c88658 <col:228, col:239> col:239 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c991c8f9e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _mbstowcs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c8fbe0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:534:24, col:48> col:39 rand 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1c991c8fd90 <line:539:28, col:73> col:43 _set_error_mode 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1c991c8fcb0 <col:64, col:68> col:68 _Mode 'int'
|-FunctionDecl 0x1c991c8ffb0 <line:541:9, col:53> col:24 srand 'void (unsigned int) __attribute__((cdecl))':'void (unsigned int)'
| `-ParmVarDecl 0x1c991c8fe68 <col:35, col:48> col:48 _Seed 'unsigned int'
|-FunctionDecl 0x1c991c90270 <line:542:39> col:39 implicit strtod 'double (const char *, char **)' extern
| |-ParmVarDecl 0x1c991c90310 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1c991c90378 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1c991c903f0 prev 0x1c991c90270 <col:24, col:112> col:39 strtod 'double (const char *, char **)'
| |-ParmVarDecl 0x1c991c90088 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1c991c90108 <col:97, col:105> col:105 _EndPtr 'char **'
|-FunctionDecl 0x1c991c907a8 <line:543:24, col:143> col:39 _strtod_l 'double (const char *, char **, _locale_t) __attribute__((cdecl))':'double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1c991c904d0 <col:56, col:69> col:69 _Str 'const char *'
| |-ParmVarDecl 0x1c991c90550 <col:100, col:108> col:108 _EndPtr 'char **'
| `-ParmVarDecl 0x1c991c905c8 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c91b58 <line:544:39> col:39 implicit strtol 'long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1c991c91bf8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c991c91c60 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1c991c91cc8 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1c991c91d48 prev 0x1c991c91b58 <col:24, col:130> col:39 strtol 'long (const char *, char **, int)'
| |-ParmVarDecl 0x1c991c90890 <col:53, col:66> col:66 _Str 'const char *'
| |-ParmVarDecl 0x1c991c91940 <col:97, col:105> col:105 _EndPtr 'char **'
| `-ParmVarDecl 0x1c991c919c0 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1c991c921b0 <line:545:24, col:158> col:39 _strtol_l 'long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1c991c91e30 <col:56, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1c991c91eb0 <col:99, col:106> col:106 _EndPtr 'char **'
| |-ParmVarDecl 0x1c991c91f30 <col:120, col:124> col:124 _Radix 'int'
| `-ParmVarDecl 0x1c991c91fa8 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c924c0 <line:546:43> col:43 implicit strtoll 'long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1c991c92560 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c991c925c8 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1c991c92630 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1c991c926b0 prev 0x1c991c924c0 <col:24, col:135> col:43 strtoll 'long long (const char *, char **, int)'
| |-ParmVarDecl 0x1c991c922a0 <col:58, col:71> col:71 _Str 'const char *'
| |-ParmVarDecl 0x1c991c92320 <col:102, col:110> col:110 _EndPtr 'char **'
| `-ParmVarDecl 0x1c991c923a0 <col:124, col:128> col:128 _Radix 'int'
|-FunctionDecl 0x1c991c8ba20 <line:547:24, col:166> col:43 _strtoll_l 'long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1c991c92798 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1c991c92818 <col:105, col:113> col:113 _EndPtr 'char **'
| |-ParmVarDecl 0x1c991c92898 <col:127, col:131> col:131 _Radix 'int'
| `-ParmVarDecl 0x1c991c8b8e0 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c8bda8 <line:548:46> col:46 implicit strtoul 'unsigned long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1c991c8be48 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c991c8beb0 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1c991c8bf18 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1c991c8bf98 prev 0x1c991c8bda8 <col:24, col:137> col:46 strtoul 'unsigned long (const char *, char **, int)'
| |-ParmVarDecl 0x1c991c8bb10 <col:61, col:74> col:74 _Str 'const char *'
| |-ParmVarDecl 0x1c991c8bb90 <col:105, col:113> col:113 _EndPtr 'char **'
| `-ParmVarDecl 0x1c991c8bc10 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1c991c8c400 <line:549:24, col:160> col:46 _strtoul_l 'unsigned long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1c991c8c080 <col:57, col:70> col:70 _Str 'const char *'
| |-ParmVarDecl 0x1c991c8c100 <col:101, col:108> col:108 _EndPtr 'char **'
| |-ParmVarDecl 0x1c991c8c180 <col:122, col:126> col:126 _Radix 'int'
| `-ParmVarDecl 0x1c991c8c1f8 <col:143, col:153> col:153 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c8c710 <line:550:51> col:51 implicit strtoull 'unsigned long long (const char *, char **, int)' extern
| |-ParmVarDecl 0x1c991c8c7b0 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1c991c8c818 <<invalid sloc>> <invalid sloc> 'char **'
| `-ParmVarDecl 0x1c991c92950 <<invalid sloc>> <invalid sloc> 'int'
|-FunctionDecl 0x1c991c929d0 prev 0x1c991c8c710 <col:24, col:143> col:51 strtoull 'unsigned long long (const char *, char **, int)'
| |-ParmVarDecl 0x1c991c8c4f0 <col:67, col:80> col:80 _Str 'const char *'
| |-ParmVarDecl 0x1c991c8c570 <col:111, col:119> col:119 _EndPtr 'char **'
| `-ParmVarDecl 0x1c991c8c5f0 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1c991c92d70 <line:551:24, col:174> col:51 _strtoull_l 'unsigned long long (const char *, char **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const char *, char **, int, _locale_t)'
| |-ParmVarDecl 0x1c991c92ab8 <col:70, col:83> col:83 _Str 'const char *'
| |-ParmVarDecl 0x1c991c92b38 <col:114, col:122> col:122 _EndPtr 'char **'
| |-ParmVarDecl 0x1c991c92bb8 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1c991c92c30 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c93050 <line:552:44> col:44 implicit strtold 'long double (const char *, char **)' extern
| |-ParmVarDecl 0x1c991c930f0 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1c991c93158 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1c991c931d0 prev 0x1c991c93050 <col:24, col:118> col:44 strtold 'long double (const char *, char **)'
| |-ParmVarDecl 0x1c991c92e60 <col:59, col:72> col:72 _Str 'const char *'
| `-ParmVarDecl 0x1c991c92ee0 <col:103, col:111> col:111 _EndPtr 'char **'
|-FunctionDecl 0x1c991c93588 <line:553:24, col:149> col:44 _strtold_l 'long double (const char *, char **, _locale_t) __attribute__((cdecl))':'long double (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1c991c932b0 <col:62, col:75> col:75 _Str 'const char *'
| |-ParmVarDecl 0x1c991c93330 <col:106, col:114> col:114 _EndPtr 'char **'
| `-ParmVarDecl 0x1c991c933a8 <col:132, col:142> col:142 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c93860 <line:554:38> col:38 implicit strtof 'float (const char *, char **)' extern
| |-ParmVarDecl 0x1c991c93960 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1c991c939c8 <<invalid sloc>> <invalid sloc> 'char **'
|-FunctionDecl 0x1c991c93a40 prev 0x1c991c93860 <col:24, col:111> col:38 strtof 'float (const char *, char **)'
| |-ParmVarDecl 0x1c991c93670 <col:52, col:65> col:65 _Str 'const char *'
| `-ParmVarDecl 0x1c991c936f0 <col:96, col:104> col:104 _EndPtr 'char **'
|-FunctionDecl 0x1c991c93df8 <line:555:24, col:142> col:38 _strtof_l 'float (const char *, char **, _locale_t) __attribute__((cdecl))':'float (const char *, char **, _locale_t)'
| |-ParmVarDecl 0x1c991c93b20 <col:55, col:68> col:68 _Str 'const char *'
| |-ParmVarDecl 0x1c991c93ba0 <col:99, col:107> col:107 _EndPtr 'char **'
| `-ParmVarDecl 0x1c991c93c18 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c93fc0 <line:560:9, col:60> col:21 system 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c991c93ee0 <col:39, col:52> col:52 _Command 'const char *'
|-FunctionDecl 0x1c991c94418 <line:564:28, col:150> col:44 _ultoa_s 'errno_t (unsigned long, char *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, char *, size_t, int)'
| |-ParmVarDecl 0x1c991c94098 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1c991c94118 <col:100, col:107> col:107 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991c94190 <col:121, col:128> col:128 _Size 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c94210 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1c991c94868 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:566:79 _ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1c991c945c8 <col:92, col:107> col:107 _Value 'unsigned long'
| |-ParmVarDecl 0x1c991c94648 <col:139, col:145> col:145 _Dest 'char *'
| |-ParmVarDecl 0x1c991c946c8 <col:157, col:162> col:162 _Radix 'int'
| `-DeprecatedAttr 0x1c991c8c8f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c8cd20 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:567:127> col:58 wctomb 'int (char *, wchar_t) __attribute__((cdecl))':'int (char *, wchar_t)'
| |-ParmVarDecl 0x1c991c8caf8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1c991c8cb70 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| `-DeprecatedAttr 0x1c991c8cdd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wctomb_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c8d2a8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:568:155> col:61 _wctomb_l 'int (char *, wchar_t, _locale_t) __attribute__((cdecl))':'int (char *, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1c991c8cfd8 <col:96, col:103> col:103 _MbCh 'char *'
| |-ParmVarDecl 0x1c991c8d050 <col:115, col:123> col:123 _WCh 'wchar_t':'unsigned short'
| |-ParmVarDecl 0x1c991c8d0c8 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c991c8d360 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wctomb_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c8d818 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:570:28, col:200> col:44 wctomb_s 'errno_t (int *, char *, rsize_t, wchar_t) __attribute__((cdecl))':'errno_t (int *, char *, rsize_t, wchar_t)'
| |-ParmVarDecl 0x1c991c8d4a8 <col:63, col:69> col:69 _SizeConverted 'int *'
| |-ParmVarDecl 0x1c991c8d528 <col:142, col:149> col:149 _MbCh 'char *'
| |-ParmVarDecl 0x1c991c8d5a0 <col:161, col:169> col:169 _SizeInBytes 'rsize_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c8d618 <col:188, col:196> col:196 _WCh 'wchar_t':'unsigned short'
|-FunctionDecl 0x1c991c8dd30 <line:572:28, col:206> col:44 _wctomb_s_l 'errno_t (int *, char *, size_t, wchar_t, _locale_t) __attribute__((cdecl))':'errno_t (int *, char *, size_t, wchar_t, _locale_t)'
| |-ParmVarDecl 0x1c991c8d918 <col:66, col:72> col:72 _SizeConverted 'int *'
| |-ParmVarDecl 0x1c991c8d998 <col:121, col:128> col:128 _MbCh 'char *'
| |-ParmVarDecl 0x1c991c8da10 <col:140, col:147> col:147 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c8da88 <col:166, col:174> col:174 _WCh 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1c991c8db00 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c8e240 <line:573:28, col:263> col:44 wcstombs_s 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1c991c8de20 <col:65, col:74> col:74 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1c991c8dea0 <col:164, col:171> col:171 _Dst 'char *'
| |-ParmVarDecl 0x1c991c8df18 <col:182, col:189> col:189 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c8df90 <col:213, col:229> col:229 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1c991c8e008 <col:240, col:247> col:247 _MaxCountInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991c8e6c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2007:144> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:575:56 wcstombs 'size_t (char *, const wchar_t *, size_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1c991c8e3f8 <col:97, col:103> col:103 _Dest 'char *'
| |-ParmVarDecl 0x1c991c8e470 <col:117, col:134> col:134 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1c991c8e4e8 <col:148, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| `-DeprecatedAttr 0x1c991c8e778 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wcstombs_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c95e48 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:576:28, col:294> col:44 _wcstombs_s_l 'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'errno_t (size_t *, char *, size_t, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1c991c95980 <col:68, col:77> col:77 _PtNumOfCharConverted 'size_t *'
| |-ParmVarDecl 0x1c991c95a00 <col:167, col:174> col:174 _Dst 'char *'
| |-ParmVarDecl 0x1c991c95a78 <col:185, col:192> col:192 _DstSizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c95af0 <col:216, col:232> col:232 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1c991c95b68 <col:243, col:250> col:250 _MaxCountInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c95be0 <col:277, col:287> col:287 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991c96378 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2010:160> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:578:59 _wcstombs_l 'size_t (char *, const wchar_t *, size_t, _locale_t) __attribute__((cdecl))':'size_t (char *, const wchar_t *, size_t, _locale_t)'
| |-ParmVarDecl 0x1c991c96008 <col:146, col:152> col:152 _Dest 'char *'
| |-ParmVarDecl 0x1c991c96080 <col:166, col:183> col:183 _Source 'const wchar_t *'
| |-ParmVarDecl 0x1c991c960f8 <col:197, col:205> col:205 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c96170 <col:225, col:236> col:236 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1c991c96438 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wcstombs_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c967a0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:142> col:142 implicit calloc 'void *(unsigned long long, unsigned long long)' extern
| |-ParmVarDecl 0x1c991c96840 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1c991c968a8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1c991c8e910 prev 0x1c991c967a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:640:224> col:142 calloc 'void *(unsigned long long, unsigned long long)'
| |-ParmVarDecl 0x1c991c96578 <col:173, col:180> col:180 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c965f0 <col:212, col:219> col:219 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1c991c8e9c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1c991c8ea18 <line:615:33> restrict
|-FunctionDecl 0x1c991c8ebb0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:641:182> col:132 free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1c991c8ea70 <col:168, col:175> col:175 _Memory 'void *'
| `-NoAliasAttr 0x1c991c8ec58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1c991c8ee58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:161> col:161 implicit malloc 'void *(unsigned long long)' extern
| `-ParmVarDecl 0x1c991c8eef8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1c991c8ef68 prev 0x1c991c8ee58 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:642:204> col:161 malloc 'void *(unsigned long long)'
| |-ParmVarDecl 0x1c991c8ecd8 <col:192, col:199> col:199 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1c991c8f010 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1c991c8f068 <line:615:33> restrict
|-FunctionDecl 0x1c991c8f2e0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:142> col:142 implicit realloc 'void *(void *, unsigned long long)' extern
| |-ParmVarDecl 0x1c991c8f380 <<invalid sloc>> <invalid sloc> 'void *'
| `-ParmVarDecl 0x1c991c8f3e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1c991c8f460 prev 0x1c991c8f2e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:644:236> col:142 realloc 'void *(void *, unsigned long long)'
| |-ParmVarDecl 0x1c991c8f0c0 <col:181, col:188> col:188 _Memory 'void *'
| |-ParmVarDecl 0x1c991c8f138 <col:221, col:228> col:228 _NewSize 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1c991c8f510 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1c991c8f568 <line:615:33> restrict
|-FunctionDecl 0x1c991c96990 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:646:274> col:142 _recalloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1c991c8f5c0 <col:183, col:190> col:190 _Memory 'void *'
| |-ParmVarDecl 0x1c991c8f638 <col:223, col:230> col:230 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c8f6b0 <col:262, col:269> col:269 _Size 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1c991c96a48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1c991c96aa0 <line:615:33> restrict
|-FunctionDecl 0x1c991c96bd0 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:647:191> col:132 _aligned_free 'void (void *) __attribute__((cdecl))':'void (void *)'
| |-ParmVarDecl 0x1c991c96af8 <col:177, col:184> col:184 _Memory 'void *'
| `-NoAliasAttr 0x1c991c96c78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
|-FunctionDecl 0x1c991c96e70 <col:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:648:218> col:142 _aligned_malloc 'void *(size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t)'
| |-ParmVarDecl 0x1c991c96cf8 <col:182, col:189> col:189 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c96d70 <col:201, col:208> col:208 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1c991c96f20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1c991c96f78 <line:615:33> restrict
|-FunctionDecl 0x1c991c97298 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:649:246> col:142 _aligned_offset_malloc 'void *(size_t, size_t, size_t) __attribute__((cdecl))':'void *(size_t, size_t, size_t)'
| |-ParmVarDecl 0x1c991c96fc8 <col:189, col:196> col:196 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c97040 <col:208, col:215> col:215 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c970b8 <col:232, col:239> col:239 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1c991c97350 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1c991c973a8 <line:615:33> restrict
|-FunctionDecl 0x1c991c97610 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:651:272> col:145 _aligned_realloc 'void *(void *, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t)'
| |-ParmVarDecl 0x1c991c97400 <col:193, col:200> col:200 _Memory 'void *'
| |-ParmVarDecl 0x1c991c97478 <col:233, col:240> col:240 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c974f0 <col:255, col:262> col:262 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1c991c976c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1c991c97720 <line:615:33> restrict
|-FunctionDecl 0x1c991c98b10 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:653:306> col:142 _aligned_recalloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1c991c97778 <col:191, col:198> col:198 _Memory 'void *'
| |-ParmVarDecl 0x1c991c977f0 <col:231, col:238> col:238 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c97868 <col:270, col:277> col:277 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c978e0 <col:289, col:296> col:296 _Alignment 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1c991c98bd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1c991c98c28 <line:615:33> restrict
|-FunctionDecl 0x1c991c98f28 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:655:300> col:145 _aligned_offset_realloc 'void *(void *, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1c991c98c80 <col:200, col:207> col:207 _Memory 'void *'
| |-ParmVarDecl 0x1c991c98cf8 <col:240, col:247> col:247 _NewSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c98d70 <col:262, col:269> col:269 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c98de8 <col:286, col:293> col:293 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1c991c98fe8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1c991c99040 <line:615:33> restrict
|-FunctionDecl 0x1c991c994b8 <line:611:21, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:657:334> col:142 _aligned_offset_recalloc 'void *(void *, size_t, size_t, size_t, size_t) __attribute__((cdecl))':'void *(void *, size_t, size_t, size_t, size_t)'
| |-ParmVarDecl 0x1c991c99098 <col:198, col:205> col:205 _Memory 'void *'
| |-ParmVarDecl 0x1c991c99110 <col:238, col:245> col:245 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c99188 <col:277, col:284> col:284 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c99200 <col:296, col:303> col:303 _Alignment 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991c99278 <col:320, col:327> col:327 _Offset 'size_t':'unsigned long long'
| |-NoAliasAttr 0x1c991c99580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:611:32>
| `-RestrictAttr 0x1c991c995d8 <line:615:33> restrict
|-FunctionDecl 0x1c991c998f0 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:658:73, col:176> col:88 _aligned_msize 'size_t (void *, size_t, size_t) __attribute__((cdecl))':'size_t (void *, size_t, size_t)'
| |-ParmVarDecl 0x1c991c99630 <col:117, col:124> col:124 _Memory 'void *'
| |-ParmVarDecl 0x1c991c996a8 <col:138, col:145> col:145 _Alignment 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c99720 <col:162, col:169> col:169 _Offset 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991c97d48 <line:685:28, col:157> col:44 _itow_s 'errno_t (int, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (int, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1c991c979d0 <col:58, col:62> col:62 _Val 'int'
| |-ParmVarDecl 0x1c991c97a48 <col:97, col:107> col:107 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c991c97ac0 <col:121, col:128> col:128 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c97b40 <col:147, col:151> col:151 _Radix 'int'
|-FunctionDecl 0x1c991c981c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:687:82 _itow 'wchar_t *(int, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(int, wchar_t *, int)'
| |-ParmVarDecl 0x1c991c97ef8 <col:94, col:99> col:99 _Value 'int'
| |-ParmVarDecl 0x1c991c97f70 <col:131, col:140> col:140 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c991c97ff0 <col:152, col:157> col:157 _Radix 'int'
| `-DeprecatedAttr 0x1c991c98278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _itow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c98738 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:688:28, col:158> col:44 _ltow_s 'errno_t (long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1c991c983c0 <col:58, col:63> col:63 _Val 'long'
| |-ParmVarDecl 0x1c991c98438 <col:98, col:108> col:108 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c991c984b0 <col:122, col:129> col:129 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c98530 <col:148, col:152> col:152 _Radix 'int'
|-FunctionDecl 0x1c991c99c10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:690:82 _ltow 'wchar_t *(long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long, wchar_t *, int)'
| |-ParmVarDecl 0x1c991c988e8 <col:94, col:100> col:100 _Value 'long'
| |-ParmVarDecl 0x1c991c999c0 <col:132, col:141> col:141 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c991c99a40 <col:153, col:158> col:158 _Radix 'int'
| `-DeprecatedAttr 0x1c991c99cc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ltow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991c9a188 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:691:28, col:168> col:44 _ultow_s 'errno_t (unsigned long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1c991c99e10 <col:59, col:73> col:73 _Val 'unsigned long'
| |-ParmVarDecl 0x1c991c99e88 <col:108, col:118> col:118 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c991c99f00 <col:132, col:139> col:139 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991c99f80 <col:158, col:162> col:162 _Radix 'int'
|-FunctionDecl 0x1c991c9a600 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1951:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:693:82 _ultow 'wchar_t *(unsigned long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long, wchar_t *, int)'
| |-ParmVarDecl 0x1c991c9a338 <col:95, col:110> col:110 _Value 'unsigned long'
| |-ParmVarDecl 0x1c991c9a3b0 <col:142, col:151> col:151 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1c991c9a430 <col:163, col:168> col:168 _Radix 'int'
| `-DeprecatedAttr 0x1c991c9a6b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ultow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991ced050 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:694:24, col:118> col:39 wcstod 'double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1c991c9a7f8 <col:53, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c991c9a878 <col:100, col:111> col:111 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1c991ced3f8 <line:695:24, col:148> col:39 _wcstod_l 'double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1c991ced128 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991ced1a8 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1c991ced220 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991ced7b8 <line:696:24, col:129> col:39 wcstol 'long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1c991ced4d8 <col:53, col:68> col:68 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991ced558 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1c991ced5d8 <col:119, col:123> col:123 _Radix 'int'
|-FunctionDecl 0x1c991cedc20 <line:697:24, col:159> col:39 _wcstol_l 'long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1c991ced898 <col:56, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991ced918 <col:102, col:112> col:112 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1c991ced998 <col:121, col:125> col:125 _Radix 'int'
| `-ParmVarDecl 0x1c991ceda10 <col:142, col:152> col:152 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991ceb008 <line:698:24, col:133> col:43 wcstoll 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1c991cedd08 <col:58, col:73> col:73 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991cedd88 <col:104, col:114> col:114 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1c991cede08 <col:123, col:127> col:127 _Radix 'int'
|-FunctionDecl 0x1c991ceb470 <line:699:24, col:164> col:43 _wcstoll_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1c991ceb0e8 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991ceb168 <col:107, col:117> col:117 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1c991ceb1e8 <col:126, col:130> col:130 _Radix 'int'
| `-ParmVarDecl 0x1c991ceb260 <col:147, col:157> col:157 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991ceb838 <line:700:24, col:137> col:46 wcstoul 'unsigned long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1c991ceb558 <col:61, col:76> col:76 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991ceb5d8 <col:107, col:118> col:118 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1c991ceb658 <col:127, col:131> col:131 _Radix 'int'
|-FunctionDecl 0x1c991cebca0 <line:701:24, col:167> col:46 _wcstoul_l 'unsigned long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1c991ceb918 <col:64, col:79> col:79 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991ceb998 <col:110, col:120> col:120 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1c991ceba18 <col:129, col:133> col:133 _Radix 'int'
| `-ParmVarDecl 0x1c991ceba90 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cec078 <line:702:24, col:143> col:51 wcstoull 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1c991cebd88 <col:67, col:82> col:82 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991cebe08 <col:113, col:124> col:124 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1c991cebe88 <col:133, col:137> col:137 _Radix 'int'
|-FunctionDecl 0x1c991cec4e0 <line:703:24, col:174> col:51 _wcstoull_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1c991cec158 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991cec1d8 <col:116, col:127> col:127 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1c991cec258 <col:136, col:140> col:140 _Radix 'int'
| `-ParmVarDecl 0x1c991cec2d0 <col:157, col:167> col:167 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cec7f0 <line:704:24, col:124> col:44 wcstold 'long double (const wchar_t *, wchar_t **) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1c991cec5c8 <col:59, col:75> col:75 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c991cec648 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1c991cecb98 <line:705:24, col:155> col:44 _wcstold_l 'long double (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'long double (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1c991cec8c8 <col:62, col:78> col:78 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991cec948 <col:109, col:120> col:120 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1c991cec9c0 <col:138, col:148> col:148 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cecea0 <line:706:24, col:117> col:38 wcstof 'float (const wchar_t *, wchar_t **) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **)'
| |-ParmVarDecl 0x1c991cecc78 <col:52, col:68> col:68 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c991ceccf8 <col:99, col:110> col:110 _EndPtr 'wchar_t **'
|-FunctionDecl 0x1c991cea288 <line:707:24, col:148> col:38 _wcstof_l 'float (const wchar_t *, wchar_t **, _locale_t) __attribute__((cdecl))':'float (const wchar_t *, wchar_t **, _locale_t)'
| |-ParmVarDecl 0x1c991ce9fb0 <col:55, col:71> col:71 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991cea030 <col:102, col:113> col:113 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1c991cea0a8 <col:131, col:141> col:141 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cea5a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:711:118> col:78 _wgetenv 'wchar_t *(const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *)'
| |-ParmVarDecl 0x1c991cea428 <col:94, col:110> col:110 _VarName 'const wchar_t *'
| `-DeprecatedAttr 0x1c991cea648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wdupenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991ceaaf8 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:712:28, col:198> col:44 _wgetenv_s 'errno_t (size_t *, wchar_t *, size_t, const wchar_t *) __attribute__((cdecl))':'errno_t (size_t *, wchar_t *, size_t, const wchar_t *)'
| |-ParmVarDecl 0x1c991cea788 <col:61, col:70> col:70 _ReturnSize 'size_t *'
| |-ParmVarDecl 0x1c991cea800 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c991cea878 <col:143, col:150> col:150 _DstSizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991cea8f0 <col:174, col:190> col:190 _VarName 'const wchar_t *'
|-FunctionDecl 0x1c991ceaeb0 <line:720:28, col:214> col:44 _wdupenv_s 'errno_t (wchar_t **, size_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t **, size_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c991ceabe8 <col:127, col:137> col:137 _Buffer 'wchar_t **'
| |-ParmVarDecl 0x1c991ceac60 <col:156, col:164> col:164 _BufferSizeInWords 'size_t *'
| `-ParmVarDecl 0x1c991ceacd8 <col:191, col:206> col:206 _VarName 'const wchar_t *'
|-FunctionDecl 0x1c991cee168 <line:728:9, col:65> col:21 _wsystem 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c991cedff0 <col:41, col:57> col:57 _Command 'const wchar_t *'
|-FunctionDecl 0x1c991cee3b8 <line:733:24, col:71> col:39 _wtof 'double (const wchar_t *) __attribute__((cdecl))':'double (const wchar_t *)'
| `-ParmVarDecl 0x1c991cee238 <col:52, col:67> col:67 _Str 'const wchar_t *'
|-FunctionDecl 0x1c991cee6b0 <line:734:24, col:101> col:39 _wtof_l 'double (const wchar_t *, _locale_t) __attribute__((cdecl))':'double (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1c991cee488 <col:54, col:69> col:69 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c991cee500 <col:84, col:94> col:94 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cee868 <line:735:24, col:68> col:36 _wtoi 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c991cee788 <col:49, col:64> col:64 _Str 'const wchar_t *'
|-FunctionDecl 0x1c991ceeb60 <line:736:24, col:98> col:36 _wtoi_l 'int (const wchar_t *, _locale_t) __attribute__((cdecl))':'int (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1c991cee938 <col:51, col:66> col:66 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c991cee9b0 <col:81, col:91> col:91 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991ceedb8 <line:737:24, col:69> col:37 _wtol 'long (const wchar_t *) __attribute__((cdecl))':'long (const wchar_t *)'
| `-ParmVarDecl 0x1c991ceec38 <col:50, col:65> col:65 _Str 'const wchar_t *'
|-FunctionDecl 0x1c991cef0d0 <line:738:24, col:99> col:37 _wtol_l 'long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1c991ceee88 <col:52, col:67> col:67 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c991ceef00 <col:82, col:92> col:92 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cef328 <line:739:24, col:75> col:42 _wtoll 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1c991cef1a8 <col:56, col:71> col:71 _Str 'const wchar_t *'
|-FunctionDecl 0x1c991cef620 <line:740:24, col:105> col:42 _wtoll_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1c991cef3f8 <col:58, col:73> col:73 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c991cef470 <col:88, col:98> col:98 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cefa78 <line:742:28, col:162> col:44 _i64tow_s 'errno_t (long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1c991cef700 <col:59, col:67> col:67 _Val 'long long'
| |-ParmVarDecl 0x1c991cef778 <col:102, col:112> col:112 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c991cef7f0 <col:126, col:133> col:133 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991cef870 <col:152, col:156> col:156 _Radix 'int'
|-FunctionDecl 0x1c991cefef0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:743:146> col:62 _i64tow 'wchar_t *(long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(long long, wchar_t *, int)'
| |-ParmVarDecl 0x1c991cefc28 <col:75, col:83> col:83 _Val 'long long'
| |-ParmVarDecl 0x1c991cefca0 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c991cefd20 <col:136, col:140> col:140 _Radix 'int'
| `-DeprecatedAttr 0x1c991ceffa8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _i64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991ce8408 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:744:28, col:172> col:44 _ui64tow_s 'errno_t (unsigned long long, wchar_t *, size_t, int) __attribute__((cdecl))':'errno_t (unsigned long long, wchar_t *, size_t, int)'
| |-ParmVarDecl 0x1c991ce8090 <col:60, col:77> col:77 _Val 'unsigned long long'
| |-ParmVarDecl 0x1c991ce8108 <col:112, col:122> col:122 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c991ce8180 <col:136, col:143> col:143 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991ce8200 <col:162, col:166> col:166 _Radix 'int'
|-FunctionDecl 0x1c991ce8880 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:745:157> col:63 _ui64tow 'wchar_t *(unsigned long long, wchar_t *, int) __attribute__((cdecl))':'wchar_t *(unsigned long long, wchar_t *, int)'
| |-ParmVarDecl 0x1c991ce85b8 <col:77, col:94> col:94 _Val 'unsigned long long'
| |-ParmVarDecl 0x1c991ce8630 <col:123, col:133> col:133 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1c991ce86b0 <col:147, col:151> col:151 _Radix 'int'
| `-DeprecatedAttr 0x1c991ce8938 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ui64tow_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991ce8b58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:746:24, col:76> col:42 _wtoi64 'long long (const wchar_t *) __attribute__((cdecl))':'long long (const wchar_t *)'
| `-ParmVarDecl 0x1c991ce8a78 <col:57, col:72> col:72 _Str 'const wchar_t *'
|-FunctionDecl 0x1c991ce8da0 <line:747:24, col:106> col:42 _wtoi64_l 'long long (const wchar_t *, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, _locale_t)'
| |-ParmVarDecl 0x1c991ce8c28 <col:59, col:74> col:74 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1c991ce8ca0 <col:89, col:99> col:99 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cf6190 <line:748:24, col:141> col:42 _wcstoi64 'long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1c991ce8e78 <col:59, col:75> col:75 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991ce8ef8 <col:106, col:117> col:117 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1c991cf6070 <col:131, col:135> col:135 _Radix 'int'
|-FunctionDecl 0x1c991cf6528 <line:749:24, col:171> col:42 _wcstoi64_l 'long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1c991cf6270 <col:61, col:77> col:77 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991cf62f0 <col:108, col:119> col:119 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1c991cf6370 <col:133, col:137> col:137 _Radix 'int'
| `-ParmVarDecl 0x1c991cf63e8 <col:154, col:164> col:164 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cf6830 <line:750:24, col:150> col:50 _wcstoui64 'unsigned long long (const wchar_t *, wchar_t **, int) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int)'
| |-ParmVarDecl 0x1c991cf6610 <col:68, col:84> col:84 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991cf6690 <col:115, col:126> col:126 _EndPtr 'wchar_t **'
| `-ParmVarDecl 0x1c991cf6710 <col:140, col:144> col:144 _Radix 'int'
|-FunctionDecl 0x1c991cf6bc8 <line:751:24, col:180> col:50 _wcstoui64_l 'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t) __attribute__((cdecl))':'unsigned long long (const wchar_t *, wchar_t **, int, _locale_t)'
| |-ParmVarDecl 0x1c991cf6910 <col:70, col:85> col:85 _Str 'const wchar_t *'
| |-ParmVarDecl 0x1c991cf6990 <col:117, col:128> col:128 _EndPtr 'wchar_t **'
| |-ParmVarDecl 0x1c991cf6a10 <col:142, col:146> col:146 _Radix 'int'
| `-ParmVarDecl 0x1c991cf6a88 <col:163, col:173> col:173 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cf6f88 <line:770:24, col:151> col:39 _fullpath 'char *(char *, const char *, size_t) __attribute__((cdecl))':'char *(char *, const char *, size_t)'
| |-ParmVarDecl 0x1c991cf6cb8 <col:82, col:89> col:89 _FullPath 'char *'
| |-ParmVarDecl 0x1c991cf6d38 <col:107, col:120> col:120 _Path 'const char *'
| `-ParmVarDecl 0x1c991cf6db0 <col:132, col:139> col:139 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991cf3518 <line:778:28, col:189> col:44 _ecvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1c991cf3040 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991cf30b8 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991cf3138 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1c991cf31b8 <col:132, col:136> col:136 _NumOfDights 'int'
| |-ParmVarDecl 0x1c991cf3238 <col:156, col:162> col:162 _PtDec 'int *'
| `-ParmVarDecl 0x1c991cf32b8 <col:176, col:182> col:182 _PtSign 'int *'
|-FunctionDecl 0x1c991cf3a10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:780:158> col:72 _ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1c991cf36d8 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1c991cf3758 <col:101, col:105> col:105 _NumOfDigits 'int'
| |-ParmVarDecl 0x1c991cf37d8 <col:125, col:131> col:131 _PtDec 'int *'
| |-ParmVarDecl 0x1c991cf3858 <col:145, col:151> col:151 _PtSign 'int *'
| `-DeprecatedAttr 0x1c991cf3ad0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991cf4050 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:781:28, col:186> col:44 _fcvt_s 'errno_t (char *, size_t, double, int, int *, int *) __attribute__((cdecl))':'errno_t (char *, size_t, double, int, int *, int *)'
| |-ParmVarDecl 0x1c991cf3c18 <col:74, col:81> col:81 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991cf3c90 <col:95, col:102> col:102 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991cf3d10 <col:114, col:121> col:121 _Val 'double'
| |-ParmVarDecl 0x1c991cf3d90 <col:132, col:136> col:136 _NumOfDec 'int'
| |-ParmVarDecl 0x1c991cf3e10 <col:153, col:159> col:159 _PtDec 'int *'
| `-ParmVarDecl 0x1c991cf3e90 <col:173, col:179> col:179 _PtSign 'int *'
|-FunctionDecl 0x1c991cf44d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:783:155> col:72 _fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1c991cf4210 <col:83, col:90> col:90 _Val 'double'
| |-ParmVarDecl 0x1c991cf4290 <col:101, col:105> col:105 _NumOfDec 'int'
| |-ParmVarDecl 0x1c991cf4310 <col:122, col:128> col:128 _PtDec 'int *'
| |-ParmVarDecl 0x1c991cf4390 <col:142, col:148> col:148 _PtSign 'int *'
| `-DeprecatedAttr 0x1c991cf4590 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991cf4a58 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:784:9, col:129> col:25 _gcvt_s 'errno_t (char *, size_t, double, int) __attribute__((cdecl))':'errno_t (char *, size_t, double, int)'
| |-ParmVarDecl 0x1c991cf46d8 <col:55, col:62> col:62 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991cf4750 <col:76, col:83> col:83 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991cf47d0 <col:95, col:102> col:102 _Val 'double'
| `-ParmVarDecl 0x1c991cf4850 <col:113, col:117> col:117 _NumOfDigits 'int'
|-FunctionDecl 0x1c991cf4ea8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:786:141> col:57 _gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1c991cf4c08 <col:68, col:75> col:75 _Val 'double'
| |-ParmVarDecl 0x1c991cf4c88 <col:86, col:90> col:90 _NumOfDigits 'int'
| |-ParmVarDecl 0x1c991cf4d08 <col:127, col:134> col:134 _DstBuf 'char *'
| `-DeprecatedAttr 0x1c991cf4f60 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _gcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991cf8390 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:788:24, col:91> col:36 _atodbl 'int (_CRT_DOUBLE *, char *) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *)'
| |-ParmVarDecl 0x1c991cf8168 <col:50, col:64> col:64 _Result '_CRT_DOUBLE *'
| `-ParmVarDecl 0x1c991cf81e8 <col:80, col:87> col:87 _Str 'char *'
|-FunctionDecl 0x1c991cf8710 <line:789:24, col:89> col:36 _atoldbl 'int (_LDOUBLE *, char *) __attribute__((cdecl))':'int (_LDOUBLE *, char *)'
| |-ParmVarDecl 0x1c991cf84e8 <col:51, col:62> col:62 _Result '_LDOUBLE *'
| `-ParmVarDecl 0x1c991cf8568 <col:78, col:85> col:85 _Str 'char *'
|-FunctionDecl 0x1c991cf8a90 <line:790:24, col:96> col:36 _atoflt 'int (_CRT_FLOAT *, const char *) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *)'
| |-ParmVarDecl 0x1c991cf8868 <col:50, col:63> col:63 _Result '_CRT_FLOAT *'
| `-ParmVarDecl 0x1c991cf88e8 <col:79, col:92> col:92 _Str 'const char *'
|-FunctionDecl 0x1c991cf8e38 <line:791:24, col:121> col:36 _atodbl_l 'int (_CRT_DOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_CRT_DOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1c991cf8b68 <col:52, col:66> col:66 _Result '_CRT_DOUBLE *'
| |-ParmVarDecl 0x1c991cf8be8 <col:82, col:89> col:89 _Str 'char *'
| `-ParmVarDecl 0x1c991cf8c60 <col:104, col:114> col:114 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cf71d8 <line:792:24, col:119> col:36 _atoldbl_l 'int (_LDOUBLE *, char *, _locale_t) __attribute__((cdecl))':'int (_LDOUBLE *, char *, _locale_t)'
| |-ParmVarDecl 0x1c991cf8f18 <col:53, col:64> col:64 _Result '_LDOUBLE *'
| |-ParmVarDecl 0x1c991cf8f98 <col:80, col:87> col:87 _Str 'char *'
| `-ParmVarDecl 0x1c991cf9010 <col:102, col:112> col:112 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cf7588 <line:793:24, col:126> col:36 _atoflt_l 'int (_CRT_FLOAT *, const char *, _locale_t) __attribute__((cdecl))':'int (_CRT_FLOAT *, const char *, _locale_t)'
| |-ParmVarDecl 0x1c991cf72b8 <col:52, col:65> col:65 _Result '_CRT_FLOAT *'
| |-ParmVarDecl 0x1c991cf7338 <col:81, col:94> col:94 _Str 'const char *'
| `-ParmVarDecl 0x1c991cf73b0 <col:109, col:119> col:119 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1c991cf7860 <line:794:46> col:46 implicit _lrotl 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1c991cf7900 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1c991cf7968 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1c991cf79e0 <col:46> Implicit
|-FunctionDecl 0x1c991cf7a38 prev 0x1c991cf7860 <col:24, col:93> col:46 _lrotl 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1c991cf7670 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1c991cf76f0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1c991cf7b30 <col:46> Inherited Implicit
|-FunctionDecl 0x1c991cf7cf0 <line:795:46> col:46 implicit _lrotr 'unsigned long (unsigned long, int)' extern
| |-ParmVarDecl 0x1c991cf7d90 <<invalid sloc>> <invalid sloc> 'unsigned long'
| |-ParmVarDecl 0x1c991cf7df8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1c991cf7e70 <col:46> Implicit
|-FunctionDecl 0x1c991cf7ec8 prev 0x1c991cf7cf0 <col:24, col:93> col:46 _lrotr 'unsigned long (unsigned long, int)'
| |-ParmVarDecl 0x1c991cf7b70 <col:58, col:72> col:72 _Val 'unsigned long'
| |-ParmVarDecl 0x1c991cf7bf0 <col:83, col:87> col:87 _Shift 'int'
| `-NoThrowAttr 0x1c991cf7fc0 <col:46> Inherited Implicit
|-FunctionDecl 0x1c991cf54c8 <line:796:40, line:797:37> line:796:58 _makepath_s 'errno_t (char *, size_t, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'errno_t (char *, size_t, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1c991cf8000 <col:99, col:106> col:106 _PathResult 'char *'
| |-ParmVarDecl 0x1c991cf5060 <col:124, col:131> col:131 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991cf50e0 <col:156, col:169> col:169 _Drive 'const char *'
| |-ParmVarDecl 0x1c991cf5160 <col:188, col:201> col:201 _Dir 'const char *'
| |-ParmVarDecl 0x1c991cf51e0 <col:218, col:231> col:231 _Filename 'const char *'
| `-ParmVarDecl 0x1c991cf5260 <line:797:20, col:33> col:33 _Ext 'const char *'
|-FunctionDecl 0x1c991cf5a70 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:799:78 _makepath 'void (char *, const char *, const char *, const char *, const char *) __attribute__((cdecl))':'void (char *, const char *, const char *, const char *, const char *)'
| |-ParmVarDecl 0x1c991cf5688 <col:113, col:119> col:119 _Path 'char *'
| |-ParmVarDecl 0x1c991cf5708 <col:137, col:151> col:151 _Drive 'const char *'
| |-ParmVarDecl 0x1c991cf5788 <col:170, col:184> col:184 _Dir 'const char *'
| |-ParmVarDecl 0x1c991cf5808 <col:201, col:215> col:215 _Filename 'const char *'
| |-ParmVarDecl 0x1c991cf5888 <col:237, col:251> col:251 _Ext 'const char *'
| `-DeprecatedAttr 0x1c991cf5b38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _makepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991cf5e10 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:826:9, col:59> col:27 _onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1c991cf5ca0 <col:44, col:54> col:54 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-FunctionDecl 0x1c991cf1020 <line:831:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1c991cf5ee8 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1c991cf11d8 <line:838:24, col:77> col:39 _putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1c991cf10f8 <col:54, col:67> col:67 _EnvString 'const char *'
|-FunctionDecl 0x1c991cf14d8 <line:839:28, col:107> col:44 _putenv_s 'errno_t (const char *, const char *) __attribute__((cdecl))':'errno_t (const char *, const char *)'
| |-ParmVarDecl 0x1c991cf12b0 <col:61, col:74> col:74 _Name 'const char *'
| `-ParmVarDecl 0x1c991cf1330 <col:88, col:101> col:101 _Value 'const char *'
|-FunctionDecl 0x1c991cf17a0 <line:842:30> col:30 implicit _rotl 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1c991cf1840 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1c991cf18a8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1c991cf1920 <col:30> Implicit
|-FunctionDecl 0x1c991cf1978 prev 0x1c991cf17a0 <col:9, col:75> col:30 _rotl 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1c991cf15b8 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1c991cf1638 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1c991cf1a70 <col:30> Inherited Implicit
|-FunctionDecl 0x1c991cf1ca0 <line:843:34> col:34 implicit _rotl64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1c991cf1d40 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c991cf1da8 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1c991cf1e20 <col:34> Implicit
|-FunctionDecl 0x1c991cf1e78 prev 0x1c991cf1ca0 <col:9, col:85> col:34 _rotl64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1c991cf1ab0 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1c991cf1b30 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1c991cf1f70 <col:34> Inherited Implicit
|-FunctionDecl 0x1c991cf91b8 <line:844:30> col:30 implicit _rotr 'unsigned int (unsigned int, int)' extern
| |-ParmVarDecl 0x1c991cf9258 <<invalid sloc>> <invalid sloc> 'unsigned int'
| |-ParmVarDecl 0x1c991cf92c0 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1c991cf9338 <col:30> Implicit
|-FunctionDecl 0x1c991cf9390 prev 0x1c991cf91b8 <col:9, col:75> col:30 _rotr 'unsigned int (unsigned int, int)'
| |-ParmVarDecl 0x1c991cf1fb0 <col:41, col:54> col:54 _Val 'unsigned int'
| |-ParmVarDecl 0x1c991cf90b8 <col:65, col:69> col:69 _Shift 'int'
| `-NoThrowAttr 0x1c991cf9488 <col:30> Inherited Implicit
|-FunctionDecl 0x1c991cf9648 <line:845:34> col:34 implicit _rotr64 'unsigned long long (unsigned long long, int)' extern
| |-ParmVarDecl 0x1c991cf96e8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1c991cf9750 <<invalid sloc>> <invalid sloc> 'int'
| `-NoThrowAttr 0x1c991cf97c8 <col:34> Implicit
|-FunctionDecl 0x1c991cf9820 prev 0x1c991cf9648 <col:9, col:85> col:34 _rotr64 'unsigned long long (unsigned long long, int)'
| |-ParmVarDecl 0x1c991cf94c8 <col:47, col:64> col:64 _Val 'unsigned long long'
| |-ParmVarDecl 0x1c991cf9548 <col:75, col:79> col:79 _Shift 'int'
| `-NoThrowAttr 0x1c991cf9918 <col:34> Inherited Implicit
|-FunctionDecl 0x1c991cf9cd8 <line:849:9, col:171> col:25 _searchenv_s 'errno_t (const char *, const char *, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, const char *, char *, size_t)'
| |-ParmVarDecl 0x1c991cf9958 <col:45, col:58> col:58 _Filename 'const char *'
| |-ParmVarDecl 0x1c991cf99d8 <col:76, col:89> col:89 _EnvVar 'const char *'
| |-ParmVarDecl 0x1c991cf9a58 <col:127, col:134> col:134 _ResultPath 'char *'
| `-ParmVarDecl 0x1c991cf9ad0 <col:152, col:159> col:159 _SizeInBytes 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991cf20d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:851:78 _searchenv 'void (const char *, const char *, char *) __attribute__((cdecl))':'void (const char *, const char *, char *)'
| |-ParmVarDecl 0x1c991cf9e88 <col:97, col:111> col:111 _Filename 'const char *'
| |-ParmVarDecl 0x1c991cf9f08 <col:129, col:143> col:143 _EnvVar 'const char *'
| |-ParmVarDecl 0x1c991cf9f88 <col:176, col:182> col:182 _ResultPath 'char *'
| `-DeprecatedAttr 0x1c991cf2188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _searchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991cf2770 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:854:261> col:62 _splitpath 'void (const char *, char *, char *, char *, char *) __attribute__((cdecl))':'void (const char *, char *, char *, char *, char *)'
| |-ParmVarDecl 0x1c991cf2390 <col:80, col:93> col:93 _FullPath 'const char *'
| |-ParmVarDecl 0x1c991cf2410 <col:129, col:136> col:136 _Drive 'char *'
| |-ParmVarDecl 0x1c991cf2490 <col:169, col:176> col:176 _Dir 'char *'
| |-ParmVarDecl 0x1c991cf2510 <col:207, col:214> col:214 _Filename 'char *'
| |-ParmVarDecl 0x1c991cf2590 <col:250, col:257> col:257 _Ext 'char *'
| `-DeprecatedAttr 0x1c991cf2838 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _splitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991cff170 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:855:40, line:859:79> line:855:57 _splitpath_s 'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t) __attribute__((cdecl))':'errno_t (const char *, char *, size_t, char *, size_t, char *, size_t, char *, size_t)'
| |-ParmVarDecl 0x1c991cf2980 <col:77, col:90> col:90 _FullPath 'const char *'
| |-ParmVarDecl 0x1c991cf2a00 <line:856:48, col:55> col:55 _Drive 'char *'
| |-ParmVarDecl 0x1c991cf2a78 <col:68, col:75> col:75 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991cf2af8 <line:857:46, col:53> col:53 _Dir 'char *'
| |-ParmVarDecl 0x1c991cf2b70 <col:64, col:71> col:71 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991cf2bf0 <line:858:51, col:58> col:58 _Filename 'char *'
| |-ParmVarDecl 0x1c991cf2c68 <col:74, col:81> col:81 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991cf2ce8 <line:859:46, col:53> col:53 _Ext 'char *'
| `-ParmVarDecl 0x1c991cf2d60 <col:64, col:71> col:71 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991cff520 <line:862:9, col:204> col:24 _swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1c991cff288 <col:95, col:102> col:102 _Buf1 'char *'
| |-ParmVarDecl 0x1c991cff308 <col:174, col:181> col:181 _Buf2 'char *'
| `-ParmVarDecl 0x1c991cff388 <col:188, col:192> col:192 _SizeInBytes 'int'
|-FunctionDecl 0x1c991cff8c0 <line:873:24, col:161> col:42 _wfullpath 'wchar_t *(wchar_t *, const wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, const wchar_t *, size_t)'
| |-ParmVarDecl 0x1c991cff600 <col:86, col:96> col:96 _FullPath 'wchar_t *'
| |-ParmVarDecl 0x1c991cff678 <col:114, col:130> col:130 _Path 'const wchar_t *'
| `-ParmVarDecl 0x1c991cff6f0 <col:142, col:149> col:149 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991cffe58 <line:879:40, line:880:40> line:879:56 _wmakepath_s 'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (wchar_t *, size_t, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c991cff9a0 <col:91, col:101> col:101 _PathResult 'wchar_t *'
| |-ParmVarDecl 0x1c991cffa18 <col:119, col:126> col:126 _SIZE 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991cffa90 <col:144, col:160> col:160 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1c991cffb08 <col:179, col:195> col:195 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1c991cffb80 <col:212, col:228> col:228 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1c991cffbf8 <line:880:20, col:36> col:36 _Ext 'const wchar_t *'
|-FunctionDecl 0x1c991cfd400 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1948:181> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:882:78 _wmakepath 'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'void (wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c991d00010 <col:114, col:123> col:123 _ResultPath 'wchar_t *'
| |-ParmVarDecl 0x1c991d00088 <col:147, col:164> col:164 _Drive 'const wchar_t *'
| |-ParmVarDecl 0x1c991cfd0e0 <col:183, col:200> col:200 _Dir 'const wchar_t *'
| |-ParmVarDecl 0x1c991cfd158 <col:217, col:234> col:234 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c991cfd1d0 <col:256, col:273> col:273 _Ext 'const wchar_t *'
| `-DeprecatedAttr 0x1c991cfd4c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wmakepath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991cfd780 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:885:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1c991cfd608 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1c991cfd930 <line:889:24, col:81> col:39 _wputenv 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1c991cfd850 <col:55, col:71> col:71 _EnvString 'const wchar_t *'
|-FunctionDecl 0x1c991cfdc18 <line:890:28, col:114> col:44 _wputenv_s 'errno_t (const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1c991cfda00 <col:62, col:78> col:78 _Name 'const wchar_t *'
| `-ParmVarDecl 0x1c991cfda78 <col:92, col:108> col:108 _Value 'const wchar_t *'
|-FunctionDecl 0x1c991cfe0f0 <line:891:9, col:181> col:25 _wsearchenv_s 'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, const wchar_t *, wchar_t *, size_t)'
| |-ParmVarDecl 0x1c991cfdcf0 <col:46, col:62> col:62 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c991cfdd68 <col:80, col:96> col:96 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1c991cfdde0 <col:134, col:144> col:144 _ResultPath 'wchar_t *'
| `-ParmVarDecl 0x1c991cfde58 <col:162, col:169> col:169 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991cfe560 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1954:149> D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:893:78 _wsearchenv 'void (const wchar_t *, const wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1c991cfe298 <col:98, col:115> col:115 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1c991cfe310 <col:133, col:150> col:150 _EnvVar 'const wchar_t *'
| |-ParmVarDecl 0x1c991cfe388 <col:183, col:192> col:192 _ResultPath 'wchar_t *'
| `-DeprecatedAttr 0x1c991cfe618 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsearchenv_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991cfec30 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:896:278> col:63 _wsplitpath 'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *) __attribute__((cdecl))':'void (const wchar_t *, wchar_t *, wchar_t *, wchar_t *, wchar_t *)'
| |-ParmVarDecl 0x1c991cfe818 <col:82, col:98> col:98 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1c991cfe890 <col:134, col:144> col:144 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1c991cfe908 <col:177, col:187> col:187 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1c991cfe980 <col:218, col:228> col:228 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1c991cfe9f8 <col:264, col:274> col:274 _Ext 'wchar_t *'
| `-DeprecatedAttr 0x1c991cfecf8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wsplitpath_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991cfa510 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:897:21, line:901:82> line:897:37 _wsplitpath_s 'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t) __attribute__((cdecl))':'errno_t (const wchar_t *, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t, wchar_t *, size_t)'
| |-ParmVarDecl 0x1c991cfee38 <col:58, col:74> col:74 _FullPath 'const wchar_t *'
| |-ParmVarDecl 0x1c991cfeeb0 <line:898:48, col:58> col:58 _Drive 'wchar_t *'
| |-ParmVarDecl 0x1c991cfef28 <col:71, col:78> col:78 _DriveSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991cfefa0 <line:899:46, col:56> col:56 _Dir 'wchar_t *'
| |-ParmVarDecl 0x1c991cff018 <col:67, col:74> col:74 _DirSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991cfa0b0 <line:900:51, col:61> col:61 _Filename 'wchar_t *'
| |-ParmVarDecl 0x1c991cfa128 <col:77, col:84> col:84 _FilenameSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991cfa1a0 <line:901:46, col:56> col:56 _Ext 'wchar_t *'
| `-ParmVarDecl 0x1c991cfa218 <col:67, col:74> col:74 _ExtSize 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991cfa830 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:909:78> col:50 _seterrormode 'void (int) __attribute__((cdecl))':'void (int)'
| |-ParmVarDecl 0x1c991cfa728 <col:69, col:73> col:73 _Mode 'int'
| `-DeprecatedAttr 0x1c991cfa8d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using SetErrorMode instead. See online help for details." ""
|-FunctionDecl 0x1c991cfacc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:910:97> col:42 _beep 'void (unsigned int, unsigned int) __attribute__((cdecl))':'void (unsigned int, unsigned int)'
| |-ParmVarDecl 0x1c991cfaae8 <col:53, col:62> col:62 _Frequency 'unsigned int'
| |-ParmVarDecl 0x1c991cfab68 <col:79, col:88> col:88 _Duration 'unsigned int'
| `-DeprecatedAttr 0x1c991cfad78 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Beep instead. See online help for details." ""
|-FunctionDecl 0x1c991d00140 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:911:78> col:43 _sleep 'void (unsigned long) __attribute__((cdecl))':'void (unsigned long)'
| |-ParmVarDecl 0x1c991cfaf80 <col:55, col:69> col:69 _Duration 'unsigned long'
| `-DeprecatedAttr 0x1c991d001e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable has been superceded by newer library or operating system functionality. Consider using Sleep instead. See online help for details." ""
|-FunctionDecl 0x1c991d00790 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:934:187> col:102 ecvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1c991d004d0 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1c991d00550 <col:130, col:134> col:134 _NumOfDigits 'int'
| |-ParmVarDecl 0x1c991d005d0 <col:154, col:160> col:160 _PtDec 'int *'
| |-ParmVarDecl 0x1c991d00650 <col:174, col:180> col:180 _PtSign 'int *'
| |-DeprecatedAttr 0x1c991d00850 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ecvt. See online help for details." ""
| `-DeprecatedAttr 0x1c991d00948 <col:47, col:63> "This function or variable may be unsafe. Consider using _ecvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991d00e80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:935:184> col:102 fcvt 'char *(double, int, int *, int *) __attribute__((cdecl))':'char *(double, int, int *, int *)'
| |-ParmVarDecl 0x1c991d00bc0 <col:112, col:119> col:119 _Val 'double'
| |-ParmVarDecl 0x1c991d00c40 <col:130, col:134> col:134 _NumOfDec 'int'
| |-ParmVarDecl 0x1c991d00cc0 <col:151, col:157> col:157 _PtDec 'int *'
| |-ParmVarDecl 0x1c991d00d40 <col:171, col:177> col:177 _PtSign 'int *'
| |-DeprecatedAttr 0x1c991d00f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcvt. See online help for details." ""
| `-DeprecatedAttr 0x1c991d01038 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991d02580 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:936:179> col:96 gcvt 'char *(double, int, char *) __attribute__((cdecl))':'char *(double, int, char *)'
| |-ParmVarDecl 0x1c991d02360 <col:106, col:113> col:113 _Val 'double'
| |-ParmVarDecl 0x1c991d023e0 <col:124, col:128> col:128 _NumOfDigits 'int'
| |-ParmVarDecl 0x1c991d02460 <col:165, col:172> col:172 _DstBuf 'char *'
| |-DeprecatedAttr 0x1c991d02638 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _gcvt. See online help for details." ""
| `-DeprecatedAttr 0x1c991d02730 <col:47, col:63> "This function or variable may be unsafe. Consider using _fcvt_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991d02bc8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:937:170> col:96 itoa 'char *(int, char *, int) __attribute__((cdecl))':'char *(int, char *, int)'
| |-ParmVarDecl 0x1c991d029a8 <col:106, col:110> col:110 _Val 'int'
| |-ParmVarDecl 0x1c991d02a28 <col:139, col:146> col:146 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991d02aa8 <col:160, col:164> col:164 _Radix 'int'
| |-DeprecatedAttr 0x1c991d02c80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _itoa. See online help for details." ""
| `-DeprecatedAttr 0x1c991d02d78 <col:47, col:63> "This function or variable may be unsafe. Consider using _itoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991d03260 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:938:171> col:96 ltoa 'char *(long, char *, int) __attribute__((cdecl))':'char *(long, char *, int)'
| |-ParmVarDecl 0x1c991d02ff0 <col:106, col:111> col:111 _Val 'long'
| |-ParmVarDecl 0x1c991d03070 <col:140, col:147> col:147 _DstBuf 'char *'
| |-ParmVarDecl 0x1c991d03140 <col:161, col:165> col:165 _Radix 'int'
| |-DeprecatedAttr 0x1c991d03318 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ltoa. See online help for details." ""
| `-DeprecatedAttr 0x1c991d03410 <col:47, col:63> "This function or variable may be unsafe. Consider using _ltoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991d036e0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:941:108> col:71 putenv 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1c991d03600 <col:85, col:98> col:98 _EnvString 'const char *'
| `-DeprecatedAttr 0x1c991d03788 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putenv. See online help for details." ""
|-FunctionDecl 0x1c991d03b68 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:944:245> col:128 swab 'void (char *, char *, int) __attribute__((cdecl))':'void (char *, char *, int)'
| |-ParmVarDecl 0x1c991d03950 <col:165, col:172> col:172 _Buf1 'char *'
| |-ParmVarDecl 0x1c991d039d0 <col:210, col:217> col:217 _Buf2 'char *'
| |-ParmVarDecl 0x1c991d03a50 <col:229, col:233> col:233 _SizeInBytes 'int'
| `-DeprecatedAttr 0x1c991d03c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _swab. See online help for details." ""
|-FunctionDecl 0x1c991cfc0d0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:945:181> col:96 ultoa 'char *(unsigned long, char *, int) __attribute__((cdecl))':'char *(unsigned long, char *, int)'
| |-ParmVarDecl 0x1c991d03ee0 <col:107, col:121> col:121 _Val 'unsigned long'
| |-ParmVarDecl 0x1c991d03f60 <col:150, col:157> col:157 _Dstbuf 'char *'
| |-ParmVarDecl 0x1c991d03fe0 <col:171, col:175> col:175 _Radix 'int'
| |-DeprecatedAttr 0x1c991cfc188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _ultoa. See online help for details." ""
| `-DeprecatedAttr 0x1c991cfc280 <col:47, col:63> "This function or variable may be unsafe. Consider using _ultoa_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1c991cfc468 <D:\Microsoft Visual Studio 12.0\VC\include\stdlib.h:64:18, line:947:48> col:18 onexit '_onexit_t (_onexit_t) __attribute__((cdecl))':'_onexit_t (_onexit_t)'
| `-ParmVarDecl 0x1c991cfc390 <line:64:18, line:947:43> col:43 _Func '_onexit_t':'int (*)(void) __attribute__((cdecl))'
|-RecordDecl 0x1c991cfc528 <.//openssl//file_jk/after\crypto\ec/ec_lcl.h:52:1, line:180:1> line:52:8 struct ec_method_st definition
| |-FieldDecl 0x1c991cfc5f8 <line:54:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1c991cfc668 <line:56:5, col:9> col:9 field_type 'int'
| |-FieldDecl 0x1c991cfc808 <line:61:5, col:34> col:11 group_init 'int (*)(int *)'
| |-FieldDecl 0x1c991cfc9d0 <line:62:5, col:37> col:12 group_finish 'void (*)(int *)'
| |-FieldDecl 0x1c991cfcae0 <line:63:5, col:43> col:12 group_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x1c991cfcd50 <line:64:5, col:52> col:11 group_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1c991d04208 <line:67:5, line:68:54> line:67:11 group_set_curve 'int (*)(int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1c991d04618 <line:69:5, line:70:37> line:69:11 group_get_curve 'int (*)(const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x1c991d047e8 <line:72:5, col:46> col:11 group_get_degree 'int (*)(const int *)'
| |-FieldDecl 0x1c991d04900 <line:73:5, col:46> col:11 group_order_bits 'int (*)(const int *)'
| |-FieldDecl 0x1c991d04b70 <line:75:5, col:64> col:11 group_check_discriminant 'int (*)(const int *, int *)'
| |-FieldDecl 0x1c991d04c88 <line:80:5, col:34> col:11 point_init 'int (*)(int *)'
| |-FieldDecl 0x1c991d04d98 <line:81:5, col:37> col:12 point_finish 'void (*)(int *)'
| |-FieldDecl 0x1c991d04ea8 <line:82:5, col:43> col:12 point_clear_finish 'void (*)(int *)'
| |-FieldDecl 0x1c991d05048 <line:83:5, col:52> col:11 point_copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1c991d06220 <line:92:5, col:63> col:11 point_set_to_infinity 'int (*)(const int *, int *)'
| |-FieldDecl 0x1c991d066d0 <line:93:5, line:96:76> line:93:11 point_set_Jprojective_coordinates_GFp 'int (*)(const int *, int *, const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1c991d06b80 <line:97:5, line:100:59> line:97:11 point_get_Jprojective_coordinates_GFp 'int (*)(const int *, const int *, int *, int *, int *, int *)'
| |-FieldDecl 0x1c991d06f98 <line:101:5, line:103:50> line:101:11 point_set_affine_coordinates 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1c991d591d8 <line:104:5, line:105:72> line:104:11 point_get_affine_coordinates 'int (*)(const int *, const int *, int *, int *, int *)'
| |-FieldDecl 0x1c991d595e8 <line:106:5, line:108:54> line:106:11 point_set_compressed_coordinates 'int (*)(const int *, int *, const int *, int, int *)'
| |-FieldDecl 0x1c991d59b08 <line:110:5, line:112:46> line:110:14 point2oct 'size_t (*)(const int *, const int *, int, unsigned char *, size_t, int *)'
| |-FieldDecl 0x1c991d5afc0 <line:113:5, line:114:43> line:113:11 oct2point 'int (*)(const int *, int *, const unsigned char *, size_t, int *)'
| |-FieldDecl 0x1c991d5b2f8 <line:116:5, line:117:44> line:116:11 add 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1c991d5b680 <line:118:5, col:75> col:11 dbl 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1c991d5b978 <line:119:5, col:58> col:11 invert 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1c991d5bbe0 <line:123:5, col:62> col:11 is_at_infinity 'int (*)(const int *, const int *)'
| |-FieldDecl 0x1c991d5bed8 <line:124:5, col:69> col:11 is_on_curve 'int (*)(const int *, const int *, int *)'
| |-FieldDecl 0x1c991d5a260 <line:125:5, line:126:31> line:125:11 point_cmp 'int (*)(const int *, const int *, const int *, int *)'
| |-FieldDecl 0x1c991d5a488 <line:128:5, col:63> col:11 make_affine 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1c991d5a900 <line:129:5, line:130:40> line:129:11 points_make_affine 'int (*)(const int *, size_t, int **, int *)'
| |-FieldDecl 0x1c991d5af38 <line:136:5, line:138:25> line:136:11 mul 'int (*)(const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-FieldDecl 0x1c991d5e1f0 <line:139:5, col:54> col:11 precompute_mult 'int (*)(int *, int *)'
| |-FieldDecl 0x1c991d5e308 <line:140:5, col:55> col:11 have_precompute_mult 'int (*)(const int *)'
| |-FieldDecl 0x1c991d5e640 <line:148:5, line:149:48> line:148:11 field_mul 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1c991d5e8f0 <line:150:5, col:77> col:11 field_sqr 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1c991d5ec28 <line:151:5, line:152:48> line:151:11 field_div 'int (*)(const int *, int *, const int *, const int *, int *)'
| |-FieldDecl 0x1c991d5eed8 <line:159:5, col:77> col:11 field_inv 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1c991d5f1c0 <line:161:5, line:162:34> line:161:11 field_encode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1c991d5f470 <line:164:5, line:165:34> line:164:11 field_decode 'int (*)(const int *, int *, const int *, int *)'
| |-FieldDecl 0x1c991d5f698 <line:166:5, col:67> col:11 field_set_to_one 'int (*)(const int *, int *, int *)'
| |-FieldDecl 0x1c991d5f9c0 <line:168:5, col:75> col:14 priv2oct 'size_t (*)(const int *, unsigned char *, size_t)'
| |-FieldDecl 0x1c991d5fce8 <line:169:5, col:72> col:11 oct2priv 'int (*)(int *, const unsigned char *, size_t)'
| |-FieldDecl 0x1c991d5fe88 <line:170:5, col:61> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x1c991d5ffa0 <line:171:5, col:32> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x1c991d5c090 <line:172:5, col:40> col:11 keycheck 'int (*)(const int *)'
| |-FieldDecl 0x1c991d5c1a8 <line:173:5, col:35> col:11 keygenpub 'int (*)(int *)'
| |-FieldDecl 0x1c991d5c348 <line:174:5, col:50> col:11 keycopy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1c991d5c458 <line:175:5, col:36> col:12 keyfinish 'void (*)(int *)'
| |-FieldDecl 0x1c991d5c860 <line:177:5, line:178:72> line:177:11 ecdh_compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| `-FieldDecl 0x1c991d5ca88 <line:179:5, col:77> col:11 blind_coordinates 'int (*)(const int *, int *, int *)'
|-RecordDecl 0x1c991d5cae0 <line:185:9, col:16> col:16 struct nistp224_pre_comp_st
|-TypedefDecl 0x1c991d5cbf8 <col:1, col:37> col:37 referenced NISTP224_PRE_COMP 'struct nistp224_pre_comp_st':'struct nistp224_pre_comp_st'
| `-ElaboratedType 0x1c991d5cba0 'struct nistp224_pre_comp_st' sugar
|   `-RecordType 0x1c991d5cb80 'struct nistp224_pre_comp_st'
|     `-Record 0x1c991d5cae0 'nistp224_pre_comp_st'
|-RecordDecl 0x1c991d5cc68 <line:186:9, col:16> col:16 struct nistp256_pre_comp_st
|-TypedefDecl 0x1c991d5cd78 <col:1, col:37> col:37 referenced NISTP256_PRE_COMP 'struct nistp256_pre_comp_st':'struct nistp256_pre_comp_st'
| `-ElaboratedType 0x1c991d5cd20 'struct nistp256_pre_comp_st' sugar
|   `-RecordType 0x1c991d5cd00 'struct nistp256_pre_comp_st'
|     `-Record 0x1c991d5cc68 'nistp256_pre_comp_st'
|-RecordDecl 0x1c991d5cde8 <line:187:9, col:16> col:16 struct nistp521_pre_comp_st
|-TypedefDecl 0x1c991d5cef8 <col:1, col:37> col:37 referenced NISTP521_PRE_COMP 'struct nistp521_pre_comp_st':'struct nistp521_pre_comp_st'
| `-ElaboratedType 0x1c991d5cea0 'struct nistp521_pre_comp_st' sugar
|   `-RecordType 0x1c991d5ce80 'struct nistp521_pre_comp_st'
|     `-Record 0x1c991d5cde8 'nistp521_pre_comp_st'
|-RecordDecl 0x1c991d5cfe0 <line:188:9, col:16> col:16 struct nistz256_pre_comp_st
|-TypedefDecl 0x1c991d5d0f8 <col:1, col:37> col:37 referenced NISTZ256_PRE_COMP 'struct nistz256_pre_comp_st':'struct nistz256_pre_comp_st'
| `-ElaboratedType 0x1c991d5d0a0 'struct nistz256_pre_comp_st' sugar
|   `-RecordType 0x1c991d5d080 'struct nistz256_pre_comp_st'
|     `-Record 0x1c991d5cfe0 'nistz256_pre_comp_st'
|-RecordDecl 0x1c991d5d168 <line:189:9, col:16> col:16 struct ec_pre_comp_st
|-TypedefDecl 0x1c991d5d278 <col:1, col:31> col:31 referenced EC_PRE_COMP 'struct ec_pre_comp_st':'struct ec_pre_comp_st'
| `-ElaboratedType 0x1c991d5d220 'struct ec_pre_comp_st' sugar
|   `-RecordType 0x1c991d5d200 'struct ec_pre_comp_st'
|     `-Record 0x1c991d5d168 'ec_pre_comp_st'
|-RecordDecl 0x1c991d5d2e8 <line:191:1, line:256:1> line:191:8 invalid struct ec_group_st definition
| |-FieldDecl 0x1c991d5d3b8 <line:192:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x1c991d5d428 <line:193:5, col:15> col:15 invalid generator 'int *'
| |-FieldDecl 0x1c991d5d498 <line:194:5, col:13> col:13 invalid order 'int *'
| |-FieldDecl 0x1c991d5d508 <col:5, col:21> col:21 invalid cofactor 'int *'
| |-FieldDecl 0x1c991d5d578 <line:195:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x1c991d5d5e8 <line:196:5, col:9> col:9 asn1_flag 'int'
| |-FieldDecl 0x1c991d5d658 <line:197:5, col:29> col:29 invalid asn1_form 'int'
| |-FieldDecl 0x1c991d5d6c8 <line:198:5, col:20> col:20 seed 'unsigned char *'
| |-FieldDecl 0x1c991d5d730 <line:200:5, col:12> col:12 seed_len 'size_t':'unsigned long long'
| |-FieldDecl 0x1c991d5d7a0 <line:210:5, col:13> col:13 invalid field 'int *'
| |-FieldDecl 0x1c991d5d8a0 <line:218:5, col:15> col:9 poly 'int [6]'
| |-FieldDecl 0x1c991d5d910 <line:226:5, col:13> col:13 invalid a 'int *'
| |-FieldDecl 0x1c991d5d980 <col:5, col:17> col:17 invalid b 'int *'
| |-FieldDecl 0x1c991d5d9f0 <line:228:5, col:9> col:9 a_is_minus3 'int'
| |-FieldDecl 0x1c991d5da60 <line:230:5, col:11> col:11 field_data1 'void *'
| |-FieldDecl 0x1c991d5dad0 <line:232:5, col:11> col:11 field_data2 'void *'
| |-FieldDecl 0x1c991d5de60 <line:234:5, line:235:36> line:234:11 field_mod_func 'int (*)(int *, const int *, const int *, int *)'
| |-FieldDecl 0x1c991d5ded0 <line:237:5, col:18> col:18 invalid mont_data 'int *'
| |-EnumDecl 0x1c991d5df28 <line:244:5, line:248:5> line:244:5
| | |-EnumConstantDecl 0x1c991d61040 <line:245:9> col:9 PCT_none 'int'
| | |-EnumConstantDecl 0x1c991d61098 <line:246:9> col:9 PCT_nistp224 'int'
| | |-EnumConstantDecl 0x1c991d610f0 <col:23> col:23 PCT_nistp256 'int'
| | |-EnumConstantDecl 0x1c991d61148 <col:37> col:37 PCT_nistp521 'int'
| | |-EnumConstantDecl 0x1c991d611a0 <col:51> col:51 PCT_nistz256 'int'
| | `-EnumConstantDecl 0x1c991d611f8 <line:247:9> col:9 PCT_ec 'int'
| |-FieldDecl 0x1c991d612a8 <line:244:5, line:248:7> col:7 pre_comp_type 'enum (anonymous enum at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:244:5)':'enum ec_group_st::(anonymous at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:244:5)'
| |-RecordDecl 0x1c991d61300 <line:249:5, line:255:5> line:249:5 union definition
| | |-FieldDecl 0x1c991d61448 <line:250:9, col:28> col:28 nistp224 'NISTP224_PRE_COMP *'
| | |-FieldDecl 0x1c991d61528 <line:251:9, col:28> col:28 nistp256 'NISTP256_PRE_COMP *'
| | |-FieldDecl 0x1c991d61608 <line:252:9, col:28> col:28 nistp521 'NISTP521_PRE_COMP *'
| | |-FieldDecl 0x1c991d616e8 <line:253:9, col:28> col:28 nistz256 'NISTZ256_PRE_COMP *'
| | `-FieldDecl 0x1c991d617c8 <line:254:9, col:22> col:22 ec 'EC_PRE_COMP *'
| `-FieldDecl 0x1c991d61878 <line:249:5, line:255:7> col:7 pre_comp 'union (anonymous union at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:249:5)':'union ec_group_st::(anonymous at .//openssl//file_jk/after\crypto\ec/ec_lcl.h:249:5)'
|-RecordDecl 0x1c991d618d0 <line:263:1, line:276:1> line:263:8 invalid struct ec_key_st definition
| |-FieldDecl 0x1c991d619a8 <line:264:5, col:26> col:26 invalid meth 'const int *'
| |-FieldDecl 0x1c991d61a18 <line:265:5, col:13> col:13 invalid engine 'int *'
| |-FieldDecl 0x1c991d61a88 <line:266:5, col:9> col:9 version 'int'
| |-FieldDecl 0x1c991d61af8 <line:267:5, col:15> col:15 invalid group 'int *'
| |-FieldDecl 0x1c991d61b68 <line:268:5, col:15> col:15 invalid pub_key 'int *'
| |-FieldDecl 0x1c991d61bd8 <line:269:5, col:13> col:13 invalid priv_key 'int *'
| |-FieldDecl 0x1c991d61c48 <line:270:5, col:18> col:18 enc_flag 'unsigned int'
| |-FieldDecl 0x1c991d61cb8 <line:271:5, col:29> col:29 invalid conv_form 'int'
| |-FieldDecl 0x1c991d61d28 <line:272:5, col:9> col:9 references 'int'
| |-FieldDecl 0x1c991d61d98 <line:273:5, col:9> col:9 flags 'int'
| |-FieldDecl 0x1c991d61e08 <line:274:5, col:20> col:20 invalid ex_data 'int'
| `-FieldDecl 0x1c991d61e78 <line:275:5, col:20> col:20 invalid lock 'int *'
|-RecordDecl 0x1c991d61ed0 <line:278:1, line:292:1> line:278:8 invalid struct ec_point_st definition
| |-FieldDecl 0x1c991d61fa8 <line:279:5, col:22> col:22 invalid meth 'const int *'
| |-FieldDecl 0x1c991d67080 <line:281:5, col:9> col:9 curve_name 'int'
| |-FieldDecl 0x1c991d670f0 <line:286:5, col:13> col:13 invalid X 'int *'
| |-FieldDecl 0x1c991d67160 <line:287:5, col:13> col:13 invalid Y 'int *'
| |-FieldDecl 0x1c991d671d0 <line:288:5, col:13> col:13 invalid Z 'int *'
| `-FieldDecl 0x1c991d67240 <line:290:5, col:9> col:9 Z_is_one 'int'
|-FunctionDecl 0x1c991d673d0 <line:295:1, line:305:1> line:295:24 invalid ec_point_is_compat 'int (const int *, const int *)' static
| |-ParmVarDecl 0x1c991d672b0 <col:43, col:59> col:59 invalid point 'const int *'
| |-ParmVarDecl 0x1c991d67330 <line:296:43, col:59> col:59 invalid group 'const int *'
| `-CompoundStmt 0x1c991d67588 <line:297:1, line:305:1>
|   |-IfStmt 0x1c991d67538 <line:298:5, line:302:16>
|   | |-OpaqueValueExpr 0x1c991d67520 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1c991d67510 <col:9, col:16>
|   |   `-IntegerLiteral 0x1c991d674e8 <col:16> 'int' 0
|   `-ReturnStmt 0x1c991d67578 <line:304:5, col:12>
|     `-IntegerLiteral 0x1c991d67550 <col:12> 'int' 1
|-FunctionDecl 0x1c991d676a8 <line:308:1, col:64> col:20 EC_nistp224_pre_comp_dup 'NISTP224_PRE_COMP *(NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x1c991d675b8 <col:45, col:63> col:64 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x1c991d67868 <line:309:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1c991d67778 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1c991d67a28 <line:310:1, col:64> col:20 EC_nistp521_pre_comp_dup 'NISTP521_PRE_COMP *(NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x1c991d67938 <col:45, col:63> col:64 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x1c991d67be8 <line:311:1, col:64> col:20 EC_nistz256_pre_comp_dup 'NISTZ256_PRE_COMP *(NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x1c991d67af8 <col:45, col:63> col:64 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x1c991d67d48 prev 0x1c991d67868 <line:312:1, col:64> col:20 EC_nistp256_pre_comp_dup 'NISTP256_PRE_COMP *(NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1c991d67cb8 <col:45, col:63> col:64 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1c991d67ef8 <line:313:1, col:46> col:14 EC_ec_pre_comp_dup 'EC_PRE_COMP *(EC_PRE_COMP *)'
| `-ParmVarDecl 0x1c991d67e00 <col:33, col:45> col:46 'EC_PRE_COMP *'
|-FunctionDecl 0x1c991d65060 <line:315:1, col:38> col:6 invalid EC_pre_comp_free 'void (int *)'
| `-ParmVarDecl 0x1c991d67fd0 <col:23, col:33> col:33 invalid group 'int *'
|-FunctionDecl 0x1c991d65208 <line:316:1, col:51> col:6 EC_nistp224_pre_comp_free 'void (NISTP224_PRE_COMP *)'
| `-ParmVarDecl 0x1c991d65118 <col:32, col:50> col:51 'NISTP224_PRE_COMP *'
|-FunctionDecl 0x1c991d653c8 <line:317:1, col:51> col:6 EC_nistp256_pre_comp_free 'void (NISTP256_PRE_COMP *)'
| `-ParmVarDecl 0x1c991d652d8 <col:32, col:50> col:51 'NISTP256_PRE_COMP *'
|-FunctionDecl 0x1c991d65588 <line:318:1, col:51> col:6 EC_nistp521_pre_comp_free 'void (NISTP521_PRE_COMP *)'
| `-ParmVarDecl 0x1c991d65498 <col:32, col:50> col:51 'NISTP521_PRE_COMP *'
|-FunctionDecl 0x1c991d65748 <line:319:1, col:51> col:6 EC_nistz256_pre_comp_free 'void (NISTZ256_PRE_COMP *)'
| `-ParmVarDecl 0x1c991d65658 <col:32, col:50> col:51 'NISTZ256_PRE_COMP *'
|-FunctionDecl 0x1c991d65908 <line:320:1, col:39> col:6 EC_ec_pre_comp_free 'void (EC_PRE_COMP *)'
| `-ParmVarDecl 0x1c991d65818 <col:26, col:38> col:39 'EC_PRE_COMP *'
|-FunctionDecl 0x1c991d65dc0 <line:326:1, line:328:25> line:326:5 invalid ec_wNAF_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1c991d659e0 <col:17, col:33> col:33 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d65a60 <col:40, col:50> col:50 invalid r 'int *'
| |-ParmVarDecl 0x1c991d65ae0 <col:53, col:67> col:67 invalid scalar 'const int *'
| |-ParmVarDecl 0x1c991d65b58 <line:327:17, col:24> col:24 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d65be8 <col:29, <invalid sloc>> col:45 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1c991d65c78 <col:55, <invalid sloc>> col:69 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1c991d65cf8 <line:328:17, <invalid sloc>> col:25 invalid 'int *'
|-FunctionDecl 0x1c991d68090 <line:329:1, col:54> col:5 invalid ec_wNAF_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1c991d65eb0 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x1c991d65f30 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1c991d681f0 <line:330:1, col:55> col:5 invalid ec_wNAF_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1c991d68158 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x1c991d68348 <line:333:1, col:40> col:5 invalid ec_GFp_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x1c991d682b0 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x1c991d68498 <line:334:1, col:43> col:6 invalid ec_GFp_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x1c991d68408 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x1c991d685e8 <line:335:1, col:49> col:6 invalid ec_GFp_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1c991d68558 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x1c991d687c8 <line:336:1, col:58> col:5 invalid ec_GFp_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1c991d686a8 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x1c991d68728 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x1c991d68b48 <line:337:1, line:338:77> line:337:5 invalid ec_GFp_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d68890 <col:35, <invalid sloc>> col:45 invalid 'int *'
| |-ParmVarDecl 0x1c991d68910 <col:47, col:61> col:61 invalid p 'const int *'
| |-ParmVarDecl 0x1c991d68990 <line:338:35, col:49> col:49 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d68a10 <col:52, col:66> col:66 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d68a90 <col:69, <invalid sloc>> col:77 invalid 'int *'
|-FunctionDecl 0x1c991d68ee0 <line:339:1, line:340:54> line:339:5 invalid ec_GFp_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1c991d68c28 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| |-ParmVarDecl 0x1c991d68ca8 <col:53, col:61> col:61 invalid p 'int *'
| |-ParmVarDecl 0x1c991d68d28 <col:64, col:72> col:72 invalid a 'int *'
| |-ParmVarDecl 0x1c991d68da8 <line:340:35, col:43> col:43 invalid b 'int *'
| `-ParmVarDecl 0x1c991d68e28 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1c991d63040 <line:341:1, col:52> col:5 invalid ec_GFp_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x1c991d68fc0 <col:36, <invalid sloc>> col:52 invalid 'const int *'
|-FunctionDecl 0x1c991d63220 <line:342:1, col:70> col:5 invalid ec_GFp_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x1c991d63100 <col:44, <invalid sloc>> col:60 invalid 'const int *'
| `-ParmVarDecl 0x1c991d63180 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1c991d63380 <line:343:1, col:40> col:5 invalid ec_GFp_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x1c991d632e8 <col:30, <invalid sloc>> col:40 invalid 'int *'
|-FunctionDecl 0x1c991d634d0 <line:344:1, col:43> col:6 invalid ec_GFp_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x1c991d63440 <col:33, <invalid sloc>> col:43 invalid 'int *'
|-FunctionDecl 0x1c991d63620 <line:345:1, col:49> col:6 invalid ec_GFp_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1c991d63590 <col:39, <invalid sloc>> col:49 invalid 'int *'
|-FunctionDecl 0x1c991d63800 <line:346:1, col:58> col:5 invalid ec_GFp_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1c991d636e0 <col:30, <invalid sloc>> col:40 invalid 'int *'
| `-ParmVarDecl 0x1c991d63760 <col:42, <invalid sloc>> col:58 invalid 'const int *'
|-FunctionDecl 0x1c991d639e8 <line:347:1, col:69> col:5 invalid ec_GFp_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x1c991d638c8 <col:41, <invalid sloc>> col:57 invalid 'const int *'
| `-ParmVarDecl 0x1c991d63948 <col:59, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x1c991d63df0 <line:348:1, line:351:76> line:348:5 invalid ec_GFp_simple_set_Jprojective_coordinates_GFp 'int (const int *, int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d63ab0 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1c991d63b30 <line:349:51, <invalid sloc>> col:61 invalid 'int *'
| |-ParmVarDecl 0x1c991d63bb0 <col:63, col:77> col:77 invalid x 'const int *'
| |-ParmVarDecl 0x1c991d63c30 <line:350:51, col:65> col:65 invalid y 'const int *'
| |-ParmVarDecl 0x1c991d63cb0 <line:351:51, col:65> col:65 invalid z 'const int *'
| `-ParmVarDecl 0x1c991d63d30 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1c991d69278 <line:352:1, line:355:59> line:352:5 invalid ec_GFp_simple_get_Jprojective_coordinates_GFp 'int (const int *, const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1c991d63ed8 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1c991d63f58 <line:353:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1c991d63fd8 <col:69, col:77> col:77 invalid x 'int *'
| |-ParmVarDecl 0x1c991d690b8 <line:354:51, col:59> col:59 invalid y 'int *'
| |-ParmVarDecl 0x1c991d69138 <col:62, col:70> col:70 invalid z 'int *'
| `-ParmVarDecl 0x1c991d691b8 <line:355:51, <invalid sloc>> col:59 invalid 'int *'
|-FunctionDecl 0x1c991d69618 <line:356:1, line:358:73> line:356:5 invalid ec_GFp_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d69360 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1c991d693e0 <col:66, <invalid sloc>> col:76 invalid 'int *'
| |-ParmVarDecl 0x1c991d69460 <line:357:48, col:62> col:62 invalid x 'const int *'
| |-ParmVarDecl 0x1c991d694e0 <line:358:48, col:62> col:62 invalid y 'const int *'
| `-ParmVarDecl 0x1c991d69560 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x1c991d699b0 <line:359:1, line:361:67> line:359:5 invalid ec_GFp_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1c991d696f8 <col:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1c991d69778 <line:360:48, <invalid sloc>> col:64 invalid 'const int *'
| |-ParmVarDecl 0x1c991d697f8 <col:66, col:74> col:74 invalid x 'int *'
| |-ParmVarDecl 0x1c991d69878 <line:361:48, col:56> col:56 invalid y 'int *'
| `-ParmVarDecl 0x1c991d698f8 <col:59, <invalid sloc>> col:67 invalid 'int *'
|-FunctionDecl 0x1c991d69d48 <line:362:1, line:364:54> line:362:5 invalid ec_GFp_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x1c991d69a90 <col:46, <invalid sloc>> col:62 invalid 'const int *'
| |-ParmVarDecl 0x1c991d69b10 <col:64, <invalid sloc>> col:74 invalid 'int *'
| |-ParmVarDecl 0x1c991d69b90 <line:363:46, col:60> col:60 invalid x 'const int *'
| |-ParmVarDecl 0x1c991d69c10 <col:63, col:67> col:67 y_bit 'int'
| `-ParmVarDecl 0x1c991d69c90 <line:364:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1c991d620e8 <line:365:1, line:367:72> line:365:8 invalid ec_GFp_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1c991d69e28 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1c991d69ea8 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| |-ParmVarDecl 0x1c991d69f28 <line:366:32, col:56> col:56 invalid form 'int'
| |-ParmVarDecl 0x1c991d69fa8 <line:367:32, col:47> col:47 buf 'unsigned char *'
| |-ParmVarDecl 0x1c991d6a020 <col:52, col:59> col:59 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991d62030 <col:64, <invalid sloc>> col:72 invalid 'int *'
|-FunctionDecl 0x1c991d62480 <line:368:1, line:369:75> line:368:5 invalid ec_GFp_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1c991d621d0 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1c991d62250 <col:47, <invalid sloc>> col:57 invalid 'int *'
| |-ParmVarDecl 0x1c991d622d0 <line:369:29, col:50> col:50 buf 'const unsigned char *'
| |-ParmVarDecl 0x1c991d62348 <col:55, col:62> col:62 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991d623c8 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x1c991d62818 <line:370:1, line:371:50> line:370:5 invalid ec_GFp_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d62560 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1c991d625e0 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x1c991d62660 <col:54, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d626e0 <line:371:23, col:39> col:39 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d62760 <col:42, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1c991d62b28 <line:372:1, line:373:31> line:372:5 invalid ec_GFp_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d628f8 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1c991d62978 <col:41, col:51> col:51 invalid r 'int *'
| |-ParmVarDecl 0x1c991d629f8 <col:54, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1c991d62a78 <line:373:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x1c991d62da8 <line:374:1, col:64> col:5 invalid ec_GFp_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1c991d62c00 <col:26, <invalid sloc>> col:42 invalid 'const int *'
| |-ParmVarDecl 0x1c991d62c80 <col:44, <invalid sloc>> col:54 invalid 'int *'
| `-ParmVarDecl 0x1c991d62d00 <col:56, <invalid sloc>> col:64 invalid 'int *'
|-FunctionDecl 0x1c991d6a0b0 <line:375:1, col:68> col:5 invalid ec_GFp_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x1c991d62e78 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| `-ParmVarDecl 0x1c991d62ef8 <col:52, <invalid sloc>> col:68 invalid 'const int *'
|-FunctionDecl 0x1c991d6a320 <line:376:1, col:75> col:5 invalid ec_GFp_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6a178 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6a1f8 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| `-ParmVarDecl 0x1c991d6a278 <col:67, <invalid sloc>> col:75 invalid 'int *'
|-FunctionDecl 0x1c991d6a620 <line:377:1, line:378:31> line:377:5 invalid ec_GFp_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6a3f0 <col:23, <invalid sloc>> col:39 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6a470 <col:41, col:57> col:57 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d6a4f0 <col:60, col:76> col:76 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d6a570 <line:378:23, <invalid sloc>> col:31 invalid 'int *'
|-FunctionDecl 0x1c991d6a8a0 <line:379:1, col:69> col:5 invalid ec_GFp_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1c991d6a6f8 <col:31, <invalid sloc>> col:47 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6a778 <col:49, <invalid sloc>> col:59 invalid 'int *'
| `-ParmVarDecl 0x1c991d6a7f8 <col:61, <invalid sloc>> col:69 invalid 'int *'
|-FunctionDecl 0x1c991d6aba8 <line:380:1, line:381:60> line:380:5 invalid ec_GFp_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x1c991d6a970 <col:38, <invalid sloc>> col:54 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6a9e8 <col:56, col:63> col:63 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d6aa78 <line:381:38, <invalid sloc>> col:48 invalid 'int **':'int **'
| `-ParmVarDecl 0x1c991d6aaf8 <col:52, <invalid sloc>> col:60 invalid 'int *'
|-FunctionDecl 0x1c991d6af38 <line:382:1, line:383:54> line:382:5 invalid ec_GFp_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6ac80 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6ad00 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x1c991d6ad80 <col:58, col:72> col:72 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d6ae00 <line:383:29, col:43> col:43 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d6ae80 <col:46, <invalid sloc>> col:54 invalid 'int *'
|-FunctionDecl 0x1c991d6b270 <line:384:1, line:385:37> line:384:5 invalid ec_GFp_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6b018 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6b0c0 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x1c991d6b140 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x1c991d6b1c0 <line:385:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x1c991d6b578 <line:386:1, line:387:37> line:386:5 invalid ec_GFp_simple_field_inv 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6b348 <col:29, <invalid sloc>> col:45 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6b3c8 <col:47, col:55> col:55 invalid r 'int *'
| |-ParmVarDecl 0x1c991d6b448 <col:58, col:72> col:72 invalid a 'const int *'
| `-ParmVarDecl 0x1c991d6b4c8 <line:387:29, <invalid sloc>> col:37 invalid 'int *'
|-FunctionDecl 0x1c991d6b7f8 <line:388:1, line:389:48> line:388:5 invalid ec_GFp_simple_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1c991d6b650 <col:37, col:53> col:53 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d6b6d0 <col:60, col:70> col:70 invalid p 'int *'
| `-ParmVarDecl 0x1c991d6b750 <line:389:37, col:45> col:45 invalid ctx 'int *'
|-FunctionDecl 0x1c991d6b960 <line:392:1, col:38> col:5 invalid ec_GFp_mont_group_init 'int (int *)'
| `-ParmVarDecl 0x1c991d6b8c8 <col:28, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1c991d6bcd8 <line:393:1, line:394:58> line:393:5 invalid ec_GFp_mont_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6ba20 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x1c991d6baa0 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x1c991d6bb20 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d6bba0 <line:394:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d6bc20 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x1c991d6be48 <line:395:1, col:41> col:6 invalid ec_GFp_mont_group_finish 'void (int *)'
| `-ParmVarDecl 0x1c991d6bdb8 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1c991d6bf98 <line:396:1, col:47> col:6 invalid ec_GFp_mont_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1c991d6bf08 <col:37, <invalid sloc>> col:47 invalid 'int *'
|-FunctionDecl 0x1c991d64108 <line:397:1, col:56> col:5 invalid ec_GFp_mont_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1c991d6c058 <col:28, <invalid sloc>> col:38 invalid 'int *'
| `-ParmVarDecl 0x1c991d64068 <col:40, <invalid sloc>> col:56 invalid 'const int *'
|-FunctionDecl 0x1c991d64488 <line:398:1, line:399:52> line:398:5 invalid ec_GFp_mont_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d641d0 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1c991d64250 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1c991d642d0 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d64350 <line:399:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d643d0 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x1c991d64798 <line:400:1, line:401:35> line:400:5 invalid ec_GFp_mont_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d64568 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1c991d645e8 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1c991d64668 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1c991d646e8 <line:401:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x1c991d64aa0 <line:402:1, line:403:35> line:402:5 invalid ec_GFp_mont_field_inv 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d64870 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1c991d648f0 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1c991d64970 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1c991d649f0 <line:403:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x1c991d64da8 <line:404:1, line:405:38> line:404:5 invalid ec_GFp_mont_field_encode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d64b78 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1c991d64bf8 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1c991d64c78 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1c991d64cf8 <line:405:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1c991d6e1a0 <line:406:1, line:407:38> line:406:5 invalid ec_GFp_mont_field_decode 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d64e80 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1c991d64f00 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1c991d64f80 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1c991d6e0f0 <line:407:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1c991d6e420 <line:408:1, col:71> col:5 invalid ec_GFp_mont_field_set_to_one 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1c991d6e278 <col:34, <invalid sloc>> col:50 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6e2f8 <col:52, col:60> col:60 invalid r 'int *'
| `-ParmVarDecl 0x1c991d6e378 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x1c991d6e610 <line:411:1, col:63> col:5 invalid ec_GFp_nist_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1c991d6e4f0 <col:28, col:38> col:38 invalid dest 'int *'
| `-ParmVarDecl 0x1c991d6e570 <col:44, col:60> col:60 invalid src 'const int *'
|-FunctionDecl 0x1c991d6e990 <line:412:1, line:413:58> line:412:5 invalid ec_GFp_nist_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6e6d8 <col:33, <invalid sloc>> col:43 invalid 'int *'
| |-ParmVarDecl 0x1c991d6e758 <col:45, col:59> col:59 invalid p 'const int *'
| |-ParmVarDecl 0x1c991d6e7d8 <col:62, col:76> col:76 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d6e858 <line:413:33, col:47> col:47 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d6e8d8 <col:50, <invalid sloc>> col:58 invalid 'int *'
|-FunctionDecl 0x1c991d6ed28 <line:414:1, line:415:52> line:414:5 invalid ec_GFp_nist_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6ea70 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6eaf0 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1c991d6eb70 <col:56, col:70> col:70 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d6ebf0 <line:415:27, col:41> col:41 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d6ec70 <col:44, <invalid sloc>> col:52 invalid 'int *'
|-FunctionDecl 0x1c991d6f038 <line:416:1, line:417:35> line:416:5 invalid ec_GFp_nist_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6ee08 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6ee88 <col:45, col:53> col:53 invalid r 'int *'
| |-ParmVarDecl 0x1c991d6ef08 <col:56, col:70> col:70 invalid a 'const int *'
| `-ParmVarDecl 0x1c991d6ef88 <line:417:27, <invalid sloc>> col:35 invalid 'int *'
|-FunctionDecl 0x1c991d73210 <line:420:1, col:41> col:5 invalid ec_GF2m_simple_group_init 'int (int *)'
| `-ParmVarDecl 0x1c991d73178 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1c991d73360 <line:421:1, col:44> col:6 invalid ec_GF2m_simple_group_finish 'void (int *)'
| `-ParmVarDecl 0x1c991d732d0 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1c991d734b0 <line:422:1, col:50> col:6 invalid ec_GF2m_simple_group_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1c991d73420 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1c991d73690 <line:423:1, col:59> col:5 invalid ec_GF2m_simple_group_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1c991d73570 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x1c991d735f0 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x1c991d73a10 <line:424:1, line:426:44> line:424:5 invalid ec_GF2m_simple_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d73758 <col:36, <invalid sloc>> col:46 invalid 'int *'
| |-ParmVarDecl 0x1c991d737d8 <col:48, col:62> col:62 invalid p 'const int *'
| |-ParmVarDecl 0x1c991d73858 <line:425:36, col:50> col:50 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d738d8 <col:53, col:67> col:67 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d73958 <line:426:36, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1c991d73da8 <line:427:1, line:428:55> line:427:5 invalid ec_GF2m_simple_group_get_curve 'int (const int *, int *, int *, int *, int *)'
| |-ParmVarDecl 0x1c991d73af0 <col:36, <invalid sloc>> col:52 invalid 'const int *'
| |-ParmVarDecl 0x1c991d73b70 <col:54, col:62> col:62 invalid p 'int *'
| |-ParmVarDecl 0x1c991d73bf0 <col:65, col:73> col:73 invalid a 'int *'
| |-ParmVarDecl 0x1c991d73c70 <line:428:36, col:44> col:44 invalid b 'int *'
| `-ParmVarDecl 0x1c991d73cf0 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1c991d73f20 <line:429:1, col:53> col:5 invalid ec_GF2m_simple_group_get_degree 'int (const int *)'
| `-ParmVarDecl 0x1c991d73e88 <col:37, <invalid sloc>> col:53 invalid 'const int *'
|-FunctionDecl 0x1c991d6f100 <line:430:1, col:71> col:5 invalid ec_GF2m_simple_group_check_discriminant 'int (const int *, int *)'
| |-ParmVarDecl 0x1c991d73fe0 <col:45, <invalid sloc>> col:61 invalid 'const int *'
| `-ParmVarDecl 0x1c991d74060 <col:63, <invalid sloc>> col:71 invalid 'int *'
|-FunctionDecl 0x1c991d6f260 <line:431:1, col:41> col:5 invalid ec_GF2m_simple_point_init 'int (int *)'
| `-ParmVarDecl 0x1c991d6f1c8 <col:31, <invalid sloc>> col:41 invalid 'int *'
|-FunctionDecl 0x1c991d6f3b0 <line:432:1, col:44> col:6 invalid ec_GF2m_simple_point_finish 'void (int *)'
| `-ParmVarDecl 0x1c991d6f320 <col:34, <invalid sloc>> col:44 invalid 'int *'
|-FunctionDecl 0x1c991d6f500 <line:433:1, col:50> col:6 invalid ec_GF2m_simple_point_clear_finish 'void (int *)'
| `-ParmVarDecl 0x1c991d6f470 <col:40, <invalid sloc>> col:50 invalid 'int *'
|-FunctionDecl 0x1c991d6f6e0 <line:434:1, col:59> col:5 invalid ec_GF2m_simple_point_copy 'int (int *, const int *)'
| |-ParmVarDecl 0x1c991d6f5c0 <col:31, <invalid sloc>> col:41 invalid 'int *'
| `-ParmVarDecl 0x1c991d6f640 <col:43, <invalid sloc>> col:59 invalid 'const int *'
|-FunctionDecl 0x1c991d6f8c8 <line:435:1, col:70> col:5 invalid ec_GF2m_simple_point_set_to_infinity 'int (const int *, int *)'
| |-ParmVarDecl 0x1c991d6f7a8 <col:42, <invalid sloc>> col:58 invalid 'const int *'
| `-ParmVarDecl 0x1c991d6f828 <col:60, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1c991d6fc48 <line:436:1, line:438:74> line:436:5 invalid ec_GF2m_simple_point_set_affine_coordinates 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6f990 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6fa10 <col:67, <invalid sloc>> col:77 invalid 'int *'
| |-ParmVarDecl 0x1c991d6fa90 <line:437:49, col:63> col:63 invalid x 'const int *'
| |-ParmVarDecl 0x1c991d6fb10 <line:438:49, col:63> col:63 invalid y 'const int *'
| `-ParmVarDecl 0x1c991d6fb90 <col:66, <invalid sloc>> col:74 invalid 'int *'
|-FunctionDecl 0x1c991d6ffe0 <line:439:1, line:441:68> line:439:5 invalid ec_GF2m_simple_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1c991d6fd28 <col:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6fda8 <line:440:49, <invalid sloc>> col:65 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6fe28 <col:67, col:75> col:75 invalid x 'int *'
| |-ParmVarDecl 0x1c991d6fea8 <line:441:49, col:57> col:57 invalid y 'int *'
| `-ParmVarDecl 0x1c991d6ff28 <col:60, <invalid sloc>> col:68 invalid 'int *'
|-FunctionDecl 0x1c991d723e8 <line:442:1, line:444:55> line:442:5 invalid ec_GF2m_simple_set_compressed_coordinates 'int (const int *, int *, const int *, int, int *)'
| |-ParmVarDecl 0x1c991d72130 <col:47, <invalid sloc>> col:63 invalid 'const int *'
| |-ParmVarDecl 0x1c991d721b0 <col:65, <invalid sloc>> col:75 invalid 'int *'
| |-ParmVarDecl 0x1c991d72230 <line:443:47, col:61> col:61 invalid x 'const int *'
| |-ParmVarDecl 0x1c991d722b0 <col:64, col:68> col:68 y_bit 'int'
| `-ParmVarDecl 0x1c991d72330 <line:444:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1c991d727f8 <line:445:1, line:447:73> line:445:8 invalid ec_GF2m_simple_point2oct 'size_t (const int *, const int *, int, unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1c991d724c8 <col:33, <invalid sloc>> col:49 invalid 'const int *'
| |-ParmVarDecl 0x1c991d72548 <col:51, <invalid sloc>> col:67 invalid 'const int *'
| |-ParmVarDecl 0x1c991d725c8 <line:446:33, col:57> col:57 invalid form 'int'
| |-ParmVarDecl 0x1c991d72648 <line:447:33, col:48> col:48 buf 'unsigned char *'
| |-ParmVarDecl 0x1c991d726c0 <col:53, col:60> col:60 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991d72740 <col:65, <invalid sloc>> col:73 invalid 'int *'
|-FunctionDecl 0x1c991d72b90 <line:448:1, line:449:76> line:448:5 invalid ec_GF2m_simple_oct2point 'int (const int *, int *, const unsigned char *, size_t, int *)'
| |-ParmVarDecl 0x1c991d728e0 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1c991d72960 <col:48, <invalid sloc>> col:58 invalid 'int *'
| |-ParmVarDecl 0x1c991d729e0 <line:449:30, col:51> col:51 buf 'const unsigned char *'
| |-ParmVarDecl 0x1c991d72a58 <col:56, col:63> col:63 len 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1c991d72ad8 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1c991d72f28 <line:450:1, line:451:51> line:450:5 invalid ec_GF2m_simple_add 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d72c70 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1c991d72cf0 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x1c991d72d70 <col:55, col:71> col:71 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d72df0 <line:451:24, col:40> col:40 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d72e70 <col:43, <invalid sloc>> col:51 invalid 'int *'
|-FunctionDecl 0x1c991d6c200 <line:452:1, line:453:32> line:452:5 invalid ec_GF2m_simple_dbl 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d73008 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1c991d73088 <col:42, col:52> col:52 invalid r 'int *'
| |-ParmVarDecl 0x1c991d6c0d0 <col:55, col:71> col:71 invalid a 'const int *'
| `-ParmVarDecl 0x1c991d6c150 <line:453:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1c991d6c480 <line:454:1, col:65> col:5 invalid ec_GF2m_simple_invert 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1c991d6c2d8 <col:27, <invalid sloc>> col:43 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6c358 <col:45, <invalid sloc>> col:55 invalid 'int *'
| `-ParmVarDecl 0x1c991d6c3d8 <col:57, <invalid sloc>> col:65 invalid 'int *'
|-FunctionDecl 0x1c991d6c670 <line:455:1, col:69> col:5 invalid ec_GF2m_simple_is_at_infinity 'int (const int *, const int *)'
| |-ParmVarDecl 0x1c991d6c550 <col:35, <invalid sloc>> col:51 invalid 'const int *'
| `-ParmVarDecl 0x1c991d6c5d0 <col:53, <invalid sloc>> col:69 invalid 'const int *'
|-FunctionDecl 0x1c991d6c8e0 <line:456:1, col:76> col:5 invalid ec_GF2m_simple_is_on_curve 'int (const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6c738 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6c7b8 <col:50, <invalid sloc>> col:66 invalid 'const int *'
| `-ParmVarDecl 0x1c991d6c838 <col:68, <invalid sloc>> col:76 invalid 'int *'
|-FunctionDecl 0x1c991d6cbe0 <line:457:1, line:458:32> line:457:5 invalid ec_GF2m_simple_cmp 'int (const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d6c9b0 <col:24, <invalid sloc>> col:40 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6ca30 <col:42, col:58> col:58 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d6cab0 <col:61, col:77> col:77 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d6cb30 <line:458:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1c991d6ce60 <line:459:1, col:70> col:5 invalid ec_GF2m_simple_make_affine 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1c991d6ccb8 <col:32, <invalid sloc>> col:48 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6cd38 <col:50, <invalid sloc>> col:60 invalid 'int *'
| `-ParmVarDecl 0x1c991d6cdb8 <col:62, <invalid sloc>> col:70 invalid 'int *'
|-FunctionDecl 0x1c991d74200 <line:460:1, line:461:61> line:460:5 invalid ec_GF2m_simple_points_make_affine 'int (const int *, size_t, int **, int *)'
| |-ParmVarDecl 0x1c991d6cf30 <col:39, <invalid sloc>> col:55 invalid 'const int *'
| |-ParmVarDecl 0x1c991d6cfa8 <col:57, col:64> col:64 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d6d038 <line:461:39, <invalid sloc>> col:49 invalid 'int **':'int **'
| `-ParmVarDecl 0x1c991d74150 <col:53, <invalid sloc>> col:61 invalid 'int *'
|-FunctionDecl 0x1c991d74590 <line:462:1, line:463:55> line:462:5 invalid ec_GF2m_simple_field_mul 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d742d8 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1c991d74358 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1c991d743d8 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d74458 <line:463:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d744d8 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1c991d748a0 <line:464:1, line:465:38> line:464:5 invalid ec_GF2m_simple_field_sqr 'int (const int *, int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d74670 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1c991d746f0 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1c991d74770 <col:59, col:73> col:73 invalid a 'const int *'
| `-ParmVarDecl 0x1c991d747f0 <line:465:30, <invalid sloc>> col:38 invalid 'int *'
|-FunctionDecl 0x1c991d74c30 <line:466:1, line:467:55> line:466:5 invalid ec_GF2m_simple_field_div 'int (const int *, int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d74978 <col:30, <invalid sloc>> col:46 invalid 'const int *'
| |-ParmVarDecl 0x1c991d749f8 <col:48, col:56> col:56 invalid r 'int *'
| |-ParmVarDecl 0x1c991d74a78 <col:59, col:73> col:73 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d74af8 <line:467:30, col:44> col:44 invalid b 'const int *'
| `-ParmVarDecl 0x1c991d74b78 <col:47, <invalid sloc>> col:55 invalid 'int *'
|-FunctionDecl 0x1c991d75160 <line:470:1, line:473:32> line:470:5 invalid ec_GF2m_simple_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1c991d74d10 <col:24, col:40> col:40 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d74d90 <col:47, col:57> col:57 invalid r 'int *'
| |-ParmVarDecl 0x1c991d74e10 <line:471:24, col:38> col:38 invalid scalar 'const int *'
| |-ParmVarDecl 0x1c991d74e88 <col:46, col:53> col:53 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d74f18 <line:472:24, <invalid sloc>> col:40 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1c991d74fa8 <col:50, <invalid sloc>> col:64 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1c991d75028 <line:473:24, <invalid sloc>> col:32 invalid 'int *'
|-FunctionDecl 0x1c991d75370 <line:474:1, col:57> col:5 invalid ec_GF2m_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1c991d75250 <col:29, col:39> col:39 invalid group 'int *'
| `-ParmVarDecl 0x1c991d752d0 <col:46, col:54> col:54 invalid ctx 'int *'
|-FunctionDecl 0x1c991d754d0 <line:475:1, col:55> col:5 invalid ec_GF2m_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1c991d75438 <col:34, col:50> col:50 invalid group 'const int *'
|-FunctionDecl 0x1c991d75628 <line:479:1, col:47> col:5 invalid ec_GFp_nistp224_group_init 'int (int *)'
| `-ParmVarDecl 0x1c991d75590 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1c991d759a0 <line:480:1, line:482:45> line:480:5 invalid ec_GFp_nistp224_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d756e8 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1c991d75768 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1c991d757e8 <line:481:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d75868 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1c991d758e8 <line:482:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1c991d75d38 <line:483:1, line:486:61> line:483:5 invalid ec_GFp_nistp224_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1c991d75a80 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d75b00 <line:484:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1c991d75b80 <line:485:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1c991d75c00 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1c991d75c80 <line:486:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1c991d76238 <line:487:1, line:490:33> line:487:5 invalid ec_GFp_nistp224_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1c991d75e18 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d75e98 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1c991d75f18 <line:488:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1c991d75f90 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d76020 <line:489:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1c991d760b0 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1c991d76170 <line:490:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1c991d76708 <line:491:1, line:494:68> line:491:5 invalid ec_GFp_nistp224_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1c991d76328 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d763a8 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1c991d76428 <line:492:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1c991d764a0 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d76530 <line:493:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1c991d765c0 <line:494:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1c991d76640 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1c991d76918 <line:495:1, col:65> col:5 invalid ec_GFp_nistp224_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1c991d767f8 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1c991d76878 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1c991d76a78 <line:496:1, col:63> col:5 invalid ec_GFp_nistp224_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1c991d769e0 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1c991d76bd0 <line:499:1, col:47> col:5 invalid ec_GFp_nistp256_group_init 'int (int *)'
| `-ParmVarDecl 0x1c991d76b38 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1c991d76f48 <line:500:1, line:502:45> line:500:5 invalid ec_GFp_nistp256_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d76c90 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1c991d76d10 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1c991d76d90 <line:501:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d76e10 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1c991d76e90 <line:502:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1c991d77338 <line:503:1, line:506:61> line:503:5 invalid ec_GFp_nistp256_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1c991d77028 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d770a8 <line:504:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1c991d77180 <line:505:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1c991d77200 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1c991d77280 <line:506:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1c991d777f8 <line:507:1, line:510:33> line:507:5 invalid ec_GFp_nistp256_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1c991d77418 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d77498 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1c991d77518 <line:508:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1c991d77590 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d77620 <line:509:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1c991d776b0 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1c991d77730 <line:510:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1c991d77cc8 <line:511:1, line:514:68> line:511:5 invalid ec_GFp_nistp256_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1c991d778e8 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d77968 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1c991d779e8 <line:512:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1c991d77a60 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d77af0 <line:513:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1c991d77b80 <line:514:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1c991d77c00 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1c991d77ed8 <line:515:1, col:65> col:5 invalid ec_GFp_nistp256_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1c991d77db8 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1c991d77e38 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1c991d78038 <line:516:1, col:63> col:5 invalid ec_GFp_nistp256_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1c991d77fa0 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1c991d781c0 <line:519:1, col:47> col:5 invalid ec_GFp_nistp521_group_init 'int (int *)'
| `-ParmVarDecl 0x1c991d780f8 <col:32, col:42> col:42 invalid group 'int *'
|-FunctionDecl 0x1c991d78538 <line:520:1, line:522:45> line:520:5 invalid ec_GFp_nistp521_group_set_curve 'int (int *, const int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d78280 <col:37, col:47> col:47 invalid group 'int *'
| |-ParmVarDecl 0x1c991d78300 <col:54, col:68> col:68 invalid p 'const int *'
| |-ParmVarDecl 0x1c991d78380 <line:521:37, col:51> col:51 invalid a 'const int *'
| |-ParmVarDecl 0x1c991d78400 <col:54, col:68> col:68 invalid n 'const int *'
| `-ParmVarDecl 0x1c991d78480 <line:522:37, <invalid sloc>> col:45 invalid 'int *'
|-FunctionDecl 0x1c991d788d0 <line:523:1, line:526:61> line:523:5 invalid ec_GFp_nistp521_point_get_affine_coordinates 'int (const int *, const int *, int *, int *, int *)'
| |-ParmVarDecl 0x1c991d78618 <col:50, col:66> col:66 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d78698 <line:524:50, col:66> col:66 invalid point 'const int *'
| |-ParmVarDecl 0x1c991d78718 <line:525:50, col:58> col:58 invalid x 'int *'
| |-ParmVarDecl 0x1c991d78798 <col:61, col:69> col:69 invalid y 'int *'
| `-ParmVarDecl 0x1c991d78818 <line:526:50, col:58> col:58 invalid ctx 'int *'
|-FunctionDecl 0x1c991d78d90 <line:527:1, line:530:33> line:527:5 invalid ec_GFp_nistp521_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1c991d789b0 <col:25, col:41> col:41 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d78a30 <col:48, col:58> col:58 invalid r 'int *'
| |-ParmVarDecl 0x1c991d78ab0 <line:528:25, col:39> col:39 invalid scalar 'const int *'
| |-ParmVarDecl 0x1c991d78b28 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d78bb8 <line:529:25, <invalid sloc>> col:41 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1c991d78c48 <col:51, <invalid sloc>> col:65 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1c991d78cc8 <line:530:25, <invalid sloc>> col:33 invalid 'int *'
|-FunctionDecl 0x1c991d71200 <line:531:1, line:534:68> line:531:5 invalid ec_GFp_nistp521_points_mul 'int (const int *, int *, const int *, size_t, const int **, const int **, int *)'
| |-ParmVarDecl 0x1c991d78e80 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d78f00 <col:55, col:65> col:65 invalid r 'int *'
| |-ParmVarDecl 0x1c991d78f80 <line:532:32, col:46> col:46 invalid scalar 'const int *'
| |-ParmVarDecl 0x1c991d78ff8 <col:54, col:61> col:61 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d79088 <line:533:32, <invalid sloc>> col:48 invalid points 'const int **':'const int **'
| |-ParmVarDecl 0x1c991d79118 <line:534:32, <invalid sloc>> col:46 invalid scalars 'const int **':'const int **'
| `-ParmVarDecl 0x1c991d71138 <col:57, col:65> col:65 invalid ctx 'int *'
|-FunctionDecl 0x1c991d71410 <line:535:1, col:65> col:5 invalid ec_GFp_nistp521_precompute_mult 'int (int *, int *)'
| |-ParmVarDecl 0x1c991d712f0 <col:37, col:47> col:47 invalid group 'int *'
| `-ParmVarDecl 0x1c991d71370 <col:54, col:62> col:62 invalid ctx 'int *'
|-FunctionDecl 0x1c991d71570 <line:536:1, col:63> col:5 invalid ec_GFp_nistp521_have_precompute_mult 'int (const int *)'
| `-ParmVarDecl 0x1c991d714d8 <col:42, col:58> col:58 invalid group 'const int *'
|-FunctionDecl 0x1c991d7caa8 <line:539:1, line:563:75> line:539:6 ec_GFp_nistp_points_make_affine_internal 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
| |-ParmVarDecl 0x1c991d71628 <col:47, col:54> col:54 num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d716a8 <col:59, col:65> col:65 point_array 'void *'
| |-ParmVarDecl 0x1c991d71720 <line:540:47, col:54> col:54 felem_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d717a0 <line:541:47, col:53> col:53 tmp_felems 'void *'
| |-ParmVarDecl 0x1c991d71960 <line:542:47, col:75> col:54 felem_one 'void (*)(void *)'
| |-ParmVarDecl 0x1c991d71b58 <line:543:47, line:544:72> line:543:53 felem_is_zero 'int (*)(const void *)'
| |-ParmVarDecl 0x1c991d71df8 <line:545:47, line:547:72> line:545:54 felem_assign 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x1c991d71fd0 <line:548:47, line:550:72> line:548:54 felem_square 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x1c991d7c410 <line:551:47, line:555:70> line:551:54 felem_mul 'void (*)(void *, const void *, const void *)'
| |-ParmVarDecl 0x1c991d7c5e8 <line:556:47, line:558:69> line:556:54 felem_inv 'void (*)(void *, const void *)'
| `-ParmVarDecl 0x1c991d7c7c0 <line:559:47, line:563:74> line:559:54 felem_contract 'void (*)(void *, const void *)'
|-FunctionDecl 0x1c991d7cdf8 <line:564:1, line:565:76> line:564:6 ec_GFp_nistp_recode_scalar_bits 'void (unsigned char *, unsigned char *, unsigned char)'
| |-ParmVarDecl 0x1c991d7cbd0 <col:38, col:53> col:53 sign 'unsigned char *'
| |-ParmVarDecl 0x1c991d7cc50 <line:565:38, col:53> col:53 digit 'unsigned char *'
| `-ParmVarDecl 0x1c991d7ccd0 <col:60, col:74> col:74 in 'unsigned char'
|-FunctionDecl 0x1c991d7cf78 <line:567:1, col:39> col:5 invalid ec_precompute_mont_data 'int (int *)'
| `-ParmVarDecl 0x1c991d7cee0 <col:29, <invalid sloc>> col:39 invalid 'int *'
|-FunctionDecl 0x1c991d7d0d0 <line:568:1, col:53> col:5 invalid ec_group_simple_order_bits 'int (const int *)'
| `-ParmVarDecl 0x1c991d7d038 <col:32, col:48> col:48 invalid group 'const int *'
|-FunctionDecl 0x1c991d7f398 <line:578:1, line:579:61> line:578:8 invalid ec_key_simple_priv2oct 'size_t (const int *, unsigned char *, size_t)'
| |-ParmVarDecl 0x1c991d7f200 <col:31, col:45> col:45 invalid eckey 'const int *'
| |-ParmVarDecl 0x1c991d7f280 <line:579:31, col:46> col:46 buf 'unsigned char *'
| `-ParmVarDecl 0x1c991d7f2f8 <col:51, col:58> col:58 len 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991d7f608 <line:580:1, col:79> col:5 invalid ec_key_simple_oct2priv 'int (int *, const unsigned char *, size_t)'
| |-ParmVarDecl 0x1c991d7f468 <col:28, col:36> col:36 invalid eckey 'int *'
| |-ParmVarDecl 0x1c991d7f4e8 <col:43, col:64> col:64 buf 'const unsigned char *'
| `-ParmVarDecl 0x1c991d7f560 <col:69, col:76> col:76 len 'size_t':'unsigned long long'
|-FunctionDecl 0x1c991d7f770 <line:581:1, col:45> col:5 invalid ec_key_simple_generate_key 'int (int *)'
| `-ParmVarDecl 0x1c991d7f6d8 <col:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x1c991d7f8c8 <line:582:1, col:52> col:5 invalid ec_key_simple_generate_public_key 'int (int *)'
| `-ParmVarDecl 0x1c991d7f830 <col:39, col:47> col:47 invalid eckey 'int *'
|-FunctionDecl 0x1c991d7fa20 <line:583:1, col:48> col:5 invalid ec_key_simple_check_key 'int (const int *)'
| `-ParmVarDecl 0x1c991d7f988 <col:29, col:43> col:43 invalid eckey 'const int *'
|-RecordDecl 0x1c991d7fac8 <line:587:1, line:612:1> line:587:8 invalid struct ec_key_method_st definition
| |-FieldDecl 0x1c991d7fb98 <line:588:5, col:17> col:17 name 'const char *'
| |-FieldDecl 0x1c991d7fc08 <line:589:5, col:13> col:13 invalid flags 'int'
| |-FieldDecl 0x1c991d7fd20 <line:590:5, col:28> col:11 init 'int (*)(int *)'
| |-FieldDecl 0x1c991d7fe30 <line:591:5, col:31> col:12 finish 'void (*)(int *)'
| |-FieldDecl 0x1c991d7ffd0 <line:592:5, col:48> col:11 copy 'int (*)(int *, const int *)'
| |-FieldDecl 0x1c991d80170 <line:593:5, col:54> col:11 set_group 'int (*)(int *, const int *)'
| |-FieldDecl 0x1c991d80340 <line:594:5, col:59> col:11 set_private 'int (*)(int *, const int *)'
| |-FieldDecl 0x1c991d804e0 <line:595:5, col:59> col:11 set_public 'int (*)(int *, const int *)'
| |-FieldDecl 0x1c991d805f8 <line:596:5, col:30> col:11 keygen 'int (*)(int *)'
| |-FieldDecl 0x1c991d808a8 <line:597:5, line:598:67> line:597:11 compute_key 'int (*)(unsigned char **, size_t *, const int *, const int *)'
| |-FieldDecl 0x1c991d80ea0 <line:599:5, line:601:47> line:599:11 sign 'int (*)(int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-FieldDecl 0x1c991d791f8 <line:602:5, line:603:34> line:602:11 sign_setup 'int (*)(int *, int *, int **, int **)'
| |-FieldDecl 0x1c991d79608 <line:604:5, <invalid sloc>> col:18 invalid sign_sig 'int *(*)(const unsigned char *, int, const int *, const int *, int *)'
| |-FieldDecl 0x1c991d79ab0 <line:608:5, line:609:74> line:608:11 verify 'int (*)(int, const unsigned char *, int, const unsigned char *, int, int *)'
| `-FieldDecl 0x1c991d79e40 <line:610:5, line:611:58> line:610:11 verify_sig 'int (*)(const unsigned char *, int, const int *, int *)'
|-FunctionDecl 0x1c991d79f48 <line:616:1, col:34> col:5 invalid ossl_ec_key_gen 'int (int *)'
| `-ParmVarDecl 0x1c991d79eb0 <col:21, col:29> col:29 invalid eckey 'int *'
|-FunctionDecl 0x1c991d7e2a0 <line:617:1, line:618:70> line:617:5 invalid ossl_ecdh_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x1c991d7a010 <col:27, col:43> col:43 pout 'unsigned char **'
| |-ParmVarDecl 0x1c991d7a088 <col:49, col:57> col:57 poutlen 'size_t *'
| |-ParmVarDecl 0x1c991d7a108 <line:618:27, col:43> col:43 invalid pub_key 'const int *'
| `-ParmVarDecl 0x1c991d7e1f0 <col:52, col:66> col:66 invalid ecdh 'const int *'
|-FunctionDecl 0x1c991d7e5a8 <line:619:1, line:620:72> line:619:5 invalid ecdh_simple_compute_key 'int (unsigned char **, size_t *, const int *, const int *)'
| |-ParmVarDecl 0x1c991d7e380 <col:29, col:45> col:45 pout 'unsigned char **'
| |-ParmVarDecl 0x1c991d7e3f8 <col:51, col:59> col:59 poutlen 'size_t *'
| |-ParmVarDecl 0x1c991d7e478 <line:620:29, col:45> col:45 invalid pub_key 'const int *'
| `-ParmVarDecl 0x1c991d7e4f8 <col:54, col:68> col:68 invalid ecdh 'const int *'
|-RecordDecl 0x1c991d7e668 <line:622:1, line:625:1> line:622:8 invalid struct ECDSA_SIG_st definition
| |-FieldDecl 0x1c991d7e738 <line:623:5, col:13> col:13 invalid r 'int *'
| `-FieldDecl 0x1c991d7e7a8 <line:624:5, col:13> col:13 invalid s 'int *'
|-FunctionDecl 0x1c991d7ea58 <line:627:1, line:628:38> line:627:5 invalid ossl_ecdsa_sign_setup 'int (int *, int *, int **, int **)'
| |-ParmVarDecl 0x1c991d7e818 <col:27, col:35> col:35 invalid eckey 'int *'
| |-ParmVarDecl 0x1c991d7e898 <col:42, col:50> col:50 invalid ctx_in 'int *'
| |-ParmVarDecl 0x1c991d7e920 <col:58, col:67> col:67 invalid kinvp 'int **'
| `-ParmVarDecl 0x1c991d7e9a8 <line:628:27, col:36> col:36 invalid rp 'int **'
|-FunctionDecl 0x1c991d7ef80 <line:629:1, line:631:71> line:629:5 invalid ossl_ecdsa_sign 'int (int, const unsigned char *, int, unsigned char *, unsigned int *, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d7eb30 <col:21, col:25> col:25 type 'int'
| |-ParmVarDecl 0x1c991d7ebb0 <col:31, col:52> col:52 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1c991d7ec30 <col:58, col:62> col:62 dlen 'int'
| |-ParmVarDecl 0x1c991d7ecb0 <line:630:21, col:36> col:36 sig 'unsigned char *'
| |-ParmVarDecl 0x1c991d7ed30 <col:41, col:55> col:55 siglen 'unsigned int *'
| |-ParmVarDecl 0x1c991d7edb0 <line:631:21, col:35> col:35 invalid kinv 'const int *'
| |-ParmVarDecl 0x1c991d7ee30 <col:41, col:55> col:55 invalid r 'const int *'
| `-ParmVarDecl 0x1c991d7eeb0 <col:58, col:66> col:66 invalid eckey 'int *'
|-FunctionDecl 0x1c991d7a300 <line:632:1, line:634:45> line:632:12 invalid ossl_ecdsa_sign_sig 'int *(const unsigned char *, int, const int *, const int *, int *)'
| |-ParmVarDecl 0x1c991d7f078 <col:32, col:53> col:53 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1c991d7f0f8 <col:59, col:63> col:63 dgst_len 'int'
| |-ParmVarDecl 0x1c991d7f178 <line:633:32, col:46> col:46 invalid in_kinv 'const int *'
| |-ParmVarDecl 0x1c991d7a1c8 <col:55, col:69> col:69 invalid in_r 'const int *'
| `-ParmVarDecl 0x1c991d7a248 <line:634:32, col:40> col:40 invalid eckey 'int *'
|-FunctionDecl 0x1c991d7a720 <line:635:1, line:636:78> line:635:5 invalid ossl_ecdsa_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'
| |-ParmVarDecl 0x1c991d7a3e0 <col:23, col:27> col:27 type 'int'
| |-ParmVarDecl 0x1c991d7a460 <col:33, col:54> col:54 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1c991d7a4e0 <col:60, col:64> col:64 dgst_len 'int'
| |-ParmVarDecl 0x1c991d7a560 <line:636:23, col:44> col:44 sigbuf 'const unsigned char *'
| |-ParmVarDecl 0x1c991d7a5e0 <col:52, col:56> col:56 sig_len 'int'
| `-ParmVarDecl 0x1c991d7a660 <col:65, col:73> col:73 invalid eckey 'int *'
|-FunctionDecl 0x1c991d7aa38 <line:637:1, line:638:62> line:637:5 invalid ossl_ecdsa_verify_sig 'int (const unsigned char *, int, const int *, int *)'
| |-ParmVarDecl 0x1c991d7a808 <col:27, col:48> col:48 dgst 'const unsigned char *'
| |-ParmVarDecl 0x1c991d7a888 <col:54, col:58> col:58 dgst_len 'int'
| |-ParmVarDecl 0x1c991d7a908 <line:638:27, col:44> col:44 invalid sig 'const int *'
| `-ParmVarDecl 0x1c991d7a988 <col:49, col:57> col:57 invalid eckey 'int *'
|-FunctionDecl 0x1c991d7af10 <line:640:1, line:641:47> line:640:5 invalid X25519 'int (int *, const int *, const int *)'
| |-ParmVarDecl 0x1c991d7abd0 <col:12, <invalid sloc>> col:20 invalid out_shared_key 'int *':'int *'
| |-ParmVarDecl 0x1c991d7ad10 <col:40, <invalid sloc>> col:54 invalid private_key 'const int *':'const int *'
| `-ParmVarDecl 0x1c991d7ade0 <line:641:12, <invalid sloc>> col:26 invalid peer_public_value 'const int *':'const int *'
|-FunctionDecl 0x1c991d82298 <line:642:1, line:643:62> line:642:6 invalid X25519_public_from_private 'void (int *, const int *)'
| |-ParmVarDecl 0x1c991d7b030 <col:33, <invalid sloc>> col:41 invalid out_public_value 'int *':'int *'
| `-ParmVarDecl 0x1c991d7b100 <line:643:33, <invalid sloc>> col:47 invalid private_key 'const int *':'const int *'
|-FunctionDecl 0x1c991d82508 <line:645:1, col:79> col:5 invalid ec_point_blind_coordinates 'int (const int *, int *, int *)'
| |-ParmVarDecl 0x1c991d82360 <col:32, col:48> col:48 invalid group 'const int *'
| |-ParmVarDecl 0x1c991d823e0 <col:55, col:65> col:65 invalid p 'int *'
| `-ParmVarDecl 0x1c991d82460 <col:68, col:76> col:76 invalid ctx 'int *'
|-FunctionDecl 0x1c991d7b518 prev 0x1c991d7caa8 <.//openssl//file_jk/after\crypto\ec\ecp_nistputil.c:49:1, line:134:1> line:49:6 ec_GFp_nistp_points_make_affine_internal 'void (size_t, void *, size_t, void *, void (*)(void *), int (*)(const void *), void (*)(void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *, const void *), void (*)(void *, const void *), void (*)(void *, const void *))'
| |-ParmVarDecl 0x1c991d825d0 <col:47, col:54> col:54 used num 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d82650 <col:59, col:65> col:65 used point_array 'void *'
| |-ParmVarDecl 0x1c991d826c8 <line:50:47, col:54> col:54 used felem_size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1c991d82748 <line:51:47, col:53> col:53 used tmp_felems 'void *'
| |-ParmVarDecl 0x1c991d82880 <line:52:47, col:75> col:54 used felem_one 'void (*)(void *)'
| |-ParmVarDecl 0x1c991d829c0 <line:53:47, line:54:72> line:53:53 used felem_is_zero 'int (*)(const void *)'
| |-ParmVarDecl 0x1c991d82b98 <line:55:47, line:57:72> line:55:54 used felem_assign 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x1c991d82d70 <line:58:47, line:60:72> line:58:54 used felem_square 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x1c991d82fe8 <line:61:47, line:65:70> line:61:54 used felem_mul 'void (*)(void *, const void *, const void *)'
| |-ParmVarDecl 0x1c991d831c0 <line:66:47, line:68:69> line:66:54 used felem_inv 'void (*)(void *, const void *)'
| |-ParmVarDecl 0x1c991d7b330 <line:69:47, line:73:74> line:69:54 used felem_contract 'void (*)(void *, const void *)'
| `-CompoundStmt 0x1c991d8aac8 <line:74:1, line:134:1>
|   |-DeclStmt 0x1c991d7b6b8 <line:75:5, col:14>
|   | `-VarDecl 0x1c991d7b628 <col:5, col:13> col:9 used i 'int' cinit
|   |   `-IntegerLiteral 0x1c991d7b690 <col:13> 'int' 0
|   |-IfStmt 0x1c991d7c070 <line:82:5, line:85:31> has_else
|   | |-UnaryOperator 0x1c991d7b9a0 <line:82:9, col:28> 'int' prefix '!' cannot overflow
|   | | `-CallExpr 0x1c991d7b960 <col:10, col:28> 'int'
|   | |   |-ImplicitCastExpr 0x1c991d7b948 <col:10> 'int (*)(const void *)' <LValueToRValue>
|   | |   | `-DeclRefExpr 0x1c991d7b6d0 <col:10> 'int (*)(const void *)' lvalue ParmVar 0x1c991d829c0 'felem_is_zero' 'int (*)(const void *)'
|   | |   `-ImplicitCastExpr 0x1c991d7b988 <line:80:15, col:64> 'const void *' <BitCast>
|   | |     `-ParenExpr 0x1c991d7b928 <col:15, col:64> 'char *'
|   | |       `-UnaryOperator 0x1c991d7b910 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   | |         `-ArraySubscriptExpr 0x1c991d7b8f0 <col:17, col:63> 'char' lvalue
|   | |           |-ParenExpr 0x1c991d7b768 <col:17, col:37> 'char *'
|   | |           | `-CStyleCastExpr 0x1c991d7b740 <col:18, col:26> 'char *' <BitCast>
|   | |           |   `-ImplicitCastExpr 0x1c991d7b728 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |           |     `-DeclRefExpr 0x1c991d7b6f0 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|   | |           `-BinaryOperator 0x1c991d7b8d0 <col:39, col:53> 'unsigned long long' '*'
|   | |             |-ImplicitCastExpr 0x1c991d7b8b8 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   | |             | `-ParenExpr 0x1c991d7b860 <col:39, col:49> 'int'
|   | |             |   `-BinaryOperator 0x1c991d7b840 <col:40, col:48> 'int' '+'
|   | |             |     |-BinaryOperator 0x1c991d7b7f8 <col:40, col:44> 'int' '*'
|   | |             |     | |-IntegerLiteral 0x1c991d7b788 <col:40> 'int' 3
|   | |             |     | `-ParenExpr 0x1c991d7b7d8 <col:42, col:44> 'int'
|   | |             |     |   `-IntegerLiteral 0x1c991d7b7b0 <line:82:26> 'int' 0
|   | |             |     `-IntegerLiteral 0x1c991d7b818 <line:80:48> 'int' 2
|   | |             `-ImplicitCastExpr 0x1c991d7b8a0 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   | |               `-DeclRefExpr 0x1c991d7b880 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   | |-CallExpr 0x1c991d7bdf0 <line:83:9, col:40> 'void'
|   | | |-ImplicitCastExpr 0x1c991d7bdd8 <col:9> 'void (*)(void *, const void *)' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c991d7b9b8 <col:9> 'void (*)(void *, const void *)' lvalue ParmVar 0x1c991d82b98 'felem_assign' 'void (*)(void *, const void *)'
|   | | |-ImplicitCastExpr 0x1c991d7be20 <line:77:23, col:63> 'void *' <BitCast>
|   | | | `-ParenExpr 0x1c991d7bb60 <col:23, col:63> 'char *'
|   | | |   `-UnaryOperator 0x1c991d7bb48 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   | | |     `-ArraySubscriptExpr 0x1c991d7bb28 <col:25, col:62> 'char' lvalue
|   | | |       |-ParenExpr 0x1c991d7ba50 <col:25, col:44> 'char *'
|   | | |       | `-CStyleCastExpr 0x1c991d7ba28 <col:26, col:34> 'char *' <BitCast>
|   | | |       |   `-ImplicitCastExpr 0x1c991d7ba10 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   | | |       |     `-DeclRefExpr 0x1c991d7b9d8 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|   | | |       `-BinaryOperator 0x1c991d7bb08 <col:46, col:52> 'unsigned long long' '*'
|   | | |         |-ImplicitCastExpr 0x1c991d7baf0 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   | | |         | `-ParenExpr 0x1c991d7ba98 <col:46, col:48> 'int'
|   | | |         |   `-IntegerLiteral 0x1c991d7ba70 <line:83:32> 'int' 0
|   | | |         `-ImplicitCastExpr 0x1c991d7bad8 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   | | |           `-DeclRefExpr 0x1c991d7bab8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   | | `-ImplicitCastExpr 0x1c991d7be38 <line:80:15, col:64> 'const void *' <BitCast>
|   | |   `-ParenExpr 0x1c991d7bdb8 <col:15, col:64> 'char *'
|   | |     `-UnaryOperator 0x1c991d7bda0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   | |       `-ArraySubscriptExpr 0x1c991d7bd80 <col:17, col:63> 'char' lvalue
|   | |         |-ParenExpr 0x1c991d7bbf8 <col:17, col:37> 'char *'
|   | |         | `-CStyleCastExpr 0x1c991d7bbd0 <col:18, col:26> 'char *' <BitCast>
|   | |         |   `-ImplicitCastExpr 0x1c991d7bbb8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |         |     `-DeclRefExpr 0x1c991d7bb80 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|   | |         `-BinaryOperator 0x1c991d7bd60 <col:39, col:53> 'unsigned long long' '*'
|   | |           |-ImplicitCastExpr 0x1c991d7bd48 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   | |           | `-ParenExpr 0x1c991d7bcf0 <col:39, col:49> 'int'
|   | |           |   `-BinaryOperator 0x1c991d7bcd0 <col:40, col:48> 'int' '+'
|   | |           |     |-BinaryOperator 0x1c991d7bc88 <col:40, col:44> 'int' '*'
|   | |           |     | |-IntegerLiteral 0x1c991d7bc18 <col:40> 'int' 3
|   | |           |     | `-ParenExpr 0x1c991d7bc68 <col:42, col:44> 'int'
|   | |           |     |   `-IntegerLiteral 0x1c991d7bc40 <line:83:38> 'int' 0
|   | |           |     `-IntegerLiteral 0x1c991d7bca8 <line:80:48> 'int' 2
|   | |           `-ImplicitCastExpr 0x1c991d7bd30 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   | |             `-DeclRefExpr 0x1c991d7bd10 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   | `-CallExpr 0x1c991d7c030 <line:85:9, col:31> 'void'
|   |   |-ImplicitCastExpr 0x1c991d7c018 <col:9> 'void (*)(void *)' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1c991d7be50 <col:9> 'void (*)(void *)' lvalue ParmVar 0x1c991d82880 'felem_one' 'void (*)(void *)'
|   |   `-ImplicitCastExpr 0x1c991d7c058 <line:77:23, col:63> 'void *' <BitCast>
|   |     `-ParenExpr 0x1c991d7bff8 <col:23, col:63> 'char *'
|   |       `-UnaryOperator 0x1c991d7bfe0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |         `-ArraySubscriptExpr 0x1c991d7bfc0 <col:25, col:62> 'char' lvalue
|   |           |-ParenExpr 0x1c991d7bee8 <col:25, col:44> 'char *'
|   |           | `-CStyleCastExpr 0x1c991d7bec0 <col:26, col:34> 'char *' <BitCast>
|   |           |   `-ImplicitCastExpr 0x1c991d7bea8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |           |     `-DeclRefExpr 0x1c991d7be70 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|   |           `-BinaryOperator 0x1c991d7bfa0 <col:46, col:52> 'unsigned long long' '*'
|   |             |-ImplicitCastExpr 0x1c991d7bf88 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |             | `-ParenExpr 0x1c991d7bf30 <col:46, col:48> 'int'
|   |             |   `-IntegerLiteral 0x1c991d7bf08 <line:85:29> 'int' 0
|   |             `-ImplicitCastExpr 0x1c991d7bf70 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |               `-DeclRefExpr 0x1c991d7bf50 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   |-ForStmt 0x1c991d89160 <line:86:5, line:91:5>
|   | |-BinaryOperator 0x1c991d7c0f8 <line:86:10, col:14> 'int' '='
|   | | |-DeclRefExpr 0x1c991d7c098 <col:10> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|   | | `-IntegerLiteral 0x1c991d7c0d0 <col:14> 'int' 1
|   | |-<<<NULL>>>
|   | |-BinaryOperator 0x1c991d882a8 <col:17, col:26> 'int' '<'
|   | | |-ImplicitCastExpr 0x1c991d88290 <col:17> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1c991d7c118 <col:17> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|   | | `-CStyleCastExpr 0x1c991d7c188 <col:21, col:26> 'int' <IntegralCast>
|   | |   `-ImplicitCastExpr 0x1c991d7c170 <col:26> 'size_t':'unsigned long long' <LValueToRValue> part_of_explicit_cast
|   | |     `-DeclRefExpr 0x1c991d7c138 <col:26> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d825d0 'num' 'size_t':'unsigned long long'
|   | |-UnaryOperator 0x1c991d882e8 <col:31, col:32> 'int' postfix '++'
|   | | `-DeclRefExpr 0x1c991d882c8 <col:31> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|   | `-CompoundStmt 0x1c991d89148 <col:36, line:91:5>
|   |   `-IfStmt 0x1c991d89120 <line:87:9, line:90:56> has_else
|   |     |-UnaryOperator 0x1c991d885e0 <line:87:13, col:32> 'int' prefix '!' cannot overflow
|   |     | `-CallExpr 0x1c991d885a0 <col:14, col:32> 'int'
|   |     |   |-ImplicitCastExpr 0x1c991d88588 <col:14> 'int (*)(const void *)' <LValueToRValue>
|   |     |   | `-DeclRefExpr 0x1c991d88300 <col:14> 'int (*)(const void *)' lvalue ParmVar 0x1c991d829c0 'felem_is_zero' 'int (*)(const void *)'
|   |     |   `-ImplicitCastExpr 0x1c991d885c8 <line:80:15, col:64> 'const void *' <BitCast>
|   |     |     `-ParenExpr 0x1c991d88568 <col:15, col:64> 'char *'
|   |     |       `-UnaryOperator 0x1c991d88550 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   |     |         `-ArraySubscriptExpr 0x1c991d88530 <col:17, col:63> 'char' lvalue
|   |     |           |-ParenExpr 0x1c991d88398 <col:17, col:37> 'char *'
|   |     |           | `-CStyleCastExpr 0x1c991d88370 <col:18, col:26> 'char *' <BitCast>
|   |     |           |   `-ImplicitCastExpr 0x1c991d88358 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     |           |     `-DeclRefExpr 0x1c991d88320 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|   |     |           `-BinaryOperator 0x1c991d88510 <col:39, col:53> 'unsigned long long' '*'
|   |     |             |-ImplicitCastExpr 0x1c991d884f8 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   |     |             | `-ParenExpr 0x1c991d884a0 <col:39, col:49> 'int'
|   |     |             |   `-BinaryOperator 0x1c991d88480 <col:40, col:48> 'int' '+'
|   |     |             |     |-BinaryOperator 0x1c991d88438 <col:40, col:44> 'int' '*'
|   |     |             |     | |-IntegerLiteral 0x1c991d883b8 <col:40> 'int' 3
|   |     |             |     | `-ImplicitCastExpr 0x1c991d88420 <col:42, col:44> 'int' <LValueToRValue>
|   |     |             |     |   `-ParenExpr 0x1c991d88400 <col:42, col:44> 'int' lvalue
|   |     |             |     |     `-DeclRefExpr 0x1c991d883e0 <line:87:30> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|   |     |             |     `-IntegerLiteral 0x1c991d88458 <line:80:48> 'int' 2
|   |     |             `-ImplicitCastExpr 0x1c991d884e0 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |               `-DeclRefExpr 0x1c991d884c0 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   |     |-CallExpr 0x1c991d88c50 <line:88:13, col:59> 'void'
|   |     | |-ImplicitCastExpr 0x1c991d88c38 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|   |     | | `-DeclRefExpr 0x1c991d885f8 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x1c991d82fe8 'felem_mul' 'void (*)(void *, const void *, const void *)'
|   |     | |-ImplicitCastExpr 0x1c991d88c88 <line:77:23, col:63> 'void *' <BitCast>
|   |     | | `-ParenExpr 0x1c991d887b0 <col:23, col:63> 'char *'
|   |     | |   `-UnaryOperator 0x1c991d88798 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |     | |     `-ArraySubscriptExpr 0x1c991d88778 <col:25, col:62> 'char' lvalue
|   |     | |       |-ParenExpr 0x1c991d88690 <col:25, col:44> 'char *'
|   |     | |       | `-CStyleCastExpr 0x1c991d88668 <col:26, col:34> 'char *' <BitCast>
|   |     | |       |   `-ImplicitCastExpr 0x1c991d88650 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     | |       |     `-DeclRefExpr 0x1c991d88618 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|   |     | |       `-BinaryOperator 0x1c991d88758 <col:46, col:52> 'unsigned long long' '*'
|   |     | |         |-ImplicitCastExpr 0x1c991d88740 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |     | |         | `-ImplicitCastExpr 0x1c991d88710 <col:46, col:48> 'int' <LValueToRValue>
|   |     | |         |   `-ParenExpr 0x1c991d886d0 <col:46, col:48> 'int' lvalue
|   |     | |         |     `-DeclRefExpr 0x1c991d886b0 <line:88:33> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|   |     | |         `-ImplicitCastExpr 0x1c991d88728 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |           `-DeclRefExpr 0x1c991d886f0 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   |     | |-ImplicitCastExpr 0x1c991d88ca0 <col:23, col:63> 'const void *' <BitCast>
|   |     | | `-ParenExpr 0x1c991d889b0 <col:23, col:63> 'char *'
|   |     | |   `-UnaryOperator 0x1c991d88998 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |     | |     `-ArraySubscriptExpr 0x1c991d88978 <col:25, col:62> 'char' lvalue
|   |     | |       |-ParenExpr 0x1c991d88848 <col:25, col:44> 'char *'
|   |     | |       | `-CStyleCastExpr 0x1c991d88820 <col:26, col:34> 'char *' <BitCast>
|   |     | |       |   `-ImplicitCastExpr 0x1c991d88808 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     | |       |     `-DeclRefExpr 0x1c991d887d0 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|   |     | |       `-BinaryOperator 0x1c991d88958 <col:46, col:52> 'unsigned long long' '*'
|   |     | |         |-ImplicitCastExpr 0x1c991d88940 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |     | |         | `-ParenExpr 0x1c991d888e8 <col:46, col:48> 'int'
|   |     | |         |   `-BinaryOperator 0x1c991d888c8 <line:88:47, col:51> 'int' '-'
|   |     | |         |     |-ImplicitCastExpr 0x1c991d888b0 <col:47> 'int' <LValueToRValue>
|   |     | |         |     | `-DeclRefExpr 0x1c991d88868 <col:47> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|   |     | |         |     `-IntegerLiteral 0x1c991d88888 <col:51> 'int' 1
|   |     | |         `-ImplicitCastExpr 0x1c991d88928 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |     | |           `-DeclRefExpr 0x1c991d88908 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   |     | `-ImplicitCastExpr 0x1c991d88cb8 <line:80:15, col:64> 'const void *' <BitCast>
|   |     |   `-ParenExpr 0x1c991d88c18 <col:15, col:64> 'char *'
|   |     |     `-UnaryOperator 0x1c991d88c00 <col:16, col:63> 'char *' prefix '&' cannot overflow
|   |     |       `-ArraySubscriptExpr 0x1c991d88be0 <col:17, col:63> 'char' lvalue
|   |     |         |-ParenExpr 0x1c991d88a48 <col:17, col:37> 'char *'
|   |     |         | `-CStyleCastExpr 0x1c991d88a20 <col:18, col:26> 'char *' <BitCast>
|   |     |         |   `-ImplicitCastExpr 0x1c991d88a08 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|   |     |         |     `-DeclRefExpr 0x1c991d889d0 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|   |     |         `-BinaryOperator 0x1c991d88bc0 <col:39, col:53> 'unsigned long long' '*'
|   |     |           |-ImplicitCastExpr 0x1c991d88ba8 <col:39, col:49> 'unsigned long long' <IntegralCast>
|   |     |           | `-ParenExpr 0x1c991d88b50 <col:39, col:49> 'int'
|   |     |           |   `-BinaryOperator 0x1c991d88b30 <col:40, col:48> 'int' '+'
|   |     |           |     |-BinaryOperator 0x1c991d88ae8 <col:40, col:44> 'int' '*'
|   |     |           |     | |-IntegerLiteral 0x1c991d88a68 <col:40> 'int' 3
|   |     |           |     | `-ImplicitCastExpr 0x1c991d88ad0 <col:42, col:44> 'int' <LValueToRValue>
|   |     |           |     |   `-ParenExpr 0x1c991d88ab0 <col:42, col:44> 'int' lvalue
|   |     |           |     |     `-DeclRefExpr 0x1c991d88a90 <line:88:57> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|   |     |           |     `-IntegerLiteral 0x1c991d88b08 <line:80:48> 'int' 2
|   |     |           `-ImplicitCastExpr 0x1c991d88b90 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|   |     |             `-DeclRefExpr 0x1c991d88b70 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   |     `-CallExpr 0x1c991d890c0 <line:90:13, col:56> 'void'
|   |       |-ImplicitCastExpr 0x1c991d890a8 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|   |       | `-DeclRefExpr 0x1c991d88cd0 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x1c991d82b98 'felem_assign' 'void (*)(void *, const void *)'
|   |       |-ImplicitCastExpr 0x1c991d890f0 <line:77:23, col:63> 'void *' <BitCast>
|   |       | `-ParenExpr 0x1c991d88e88 <col:23, col:63> 'char *'
|   |       |   `-UnaryOperator 0x1c991d88e70 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |       |     `-ArraySubscriptExpr 0x1c991d88e50 <col:25, col:62> 'char' lvalue
|   |       |       |-ParenExpr 0x1c991d88d68 <col:25, col:44> 'char *'
|   |       |       | `-CStyleCastExpr 0x1c991d88d40 <col:26, col:34> 'char *' <BitCast>
|   |       |       |   `-ImplicitCastExpr 0x1c991d88d28 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |       |       |     `-DeclRefExpr 0x1c991d88cf0 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|   |       |       `-BinaryOperator 0x1c991d88e30 <col:46, col:52> 'unsigned long long' '*'
|   |       |         |-ImplicitCastExpr 0x1c991d88e18 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |       |         | `-ImplicitCastExpr 0x1c991d88de8 <col:46, col:48> 'int' <LValueToRValue>
|   |       |         |   `-ParenExpr 0x1c991d88da8 <col:46, col:48> 'int' lvalue
|   |       |         |     `-DeclRefExpr 0x1c991d88d88 <line:90:36> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|   |       |         `-ImplicitCastExpr 0x1c991d88e00 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |       |           `-DeclRefExpr 0x1c991d88dc8 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   |       `-ImplicitCastExpr 0x1c991d89108 <col:23, col:63> 'const void *' <BitCast>
|   |         `-ParenExpr 0x1c991d89088 <col:23, col:63> 'char *'
|   |           `-UnaryOperator 0x1c991d89070 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |             `-ArraySubscriptExpr 0x1c991d89050 <col:25, col:62> 'char' lvalue
|   |               |-ParenExpr 0x1c991d88f20 <col:25, col:44> 'char *'
|   |               | `-CStyleCastExpr 0x1c991d88ef8 <col:26, col:34> 'char *' <BitCast>
|   |               |   `-ImplicitCastExpr 0x1c991d88ee0 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |               |     `-DeclRefExpr 0x1c991d88ea8 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|   |               `-BinaryOperator 0x1c991d89030 <col:46, col:52> 'unsigned long long' '*'
|   |                 |-ImplicitCastExpr 0x1c991d89018 <col:46, col:48> 'unsigned long long' <IntegralCast>
|   |                 | `-ParenExpr 0x1c991d88fc0 <col:46, col:48> 'int'
|   |                 |   `-BinaryOperator 0x1c991d88fa0 <line:90:50, col:54> 'int' '-'
|   |                 |     |-ImplicitCastExpr 0x1c991d88f88 <col:50> 'int' <LValueToRValue>
|   |                 |     | `-DeclRefExpr 0x1c991d88f40 <col:50> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|   |                 |     `-IntegerLiteral 0x1c991d88f60 <col:54> 'int' 1
|   |                 `-ImplicitCastExpr 0x1c991d89000 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |                   `-DeclRefExpr 0x1c991d88fe0 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   |-CallExpr 0x1c991d865d0 <line:97:5, col:53> 'void'
|   | |-ImplicitCastExpr 0x1c991d865b8 <col:5> 'void (*)(void *, const void *)' <LValueToRValue>
|   | | `-DeclRefExpr 0x1c991d89198 <col:5> 'void (*)(void *, const void *)' lvalue ParmVar 0x1c991d831c0 'felem_inv' 'void (*)(void *, const void *)'
|   | |-ImplicitCastExpr 0x1c991d86600 <line:77:23, col:63> 'void *' <BitCast>
|   | | `-ParenExpr 0x1c991d86398 <col:23, col:63> 'char *'
|   | |   `-UnaryOperator 0x1c991d86380 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   | |     `-ArraySubscriptExpr 0x1c991d86360 <col:25, col:62> 'char' lvalue
|   | |       |-ParenExpr 0x1c991d89230 <col:25, col:44> 'char *'
|   | |       | `-CStyleCastExpr 0x1c991d89208 <col:26, col:34> 'char *' <BitCast>
|   | |       |   `-ImplicitCastExpr 0x1c991d891f0 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   | |       |     `-DeclRefExpr 0x1c991d891b8 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|   | |       `-BinaryOperator 0x1c991d86340 <col:46, col:52> 'unsigned long long' '*'
|   | |         |-ParenExpr 0x1c991d862e8 <col:46, col:48> 'unsigned long long'
|   | |         | `-BinaryOperator 0x1c991d862c8 <line:97:25, col:31> 'unsigned long long' '-'
|   | |         |   |-ImplicitCastExpr 0x1c991d86298 <col:25> 'size_t':'unsigned long long' <LValueToRValue>
|   | |         |   | `-DeclRefExpr 0x1c991d89250 <col:25> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d825d0 'num' 'size_t':'unsigned long long'
|   | |         |   `-ImplicitCastExpr 0x1c991d862b0 <col:31> 'unsigned long long' <IntegralCast>
|   | |         |     `-IntegerLiteral 0x1c991d86270 <col:31> 'int' 1
|   | |         `-ImplicitCastExpr 0x1c991d86328 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   | |           `-DeclRefExpr 0x1c991d86308 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   | `-ImplicitCastExpr 0x1c991d86618 <col:23, col:63> 'const void *' <BitCast>
|   |   `-ParenExpr 0x1c991d86598 <col:23, col:63> 'char *'
|   |     `-UnaryOperator 0x1c991d86580 <col:24, col:62> 'char *' prefix '&' cannot overflow
|   |       `-ArraySubscriptExpr 0x1c991d86560 <col:25, col:62> 'char' lvalue
|   |         |-ParenExpr 0x1c991d86430 <col:25, col:44> 'char *'
|   |         | `-CStyleCastExpr 0x1c991d86408 <col:26, col:34> 'char *' <BitCast>
|   |         |   `-ImplicitCastExpr 0x1c991d863f0 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|   |         |     `-DeclRefExpr 0x1c991d863b8 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|   |         `-BinaryOperator 0x1c991d86540 <col:46, col:52> 'unsigned long long' '*'
|   |           |-ParenExpr 0x1c991d864e8 <col:46, col:48> 'unsigned long long'
|   |           | `-BinaryOperator 0x1c991d864c8 <line:97:45, col:51> 'unsigned long long' '-'
|   |           |   |-ImplicitCastExpr 0x1c991d86498 <col:45> 'size_t':'unsigned long long' <LValueToRValue>
|   |           |   | `-DeclRefExpr 0x1c991d86450 <col:45> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d825d0 'num' 'size_t':'unsigned long long'
|   |           |   `-ImplicitCastExpr 0x1c991d864b0 <col:51> 'unsigned long long' <IntegralCast>
|   |           |     `-IntegerLiteral 0x1c991d86470 <col:51> 'int' 1
|   |           `-ImplicitCastExpr 0x1c991d86528 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|   |             `-DeclRefExpr 0x1c991d86508 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|   `-ForStmt 0x1c991d8aa90 <line:98:5, line:133:5>
|     |-BinaryOperator 0x1c991d86700 <line:98:10, col:20> 'int' '='
|     | |-DeclRefExpr 0x1c991d86630 <col:10> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|     | `-ImplicitCastExpr 0x1c991d866e8 <col:14, col:20> 'int' <IntegralCast>
|     |   `-BinaryOperator 0x1c991d866c8 <col:14, col:20> 'unsigned long long' '-'
|     |     |-ImplicitCastExpr 0x1c991d86698 <col:14> 'size_t':'unsigned long long' <LValueToRValue>
|     |     | `-DeclRefExpr 0x1c991d86650 <col:14> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d825d0 'num' 'size_t':'unsigned long long'
|     |     `-ImplicitCastExpr 0x1c991d866b0 <col:20> 'unsigned long long' <IntegralCast>
|     |       `-IntegerLiteral 0x1c991d86670 <col:20> 'int' 1
|     |-<<<NULL>>>
|     |-BinaryOperator 0x1c991d86780 <col:23, col:28> 'int' '>='
|     | |-ImplicitCastExpr 0x1c991d86768 <col:23> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x1c991d86720 <col:23> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|     | `-IntegerLiteral 0x1c991d86740 <col:28> 'int' 0
|     |-UnaryOperator 0x1c991d867c0 <col:31, col:32> 'int' postfix '--'
|     | `-DeclRefExpr 0x1c991d867a0 <col:31> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|     `-CompoundStmt 0x1c991d8aa70 <col:36, line:133:5>
|       |-IfStmt 0x1c991d87248 <line:99:9, line:107:54> has_else
|       | |-BinaryOperator 0x1c991d86838 <line:99:13, col:17> 'int' '>'
|       | | |-ImplicitCastExpr 0x1c991d86820 <col:13> 'int' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1c991d867d8 <col:13> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|       | | `-IntegerLiteral 0x1c991d867f8 <col:17> 'int' 0
|       | |-CallExpr 0x1c991d86de8 <line:105:13, col:69> 'void'
|       | | |-ImplicitCastExpr 0x1c991d86dd0 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|       | | | `-DeclRefExpr 0x1c991d86858 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x1c991d82fe8 'felem_mul' 'void (*)(void *, const void *, const void *)'
|       | | |-ImplicitCastExpr 0x1c991d86e20 <line:77:23, col:63> 'void *' <BitCast>
|       | | | `-ParenExpr 0x1c991d869f8 <col:23, col:63> 'char *'
|       | | |   `-UnaryOperator 0x1c991d869e0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       | | |     `-ArraySubscriptExpr 0x1c991d869c0 <col:25, col:62> 'char' lvalue
|       | | |       |-ParenExpr 0x1c991d868f0 <col:25, col:44> 'char *'
|       | | |       | `-CStyleCastExpr 0x1c991d868c8 <col:26, col:34> 'char *' <BitCast>
|       | | |       |   `-ImplicitCastExpr 0x1c991d868b0 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       | | |       |     `-DeclRefExpr 0x1c991d86878 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|       | | |       `-BinaryOperator 0x1c991d869a0 <col:46, col:52> 'unsigned long long' '*'
|       | | |         |-ImplicitCastExpr 0x1c991d86970 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|       | | |         | `-ParenExpr 0x1c991d86930 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|       | | |         |   `-DeclRefExpr 0x1c991d86910 <line:105:33> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d825d0 'num' 'size_t':'unsigned long long'
|       | | |         `-ImplicitCastExpr 0x1c991d86988 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       | | |           `-DeclRefExpr 0x1c991d86950 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|       | | |-ImplicitCastExpr 0x1c991d86e38 <col:23, col:63> 'const void *' <BitCast>
|       | | | `-ParenExpr 0x1c991d86bf8 <col:23, col:63> 'char *'
|       | | |   `-UnaryOperator 0x1c991d86be0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       | | |     `-ArraySubscriptExpr 0x1c991d86bc0 <col:25, col:62> 'char' lvalue
|       | | |       |-ParenExpr 0x1c991d86a90 <col:25, col:44> 'char *'
|       | | |       | `-CStyleCastExpr 0x1c991d86a68 <col:26, col:34> 'char *' <BitCast>
|       | | |       |   `-ImplicitCastExpr 0x1c991d86a50 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       | | |       |     `-DeclRefExpr 0x1c991d86a18 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|       | | |       `-BinaryOperator 0x1c991d86ba0 <col:46, col:52> 'unsigned long long' '*'
|       | | |         |-ImplicitCastExpr 0x1c991d86b88 <col:46, col:48> 'unsigned long long' <IntegralCast>
|       | | |         | `-ParenExpr 0x1c991d86b30 <col:46, col:48> 'int'
|       | | |         |   `-BinaryOperator 0x1c991d86b10 <line:105:49, col:53> 'int' '-'
|       | | |         |     |-ImplicitCastExpr 0x1c991d86af8 <col:49> 'int' <LValueToRValue>
|       | | |         |     | `-DeclRefExpr 0x1c991d86ab0 <col:49> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|       | | |         |     `-IntegerLiteral 0x1c991d86ad0 <col:53> 'int' 1
|       | | |         `-ImplicitCastExpr 0x1c991d86b70 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       | | |           `-DeclRefExpr 0x1c991d86b50 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|       | | `-ImplicitCastExpr 0x1c991d86e50 <col:23, col:63> 'const void *' <BitCast>
|       | |   `-ParenExpr 0x1c991d86db0 <col:23, col:63> 'char *'
|       | |     `-UnaryOperator 0x1c991d86d98 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       | |       `-ArraySubscriptExpr 0x1c991d86d78 <col:25, col:62> 'char' lvalue
|       | |         |-ParenExpr 0x1c991d86c90 <col:25, col:44> 'char *'
|       | |         | `-CStyleCastExpr 0x1c991d86c68 <col:26, col:34> 'char *' <BitCast>
|       | |         |   `-ImplicitCastExpr 0x1c991d86c50 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       | |         |     `-DeclRefExpr 0x1c991d86c18 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|       | |         `-BinaryOperator 0x1c991d86d58 <col:46, col:52> 'unsigned long long' '*'
|       | |           |-ImplicitCastExpr 0x1c991d86d40 <col:46, col:48> 'unsigned long long' <IntegralCast>
|       | |           | `-ImplicitCastExpr 0x1c991d86d10 <col:46, col:48> 'int' <LValueToRValue>
|       | |           |   `-ParenExpr 0x1c991d86cd0 <col:46, col:48> 'int' lvalue
|       | |           |     `-DeclRefExpr 0x1c991d86cb0 <line:105:67> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|       | |           `-ImplicitCastExpr 0x1c991d86d28 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       | |             `-DeclRefExpr 0x1c991d86cf0 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|       | `-CallExpr 0x1c991d871e8 <line:107:13, col:54> 'void'
|       |   |-ImplicitCastExpr 0x1c991d871d0 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|       |   | `-DeclRefExpr 0x1c991d86e68 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x1c991d82b98 'felem_assign' 'void (*)(void *, const void *)'
|       |   |-ImplicitCastExpr 0x1c991d87218 <line:77:23, col:63> 'void *' <BitCast>
|       |   | `-ParenExpr 0x1c991d87008 <col:23, col:63> 'char *'
|       |   |   `-UnaryOperator 0x1c991d86ff0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       |   |     `-ArraySubscriptExpr 0x1c991d86fd0 <col:25, col:62> 'char' lvalue
|       |   |       |-ParenExpr 0x1c991d86f00 <col:25, col:44> 'char *'
|       |   |       | `-CStyleCastExpr 0x1c991d86ed8 <col:26, col:34> 'char *' <BitCast>
|       |   |       |   `-ImplicitCastExpr 0x1c991d86ec0 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       |   |       |     `-DeclRefExpr 0x1c991d86e88 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|       |   |       `-BinaryOperator 0x1c991d86fb0 <col:46, col:52> 'unsigned long long' '*'
|       |   |         |-ImplicitCastExpr 0x1c991d86f80 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|       |   |         | `-ParenExpr 0x1c991d86f40 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|       |   |         |   `-DeclRefExpr 0x1c991d86f20 <line:107:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d825d0 'num' 'size_t':'unsigned long long'
|       |   |         `-ImplicitCastExpr 0x1c991d86f98 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       |   |           `-DeclRefExpr 0x1c991d86f60 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|       |   `-ImplicitCastExpr 0x1c991d87230 <col:23, col:63> 'const void *' <BitCast>
|       |     `-ParenExpr 0x1c991d871b0 <col:23, col:63> 'char *'
|       |       `-UnaryOperator 0x1c991d87198 <col:24, col:62> 'char *' prefix '&' cannot overflow
|       |         `-ArraySubscriptExpr 0x1c991d87178 <col:25, col:62> 'char' lvalue
|       |           |-ParenExpr 0x1c991d870a0 <col:25, col:44> 'char *'
|       |           | `-CStyleCastExpr 0x1c991d87078 <col:26, col:34> 'char *' <BitCast>
|       |           |   `-ImplicitCastExpr 0x1c991d87060 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|       |           |     `-DeclRefExpr 0x1c991d87028 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|       |           `-BinaryOperator 0x1c991d87158 <col:46, col:52> 'unsigned long long' '*'
|       |             |-ImplicitCastExpr 0x1c991d87140 <col:46, col:48> 'unsigned long long' <IntegralCast>
|       |             | `-ParenExpr 0x1c991d870e8 <col:46, col:48> 'int'
|       |             |   `-IntegerLiteral 0x1c991d870c0 <line:107:52> 'int' 0
|       |             `-ImplicitCastExpr 0x1c991d87128 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|       |               `-DeclRefExpr 0x1c991d87108 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|       `-IfStmt 0x1c991d8aa48 <line:109:9, line:132:9> has_else
|         |-UnaryOperator 0x1c991d87560 <line:109:13, col:32> 'int' prefix '!' cannot overflow
|         | `-CallExpr 0x1c991d87520 <col:14, col:32> 'int'
|         |   |-ImplicitCastExpr 0x1c991d87508 <col:14> 'int (*)(const void *)' <LValueToRValue>
|         |   | `-DeclRefExpr 0x1c991d87280 <col:14> 'int (*)(const void *)' lvalue ParmVar 0x1c991d829c0 'felem_is_zero' 'int (*)(const void *)'
|         |   `-ImplicitCastExpr 0x1c991d87548 <line:80:15, col:64> 'const void *' <BitCast>
|         |     `-ParenExpr 0x1c991d874e8 <col:15, col:64> 'char *'
|         |       `-UnaryOperator 0x1c991d874d0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         |         `-ArraySubscriptExpr 0x1c991d874b0 <col:17, col:63> 'char' lvalue
|         |           |-ParenExpr 0x1c991d87318 <col:17, col:37> 'char *'
|         |           | `-CStyleCastExpr 0x1c991d872f0 <col:18, col:26> 'char *' <BitCast>
|         |           |   `-ImplicitCastExpr 0x1c991d872d8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         |           |     `-DeclRefExpr 0x1c991d872a0 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         |           `-BinaryOperator 0x1c991d87490 <col:39, col:53> 'unsigned long long' '*'
|         |             |-ImplicitCastExpr 0x1c991d87478 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         |             | `-ParenExpr 0x1c991d87420 <col:39, col:49> 'int'
|         |             |   `-BinaryOperator 0x1c991d87400 <col:40, col:48> 'int' '+'
|         |             |     |-BinaryOperator 0x1c991d873b8 <col:40, col:44> 'int' '*'
|         |             |     | |-IntegerLiteral 0x1c991d87338 <col:40> 'int' 3
|         |             |     | `-ImplicitCastExpr 0x1c991d873a0 <col:42, col:44> 'int' <LValueToRValue>
|         |             |     |   `-ParenExpr 0x1c991d87380 <col:42, col:44> 'int' lvalue
|         |             |     |     `-DeclRefExpr 0x1c991d87360 <line:109:30> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         |             |     `-IntegerLiteral 0x1c991d873d8 <line:80:48> 'int' 2
|         |             `-ImplicitCastExpr 0x1c991d87460 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         |               `-DeclRefExpr 0x1c991d87440 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         |-CompoundStmt 0x1c991d8a4f8 <line:109:35, line:126:9>
|         | |-IfStmt 0x1c991d87cd0 <line:110:13, line:114:63>
|         | | |-BinaryOperator 0x1c991d875d8 <line:110:17, col:21> 'int' '>'
|         | | | |-ImplicitCastExpr 0x1c991d875c0 <col:17> 'int' <LValueToRValue>
|         | | | | `-DeclRefExpr 0x1c991d87578 <col:17> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | | | `-IntegerLiteral 0x1c991d87598 <col:21> 'int' 0
|         | | `-CallExpr 0x1c991d87c50 <line:114:17, col:63> 'void'
|         | |   |-ImplicitCastExpr 0x1c991d87c38 <col:17> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | |   | `-DeclRefExpr 0x1c991d875f8 <col:17> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x1c991d82fe8 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | |   |-ImplicitCastExpr 0x1c991d87c88 <line:77:23, col:63> 'void *' <BitCast>
|         | |   | `-ParenExpr 0x1c991d877f8 <col:23, col:63> 'char *'
|         | |   |   `-UnaryOperator 0x1c991d877e0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |   |     `-ArraySubscriptExpr 0x1c991d877c0 <col:25, col:62> 'char' lvalue
|         | |   |       |-ParenExpr 0x1c991d87690 <col:25, col:44> 'char *'
|         | |   |       | `-CStyleCastExpr 0x1c991d87668 <col:26, col:34> 'char *' <BitCast>
|         | |   |       |   `-ImplicitCastExpr 0x1c991d87650 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |   |       |     `-DeclRefExpr 0x1c991d87618 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|         | |   |       `-BinaryOperator 0x1c991d877a0 <col:46, col:52> 'unsigned long long' '*'
|         | |   |         |-ImplicitCastExpr 0x1c991d87788 <col:46, col:48> 'unsigned long long' <IntegralCast>
|         | |   |         | `-ParenExpr 0x1c991d87730 <col:46, col:48> 'int'
|         | |   |         |   `-BinaryOperator 0x1c991d87710 <line:114:37, col:41> 'int' '-'
|         | |   |         |     |-ImplicitCastExpr 0x1c991d876f8 <col:37> 'int' <LValueToRValue>
|         | |   |         |     | `-DeclRefExpr 0x1c991d876b0 <col:37> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | |   |         |     `-IntegerLiteral 0x1c991d876d0 <col:41> 'int' 1
|         | |   |         `-ImplicitCastExpr 0x1c991d87770 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |   |           `-DeclRefExpr 0x1c991d87750 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | |   |-ImplicitCastExpr 0x1c991d87ca0 <col:23, col:63> 'const void *' <BitCast>
|         | |   | `-ParenExpr 0x1c991d879b0 <col:23, col:63> 'char *'
|         | |   |   `-UnaryOperator 0x1c991d87998 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |   |     `-ArraySubscriptExpr 0x1c991d87978 <col:25, col:62> 'char' lvalue
|         | |   |       |-ParenExpr 0x1c991d87890 <col:25, col:44> 'char *'
|         | |   |       | `-CStyleCastExpr 0x1c991d87868 <col:26, col:34> 'char *' <BitCast>
|         | |   |       |   `-ImplicitCastExpr 0x1c991d87850 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |   |       |     `-DeclRefExpr 0x1c991d87818 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|         | |   |       `-BinaryOperator 0x1c991d87958 <col:46, col:52> 'unsigned long long' '*'
|         | |   |         |-ImplicitCastExpr 0x1c991d87940 <col:46, col:48> 'unsigned long long' <IntegralCast>
|         | |   |         | `-ImplicitCastExpr 0x1c991d87910 <col:46, col:48> 'int' <LValueToRValue>
|         | |   |         |   `-ParenExpr 0x1c991d878d0 <col:46, col:48> 'int' lvalue
|         | |   |         |     `-DeclRefExpr 0x1c991d878b0 <line:114:55> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | |   |         `-ImplicitCastExpr 0x1c991d87928 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |   |           `-DeclRefExpr 0x1c991d878f0 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | |   `-ImplicitCastExpr 0x1c991d87cb8 <line:80:15, col:64> 'const void *' <BitCast>
|         | |     `-ParenExpr 0x1c991d87c18 <col:15, col:64> 'char *'
|         | |       `-UnaryOperator 0x1c991d87c00 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |         `-ArraySubscriptExpr 0x1c991d87be0 <col:17, col:63> 'char' lvalue
|         | |           |-ParenExpr 0x1c991d87a48 <col:17, col:37> 'char *'
|         | |           | `-CStyleCastExpr 0x1c991d87a20 <col:18, col:26> 'char *' <BitCast>
|         | |           |   `-ImplicitCastExpr 0x1c991d87a08 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |           |     `-DeclRefExpr 0x1c991d879d0 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | |           `-BinaryOperator 0x1c991d87bc0 <col:39, col:53> 'unsigned long long' '*'
|         | |             |-ImplicitCastExpr 0x1c991d87ba8 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |             | `-ParenExpr 0x1c991d87b50 <col:39, col:49> 'int'
|         | |             |   `-BinaryOperator 0x1c991d87b30 <col:40, col:48> 'int' '+'
|         | |             |     |-BinaryOperator 0x1c991d87ae8 <col:40, col:44> 'int' '*'
|         | |             |     | |-IntegerLiteral 0x1c991d87a68 <col:40> 'int' 3
|         | |             |     | `-ImplicitCastExpr 0x1c991d87ad0 <col:42, col:44> 'int' <LValueToRValue>
|         | |             |     |   `-ParenExpr 0x1c991d87ab0 <col:42, col:44> 'int' lvalue
|         | |             |     |     `-DeclRefExpr 0x1c991d87a90 <line:114:61> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | |             |     `-IntegerLiteral 0x1c991d87b08 <line:80:48> 'int' 2
|         | |             `-ImplicitCastExpr 0x1c991d87b90 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |               `-DeclRefExpr 0x1c991d87b70 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x1c991d88128 <line:119:13, col:46> 'void'
|         | | |-ImplicitCastExpr 0x1c991d88110 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x1c991d87ce8 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x1c991d82d70 'felem_square' 'void (*)(void *, const void *)'
|         | | |-ImplicitCastExpr 0x1c991d88158 <line:80:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x1c991d87f50 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x1c991d87f38 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x1c991d87f18 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x1c991d87d80 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x1c991d87d58 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x1c991d87d40 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x1c991d87d08 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x1c991d87ef8 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x1c991d87ee0 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x1c991d87e88 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x1c991d87e68 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x1c991d87e20 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x1c991d87da0 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x1c991d87e08 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x1c991d87de8 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x1c991d87dc8 <line:119:28> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x1c991d87e40 <line:80:48> 'int' 2
|         | | |         `-ImplicitCastExpr 0x1c991d87ec8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x1c991d87ea8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x1c991d88170 <line:77:23, col:63> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x1c991d880f0 <col:23, col:63> 'char *'
|         | |     `-UnaryOperator 0x1c991d880d8 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x1c991d880b8 <col:25, col:62> 'char' lvalue
|         | |         |-ParenExpr 0x1c991d87fe8 <col:25, col:44> 'char *'
|         | |         | `-CStyleCastExpr 0x1c991d87fc0 <col:26, col:34> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x1c991d87fa8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x1c991d87f70 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|         | |         `-BinaryOperator 0x1c991d88098 <col:46, col:52> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x1c991d88068 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|         | |           | `-ParenExpr 0x1c991d88028 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|         | |           |   `-DeclRefExpr 0x1c991d88008 <line:119:42> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d825d0 'num' 'size_t':'unsigned long long'
|         | |           `-ImplicitCastExpr 0x1c991d88080 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x1c991d88048 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x1c991d83800 <line:120:13, col:39> 'void'
|         | | |-ImplicitCastExpr 0x1c991d837e8 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x1c991d88188 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x1c991d82fe8 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | | |-ImplicitCastExpr 0x1c991d83838 <line:78:15, col:58> 'void *' <BitCast>
|         | | | `-ParenExpr 0x1c991d83360 <col:15, col:58> 'char *'
|         | | |   `-UnaryOperator 0x1c991d83348 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x1c991d83328 <col:17, col:57> 'char' lvalue
|         | | |       |-ParenExpr 0x1c991d88220 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x1c991d881f8 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x1c991d881e0 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x1c991d881a8 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x1c991d83308 <col:39, col:47> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x1c991d832f0 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | | |         | `-BinaryOperator 0x1c991d83298 <col:39, col:43> 'int' '*'
|         | | |         |   |-IntegerLiteral 0x1c991d88240 <col:39> 'int' 3
|         | | |         |   `-ImplicitCastExpr 0x1c991d83280 <col:41, col:43> 'int' <LValueToRValue>
|         | | |         |     `-ParenExpr 0x1c991d83260 <col:41, col:43> 'int' lvalue
|         | | |         |       `-DeclRefExpr 0x1c991d83240 <line:120:25> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | | |         `-ImplicitCastExpr 0x1c991d832d8 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x1c991d832b8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | | |-ImplicitCastExpr 0x1c991d83850 <col:15, col:58> 'const void *' <BitCast>
|         | | | `-ParenExpr 0x1c991d83560 <col:15, col:58> 'char *'
|         | | |   `-UnaryOperator 0x1c991d83548 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x1c991d83528 <col:17, col:57> 'char' lvalue
|         | | |       |-ParenExpr 0x1c991d833f8 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x1c991d833d0 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x1c991d833b8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x1c991d83380 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x1c991d83508 <col:39, col:47> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x1c991d834f0 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | | |         | `-BinaryOperator 0x1c991d83498 <col:39, col:43> 'int' '*'
|         | | |         |   |-IntegerLiteral 0x1c991d83418 <col:39> 'int' 3
|         | | |         |   `-ImplicitCastExpr 0x1c991d83480 <col:41, col:43> 'int' <LValueToRValue>
|         | | |         |     `-ParenExpr 0x1c991d83460 <col:41, col:43> 'int' lvalue
|         | | |         |       `-DeclRefExpr 0x1c991d83440 <line:120:31> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | | |         `-ImplicitCastExpr 0x1c991d834d8 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x1c991d834b8 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x1c991d83868 <line:80:15, col:64> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x1c991d837c8 <col:15, col:64> 'char *'
|         | |     `-UnaryOperator 0x1c991d837b0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x1c991d83790 <col:17, col:63> 'char' lvalue
|         | |         |-ParenExpr 0x1c991d835f8 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x1c991d835d0 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x1c991d835b8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x1c991d83580 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | |         `-BinaryOperator 0x1c991d83770 <col:39, col:53> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x1c991d83758 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |           | `-ParenExpr 0x1c991d83700 <col:39, col:49> 'int'
|         | |           |   `-BinaryOperator 0x1c991d836e0 <col:40, col:48> 'int' '+'
|         | |           |     |-BinaryOperator 0x1c991d83698 <col:40, col:44> 'int' '*'
|         | |           |     | |-IntegerLiteral 0x1c991d83618 <col:40> 'int' 3
|         | |           |     | `-ImplicitCastExpr 0x1c991d83680 <col:42, col:44> 'int' <LValueToRValue>
|         | |           |     |   `-ParenExpr 0x1c991d83660 <col:42, col:44> 'int' lvalue
|         | |           |     |     `-DeclRefExpr 0x1c991d83640 <line:120:37> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | |           |     `-IntegerLiteral 0x1c991d836b8 <line:80:48> 'int' 2
|         | |           `-ImplicitCastExpr 0x1c991d83740 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x1c991d83720 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x1c991d83f28 <line:121:13, col:49> 'void'
|         | | |-ImplicitCastExpr 0x1c991d83f10 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x1c991d83880 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x1c991d82fe8 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | | |-ImplicitCastExpr 0x1c991d83f60 <line:80:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x1c991d83ae8 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x1c991d83ad0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x1c991d83ab0 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x1c991d83918 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x1c991d838f0 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x1c991d838d8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x1c991d838a0 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x1c991d83a90 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x1c991d83a78 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x1c991d83a20 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x1c991d83a00 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x1c991d839b8 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x1c991d83938 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x1c991d839a0 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x1c991d83980 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x1c991d83960 <line:121:25> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x1c991d839d8 <line:80:48> 'int' 2
|         | | |         `-ImplicitCastExpr 0x1c991d83a60 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x1c991d83a40 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | | |-ImplicitCastExpr 0x1c991d83f78 <col:15, col:64> 'const void *' <BitCast>
|         | | | `-ParenExpr 0x1c991d83d50 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x1c991d83d38 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x1c991d83d18 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x1c991d83b80 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x1c991d83b58 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x1c991d83b40 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x1c991d83b08 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x1c991d83cf8 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x1c991d83ce0 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x1c991d83c88 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x1c991d83c68 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x1c991d83c20 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x1c991d83ba0 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x1c991d83c08 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x1c991d83be8 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x1c991d83bc8 <line:121:31> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x1c991d83c40 <line:80:48> 'int' 2
|         | | |         `-ImplicitCastExpr 0x1c991d83cc8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x1c991d83ca8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x1c991d83f90 <line:77:23, col:63> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x1c991d83ef0 <col:23, col:63> 'char *'
|         | |     `-UnaryOperator 0x1c991d83ed8 <col:24, col:62> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x1c991d83eb8 <col:25, col:62> 'char' lvalue
|         | |         |-ParenExpr 0x1c991d83de8 <col:25, col:44> 'char *'
|         | |         | `-CStyleCastExpr 0x1c991d83dc0 <col:26, col:34> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x1c991d83da8 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x1c991d83d70 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|         | |         `-BinaryOperator 0x1c991d83e98 <col:46, col:52> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x1c991d83e68 <col:46, col:48> 'size_t':'unsigned long long' <LValueToRValue>
|         | |           | `-ParenExpr 0x1c991d83e28 <col:46, col:48> 'size_t':'unsigned long long' lvalue
|         | |           |   `-DeclRefExpr 0x1c991d83e08 <line:121:45> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d825d0 'num' 'size_t':'unsigned long long'
|         | |           `-ImplicitCastExpr 0x1c991d83e80 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x1c991d83e48 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x1c991d89788 <line:122:13, col:39> 'void'
|         | | |-ImplicitCastExpr 0x1c991d89770 <col:13> 'void (*)(void *, const void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x1c991d83fa8 <col:13> 'void (*)(void *, const void *, const void *)' lvalue ParmVar 0x1c991d82fe8 'felem_mul' 'void (*)(void *, const void *, const void *)'
|         | | |-ImplicitCastExpr 0x1c991d897c0 <line:79:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x1c991d84210 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x1c991d841f8 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x1c991d841d8 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x1c991d84040 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x1c991d84018 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x1c991d84000 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x1c991d83fc8 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x1c991d841b8 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x1c991d841a0 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x1c991d84148 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x1c991d84128 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x1c991d840e0 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x1c991d84060 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x1c991d840c8 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x1c991d840a8 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x1c991d84088 <line:122:25> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x1c991d84100 <line:79:48> 'int' 1
|         | | |         `-ImplicitCastExpr 0x1c991d84188 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x1c991d84168 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | | |-ImplicitCastExpr 0x1c991d897d8 <col:15, col:64> 'const void *' <BitCast>
|         | | | `-ParenExpr 0x1c991d894e8 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x1c991d894d0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x1c991d894b0 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x1c991d89318 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x1c991d892f0 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x1c991d892d8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x1c991d892a0 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x1c991d89490 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x1c991d89478 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x1c991d89420 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x1c991d89400 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x1c991d893b8 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x1c991d89338 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x1c991d893a0 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x1c991d89380 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x1c991d89360 <line:122:31> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x1c991d893d8 <line:79:48> 'int' 1
|         | | |         `-ImplicitCastExpr 0x1c991d89460 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x1c991d89440 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x1c991d897f0 <line:80:15, col:64> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x1c991d89750 <col:15, col:64> 'char *'
|         | |     `-UnaryOperator 0x1c991d89738 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x1c991d89718 <col:17, col:63> 'char' lvalue
|         | |         |-ParenExpr 0x1c991d89580 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x1c991d89558 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x1c991d89540 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x1c991d89508 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | |         `-BinaryOperator 0x1c991d896f8 <col:39, col:53> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x1c991d896e0 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |           | `-ParenExpr 0x1c991d89688 <col:39, col:49> 'int'
|         | |           |   `-BinaryOperator 0x1c991d89668 <col:40, col:48> 'int' '+'
|         | |           |     |-BinaryOperator 0x1c991d89620 <col:40, col:44> 'int' '*'
|         | |           |     | |-IntegerLiteral 0x1c991d895a0 <col:40> 'int' 3
|         | |           |     | `-ImplicitCastExpr 0x1c991d89608 <col:42, col:44> 'int' <LValueToRValue>
|         | |           |     |   `-ParenExpr 0x1c991d895e8 <col:42, col:44> 'int' lvalue
|         | |           |     |     `-DeclRefExpr 0x1c991d895c8 <line:122:37> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | |           |     `-IntegerLiteral 0x1c991d89640 <line:80:48> 'int' 2
|         | |           `-ImplicitCastExpr 0x1c991d896c8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x1c991d896a8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x1c991d89c40 <line:123:13, col:38> 'void'
|         | | |-ImplicitCastExpr 0x1c991d89c28 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x1c991d89808 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x1c991d7b330 'felem_contract' 'void (*)(void *, const void *)'
|         | | |-ImplicitCastExpr 0x1c991d89c70 <line:78:15, col:58> 'void *' <BitCast>
|         | | | `-ParenExpr 0x1c991d89a08 <col:15, col:58> 'char *'
|         | | |   `-UnaryOperator 0x1c991d899f0 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x1c991d899d0 <col:17, col:57> 'char' lvalue
|         | | |       |-ParenExpr 0x1c991d898a0 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x1c991d89878 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x1c991d89860 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x1c991d89828 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x1c991d899b0 <col:39, col:47> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x1c991d89998 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | | |         | `-BinaryOperator 0x1c991d89940 <col:39, col:43> 'int' '*'
|         | | |         |   |-IntegerLiteral 0x1c991d898c0 <col:39> 'int' 3
|         | | |         |   `-ImplicitCastExpr 0x1c991d89928 <col:41, col:43> 'int' <LValueToRValue>
|         | | |         |     `-ParenExpr 0x1c991d89908 <col:41, col:43> 'int' lvalue
|         | | |         |       `-DeclRefExpr 0x1c991d898e8 <line:123:30> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | | |         `-ImplicitCastExpr 0x1c991d89980 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x1c991d89960 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x1c991d89c88 <col:15, col:58> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x1c991d89c08 <col:15, col:58> 'char *'
|         | |     `-UnaryOperator 0x1c991d89bf0 <col:16, col:57> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x1c991d89bd0 <col:17, col:57> 'char' lvalue
|         | |         |-ParenExpr 0x1c991d89aa0 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x1c991d89a78 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x1c991d89a60 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x1c991d89a28 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | |         `-BinaryOperator 0x1c991d89bb0 <col:39, col:47> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x1c991d89b98 <col:39, col:43> 'unsigned long long' <IntegralCast>
|         | |           | `-BinaryOperator 0x1c991d89b40 <col:39, col:43> 'int' '*'
|         | |           |   |-IntegerLiteral 0x1c991d89ac0 <col:39> 'int' 3
|         | |           |   `-ImplicitCastExpr 0x1c991d89b28 <col:41, col:43> 'int' <LValueToRValue>
|         | |           |     `-ParenExpr 0x1c991d89b08 <col:41, col:43> 'int' lvalue
|         | |           |       `-DeclRefExpr 0x1c991d89ae8 <line:123:36> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | |           `-ImplicitCastExpr 0x1c991d89b80 <line:78:47> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x1c991d89b60 <col:47> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | |-CallExpr 0x1c991d8a1a8 <line:124:13, col:38> 'void'
|         | | |-ImplicitCastExpr 0x1c991d8a190 <col:13> 'void (*)(void *, const void *)' <LValueToRValue>
|         | | | `-DeclRefExpr 0x1c991d89ca0 <col:13> 'void (*)(void *, const void *)' lvalue ParmVar 0x1c991d7b330 'felem_contract' 'void (*)(void *, const void *)'
|         | | |-ImplicitCastExpr 0x1c991d8a1d8 <line:79:15, col:64> 'void *' <BitCast>
|         | | | `-ParenExpr 0x1c991d89f08 <col:15, col:64> 'char *'
|         | | |   `-UnaryOperator 0x1c991d89ef0 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | | |     `-ArraySubscriptExpr 0x1c991d89ed0 <col:17, col:63> 'char' lvalue
|         | | |       |-ParenExpr 0x1c991d89d38 <col:17, col:37> 'char *'
|         | | |       | `-CStyleCastExpr 0x1c991d89d10 <col:18, col:26> 'char *' <BitCast>
|         | | |       |   `-ImplicitCastExpr 0x1c991d89cf8 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | | |       |     `-DeclRefExpr 0x1c991d89cc0 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | | |       `-BinaryOperator 0x1c991d89eb0 <col:39, col:53> 'unsigned long long' '*'
|         | | |         |-ImplicitCastExpr 0x1c991d89e98 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | | |         | `-ParenExpr 0x1c991d89e40 <col:39, col:49> 'int'
|         | | |         |   `-BinaryOperator 0x1c991d89e20 <col:40, col:48> 'int' '+'
|         | | |         |     |-BinaryOperator 0x1c991d89dd8 <col:40, col:44> 'int' '*'
|         | | |         |     | |-IntegerLiteral 0x1c991d89d58 <col:40> 'int' 3
|         | | |         |     | `-ImplicitCastExpr 0x1c991d89dc0 <col:42, col:44> 'int' <LValueToRValue>
|         | | |         |     |   `-ParenExpr 0x1c991d89da0 <col:42, col:44> 'int' lvalue
|         | | |         |     |     `-DeclRefExpr 0x1c991d89d80 <line:124:30> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | | |         |     `-IntegerLiteral 0x1c991d89df8 <line:79:48> 'int' 1
|         | | |         `-ImplicitCastExpr 0x1c991d89e80 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | | |           `-DeclRefExpr 0x1c991d89e60 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | | `-ImplicitCastExpr 0x1c991d8a1f0 <col:15, col:64> 'const void *' <BitCast>
|         | |   `-ParenExpr 0x1c991d8a170 <col:15, col:64> 'char *'
|         | |     `-UnaryOperator 0x1c991d8a158 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         | |       `-ArraySubscriptExpr 0x1c991d8a138 <col:17, col:63> 'char' lvalue
|         | |         |-ParenExpr 0x1c991d89fa0 <col:17, col:37> 'char *'
|         | |         | `-CStyleCastExpr 0x1c991d89f78 <col:18, col:26> 'char *' <BitCast>
|         | |         |   `-ImplicitCastExpr 0x1c991d89f60 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         | |         |     `-DeclRefExpr 0x1c991d89f28 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         | |         `-BinaryOperator 0x1c991d8a118 <col:39, col:53> 'unsigned long long' '*'
|         | |           |-ImplicitCastExpr 0x1c991d8a100 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         | |           | `-ParenExpr 0x1c991d8a0a8 <col:39, col:49> 'int'
|         | |           |   `-BinaryOperator 0x1c991d8a088 <col:40, col:48> 'int' '+'
|         | |           |     |-BinaryOperator 0x1c991d8a040 <col:40, col:44> 'int' '*'
|         | |           |     | |-IntegerLiteral 0x1c991d89fc0 <col:40> 'int' 3
|         | |           |     | `-ImplicitCastExpr 0x1c991d8a028 <col:42, col:44> 'int' <LValueToRValue>
|         | |           |     |   `-ParenExpr 0x1c991d8a008 <col:42, col:44> 'int' lvalue
|         | |           |     |     `-DeclRefExpr 0x1c991d89fe8 <line:124:36> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         | |           |     `-IntegerLiteral 0x1c991d8a060 <line:79:48> 'int' 1
|         | |           `-ImplicitCastExpr 0x1c991d8a0e8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         | |             `-DeclRefExpr 0x1c991d8a0c8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         | `-CallExpr 0x1c991d8a4b8 <line:125:13, col:27> 'void'
|         |   |-ImplicitCastExpr 0x1c991d8a4a0 <col:13> 'void (*)(void *)' <LValueToRValue>
|         |   | `-DeclRefExpr 0x1c991d8a208 <col:13> 'void (*)(void *)' lvalue ParmVar 0x1c991d82880 'felem_one' 'void (*)(void *)'
|         |   `-ImplicitCastExpr 0x1c991d8a4e0 <line:80:15, col:64> 'void *' <BitCast>
|         |     `-ParenExpr 0x1c991d8a480 <col:15, col:64> 'char *'
|         |       `-UnaryOperator 0x1c991d8a468 <col:16, col:63> 'char *' prefix '&' cannot overflow
|         |         `-ArraySubscriptExpr 0x1c991d8a448 <col:17, col:63> 'char' lvalue
|         |           |-ParenExpr 0x1c991d8a2b0 <col:17, col:37> 'char *'
|         |           | `-CStyleCastExpr 0x1c991d8a278 <col:18, col:26> 'char *' <BitCast>
|         |           |   `-ImplicitCastExpr 0x1c991d8a260 <col:26> 'void *' <LValueToRValue> part_of_explicit_cast
|         |           |     `-DeclRefExpr 0x1c991d8a228 <col:26> 'void *' lvalue ParmVar 0x1c991d82650 'point_array' 'void *'
|         |           `-BinaryOperator 0x1c991d8a428 <col:39, col:53> 'unsigned long long' '*'
|         |             |-ImplicitCastExpr 0x1c991d8a410 <col:39, col:49> 'unsigned long long' <IntegralCast>
|         |             | `-ParenExpr 0x1c991d8a3b8 <col:39, col:49> 'int'
|         |             |   `-BinaryOperator 0x1c991d8a398 <col:40, col:48> 'int' '+'
|         |             |     |-BinaryOperator 0x1c991d8a350 <col:40, col:44> 'int' '*'
|         |             |     | |-IntegerLiteral 0x1c991d8a2d0 <col:40> 'int' 3
|         |             |     | `-ImplicitCastExpr 0x1c991d8a338 <col:42, col:44> 'int' <LValueToRValue>
|         |             |     |   `-ParenExpr 0x1c991d8a318 <col:42, col:44> 'int' lvalue
|         |             |     |     `-DeclRefExpr 0x1c991d8a2f8 <line:125:25> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|         |             |     `-IntegerLiteral 0x1c991d8a370 <line:80:48> 'int' 2
|         |             `-ImplicitCastExpr 0x1c991d8a3f8 <col:53> 'size_t':'unsigned long long' <LValueToRValue>
|         |               `-DeclRefExpr 0x1c991d8a3d8 <col:53> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|         `-CompoundStmt 0x1c991d8aa30 <line:126:16, line:132:9>
|           `-IfStmt 0x1c991d8aa18 <line:127:13, line:131:60>
|             |-BinaryOperator 0x1c991d8a5a8 <line:127:17, col:21> 'int' '>'
|             | |-ImplicitCastExpr 0x1c991d8a590 <col:17> 'int' <LValueToRValue>
|             | | `-DeclRefExpr 0x1c991d8a548 <col:17> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|             | `-IntegerLiteral 0x1c991d8a568 <col:21> 'int' 0
|             `-CallExpr 0x1c991d8a9b8 <line:131:17, col:60> 'void'
|               |-ImplicitCastExpr 0x1c991d8a9a0 <col:17> 'void (*)(void *, const void *)' <LValueToRValue>
|               | `-DeclRefExpr 0x1c991d8a5c8 <col:17> 'void (*)(void *, const void *)' lvalue ParmVar 0x1c991d82b98 'felem_assign' 'void (*)(void *, const void *)'
|               |-ImplicitCastExpr 0x1c991d8a9e8 <line:77:23, col:63> 'void *' <BitCast>
|               | `-ParenExpr 0x1c991d8a7c8 <col:23, col:63> 'char *'
|               |   `-UnaryOperator 0x1c991d8a7b0 <col:24, col:62> 'char *' prefix '&' cannot overflow
|               |     `-ArraySubscriptExpr 0x1c991d8a790 <col:25, col:62> 'char' lvalue
|               |       |-ParenExpr 0x1c991d8a660 <col:25, col:44> 'char *'
|               |       | `-CStyleCastExpr 0x1c991d8a638 <col:26, col:34> 'char *' <BitCast>
|               |       |   `-ImplicitCastExpr 0x1c991d8a620 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|               |       |     `-DeclRefExpr 0x1c991d8a5e8 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|               |       `-BinaryOperator 0x1c991d8a770 <col:46, col:52> 'unsigned long long' '*'
|               |         |-ImplicitCastExpr 0x1c991d8a758 <col:46, col:48> 'unsigned long long' <IntegralCast>
|               |         | `-ParenExpr 0x1c991d8a700 <col:46, col:48> 'int'
|               |         |   `-BinaryOperator 0x1c991d8a6e0 <line:131:40, col:44> 'int' '-'
|               |         |     |-ImplicitCastExpr 0x1c991d8a6c8 <col:40> 'int' <LValueToRValue>
|               |         |     | `-DeclRefExpr 0x1c991d8a680 <col:40> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|               |         |     `-IntegerLiteral 0x1c991d8a6a0 <col:44> 'int' 1
|               |         `-ImplicitCastExpr 0x1c991d8a740 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|               |           `-DeclRefExpr 0x1c991d8a720 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
|               `-ImplicitCastExpr 0x1c991d8aa00 <col:23, col:63> 'const void *' <BitCast>
|                 `-ParenExpr 0x1c991d8a980 <col:23, col:63> 'char *'
|                   `-UnaryOperator 0x1c991d8a968 <col:24, col:62> 'char *' prefix '&' cannot overflow
|                     `-ArraySubscriptExpr 0x1c991d8a948 <col:25, col:62> 'char' lvalue
|                       |-ParenExpr 0x1c991d8a860 <col:25, col:44> 'char *'
|                       | `-CStyleCastExpr 0x1c991d8a838 <col:26, col:34> 'char *' <BitCast>
|                       |   `-ImplicitCastExpr 0x1c991d8a820 <col:34> 'void *' <LValueToRValue> part_of_explicit_cast
|                       |     `-DeclRefExpr 0x1c991d8a7e8 <col:34> 'void *' lvalue ParmVar 0x1c991d82748 'tmp_felems' 'void *'
|                       `-BinaryOperator 0x1c991d8a928 <col:46, col:52> 'unsigned long long' '*'
|                         |-ImplicitCastExpr 0x1c991d8a910 <col:46, col:48> 'unsigned long long' <IntegralCast>
|                         | `-ImplicitCastExpr 0x1c991d8a8e0 <col:46, col:48> 'int' <LValueToRValue>
|                         |   `-ParenExpr 0x1c991d8a8a0 <col:46, col:48> 'int' lvalue
|                         |     `-DeclRefExpr 0x1c991d8a880 <line:131:58> 'int' lvalue Var 0x1c991d7b628 'i' 'int'
|                         `-ImplicitCastExpr 0x1c991d8a8f8 <line:77:52> 'size_t':'unsigned long long' <LValueToRValue>
|                           `-DeclRefExpr 0x1c991d8a8c0 <col:52> 'size_t':'unsigned long long' lvalue ParmVar 0x1c991d826c8 'felem_size' 'size_t':'unsigned long long'
`-FunctionDecl 0x1c991d8ad00 prev 0x1c991d7cdf8 <line:209:1, line:222:1> line:209:6 ec_GFp_nistp_recode_scalar_bits 'void (unsigned char *, unsigned char *, unsigned char)'
  |-ParmVarDecl 0x1c991d8ab18 <col:38, col:53> col:53 used sign 'unsigned char *'
  |-ParmVarDecl 0x1c991d8ab98 <line:210:38, col:53> col:53 used digit 'unsigned char *'
  |-ParmVarDecl 0x1c991d8ac18 <col:60, col:74> col:74 used in 'unsigned char'
  `-CompoundStmt 0x1c991d8c870 <line:211:1, line:222:1>
    |-DeclStmt 0x1c991d8aed0 <line:212:5, col:23>
    | |-VarDecl 0x1c991d8add0 <col:5, col:19> col:19 used s 'unsigned char'
    | `-VarDecl 0x1c991d8ae50 <col:5, col:22> col:22 used d 'unsigned char'
    |-BinaryOperator 0x1c991d8b070 <line:214:5, col:24> 'unsigned char' '='
    | |-DeclRefExpr 0x1c991d8aee8 <col:5> 'unsigned char' lvalue Var 0x1c991d8add0 's' 'unsigned char'
    | `-ImplicitCastExpr 0x1c991d8b058 <col:9, col:24> 'unsigned char' <IntegralCast>
    |   `-UnaryOperator 0x1c991d8b040 <col:9, col:24> 'int' prefix '~' cannot overflow
    |     `-ParenExpr 0x1c991d8b020 <col:10, col:24> 'int'
    |       `-BinaryOperator 0x1c991d8b000 <col:11, col:23> 'int' '-'
    |         |-ParenExpr 0x1c991d8afb8 <col:11, col:19> 'int'
    |         | `-BinaryOperator 0x1c991d8af98 <col:12, col:18> 'int' '>>'
    |         |   |-ImplicitCastExpr 0x1c991d8af80 <col:12> 'int' <IntegralCast>
    |         |   | `-ImplicitCastExpr 0x1c991d8af68 <col:12> 'unsigned char' <LValueToRValue>
    |         |   |   `-DeclRefExpr 0x1c991d8af20 <col:12> 'unsigned char' lvalue ParmVar 0x1c991d8ac18 'in' 'unsigned char'
    |         |   `-IntegerLiteral 0x1c991d8af40 <col:18> 'int' 5
    |         `-IntegerLiteral 0x1c991d8afd8 <col:23> 'int' 1
    |-BinaryOperator 0x1c991d8b228 <line:216:5, col:25> 'unsigned char' '='
    | |-DeclRefExpr 0x1c991d8b090 <col:5> 'unsigned char' lvalue Var 0x1c991d8ae50 'd' 'unsigned char'
    | `-ImplicitCastExpr 0x1c991d8b210 <col:9, col:25> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x1c991d8b1f0 <col:9, col:25> 'int' '-'
    |     |-BinaryOperator 0x1c991d8b1a8 <col:9, col:20> 'int' '-'
    |     | |-ParenExpr 0x1c991d8b138 <col:9, col:16> 'int'
    |     | | `-BinaryOperator 0x1c991d8b118 <col:10, col:15> 'int' '<<'
    |     | |   |-IntegerLiteral 0x1c991d8b0c8 <col:10> 'int' 1
    |     | |   `-IntegerLiteral 0x1c991d8b0f0 <col:15> 'int' 6
    |     | `-ImplicitCastExpr 0x1c991d8b190 <col:20> 'int' <IntegralCast>
    |     |   `-ImplicitCastExpr 0x1c991d8b178 <col:20> 'unsigned char' <LValueToRValue>
    |     |     `-DeclRefExpr 0x1c991d8b158 <col:20> 'unsigned char' lvalue ParmVar 0x1c991d8ac18 'in' 'unsigned char'
    |     `-IntegerLiteral 0x1c991d8b1c8 <col:25> 'int' 1
    |-BinaryOperator 0x1c991d8c4a0 <line:217:5, col:27> 'unsigned char' '='
    | |-DeclRefExpr 0x1c991d8b248 <col:5> 'unsigned char' lvalue Var 0x1c991d8ae50 'd' 'unsigned char'
    | `-ImplicitCastExpr 0x1c991d8c488 <col:9, col:27> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x1c991d8c468 <col:9, col:27> 'int' '|'
    |     |-ParenExpr 0x1c991d8c350 <col:9, col:15> 'int'
    |     | `-BinaryOperator 0x1c991d8c330 <col:10, col:14> 'int' '&'
    |     |   |-ImplicitCastExpr 0x1c991d8c2e8 <col:10> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x1c991d8c2d0 <col:10> 'unsigned char' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x1c991d8b268 <col:10> 'unsigned char' lvalue Var 0x1c991d8ae50 'd' 'unsigned char'
    |     |   `-ImplicitCastExpr 0x1c991d8c318 <col:14> 'int' <IntegralCast>
    |     |     `-ImplicitCastExpr 0x1c991d8c300 <col:14> 'unsigned char' <LValueToRValue>
    |     |       `-DeclRefExpr 0x1c991d8b288 <col:14> 'unsigned char' lvalue Var 0x1c991d8add0 's' 'unsigned char'
    |     `-ParenExpr 0x1c991d8c448 <col:19, col:27> 'int'
    |       `-BinaryOperator 0x1c991d8c428 <col:20, col:26> 'int' '&'
    |         |-ImplicitCastExpr 0x1c991d8c410 <col:20> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x1c991d8c3f8 <col:20> 'unsigned char' <LValueToRValue>
    |         |   `-DeclRefExpr 0x1c991d8c370 <col:20> 'unsigned char' lvalue ParmVar 0x1c991d8ac18 'in' 'unsigned char'
    |         `-UnaryOperator 0x1c991d8c3e0 <col:25, col:26> 'int' prefix '~' cannot overflow
    |           `-ImplicitCastExpr 0x1c991d8c3c8 <col:26> 'int' <IntegralCast>
    |             `-ImplicitCastExpr 0x1c991d8c3b0 <col:26> 'unsigned char' <LValueToRValue>
    |               `-DeclRefExpr 0x1c991d8c390 <col:26> 'unsigned char' lvalue Var 0x1c991d8add0 's' 'unsigned char'
    |-BinaryOperator 0x1c991d8c688 <line:218:5, col:26> 'unsigned char' '='
    | |-DeclRefExpr 0x1c991d8c4c0 <col:5> 'unsigned char' lvalue Var 0x1c991d8ae50 'd' 'unsigned char'
    | `-ImplicitCastExpr 0x1c991d8c670 <col:9, col:26> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x1c991d8c650 <col:9, col:26> 'int' '+'
    |     |-ParenExpr 0x1c991d8c578 <col:9, col:16> 'int'
    |     | `-BinaryOperator 0x1c991d8c558 <col:10, col:15> 'int' '>>'
    |     |   |-ImplicitCastExpr 0x1c991d8c540 <col:10> 'int' <IntegralCast>
    |     |   | `-ImplicitCastExpr 0x1c991d8c528 <col:10> 'unsigned char' <LValueToRValue>
    |     |   |   `-DeclRefExpr 0x1c991d8c4e0 <col:10> 'unsigned char' lvalue Var 0x1c991d8ae50 'd' 'unsigned char'
    |     |   `-IntegerLiteral 0x1c991d8c500 <col:15> 'int' 1
    |     `-ParenExpr 0x1c991d8c630 <col:20, col:26> 'int'
    |       `-BinaryOperator 0x1c991d8c610 <col:21, col:25> 'int' '&'
    |         |-ImplicitCastExpr 0x1c991d8c5f8 <col:21> 'int' <IntegralCast>
    |         | `-ImplicitCastExpr 0x1c991d8c5e0 <col:21> 'unsigned char' <LValueToRValue>
    |         |   `-DeclRefExpr 0x1c991d8c598 <col:21> 'unsigned char' lvalue Var 0x1c991d8ae50 'd' 'unsigned char'
    |         `-IntegerLiteral 0x1c991d8c5b8 <col:25> 'int' 1
    |-BinaryOperator 0x1c991d8c7a8 <line:220:5, col:17> 'unsigned char' '='
    | |-UnaryOperator 0x1c991d8c6e0 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
    | | `-ImplicitCastExpr 0x1c991d8c6c8 <col:6> 'unsigned char *' <LValueToRValue>
    | |   `-DeclRefExpr 0x1c991d8c6a8 <col:6> 'unsigned char *' lvalue ParmVar 0x1c991d8ab18 'sign' 'unsigned char *'
    | `-ImplicitCastExpr 0x1c991d8c790 <col:13, col:17> 'unsigned char' <IntegralCast>
    |   `-BinaryOperator 0x1c991d8c770 <col:13, col:17> 'int' '&'
    |     |-ImplicitCastExpr 0x1c991d8c758 <col:13> 'int' <IntegralCast>
    |     | `-ImplicitCastExpr 0x1c991d8c740 <col:13> 'unsigned char' <LValueToRValue>
    |     |   `-DeclRefExpr 0x1c991d8c6f8 <col:13> 'unsigned char' lvalue Var 0x1c991d8add0 's' 'unsigned char'
    |     `-IntegerLiteral 0x1c991d8c718 <col:17> 'int' 1
    `-BinaryOperator 0x1c991d8c850 <line:221:5, col:14> 'unsigned char' '='
      |-UnaryOperator 0x1c991d8c800 <col:5, col:6> 'unsigned char' lvalue prefix '*' cannot overflow
      | `-ImplicitCastExpr 0x1c991d8c7e8 <col:6> 'unsigned char *' <LValueToRValue>
      |   `-DeclRefExpr 0x1c991d8c7c8 <col:6> 'unsigned char *' lvalue ParmVar 0x1c991d8ab98 'digit' 'unsigned char *'
      `-ImplicitCastExpr 0x1c991d8c838 <col:14> 'unsigned char' <LValueToRValue>
        `-DeclRefExpr 0x1c991d8c818 <col:14> 'unsigned char' lvalue Var 0x1c991d8ae50 'd' 'unsigned char'
