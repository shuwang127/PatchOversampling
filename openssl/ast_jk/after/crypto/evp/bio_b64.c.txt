TranslationUnitDecl 0x1e4a8f198e8 <<invalid sloc>> <invalid sloc>
|-TypedefDecl 0x1e4a8f1a180 <<invalid sloc>> <invalid sloc> implicit __int128_t '__int128'
| `-BuiltinType 0x1e4a8f19e80 '__int128'
|-TypedefDecl 0x1e4a8f1a1f0 <<invalid sloc>> <invalid sloc> implicit __uint128_t 'unsigned __int128'
| `-BuiltinType 0x1e4a8f19ea0 'unsigned __int128'
|-TypedefDecl 0x1e4a8f1a528 <<invalid sloc>> <invalid sloc> implicit __NSConstantString 'struct __NSConstantString_tag'
| `-RecordType 0x1e4a8f1a2e0 'struct __NSConstantString_tag'
|   `-Record 0x1e4a8f1a248 '__NSConstantString_tag'
|-TypedefDecl 0x1e4a8f1a598 <<invalid sloc>> <invalid sloc> implicit size_t 'unsigned long long'
| `-BuiltinType 0x1e4a8f19ac0 'unsigned long long'
|-TypedefDecl 0x1e4a8f1a630 <<invalid sloc>> <invalid sloc> implicit __builtin_ms_va_list 'char *'
| `-PointerType 0x1e4a8f1a5f0 'char *'
|   `-BuiltinType 0x1e4a8f19980 'char'
|-TypedefDecl 0x1e4a8f1a6a0 <<invalid sloc>> <invalid sloc> implicit __builtin_va_list 'char *'
| `-PointerType 0x1e4a8f1a5f0 'char *'
|   `-BuiltinType 0x1e4a8f19980 'char'
|-TypedefDecl 0x1e4a8f1a760 <D:\Microsoft Visual Studio 12.0\VC\include\vadefs.h:48:1, col:29> col:29 referenced uintptr_t 'unsigned long long'
| `-BuiltinType 0x1e4a8f19ac0 'unsigned long long'
|-TypedefDecl 0x1e4a8f1a7d0 <line:59:1, col:17> col:17 referenced va_list 'char *'
| `-PointerType 0x1e4a8f1a5f0 'char *'
|   `-BuiltinType 0x1e4a8f19980 'char'
|-FunctionDecl 0x1e4aaa70400 <line:119:21> col:21 implicit __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1e4aaa704a0 <<invalid sloc>> <invalid sloc> 'char **'
| `-NoThrowAttr 0x1e4aaa70510 <col:21> Implicit
|-FunctionDecl 0x1e4aaa70568 prev 0x1e4aaa70400 <col:1, col:46> col:21 __va_start 'void (char **, ...)' extern
| |-ParmVarDecl 0x1e4aaa70290 <col:32, col:40> col:41 'va_list *'
| `-NoThrowAttr 0x1e4aaa70658 <col:21> Inherited Implicit
|-TypedefDecl 0x1e4aaa70698 prev 0x1e4a8f1a598 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:494:1, col:29> col:29 referenced size_t 'unsigned long long'
| `-BuiltinType 0x1e4a8f19ac0 'unsigned long long'
|-TypedefDecl 0x1e4aaa70740 <line:503:1, col:16> col:16 referenced rsize_t 'size_t':'unsigned long long'
| `-TypedefType 0x1e4aaa70710 'size_t' sugar
|   |-Typedef 0x1e4aaa70698 'size_t'
|   `-BuiltinType 0x1e4a8f19ac0 'unsigned long long'
|-TypedefDecl 0x1e4aaa707b0 <line:510:1, col:29> col:29 intptr_t 'long long'
| `-BuiltinType 0x1e4a8f19a20 'long long'
|-TypedefDecl 0x1e4aaa70820 <line:528:1, col:29> col:29 ptrdiff_t 'long long'
| `-BuiltinType 0x1e4a8f19a20 'long long'
|-TypedefDecl 0x1e4aaa70890 <line:536:1, col:24> col:24 referenced wchar_t 'unsigned short'
| `-BuiltinType 0x1e4a8f19a60 'unsigned short'
|-TypedefDecl 0x1e4aaa70900 <line:541:1, col:24> col:24 referenced wint_t 'unsigned short'
| `-BuiltinType 0x1e4a8f19a60 'unsigned short'
|-TypedefDecl 0x1e4aaa70970 <line:542:1, col:24> col:24 wctype_t 'unsigned short'
| `-BuiltinType 0x1e4a8f19a60 'unsigned short'
|-TypedefDecl 0x1e4aaa709e0 <line:563:1, col:13> col:13 referenced errno_t 'int'
| `-BuiltinType 0x1e4a8f199e0 'int'
|-TypedefDecl 0x1e4aaa70a50 <line:567:1, col:19> col:19 __time32_t 'long'
| `-BuiltinType 0x1e4a8f19a00 'long'
|-TypedefDecl 0x1e4aaa70ac0 <line:572:1, col:17> col:17 referenced __time64_t 'long long'
| `-BuiltinType 0x1e4a8f19a20 'long long'
|-TypedefDecl 0x1e4aaa70b50 <line:580:1, col:20> col:20 time_t '__time64_t':'long long'
| `-TypedefType 0x1e4aaa70b20 '__time64_t' sugar
|   |-Typedef 0x1e4aaa70ac0 '__time64_t'
|   `-BuiltinType 0x1e4a8f19a20 'long long'
|-FunctionDecl 0x1e4aaa70cc8 <line:637:10, col:53> col:23 _invalid_parameter_noinfo 'void (void) __attribute__((cdecl))':'void (void)'
|-FunctionDecl 0x1e4aaa70ee8 <line:638:10, col:83> col:44 _invalid_parameter_noinfo_noreturn 'void (void) __attribute__((noreturn)) __attribute__((cdecl))':'void (void) __attribute__((noreturn))'
|-FunctionDecl 0x1e4aaaaf370 <line:641:9, line:642:136> col:14 _invoke_watson 'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn)) __attribute__((cdecl))':'void (const wchar_t *, const wchar_t *, const wchar_t *, unsigned int, uintptr_t) __attribute__((noreturn))'
| |-ParmVarDecl 0x1e4aaa71028 <col:40, col:54> col:55 'const wchar_t *'
| |-ParmVarDecl 0x1e4aaa710a0 <col:68, col:82> col:83 'const wchar_t *'
| |-ParmVarDecl 0x1e4aaa71118 <col:96, col:110> col:111 'const wchar_t *'
| |-ParmVarDecl 0x1e4aaa71198 <col:113, col:122> col:125 'unsigned int'
| `-ParmVarDecl 0x1e4aaaaf110 <col:127> col:136 'uintptr_t':'unsigned long long'
|-RecordDecl 0x1e4aaaaf450 <line:2072:1, col:8> col:8 struct threadlocaleinfostruct
|-RecordDecl 0x1e4aaaaf510 <line:2073:1, col:8> col:8 struct threadmbcinfostruct
|-TypedefDecl 0x1e4aaaaf680 <line:2074:1, col:41> col:41 referenced pthreadlocinfo 'struct threadlocaleinfostruct *'
| `-PointerType 0x1e4aaaaf630 'struct threadlocaleinfostruct *'
|   `-ElaboratedType 0x1e4aaaaf5d0 'struct threadlocaleinfostruct' sugar
|     `-RecordType 0x1e4aaaaf4f0 'struct threadlocaleinfostruct'
|       `-Record 0x1e4aaaba1c0 'threadlocaleinfostruct'
|-TypedefDecl 0x1e4aaaaf790 <line:2075:1, col:38> col:38 referenced pthreadmbcinfo 'struct threadmbcinfostruct *'
| `-PointerType 0x1e4aaaaf740 'struct threadmbcinfostruct *'
|   `-ElaboratedType 0x1e4aaaaf6e0 'struct threadmbcinfostruct' sugar
|     `-RecordType 0x1e4aaaaf5b0 'struct threadmbcinfostruct'
|       `-Record 0x1e4aaaaf510 'threadmbcinfostruct'
|-RecordDecl 0x1e4aaaaf7e8 <line:2076:1, col:8> col:8 struct __lc_time_data
|-RecordDecl 0x1e4aaaaf8a0 <line:2078:9, line:2082:1> line:2078:16 struct localeinfo_struct definition
| |-MaxFieldAlignmentAttr 0x1e4aaaaf960 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e4aaaaf9f0 <line:2080:5, col:20> col:20 locinfo 'pthreadlocinfo':'struct threadlocaleinfostruct *'
| `-FieldDecl 0x1e4aaaafa80 <line:2081:5, col:20> col:20 mbcinfo 'pthreadmbcinfo':'struct threadmbcinfostruct *'
|-TypedefDecl 0x1e4aaaafb38 <line:2078:1, line:2082:3> col:3 _locale_tstruct 'struct localeinfo_struct':'struct localeinfo_struct'
| `-ElaboratedType 0x1e4aaaafae0 'struct localeinfo_struct' sugar
|   `-RecordType 0x1e4aaaaf940 'struct localeinfo_struct'
|     `-Record 0x1e4aaaaf8a0 'localeinfo_struct'
|-TypedefDecl 0x1e4aaaafc10 <line:2078:1, line:2082:21> col:21 referenced _locale_t 'struct localeinfo_struct *'
| `-PointerType 0x1e4aaaafbc0 'struct localeinfo_struct *'
|   `-ElaboratedType 0x1e4aaaafae0 'struct localeinfo_struct' sugar
|     `-RecordType 0x1e4aaaaf940 'struct localeinfo_struct'
|       `-Record 0x1e4aaaaf8a0 'localeinfo_struct'
|-RecordDecl 0x1e4aaaafc88 <line:2085:9, line:2090:1> line:2085:16 struct localerefcount definition
| |-MaxFieldAlignmentAttr 0x1e4aaaafd40 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e4aaaafdb8 <line:2086:9, col:15> col:15 locale 'char *'
| |-FieldDecl 0x1e4aaaafe78 <line:2087:9, col:18> col:18 wlocale 'wchar_t *'
| |-FieldDecl 0x1e4aaaaff10 <line:2088:9, col:14> col:14 refcount 'int *'
| `-FieldDecl 0x1e4aaaaff80 <line:2089:9, col:14> col:14 wrefcount 'int *'
|-TypedefDecl 0x1e4aaab0038 <line:2085:1, line:2090:3> col:3 referenced locrefcount 'struct localerefcount':'struct localerefcount'
| `-ElaboratedType 0x1e4aaaaffe0 'struct localerefcount' sugar
|   `-RecordType 0x1e4aaaafd20 'struct localerefcount'
|     `-Record 0x1e4aaaafc88 'localerefcount'
|-RecordDecl 0x1e4aaaba1c0 prev 0x1e4aaaaf450 <line:2092:9, line:2111:1> line:2092:16 struct threadlocaleinfostruct definition
| |-MaxFieldAlignmentAttr 0x1e4aaaba240 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e4aaaba2b8 <line:2093:9, col:13> col:13 refcount 'int'
| |-FieldDecl 0x1e4aaaba328 <line:2094:9, col:22> col:22 lc_codepage 'unsigned int'
| |-FieldDecl 0x1e4aaaba398 <line:2095:9, col:22> col:22 lc_collate_cp 'unsigned int'
| |-FieldDecl 0x1e4aaaba408 <line:2096:9, col:22> col:22 lc_time_cp 'unsigned int'
| |-FieldDecl 0x1e4aaaba5c8 <line:2097:9, col:34> col:21 lc_category 'locrefcount [6]'
| |-FieldDecl 0x1e4aaaba638 <line:2098:9, col:13> col:13 lc_clike 'int'
| |-FieldDecl 0x1e4aaaba6a8 <line:2099:9, col:13> col:13 mb_cur_max 'int'
| |-FieldDecl 0x1e4aaaba718 <line:2100:9, col:15> col:15 lconv_intl_refcount 'int *'
| |-FieldDecl 0x1e4aaaba788 <line:2101:9, col:15> col:15 lconv_num_refcount 'int *'
| |-FieldDecl 0x1e4aaaba7f8 <line:2102:9, col:15> col:15 lconv_mon_refcount 'int *'
| |-RecordDecl 0x1e4aaaba850 parent 0x1e4a8f198e8 <line:2103:9, col:16> col:16 struct lconv
| |-FieldDecl 0x1e4aaaba9e0 <col:9, col:24> col:24 lconv 'struct lconv *'
| |-FieldDecl 0x1e4aaabaa50 <line:2104:9, col:15> col:15 ctype1_refcount 'int *'
| |-FieldDecl 0x1e4aaabaac0 <line:2105:9, col:26> col:26 ctype1 'unsigned short *'
| |-FieldDecl 0x1e4aaabab30 <line:2106:9, col:32> col:32 pctype 'const unsigned short *'
| |-FieldDecl 0x1e4aaababd0 <line:2107:9, col:31> col:31 pclmap 'const unsigned char *'
| |-FieldDecl 0x1e4aaabac40 <line:2108:9, col:31> col:31 pcumap 'const unsigned char *'
| |-FieldDecl 0x1e4aaabad50 <line:2109:9, col:33> col:33 lc_time_curr 'struct __lc_time_data *'
| `-FieldDecl 0x1e4aaabae88 <line:2110:9, col:32> col:19 locale_name 'wchar_t *[6]'
|-TypedefDecl 0x1e4aaabaf38 <line:2092:1, line:2111:3> col:3 threadlocinfo 'struct threadlocaleinfostruct':'struct threadlocaleinfostruct'
| `-ElaboratedType 0x1e4aaabaee0 'struct threadlocaleinfostruct' sugar
|   `-RecordType 0x1e4aaaaf4f0 'struct threadlocaleinfostruct'
|     `-Record 0x1e4aaaba1c0 'threadlocaleinfostruct'
|-RecordDecl 0x1e4aaabafd0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:63:1, line:72:9> line:63:8 struct _iobuf definition
| |-MaxFieldAlignmentAttr 0x1e4aaabb090 <<invalid sloc>> Implicit 64
| |-FieldDecl 0x1e4aaabb108 <line:64:9, col:15> col:15 _ptr 'char *'
| |-FieldDecl 0x1e4aaab3150 <line:65:9, col:15> col:15 _cnt 'int'
| |-FieldDecl 0x1e4aaab31c0 <line:66:9, col:15> col:15 _base 'char *'
| |-FieldDecl 0x1e4aaab3230 <line:67:9, col:15> col:15 _flag 'int'
| |-FieldDecl 0x1e4aaab32a0 <line:68:9, col:15> col:15 _file 'int'
| |-FieldDecl 0x1e4aaab3310 <line:69:9, col:15> col:15 _charbuf 'int'
| |-FieldDecl 0x1e4aaab3380 <line:70:9, col:15> col:15 _bufsiz 'int'
| `-FieldDecl 0x1e4aaab33f0 <line:71:9, col:15> col:15 _tmpfname 'char *'
|-TypedefDecl 0x1e4aaab34a0 <line:73:1, col:23> col:23 referenced FILE 'struct _iobuf':'struct _iobuf'
| `-ElaboratedType 0x1e4aaab3450 'struct _iobuf' sugar
|   `-RecordType 0x1e4aaabb070 'struct _iobuf'
|     `-Record 0x1e4aaabafd0 '_iobuf'
|-FunctionDecl 0x1e4aaab36d8 <line:137:9, col:39> col:24 __iob_func 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
|-TypedefDecl 0x1e4aaab37a8 <line:144:1, col:17> col:17 referenced fpos_t 'long long'
| `-BuiltinType 0x1e4a8f19a20 'long long'
|-FunctionDecl 0x1e4aaab3988 <line:175:24, col:65> col:36 _filbuf 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aaab3810 <col:52, col:59> col:59 _File 'FILE *'
|-FunctionDecl 0x1e4aaab3c80 <line:176:28, col:82> col:40 _flsbuf 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1e4aaab3a60 <col:53, col:57> col:57 _Ch 'int'
| `-ParmVarDecl 0x1e4aaab3ad8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1e4aaab4030 <line:178:24, col:121> col:39 _fsopen 'FILE *(const char *, const char *, int) __attribute__((cdecl))':'FILE *(const char *, const char *, int)'
| |-ParmVarDecl 0x1e4aaab3d60 <col:54, col:67> col:67 _Filename 'const char *'
| |-ParmVarDecl 0x1e4aaab3de0 <col:85, col:98> col:98 _Mode 'const char *'
| `-ParmVarDecl 0x1e4aaab3e60 <col:110, col:114> col:114 _ShFlag 'int'
|-FunctionDecl 0x1e4aaac33c0 <line:180:9, col:51> col:22 clearerr 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1e4aaac3250 <col:39, col:46> col:46 _File 'FILE *'
|-FunctionDecl 0x1e4aaac35f0 <line:182:28, col:76> col:44 clearerr_s 'errno_t (FILE *) __attribute__((cdecl))':'errno_t (FILE *)'
| `-ParmVarDecl 0x1e4aaac34b0 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1e4aaac37a0 <line:184:28, col:67> col:40 fclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aaac36c0 <col:55, col:62> col:62 _File 'FILE *'
|-FunctionDecl 0x1e4aaac3990 <line:185:28, col:55> col:40 _fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1e4aaac3c88 <line:187:24, col:94> col:39 _fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1e4aaac3a60 <col:52, col:56> col:56 _FileHandle 'int'
| `-ParmVarDecl 0x1e4aaac3ae0 <col:76, col:89> col:89 _Mode 'const char *'
|-FunctionDecl 0x1e4aaac3e40 <line:189:24, col:58> col:36 feof 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aaac3d60 <col:46, col:53> col:53 _File 'FILE *'
|-FunctionDecl 0x1e4aaac3ff0 <line:190:24, col:60> col:36 ferror 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aaac3f10 <col:48, col:55> col:55 _File 'FILE *'
|-FunctionDecl 0x1e4aaac41a0 <line:191:28, col:71> col:40 fflush 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aaac40c0 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1e4aaac2348 <line:192:28, col:66> col:40 fgetc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aaac2268 <col:54, col:61> col:61 _File 'FILE *'
|-FunctionDecl 0x1e4aaac24d8 <line:193:28, col:54> col:40 _fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1e4aaac2840 <line:194:28, col:90> col:40 fgetpos 'int (FILE *, fpos_t *) __attribute__((cdecl))':'int (FILE *, fpos_t *)'
| |-ParmVarDecl 0x1e4aaac25a0 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1e4aaac2698 <col:77, col:86> col:86 _Pos 'fpos_t *'
|-FunctionDecl 0x1e4aaac2bf8 <line:195:28, col:128> col:43 fgets 'char *(char *, int, FILE *) __attribute__((cdecl))':'char *(char *, int, FILE *)'
| |-ParmVarDecl 0x1e4aaac2920 <col:75, col:82> col:82 _Buf 'char *'
| |-ParmVarDecl 0x1e4aaac29a0 <col:93, col:97> col:97 _MaxCount 'int'
| `-ParmVarDecl 0x1e4aaac2a18 <col:116, col:123> col:123 _File 'FILE *'
|-FunctionDecl 0x1e4aaac2db8 <line:197:24, col:61> col:36 _fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aaac2cd8 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1e4aaac3080 <line:204:24, col:117> col:39 _tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1e4aaac2e90 <col:59, col:72> col:72 _DirName 'const char *'
| `-ParmVarDecl 0x1e4aaac2f10 <col:93, col:106> col:106 _FilePrefix 'const char *'
|-FunctionDecl 0x1e4aaac4260 <line:210:28, col:54> col:40 _flushall 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1e4aaac4658 <line:211:72> col:72 implicit fopen 'FILE *(const char *, const char *)' extern
| |-ParmVarDecl 0x1e4aaac46f8 <<invalid sloc>> <invalid sloc> 'const char *'
| `-ParmVarDecl 0x1e4aaac4760 <<invalid sloc>> <invalid sloc> 'const char *'
|-FunctionDecl 0x1e4aaac47d8 prev 0x1e4aaac4658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:211:134> col:72 fopen 'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1e4aaac4430 <col:85, col:98> col:98 _Filename 'const char *'
| |-ParmVarDecl 0x1e4aaac44b0 <col:116, col:129> col:129 _Mode 'const char *'
| `-DeprecatedAttr 0x1e4aaac4888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aaac4d00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:213:28, col:149> col:44 fopen_s 'errno_t (FILE **, const char *, const char *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *)'
| |-ParmVarDecl 0x1e4aaac4a30 <col:78, col:86> col:86 _File 'FILE **'
| |-ParmVarDecl 0x1e4aaac4ab0 <col:100, col:113> col:113 _Filename 'const char *'
| `-ParmVarDecl 0x1e4aaac4b30 <col:131, col:144> col:144 _Mode 'const char *'
|-FunctionDecl 0x1e4aaac5020 <line:215:40> col:40 implicit fprintf 'int (FILE *, const char *, ...)' extern
| |-ParmVarDecl 0x1e4aaac50c0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1e4aaac5128 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1e4aaac51a0 <col:40> Implicit printf 2 3
|-FunctionDecl 0x1e4aaac1230 prev 0x1e4aaac5020 <col:28, col:125> col:40 fprintf 'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1e4aaac4de0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1e4aaac4e60 <col:100, col:113> col:113 _Format 'const char *'
| `-FormatAttr 0x1e4aaac1328 <col:40> Inherited printf 2 3
|-FunctionDecl 0x1e4aaac14f0 <line:217:28, col:127> col:40 fprintf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1e4aaac1370 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1e4aaac13f0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1e4aaac1748 <line:219:28, col:80> col:40 fputc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1e4aaac15d0 <col:51, col:55> col:55 _Ch 'int'
| `-ParmVarDecl 0x1e4aaac1648 <col:68, col:75> col:75 _File 'FILE *'
|-FunctionDecl 0x1e4aaac1978 <line:220:28, col:62> col:40 _fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1e4aaac1828 <col:55, col:59> col:59 _Ch 'int'
|-FunctionDecl 0x1e4aaac1c70 <line:221:28, col:92> col:40 fputs 'int (const char *, FILE *) __attribute__((cdecl))':'int (const char *, FILE *)'
| |-ParmVarDecl 0x1e4aaac1a50 <col:53, col:66> col:66 _Str 'const char *'
| `-ParmVarDecl 0x1e4aaac1ac8 <col:80, col:87> col:87 _File 'FILE *'
|-FunctionDecl 0x1e4aaac2108 <line:222:43> col:43 implicit fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1e4aaac21a8 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e4aaabd1f0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1e4aaabd258 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1e4aaabd2c0 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1e4aaabd348 prev 0x1e4aaac2108 <col:28, col:171> col:43 fread 'unsigned long long (void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1e4aaac1d50 <col:89, col:96> col:96 _DstBuf 'void *'
| |-ParmVarDecl 0x1e4aaac1dc8 <col:110, col:117> col:117 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aaac1e40 <col:136, col:143> col:143 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aaac1eb8 <col:159, col:166> col:166 _File 'FILE *'
|-FunctionDecl 0x1e4aaabd850 <line:224:28, col:195> col:43 fread_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1e4aaabd438 <col:91, col:98> col:98 _DstBuf 'void *'
| |-ParmVarDecl 0x1e4aaabd4b0 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aaabd528 <col:134, col:141> col:141 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aaabd5a0 <col:160, col:167> col:167 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aaabd618 <col:183, col:190> col:190 _File 'FILE *'
|-FunctionDecl 0x1e4aaabdd10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:226:160> col:74 freopen 'FILE *(const char *, const char *, FILE *) __attribute__((cdecl))':'FILE *(const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1e4aaabda40 <col:89, col:102> col:102 _Filename 'const char *'
| |-ParmVarDecl 0x1e4aaabdac0 <col:120, col:133> col:133 _Mode 'const char *'
| |-ParmVarDecl 0x1e4aaabdb38 <col:148, col:155> col:155 _File 'FILE *'
| `-DeprecatedAttr 0x1e4aaabddc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using freopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aaabe2a8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:228:28, col:176> col:44 freopen_s 'errno_t (FILE **, const char *, const char *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const char *, const char *, FILE *)'
| |-ParmVarDecl 0x1e4aaabdf10 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1e4aaabdf90 <col:102, col:115> col:115 _Filename 'const char *'
| |-ParmVarDecl 0x1e4aaabe010 <col:133, col:146> col:146 _Mode 'const char *'
| `-ParmVarDecl 0x1e4aaabe088 <col:161, col:168> col:168 _OldFile 'FILE *'
|-FunctionDecl 0x1e4aaabe650 <line:230:70> col:70 implicit fscanf 'int (FILE *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1e4aaabe6f0 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1e4aaabe758 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1e4aaabe7d0 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1e4aaabe838 prev 0x1e4aaabe650 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:230:153> col:70 fscanf 'int (FILE *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1e4aaabe488 <col:85, col:92> col:92 _File 'FILE *'
| |-ParmVarDecl 0x1e4aaabe508 <col:128, col:141> col:141 _Format 'const char *'
| |-FormatAttr 0x1e4aaabea18 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1e4aaabe8e8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aaabee58 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:231:201> col:77 _fscanf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aaabeb58 <col:95, col:102> col:102 _File 'FILE *'
| |-ParmVarDecl 0x1e4aaabebd8 <col:148, col:161> col:161 _Format 'const char *'
| |-ParmVarDecl 0x1e4aaabec70 <col:179, col:189> col:189 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e4aaabef10 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aaac5270 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:235:28, col:127> col:40 fscanf_s 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1e4aaabf050 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1e4aaabf0d0 <col:102, col:115> col:115 _Format 'const char *'
|-FunctionDecl 0x1e4aaac5560 <line:237:28, col:168> col:40 _fscanf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aaac5348 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1e4aaac53c8 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1e4aaac5440 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aaac58c0 <line:239:28, col:94> col:40 fsetpos 'int (FILE *, const fpos_t *) __attribute__((cdecl))':'int (FILE *, const fpos_t *)'
| |-ParmVarDecl 0x1e4aaac5640 <col:56, col:63> col:63 _File 'FILE *'
| `-ParmVarDecl 0x1e4aaac5718 <col:75, col:90> col:90 _Pos 'const fpos_t *'
|-FunctionDecl 0x1e4aaac5c78 <line:240:28, col:103> col:40 fseek 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1e4aaac5998 <col:54, col:61> col:61 _File 'FILE *'
| |-ParmVarDecl 0x1e4aaac5a18 <col:73, col:78> col:78 _Offset 'long'
| `-ParmVarDecl 0x1e4aaac5a98 <col:92, col:96> col:96 _Origin 'int'
|-FunctionDecl 0x1e4aaac5ed8 <line:241:24, col:63> col:37 ftell 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1e4aaac5d58 <col:51, col:58> col:58 _File 'FILE *'
|-FunctionDecl 0x1e4aaac0268 <line:243:28, col:110> col:40 _fseeki64 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1e4aaac5fa8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1e4aaac6028 <col:77, col:85> col:85 _Offset 'long long'
| `-ParmVarDecl 0x1e4aaac60a8 <col:99, col:103> col:103 _Origin 'int'
|-FunctionDecl 0x1e4aaac04c8 <line:244:24, col:70> col:40 _ftelli64 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1e4aaac0348 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1e4aaac0988 <line:246:43> col:43 implicit fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)' extern
| |-ParmVarDecl 0x1e4aaac0a28 <<invalid sloc>> <invalid sloc> 'const void *'
| |-ParmVarDecl 0x1e4aaac0a90 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1e4aaac0af8 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| `-ParmVarDecl 0x1e4aaac0b60 <<invalid sloc>> <invalid sloc> 'FILE *'
|-FunctionDecl 0x1e4aaac0be8 prev 0x1e4aaac0988 <col:28, col:159> col:43 fwrite 'unsigned long long (const void *, unsigned long long, unsigned long long, FILE *)'
| |-ParmVarDecl 0x1e4aaac05d0 <col:81, col:94> col:94 _Str 'const void *'
| |-ParmVarDecl 0x1e4aaac0648 <col:105, col:112> col:112 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aaac06c0 <col:124, col:131> col:131 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aaac0738 <col:147, col:154> col:154 _File 'FILE *'
|-FunctionDecl 0x1e4aaac0db0 <line:247:24, col:61> col:36 getc 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aaac0cd0 <col:49, col:56> col:56 _File 'FILE *'
|-FunctionDecl 0x1e4aaac0f40 <line:248:24, col:48> col:36 getchar 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1e4aaac10c8 <line:249:24, col:53> col:36 _getmaxstdio 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1e4aaabf3d0 <line:251:9, col:84> col:24 gets_s 'char *(char *, rsize_t) __attribute__((cdecl))':'char *(char *, rsize_t)'
| |-ParmVarDecl 0x1e4aaac1198 <col:53, col:60> col:60 _Buf 'char *'
| `-ParmVarDecl 0x1e4aaabf220 <col:71, col:79> col:79 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e4aaabf6f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:254:80 gets 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e4aaabf5b0 <col:139, col:145> col:145 _Buffer 'char *'
| `-DeprecatedAttr 0x1e4aaabf7a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using gets_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aaabf9c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:255:16, col:54> col:28 _getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aaabf8e0 <col:42, col:49> col:49 _File 'FILE *'
|-FunctionDecl 0x1e4aaabfbe0 <line:258:9, col:60> col:22 perror 'void (const char *) __attribute__((cdecl))':'void (const char *)'
| `-ParmVarDecl 0x1e4aaabfa98 <col:40, col:53> col:53 _ErrMsg 'const char *'
|-FunctionDecl 0x1e4aaabfd90 <line:261:28, col:68> col:40 _pclose 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aaabfcb0 <col:56, col:63> col:63 _File 'FILE *'
|-FunctionDecl 0x1e4aaabffe0 <line:262:24, col:101> col:39 _popen 'FILE *(const char *, const char *) __attribute__((cdecl))':'FILE *(const char *, const char *)'
| |-ParmVarDecl 0x1e4aaabfe68 <col:53, col:66> col:66 _Command 'const char *'
| `-ParmVarDecl 0x1e4aaabfee8 <col:83, col:96> col:96 _Mode 'const char *'
|-FunctionDecl 0x1e4aaac7290 <line:264:40> col:40 implicit printf 'int (const char *, ...)' extern
| |-ParmVarDecl 0x1e4aaac7330 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1e4aaac73a0 <col:40> Implicit printf 1 2
|-FunctionDecl 0x1e4aaac7408 prev 0x1e4aaac7290 <col:28, col:102> col:40 printf 'int (const char *, ...)'
| |-ParmVarDecl 0x1e4aaac00c0 <col:77, col:90> col:90 _Format 'const char *'
| `-FormatAttr 0x1e4aaac74f8 <col:40> Inherited printf 1 2
|-FunctionDecl 0x1e4aaac7628 <line:266:28, col:104> col:40 printf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1e4aaac7548 <col:79, col:92> col:92 _Format 'const char *'
|-FunctionDecl 0x1e4aaac7878 <line:268:28, col:79> col:40 putc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1e4aaac7700 <col:50, col:54> col:54 _Ch 'int'
| `-ParmVarDecl 0x1e4aaac7778 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1e4aaac7a38 <line:269:28, col:60> col:40 putchar 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1e4aaac7958 <col:53, col:57> col:57 _Ch 'int'
|-FunctionDecl 0x1e4aaac7c58 <line:270:28, col:69> col:40 puts 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1e4aaac7b10 <col:52, col:65> col:65 _Str 'const char *'
|-FunctionDecl 0x1e4aaac7ea8 <line:271:28, col:82> col:40 _putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1e4aaac7d30 <col:51, col:55> col:55 _Word 'int'
| `-ParmVarDecl 0x1e4aaac7da8 <col:70, col:77> col:77 _File 'FILE *'
|-FunctionDecl 0x1e4aaac8068 <line:274:9, col:57> col:21 remove 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1e4aaac7f88 <col:35, col:48> col:48 _Filename 'const char *'
|-FunctionDecl 0x1e4aab14fe0 <line:275:24, col:109> col:36 rename 'int (const char *, const char *) __attribute__((cdecl))':'int (const char *, const char *)'
| |-ParmVarDecl 0x1e4aaac8140 <col:50, col:63> col:63 _OldFilename 'const char *'
| `-ParmVarDecl 0x1e4aaac81c0 <col:84, col:97> col:97 _NewFilename 'const char *'
|-FunctionDecl 0x1e4aab151a0 <line:276:9, col:58> col:21 _unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| `-ParmVarDecl 0x1e4aab150c0 <col:36, col:49> col:49 _Filename 'const char *'
|-FunctionDecl 0x1e4aab15430 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:278:89> col:53 unlink 'int (const char *) __attribute__((cdecl))':'int (const char *)'
| |-ParmVarDecl 0x1e4aab15350 <col:67, col:80> col:80 _Filename 'const char *'
| `-DeprecatedAttr 0x1e4aab154d8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _unlink. See online help for details." ""
|-FunctionDecl 0x1e4aab156d0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:281:9, col:49> col:22 rewind 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1e4aab155f8 <col:37, col:44> col:44 _File 'FILE *'
|-FunctionDecl 0x1e4aab15860 <line:282:28, col:51> col:40 _rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1e4aab15b08 <line:283:69> col:69 implicit scanf 'int (const char *restrict, ...)' extern
| |-ParmVarDecl 0x1e4aab15ba8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1e4aab15c18 <col:69> Implicit scanf 1 2
|-FunctionDecl 0x1e4aab15c80 prev 0x1e4aab15b08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:283:129> col:69 scanf 'int (const char *restrict, ...)'
| |-ParmVarDecl 0x1e4aab159f0 <col:104, col:117> col:117 _Format 'const char *'
| |-FormatAttr 0x1e4aab15e58 <col:69> Inherited scanf 1 2
| `-DeprecatedAttr 0x1e4aab15d28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using scanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab16230 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:284:177> col:76 _scanf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab15ff8 <col:124, col:137> col:137 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab16070 <col:155, col:165> col:165 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e4aab162e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _scanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab16508 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:288:40, col:116> col:52 scanf_s 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1e4aab16428 <col:91, col:104> col:104 _Format 'const char *'
|-FunctionDecl 0x1e4aab16758 <line:290:40, col:157> col:52 _scanf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab165e0 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab16658 <col:135, col:145> col:145 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab16b18 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:292:150> col:55 setbuf 'void (FILE *, char *) __attribute__((cdecl))':'void (FILE *, char *)'
| |-ParmVarDecl 0x1e4aab168f0 <col:70, col:77> col:77 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab16970 <col:136, col:143> col:143 _Buffer 'char *'
| `-DeprecatedAttr 0x1e4aab16bc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using setvbuf instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab16df0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:293:28, col:66> col:40 _setmaxstdio 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1e4aab16d10 <col:58, col:62> col:62 _Max 'int'
|-FunctionDecl 0x1e4aab18088 <line:294:28, col:93> col:49 _set_output_format 'unsigned int (unsigned int) __attribute__((cdecl))':'unsigned int (unsigned int)'
| `-ParmVarDecl 0x1e4aab17f40 <col:73, col:86> col:86 _Format 'unsigned int'
|-FunctionDecl 0x1e4aab18270 <line:295:28, col:72> col:49 _get_output_format 'unsigned int (void) __attribute__((cdecl))':'unsigned int (void)'
|-FunctionDecl 0x1e4aab186c0 <line:296:28, col:145> col:40 setvbuf 'int (FILE *, char *, int, size_t) __attribute__((cdecl))':'int (FILE *, char *, int, size_t)'
| |-ParmVarDecl 0x1e4aab18338 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab183b8 <col:99, col:106> col:106 _Buf 'char *'
| |-ParmVarDecl 0x1e4aab18438 <col:117, col:121> col:121 _Mode 'int'
| `-ParmVarDecl 0x1e4aab184b0 <col:133, col:140> col:140 _Size 'size_t':'unsigned long long'
|-FunctionDecl 0x1e4aab18b40 <line:297:40, col:213> col:52 _snprintf_s 'int (char *, size_t, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, ...)'
| |-ParmVarDecl 0x1e4aab187b0 <col:93, col:100> col:100 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab18828 <col:114, col:121> col:121 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab188a0 <col:140, col:147> col:147 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab18920 <col:188, col:201> col:201 _Format 'const char *'
|-FunctionDecl 0x1e4aab12ef0 <line:300:40, col:188> col:52 sprintf_s 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1e4aab18c30 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab18ca8 <col:112, col:119> col:119 _SizeInBytes 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab18d28 <col:163, col:176> col:176 _Format 'const char *'
|-FunctionDecl 0x1e4aab130b8 <line:303:24, col:101> col:36 _scprintf 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1e4aab12fd8 <col:76, col:89> col:89 _Format 'const char *'
|-FunctionDecl 0x1e4aab13490 <line:304:70> col:70 implicit sscanf 'int (const char *restrict, const char *restrict, ...)' extern
| |-ParmVarDecl 0x1e4aab13530 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1e4aab13598 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| `-FormatAttr 0x1e4aab13610 <col:70> Implicit scanf 2 3
|-FunctionDecl 0x1e4aab13678 prev 0x1e4aab13490 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:304:157> col:70 sscanf 'int (const char *restrict, const char *restrict, ...)'
| |-ParmVarDecl 0x1e4aab13250 <col:84, col:97> col:97 _Src 'const char *'
| |-ParmVarDecl 0x1e4aab132d0 <col:132, col:145> col:145 _Format 'const char *'
| |-FormatAttr 0x1e4aab13858 <col:70> Inherited scanf 2 3
| `-DeprecatedAttr 0x1e4aab13728 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab13c48 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:305:205> col:77 _sscanf_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab13968 <col:94, col:107> col:107 _Src 'const char *'
| |-ParmVarDecl 0x1e4aab139e8 <col:152, col:165> col:165 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab13a60 <col:183, col:193> col:193 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e4aab13d00 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab1b070 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:309:40, col:143> col:52 sscanf_s 'int (const char *, const char *, ...) __attribute__((cdecl))':'int (const char *, const char *, ...)'
| |-ParmVarDecl 0x1e4aab13e48 <col:68, col:81> col:81 _Src 'const char *'
| `-ParmVarDecl 0x1e4aab1af70 <col:118, col:131> col:131 _Format 'const char *'
|-FunctionDecl 0x1e4aab1b368 <line:311:40, col:184> col:52 _sscanf_s_l 'int (const char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab1b150 <col:71, col:84> col:84 _Src 'const char *'
| |-ParmVarDecl 0x1e4aab1b1d0 <col:131, col:144> col:144 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab1b248 <col:162, col:172> col:172 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab1b7f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:312:217> col:76 _snscanf 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1e4aab1b510 <col:121, col:134> col:134 _Src 'const char *'
| |-ParmVarDecl 0x1e4aab1b588 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab1b608 <col:192, col:205> col:205 _Format 'const char *'
| `-DeprecatedAttr 0x1e4aab1b8b0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab1be80 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:313:259> col:78 _snscanf_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab1baf0 <col:125, col:138> col:138 _Src 'const char *'
| |-ParmVarDecl 0x1e4aab1bb68 <col:149, col:156> col:156 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab1bbe8 <col:206, col:219> col:219 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab1bc60 <col:237, col:247> col:247 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e4aab16f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab17290 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:314:40, col:197> col:52 _snscanf_s 'int (const char *, size_t, const char *, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1e4aab17078 <col:99, col:112> col:112 _Src 'const char *'
| |-ParmVarDecl 0x1e4aab170f0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab17170 <col:172, col:185> col:185 _Format 'const char *'
|-FunctionDecl 0x1e4aab17628 <line:315:40, col:237> col:52 _snscanf_s_l 'int (const char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab17378 <col:101, col:114> col:114 _Src 'const char *'
| |-ParmVarDecl 0x1e4aab173f0 <col:125, col:132> col:132 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab17470 <col:184, col:197> col:197 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab174e8 <col:215, col:225> col:225 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab17888 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:317:86> col:74 tmpfile 'FILE *(void) __attribute__((cdecl))':'FILE *(void)'
| `-DeprecatedAttr 0x1e4aab17928 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpfile_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab17be0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:319:28, col:96> col:44 tmpfile_s 'errno_t (FILE **) __attribute__((cdecl))':'errno_t (FILE **)'
| `-ParmVarDecl 0x1e4aab17a70 <col:83, col:91> col:91 _File 'FILE **'
|-FunctionDecl 0x1e4aab18f50 <line:320:28, col:106> col:44 tmpnam_s 'errno_t (char *, rsize_t) __attribute__((cdecl))':'errno_t (char *, rsize_t)'
| |-ParmVarDecl 0x1e4aab17cb8 <col:75, col:82> col:82 _Buf 'char *'
| `-ParmVarDecl 0x1e4aab17d30 <col:93, col:101> col:101 _Size 'rsize_t':'unsigned long long'
|-FunctionDecl 0x1e4aab191d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:323:79 tmpnam 'char *(char *) __attribute__((cdecl))':'char *(char *)'
| |-ParmVarDecl 0x1e4aab190f0 <col:113, col:119> col:119 _Buffer 'char *'
| `-DeprecatedAttr 0x1e4aab19278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using tmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab19538 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:324:28, col:81> col:40 ungetc 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1e4aab193c0 <col:52, col:56> col:56 _Ch 'int'
| `-ParmVarDecl 0x1e4aab19438 <col:69, col:76> col:76 _File 'FILE *'
|-FunctionDecl 0x1e4aab19950 <line:325:40> col:40 implicit vfprintf 'int (FILE *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1e4aab199f0 <<invalid sloc>> <invalid sloc> 'FILE *'
| |-ParmVarDecl 0x1e4aab19a58 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1e4aab19ac0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1e4aab19b40 <col:40> Implicit printf 2 0
|-FunctionDecl 0x1e4aab19ba8 prev 0x1e4aab19950 <col:28, col:139> col:40 vfprintf 'int (FILE *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1e4aab19610 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab19690 <col:101, col:114> col:114 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab19708 <col:123, col:131> col:131 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1e4aab19ca8 <col:40> Inherited printf 2 0
|-FunctionDecl 0x1e4aab19f60 <line:326:40> col:40 implicit vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1e4aab1a000 <<invalid sloc>> <invalid sloc> 'FILE *restrict'
| |-ParmVarDecl 0x1e4aab1a068 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1e4aab1a0d0 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1e4aab1a150 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1e4aab1a1b8 prev 0x1e4aab19f60 <col:28, col:138> col:40 vfscanf 'int (FILE *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1e4aab19cf0 <col:56, col:63> col:63 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab19d70 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab19de8 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1e4aab1a2b8 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1e4aab1a518 <line:328:28, col:141> col:40 vfprintf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1e4aab1a300 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab1a380 <col:103, col:116> col:116 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab1a3f8 <col:125, col:133> col:133 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab1a810 <line:329:28, col:140> col:40 vfscanf_s 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1e4aab1a5f8 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab1a678 <col:102, col:115> col:115 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab1a6f0 <col:124, col:132> col:132 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab1ab58 <line:331:40> col:40 implicit vprintf 'int (const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1e4aab1abf8 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1e4aab1ac60 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1e4aab1acd8 <col:40> Implicit printf 1 0
|-FunctionDecl 0x1e4aab1ad40 prev 0x1e4aab1ab58 <col:28, col:116> col:40 vprintf 'int (const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1e4aab1a8f8 <col:78, col:91> col:91 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab1a970 <col:100, col:108> col:108 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1e4aab1ae38 <col:40> Inherited printf 1 0
|-FunctionDecl 0x1e4aab14038 <line:332:40> col:40 implicit vscanf 'int (const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1e4aab140d8 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1e4aab14140 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1e4aab141b8 <col:40> Implicit scanf 1 0
|-FunctionDecl 0x1e4aab14220 prev 0x1e4aab14038 <col:28, col:115> col:40 vscanf 'int (const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1e4aab1ae88 <col:77, col:90> col:90 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab13f00 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1e4aab14318 <col:40> Inherited scanf 1 0
|-FunctionDecl 0x1e4aab144e0 <line:334:28, col:118> col:40 vprintf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1e4aab14368 <col:80, col:93> col:93 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab143e0 <col:102, col:110> col:110 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab14738 <line:335:28, col:117> col:40 vscanf_s 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1e4aab145c0 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab14638 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab14c98 <line:337:77> col:77 implicit vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1e4aab14d38 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e4aab14da0 <<invalid sloc>> <invalid sloc> 'unsigned long long'
| |-ParmVarDecl 0x1e4aab14e08 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1e4aab14e70 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1e4aab22ff0 <col:77> Implicit printf 3 0
|-FunctionDecl 0x1e4aab23058 prev 0x1e4aab14c98 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:337:218> col:77 vsnprintf 'int (char *, unsigned long long, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1e4aab148d8 <col:111, col:118> col:118 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab14950 <col:132, col:139> col:139 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab149d0 <col:180, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab14a48 <col:202, col:210> col:210 _ArgList 'va_list':'char *'
| |-FormatAttr 0x1e4aab23248 <col:77> Inherited printf 3 0
| `-DeprecatedAttr 0x1e4aab23118 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab236b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:339:28, col:206> col:40 vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1e4aab23298 <col:77, col:84> col:84 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab23310 <col:98, col:105> col:105 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab23388 <col:120, col:127> col:127 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab23408 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab23480 <col:190, col:198> col:198 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab23af8 <line:342:40, col:227> col:52 _vsnprintf_s 'int (char *, size_t, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1e4aab237b0 <col:94, col:101> col:101 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab23828 <col:115, col:122> col:122 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab238a0 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab23920 <col:189, col:202> col:202 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab23998 <col:211, col:219> col:219 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab23ec8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:89 _snprintf 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1e4aab23cb0 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1e4aab23d28 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab23da8 <col:246, col:260> col:260 _Format 'const char *'
| `-DeprecatedAttr 0x1e4aab23f80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab20430 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:346:100 _vsnprintf 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1e4aab20180 <col:182, col:188> col:188 _Dest 'char *'
| |-ParmVarDecl 0x1e4aab201f8 <col:200, col:208> col:208 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab20278 <col:246, col:260> col:260 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab202f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1e4aab204f0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab208e8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:349:21, col:183> col:33 vsprintf_s 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1e4aab20638 <col:73, col:80> col:80 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab206b0 <col:94, col:101> col:101 _SizeInBytes 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab20730 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab207a8 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab20ca8 <line:351:40, col:149> col:52 vsscanf_s 'int (const char *, const char *, va_list) __attribute__((cdecl))':'int (const char *, const char *, va_list)'
| |-ParmVarDecl 0x1e4aab209d8 <col:62, col:75> col:75 _Src 'const char *'
| |-ParmVarDecl 0x1e4aab20a58 <col:111, col:124> col:124 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab20ad0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab1c020 <line:356:85> col:85 implicit sprintf 'int (char *, const char *, ...)' extern
| |-ParmVarDecl 0x1e4aab1c0c0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e4aab1c128 <<invalid sloc>> <invalid sloc> 'const char *'
| `-FormatAttr 0x1e4aab1c1a0 <col:85> Implicit printf 2 3
|-FunctionDecl 0x1e4aab1c208 prev 0x1e4aab1c020 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:85 sprintf 'int (char *, const char *, ...)'
| |-ParmVarDecl 0x1e4aab20e50 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1e4aab20ed0 <col:171, col:185> col:185 _Format 'const char *'
| |-FormatAttr 0x1e4aab1c3e8 <col:85> Inherited printf 2 3
| `-DeprecatedAttr 0x1e4aab1c2b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using sprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab1c810 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> col:94 implicit vsprintf 'int (char *, const char *, __builtin_va_list)' extern
| |-ParmVarDecl 0x1e4aab1c8b0 <<invalid sloc>> <invalid sloc> 'char *'
| |-ParmVarDecl 0x1e4aab1c918 <<invalid sloc>> <invalid sloc> 'const char *'
| |-ParmVarDecl 0x1e4aab1c980 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1e4aab1ca00 <col:94> Implicit printf 2 0
|-FunctionDecl 0x1e4aab1ca68 prev 0x1e4aab1c810 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94 vsprintf 'int (char *, const char *, __builtin_va_list)'
| |-ParmVarDecl 0x1e4aab1c4f8 <col:128, col:134> col:134 _Dest 'char *'
| |-ParmVarDecl 0x1e4aab1c578 <col:171, col:185> col:185 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab1c5f0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-FormatAttr 0x1e4aab1cc50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:356:94> Inherited printf 2 0
| `-DeprecatedAttr 0x1e4aab1cb20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using vsprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab24000 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:357:40> col:40 implicit vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)' extern
| |-ParmVarDecl 0x1e4aab240a0 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1e4aab24108 <<invalid sloc>> <invalid sloc> 'const char *restrict'
| |-ParmVarDecl 0x1e4aab24170 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'
| `-FormatAttr 0x1e4aab241f0 <col:40> Implicit scanf 2 0
|-FunctionDecl 0x1e4aab24258 prev 0x1e4aab24000 <col:28, col:138> col:40 vsscanf 'int (const char *restrict, const char *restrict, __builtin_va_list)'
| |-ParmVarDecl 0x1e4aab1cca0 <col:48, col:61> col:61 _srcBuf 'const char *'
| |-ParmVarDecl 0x1e4aab1cd20 <col:100, col:113> col:113 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab1cd98 <col:122, col:130> col:130 _ArgList 'va_list':'char *'
| `-FormatAttr 0x1e4aab24358 <col:40> Inherited scanf 2 0
|-FunctionDecl 0x1e4aab24520 <line:359:24, col:115> col:36 _vscprintf 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1e4aab243a8 <col:77, col:90> col:90 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab24420 <col:99, col:107> col:107 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab24818 <line:360:28, col:170> col:40 _snprintf_c 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1e4aab24600 <col:76, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab24678 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab246f8 <col:145, col:158> col:158 _Format 'const char *'
|-FunctionDecl 0x1e4aab24bb0 <line:361:28, col:183> col:40 _vsnprintf_c 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1e4aab24900 <col:77, col:83> col:83 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab24978 <col:97, col:104> col:104 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab249f8 <col:145, col:158> col:158 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab24a70 <col:167, col:175> col:175 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab24e18 <line:363:28, col:128> col:40 _fprintf_p 'int (FILE *, const char *, ...) __attribute__((cdecl))':'int (FILE *, const char *, ...)'
| |-ParmVarDecl 0x1e4aab24c98 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1e4aab24d18 <col:103, col:116> col:116 _Format 'const char *'
|-FunctionDecl 0x1e4aab1efb0 <line:364:28, col:105> col:40 _printf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1e4aab24ef8 <col:80, col:93> col:93 _Format 'const char *'
|-FunctionDecl 0x1e4aab1f2a0 <line:365:28, col:168> col:40 _sprintf_p 'int (char *, size_t, const char *, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, ...)'
| |-ParmVarDecl 0x1e4aab1f088 <col:77, col:84> col:84 _Dst 'char *'
| |-ParmVarDecl 0x1e4aab1f100 <col:95, col:102> col:102 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab1f180 <col:143, col:156> col:156 _Format 'const char *'
|-FunctionDecl 0x1e4aab1f598 <line:366:28, col:142> col:40 _vfprintf_p 'int (FILE *, const char *, va_list) __attribute__((cdecl))':'int (FILE *, const char *, va_list)'
| |-ParmVarDecl 0x1e4aab1f380 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab1f400 <col:104, col:117> col:117 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab1f478 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab1f7f8 <line:367:28, col:119> col:40 _vprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1e4aab1f680 <col:81, col:94> col:94 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab1f6f8 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab1fb88 <line:368:28, col:182> col:40 _vsprintf_p 'int (char *, size_t, const char *, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, va_list)'
| |-ParmVarDecl 0x1e4aab1f8d8 <col:78, col:85> col:85 _Dst 'char *'
| |-ParmVarDecl 0x1e4aab1f950 <col:96, col:103> col:103 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab1f9d0 <col:144, col:157> col:157 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab1fa48 <col:166, col:174> col:174 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab1fd58 <line:369:24, col:103> col:36 _scprintf_p 'int (const char *, ...) __attribute__((cdecl))':'int (const char *, ...)'
| `-ParmVarDecl 0x1e4aab1fc78 <col:78, col:91> col:91 _Format 'const char *'
|-FunctionDecl 0x1e4aab25010 <line:370:24, col:117> col:36 _vscprintf_p 'int (const char *, va_list) __attribute__((cdecl))':'int (const char *, va_list)'
| |-ParmVarDecl 0x1e4aab1fe30 <col:79, col:92> col:92 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab1fea8 <col:101, col:109> col:109 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab251d0 <line:371:9, col:61> col:21 _set_printf_count_output 'int (int) __attribute__((cdecl))':'int (int)'
| `-ParmVarDecl 0x1e4aab250f0 <col:51, col:55> col:55 _Value 'int'
|-FunctionDecl 0x1e4aab25360 <line:372:9, col:50> col:21 _get_printf_count_output 'int (void) __attribute__((cdecl))':'int (void)'
|-FunctionDecl 0x1e4aab255a8 <line:374:28, col:143> col:40 _printf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab25430 <col:90, col:103> col:103 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab254a8 <col:121, col:131> col:131 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab25800 <line:375:28, col:145> col:40 _printf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab25688 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab25700 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab25a58 <line:376:28, col:145> col:40 _printf_s_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab258e0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab25958 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab25e08 <line:377:28, col:157> col:40 _vprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab25b38 <col:91, col:104> col:104 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab25bb0 <col:122, col:132> col:132 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab25c28 <col:141, col:149> col:149 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab210f0 <line:378:28, col:159> col:40 _vprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab25ef0 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab25f68 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab20fd0 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab213e8 <line:379:28, col:159> col:40 _vprintf_s_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab211d8 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab21250 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab212c8 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab216e0 <line:381:28, col:166> col:40 _fprintf_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab214c8 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab21548 <col:113, col:126> col:126 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab215c0 <col:144, col:154> col:154 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab219d8 <line:382:28, col:168> col:40 _fprintf_p_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab217c0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab21840 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab218b8 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab21cd0 <line:383:28, col:168> col:40 _fprintf_s_l 'int (FILE *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab21ab8 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab21b38 <col:115, col:128> col:128 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab21bb0 <col:146, col:156> col:156 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab1e100 <line:384:28, col:147> col:40 _vfprintf_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab21db0 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab21e30 <col:81, col:94> col:94 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab21ea8 <col:112, col:122> col:122 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab21f20 <col:131, col:139> col:139 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab1e498 <line:385:28, col:149> col:40 _vfprintf_p_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab1e1e8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab1e268 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab1e2e0 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab1e358 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab1e830 <line:386:28, col:149> col:40 _vfprintf_s_l 'int (FILE *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab1e580 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab1e600 <col:83, col:96> col:96 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab1e678 <col:114, col:124> col:124 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab1e6f0 <col:133, col:141> col:141 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab1ecc8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:388:221> col:78 _sprintf_l 'int (char *, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab1e9e0 <col:112, col:119> col:119 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab1ea60 <col:168, col:181> col:181 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab1ead8 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e4aab1ed80 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _sprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab26330 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:389:28, col:211> col:40 _sprintf_p_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab1eec8 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab26020 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab260a0 <col:158, col:171> col:171 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab26118 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab266d0 <line:390:40, col:221> col:52 _sprintf_s_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab26420 <col:90, col:97> col:97 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab26498 <col:111, col:118> col:118 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab26518 <col:168, col:181> col:181 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab26590 <col:199, col:209> col:209 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab26c20 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:391:195> col:79 _vsprintf_l 'int (char *, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab268c0 <col:114, col:121> col:121 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab26940 <col:137, col:150> col:150 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab269b8 <col:168> col:177 '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1e4aab26a30 <col:179, col:187> col:187 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1e4aab26ce0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab27268 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:392:28, col:225> col:40 _vsprintf_p_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab26e28 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab26ea0 <col:101, col:108> col:108 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab26f20 <col:159, col:171> col:171 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab26f98 <col:189, col:199> col:199 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab27030 <col:209, col:217> col:217 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab276a8 <line:393:40, col:235> col:52 _vsprintf_s_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab27360 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab273d8 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab27458 <col:169, col:182> col:182 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab274d0 <col:200, col:210> col:210 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab27548 <col:219, col:227> col:227 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab27918 <line:395:28, col:145> col:40 _scprintf_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab277a0 <col:92, col:105> col:105 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab27818 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab27b70 <line:396:28, col:147> col:40 _scprintf_p_l 'int (const char *, _locale_t, ...) __attribute__((cdecl))':'int (const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab279f8 <col:94, col:107> col:107 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab27a70 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab27e60 <line:397:28, col:159> col:40 _vscprintf_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab27c50 <col:93, col:106> col:106 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab27cc8 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab27d40 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab22110 <line:398:28, col:161> col:40 _vscprintf_p_l 'int (const char *, _locale_t, va_list) __attribute__((cdecl))':'int (const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab27f48 <col:95, col:108> col:108 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab27fc0 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab21ff0 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab22568 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:400:247> col:79 _snprintf_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab222b8 <col:115, col:122> col:122 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab22330 <col:136, col:143> col:143 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab223b0 <col:194, col:207> col:207 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab22428 <col:225, col:235> col:235 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e4aab22628 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab22a20 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:401:28, col:210> col:40 _snprintf_c_l 'int (char *, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab22770 <col:78, col:85> col:85 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab227e8 <col:99, col:106> col:106 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab22868 <col:157, col:170> col:170 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab228e0 <col:188, col:198> col:198 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab28040 <line:402:40, col:245> col:52 _snprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, ...) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab22b10 <col:91, col:98> col:98 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab22b88 <col:112, col:119> col:119 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab22c00 <col:134, col:141> col:141 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab22c80 <col:192, col:205> col:205 _Format 'const char *'
| `-ParmVarDecl 0x1e4aab22cf8 <col:223, col:233> col:233 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab28580 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:403:262> col:80 _vsnprintf_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab28238 <col:117, col:124> col:124 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab282b0 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab28330 <col:196, col:209> col:209 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab283a8 <col:227, col:237> col:237 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1e4aab28420 <col:246, col:254> col:254 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1e4aab28648 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab28ac8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:404:28, col:176> col:40 _vsnprintf_c_l 'int (char *, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab28798 <col:79, col:86> col:86 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab28810 <col:100, col:107> col:107 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab28890 <col:118, col:129> col:130 'const char *'
| |-ParmVarDecl 0x1e4aab28908 <col:141, col:151> col:151 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab28980 <col:160, col:168> col:168 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab2c0e0 <line:405:28, col:245> col:40 _vsnprintf_s_l 'int (char *, size_t, size_t, const char *, _locale_t, va_list) __attribute__((cdecl))':'int (char *, size_t, size_t, const char *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab28bc0 <col:80, col:87> col:87 _DstBuf 'char *'
| |-ParmVarDecl 0x1e4aab28c38 <col:101, col:108> col:108 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab28cb0 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab28d30 <col:181, col:193> col:193 _Format 'const char *'
| |-ParmVarDecl 0x1e4aab28da8 <col:210, col:220> col:220 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab28e20 <col:229, col:237> col:237 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab2c4a0 <line:415:24, col:128> col:39 _wfsopen 'FILE *(const wchar_t *, const wchar_t *, int) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, int)'
| |-ParmVarDecl 0x1e4aab2c1d8 <col:55, col:71> col:71 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab2c250 <col:89, col:105> col:105 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab2c2d0 <col:117, col:121> col:121 _ShFlag 'int'
|-FunctionDecl 0x1e4aab2c710 <line:417:28, col:70> col:43 fgetwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1e4aab2c5a0 <col:58, col:65> col:65 _File 'FILE *'
|-FunctionDecl 0x1e4aab2c928 <line:418:28, col:58> col:43 _fgetwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1e4aab2cc08 <line:419:28, col:88> col:43 fputwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1e4aab2c9f0 <col:55, col:63> col:63 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1e4aab2ca68 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1e4aab2ce50 <line:420:28, col:70> col:43 _fputwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1e4aab2cce0 <col:59, col:67> col:67 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1e4aab2d090 <line:421:24, col:65> col:39 getwc 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1e4aab2cf20 <col:53, col:60> col:60 _File 'FILE *'
|-FunctionDecl 0x1e4aab2d218 <line:422:24, col:52> col:39 getwchar 'wint_t (void) __attribute__((cdecl))':'wint_t (void)'
|-FunctionDecl 0x1e4aab2d450 <line:423:28, col:87> col:43 putwc 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1e4aab2d2e0 <col:54, col:62> col:62 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1e4aab2d358 <col:75, col:82> col:82 _File 'FILE *'
|-FunctionDecl 0x1e4aab2d600 <line:424:28, col:68> col:43 putwchar 'wint_t (wchar_t) __attribute__((cdecl))':'wint_t (wchar_t)'
| `-ParmVarDecl 0x1e4aab2d528 <col:57, col:65> col:65 _Ch 'wchar_t':'unsigned short'
|-FunctionDecl 0x1e4aab2d8a8 <line:425:28, col:88> col:43 ungetwc 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1e4aab2d6d0 <col:56, col:63> col:63 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1e4aab2d748 <col:76, col:83> col:83 _File 'FILE *'
|-FunctionDecl 0x1e4aab2dc50 <line:427:28, col:141> col:46 fgetws 'wchar_t *(wchar_t *, int, FILE *) __attribute__((cdecl))':'wchar_t *(wchar_t *, int, FILE *)'
| |-ParmVarDecl 0x1e4aab2d980 <col:82, col:92> col:92 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e4aab2da00 <col:103, col:107> col:107 _SizeInWords 'int'
| `-ParmVarDecl 0x1e4aab2da78 <col:129, col:136> col:136 _File 'FILE *'
|-FunctionDecl 0x1e4aab2df50 <line:428:28, col:96> col:40 fputws 'int (const wchar_t *, FILE *) __attribute__((cdecl))':'int (const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1e4aab2dd30 <col:54, col:70> col:70 _Str 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab2dda8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1e4aab2a218 <line:429:28, col:124> col:46 _getws_s 'wchar_t *(wchar_t *, size_t) __attribute__((cdecl))':'wchar_t *(wchar_t *, size_t)'
| |-ParmVarDecl 0x1e4aab2e028 <col:84, col:94> col:94 _Str 'wchar_t *'
| `-ParmVarDecl 0x1e4aab2a070 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1e4aab2a520 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:431:83 _getws 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e4aab2a3b0 <col:115, col:124> col:124 _String 'wchar_t *'
| `-DeprecatedAttr 0x1e4aab2a5c8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _getws_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab2a888 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:432:28, col:74> col:40 _putws 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1e4aab2a708 <col:54, col:70> col:70 _Str 'const wchar_t *'
|-FunctionDecl 0x1e4aab2ab90 <line:434:28, col:129> col:40 fwprintf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab2a958 <col:57, col:64> col:64 _File 'FILE *'
| `-ParmVarDecl 0x1e4aab2a9d0 <col:101, col:117> col:117 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab2ade0 <line:436:28, col:131> col:40 fwprintf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab2ac68 <col:59, col:66> col:66 _File 'FILE *'
| `-ParmVarDecl 0x1e4aab2ace0 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab2b070 <line:438:28, col:106> col:40 wprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1e4aab2aeb8 <col:78, col:94> col:94 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab2b220 <line:440:28, col:108> col:40 wprintf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1e4aab2b140 <col:80, col:96> col:96 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab2b3d0 <line:442:24, col:105> col:36 _scwprintf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1e4aab2b2f0 <col:77, col:93> col:93 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab2b768 <line:443:28, col:143> col:40 vfwprintf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab2b4a0 <col:58, col:65> col:65 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab2b518 <col:102, col:118> col:118 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab2b590 <col:127, col:135> col:135 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab2ba58 <line:444:28, col:142> col:40 vfwscanf 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab2b848 <col:57, col:64> col:64 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab2b8c0 <col:101, col:117> col:117 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab2b938 <col:126, col:134> col:134 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab2bd48 <line:446:28, col:145> col:40 vfwprintf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab2bb38 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab2bbb0 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab2bc28 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab2f0b0 <line:447:28, col:144> col:40 vfwscanf_s 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab2be28 <col:59, col:66> col:66 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab2bea0 <col:103, col:119> col:119 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab2bf18 <col:128, col:136> col:136 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab2f3b0 <line:449:28, col:120> col:40 vwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab2f190 <col:79, col:95> col:95 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab2f208 <col:104, col:112> col:112 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab2f600 <line:450:28, col:119> col:40 vwscanf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab2f488 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab2f500 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab2f850 <line:452:28, col:122> col:40 vwprintf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab2f6d8 <col:81, col:97> col:97 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab2f750 <col:106, col:114> col:114 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab2faa0 <line:453:28, col:121> col:40 vwscanf_s 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab2f928 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab2f9a0 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab2fe58 <line:457:21, col:173> col:33 swprintf_s 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab2fb78 <col:73, col:83> col:83 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e4aab2fbf0 <col:94, col:101> col:101 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab2fc68 <col:145, col:161> col:161 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab29260 <line:461:21, col:187> col:33 vswprintf_s 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab2ff38 <col:74, col:84> col:84 _Dst 'wchar_t *'
| |-ParmVarDecl 0x1e4aab2ffb0 <col:95, col:102> col:102 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab30028 <col:146, col:162> col:162 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab29050 <col:171, col:179> col:179 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab29618 <line:462:40, col:156> col:52 vswscanf_s 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab29348 <col:63, col:79> col:79 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab293c0 <col:115, col:131> col:131 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab29438 <col:140, col:148> col:148 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab29908 <line:466:28, col:145> col:40 vswscanf 'int (const wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab296f8 <col:49, col:65> col:65 _srcBuf 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab29770 <col:104, col:120> col:120 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab297e8 <col:129, col:137> col:137 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab29bf8 <line:468:28, col:184> col:40 _swprintf_c 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab299e8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab29a60 <col:105, col:112> col:112 _SizeInWords 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab29ad8 <col:156, col:172> col:172 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab29f80 <line:469:28, col:198> col:40 _vswprintf_c 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab29cd8 <col:82, col:92> col:92 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab29d50 <col:106, col:113> col:113 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab29dc8 <col:157, col:173> col:173 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab29e40 <col:182, col:190> col:190 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab30470 <line:471:40, col:220> col:52 _snwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab300e8 <col:94, col:104> col:104 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab30160 <col:118, col:125> col:125 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab301d8 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab30250 <col:192, col:208> col:208 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab30978 <line:473:40, col:234> col:52 _vsnwprintf_s 'int (wchar_t *, size_t, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab30558 <col:95, col:105> col:105 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab305d0 <col:119, col:126> col:126 _SizeInWords 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab30648 <col:145, col:152> col:152 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab306c0 <col:193, col:209> col:209 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab30738 <col:218, col:226> col:226 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab30d38 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:2003:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:89 _snwprintf 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab30b28 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e4aab30ba0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab30c18 <col:254, col:271> col:271 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1e4aab30df0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab31300 <col:36, line:2004:164> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:477:101 _vsnwprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab30ff0 <col:187, col:196> col:196 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e4aab310d0 <col:208, col:216> col:216 _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab31148 <col:254, col:271> col:271 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab311c0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:2004:151, col:159> col:159 _Args 'va_list':'char *'
| `-DeprecatedAttr 0x1e4aab313c0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab31678 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:480:28, col:132> col:40 _fwprintf_p 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab31500 <col:60, col:67> col:67 _File 'FILE *'
| `-ParmVarDecl 0x1e4aab31578 <col:104, col:120> col:120 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab31830 <line:481:28, col:109> col:40 _wprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1e4aab31750 <col:81, col:97> col:97 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab31b10 <line:482:28, col:146> col:40 _vfwprintf_p 'int (FILE *, const wchar_t *, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab31900 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab31978 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab319f0 <col:130, col:138> col:138 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab31d68 <line:483:28, col:123> col:40 _vwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab31bf0 <col:82, col:98> col:98 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab31c68 <col:107, col:115> col:115 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab37f60 <line:484:28, col:178> col:40 _swprintf_p 'int (wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab31e40 <col:78, col:88> col:88 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab31eb8 <col:102, col:109> col:109 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab31f30 <col:150, col:166> col:166 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab382e8 <line:485:28, col:192> col:40 _vswprintf_p 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab38040 <col:79, col:89> col:89 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab380b8 <col:103, col:110> col:110 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab38130 <col:151, col:167> col:167 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab381a8 <col:176, col:184> col:184 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab384b0 <line:486:24, col:107> col:36 _scwprintf_p 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1e4aab383d0 <col:79, col:95> col:95 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab386f8 <line:487:24, col:121> col:36 _vscwprintf_p 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab38580 <col:80, col:96> col:96 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab385f8 <col:105, col:113> col:113 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab38a00 <line:489:28, col:147> col:40 _wprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab387d0 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab38848 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab38c50 <line:490:28, col:149> col:40 _wprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab38ad8 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab38b50 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab38ea0 <line:491:28, col:149> col:40 _wprintf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab38d28 <col:93, col:109> col:109 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab38da0 <col:127, col:137> col:137 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab39268 <line:492:28, col:161> col:40 _vwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab38f98 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab39010 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab39088 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab39558 <line:493:28, col:163> col:40 _vwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab39348 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab393c0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab39438 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab39848 <line:494:28, col:163> col:40 _vwprintf_s_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab39638 <col:94, col:110> col:110 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab396b0 <col:128, col:138> col:138 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab39728 <col:147, col:155> col:155 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab39c08 <line:496:28, col:170> col:40 _fwprintf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab39928 <col:60, col:67> col:67 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab399a0 <col:114, col:130> col:130 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab39a18 <col:148, col:158> col:158 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab33f20 <line:497:28, col:172> col:40 _fwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab39ce8 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab39d60 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab39dd8 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab34210 <line:498:28, col:172> col:40 _fwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab34000 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab34078 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab340f0 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab34660 <line:499:28, col:184> col:40 _vfwprintf_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab342f0 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab34368 <col:115, col:131> col:131 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab343e0 <col:149, col:159> col:159 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab34458 <col:168, col:176> col:176 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab349f0 <line:500:28, col:186> col:40 _vfwprintf_p_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab34748 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab347c0 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab34838 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab348b0 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab34d80 <line:501:28, col:186> col:40 _vfwprintf_s_l 'int (FILE *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab34ad8 <col:63, col:70> col:70 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab34b50 <col:117, col:133> col:133 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab34bc8 <col:151, col:161> col:161 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab34c40 <col:170, col:178> col:178 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab37260 <line:503:28, col:218> col:40 _swprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab34e68 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab36f50 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab36fc8 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab37040 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab375f0 <line:504:28, col:218> col:40 _swprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab37348 <col:80, col:90> col:90 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab373c0 <col:104, col:111> col:111 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab37438 <col:162, col:178> col:178 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab374b0 <col:196, col:206> col:206 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab37980 <line:505:40, col:228> col:52 _swprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab376d8 <col:91, col:101> col:101 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab37750 <col:115, col:122> col:122 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab377c8 <col:172, col:188> col:188 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab37840 <col:206, col:216> col:216 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab37e88 <line:506:28, col:232> col:40 used _vswprintf_c_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab37a68 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab37ae0 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab37b58 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab37bd0 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab37c48 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab3a2e8 <line:507:28, col:232> col:40 _vswprintf_p_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab39fa8 <col:81, col:91> col:91 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab3a020 <col:105, col:112> col:112 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab3a098 <col:163, col:179> col:179 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3a110 <col:197, col:207> col:207 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab3a188 <col:216, col:224> col:224 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab3a718 <line:508:40, col:242> col:52 _vswprintf_s_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab3a3d8 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab3a450 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab3a4c8 <col:173, col:189> col:189 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3a540 <col:207, col:217> col:217 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab3a5b8 <col:226, col:234> col:234 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab3a980 <line:510:24, col:145> col:36 _scwprintf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab3a808 <col:89, col:105> col:105 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab3a880 <col:123, col:133> col:133 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab3abd0 <line:511:24, col:147> col:36 _scwprintf_p_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab3aa58 <col:91, col:107> col:107 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab3aad0 <col:125, col:135> col:135 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab3aeb8 <line:512:24, col:161> col:36 _vscwprintf_p_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab3aca8 <col:92, col:108> col:108 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3ad20 <col:126, col:136> col:136 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab3ad98 <col:145, col:153> col:153 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab3c338 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:514:255> col:80 _snwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab3c090 <col:117, col:127> col:127 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab3c108 <col:141, col:148> col:148 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab3c180 <col:199, col:215> col:215 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3c1f8 <col:233, col:243> col:243 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e4aab3c3f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab3c968 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:515:40, col:252> col:52 _snwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab3c540 <col:92, col:102> col:102 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab3c5b8 <col:116, col:123> col:123 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab3c630 <col:138, col:145> col:145 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab3c6a8 <col:196, col:212> col:212 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab3c720 <col:230, col:240> col:240 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab3cea0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:516:270> col:81 _vsnwprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab3cb60 <col:119, col:129> col:129 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab3cbd8 <col:143, col:150> col:150 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab3cc50 <col:201, col:217> col:217 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3ccc8 <col:235, col:245> col:245 _Locale '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1e4aab3cd40 <col:254, col:262> col:262 _ArgList 'va_list':'char *'
| `-DeprecatedAttr 0x1e4aab34f30 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _vsnwprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab35540 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:517:40, col:266> col:52 _vsnwprintf_s_l 'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, size_t, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab35078 <col:93, col:103> col:103 _DstBuf 'wchar_t *'
| |-ParmVarDecl 0x1e4aab350f0 <col:117, col:124> col:124 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab35168 <col:139, col:146> col:146 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab351e0 <col:197, col:213> col:213 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab35258 <col:231, col:241> col:241 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab352d0 <col:250, col:258> col:258 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab35a40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1957:138> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:110 _swprintf 'int (wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab35808 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e4aab35880 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-DeprecatedAttr 0x1e4aab35af0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1e4aab35c08 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1e4aab3d218 <col:36, line:1958:150> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:533:134 _vswprintf 'int (wchar_t *, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab35ec0 <col:183, col:192> col:192 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e4aab3cfc0 <col:229, col:246> col:246 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3d038 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1958:137, col:145> col:145 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1e4aab3d2d0 <line:275:47, col:63> "This function or variable may be unsafe. Consider using vswprintf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1e4aab3d3e8 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1e4aab3d988 <col:36, line:1961:152> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:110 __swprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab3d6a8 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e4aab3d720 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3d798 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-DeprecatedAttr 0x1e4aab3da40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using __swprintf_l_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1e4aab3db60 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1e4aab36150 <col:36, line:1962:166> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:534:124 __vswprintf_l 'int (wchar_t *, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab3de20 <col:211, col:220> col:220 _Dest 'wchar_t *'
| |-ParmVarDecl 0x1e4aab3de98 <col:267, col:284> col:284 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3df10 <col:293, col:304> col:304 _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1e4aab35f40 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:1962:153, col:161> col:161 _Args 'va_list':'char *'
| |-DeprecatedAttr 0x1e4aab36210 <line:275:47, col:63> "This function or variable may be unsafe. Consider using _vswprintf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
| `-DeprecatedAttr 0x1e4aab36330 <col:47, col:63> "swprintf has been changed to conform with the ISO C standard, adding an extra character count parameter. To use traditional Microsoft swprintf, set _CRT_NON_CONFORMING_SWPRINTFS." ""
|-FunctionDecl 0x1e4aab36638 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:36:1, line:44:1> line:36:21 swprintf 'int (wchar_t *, size_t, const wchar_t *, ...)' static inline
| |-ParmVarDecl 0x1e4aab36458 <col:53, col:63> col:63 used _String 'wchar_t *'
| |-ParmVarDecl 0x1e4aab364d0 <col:72, col:79> col:79 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab36548 <col:117, col:133> col:133 used _Format 'const wchar_t *'
| `-CompoundStmt 0x1e4aab3e260 <line:37:1, line:44:1>
|   |-DeclStmt 0x1e4aab36780 <line:38:5, col:21>
|   | `-VarDecl 0x1e4aab36718 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1e4aab36818 <line:39:5, col:13>
|   | `-VarDecl 0x1e4aab367b0 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1e4aab36b70 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1e4aab36b58 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1e4aab36a70 <col:34> '<builtin fn type>' Function 0x1e4aab36908 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1e4aab36aa8 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:40:19> 'va_list':'char *' lvalue Var 0x1e4aab36718 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1e4aab36ae0 <col:29> 'const wchar_t *' lvalue ParmVar 0x1e4aab36548 '_Format' 'const wchar_t *'
|   |-BinaryOperator 0x1e4aab36e30 <line:41:5, col:67> 'int' '='
|   | |-DeclRefExpr 0x1e4aab36ba0 <col:5> 'int' lvalue Var 0x1e4aab367b0 '_Ret' 'int'
|   | `-CallExpr 0x1e4aab36d70 <col:12, col:67> 'int'
|   |   |-ImplicitCastExpr 0x1e4aab36d58 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e4aab36bd8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1e4aab37e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1e4aab36db8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e4aab36bf8 <col:27> 'wchar_t *' lvalue ParmVar 0x1e4aab36458 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1e4aab36dd0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e4aab36c18 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1e4aab364d0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1e4aab36de8 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e4aab36c38 <col:44> 'const wchar_t *' lvalue ParmVar 0x1e4aab36548 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1e4aab36e00 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|   |   | `-ParenExpr 0x1e4aab36cc0 <col:17, col:27> 'void *'
|   |   |   `-CStyleCastExpr 0x1e4aab36c98 <col:18, col:26> 'void *' <NullToPointer>
|   |   |     `-IntegerLiteral 0x1e4aab36c58 <col:26> 'int' 0
|   |   `-ImplicitCastExpr 0x1e4aab36e18 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:41:59> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1e4aab36ce0 <col:59> 'va_list':'char *' lvalue Var 0x1e4aab36718 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1e4aab3e1f0 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1e4aab3e1d8 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1e4aab3e128 <col:34> '<builtin fn type>' Function 0x1e4aab3dfc0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1e4aab3e160 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:42:17> 'va_list':'char *' lvalue Var 0x1e4aab36718 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1e4aab3e250 <line:43:5, col:12>
|     `-ImplicitCastExpr 0x1e4aab3e238 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1e4aab3e218 <col:12> 'int' lvalue Var 0x1e4aab367b0 '_Ret' 'int'
|-FunctionDecl 0x1e4aab36908 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34> col:34 implicit used __builtin_va_start 'void (__builtin_va_list &, ...)' extern
| |-ParmVarDecl 0x1e4aab369a8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1e4aab36a18 <col:34> Implicit
|-FunctionDecl 0x1e4aab3dfc0 <line:27:34> col:34 implicit used __builtin_va_end 'void (__builtin_va_list &)' extern
| |-ParmVarDecl 0x1e4aab3e060 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'
| `-NoThrowAttr 0x1e4aab3e0d0 <col:34> Implicit
|-FunctionDecl 0x1e4aab3e558 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:49:1, line:52:1> line:49:31 vswprintf 'int (wchar_t *, size_t, const wchar_t *, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, va_list)' static inline
| |-ParmVarDecl 0x1e4aab3e2b0 <col:64, col:74> col:74 used _String 'wchar_t *'
| |-ParmVarDecl 0x1e4aab3e328 <col:83, col:90> col:90 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab3e3a0 <col:138, col:154> col:154 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3e418 <col:163, col:171> col:171 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1e4aab3e840 <line:50:1, line:52:1>
|   `-ReturnStmt 0x1e4aab3e830 <line:51:5, col:62>
|     `-CallExpr 0x1e4aab3e770 <col:12, col:62> 'int'
|       |-ImplicitCastExpr 0x1e4aab3e758 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1e4aab3e630 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1e4aab37e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1e4aab3e7b8 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1e4aab3e650 <col:27> 'wchar_t *' lvalue ParmVar 0x1e4aab3e2b0 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1e4aab3e7d0 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1e4aab3e670 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1e4aab3e328 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1e4aab3e7e8 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1e4aab3e690 <col:44> 'const wchar_t *' lvalue ParmVar 0x1e4aab3e3a0 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1e4aab3e800 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> '_locale_t':'struct localeinfo_struct *' <NullToPointer>
|       | `-ParenExpr 0x1e4aab3e718 <col:17, col:27> 'void *'
|       |   `-CStyleCastExpr 0x1e4aab3e6f0 <col:18, col:26> 'void *' <NullToPointer>
|       |     `-IntegerLiteral 0x1e4aab3e6b0 <col:26> 'int' 0
|       `-ImplicitCastExpr 0x1e4aab3e818 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:51:59> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1e4aab3e738 <col:59> 'va_list':'char *' lvalue ParmVar 0x1e4aab3e418 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1e4aab3eae0 <line:60:1, line:68:1> line:60:21 _swprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, ...)' static inline
| |-ParmVarDecl 0x1e4aab3e868 <col:56, col:66> col:66 used _String 'wchar_t *'
| |-ParmVarDecl 0x1e4aab3e8e0 <col:75, col:82> col:82 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab3e958 <col:130, col:146> col:146 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3e9d0 <col:155, col:165> col:165 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| `-CompoundStmt 0x1e4aab41098 <line:61:1, line:68:1>
|   |-DeclStmt 0x1e4aab3ec30 <line:62:5, col:21>
|   | `-VarDecl 0x1e4aab3ebc8 <col:5, col:13> col:13 used _Arglist 'va_list':'char *'
|   |-DeclStmt 0x1e4aab3ecc8 <line:63:5, col:13>
|   | `-VarDecl 0x1e4aab3ec60 <col:5, col:9> col:9 used _Ret 'int'
|   |-CallExpr 0x1e4aab3ed70 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:23:34, col:62> 'void'
|   | |-ImplicitCastExpr 0x1e4aab3ed58 <col:34> 'void (*)(__builtin_va_list &, ...)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1e4aab3ece0 <col:34> '<builtin fn type>' Function 0x1e4aab36908 '__builtin_va_start' 'void (__builtin_va_list &, ...)'
|   | |-DeclRefExpr 0x1e4aab3ed00 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:64:19> 'va_list':'char *' lvalue Var 0x1e4aab3ebc8 '_Arglist' 'va_list':'char *'
|   | `-DeclRefExpr 0x1e4aab3ed38 <col:29> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1e4aab3e9d0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |-BinaryOperator 0x1e4aab3ef70 <line:65:5, col:72> 'int' '='
|   | |-DeclRefExpr 0x1e4aab3eda0 <col:5> 'int' lvalue Var 0x1e4aab3ec60 '_Ret' 'int'
|   | `-CallExpr 0x1e4aab3eeb0 <col:12, col:72> 'int'
|   |   |-ImplicitCastExpr 0x1e4aab3ee98 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x1e4aab3edd8 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1e4aab37e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|   |   |-ImplicitCastExpr 0x1e4aab3eef8 <col:27> 'wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e4aab3edf8 <col:27> 'wchar_t *' lvalue ParmVar 0x1e4aab3e868 '_String' 'wchar_t *'
|   |   |-ImplicitCastExpr 0x1e4aab3ef10 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e4aab3ee18 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1e4aab3e8e0 '_Count' 'size_t':'unsigned long long'
|   |   |-ImplicitCastExpr 0x1e4aab3ef28 <col:44> 'const wchar_t *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e4aab3ee38 <col:44> 'const wchar_t *' lvalue ParmVar 0x1e4aab3e958 '_Format' 'const wchar_t *'
|   |   |-ImplicitCastExpr 0x1e4aab3ef40 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|   |   | `-DeclRefExpr 0x1e4aab3ee58 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1e4aab3e9d0 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|   |   `-ImplicitCastExpr 0x1e4aab3ef58 <col:64> 'va_list':'char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x1e4aab3ee78 <col:64> 'va_list':'char *' lvalue Var 0x1e4aab3ebc8 '_Arglist' 'va_list':'char *'
|   |-CallExpr 0x1e4aab41028 <D:\LLVM\lib\clang\10.0.0\include\vadefs.h:27:34, col:53> 'void'
|   | |-ImplicitCastExpr 0x1e4aab41010 <col:34> 'void (*)(__builtin_va_list &)' <BuiltinFnToFnPtr>
|   | | `-DeclRefExpr 0x1e4aab3ef90 <col:34> '<builtin fn type>' Function 0x1e4aab3dfc0 '__builtin_va_end' 'void (__builtin_va_list &)'
|   | `-DeclRefExpr 0x1e4aab40ff0 <D:\Microsoft Visual Studio 12.0\VC\include\swprintf.inl:66:17> 'va_list':'char *' lvalue Var 0x1e4aab3ebc8 '_Arglist' 'va_list':'char *'
|   `-ReturnStmt 0x1e4aab41088 <line:67:5, col:12>
|     `-ImplicitCastExpr 0x1e4aab41070 <col:12> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x1e4aab41050 <col:12> 'int' lvalue Var 0x1e4aab3ec60 '_Ret' 'int'
|-FunctionDecl 0x1e4aab41428 <line:73:1, line:76:1> line:73:31 _vswprintf_l 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' static inline
| |-ParmVarDecl 0x1e4aab410e8 <col:67, col:77> col:77 used _String 'wchar_t *'
| |-ParmVarDecl 0x1e4aab41160 <col:86, col:93> col:93 used _Count 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab411d8 <col:141, col:157> col:157 used _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab41250 <col:166, col:176> col:176 used _Plocinfo '_locale_t':'struct localeinfo_struct *'
| |-ParmVarDecl 0x1e4aab412c8 <col:187, col:195> col:195 used _Ap 'va_list':'char *'
| `-CompoundStmt 0x1e4aab416b0 <line:74:1, line:76:1>
|   `-ReturnStmt 0x1e4aab416a0 <line:75:5, col:67>
|     `-CallExpr 0x1e4aab415e0 <col:12, col:67> 'int'
|       |-ImplicitCastExpr 0x1e4aab415c8 <col:12> 'int (*)(wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x1e4aab41508 <col:12> 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)' Function 0x1e4aab37e88 '_vswprintf_c_l' 'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (wchar_t *, size_t, const wchar_t *, _locale_t, va_list)'
|       |-ImplicitCastExpr 0x1e4aab41628 <col:27> 'wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1e4aab41528 <col:27> 'wchar_t *' lvalue ParmVar 0x1e4aab410e8 '_String' 'wchar_t *'
|       |-ImplicitCastExpr 0x1e4aab41640 <col:36> 'size_t':'unsigned long long' <LValueToRValue>
|       | `-DeclRefExpr 0x1e4aab41548 <col:36> 'size_t':'unsigned long long' lvalue ParmVar 0x1e4aab41160 '_Count' 'size_t':'unsigned long long'
|       |-ImplicitCastExpr 0x1e4aab41658 <col:44> 'const wchar_t *' <LValueToRValue>
|       | `-DeclRefExpr 0x1e4aab41568 <col:44> 'const wchar_t *' lvalue ParmVar 0x1e4aab411d8 '_Format' 'const wchar_t *'
|       |-ImplicitCastExpr 0x1e4aab41670 <col:53> '_locale_t':'struct localeinfo_struct *' <LValueToRValue>
|       | `-DeclRefExpr 0x1e4aab41588 <col:53> '_locale_t':'struct localeinfo_struct *' lvalue ParmVar 0x1e4aab41250 '_Plocinfo' '_locale_t':'struct localeinfo_struct *'
|       `-ImplicitCastExpr 0x1e4aab41688 <col:64> 'va_list':'char *' <LValueToRValue>
|         `-DeclRefExpr 0x1e4aab415a8 <col:64> 'va_list':'char *' lvalue ParmVar 0x1e4aab412c8 '_Ap' 'va_list':'char *'
|-FunctionDecl 0x1e4aab418f8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:555:24, col:129> col:42 _wtempnam 'wchar_t *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'wchar_t *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e4aab416d8 <col:63, col:79> col:79 _Directory 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab41750 <col:102, col:118> col:118 _FilePrefix 'const wchar_t *'
|-FunctionDecl 0x1e4aab41b48 <line:561:24, col:119> col:36 _vscwprintf 'int (const wchar_t *, va_list) __attribute__((cdecl))':'int (const wchar_t *, va_list)'
| |-ParmVarDecl 0x1e4aab419d0 <col:78, col:94> col:94 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab41a48 <col:103, col:111> col:111 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab41e30 <line:562:24, col:159> col:36 _vscwprintf_l 'int (const wchar_t *, _locale_t, va_list) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, va_list)'
| |-ParmVarDecl 0x1e4aab41c20 <col:90, col:106> col:106 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab41c98 <col:124, col:134> col:134 _Locale '_locale_t':'struct localeinfo_struct *'
| `-ParmVarDecl 0x1e4aab41d10 <col:143, col:151> col:151 _ArgList 'va_list':'char *'
|-FunctionDecl 0x1e4aab43188 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:563:158> col:71 fwscanf 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab43010 <col:87, col:94> col:94 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab43088 <col:130, col:146> col:146 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1e4aab43238 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using fwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab43648 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:564:206> col:78 _fwscanf_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab43438 <col:97, col:104> col:104 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab434b0 <col:150, col:166> col:166 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab43528 <col:184, col:194> col:194 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e4aab43700 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _fwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab439b8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:568:28, col:131> col:40 fwscanf_s 'int (FILE *, const wchar_t *, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab43840 <col:58, col:65> col:65 _File 'FILE *'
| `-ParmVarDecl 0x1e4aab438b8 <col:103, col:119> col:119 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab43ca0 <line:570:28, col:172> col:40 _fwscanf_s_l 'int (FILE *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (FILE *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab43a90 <col:61, col:68> col:68 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab43b08 <col:116, col:132> col:132 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab43b80 <col:150, col:160> col:160 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab40050 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:571:165> col:71 swscanf 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab43e40 <col:86, col:102> col:102 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab43eb8 <col:137, col:153> col:153 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1e4aab40100 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using swscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab405d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:572:213> col:78 _swscanf_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab40300 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab40378 <col:157, col:173> col:173 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab403f0 <col:191, col:201> col:201 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e4aab40690 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _swscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab40948 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:574:40, col:149> col:52 swscanf_s 'int (const wchar_t *, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab407d0 <col:69, col:84> col:84 _Src 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab40848 <col:121, col:137> col:137 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab40c30 <line:576:40, col:191> col:52 _swscanf_s_l 'int (const wchar_t *, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab40a20 <col:72, col:88> col:88 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab40a98 <col:135, col:151> col:151 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab40b10 <col:169, col:179> col:179 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab46128 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:577:219> col:77 _snwscanf 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab40dd0 <col:117, col:133> col:133 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab40e48 <col:144, col:151> col:151 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab40ec0 <col:191, col:207> col:207 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1e4aab461e0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab46760 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:578:261> col:79 _snwscanf_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab463e0 <col:121, col:137> col:137 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab46458 <col:148, col:155> col:155 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab464d0 <col:205, col:221> col:221 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab46548 <col:239, col:249> col:249 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e4aab46820 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _snwscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab46b70 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:579:40, col:198> col:52 _snwscanf_s 'int (const wchar_t *, size_t, const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab46960 <col:94, col:110> col:110 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab469d8 <col:121, col:128> col:128 _MaxCount 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab46a50 <col:170, col:186> col:186 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab46ef8 <line:580:40, col:238> col:52 _snwscanf_s_l 'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, size_t, const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab46c50 <col:96, col:112> col:112 _Src 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab46cc8 <col:123, col:130> col:130 _MaxCount 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab46d40 <col:182, col:198> col:198 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab46db8 <col:216, col:226> col:226 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab441d0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:581:134> col:70 wscanf 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| |-ParmVarDecl 0x1e4aab440f0 <col:106, col:122> col:122 _Format 'const wchar_t *'
| `-DeprecatedAttr 0x1e4aab44278 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using wscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab445f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:582:182> col:77 _wscanf_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab44478 <col:126, col:142> col:142 _Format 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab444f0 <col:160, col:170> col:170 _Locale '_locale_t':'struct localeinfo_struct *'
| `-DeprecatedAttr 0x1e4aab446a0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wscanf_s_l instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab448c0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:584:40, col:120> col:52 wscanf_s 'int (const wchar_t *, ...) __attribute__((cdecl))':'int (const wchar_t *, ...)'
| `-ParmVarDecl 0x1e4aab447e0 <col:92, col:108> col:108 _Format 'const wchar_t *'
|-FunctionDecl 0x1e4aab44b08 <line:586:40, col:161> col:52 _wscanf_s_l 'int (const wchar_t *, _locale_t, ...) __attribute__((cdecl))':'int (const wchar_t *, _locale_t, ...)'
| |-ParmVarDecl 0x1e4aab44990 <col:105, col:121> col:121 _Format 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab44a08 <col:139, col:149> col:149 _Locale '_locale_t':'struct localeinfo_struct *'
|-FunctionDecl 0x1e4aab44e08 <line:589:24, col:99> col:39 _wfdopen 'FILE *(int, const wchar_t *) __attribute__((cdecl))':'FILE *(int, const wchar_t *)'
| |-ParmVarDecl 0x1e4aab44be8 <col:53, col:57> col:57 _FileHandle 'int'
| `-ParmVarDecl 0x1e4aab44c60 <col:78, col:94> col:94 _Mode 'const wchar_t *'
|-FunctionDecl 0x1e4aab3f178 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:590:144> col:74 _wfopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e4aab44fa0 <col:89, col:105> col:105 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3efd0 <col:123, col:139> col:139 _Mode 'const wchar_t *'
| `-DeprecatedAttr 0x1e4aab3f228 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab3f630 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:591:28, col:157> col:44 _wfopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e4aab3f370 <col:80, col:88> col:88 _File 'FILE **'
| |-ParmVarDecl 0x1e4aab3f3e8 <col:102, col:118> col:118 _Filename 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab3f460 <col:136, col:152> col:152 _Mode 'const wchar_t *'
|-FunctionDecl 0x1e4aab3fa90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:592:173> col:76 _wfreopen 'FILE *(const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1e4aab3f7d0 <col:93, col:109> col:109 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3f848 <col:127, col:143> col:143 _Mode 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3f8c0 <col:158, col:165> col:165 _OldFile 'FILE *'
| `-DeprecatedAttr 0x1e4aab3fb48 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wfreopen_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab45078 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:593:28, col:184> col:44 _wfreopen_s 'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *) __attribute__((cdecl))':'errno_t (FILE **, const wchar_t *, const wchar_t *, FILE *)'
| |-ParmVarDecl 0x1e4aab3fc90 <col:82, col:90> col:90 _File 'FILE **'
| |-ParmVarDecl 0x1e4aab3fd08 <col:104, col:120> col:120 _Filename 'const wchar_t *'
| |-ParmVarDecl 0x1e4aab3fd80 <col:138, col:154> col:154 _Mode 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab3fdf8 <col:169, col:176> col:176 _OldFile 'FILE *'
|-FunctionDecl 0x1e4aab452d0 <line:597:9, col:65> col:22 _wperror 'void (const wchar_t *) __attribute__((cdecl))':'void (const wchar_t *)'
| `-ParmVarDecl 0x1e4aab45160 <col:42, col:58> col:58 _ErrMsg 'const wchar_t *'
|-FunctionDecl 0x1e4aab45510 <line:600:24, col:107> col:39 _wpopen 'FILE *(const wchar_t *, const wchar_t *) __attribute__((cdecl))':'FILE *(const wchar_t *, const wchar_t *)'
| |-ParmVarDecl 0x1e4aab453a0 <col:54, col:69> col:69 _Command 'const wchar_t *'
| `-ParmVarDecl 0x1e4aab45418 <col:86, col:102> col:102 _Mode 'const wchar_t *'
|-FunctionDecl 0x1e4aab456c8 <line:602:9, col:62> col:21 _wremove 'int (const wchar_t *) __attribute__((cdecl))':'int (const wchar_t *)'
| `-ParmVarDecl 0x1e4aab455e8 <col:37, col:53> col:53 _Filename 'const wchar_t *'
|-FunctionDecl 0x1e4aab459b8 <line:603:28, col:127> col:44 _wtmpnam_s 'errno_t (wchar_t *, size_t) __attribute__((cdecl))':'errno_t (wchar_t *, size_t)'
| |-ParmVarDecl 0x1e4aab45798 <col:84, col:94> col:94 _DstBuf 'wchar_t *'
| `-ParmVarDecl 0x1e4aab45810 <col:108, col:115> col:115 _SizeInWords 'size_t':'unsigned long long'
|-FunctionDecl 0x1e4aab45c28 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, line:1933:117> D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:605:82 _wtmpnam 'wchar_t *(wchar_t *) __attribute__((cdecl))':'wchar_t *(wchar_t *)'
| |-ParmVarDecl 0x1e4aab45b50 <col:118, col:127> col:127 _Buffer 'wchar_t *'
| `-DeprecatedAttr 0x1e4aab45cd0 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "This function or variable may be unsafe. Consider using _wtmpnam_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details." ""
|-FunctionDecl 0x1e4aab45ee8 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:607:28, col:78> col:43 _fgetwc_nolock 'wint_t (FILE *) __attribute__((cdecl))':'wint_t (FILE *)'
| `-ParmVarDecl 0x1e4aab45e10 <col:66, col:73> col:73 _File 'FILE *'
|-FunctionDecl 0x1e4aab4b188 <line:608:28, col:96> col:43 _fputwc_nolock 'wint_t (wchar_t, FILE *) __attribute__((cdecl))':'wint_t (wchar_t, FILE *)'
| |-ParmVarDecl 0x1e4aab45fb8 <col:63, col:71> col:71 _Ch 'wchar_t':'unsigned short'
| `-ParmVarDecl 0x1e4aab4b090 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1e4aab4b3d0 <line:609:28, col:96> col:43 _ungetwc_nolock 'wint_t (wint_t, FILE *) __attribute__((cdecl))':'wint_t (wint_t, FILE *)'
| |-ParmVarDecl 0x1e4aab4b260 <col:64, col:71> col:71 _Ch 'wint_t':'unsigned short'
| `-ParmVarDecl 0x1e4aab4b2d8 <col:84, col:91> col:91 _File 'FILE *'
|-FunctionDecl 0x1e4aab4b580 <line:670:9, col:53> col:22 _lock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1e4aab4b4a8 <col:41, col:48> col:48 _File 'FILE *'
|-FunctionDecl 0x1e4aab4b728 <line:671:9, col:55> col:22 _unlock_file 'void (FILE *) __attribute__((cdecl))':'void (FILE *)'
| `-ParmVarDecl 0x1e4aab4b650 <col:43, col:50> col:50 _File 'FILE *'
|-FunctionDecl 0x1e4aab4b8d8 <line:673:28, col:75> col:40 _fclose_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aab4b7f8 <col:63, col:70> col:70 _File 'FILE *'
|-FunctionDecl 0x1e4aab4ba88 <line:674:28, col:79> col:40 _fflush_nolock 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| `-ParmVarDecl 0x1e4aab4b9a8 <col:67, col:74> col:74 _File 'FILE *'
|-FunctionDecl 0x1e4aab4be00 <line:675:28, col:179> col:43 _fread_nolock 'size_t (void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1e4aab4bb60 <col:97, col:104> col:104 _DstBuf 'void *'
| |-ParmVarDecl 0x1e4aab4bbd8 <col:118, col:125> col:125 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab4bc50 <col:144, col:151> col:151 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab4bcc8 <col:167, col:174> col:174 _File 'FILE *'
|-FunctionDecl 0x1e4aab4c270 <line:676:28, col:203> col:43 _fread_nolock_s 'size_t (void *, size_t, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (void *, size_t, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1e4aab4bef0 <col:99, col:106> col:106 _DstBuf 'void *'
| |-ParmVarDecl 0x1e4aab4bf68 <col:120, col:127> col:127 _DstSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab4bfe0 <col:142, col:149> col:149 _ElementSize 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab4c0a0 <col:168, col:175> col:175 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab4c118 <col:191, col:198> col:198 _File 'FILE *'
|-FunctionDecl 0x1e4aab4c580 <line:677:28, col:111> col:40 _fseek_nolock 'int (FILE *, long, int) __attribute__((cdecl))':'int (FILE *, long, int)'
| |-ParmVarDecl 0x1e4aab4c360 <col:62, col:69> col:69 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab4c3e0 <col:81, col:86> col:86 _Offset 'long'
| `-ParmVarDecl 0x1e4aab4c460 <col:100, col:104> col:104 _Origin 'int'
|-FunctionDecl 0x1e4aab4c740 <line:678:24, col:71> col:37 _ftell_nolock 'long (FILE *) __attribute__((cdecl))':'long (FILE *)'
| `-ParmVarDecl 0x1e4aab4c660 <col:59, col:66> col:66 _File 'FILE *'
|-FunctionDecl 0x1e4aab4ca30 <line:679:28, col:117> col:40 _fseeki64_nolock 'int (FILE *, long long, int) __attribute__((cdecl))':'int (FILE *, long long, int)'
| |-ParmVarDecl 0x1e4aab4c810 <col:65, col:72> col:72 _File 'FILE *'
| |-ParmVarDecl 0x1e4aab4c890 <col:84, col:92> col:92 _Offset 'long long'
| `-ParmVarDecl 0x1e4aab4c910 <col:106, col:110> col:110 _Origin 'int'
|-FunctionDecl 0x1e4aab4cbf0 <line:680:24, col:77> col:40 _ftelli64_nolock 'long long (FILE *) __attribute__((cdecl))':'long long (FILE *)'
| `-ParmVarDecl 0x1e4aab4cb10 <col:65, col:72> col:72 _File 'FILE *'
|-FunctionDecl 0x1e4aab4cf68 <line:681:28, col:170> col:43 _fwrite_nolock 'size_t (const void *, size_t, size_t, FILE *) __attribute__((cdecl))':'size_t (const void *, size_t, size_t, FILE *)'
| |-ParmVarDecl 0x1e4aab4ccc8 <col:89, col:102> col:102 _DstBuf 'const void *'
| |-ParmVarDecl 0x1e4aab4cd40 <col:116, col:123> col:123 _Size 'size_t':'unsigned long long'
| |-ParmVarDecl 0x1e4aab4cdb8 <col:135, col:142> col:142 _Count 'size_t':'unsigned long long'
| `-ParmVarDecl 0x1e4aab4ce30 <col:158, col:165> col:165 _File 'FILE *'
|-FunctionDecl 0x1e4aab4e238 <line:682:28, col:89> col:40 _ungetc_nolock 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1e4aab4e0c0 <col:60, col:64> col:64 _Ch 'int'
| `-ParmVarDecl 0x1e4aab4e138 <col:77, col:84> col:84 _File 'FILE *'
|-FunctionDecl 0x1e4aab4e570 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:709:136> col:57 tempnam 'char *(const char *, const char *) __attribute__((cdecl))':'char *(const char *, const char *)'
| |-ParmVarDecl 0x1e4aab4e3f0 <col:76, col:89> col:89 _Directory 'const char *'
| |-ParmVarDecl 0x1e4aab4e470 <col:112, col:125> col:125 _FilePrefix 'const char *'
| `-DeprecatedAttr 0x1e4aab4e620 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _tempnam. See online help for details." ""
|-FunctionDecl 0x1e4aab4e8d8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:715:89> col:75 fcloseall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1e4aab4e978 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fcloseall. See online help for details." ""
|-FunctionDecl 0x1e4aab4ecb8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:716:127> col:71 fdopen 'FILE *(int, const char *) __attribute__((cdecl))':'FILE *(int, const char *)'
| |-ParmVarDecl 0x1e4aab4eb40 <col:83, col:87> col:87 _FileHandle 'int'
| |-ParmVarDecl 0x1e4aab4ebc0 <col:107, col:120> col:120 _Format 'const char *'
| `-DeprecatedAttr 0x1e4aab4ed68 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fdopen. See online help for details." ""
|-FunctionDecl 0x1e4aab4d0b0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:717:87> col:74 fgetchar 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1e4aab4d150 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fgetchar. See online help for details." ""
|-FunctionDecl 0x1e4aab4d3f0 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:718:92> col:68 fileno 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1e4aab4d310 <col:80, col:87> col:87 _File 'FILE *'
| `-DeprecatedAttr 0x1e4aab4d498 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fileno. See online help for details." ""
|-FunctionDecl 0x1e4aab4d718 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:719:87> col:74 flushall 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1e4aab4d7b8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _flushall. See online help for details." ""
|-FunctionDecl 0x1e4aab4da60 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:720:95> col:74 fputchar 'int (int) __attribute__((cdecl))':'int (int)'
| |-ParmVarDecl 0x1e4aab4d980 <col:88, col:92> col:92 _Ch 'int'
| `-DeprecatedAttr 0x1e4aab4db08 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _fputchar. See online help for details." ""
|-FunctionDecl 0x1e4aab4dde8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:721:91> col:66 getw 'int (FILE *) __attribute__((cdecl))':'int (FILE *)'
| |-ParmVarDecl 0x1e4aab4dd08 <col:79, col:86> col:86 _File 'FILE *'
| `-DeprecatedAttr 0x1e4aab4de90 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _getw. See online help for details." ""
|-FunctionDecl 0x1e4aab4f248 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:722:109> col:70 putw 'int (int, FILE *) __attribute__((cdecl))':'int (int, FILE *)'
| |-ParmVarDecl 0x1e4aab4f0d0 <col:80, col:84> col:84 _Ch 'int'
| |-ParmVarDecl 0x1e4aab4f148 <col:97, col:104> col:104 _File 'FILE *'
| `-DeprecatedAttr 0x1e4aab4f2f8 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _putw. See online help for details." ""
|-FunctionDecl 0x1e4aab4f5b8 <col:36, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:723:77> col:67 rmtmp 'int (void) __attribute__((cdecl))':'int (void)'
| `-DeprecatedAttr 0x1e4aab4f658 <D:\Microsoft Visual Studio 12.0\VC\include\crtdefs.h:275:47, col:63> "The POSIX name for this item is deprecated. Instead, use the ISO C++ conformant name: _rmtmp. See online help for details." ""
|-FunctionDecl 0x1e4aab4f890 <D:\Microsoft Visual Studio 12.0\VC\include\errno.h:31:9, col:41> col:30 _errno 'int *(void) __attribute__((cdecl))':'int *(void)' extern
|-FunctionDecl 0x1e4aab4faa0 <line:34:1, col:43> col:17 _set_errno 'errno_t (int) __attribute__((cdecl))':'errno_t (int)'
| `-ParmVarDecl 0x1e4aab4f960 <col:33, col:37> col:37 _Value 'int'
|-FunctionDecl 0x1e4aab4fcf0 <line:35:1, col:46> col:17 _get_errno 'errno_t (int *) __attribute__((cdecl))':'errno_t (int *)'
| `-ParmVarDecl 0x1e4aab4fb78 <col:34, col:40> col:40 _Value 'int *'
|-FunctionDecl 0x1e4aab4ffb0 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:17:1, col:54> col:12 invalid b64_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1e4aab4fdc8 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x1e4aab4fe48 <col:30, col:42> col:42 buf 'const char *'
| `-ParmVarDecl 0x1e4aab4fec8 <col:47, col:51> col:51 num 'int'
|-FunctionDecl 0x1e4aab592d0 <line:18:1, col:48> col:12 invalid b64_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1e4aab590e0 <col:21, col:26> col:26 invalid h 'int *'
| |-ParmVarDecl 0x1e4aab59160 <col:29, col:35> col:35 buf 'char *'
| `-ParmVarDecl 0x1e4aab591e0 <col:40, col:44> col:44 size 'int'
|-FunctionDecl 0x1e4aab59500 <line:19:1, col:44> col:12 invalid b64_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1e4aab593a0 <col:21, col:26> col:26 invalid h 'int *'
| `-ParmVarDecl 0x1e4aab59420 <col:29, col:41> col:41 str 'const char *'
|-FunctionDecl 0x1e4aab59840 <line:23:1, col:60> col:13 invalid b64_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1e4aab595c8 <col:22, col:27> col:27 invalid h 'int *'
| |-ParmVarDecl 0x1e4aab59648 <col:30, col:34> col:34 cmd 'int'
| |-ParmVarDecl 0x1e4aab596c8 <col:39, col:44> col:44 arg1 'long'
| `-ParmVarDecl 0x1e4aab59748 <col:50, col:56> col:56 arg2 'void *'
|-FunctionDecl 0x1e4aab599b0 <line:24:1, col:26> col:12 invalid b64_new 'int (int *)' static
| `-ParmVarDecl 0x1e4aab59918 <col:20, col:25> col:25 invalid h 'int *'
|-FunctionDecl 0x1e4aab59b08 <line:25:1, col:30> col:12 invalid b64_free 'int (int *)' static
| `-ParmVarDecl 0x1e4aab59a70 <col:21, col:26> col:26 invalid data 'int *'
|-FunctionDecl 0x1e4aab59db0 <line:26:1, col:63> col:13 invalid b64_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1e4aab59bc8 <col:31, col:36> col:36 invalid h 'int *'
| |-ParmVarDecl 0x1e4aab59c48 <col:39, col:43> col:43 cmd 'int'
| `-ParmVarDecl 0x1e4aab59cc8 <col:48, col:61> col:61 invalid fp 'int *'
|-RecordDecl 0x1e4aab59e68 <line:33:9, line:47:1> line:33:16 invalid struct b64_struct definition
| |-FieldDecl 0x1e4aab59f38 <line:37:5, col:9> col:9 referenced buf_len 'int'
| |-FieldDecl 0x1e4aab59fa8 <line:38:5, col:9> col:9 referenced buf_off 'int'
| |-FieldDecl 0x1e4aab5a018 <line:39:5, col:9> col:9 referenced tmp_len 'int'
| |-FieldDecl 0x1e4aab5a088 <line:40:5, col:9> col:9 referenced tmp_nl 'int'
| |-FieldDecl 0x1e4aab5f158 <line:41:5, col:9> col:9 referenced encode 'int'
| |-FieldDecl 0x1e4aab5f1c8 <line:42:5, col:9> col:9 referenced start 'int'
| |-FieldDecl 0x1e4aab5f238 <line:43:5, col:9> col:9 referenced cont 'int'
| |-FieldDecl 0x1e4aab5f2a8 <line:44:5, col:21> col:21 invalid base64 'int *'
| |-FieldDecl 0x1e4aab5f578 <line:45:5, col:52> col:10 invalid buf 'char [EVP_ENCODE_LENGTH(1024) + 10]'
| `-FieldDecl 0x1e4aab5f668 <line:46:5, col:28> col:10 referenced tmp 'char [1024]'
|-FunctionDecl 0x1e4aab5f350 <<invalid sloc>> line:45:14 implicit used EVP_ENCODE_LENGTH 'int ()'
|-TypedefDecl 0x1e4aab5f718 <line:33:1, line:47:3> col:3 referenced BIO_B64_CTX 'struct b64_struct':'struct b64_struct'
| `-ElaboratedType 0x1e4aab5f6c0 'struct b64_struct' sugar
|   `-RecordType 0x1e4aab59f00 'struct b64_struct'
|     `-Record 0x1e4aab59e68 'b64_struct'
|-VarDecl 0x1e4aab5f7a0 <line:49:1, col:25> col:25 invalid methods_b64 'const int' static
|-FunctionDecl 0x1e4aab5f9c0 <line:63:1, line:66:1> line:63:19 invalid BIO_f_base64 'const int *(void)'
| `-CompoundStmt 0x1e4aab5fa78 <line:64:1, line:66:1>
|-FunctionDecl 0x1e4aab5fb38 <line:68:1, line:88:1> line:68:12 invalid b64_new 'int (int *)' static
| |-ParmVarDecl 0x1e4aab5faa0 <col:20, col:25> col:25 invalid bi 'int *'
| `-CompoundStmt 0x1e4aab60910 <line:69:1, line:88:1>
|   |-DeclStmt 0x1e4aab5fcf0 <line:70:5, col:21>
|   | `-VarDecl 0x1e4aab5fc88 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-BinaryOperator 0x1e4aab5ff38 <line:72:5, col:38> 'BIO_B64_CTX *' '='
|   | |-DeclRefExpr 0x1e4aab5fd08 <col:5> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5fc88 'ctx' 'BIO_B64_CTX *'
|   | `-ImplicitCastExpr 0x1e4aab5ff20 <col:11, col:38> 'BIO_B64_CTX *' <IntegralToPointer>
|   |   `-CallExpr 0x1e4aab5fef8 <col:11, col:38> 'int'
|   |     |-ImplicitCastExpr 0x1e4aab5fee0 <col:11> 'int (*)()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x1e4aab5fe30 <col:11> 'int ()' Function 0x1e4aab5fd68 'OPENSSL_zalloc' 'int ()'
|   |     `-UnaryExprOrTypeTraitExpr 0x1e4aab5fec0 <col:26, col:37> 'unsigned long long' sizeof
|   |       `-ParenExpr 0x1e4aab5fea0 <col:32, col:37> 'BIO_B64_CTX':'struct b64_struct' lvalue
|   |         `-UnaryOperator 0x1e4aab5fe88 <col:33, col:34> 'BIO_B64_CTX':'struct b64_struct' lvalue prefix '*' cannot overflow
|   |           `-ImplicitCastExpr 0x1e4aab5fe70 <col:34> 'BIO_B64_CTX *' <LValueToRValue>
|   |             `-DeclRefExpr 0x1e4aab5fe50 <col:34> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5fc88 'ctx' 'BIO_B64_CTX *' non_odr_use_unevaluated
|   |-IfStmt 0x1e4aab60088 <line:73:5, line:74:16>
|   | |-BinaryOperator 0x1e4aab60030 <line:73:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e4aab60000 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:73:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e4aab5ff58 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5fc88 'ctx' 'BIO_B64_CTX *'
|   | | `-ImplicitCastExpr 0x1e4aab60018 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_B64_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1e4aab5ffe0 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e4aab5ffb8 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e4aab5ff78 <col:26> 'int' 0
|   | `-ReturnStmt 0x1e4aab60078 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:74:9, col:16>
|   |   `-IntegerLiteral 0x1e4aab60050 <col:16> 'int' 0
|   |-BinaryOperator 0x1e4aab60150 <line:76:5, col:17> 'int' '='
|   | |-MemberExpr 0x1e4aab600d8 <col:5, col:10> 'int' lvalue ->cont 0x1e4aab5f238
|   | | `-ImplicitCastExpr 0x1e4aab600c0 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e4aab600a0 <col:5> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5fc88 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x1e4aab60108 <col:17> 'int' 1
|   |-BinaryOperator 0x1e4aab60200 <line:77:5, col:18> 'int' '='
|   | |-MemberExpr 0x1e4aab601a8 <col:5, col:10> 'int' lvalue ->start 0x1e4aab5f1c8
|   | | `-ImplicitCastExpr 0x1e4aab60190 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e4aab60170 <col:5> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5fc88 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x1e4aab601d8 <col:18> 'int' 1
|   |-IfStmt 0x1e4aab60658 <line:79:5, line:82:5>
|   | |-OpaqueValueExpr 0x1e4aab60640 <<invalid sloc>> '_Bool'
|   | `-CompoundStmt 0x1e4aab60620 <line:79:30, line:82:5>
|   |   |-CallExpr 0x1e4aab605a8 <line:80:9, col:25> 'int'
|   |   | |-ImplicitCastExpr 0x1e4aab60590 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1e4aab60550 <col:9> 'int ()' Function 0x1e4aab60488 'OPENSSL_free' 'int ()'
|   |   | `-ImplicitCastExpr 0x1e4aab605d0 <col:22> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab60570 <col:22> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5fc88 'ctx' 'BIO_B64_CTX *'
|   |   `-ReturnStmt 0x1e4aab60610 <line:81:9, col:16>
|   |     `-IntegerLiteral 0x1e4aab605e8 <col:16> 'int' 0
|   `-ReturnStmt 0x1e4aab60900 <line:87:5, col:12>
|     `-IntegerLiteral 0x1e4aab608d8 <col:12> 'int' 1
|-FunctionDecl 0x1e4aab60a08 <line:90:1, line:106:1> line:90:12 invalid b64_free 'int (int *)' static
| |-ParmVarDecl 0x1e4aab60970 <col:21, col:26> col:26 invalid a 'int *'
| `-CompoundStmt 0x1e4aab5e1d0 <line:91:1, line:106:1>
|   |-DeclStmt 0x1e4aab60b40 <line:92:5, col:21>
|   | `-VarDecl 0x1e4aab60ad8 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-IfStmt 0x1e4aab60c30 <line:93:5, line:94:16>
|   | |-OpaqueValueExpr 0x1e4aab60c18 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e4aab60c08 <col:9, col:16>
|   |   `-IntegerLiteral 0x1e4aab60be0 <col:16> 'int' 0
|   |-IfStmt 0x1e4aab60ec0 <line:97:5, line:98:16>
|   | |-BinaryOperator 0x1e4aab60e68 <line:97:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e4aab60e38 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:97:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e4aab60d90 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab60ad8 'ctx' 'BIO_B64_CTX *'
|   | | `-ImplicitCastExpr 0x1e4aab60e50 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'BIO_B64_CTX *' <BitCast>
|   | |   `-ParenExpr 0x1e4aab60e18 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e4aab60df0 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e4aab60db0 <col:26> 'int' 0
|   | `-ReturnStmt 0x1e4aab60eb0 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:98:9, col:16>
|   |   `-IntegerLiteral 0x1e4aab60e88 <col:16> 'int' 0
|   |-CallExpr 0x1e4aab61078 <line:101:5, col:21> 'int'
|   | |-ImplicitCastExpr 0x1e4aab61060 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e4aab61020 <col:5> 'int ()' Function 0x1e4aab60488 'OPENSSL_free' 'int ()'
|   | `-ImplicitCastExpr 0x1e4aab610a0 <col:18> 'BIO_B64_CTX *' <LValueToRValue>
|   |   `-DeclRefExpr 0x1e4aab61040 <col:18> 'BIO_B64_CTX *' lvalue Var 0x1e4aab60ad8 'ctx' 'BIO_B64_CTX *'
|   `-ReturnStmt 0x1e4aab5e1c0 <line:105:5, col:12>
|     `-IntegerLiteral 0x1e4aab5e198 <col:12> 'int' 1
|-FunctionDecl 0x1e4aab5e3c8 <line:108:1, line:324:1> line:108:12 invalid b64_read 'int (int *, char *, int)' static
| |-ParmVarDecl 0x1e4aab5e220 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x1e4aab5e2a0 <col:29, col:35> col:35 used out 'char *'
| |-ParmVarDecl 0x1e4aab5e320 <col:40, col:44> col:44 used outl 'int'
| `-CompoundStmt 0x1e4aab5dd38 <line:109:1, line:324:1>
|   |-DeclStmt 0x1e4aab5e9b8 <line:110:5, col:54>
|   | |-VarDecl 0x1e4aab5e4b0 <col:5, col:15> col:9 used ret 'int' cinit
|   | | `-IntegerLiteral 0x1e4aab5e518 <col:15> 'int' 0
|   | |-VarDecl 0x1e4aab5e558 <col:5, col:18> col:18 used i 'int'
|   | |-VarDecl 0x1e4aab5e5d8 <col:5, col:21> col:21 used ii 'int'
|   | |-VarDecl 0x1e4aab5e658 <col:5, col:25> col:25 used j 'int'
|   | |-VarDecl 0x1e4aab5e6d8 <col:5, col:28> col:28 used k 'int'
|   | |-VarDecl 0x1e4aab5e758 <col:5, col:31> col:31 used x 'int'
|   | |-VarDecl 0x1e4aab5e7d8 <col:5, col:34> col:34 used n 'int'
|   | |-VarDecl 0x1e4aab5e858 <col:5, col:37> col:37 used num 'int'
|   | `-VarDecl 0x1e4aab5e8d8 <col:5, col:53> col:42 used ret_code 'int' cinit
|   |   `-IntegerLiteral 0x1e4aab5e940 <col:53> 'int' 0
|   |-DeclStmt 0x1e4aab5ea48 <line:111:5, col:21>
|   | `-VarDecl 0x1e4aab5e9e0 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-DeclStmt 0x1e4aab5eba0 <line:112:5, col:25>
|   | |-VarDecl 0x1e4aab5eaa0 <col:5, col:20> col:20 used p 'unsigned char *'
|   | `-VarDecl 0x1e4aab5eb20 <col:5, col:24> col:24 used q 'unsigned char *'
|   |-IfStmt 0x1e4aab5ed20 <line:115:5, line:116:18>
|   | |-BinaryOperator 0x1e4aab5eca8 <line:115:9, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |-ImplicitCastExpr 0x1e4aab5ec78 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:115:9> 'char *' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e4aab5ebb8 <col:9> 'char *' lvalue ParmVar 0x1e4aab5e2a0 'out' 'char *'
|   | | `-ImplicitCastExpr 0x1e4aab5ec90 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'char *' <BitCast>
|   | |   `-ParenExpr 0x1e4aab5ec58 <col:17, col:27> 'void *'
|   | |     `-CStyleCastExpr 0x1e4aab5ec30 <col:18, col:26> 'void *' <NullToPointer>
|   | |       `-IntegerLiteral 0x1e4aab5ebf0 <col:26> 'int' 0
|   | `-ReturnStmt 0x1e4aab5ed10 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:116:9, col:18>
|   |   `-ParenExpr 0x1e4aab5ecf0 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1e4aab5ecc8 <col:17> 'int' 0
|   |-IfStmt 0x1e4aab5f090 <line:120:5, line:121:16>
|   | |-OpaqueValueExpr 0x1e4aab5f078 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e4aab5f068 <col:9, col:16>
|   |   `-IntegerLiteral 0x1e4aab5f040 <col:16> 'int' 0
|   |-IfStmt 0x1e4aab61748 <line:125:5, line:131:5>
|   | |-BinaryOperator 0x1e4aab612f0 <line:125:9, line:31:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x1e4aab612d8 <line:125:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1e4aab61280 <col:9, col:14> 'int' lvalue ->encode 0x1e4aab5f158
|   | | |   `-ImplicitCastExpr 0x1e4aab61268 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1e4aab61248 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x1e4aab612b0 <line:31:25> 'int' 2
|   | `-CompoundStmt 0x1e4aab61718 <line:125:36, line:131:5>
|   |   |-BinaryOperator 0x1e4aab613a0 <line:126:9, line:31:25> 'int' '='
|   |   | |-MemberExpr 0x1e4aab61348 <line:126:9, col:14> 'int' lvalue ->encode 0x1e4aab5f158
|   |   | | `-ImplicitCastExpr 0x1e4aab61330 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab61310 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab61378 <line:31:25> 'int' 2
|   |   |-BinaryOperator 0x1e4aab61450 <line:127:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1e4aab613f8 <col:9, col:14> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   | | `-ImplicitCastExpr 0x1e4aab613e0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab613c0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab61428 <col:24> 'int' 0
|   |   |-BinaryOperator 0x1e4aab61500 <line:128:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1e4aab614a8 <col:9, col:14> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   | | `-ImplicitCastExpr 0x1e4aab61490 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab61470 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab614d8 <col:24> 'int' 0
|   |   `-BinaryOperator 0x1e4aab615b0 <line:129:9, col:24> 'int' '='
|   |     |-MemberExpr 0x1e4aab61558 <col:9, col:14> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |     | `-ImplicitCastExpr 0x1e4aab61540 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1e4aab61520 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x1e4aab61588 <col:24> 'int' 0
|   |-IfStmt 0x1e4aab5b6e0 <line:134:5, line:149:5>
|   | |-BinaryOperator 0x1e4aab61808 <line:134:9, col:24> 'int' '>'
|   | | |-ImplicitCastExpr 0x1e4aab617f0 <col:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1e4aab61798 <col:9, col:14> 'int' lvalue ->buf_len 0x1e4aab59f38
|   | | |   `-ImplicitCastExpr 0x1e4aab61780 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1e4aab61760 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x1e4aab617c8 <col:24> 'int' 0
|   | `-CompoundStmt 0x1e4aab5b690 <col:27, line:149:5>
|   |   |-CallExpr 0x1e4aab61a70 <line:135:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x1e4aab61a58 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1e4aab61918 <col:9> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x1e4aab61a38 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x1e4aab61a08 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x1e4aab61970 <col:24, col:29> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |   |   `-ImplicitCastExpr 0x1e4aab61958 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1e4aab61938 <col:24> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x1e4aab61a20 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x1e4aab619d8 <col:40, col:45> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |       `-ImplicitCastExpr 0x1e4aab619c0 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1e4aab619a0 <col:40> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x1e4aab61bf0 <line:136:9, col:33> 'int' '='
|   |   | |-DeclRefExpr 0x1e4aab61a98 <col:9> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   | `-BinaryOperator 0x1e4aab61bd0 <col:13, col:33> 'int' '-'
|   |   |   |-ImplicitCastExpr 0x1e4aab61ba0 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x1e4aab61b08 <col:13, col:18> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |   |   `-ImplicitCastExpr 0x1e4aab61af0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1e4aab61ad0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x1e4aab61bb8 <col:28, col:33> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x1e4aab61b70 <col:28, col:33> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |       `-ImplicitCastExpr 0x1e4aab61b58 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1e4aab61b38 <col:28> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |-IfStmt 0x1e4aab61d30 <line:137:9, line:138:17>
|   |   | |-BinaryOperator 0x1e4aab61c98 <line:137:13, col:17> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1e4aab61c68 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1e4aab61c10 <col:13> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x1e4aab61c80 <col:17> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab61c30 <col:17> 'int' lvalue ParmVar 0x1e4aab5e320 'outl' 'int'
|   |   | `-BinaryOperator 0x1e4aab61d10 <line:138:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x1e4aab61cb8 <col:13> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x1e4aab61cf8 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e4aab61cd8 <col:17> 'int' lvalue ParmVar 0x1e4aab5e320 'outl' 'int'
|   |   |-BinaryOperator 0x1e4aab5b1d8 <line:141:9, col:15> 'int' '='
|   |   | |-DeclRefExpr 0x1e4aab5b168 <col:9> 'int' lvalue Var 0x1e4aab5e4b0 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x1e4aab5b1c0 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab5b1a0 <col:15> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |-CompoundAssignOperator 0x1e4aab5b250 <line:142:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |   | |-DeclRefExpr 0x1e4aab5b1f8 <col:9> 'char *' lvalue ParmVar 0x1e4aab5e2a0 'out' 'char *'
|   |   | `-ImplicitCastExpr 0x1e4aab5b238 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab5b218 <col:16> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |-CompoundAssignOperator 0x1e4aab5b2d8 <line:143:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1e4aab5b280 <col:9> 'int' lvalue ParmVar 0x1e4aab5e320 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x1e4aab5b2c0 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab5b2a0 <col:17> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |-CompoundAssignOperator 0x1e4aab5b3a8 <line:144:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1e4aab5b340 <col:9, col:14> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   | | `-ImplicitCastExpr 0x1e4aab5b328 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab5b308 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x1e4aab5b390 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab5b370 <col:25> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   `-IfStmt 0x1e4aab5b678 <line:145:9, line:148:9>
|   |     |-BinaryOperator 0x1e4aab5b4d8 <line:145:13, col:34> 'int' '=='
|   |     | |-ImplicitCastExpr 0x1e4aab5b4a8 <col:13, col:18> 'int' <LValueToRValue>
|   |     | | `-MemberExpr 0x1e4aab5b410 <col:13, col:18> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |     | |   `-ImplicitCastExpr 0x1e4aab5b3f8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |     | |     `-DeclRefExpr 0x1e4aab5b3d8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |     | `-ImplicitCastExpr 0x1e4aab5b4c0 <col:29, col:34> 'int' <LValueToRValue>
|   |     |   `-MemberExpr 0x1e4aab5b478 <col:29, col:34> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |     |     `-ImplicitCastExpr 0x1e4aab5b460 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |       `-DeclRefExpr 0x1e4aab5b440 <col:29> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |     `-CompoundStmt 0x1e4aab5b658 <col:43, line:148:9>
|   |       |-BinaryOperator 0x1e4aab5b588 <line:146:13, col:28> 'int' '='
|   |       | |-MemberExpr 0x1e4aab5b530 <col:13, col:18> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |       | | `-ImplicitCastExpr 0x1e4aab5b518 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |       | |   `-DeclRefExpr 0x1e4aab5b4f8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |       | `-IntegerLiteral 0x1e4aab5b560 <col:28> 'int' 0
|   |       `-BinaryOperator 0x1e4aab5b638 <line:147:13, col:28> 'int' '='
|   |         |-MemberExpr 0x1e4aab5b5e0 <col:13, col:18> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |         | `-ImplicitCastExpr 0x1e4aab5b5c8 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |         |   `-DeclRefExpr 0x1e4aab5b5a8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |         `-IntegerLiteral 0x1e4aab5b610 <col:28> 'int' 0
|   |-BinaryOperator 0x1e4aab5b758 <line:156:5, col:16> 'int' '='
|   | |-DeclRefExpr 0x1e4aab5b6f8 <col:5> 'int' lvalue Var 0x1e4aab5e8d8 'ret_code' 'int'
|   | `-IntegerLiteral 0x1e4aab5b730 <col:16> 'int' 0
|   |-WhileStmt 0x1e4aab5daa0 <line:157:5, line:320:5>
|   | |-BinaryOperator 0x1e4aab5b7d8 <line:157:12, col:19> 'int' '>'
|   | | |-ImplicitCastExpr 0x1e4aab5b7c0 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e4aab5b778 <col:12> 'int' lvalue ParmVar 0x1e4aab5e320 'outl' 'int'
|   | | `-IntegerLiteral 0x1e4aab5b798 <col:19> 'int' 0
|   | `-CompoundStmt 0x1e4aab5da18 <col:22, line:320:5>
|   |   |-IfStmt 0x1e4aab5b8c8 <line:158:9, line:159:13>
|   |   | |-BinaryOperator 0x1e4aab5b8a0 <line:158:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1e4aab5b888 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1e4aab5b830 <col:13, col:18> 'int' lvalue ->cont 0x1e4aab5f238
|   |   | | |   `-ImplicitCastExpr 0x1e4aab5b818 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1e4aab5b7f8 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | | `-IntegerLiteral 0x1e4aab5b860 <col:26> 'int' 0
|   |   | `-BreakStmt 0x1e4aab5b8c0 <line:159:13>
|   |   |-IfStmt 0x1e4aab5c0e0 <line:164:9, line:180:9>
|   |   | |-BinaryOperator 0x1e4aab5bc90 <line:164:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1e4aab5bc78 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1e4aab5bc30 <col:13> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   | | `-IntegerLiteral 0x1e4aab5bc50 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x1e4aab5c0c0 <col:21, line:180:9>
|   |   |   |-BinaryOperator 0x1e4aab5bd08 <line:165:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x1e4aab5bcb0 <col:13> 'int' lvalue Var 0x1e4aab5e8d8 'ret_code' 'int'
|   |   |   | `-ImplicitCastExpr 0x1e4aab5bcf0 <col:24> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1e4aab5bcd0 <col:24> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |   `-IfStmt 0x1e4aab5c098 <line:168:13, line:179:17> has_else
|   |   |     |-OpaqueValueExpr 0x1e4aab5c080 <<invalid sloc>> '_Bool'
|   |   |     |-CompoundStmt 0x1e4aab5c058 <line:168:42, line:176:13>
|   |   |     | |-BinaryOperator 0x1e4aab5bed8 <line:169:17, col:29> 'int' '='
|   |   |     | | |-MemberExpr 0x1e4aab5be70 <col:17, col:22> 'int' lvalue ->cont 0x1e4aab5f238
|   |   |     | | | `-ImplicitCastExpr 0x1e4aab5be58 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     | | |   `-DeclRefExpr 0x1e4aab5be38 <col:17> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |     | | `-ImplicitCastExpr 0x1e4aab5bec0 <col:29> 'int' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x1e4aab5bea0 <col:29> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |     | `-IfStmt 0x1e4aab5c030 <line:171:17, line:175:25> has_else
|   |   |     |   |-BinaryOperator 0x1e4aab5bfa0 <line:171:21, col:37> 'int' '=='
|   |   |     |   | |-ImplicitCastExpr 0x1e4aab5bf88 <col:21, col:26> 'int' <LValueToRValue>
|   |   |     |   | | `-MemberExpr 0x1e4aab5bf30 <col:21, col:26> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   |     |   | |   `-ImplicitCastExpr 0x1e4aab5bf18 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   | |     `-DeclRefExpr 0x1e4aab5bef8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |     |   | `-IntegerLiteral 0x1e4aab5bf60 <col:37> 'int' 0
|   |   |     |   |-BreakStmt 0x1e4aab5bfc0 <line:172:21>
|   |   |     |   `-BinaryOperator 0x1e4aab5c010 <line:175:21, col:25> 'int' '='
|   |   |     |     |-DeclRefExpr 0x1e4aab5bfc8 <col:21> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |     |     `-IntegerLiteral 0x1e4aab5bfe8 <col:25> 'int' 0
|   |   |     `-BreakStmt 0x1e4aab5c078 <line:179:17>
|   |   |-CompoundAssignOperator 0x1e4aab62210 <line:181:9, col:19> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1e4aab62170 <col:9> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   | `-ImplicitCastExpr 0x1e4aab621f8 <col:14, col:19> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x1e4aab621c8 <col:14, col:19> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   |     `-ImplicitCastExpr 0x1e4aab621b0 <col:14> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1e4aab62190 <col:14> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x1e4aab622e0 <line:182:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1e4aab62278 <col:9, col:14> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | | `-ImplicitCastExpr 0x1e4aab62260 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab62240 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x1e4aab622c8 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab622a8 <col:24> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |-IfStmt 0x1e4aab5c8a0 <line:188:9, line:258:9> has_else
|   |   | |-OpaqueValueExpr 0x1e4aab5c888 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1e4aab62528 <line:188:72, line:191:9>
|   |   | | `-BinaryOperator 0x1e4aab62508 <line:190:13, col:28> 'int' '='
|   |   | |   |-MemberExpr 0x1e4aab624b0 <col:13, col:18> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | |   | `-ImplicitCastExpr 0x1e4aab62498 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   |   `-DeclRefExpr 0x1e4aab62478 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | |   `-IntegerLiteral 0x1e4aab624e0 <col:28> 'int' 0
|   |   | `-IfStmt 0x1e4aab5c860 <line:191:16, line:258:9> has_else
|   |   |   |-ImplicitCastExpr 0x1e4aab625a8 <line:191:20, col:25> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x1e4aab62578 <col:20, col:25> 'int' lvalue ->start 0x1e4aab5f1c8
|   |   |   |   `-ImplicitCastExpr 0x1e4aab62560 <col:20> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1e4aab62540 <col:20> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   |-CompoundStmt 0x1e4aab5c650 <col:32, line:252:9>
|   |   |   | |-BinaryOperator 0x1e4aab62710 <line:192:13, col:43> 'unsigned char *' '='
|   |   |   | | |-DeclRefExpr 0x1e4aab625c0 <col:13> 'unsigned char *' lvalue Var 0x1e4aab5eb20 'q' 'unsigned char *'
|   |   |   | | `-BinaryOperator 0x1e4aab626f0 <col:17, col:43> 'unsigned char *' '='
|   |   |   | |   |-DeclRefExpr 0x1e4aab625f8 <col:17> 'unsigned char *' lvalue Var 0x1e4aab5eaa0 'p' 'unsigned char *'
|   |   |   | |   `-CStyleCastExpr 0x1e4aab626c8 <col:21, col:43> 'unsigned char *' <BitCast>
|   |   |   | |     `-ImplicitCastExpr 0x1e4aab626b0 <col:38, col:43> 'char *' <ArrayToPointerDecay> part_of_explicit_cast
|   |   |   | |       `-MemberExpr 0x1e4aab62668 <col:38, col:43> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   |   | |         `-ImplicitCastExpr 0x1e4aab62650 <col:38> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |           `-DeclRefExpr 0x1e4aab62630 <col:38> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |-BinaryOperator 0x1e4aab62790 <line:193:13, col:19> 'int' '='
|   |   |   | | |-DeclRefExpr 0x1e4aab62730 <col:13> 'int' lvalue Var 0x1e4aab5e858 'num' 'int'
|   |   |   | | `-IntegerLiteral 0x1e4aab62768 <col:19> 'int' 0
|   |   |   | |-ForStmt 0x1e4aab63a48 <line:194:13, line:227:13>
|   |   |   | | |-BinaryOperator 0x1e4aab62810 <line:194:18, col:22> 'int' '='
|   |   |   | | | |-DeclRefExpr 0x1e4aab627b0 <col:18> 'int' lvalue Var 0x1e4aab5e658 'j' 'int'
|   |   |   | | | `-IntegerLiteral 0x1e4aab627e8 <col:22> 'int' 0
|   |   |   | | |-<<<NULL>>>
|   |   |   | | |-BinaryOperator 0x1e4aab628a0 <col:25, col:29> 'int' '<'
|   |   |   | | | |-ImplicitCastExpr 0x1e4aab62870 <col:25> 'int' <LValueToRValue>
|   |   |   | | | | `-DeclRefExpr 0x1e4aab62830 <col:25> 'int' lvalue Var 0x1e4aab5e658 'j' 'int'
|   |   |   | | | `-ImplicitCastExpr 0x1e4aab62888 <col:29> 'int' <LValueToRValue>
|   |   |   | | |   `-DeclRefExpr 0x1e4aab62850 <col:29> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |   | | |-UnaryOperator 0x1e4aab628e0 <col:32, col:33> 'int' postfix '++'
|   |   |   | | | `-DeclRefExpr 0x1e4aab628c0 <col:32> 'int' lvalue Var 0x1e4aab5e658 'j' 'int'
|   |   |   | | `-CompoundStmt 0x1e4aab63a18 <col:37, line:227:13>
|   |   |   | |   |-IfStmt 0x1e4aab629d8 <line:195:17, line:196:21>
|   |   |   | |   | |-BinaryOperator 0x1e4aab629b0 <line:195:21, col:31> 'int' '!='
|   |   |   | |   | | |-ImplicitCastExpr 0x1e4aab62998 <col:21, col:26> 'int' <IntegralCast>
|   |   |   | |   | | | `-ImplicitCastExpr 0x1e4aab62980 <col:21, col:26> 'unsigned char' <LValueToRValue>
|   |   |   | |   | | |   `-UnaryOperator 0x1e4aab62950 <col:21, col:26> 'unsigned char' lvalue prefix '*' cannot overflow
|   |   |   | |   | | |     `-ParenExpr 0x1e4aab62930 <col:22, col:26> 'unsigned char *'
|   |   |   | |   | | |       `-UnaryOperator 0x1e4aab62918 <col:23, col:24> 'unsigned char *' postfix '++'
|   |   |   | |   | | |         `-DeclRefExpr 0x1e4aab628f8 <col:23> 'unsigned char *' lvalue Var 0x1e4aab5eb20 'q' 'unsigned char *'
|   |   |   | |   | | `-CharacterLiteral 0x1e4aab62968 <col:31> 'int' 10
|   |   |   | |   | `-ContinueStmt 0x1e4aab629d0 <line:196:21>
|   |   |   | |   |-IfStmt 0x1e4aab62bc8 <line:203:17, line:207:17>
|   |   |   | |   | |-ImplicitCastExpr 0x1e4aab62a58 <line:203:21, col:26> 'int' <LValueToRValue>
|   |   |   | |   | | `-MemberExpr 0x1e4aab62a28 <col:21, col:26> 'int' lvalue ->tmp_nl 0x1e4aab5a088
|   |   |   | |   | |   `-ImplicitCastExpr 0x1e4aab62a10 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   | |     `-DeclRefExpr 0x1e4aab629f0 <col:21> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   | `-CompoundStmt 0x1e4aab62ba0 <col:34, line:207:17>
|   |   |   | |   |   |-BinaryOperator 0x1e4aab62ac8 <line:204:21, col:25> 'unsigned char *' '='
|   |   |   | |   |   | |-DeclRefExpr 0x1e4aab62a70 <col:21> 'unsigned char *' lvalue Var 0x1e4aab5eaa0 'p' 'unsigned char *'
|   |   |   | |   |   | `-ImplicitCastExpr 0x1e4aab62ab0 <col:25> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |   `-DeclRefExpr 0x1e4aab62a90 <col:25> 'unsigned char *' lvalue Var 0x1e4aab5eb20 'q' 'unsigned char *'
|   |   |   | |   |   |-BinaryOperator 0x1e4aab62b78 <line:205:21, col:35> 'int' '='
|   |   |   | |   |   | |-MemberExpr 0x1e4aab62b20 <col:21, col:26> 'int' lvalue ->tmp_nl 0x1e4aab5a088
|   |   |   | |   |   | | `-ImplicitCastExpr 0x1e4aab62b08 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |   `-DeclRefExpr 0x1e4aab62ae8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | `-IntegerLiteral 0x1e4aab62b50 <col:35> 'int' 0
|   |   |   | |   |   `-ContinueStmt 0x1e4aab62b98 <line:206:21>
|   |   |   | |   |-IfStmt 0x1e4aab63978 <line:212:17, line:225:17> has_else
|   |   |   | |   | |-BinaryOperator 0x1e4aab63080 <line:212:21, col:58> 'int' '&&'
|   |   |   | |   | | |-BinaryOperator 0x1e4aab62fc0 <col:21, col:42> 'int' '&&'
|   |   |   | |   | | | |-ParenExpr 0x1e4aab62f00 <col:21, col:28> 'int'
|   |   |   | |   | | | | `-BinaryOperator 0x1e4aab62ee0 <col:22, col:27> 'int' '<='
|   |   |   | |   | | | |   |-ImplicitCastExpr 0x1e4aab62ec8 <col:22> 'int' <LValueToRValue>
|   |   |   | |   | | | |   | `-DeclRefExpr 0x1e4aab62e80 <col:22> 'int' lvalue Var 0x1e4aab5e6d8 'k' 'int'
|   |   |   | |   | | | |   `-IntegerLiteral 0x1e4aab62ea0 <col:27> 'int' 0
|   |   |   | |   | | | `-ParenExpr 0x1e4aab62fa0 <col:33, col:42> 'int'
|   |   |   | |   | | |   `-BinaryOperator 0x1e4aab62f80 <col:34, col:41> 'int' '=='
|   |   |   | |   | | |     |-ImplicitCastExpr 0x1e4aab62f68 <col:34> 'int' <LValueToRValue>
|   |   |   | |   | | |     | `-DeclRefExpr 0x1e4aab62f20 <col:34> 'int' lvalue Var 0x1e4aab5e858 'num' 'int'
|   |   |   | |   | | |     `-IntegerLiteral 0x1e4aab62f40 <col:41> 'int' 0
|   |   |   | |   | | `-ImplicitCastExpr 0x1e4aab63068 <col:47, col:58> 'int' <LValueToRValue>
|   |   |   | |   | |   `-ParenExpr 0x1e4aab63048 <col:47, col:58> 'int' lvalue
|   |   |   | |   | |     `-MemberExpr 0x1e4aab63018 <col:48, col:53> 'int' lvalue ->start 0x1e4aab5f1c8
|   |   |   | |   | |       `-ImplicitCastExpr 0x1e4aab63000 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   | |         `-DeclRefExpr 0x1e4aab62fe0 <col:48> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   | |-NullStmt 0x1e4aab63970 <line:213:21>
|   |   |   | |   | `-CompoundStmt 0x1e4aab63948 <line:214:22, line:225:17>
|   |   |   | |   |   |-IfStmt 0x1e4aab63820 <line:215:21, line:221:21>
|   |   |   | |   |   | |-BinaryOperator 0x1e4aab632a0 <line:215:25, line:216:38> 'int' '!='
|   |   |   | |   |   | | |-ImplicitCastExpr 0x1e4aab63288 <line:215:25> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   | | | `-DeclRefExpr 0x1e4aab630f8 <col:25> 'unsigned char *' lvalue Var 0x1e4aab5eaa0 'p' 'unsigned char *'
|   |   |   | |   |   | | `-CStyleCastExpr 0x1e4aab63260 <col:30, line:216:38> 'unsigned char *' <BitCast>
|   |   |   | |   |   | |   `-UnaryOperator 0x1e4aab63230 <col:25, col:38> 'char *' prefix '&' cannot overflow
|   |   |   | |   |   | |     `-ParenExpr 0x1e4aab63210 <col:26, col:38> 'char' lvalue
|   |   |   | |   |   | |       `-ArraySubscriptExpr 0x1e4aab631f0 <col:27, col:37> 'char' lvalue
|   |   |   | |   |   | |         |-ImplicitCastExpr 0x1e4aab631d8 <col:27, col:32> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   | |         | `-MemberExpr 0x1e4aab63180 <col:27, col:32> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   |   | |   |   | |         |   `-ImplicitCastExpr 0x1e4aab63138 <col:27> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |         |     `-DeclRefExpr 0x1e4aab63118 <col:27> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | |         `-IntegerLiteral 0x1e4aab631b0 <col:36> 'int' 0
|   |   |   | |   |   | `-CompoundStmt 0x1e4aab63800 <col:41, line:221:21>
|   |   |   | |   |   |   |-CompoundAssignOperator 0x1e4aab63498 <line:217:25, line:218:45> 'int' '-=' ComputeLHSTy='long long' ComputeResultTy='long long'
|   |   |   | |   |   |   | |-DeclRefExpr 0x1e4aab632c0 <line:217:25> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |   | |   |   |   | `-ParenExpr 0x1e4aab63478 <col:30, line:218:45> 'long long'
|   |   |   | |   |   |   |   `-BinaryOperator 0x1e4aab63458 <line:217:31, line:218:44> 'long long' '-'
|   |   |   | |   |   |   |     |-ImplicitCastExpr 0x1e4aab63440 <line:217:31> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |   |     | `-DeclRefExpr 0x1e4aab632e0 <col:31> 'unsigned char *' lvalue Var 0x1e4aab5eaa0 'p' 'unsigned char *'
|   |   |   | |   |   |   |     `-CStyleCastExpr 0x1e4aab63418 <col:35, line:218:44> 'unsigned char *' <BitCast>
|   |   |   | |   |   |   |       `-UnaryOperator 0x1e4aab633e8 <col:31, col:44> 'char *' prefix '&' cannot overflow
|   |   |   | |   |   |   |         `-ParenExpr 0x1e4aab633c8 <col:32, col:44> 'char' lvalue
|   |   |   | |   |   |   |           `-ArraySubscriptExpr 0x1e4aab633a8 <col:33, col:43> 'char' lvalue
|   |   |   | |   |   |   |             |-ImplicitCastExpr 0x1e4aab63390 <col:33, col:38> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   |   |             | `-MemberExpr 0x1e4aab63338 <col:33, col:38> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   |   | |   |   |   |             |   `-ImplicitCastExpr 0x1e4aab63320 <col:33> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   |   |             |     `-DeclRefExpr 0x1e4aab63300 <col:33> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   |   |             `-IntegerLiteral 0x1e4aab63368 <col:42> 'int' 0
|   |   |   | |   |   |   `-ForStmt 0x1e4aab637c8 <line:219:25, line:220:46>
|   |   |   | |   |   |     |-BinaryOperator 0x1e4aab63528 <line:219:30, col:34> 'int' '='
|   |   |   | |   |   |     | |-DeclRefExpr 0x1e4aab634c8 <col:30> 'int' lvalue Var 0x1e4aab5e758 'x' 'int'
|   |   |   | |   |   |     | `-IntegerLiteral 0x1e4aab63500 <col:34> 'int' 0
|   |   |   | |   |   |     |-<<<NULL>>>
|   |   |   | |   |   |     |-BinaryOperator 0x1e4aab635b8 <col:37, col:41> 'int' '<'
|   |   |   | |   |   |     | |-ImplicitCastExpr 0x1e4aab63588 <col:37> 'int' <LValueToRValue>
|   |   |   | |   |   |     | | `-DeclRefExpr 0x1e4aab63548 <col:37> 'int' lvalue Var 0x1e4aab5e758 'x' 'int'
|   |   |   | |   |   |     | `-ImplicitCastExpr 0x1e4aab635a0 <col:41> 'int' <LValueToRValue>
|   |   |   | |   |   |     |   `-DeclRefExpr 0x1e4aab63568 <col:41> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |   | |   |   |     |-UnaryOperator 0x1e4aab635f8 <col:44, col:45> 'int' postfix '++'
|   |   |   | |   |   |     | `-DeclRefExpr 0x1e4aab635d8 <col:44> 'int' lvalue Var 0x1e4aab5e758 'x' 'int'
|   |   |   | |   |   |     `-BinaryOperator 0x1e4aab637a8 <line:220:29, col:46> 'char' '='
|   |   |   | |   |   |       |-ArraySubscriptExpr 0x1e4aab636c8 <col:29, col:39> 'char' lvalue
|   |   |   | |   |   |       | |-ImplicitCastExpr 0x1e4aab63698 <col:29, col:34> 'char *' <ArrayToPointerDecay>
|   |   |   | |   |   |       | | `-MemberExpr 0x1e4aab63648 <col:29, col:34> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   |   | |   |   |       | |   `-ImplicitCastExpr 0x1e4aab63630 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   |       | |     `-DeclRefExpr 0x1e4aab63610 <col:29> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   |       | `-ImplicitCastExpr 0x1e4aab636b0 <col:38> 'int' <LValueToRValue>
|   |   |   | |   |   |       |   `-DeclRefExpr 0x1e4aab63678 <col:38> 'int' lvalue Var 0x1e4aab5e758 'x' 'int'
|   |   |   | |   |   |       `-ImplicitCastExpr 0x1e4aab63790 <col:43, col:46> 'char' <IntegralCast>
|   |   |   | |   |   |         `-ImplicitCastExpr 0x1e4aab63778 <col:43, col:46> 'unsigned char' <LValueToRValue>
|   |   |   | |   |   |           `-ArraySubscriptExpr 0x1e4aab63758 <col:43, col:46> 'unsigned char' lvalue
|   |   |   | |   |   |             |-ImplicitCastExpr 0x1e4aab63728 <col:43> 'unsigned char *' <LValueToRValue>
|   |   |   | |   |   |             | `-DeclRefExpr 0x1e4aab636e8 <col:43> 'unsigned char *' lvalue Var 0x1e4aab5eaa0 'p' 'unsigned char *'
|   |   |   | |   |   |             `-ImplicitCastExpr 0x1e4aab63740 <col:45> 'int' <LValueToRValue>
|   |   |   | |   |   |               `-DeclRefExpr 0x1e4aab63708 <col:45> 'int' lvalue Var 0x1e4aab5e758 'x' 'int'
|   |   |   | |   |   |-BinaryOperator 0x1e4aab63920 <line:223:21, col:34> 'int' '='
|   |   |   | |   |   | |-MemberExpr 0x1e4aab638c8 <col:21, col:26> 'int' lvalue ->start 0x1e4aab5f1c8
|   |   |   | |   |   | | `-ImplicitCastExpr 0x1e4aab638b0 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   |   | |   `-DeclRefExpr 0x1e4aab63890 <col:21> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   | |   |   | `-IntegerLiteral 0x1e4aab638f8 <col:34> 'int' 0
|   |   |   | |   |   `-BreakStmt 0x1e4aab63940 <line:224:21>
|   |   |   | |   `-BinaryOperator 0x1e4aab639f8 <line:226:17, col:21> 'unsigned char *' '='
|   |   |   | |     |-DeclRefExpr 0x1e4aab639a0 <col:17> 'unsigned char *' lvalue Var 0x1e4aab5eaa0 'p' 'unsigned char *'
|   |   |   | |     `-ImplicitCastExpr 0x1e4aab639e0 <col:21> 'unsigned char *' <LValueToRValue>
|   |   |   | |       `-DeclRefExpr 0x1e4aab639c0 <col:21> 'unsigned char *' lvalue Var 0x1e4aab5eb20 'q' 'unsigned char *'
|   |   |   | `-IfStmt 0x1e4aab5c628 <line:230:13, line:251:13> has_else
|   |   |   |   |-BinaryOperator 0x1e4aab63bd0 <line:230:17, col:38> 'int' '&&'
|   |   |   |   | |-ParenExpr 0x1e4aab63b10 <col:17, col:24> 'int'
|   |   |   |   | | `-BinaryOperator 0x1e4aab63af0 <col:18, col:23> 'int' '=='
|   |   |   |   | |   |-ImplicitCastExpr 0x1e4aab63ac0 <col:18> 'int' <LValueToRValue>
|   |   |   |   | |   | `-DeclRefExpr 0x1e4aab63a80 <col:18> 'int' lvalue Var 0x1e4aab5e658 'j' 'int'
|   |   |   |   | |   `-ImplicitCastExpr 0x1e4aab63ad8 <col:23> 'int' <LValueToRValue>
|   |   |   |   | |     `-DeclRefExpr 0x1e4aab63aa0 <col:23> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |   |   | `-ParenExpr 0x1e4aab63bb0 <col:29, col:38> 'int'
|   |   |   |   |   `-BinaryOperator 0x1e4aab63b90 <col:30, col:37> 'int' '=='
|   |   |   |   |     |-ImplicitCastExpr 0x1e4aab63b78 <col:30> 'int' <LValueToRValue>
|   |   |   |   |     | `-DeclRefExpr 0x1e4aab63b30 <col:30> 'int' lvalue Var 0x1e4aab5e858 'num' 'int'
|   |   |   |   |     `-IntegerLiteral 0x1e4aab63b50 <col:37> 'int' 0
|   |   |   |   |-CompoundStmt 0x1e4aab5c540 <col:41, line:249:13>
|   |   |   |   | |-IfStmt 0x1e4aab5c510 <line:235:17, line:246:17> has_else
|   |   |   |   | | |-BinaryOperator 0x1e4aab63d68 <line:235:21, col:56> 'int' '=='
|   |   |   |   | | | |-ImplicitCastExpr 0x1e4aab63d50 <col:21> 'unsigned char *' <LValueToRValue>
|   |   |   |   | | | | `-DeclRefExpr 0x1e4aab63bf0 <col:21> 'unsigned char *' lvalue Var 0x1e4aab5eaa0 'p' 'unsigned char *'
|   |   |   |   | | | `-CStyleCastExpr 0x1e4aab63d28 <col:26, col:56> 'unsigned char *' <BitCast>
|   |   |   |   | | |   `-UnaryOperator 0x1e4aab63cf8 <col:43, col:56> 'char *' prefix '&' cannot overflow
|   |   |   |   | | |     `-ParenExpr 0x1e4aab63cd8 <col:44, col:56> 'char' lvalue
|   |   |   |   | | |       `-ArraySubscriptExpr 0x1e4aab63cb8 <col:45, col:55> 'char' lvalue
|   |   |   |   | | |         |-ImplicitCastExpr 0x1e4aab63ca0 <col:45, col:50> 'char *' <ArrayToPointerDecay>
|   |   |   |   | | |         | `-MemberExpr 0x1e4aab63c48 <col:45, col:50> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   |   |   | | |         |   `-ImplicitCastExpr 0x1e4aab63c30 <col:45> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |         |     `-DeclRefExpr 0x1e4aab63c10 <col:45> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |         `-IntegerLiteral 0x1e4aab63c78 <col:54> 'int' 0
|   |   |   |   | | |-CompoundStmt 0x1e4aab63fa0 <col:59, line:241:17>
|   |   |   |   | | | `-IfStmt 0x1e4aab63f88 <line:237:21, line:240:21>
|   |   |   |   | | |   |-BinaryOperator 0x1e4aab63de8 <line:237:25, line:27:25> 'int' '=='
|   |   |   |   | | |   | |-ImplicitCastExpr 0x1e4aab63dd0 <line:237:25> 'int' <LValueToRValue>
|   |   |   |   | | |   | | `-DeclRefExpr 0x1e4aab63d88 <col:25> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |   |   | | |   | `-IntegerLiteral 0x1e4aab63da8 <line:27:25> 'int' 1024
|   |   |   |   | | |   `-CompoundStmt 0x1e4aab63f68 <line:237:46, line:240:21>
|   |   |   |   | | |     |-BinaryOperator 0x1e4aab63e98 <line:238:25, col:39> 'int' '='
|   |   |   |   | | |     | |-MemberExpr 0x1e4aab63e40 <col:25, col:30> 'int' lvalue ->tmp_nl 0x1e4aab5a088
|   |   |   |   | | |     | | `-ImplicitCastExpr 0x1e4aab63e28 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |     | |   `-DeclRefExpr 0x1e4aab63e08 <col:25> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |     | `-IntegerLiteral 0x1e4aab63e70 <col:39> 'int' 1
|   |   |   |   | | |     `-BinaryOperator 0x1e4aab63f48 <line:239:25, col:40> 'int' '='
|   |   |   |   | | |       |-MemberExpr 0x1e4aab63ef0 <col:25, col:30> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   |   |   | | |       | `-ImplicitCastExpr 0x1e4aab63ed8 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | | |       |   `-DeclRefExpr 0x1e4aab63eb8 <col:25> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | | |       `-IntegerLiteral 0x1e4aab63f20 <col:40> 'int' 0
|   |   |   |   | | `-IfStmt 0x1e4aab5c4f8 <line:241:24, line:246:17>
|   |   |   |   | |   |-BinaryOperator 0x1e4aab64028 <line:241:28, col:33> 'int' '!='
|   |   |   |   | |   | |-ImplicitCastExpr 0x1e4aab63ff8 <col:28> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |   | | `-DeclRefExpr 0x1e4aab63fb8 <col:28> 'unsigned char *' lvalue Var 0x1e4aab5eaa0 'p' 'unsigned char *'
|   |   |   |   | |   | `-ImplicitCastExpr 0x1e4aab64010 <col:33> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |   |   `-DeclRefExpr 0x1e4aab63fd8 <col:33> 'unsigned char *' lvalue Var 0x1e4aab5eb20 'q' 'unsigned char *'
|   |   |   |   | |   `-CompoundStmt 0x1e4aab5c4d0 <col:36, line:246:17>
|   |   |   |   | |     |-BinaryOperator 0x1e4aab64128 <line:242:21, col:29> 'int' '='
|   |   |   |   | |     | |-DeclRefExpr 0x1e4aab64048 <col:21> 'int' lvalue Var 0x1e4aab5e7d8 'n' 'int'
|   |   |   |   | |     | `-ImplicitCastExpr 0x1e4aab64110 <col:25, col:29> 'int' <IntegralCast>
|   |   |   |   | |     |   `-BinaryOperator 0x1e4aab640f0 <col:25, col:29> 'long long' '-'
|   |   |   |   | |     |     |-ImplicitCastExpr 0x1e4aab640c0 <col:25> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |     | `-DeclRefExpr 0x1e4aab64080 <col:25> 'unsigned char *' lvalue Var 0x1e4aab5eb20 'q' 'unsigned char *'
|   |   |   |   | |     |     `-ImplicitCastExpr 0x1e4aab640d8 <col:29> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |       `-DeclRefExpr 0x1e4aab640a0 <col:29> 'unsigned char *' lvalue Var 0x1e4aab5eaa0 'p' 'unsigned char *'
|   |   |   |   | |     |-ForStmt 0x1e4aab5c3d8 <line:243:21, line:244:44>
|   |   |   |   | |     | |-BinaryOperator 0x1e4aab5c138 <line:243:26, col:31> 'int' '='
|   |   |   |   | |     | | |-DeclRefExpr 0x1e4aab64148 <col:26> 'int' lvalue Var 0x1e4aab5e5d8 'ii' 'int'
|   |   |   |   | |     | | `-IntegerLiteral 0x1e4aab5c110 <col:31> 'int' 0
|   |   |   |   | |     | |-<<<NULL>>>
|   |   |   |   | |     | |-BinaryOperator 0x1e4aab5c1c8 <col:34, col:39> 'int' '<'
|   |   |   |   | |     | | |-ImplicitCastExpr 0x1e4aab5c198 <col:34> 'int' <LValueToRValue>
|   |   |   |   | |     | | | `-DeclRefExpr 0x1e4aab5c158 <col:34> 'int' lvalue Var 0x1e4aab5e5d8 'ii' 'int'
|   |   |   |   | |     | | `-ImplicitCastExpr 0x1e4aab5c1b0 <col:39> 'int' <LValueToRValue>
|   |   |   |   | |     | |   `-DeclRefExpr 0x1e4aab5c178 <col:39> 'int' lvalue Var 0x1e4aab5e7d8 'n' 'int'
|   |   |   |   | |     | |-UnaryOperator 0x1e4aab5c208 <col:42, col:44> 'int' postfix '++'
|   |   |   |   | |     | | `-DeclRefExpr 0x1e4aab5c1e8 <col:42> 'int' lvalue Var 0x1e4aab5e5d8 'ii' 'int'
|   |   |   |   | |     | `-BinaryOperator 0x1e4aab5c3b8 <line:244:25, col:44> 'char' '='
|   |   |   |   | |     |   |-ArraySubscriptExpr 0x1e4aab5c2d8 <col:25, col:36> 'char' lvalue
|   |   |   |   | |     |   | |-ImplicitCastExpr 0x1e4aab5c2a8 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   |   |   | |     |   | | `-MemberExpr 0x1e4aab5c258 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   |   |   | |     |   | |   `-ImplicitCastExpr 0x1e4aab5c240 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | |     |   | |     `-DeclRefExpr 0x1e4aab5c220 <col:25> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | |     |   | `-ImplicitCastExpr 0x1e4aab5c2c0 <col:34> 'int' <LValueToRValue>
|   |   |   |   | |     |   |   `-DeclRefExpr 0x1e4aab5c288 <col:34> 'int' lvalue Var 0x1e4aab5e5d8 'ii' 'int'
|   |   |   |   | |     |   `-ImplicitCastExpr 0x1e4aab5c3a0 <col:40, col:44> 'char' <IntegralCast>
|   |   |   |   | |     |     `-ImplicitCastExpr 0x1e4aab5c388 <col:40, col:44> 'unsigned char' <LValueToRValue>
|   |   |   |   | |     |       `-ArraySubscriptExpr 0x1e4aab5c368 <col:40, col:44> 'unsigned char' lvalue
|   |   |   |   | |     |         |-ImplicitCastExpr 0x1e4aab5c338 <col:40> 'unsigned char *' <LValueToRValue>
|   |   |   |   | |     |         | `-DeclRefExpr 0x1e4aab5c2f8 <col:40> 'unsigned char *' lvalue Var 0x1e4aab5eaa0 'p' 'unsigned char *'
|   |   |   |   | |     |         `-ImplicitCastExpr 0x1e4aab5c350 <col:42> 'int' <LValueToRValue>
|   |   |   |   | |     |           `-DeclRefExpr 0x1e4aab5c318 <col:42> 'int' lvalue Var 0x1e4aab5e5d8 'ii' 'int'
|   |   |   |   | |     `-BinaryOperator 0x1e4aab5c4b0 <line:245:21, col:36> 'int' '='
|   |   |   |   | |       |-MemberExpr 0x1e4aab5c448 <col:21, col:26> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   |   |   | |       | `-ImplicitCastExpr 0x1e4aab5c430 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   | |       |   `-DeclRefExpr 0x1e4aab5c410 <col:21> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   |   | |       `-ImplicitCastExpr 0x1e4aab5c498 <col:36> 'int' <LValueToRValue>
|   |   |   |   | |         `-DeclRefExpr 0x1e4aab5c478 <col:36> 'int' lvalue Var 0x1e4aab5e7d8 'n' 'int'
|   |   |   |   | `-ContinueStmt 0x1e4aab5c538 <line:248:17>
|   |   |   |   `-CompoundStmt 0x1e4aab5c610 <line:249:20, line:251:13>
|   |   |   |     `-BinaryOperator 0x1e4aab5c5f0 <line:250:17, col:32> 'int' '='
|   |   |   |       |-MemberExpr 0x1e4aab5c598 <col:17, col:22> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   |   |       | `-ImplicitCastExpr 0x1e4aab5c580 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |       |   `-DeclRefExpr 0x1e4aab5c560 <col:17> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   |       `-IntegerLiteral 0x1e4aab5c5c8 <col:32> 'int' 0
|   |   |   `-IfStmt 0x1e4aab5c848 <line:252:16, line:258:9>
|   |   |     |-BinaryOperator 0x1e4aab5c808 <line:252:20, col:58> 'int' '&&'
|   |   |     | |-ParenExpr 0x1e4aab5c700 <col:20, col:39> 'int'
|   |   |     | | `-BinaryOperator 0x1e4aab5c6e0 <col:21, line:27:25> 'int' '<'
|   |   |     | |   |-ImplicitCastExpr 0x1e4aab5c6c8 <line:252:21> 'int' <LValueToRValue>
|   |   |     | |   | `-DeclRefExpr 0x1e4aab5c680 <col:21> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |     | |   `-IntegerLiteral 0x1e4aab5c6a0 <line:27:25> 'int' 1024
|   |   |     | `-ParenExpr 0x1e4aab5c7e8 <line:252:44, col:58> 'int'
|   |   |     |   `-BinaryOperator 0x1e4aab5c7c8 <col:45, col:57> 'int' '>'
|   |   |     |     |-ImplicitCastExpr 0x1e4aab5c7b0 <col:45, col:50> 'int' <LValueToRValue>
|   |   |     |     | `-MemberExpr 0x1e4aab5c758 <col:45, col:50> 'int' lvalue ->cont 0x1e4aab5f238
|   |   |     |     |   `-ImplicitCastExpr 0x1e4aab5c740 <col:45> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     |     `-DeclRefExpr 0x1e4aab5c720 <col:45> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |     |     `-IntegerLiteral 0x1e4aab5c788 <col:57> 'int' 0
|   |   |     `-CompoundStmt 0x1e4aab5c830 <col:61, line:258:9>
|   |   |       `-ContinueStmt 0x1e4aab5c828 <line:257:13>
|   |   |-IfStmt 0x1e4aab64f18 <line:260:9, line:290:9> has_else
|   |   | |-OpaqueValueExpr 0x1e4aab64f00 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1e4aab64be0 <line:260:56, line:285:9>
|   |   | | |-DeclStmt 0x1e4aab5ca00 <line:261:13, col:22>
|   |   | | | |-VarDecl 0x1e4aab5c900 <col:13, col:17> col:17 used z 'int'
|   |   | | | `-VarDecl 0x1e4aab5c980 <col:13, col:20> col:20 used jj 'int'
|   |   | | |-BinaryOperator 0x1e4aab5cae8 <line:263:13, col:23> 'int' '='
|   |   | | | |-DeclRefExpr 0x1e4aab5ca18 <col:13> 'int' lvalue Var 0x1e4aab5c980 'jj' 'int'
|   |   | | | `-BinaryOperator 0x1e4aab5cac8 <col:18, col:23> 'int' '&'
|   |   | | |   |-ImplicitCastExpr 0x1e4aab5cab0 <col:18> 'int' <LValueToRValue>
|   |   | | |   | `-DeclRefExpr 0x1e4aab5ca50 <col:18> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   | | |   `-UnaryOperator 0x1e4aab5ca98 <col:22, col:23> 'int' prefix '~' cannot overflow
|   |   | | |     `-IntegerLiteral 0x1e4aab5ca70 <col:23> 'int' 3
|   |   | | |-IfStmt 0x1e4aab64250 <line:266:13, line:272:13>
|   |   | | | |-BinaryOperator 0x1e4aab5cdc8 <line:266:17, col:22> 'int' '>'
|   |   | | | | |-ImplicitCastExpr 0x1e4aab5cdb0 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x1e4aab5cd68 <col:17> 'int' lvalue Var 0x1e4aab5c980 'jj' 'int'
|   |   | | | | `-IntegerLiteral 0x1e4aab5cd88 <col:22> 'int' 2
|   |   | | | `-CompoundStmt 0x1e4aab64238 <col:25, line:272:13>
|   |   | | |   `-IfStmt 0x1e4aab64220 <line:267:17, line:271:17>
|   |   | | |     |-BinaryOperator 0x1e4aab5cf50 <line:267:21, col:41> 'int' '=='
|   |   | | |     | |-ImplicitCastExpr 0x1e4aab5cf38 <col:21, col:36> 'int' <IntegralCast>
|   |   | | |     | | `-ImplicitCastExpr 0x1e4aab5cf20 <col:21, col:36> 'char' <LValueToRValue>
|   |   | | |     | |   `-ArraySubscriptExpr 0x1e4aab5cee8 <col:21, col:36> 'char' lvalue
|   |   | | |     | |     |-ImplicitCastExpr 0x1e4aab5ced0 <col:21, col:26> 'char *' <ArrayToPointerDecay>
|   |   | | |     | |     | `-MemberExpr 0x1e4aab5ce20 <col:21, col:26> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   | | |     | |     |   `-ImplicitCastExpr 0x1e4aab5ce08 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     | |     |     `-DeclRefExpr 0x1e4aab5cde8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | | |     | |     `-BinaryOperator 0x1e4aab5ceb0 <col:30, col:35> 'int' '-'
|   |   | | |     | |       |-ImplicitCastExpr 0x1e4aab5ce98 <col:30> 'int' <LValueToRValue>
|   |   | | |     | |       | `-DeclRefExpr 0x1e4aab5ce50 <col:30> 'int' lvalue Var 0x1e4aab5c980 'jj' 'int'
|   |   | | |     | |       `-IntegerLiteral 0x1e4aab5ce70 <col:35> 'int' 1
|   |   | | |     | `-CharacterLiteral 0x1e4aab5cf08 <col:41> 'int' 61
|   |   | | |     `-CompoundStmt 0x1e4aab64200 <col:46, line:271:17>
|   |   | | |       |-UnaryOperator 0x1e4aab5cf90 <line:268:21, col:22> 'int' postfix '--'
|   |   | | |       | `-DeclRefExpr 0x1e4aab5cf70 <col:21> 'int' lvalue Var 0x1e4aab5c900 'z' 'int'
|   |   | | |       `-IfStmt 0x1e4aab641e8 <line:269:21, line:270:26>
|   |   | | |         |-BinaryOperator 0x1e4aab64190 <line:269:25, col:45> 'int' '=='
|   |   | | |         | |-ImplicitCastExpr 0x1e4aab5d0f8 <col:25, col:40> 'int' <IntegralCast>
|   |   | | |         | | `-ImplicitCastExpr 0x1e4aab5d0e0 <col:25, col:40> 'char' <LValueToRValue>
|   |   | | |         | |   `-ArraySubscriptExpr 0x1e4aab5d0a8 <col:25, col:40> 'char' lvalue
|   |   | | |         | |     |-ImplicitCastExpr 0x1e4aab5d090 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   | | |         | |     | `-MemberExpr 0x1e4aab5cfe0 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   | | |         | |     |   `-ImplicitCastExpr 0x1e4aab5cfc8 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |         | |     |     `-DeclRefExpr 0x1e4aab5cfa8 <col:25> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | | |         | |     `-BinaryOperator 0x1e4aab5d070 <col:34, col:39> 'int' '-'
|   |   | | |         | |       |-ImplicitCastExpr 0x1e4aab5d058 <col:34> 'int' <LValueToRValue>
|   |   | | |         | |       | `-DeclRefExpr 0x1e4aab5d010 <col:34> 'int' lvalue Var 0x1e4aab5c980 'jj' 'int'
|   |   | | |         | |       `-IntegerLiteral 0x1e4aab5d030 <col:39> 'int' 2
|   |   | | |         | `-CharacterLiteral 0x1e4aab5d0c8 <col:45> 'int' 61
|   |   | | |         `-UnaryOperator 0x1e4aab641d0 <line:270:25, col:26> 'int' postfix '--'
|   |   | | |           `-DeclRefExpr 0x1e4aab641b0 <col:25> 'int' lvalue Var 0x1e4aab5c900 'z' 'int'
|   |   | | |-IfStmt 0x1e4aab64930 <line:276:13, line:279:13>
|   |   | | | |-BinaryOperator 0x1e4aab642d8 <line:276:17, col:23> 'int' '!='
|   |   | | | | |-ImplicitCastExpr 0x1e4aab642a8 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x1e4aab64268 <col:17> 'int' lvalue Var 0x1e4aab5c980 'jj' 'int'
|   |   | | | | `-ImplicitCastExpr 0x1e4aab642c0 <col:23> 'int' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x1e4aab64288 <col:23> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   | | | `-CompoundStmt 0x1e4aab64910 <col:26, line:279:13>
|   |   | | |   |-CallExpr 0x1e4aab64760 <line:277:17, col:56> 'void *'
|   |   | | |   | |-ImplicitCastExpr 0x1e4aab64748 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | | |   | | `-DeclRefExpr 0x1e4aab644e8 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x1e4aab642f8 'memmove' 'void *(void *, const void *, unsigned long long)'
|   |   | | |   | |-ImplicitCastExpr 0x1e4aab647b0 <col:25, col:30> 'void *' <BitCast>
|   |   | | |   | | `-ImplicitCastExpr 0x1e4aab64798 <col:25, col:30> 'char *' <ArrayToPointerDecay>
|   |   | | |   | |   `-MemberExpr 0x1e4aab64558 <col:25, col:30> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   | | |   | |     `-ImplicitCastExpr 0x1e4aab64540 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x1e4aab64520 <col:25> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | | |   | |-ImplicitCastExpr 0x1e4aab647c8 <col:35, col:47> 'const void *' <BitCast>
|   |   | | |   | | `-UnaryOperator 0x1e4aab64660 <col:35, col:47> 'char *' prefix '&' cannot overflow
|   |   | | |   | |   `-ArraySubscriptExpr 0x1e4aab64640 <col:36, col:47> 'char' lvalue
|   |   | | |   | |     |-ImplicitCastExpr 0x1e4aab64610 <col:36, col:41> 'char *' <ArrayToPointerDecay>
|   |   | | |   | |     | `-MemberExpr 0x1e4aab645c0 <col:36, col:41> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   | | |   | |     |   `-ImplicitCastExpr 0x1e4aab645a8 <col:36> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |   | |     |     `-DeclRefExpr 0x1e4aab64588 <col:36> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | | |   | |     `-ImplicitCastExpr 0x1e4aab64628 <col:45> 'int' <LValueToRValue>
|   |   | | |   | |       `-DeclRefExpr 0x1e4aab645f0 <col:45> 'int' lvalue Var 0x1e4aab5c980 'jj' 'int'
|   |   | | |   | `-ImplicitCastExpr 0x1e4aab647e0 <col:50, col:54> 'unsigned long long' <IntegralCast>
|   |   | | |   |   `-BinaryOperator 0x1e4aab646e8 <col:50, col:54> 'int' '-'
|   |   | | |   |     |-ImplicitCastExpr 0x1e4aab646b8 <col:50> 'int' <LValueToRValue>
|   |   | | |   |     | `-DeclRefExpr 0x1e4aab64678 <col:50> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   | | |   |     `-ImplicitCastExpr 0x1e4aab646d0 <col:54> 'int' <LValueToRValue>
|   |   | | |   |       `-DeclRefExpr 0x1e4aab64698 <col:54> 'int' lvalue Var 0x1e4aab5c980 'jj' 'int'
|   |   | | |   `-BinaryOperator 0x1e4aab648f0 <line:278:17, col:36> 'int' '='
|   |   | | |     |-MemberExpr 0x1e4aab64830 <col:17, col:22> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | | |     | `-ImplicitCastExpr 0x1e4aab64818 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x1e4aab647f8 <col:17> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | | |     `-BinaryOperator 0x1e4aab648d0 <col:32, col:36> 'int' '-'
|   |   | | |       |-ImplicitCastExpr 0x1e4aab648a0 <col:32> 'int' <LValueToRValue>
|   |   | | |       | `-DeclRefExpr 0x1e4aab64860 <col:32> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   | | |       `-ImplicitCastExpr 0x1e4aab648b8 <col:36> 'int' <LValueToRValue>
|   |   | | |         `-DeclRefExpr 0x1e4aab64880 <col:36> 'int' lvalue Var 0x1e4aab5c980 'jj' 'int'
|   |   | | |-BinaryOperator 0x1e4aab649d8 <line:280:13, col:28> 'int' '='
|   |   | | | |-MemberExpr 0x1e4aab64980 <col:13, col:18> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   | | | | `-ImplicitCastExpr 0x1e4aab64968 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | | |   `-DeclRefExpr 0x1e4aab64948 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | | | `-IntegerLiteral 0x1e4aab649b0 <col:28> 'int' 0
|   |   | | |-IfStmt 0x1e4aab64b50 <line:281:13, line:283:13>
|   |   | | | |-BinaryOperator 0x1e4aab64a58 <line:281:17, col:21> 'int' '>'
|   |   | | | | |-ImplicitCastExpr 0x1e4aab64a40 <col:17> 'int' <LValueToRValue>
|   |   | | | | | `-DeclRefExpr 0x1e4aab649f8 <col:17> 'int' lvalue Var 0x1e4aab5c900 'z' 'int'
|   |   | | | | `-IntegerLiteral 0x1e4aab64a18 <col:21> 'int' 0
|   |   | | | `-CompoundStmt 0x1e4aab64b38 <col:24, line:283:13>
|   |   | | |   `-BinaryOperator 0x1e4aab64b18 <line:282:17, col:32> 'int' '='
|   |   | | |     |-MemberExpr 0x1e4aab64ab0 <col:17, col:22> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   | | |     | `-ImplicitCastExpr 0x1e4aab64a98 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     |   `-DeclRefExpr 0x1e4aab64a78 <col:17> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | | |     `-ImplicitCastExpr 0x1e4aab64b00 <col:32> 'int' <LValueToRValue>
|   |   | | |       `-DeclRefExpr 0x1e4aab64ae0 <col:32> 'int' lvalue Var 0x1e4aab5c900 'z' 'int'
|   |   | | `-BinaryOperator 0x1e4aab64bc0 <line:284:13, col:17> 'int' '='
|   |   | |   |-DeclRefExpr 0x1e4aab64b68 <col:13> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   | |   `-ImplicitCastExpr 0x1e4aab64ba8 <col:17> 'int' <LValueToRValue>
|   |   | |     `-DeclRefExpr 0x1e4aab64b88 <col:17> 'int' lvalue Var 0x1e4aab5c900 'z' 'int'
|   |   | `-CompoundStmt 0x1e4aab64ee8 <line:285:16, line:290:9>
|   |   |   `-BinaryOperator 0x1e4aab64ec8 <line:289:13, col:28> 'int' '='
|   |   |     |-MemberExpr 0x1e4aab64e70 <col:13, col:18> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   |     | `-ImplicitCastExpr 0x1e4aab64e58 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1e4aab64e38 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |     `-IntegerLiteral 0x1e4aab64ea0 <col:28> 'int' 0
|   |   |-BinaryOperator 0x1e4aab64fe0 <line:297:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x1e4aab64f78 <col:9, col:14> 'int' lvalue ->cont 0x1e4aab5f238
|   |   | | `-ImplicitCastExpr 0x1e4aab64f60 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab64f40 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x1e4aab64fc8 <col:21> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab64fa8 <col:21> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |-BinaryOperator 0x1e4aab65090 <line:299:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1e4aab65038 <col:9, col:14> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   | | `-ImplicitCastExpr 0x1e4aab65020 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab65000 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab65068 <col:24> 'int' 0
|   |   |-IfStmt 0x1e4aab5d220 <line:300:9, line:304:9>
|   |   | |-BinaryOperator 0x1e4aab65110 <line:300:13, col:17> 'int' '<'
|   |   | | |-ImplicitCastExpr 0x1e4aab650f8 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1e4aab650b0 <col:13> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   | | `-IntegerLiteral 0x1e4aab650d0 <col:17> 'int' 0
|   |   | `-CompoundStmt 0x1e4aab5d1f8 <col:20, line:304:9>
|   |   |   |-BinaryOperator 0x1e4aab5d120 <line:301:13, col:24> 'int' '='
|   |   |   | |-DeclRefExpr 0x1e4aab65130 <col:13> 'int' lvalue Var 0x1e4aab5e8d8 'ret_code' 'int'
|   |   |   | `-IntegerLiteral 0x1e4aab65150 <col:24> 'int' 0
|   |   |   |-BinaryOperator 0x1e4aab5d1d0 <line:302:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x1e4aab5d178 <col:13, col:18> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |   | | `-ImplicitCastExpr 0x1e4aab5d160 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1e4aab5d140 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-IntegerLiteral 0x1e4aab5d1a8 <col:28> 'int' 0
|   |   |   `-BreakStmt 0x1e4aab5d1f0 <line:303:13>
|   |   |-IfStmt 0x1e4aab5d448 <line:306:9, line:309:17> has_else
|   |   | |-BinaryOperator 0x1e4aab5d2f0 <line:306:13, col:29> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1e4aab5d2c0 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1e4aab5d270 <col:13, col:18> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   | | |   `-ImplicitCastExpr 0x1e4aab5d258 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1e4aab5d238 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | | `-ImplicitCastExpr 0x1e4aab5d2d8 <col:29> 'int' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab5d2a0 <col:29> 'int' lvalue ParmVar 0x1e4aab5e320 'outl' 'int'
|   |   | |-BinaryOperator 0x1e4aab5d3b0 <line:307:13, col:22> 'int' '='
|   |   | | |-DeclRefExpr 0x1e4aab5d310 <col:13> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   | | `-ImplicitCastExpr 0x1e4aab5d398 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1e4aab5d368 <col:17, col:22> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   | |     `-ImplicitCastExpr 0x1e4aab5d350 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1e4aab5d330 <col:17> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | `-BinaryOperator 0x1e4aab5d428 <line:309:13, col:17> 'int' '='
|   |   |   |-DeclRefExpr 0x1e4aab5d3d0 <col:13> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x1e4aab5d410 <col:17> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e4aab5d3f0 <col:17> 'int' lvalue ParmVar 0x1e4aab5e320 'outl' 'int'
|   |   |-CompoundAssignOperator 0x1e4aab5d560 <line:312:9, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1e4aab5d508 <col:9> 'int' lvalue Var 0x1e4aab5e4b0 'ret' 'int'
|   |   | `-ImplicitCastExpr 0x1e4aab5d548 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab5d528 <col:16> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |-BinaryOperator 0x1e4aab5d630 <line:313:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1e4aab5d5c8 <col:9, col:14> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   | | `-ImplicitCastExpr 0x1e4aab5d5b0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab5d590 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x1e4aab5d618 <col:24> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab5d5f8 <col:24> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   |-IfStmt 0x1e4aab5d8f0 <line:314:9, line:317:9>
|   |   | |-BinaryOperator 0x1e4aab5d750 <line:314:13, col:34> 'int' '=='
|   |   | | |-ImplicitCastExpr 0x1e4aab5d720 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1e4aab5d688 <col:13, col:18> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   | | |   `-ImplicitCastExpr 0x1e4aab5d670 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1e4aab5d650 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | | `-ImplicitCastExpr 0x1e4aab5d738 <col:29, col:34> 'int' <LValueToRValue>
|   |   | |   `-MemberExpr 0x1e4aab5d6f0 <col:29, col:34> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   | |     `-ImplicitCastExpr 0x1e4aab5d6d8 <col:29> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |       `-DeclRefExpr 0x1e4aab5d6b8 <col:29> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   | `-CompoundStmt 0x1e4aab5d8d0 <col:43, line:317:9>
|   |   |   |-BinaryOperator 0x1e4aab5d800 <line:315:13, col:28> 'int' '='
|   |   |   | |-MemberExpr 0x1e4aab5d7a8 <col:13, col:18> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |   | | `-ImplicitCastExpr 0x1e4aab5d790 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1e4aab5d770 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-IntegerLiteral 0x1e4aab5d7d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x1e4aab5d8b0 <line:316:13, col:28> 'int' '='
|   |   |     |-MemberExpr 0x1e4aab5d858 <col:13, col:18> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |     | `-ImplicitCastExpr 0x1e4aab5d840 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |   `-DeclRefExpr 0x1e4aab5d820 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab5e9e0 'ctx' 'BIO_B64_CTX *'
|   |   |     `-IntegerLiteral 0x1e4aab5d888 <col:28> 'int' 0
|   |   |-CompoundAssignOperator 0x1e4aab5d960 <line:318:9, col:17> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1e4aab5d908 <col:9> 'int' lvalue ParmVar 0x1e4aab5e320 'outl' 'int'
|   |   | `-ImplicitCastExpr 0x1e4aab5d948 <col:17> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab5d928 <col:17> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   |   `-CompoundAssignOperator 0x1e4aab5d9e8 <line:319:9, col:16> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'
|   |     |-DeclRefExpr 0x1e4aab5d990 <col:9> 'char *' lvalue ParmVar 0x1e4aab5e2a0 'out' 'char *'
|   |     `-ImplicitCastExpr 0x1e4aab5d9d0 <col:16> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e4aab5d9b0 <col:16> 'int' lvalue Var 0x1e4aab5e558 'i' 'int'
|   `-ReturnStmt 0x1e4aab5dd28 <line:323:5, col:40>
|     `-ParenExpr 0x1e4aab5dd08 <col:12, col:40> 'int'
|       `-ConditionalOperator 0x1e4aab5dcd8 <col:13, col:37> 'int'
|         |-ParenExpr 0x1e4aab5dc48 <col:13, col:22> 'int'
|         | `-BinaryOperator 0x1e4aab5dc28 <col:14, col:21> 'int' '=='
|         |   |-ImplicitCastExpr 0x1e4aab5dc10 <col:14> 'int' <LValueToRValue>
|         |   | `-DeclRefExpr 0x1e4aab5dbc8 <col:14> 'int' lvalue Var 0x1e4aab5e4b0 'ret' 'int'
|         |   `-IntegerLiteral 0x1e4aab5dbe8 <col:21> 'int' 0
|         |-ImplicitCastExpr 0x1e4aab5dca8 <col:26> 'int' <LValueToRValue>
|         | `-DeclRefExpr 0x1e4aab5dc68 <col:26> 'int' lvalue Var 0x1e4aab5e8d8 'ret_code' 'int'
|         `-ImplicitCastExpr 0x1e4aab5dcc0 <col:37> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x1e4aab5dc88 <col:37> 'int' lvalue Var 0x1e4aab5e4b0 'ret' 'int'
|-FunctionDecl 0x1e4aab61ec0 <line:140:9> col:9 implicit used memcpy 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1e4aab61f60 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e4aab61fc8 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1e4aab62030 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e4aab642f8 <line:277:17> col:17 implicit used memmove 'void *(void *, const void *, unsigned long long)' extern
| |-ParmVarDecl 0x1e4aab64398 <<invalid sloc>> <invalid sloc> 'void *'
| |-ParmVarDecl 0x1e4aab64400 <<invalid sloc>> <invalid sloc> 'const void *'
| `-ParmVarDecl 0x1e4aab64468 <<invalid sloc>> <invalid sloc> 'unsigned long long'
|-FunctionDecl 0x1e4aab5df58 <line:326:1, line:444:1> line:326:12 invalid b64_write 'int (int *, const char *, int)' static
| |-ParmVarDecl 0x1e4aab5ddb0 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x1e4aab5de30 <col:30, col:42> col:42 used in 'const char *'
| |-ParmVarDecl 0x1e4aab5deb0 <col:46, col:50> col:50 used inl 'int'
| `-CompoundStmt 0x1e4aab6dc10 <line:327:1, line:444:1>
|   |-DeclStmt 0x1e4aab5e0d0 <line:328:5, col:16>
|   | `-VarDecl 0x1e4aab5e040 <col:5, col:15> col:9 used ret 'int' cinit
|   |   `-IntegerLiteral 0x1e4aab5e0a8 <col:15> 'int' 0
|   |-DeclStmt 0x1e4aab6b268 <line:329:5, col:10>
|   | `-VarDecl 0x1e4aab6b200 <col:5, col:9> col:9 used n 'int'
|   |-DeclStmt 0x1e4aab6b300 <line:330:5, col:10>
|   | `-VarDecl 0x1e4aab6b298 <col:5, col:9> col:9 used i 'int'
|   |-DeclStmt 0x1e4aab6b390 <line:331:5, col:21>
|   | `-VarDecl 0x1e4aab6b328 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-IfStmt 0x1e4aab6b610 <line:336:5, line:337:16>
|   | |-OpaqueValueExpr 0x1e4aab6b5f8 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e4aab6b5e8 <col:9, col:16>
|   |   `-IntegerLiteral 0x1e4aab6b5c0 <col:16> 'int' 0
|   |-IfStmt 0x1e4aab6bb48 <line:341:5, line:347:5>
|   | |-BinaryOperator 0x1e4aab6b6f0 <line:341:9, line:30:25> 'int' '!='
|   | | |-ImplicitCastExpr 0x1e4aab6b6d8 <line:341:9, col:14> 'int' <LValueToRValue>
|   | | | `-MemberExpr 0x1e4aab6b680 <col:9, col:14> 'int' lvalue ->encode 0x1e4aab5f158
|   | | |   `-ImplicitCastExpr 0x1e4aab6b668 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   | | |     `-DeclRefExpr 0x1e4aab6b648 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   | | `-IntegerLiteral 0x1e4aab6b6b0 <line:30:25> 'int' 1
|   | `-CompoundStmt 0x1e4aab6bb18 <line:341:36, line:347:5>
|   |   |-BinaryOperator 0x1e4aab6b7a0 <line:342:9, line:30:25> 'int' '='
|   |   | |-MemberExpr 0x1e4aab6b748 <line:342:9, col:14> 'int' lvalue ->encode 0x1e4aab5f158
|   |   | | `-ImplicitCastExpr 0x1e4aab6b730 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab6b710 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab6b778 <line:30:25> 'int' 1
|   |   |-BinaryOperator 0x1e4aab6b850 <line:343:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1e4aab6b7f8 <col:9, col:14> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   | | `-ImplicitCastExpr 0x1e4aab6b7e0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab6b7c0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab6b828 <col:24> 'int' 0
|   |   |-BinaryOperator 0x1e4aab6b900 <line:344:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1e4aab6b8a8 <col:9, col:14> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   | | `-ImplicitCastExpr 0x1e4aab6b890 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab6b870 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab6b8d8 <col:24> 'int' 0
|   |   `-BinaryOperator 0x1e4aab6b9b0 <line:345:9, col:24> 'int' '='
|   |     |-MemberExpr 0x1e4aab6b958 <col:9, col:14> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |     | `-ImplicitCastExpr 0x1e4aab6b940 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1e4aab6b920 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x1e4aab6b988 <col:24> 'int' 0
|   |-CallExpr 0x1e4aab6be38 <line:351:5, col:48> 'int'
|   | |-ImplicitCastExpr 0x1e4aab6be20 <col:5> 'int (*)()' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x1e4aab6bce0 <col:5> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   | `-BinaryOperator 0x1e4aab6be00 <col:20, col:41> 'int' '>='
|   |   |-ImplicitCastExpr 0x1e4aab6bdd0 <col:20, col:25> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x1e4aab6bd38 <col:20, col:25> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |   `-ImplicitCastExpr 0x1e4aab6bd20 <col:20> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e4aab6bd00 <col:20> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   `-ImplicitCastExpr 0x1e4aab6bde8 <col:36, col:41> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1e4aab6bda0 <col:36, col:41> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |       `-ImplicitCastExpr 0x1e4aab6bd88 <col:36> 'BIO_B64_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1e4aab6bd68 <col:36> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |-BinaryOperator 0x1e4aab6bfb8 <line:352:5, col:29> 'int' '='
|   | |-DeclRefExpr 0x1e4aab6be60 <col:5> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   | `-BinaryOperator 0x1e4aab6bf98 <col:9, col:29> 'int' '-'
|   |   |-ImplicitCastExpr 0x1e4aab6bf68 <col:9, col:14> 'int' <LValueToRValue>
|   |   | `-MemberExpr 0x1e4aab6bed0 <col:9, col:14> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |   `-ImplicitCastExpr 0x1e4aab6beb8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e4aab6be98 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   `-ImplicitCastExpr 0x1e4aab6bf80 <col:24, col:29> 'int' <LValueToRValue>
|   |     `-MemberExpr 0x1e4aab6bf38 <col:24, col:29> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |       `-ImplicitCastExpr 0x1e4aab6bf20 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |         `-DeclRefExpr 0x1e4aab6bf00 <col:24> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |-WhileStmt 0x1e4aab6a850 <line:353:5, line:364:5>
|   | |-BinaryOperator 0x1e4aab6c038 <line:353:12, col:16> 'int' '>'
|   | | |-ImplicitCastExpr 0x1e4aab6c020 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e4aab6bfd8 <col:12> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   | | `-IntegerLiteral 0x1e4aab6bff8 <col:16> 'int' 0
|   | `-CompoundStmt 0x1e4aab6a818 <col:19, line:364:5>
|   |   |-IfStmt 0x1e4aab6a378 <line:355:9, line:358:9>
|   |   | |-BinaryOperator 0x1e4aab6a2b8 <line:355:13, col:18> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1e4aab6a2a0 <col:13> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1e4aab6a258 <col:13> 'int' lvalue Var 0x1e4aab6b298 'i' 'int'
|   |   | | `-IntegerLiteral 0x1e4aab6a278 <col:18> 'int' 0
|   |   | `-CompoundStmt 0x1e4aab6a360 <col:21, line:358:9>
|   |   |   `-ReturnStmt 0x1e4aab6a350 <line:357:13, col:22>
|   |   |     `-ImplicitCastExpr 0x1e4aab6a338 <col:20, col:22> 'int' <LValueToRValue>
|   |   |       `-ParenExpr 0x1e4aab6a318 <col:20, col:22> 'int' lvalue
|   |   |         `-DeclRefExpr 0x1e4aab6a2f8 <col:21> 'int' lvalue Var 0x1e4aab6b298 'i' 'int'
|   |   |-CallExpr 0x1e4aab6a458 <line:359:9, col:30> 'int'
|   |   | |-ImplicitCastExpr 0x1e4aab6a440 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1e4aab6a390 <col:9> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x1e4aab6a420 <col:24, col:29> 'int' '<='
|   |   |   |-ImplicitCastExpr 0x1e4aab6a3f0 <col:24> 'int' <LValueToRValue>
|   |   |   | `-DeclRefExpr 0x1e4aab6a3b0 <col:24> 'int' lvalue Var 0x1e4aab6b298 'i' 'int'
|   |   |   `-ImplicitCastExpr 0x1e4aab6a408 <col:29> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e4aab6a3d0 <col:29> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   |-CompoundAssignOperator 0x1e4aab6a520 <line:360:9, col:25> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-MemberExpr 0x1e4aab6a4b8 <col:9, col:14> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   | | `-ImplicitCastExpr 0x1e4aab6a4a0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab6a480 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | `-ImplicitCastExpr 0x1e4aab6a508 <col:25> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab6a4e8 <col:25> 'int' lvalue Var 0x1e4aab6b298 'i' 'int'
|   |   |-CallExpr 0x1e4aab6a768 <line:362:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x1e4aab6a750 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1e4aab6a610 <col:9> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x1e4aab6a730 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x1e4aab6a700 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x1e4aab6a668 <col:24, col:29> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |   |   `-ImplicitCastExpr 0x1e4aab6a650 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1e4aab6a630 <col:24> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x1e4aab6a718 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x1e4aab6a6d0 <col:40, col:45> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |       `-ImplicitCastExpr 0x1e4aab6a6b8 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1e4aab6a698 <col:40> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   `-CompoundAssignOperator 0x1e4aab6a7e8 <line:363:9, col:14> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |     |-DeclRefExpr 0x1e4aab6a790 <col:9> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |     `-ImplicitCastExpr 0x1e4aab6a7d0 <col:14> 'int' <LValueToRValue>
|   |       `-DeclRefExpr 0x1e4aab6a7b0 <col:14> 'int' lvalue Var 0x1e4aab6b298 'i' 'int'
|   |-BinaryOperator 0x1e4aab6a8f8 <line:366:5, col:20> 'int' '='
|   | |-MemberExpr 0x1e4aab6a8a0 <col:5, col:10> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   | | `-ImplicitCastExpr 0x1e4aab6a888 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e4aab6a868 <col:5> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x1e4aab6a8d0 <col:20> 'int' 0
|   |-BinaryOperator 0x1e4aab6a9a8 <line:367:5, col:20> 'int' '='
|   | |-MemberExpr 0x1e4aab6a950 <col:5, col:10> 'int' lvalue ->buf_len 0x1e4aab59f38
|   | | `-ImplicitCastExpr 0x1e4aab6a938 <col:5> 'BIO_B64_CTX *' <LValueToRValue>
|   | |   `-DeclRefExpr 0x1e4aab6a918 <col:5> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   | `-IntegerLiteral 0x1e4aab6a980 <col:20> 'int' 0
|   |-IfStmt 0x1e4aab6ac28 <line:369:5, line:370:18>
|   | |-BinaryOperator 0x1e4aab6abb0 <line:369:9, col:34> 'int' '||'
|   | | |-ParenExpr 0x1e4aab6aad8 <col:9, col:20> 'int'
|   | | | `-BinaryOperator 0x1e4aab6aab8 <col:10, D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:27> 'int' '=='
|   | | |   |-ImplicitCastExpr 0x1e4aab6aa88 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:369:10> 'const char *' <LValueToRValue>
|   | | |   | `-DeclRefExpr 0x1e4aab6a9c8 <col:10> 'const char *' lvalue ParmVar 0x1e4aab5de30 'in' 'const char *'
|   | | |   `-ImplicitCastExpr 0x1e4aab6aaa0 <D:\Microsoft Visual Studio 12.0\VC\include\stdio.h:120:17, col:27> 'const char *' <BitCast>
|   | | |     `-ParenExpr 0x1e4aab6aa68 <col:17, col:27> 'void *'
|   | | |       `-CStyleCastExpr 0x1e4aab6aa40 <col:18, col:26> 'void *' <NullToPointer>
|   | | |         `-IntegerLiteral 0x1e4aab6aa00 <col:26> 'int' 0
|   | | `-ParenExpr 0x1e4aab6ab90 <.//openssl//file_jk/after\crypto\evp\bio_b64.c:369:25, col:34> 'int'
|   | |   `-BinaryOperator 0x1e4aab6ab70 <col:26, col:33> 'int' '<='
|   | |     |-ImplicitCastExpr 0x1e4aab6ab58 <col:26> 'int' <LValueToRValue>
|   | |     | `-DeclRefExpr 0x1e4aab6aaf8 <col:26> 'int' lvalue ParmVar 0x1e4aab5deb0 'inl' 'int'
|   | |     `-IntegerLiteral 0x1e4aab6ab30 <col:33> 'int' 0
|   | `-ReturnStmt 0x1e4aab6ac18 <line:370:9, col:18>
|   |   `-ParenExpr 0x1e4aab6abf8 <col:16, col:18> 'int'
|   |     `-IntegerLiteral 0x1e4aab6abd0 <col:17> 'int' 0
|   |-WhileStmt 0x1e4aab6db90 <line:372:5, line:442:5>
|   | |-BinaryOperator 0x1e4aab6aca0 <line:372:12, col:18> 'int' '>'
|   | | |-ImplicitCastExpr 0x1e4aab6ac88 <col:12> 'int' <LValueToRValue>
|   | | | `-DeclRefExpr 0x1e4aab6ac40 <col:12> 'int' lvalue ParmVar 0x1e4aab5deb0 'inl' 'int'
|   | | `-IntegerLiteral 0x1e4aab6ac60 <col:18> 'int' 0
|   | `-CompoundStmt 0x1e4aab6db38 <col:21, line:442:5>
|   |   |-BinaryOperator 0x1e4aab6ae10 <line:373:9, col:55> 'int' '='
|   |   | |-DeclRefExpr 0x1e4aab6acc0 <col:9> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | `-ConditionalOperator 0x1e4aab6ade0 <col:13, col:55> 'int'
|   |   |   |-ParenExpr 0x1e4aab6ad60 <col:13, col:34> 'int'
|   |   |   | `-BinaryOperator 0x1e4aab6ad40 <col:14, line:27:25> 'int' '>'
|   |   |   |   |-ImplicitCastExpr 0x1e4aab6ad28 <line:373:14> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x1e4aab6ace0 <col:14> 'int' lvalue ParmVar 0x1e4aab5deb0 'inl' 'int'
|   |   |   |   `-IntegerLiteral 0x1e4aab6ad00 <line:27:25> 'int' 1024
|   |   |   |-IntegerLiteral 0x1e4aab6ad80 <col:25> 'int' 1024
|   |   |   `-ImplicitCastExpr 0x1e4aab6adc8 <line:373:55> 'int' <LValueToRValue>
|   |   |     `-DeclRefExpr 0x1e4aab6ada8 <col:55> 'int' lvalue ParmVar 0x1e4aab5deb0 'inl' 'int'
|   |   |-IfStmt 0x1e4aab69e48 <line:375:9, line:422:9> has_else
|   |   | |-OpaqueValueExpr 0x1e4aab69e30 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1e4aab696e8 <line:375:56, line:414:9>
|   |   | | `-IfStmt 0x1e4aab696c0 <line:376:13, line:413:13> has_else
|   |   | |   |-BinaryOperator 0x1e4aab6aef8 <line:376:17, col:32> 'int' '>'
|   |   | |   | |-ImplicitCastExpr 0x1e4aab6aee0 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   | | `-MemberExpr 0x1e4aab6ae88 <col:17, col:22> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | |   | |   `-ImplicitCastExpr 0x1e4aab6ae70 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x1e4aab6ae50 <col:17> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-IntegerLiteral 0x1e4aab6aeb8 <col:32> 'int' 0
|   |   | |   |-CompoundStmt 0x1e4aab65d00 <col:35, line:399:13>
|   |   | |   | |-CallExpr 0x1e4aab6b018 <line:377:17, col:49> 'int'
|   |   | |   | | |-ImplicitCastExpr 0x1e4aab6b000 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x1e4aab6af18 <col:17> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   |   | |   | | `-BinaryOperator 0x1e4aab6afe0 <col:32, col:48> 'int' '<='
|   |   | |   | |   |-ImplicitCastExpr 0x1e4aab6afc8 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |   | |   | `-MemberExpr 0x1e4aab6af70 <col:32, col:37> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | |   | |   |   `-ImplicitCastExpr 0x1e4aab6af58 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |   |     `-DeclRefExpr 0x1e4aab6af38 <col:32> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |   `-IntegerLiteral 0x1e4aab6afa0 <col:48> 'int' 3
|   |   | |   | |-BinaryOperator 0x1e4aab6b128 <line:378:17, col:30> 'int' '='
|   |   | |   | | |-DeclRefExpr 0x1e4aab6b040 <col:17> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |   | | `-BinaryOperator 0x1e4aab6b108 <col:21, col:30> 'int' '-'
|   |   | |   | |   |-IntegerLiteral 0x1e4aab6b060 <col:21> 'int' 3
|   |   | |   | |   `-ImplicitCastExpr 0x1e4aab6b0f0 <col:25, col:30> 'int' <LValueToRValue>
|   |   | |   | |     `-MemberExpr 0x1e4aab6b0c0 <col:25, col:30> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | |   | |       `-ImplicitCastExpr 0x1e4aab6b0a8 <col:25> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |         `-DeclRefExpr 0x1e4aab6b088 <col:25> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |-IfStmt 0x1e4aab65218 <line:382:17, line:383:25>
|   |   | |   | | |-BinaryOperator 0x1e4aab6b1b8 <line:382:21, col:25> 'int' '>'
|   |   | |   | | | |-ImplicitCastExpr 0x1e4aab6b188 <col:21> 'int' <LValueToRValue>
|   |   | |   | | | | `-DeclRefExpr 0x1e4aab6b148 <col:21> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |   | | | `-ImplicitCastExpr 0x1e4aab6b1a0 <col:25> 'int' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x1e4aab6b168 <col:25> 'int' lvalue ParmVar 0x1e4aab5deb0 'inl' 'int'
|   |   | |   | | `-BinaryOperator 0x1e4aab651f8 <line:383:21, col:25> 'int' '='
|   |   | |   | |   |-DeclRefExpr 0x1e4aab651a0 <col:21> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |   | |   `-ImplicitCastExpr 0x1e4aab651e0 <col:25> 'int' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x1e4aab651c0 <col:25> 'int' lvalue ParmVar 0x1e4aab5deb0 'inl' 'int'
|   |   | |   | |-CallExpr 0x1e4aab65430 <line:384:17, col:56> 'void *'
|   |   | |   | | |-ImplicitCastExpr 0x1e4aab65418 <col:17> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x1e4aab65230 <col:17> 'void *(void *, const void *, unsigned long long)' Function 0x1e4aab61ec0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |   | | |-ImplicitCastExpr 0x1e4aab65468 <col:24, col:48> 'void *' <BitCast>
|   |   | |   | | | `-UnaryOperator 0x1e4aab65390 <col:24, col:48> 'char *' prefix '&' cannot overflow
|   |   | |   | | |   `-ParenExpr 0x1e4aab65370 <col:25, col:48> 'char' lvalue
|   |   | |   | | |     `-ArraySubscriptExpr 0x1e4aab65350 <col:26, col:47> 'char' lvalue
|   |   | |   | | |       |-ImplicitCastExpr 0x1e4aab65320 <col:26, col:31> 'char *' <ArrayToPointerDecay>
|   |   | |   | | |       | `-MemberExpr 0x1e4aab65288 <col:26, col:31> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   | |   | | |       |   `-ImplicitCastExpr 0x1e4aab65270 <col:26> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |       |     `-DeclRefExpr 0x1e4aab65250 <col:26> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | |       `-ImplicitCastExpr 0x1e4aab65338 <col:35, col:40> 'int' <LValueToRValue>
|   |   | |   | | |         `-MemberExpr 0x1e4aab652f0 <col:35, col:40> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | |   | | |           `-ImplicitCastExpr 0x1e4aab652d8 <col:35> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |             `-DeclRefExpr 0x1e4aab652b8 <col:35> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | |-ImplicitCastExpr 0x1e4aab65498 <col:51> 'const void *' <BitCast>
|   |   | |   | | | `-ImplicitCastExpr 0x1e4aab65480 <col:51> 'const char *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x1e4aab653a8 <col:51> 'const char *' lvalue ParmVar 0x1e4aab5de30 'in' 'const char *'
|   |   | |   | | `-ImplicitCastExpr 0x1e4aab654c8 <col:55> 'unsigned long long' <IntegralCast>
|   |   | |   | |   `-ImplicitCastExpr 0x1e4aab654b0 <col:55> 'int' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x1e4aab653c8 <col:55> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |   | |-CompoundAssignOperator 0x1e4aab65580 <line:385:17, col:33> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   | | |-MemberExpr 0x1e4aab65518 <col:17, col:22> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | |   | | | `-ImplicitCastExpr 0x1e4aab65500 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | |   `-DeclRefExpr 0x1e4aab654e0 <col:17> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | `-ImplicitCastExpr 0x1e4aab65568 <col:33> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x1e4aab65548 <col:33> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |   | |-CompoundAssignOperator 0x1e4aab65620 <line:386:17, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |   | | |-DeclRefExpr 0x1e4aab655b0 <col:17> 'int' lvalue Var 0x1e4aab5e040 'ret' 'int'
|   |   | |   | | `-ImplicitCastExpr 0x1e4aab65608 <col:24> 'int' <LValueToRValue>
|   |   | |   | |   `-DeclRefExpr 0x1e4aab655e8 <col:24> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |   | |-IfStmt 0x1e4aab65720 <line:387:17, line:388:21>
|   |   | |   | | |-BinaryOperator 0x1e4aab656f8 <line:387:21, col:36> 'int' '<'
|   |   | |   | | | |-ImplicitCastExpr 0x1e4aab656e0 <col:21, col:26> 'int' <LValueToRValue>
|   |   | |   | | | | `-MemberExpr 0x1e4aab65688 <col:21, col:26> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | |   | | | |   `-ImplicitCastExpr 0x1e4aab65670 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | | | |     `-DeclRefExpr 0x1e4aab65650 <col:21> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |   | | | `-IntegerLiteral 0x1e4aab656b8 <col:36> 'int' 3
|   |   | |   | | `-BreakStmt 0x1e4aab65718 <line:388:21>
|   |   | |   | |-CallExpr 0x1e4aab65c28 <line:393:17, col:60> 'int'
|   |   | |   | | |-ImplicitCastExpr 0x1e4aab65c10 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |   | | | `-DeclRefExpr 0x1e4aab65ad0 <col:17> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   |   | |   | | `-BinaryOperator 0x1e4aab65bf0 <col:32, col:53> 'int' '>='
|   |   | |   | |   |-ImplicitCastExpr 0x1e4aab65bc0 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |   | |   | `-MemberExpr 0x1e4aab65b28 <col:32, col:37> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   | |   | |   |   `-ImplicitCastExpr 0x1e4aab65b10 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |   |     `-DeclRefExpr 0x1e4aab65af0 <col:32> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |   | |   `-ImplicitCastExpr 0x1e4aab65bd8 <col:48, col:53> 'int' <LValueToRValue>
|   |   | |   | |     `-MemberExpr 0x1e4aab65b90 <col:48, col:53> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   | |   | |       `-ImplicitCastExpr 0x1e4aab65b78 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |         `-DeclRefExpr 0x1e4aab65b58 <col:48> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-BinaryOperator 0x1e4aab65ce0 <line:398:17, col:32> 'int' '='
|   |   | |   |   |-MemberExpr 0x1e4aab65c88 <col:17, col:22> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | |   |   | `-ImplicitCastExpr 0x1e4aab65c70 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   |   |   `-DeclRefExpr 0x1e4aab65c50 <col:17> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |   |   `-IntegerLiteral 0x1e4aab65cb8 <col:32> 'int' 0
|   |   | |   `-CompoundStmt 0x1e4aab69690 <line:399:20, line:413:13>
|   |   | |     |-IfStmt 0x1e4aab66148 <line:400:17, line:405:17>
|   |   | |     | |-BinaryOperator 0x1e4aab65db8 <line:400:21, col:25> 'int' '<'
|   |   | |     | | |-ImplicitCastExpr 0x1e4aab65da0 <col:21> 'int' <LValueToRValue>
|   |   | |     | | | `-DeclRefExpr 0x1e4aab65d58 <col:21> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |     | | `-IntegerLiteral 0x1e4aab65d78 <col:25> 'int' 3
|   |   | |     | `-CompoundStmt 0x1e4aab66118 <col:28, line:405:17>
|   |   | |     |   |-CallExpr 0x1e4aab65f00 <line:401:21, col:43> 'void *'
|   |   | |     |   | |-ImplicitCastExpr 0x1e4aab65ee8 <col:21> 'void *(*)(void *, const void *, unsigned long long)' <FunctionToPointerDecay>
|   |   | |     |   | | `-DeclRefExpr 0x1e4aab65dd8 <col:21> 'void *(void *, const void *, unsigned long long)' Function 0x1e4aab61ec0 'memcpy' 'void *(void *, const void *, unsigned long long)'
|   |   | |     |   | |-ImplicitCastExpr 0x1e4aab65f50 <col:28, col:33> 'void *' <BitCast>
|   |   | |     |   | | `-ImplicitCastExpr 0x1e4aab65f38 <col:28, col:33> 'char *' <ArrayToPointerDecay>
|   |   | |     |   | |   `-MemberExpr 0x1e4aab65e30 <col:28, col:33> 'char [1024]' lvalue ->tmp 0x1e4aab5f668
|   |   | |     |   | |     `-ImplicitCastExpr 0x1e4aab65e18 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   | |       `-DeclRefExpr 0x1e4aab65df8 <col:28> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   | |-ImplicitCastExpr 0x1e4aab65f80 <col:38> 'const void *' <BitCast>
|   |   | |     |   | | `-ImplicitCastExpr 0x1e4aab65f68 <col:38> 'const char *' <LValueToRValue>
|   |   | |     |   | |   `-DeclRefExpr 0x1e4aab65e60 <col:38> 'const char *' lvalue ParmVar 0x1e4aab5de30 'in' 'const char *'
|   |   | |     |   | `-ImplicitCastExpr 0x1e4aab65fb0 <col:42> 'unsigned long long' <IntegralCast>
|   |   | |     |   |   `-ImplicitCastExpr 0x1e4aab65f98 <col:42> 'int' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1e4aab65e80 <col:42> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |     |   |-BinaryOperator 0x1e4aab66068 <line:402:21, col:36> 'int' '='
|   |   | |     |   | |-MemberExpr 0x1e4aab66000 <col:21, col:26> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | |     |   | | `-ImplicitCastExpr 0x1e4aab65fe8 <col:21> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   | |   `-DeclRefExpr 0x1e4aab65fc8 <col:21> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   | `-ImplicitCastExpr 0x1e4aab66050 <col:36> 'int' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x1e4aab66030 <col:36> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |     |   |-CompoundAssignOperator 0x1e4aab660e0 <line:403:21, col:28> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |     |   | |-DeclRefExpr 0x1e4aab66088 <col:21> 'int' lvalue Var 0x1e4aab5e040 'ret' 'int'
|   |   | |     |   | `-ImplicitCastExpr 0x1e4aab660c8 <col:28> 'int' <LValueToRValue>
|   |   | |     |   |   `-DeclRefExpr 0x1e4aab660a8 <col:28> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |     |   `-BreakStmt 0x1e4aab66110 <line:404:21>
|   |   | |     |-CompoundAssignOperator 0x1e4aab69240 <line:406:17, col:26> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |     | |-DeclRefExpr 0x1e4aab66160 <col:17> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |     | `-BinaryOperator 0x1e4aab69220 <col:22, col:26> 'int' '%'
|   |   | |     |   |-ImplicitCastExpr 0x1e4aab69208 <col:22> 'int' <LValueToRValue>
|   |   | |     |   | `-DeclRefExpr 0x1e4aab66180 <col:22> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | |     |   `-IntegerLiteral 0x1e4aab691e0 <col:26> 'int' 3
|   |   | |     |-CallExpr 0x1e4aab695e0 <line:411:17, col:60> 'int'
|   |   | |     | |-ImplicitCastExpr 0x1e4aab695c8 <col:17> 'int (*)()' <FunctionToPointerDecay>
|   |   | |     | | `-DeclRefExpr 0x1e4aab69488 <col:17> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   |   | |     | `-BinaryOperator 0x1e4aab695a8 <col:32, col:53> 'int' '>='
|   |   | |     |   |-ImplicitCastExpr 0x1e4aab69578 <col:32, col:37> 'int' <LValueToRValue>
|   |   | |     |   | `-MemberExpr 0x1e4aab694e0 <col:32, col:37> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   | |     |   |   `-ImplicitCastExpr 0x1e4aab694c8 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |   |     `-DeclRefExpr 0x1e4aab694a8 <col:32> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |     |   `-ImplicitCastExpr 0x1e4aab69590 <col:48, col:53> 'int' <LValueToRValue>
|   |   | |     |     `-MemberExpr 0x1e4aab69548 <col:48, col:53> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   | |     |       `-ImplicitCastExpr 0x1e4aab69530 <col:48> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     |         `-DeclRefExpr 0x1e4aab69510 <col:48> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | |     `-CompoundAssignOperator 0x1e4aab69660 <line:412:17, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |       |-DeclRefExpr 0x1e4aab69608 <col:17> 'int' lvalue Var 0x1e4aab5e040 'ret' 'int'
|   |   | |       `-ImplicitCastExpr 0x1e4aab69648 <col:24> 'int' <LValueToRValue>
|   |   | |         `-DeclRefExpr 0x1e4aab69628 <col:24> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | `-CompoundStmt 0x1e4aab69e08 <line:414:16, line:422:9>
|   |   |   |-IfStmt 0x1e4aab69b28 <line:415:13, line:418:46>
|   |   |   | |-OpaqueValueExpr 0x1e4aab69b10 <<invalid sloc>> '_Bool'
|   |   |   | `-ReturnStmt 0x1e4aab69b00 <col:17, col:46>
|   |   |   |   `-ParenExpr 0x1e4aab69ae0 <col:24, col:46> 'int'
|   |   |   |     `-ConditionalOperator 0x1e4aab69ab0 <col:25, col:43> 'int'
|   |   |   |       |-ParenExpr 0x1e4aab69a18 <col:25, col:34> 'int'
|   |   |   |       | `-BinaryOperator 0x1e4aab699f8 <col:26, col:33> 'int' '=='
|   |   |   |       |   |-ImplicitCastExpr 0x1e4aab699e0 <col:26> 'int' <LValueToRValue>
|   |   |   |       |   | `-DeclRefExpr 0x1e4aab69998 <col:26> 'int' lvalue Var 0x1e4aab5e040 'ret' 'int'
|   |   |   |       |   `-IntegerLiteral 0x1e4aab699b8 <col:33> 'int' 0
|   |   |   |       |-UnaryOperator 0x1e4aab69a60 <col:38, col:39> 'int' prefix '-'
|   |   |   |       | `-IntegerLiteral 0x1e4aab69a38 <col:39> 'int' 1
|   |   |   |       `-ImplicitCastExpr 0x1e4aab69a98 <col:43> 'int' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x1e4aab69a78 <col:43> 'int' lvalue Var 0x1e4aab5e040 'ret' 'int'
|   |   |   |-CallExpr 0x1e4aab69d58 <line:420:13, col:56> 'int'
|   |   |   | |-ImplicitCastExpr 0x1e4aab69d40 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1e4aab69c00 <col:13> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   |   |   | `-BinaryOperator 0x1e4aab69d20 <col:28, col:49> 'int' '>='
|   |   |   |   |-ImplicitCastExpr 0x1e4aab69cf0 <col:28, col:33> 'int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x1e4aab69c58 <col:28, col:33> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |   |   |   `-ImplicitCastExpr 0x1e4aab69c40 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |   |     `-DeclRefExpr 0x1e4aab69c20 <col:28> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   |   |   `-ImplicitCastExpr 0x1e4aab69d08 <col:44, col:49> 'int' <LValueToRValue>
|   |   |   |     `-MemberExpr 0x1e4aab69cc0 <col:44, col:49> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |   |       `-ImplicitCastExpr 0x1e4aab69ca8 <col:44> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |         `-DeclRefExpr 0x1e4aab69c88 <col:44> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   |   `-CompoundAssignOperator 0x1e4aab69dd8 <line:421:13, col:20> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |     |-DeclRefExpr 0x1e4aab69d80 <col:13> 'int' lvalue Var 0x1e4aab5e040 'ret' 'int'
|   |   |     `-ImplicitCastExpr 0x1e4aab69dc0 <col:20> 'int' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1e4aab69da0 <col:20> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   |-CompoundAssignOperator 0x1e4aab69ec8 <line:423:9, col:16> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   | |-DeclRefExpr 0x1e4aab69e70 <col:9> 'int' lvalue ParmVar 0x1e4aab5deb0 'inl' 'int'
|   |   | `-ImplicitCastExpr 0x1e4aab69eb0 <col:16> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab69e90 <col:16> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   |-CompoundAssignOperator 0x1e4aab69f50 <line:424:9, col:15> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'
|   |   | |-DeclRefExpr 0x1e4aab69ef8 <col:9> 'const char *' lvalue ParmVar 0x1e4aab5de30 'in' 'const char *'
|   |   | `-ImplicitCastExpr 0x1e4aab69f38 <col:15> 'int' <LValueToRValue>
|   |   |   `-DeclRefExpr 0x1e4aab69f18 <col:15> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   |-BinaryOperator 0x1e4aab6a010 <line:426:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1e4aab69fb8 <col:9, col:14> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   | | `-ImplicitCastExpr 0x1e4aab69fa0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab69f80 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab69fe8 <col:24> 'int' 0
|   |   |-BinaryOperator 0x1e4aab6a0d0 <line:427:9, col:18> 'int' '='
|   |   | |-DeclRefExpr 0x1e4aab6a030 <col:9> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | `-ImplicitCastExpr 0x1e4aab6a0b8 <col:13, col:18> 'int' <LValueToRValue>
|   |   |   `-MemberExpr 0x1e4aab6a088 <col:13, col:18> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |     `-ImplicitCastExpr 0x1e4aab6a070 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       `-DeclRefExpr 0x1e4aab6a050 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   |-WhileStmt 0x1e4aab6d9c0 <line:428:9, line:439:9>
|   |   | |-BinaryOperator 0x1e4aab6a150 <line:428:16, col:20> 'int' '>'
|   |   | | |-ImplicitCastExpr 0x1e4aab6a138 <col:16> 'int' <LValueToRValue>
|   |   | | | `-DeclRefExpr 0x1e4aab6a0f0 <col:16> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   | | `-IntegerLiteral 0x1e4aab6a110 <col:20> 'int' 0
|   |   | `-CompoundStmt 0x1e4aab6d988 <col:23, line:439:9>
|   |   |   |-IfStmt 0x1e4aab6d4e8 <line:430:13, line:433:13>
|   |   |   | |-BinaryOperator 0x1e4aab6d320 <line:430:17, col:22> 'int' '<='
|   |   |   | | |-ImplicitCastExpr 0x1e4aab6d308 <col:17> 'int' <LValueToRValue>
|   |   |   | | | `-DeclRefExpr 0x1e4aab6d2c0 <col:17> 'int' lvalue Var 0x1e4aab6b298 'i' 'int'
|   |   |   | | `-IntegerLiteral 0x1e4aab6d2e0 <col:22> 'int' 0
|   |   |   | `-CompoundStmt 0x1e4aab6d4d0 <col:25, line:433:13>
|   |   |   |   `-ReturnStmt 0x1e4aab6d4c0 <line:432:17, col:45>
|   |   |   |     `-ParenExpr 0x1e4aab6d4a0 <col:24, col:45> 'int'
|   |   |   |       `-ConditionalOperator 0x1e4aab6d470 <col:25, col:42> 'int'
|   |   |   |         |-ParenExpr 0x1e4aab6d3e0 <col:25, col:34> 'int'
|   |   |   |         | `-BinaryOperator 0x1e4aab6d3c0 <col:26, col:33> 'int' '=='
|   |   |   |         |   |-ImplicitCastExpr 0x1e4aab6d3a8 <col:26> 'int' <LValueToRValue>
|   |   |   |         |   | `-DeclRefExpr 0x1e4aab6d360 <col:26> 'int' lvalue Var 0x1e4aab5e040 'ret' 'int'
|   |   |   |         |   `-IntegerLiteral 0x1e4aab6d380 <col:33> 'int' 0
|   |   |   |         |-ImplicitCastExpr 0x1e4aab6d440 <col:38> 'int' <LValueToRValue>
|   |   |   |         | `-DeclRefExpr 0x1e4aab6d400 <col:38> 'int' lvalue Var 0x1e4aab6b298 'i' 'int'
|   |   |   |         `-ImplicitCastExpr 0x1e4aab6d458 <col:42> 'int' <LValueToRValue>
|   |   |   |           `-DeclRefExpr 0x1e4aab6d420 <col:42> 'int' lvalue Var 0x1e4aab5e040 'ret' 'int'
|   |   |   |-CallExpr 0x1e4aab6d5c8 <line:434:13, col:34> 'int'
|   |   |   | |-ImplicitCastExpr 0x1e4aab6d5b0 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |   | | `-DeclRefExpr 0x1e4aab6d500 <col:13> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   |   |   | `-BinaryOperator 0x1e4aab6d590 <col:28, col:33> 'int' '<='
|   |   |   |   |-ImplicitCastExpr 0x1e4aab6d560 <col:28> 'int' <LValueToRValue>
|   |   |   |   | `-DeclRefExpr 0x1e4aab6d520 <col:28> 'int' lvalue Var 0x1e4aab6b298 'i' 'int'
|   |   |   |   `-ImplicitCastExpr 0x1e4aab6d578 <col:33> 'int' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1e4aab6d540 <col:33> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   |   |-CompoundAssignOperator 0x1e4aab6d648 <line:435:13, col:18> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-DeclRefExpr 0x1e4aab6d5f0 <col:13> 'int' lvalue Var 0x1e4aab6b200 'n' 'int'
|   |   |   | `-ImplicitCastExpr 0x1e4aab6d630 <col:18> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1e4aab6d610 <col:18> 'int' lvalue Var 0x1e4aab6b298 'i' 'int'
|   |   |   |-CompoundAssignOperator 0x1e4aab6d718 <line:436:13, col:29> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'
|   |   |   | |-MemberExpr 0x1e4aab6d6b0 <col:13, col:18> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |   | | `-ImplicitCastExpr 0x1e4aab6d698 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |   `-DeclRefExpr 0x1e4aab6d678 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1e4aab6d700 <col:29> 'int' <LValueToRValue>
|   |   |   |   `-DeclRefExpr 0x1e4aab6d6e0 <col:29> 'int' lvalue Var 0x1e4aab6b298 'i' 'int'
|   |   |   `-CallExpr 0x1e4aab6d960 <line:438:13, col:56> 'int'
|   |   |     |-ImplicitCastExpr 0x1e4aab6d948 <col:13> 'int (*)()' <FunctionToPointerDecay>
|   |   |     | `-DeclRefExpr 0x1e4aab6d808 <col:13> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   |   |     `-BinaryOperator 0x1e4aab6d928 <col:28, col:49> 'int' '>='
|   |   |       |-ImplicitCastExpr 0x1e4aab6d8f8 <col:28, col:33> 'int' <LValueToRValue>
|   |   |       | `-MemberExpr 0x1e4aab6d860 <col:28, col:33> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |       |   `-ImplicitCastExpr 0x1e4aab6d848 <col:28> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |       |     `-DeclRefExpr 0x1e4aab6d828 <col:28> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   |       `-ImplicitCastExpr 0x1e4aab6d910 <col:44, col:49> 'int' <LValueToRValue>
|   |   |         `-MemberExpr 0x1e4aab6d8c8 <col:44, col:49> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |           `-ImplicitCastExpr 0x1e4aab6d8b0 <col:44> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x1e4aab6d890 <col:44> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x1e4aab6da68 <line:440:9, col:24> 'int' '='
|   |   | |-MemberExpr 0x1e4aab6da10 <col:9, col:14> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   | | `-ImplicitCastExpr 0x1e4aab6d9f8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab6d9d8 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab6da40 <col:24> 'int' 0
|   |   `-BinaryOperator 0x1e4aab6db18 <line:441:9, col:24> 'int' '='
|   |     |-MemberExpr 0x1e4aab6dac0 <col:9, col:14> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |     | `-ImplicitCastExpr 0x1e4aab6daa8 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |     |   `-DeclRefExpr 0x1e4aab6da88 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6b328 'ctx' 'BIO_B64_CTX *'
|   |     `-IntegerLiteral 0x1e4aab6daf0 <col:24> 'int' 0
|   `-ReturnStmt 0x1e4aab6dc00 <line:443:5, col:16>
|     `-ImplicitCastExpr 0x1e4aab6dbe8 <col:12, col:16> 'int' <LValueToRValue>
|       `-ParenExpr 0x1e4aab6dbc8 <col:12, col:16> 'int' lvalue
|         `-DeclRefExpr 0x1e4aab6dba8 <col:13> 'int' lvalue Var 0x1e4aab5e040 'ret' 'int'
|-FunctionDecl 0x1e4aab6ded8 <line:446:1, line:531:1> line:446:13 invalid b64_ctrl 'long (int *, int, long, void *)' static
| |-ParmVarDecl 0x1e4aab6dca8 <col:22, col:27> col:27 invalid b 'int *'
| |-ParmVarDecl 0x1e4aab6dd28 <col:30, col:34> col:34 used cmd 'int'
| |-ParmVarDecl 0x1e4aab6dda8 <col:39, col:44> col:44 used num 'long'
| |-ParmVarDecl 0x1e4aab6de28 <col:49, col:55> col:55 used ptr 'void *'
| `-CompoundStmt 0x1e4aab677c0 <line:447:1, line:531:1>
|   |-DeclStmt 0x1e4aab6e028 <line:448:5, col:21>
|   | `-VarDecl 0x1e4aab6dfc0 <col:5, col:18> col:18 used ctx 'BIO_B64_CTX *'
|   |-DeclStmt 0x1e4aab6e100 <line:449:5, col:17>
|   | `-VarDecl 0x1e4aab6e058 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1e4aab6e0e8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1e4aab6e0c0 <col:16> 'int' 1
|   |-DeclStmt 0x1e4aab6e198 <line:450:5, col:10>
|   | `-VarDecl 0x1e4aab6e130 <col:5, col:9> col:9 used i 'int'
|   |-IfStmt 0x1e4aab6c438 <line:455:5, line:456:16>
|   | |-OpaqueValueExpr 0x1e4aab6c420 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e4aab6c410 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x1e4aab6c3f8 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1e4aab6c3d0 <col:16> 'int' 0
|   |-SwitchStmt 0x1e4aab6c4a0 <line:458:5, line:529:5>
|   | |-ImplicitCastExpr 0x1e4aab6c488 <line:458:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e4aab6c450 <col:13> 'int' lvalue ParmVar 0x1e4aab6dd28 'cmd' 'int'
|   | `-CompoundStmt 0x1e4aab676c8 <col:18, line:529:5>
|   |   |-BinaryOperator 0x1e4aab6c550 <line:460:9, col:21> 'int' '='
|   |   | |-MemberExpr 0x1e4aab6c4f8 <col:9, col:14> 'int' lvalue ->cont 0x1e4aab5f238
|   |   | | `-ImplicitCastExpr 0x1e4aab6c4e0 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab6c4c0 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab6c528 <col:21> 'int' 1
|   |   |-BinaryOperator 0x1e4aab6c600 <line:461:9, col:22> 'int' '='
|   |   | |-MemberExpr 0x1e4aab6c5a8 <col:9, col:14> 'int' lvalue ->start 0x1e4aab5f1c8
|   |   | | `-ImplicitCastExpr 0x1e4aab6c590 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab6c570 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab6c5d8 <col:22> 'int' 1
|   |   |-BinaryOperator 0x1e4aab6c6b0 <line:462:9, line:29:25> 'int' '='
|   |   | |-MemberExpr 0x1e4aab6c658 <line:462:9, col:14> 'int' lvalue ->encode 0x1e4aab5f158
|   |   | | `-ImplicitCastExpr 0x1e4aab6c640 <col:9> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   `-DeclRefExpr 0x1e4aab6c620 <col:9> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   | `-IntegerLiteral 0x1e4aab6c688 <line:29:25> 'int' 0
|   |   |-BreakStmt 0x1e4aab6c8a8 <line:464:9>
|   |   |-IfStmt 0x1e4aab6caa0 <line:466:9, line:469:13> has_else
|   |   | |-BinaryOperator 0x1e4aab6c958 <line:466:13, col:26> 'int' '<='
|   |   | | |-ImplicitCastExpr 0x1e4aab6c940 <col:13, col:18> 'int' <LValueToRValue>
|   |   | | | `-MemberExpr 0x1e4aab6c8e8 <col:13, col:18> 'int' lvalue ->cont 0x1e4aab5f238
|   |   | | |   `-ImplicitCastExpr 0x1e4aab6c8d0 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | | |     `-DeclRefExpr 0x1e4aab6c8b0 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   | | `-IntegerLiteral 0x1e4aab6c918 <col:26> 'int' 0
|   |   | |-BinaryOperator 0x1e4aab6c9d8 <line:467:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x1e4aab6c978 <col:13> 'long' lvalue Var 0x1e4aab6e058 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x1e4aab6c9c0 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1e4aab6c998 <col:19> 'int' 1
|   |   | `-NullStmt 0x1e4aab6ca98 <line:469:13>
|   |   |-BreakStmt 0x1e4aab6cac8 <line:470:9>
|   |   |-CallExpr 0x1e4aab6cc28 <line:472:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x1e4aab6cc10 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1e4aab6cad0 <col:9> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x1e4aab6cbf0 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x1e4aab6cbc0 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x1e4aab6cb28 <col:24, col:29> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |   |   `-ImplicitCastExpr 0x1e4aab6cb10 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1e4aab6caf0 <col:24> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x1e4aab6cbd8 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x1e4aab6cb90 <col:40, col:45> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |       `-ImplicitCastExpr 0x1e4aab6cb78 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1e4aab6cb58 <col:40> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x1e4aab6cda8 <line:473:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x1e4aab6cc50 <col:9> 'long' lvalue Var 0x1e4aab6e058 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1e4aab6cd90 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x1e4aab6cd70 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x1e4aab6cd40 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x1e4aab6cca8 <col:15, col:20> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |     |   `-ImplicitCastExpr 0x1e4aab6cc90 <col:15> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1e4aab6cc70 <col:15> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   |     `-ImplicitCastExpr 0x1e4aab6cd58 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x1e4aab6cd10 <col:30, col:35> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |         `-ImplicitCastExpr 0x1e4aab6ccf8 <col:30> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x1e4aab6ccd8 <col:30> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   |-IfStmt 0x1e4aab66270 <line:474:9, line:477:14> has_else
|   |   | |-OpaqueValueExpr 0x1e4aab66258 <<invalid sloc>> '_Bool'
|   |   | |-BinaryOperator 0x1e4aab6d158 <line:476:13, col:19> 'long' '='
|   |   | | |-DeclRefExpr 0x1e4aab6d0f8 <col:13> 'long' lvalue Var 0x1e4aab6e058 'ret' 'long'
|   |   | | `-ImplicitCastExpr 0x1e4aab6d140 <col:19> 'long' <IntegralCast>
|   |   | |   `-IntegerLiteral 0x1e4aab6d118 <col:19> 'int' 1
|   |   | `-NullStmt 0x1e4aab66250 <line:477:14>
|   |   |-BreakStmt 0x1e4aab66298 <line:479:9>
|   |   |-CallExpr 0x1e4aab663f8 <line:481:9, col:52> 'int'
|   |   | |-ImplicitCastExpr 0x1e4aab663e0 <col:9> 'int (*)()' <FunctionToPointerDecay>
|   |   | | `-DeclRefExpr 0x1e4aab662a0 <col:9> 'int ()' Function 0x1e4aab61850 'OPENSSL_assert' 'int ()'
|   |   | `-BinaryOperator 0x1e4aab663c0 <col:24, col:45> 'int' '>='
|   |   |   |-ImplicitCastExpr 0x1e4aab66390 <col:24, col:29> 'int' <LValueToRValue>
|   |   |   | `-MemberExpr 0x1e4aab662f8 <col:24, col:29> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |   |   `-ImplicitCastExpr 0x1e4aab662e0 <col:24> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |     `-DeclRefExpr 0x1e4aab662c0 <col:24> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-ImplicitCastExpr 0x1e4aab663a8 <col:40, col:45> 'int' <LValueToRValue>
|   |   |     `-MemberExpr 0x1e4aab66360 <col:40, col:45> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |       `-ImplicitCastExpr 0x1e4aab66348 <col:40> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |         `-DeclRefExpr 0x1e4aab66328 <col:40> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   |-BinaryOperator 0x1e4aab66578 <line:482:9, col:35> 'long' '='
|   |   | |-DeclRefExpr 0x1e4aab66420 <col:9> 'long' lvalue Var 0x1e4aab6e058 'ret' 'long'
|   |   | `-ImplicitCastExpr 0x1e4aab66560 <col:15, col:35> 'long' <IntegralCast>
|   |   |   `-BinaryOperator 0x1e4aab66540 <col:15, col:35> 'int' '-'
|   |   |     |-ImplicitCastExpr 0x1e4aab66510 <col:15, col:20> 'int' <LValueToRValue>
|   |   |     | `-MemberExpr 0x1e4aab66478 <col:15, col:20> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |     |   `-ImplicitCastExpr 0x1e4aab66460 <col:15> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     |     `-DeclRefExpr 0x1e4aab66440 <col:15> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   |     `-ImplicitCastExpr 0x1e4aab66528 <col:30, col:35> 'int' <LValueToRValue>
|   |   |       `-MemberExpr 0x1e4aab664e0 <col:30, col:35> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |         `-ImplicitCastExpr 0x1e4aab664c8 <col:30> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |           `-DeclRefExpr 0x1e4aab664a8 <col:30> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   |-BreakStmt 0x1e4aab666d0 <line:485:9>
|   |   |-LabelStmt 0x1e4aab66a58 <line:488:2, line:493:9> 'again'
|   |   | `-WhileStmt 0x1e4aab669f0 <line:489:9, line:493:9>
|   |   |   |-BinaryOperator 0x1e4aab667d8 <line:489:16, col:37> 'int' '!='
|   |   |   | |-ImplicitCastExpr 0x1e4aab667a8 <col:16, col:21> 'int' <LValueToRValue>
|   |   |   | | `-MemberExpr 0x1e4aab66710 <col:16, col:21> 'int' lvalue ->buf_len 0x1e4aab59f38
|   |   |   | |   `-ImplicitCastExpr 0x1e4aab666f8 <col:16> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   | |     `-DeclRefExpr 0x1e4aab666d8 <col:16> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   |   | `-ImplicitCastExpr 0x1e4aab667c0 <col:32, col:37> 'int' <LValueToRValue>
|   |   |   |   `-MemberExpr 0x1e4aab66778 <col:32, col:37> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |   |     `-ImplicitCastExpr 0x1e4aab66760 <col:32> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |   |       `-DeclRefExpr 0x1e4aab66740 <col:32> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   |   `-CompoundStmt 0x1e4aab669d8 <col:46, line:493:9>
|   |   |     `-IfStmt 0x1e4aab669c0 <line:491:13, line:492:24>
|   |   |       |-BinaryOperator 0x1e4aab66940 <line:491:17, col:21> 'int' '<'
|   |   |       | |-ImplicitCastExpr 0x1e4aab66928 <col:17> 'int' <LValueToRValue>
|   |   |       | | `-DeclRefExpr 0x1e4aab668e0 <col:17> 'int' lvalue Var 0x1e4aab6e130 'i' 'int'
|   |   |       | `-IntegerLiteral 0x1e4aab66900 <col:21> 'int' 0
|   |   |       `-ReturnStmt 0x1e4aab669b0 <line:492:17, col:24>
|   |   |         `-ImplicitCastExpr 0x1e4aab66998 <col:24> 'long' <IntegralCast>
|   |   |           `-ImplicitCastExpr 0x1e4aab66980 <col:24> 'int' <LValueToRValue>
|   |   |             `-DeclRefExpr 0x1e4aab66960 <col:24> 'int' lvalue Var 0x1e4aab6e130 'i' 'int'
|   |   |-IfStmt 0x1e4aab67438 <line:494:9, line:510:9> has_else
|   |   | |-OpaqueValueExpr 0x1e4aab67420 <<invalid sloc>> '_Bool'
|   |   | |-CompoundStmt 0x1e4aab66ef8 <line:494:56, line:503:9>
|   |   | | `-IfStmt 0x1e4aab66ee0 <line:495:13, line:502:13>
|   |   | |   |-BinaryOperator 0x1e4aab66b38 <line:495:17, col:33> 'int' '!='
|   |   | |   | |-ImplicitCastExpr 0x1e4aab66b20 <col:17, col:22> 'int' <LValueToRValue>
|   |   | |   | | `-MemberExpr 0x1e4aab66ac8 <col:17, col:22> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | |   | |   `-ImplicitCastExpr 0x1e4aab66ab0 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |   | |     `-DeclRefExpr 0x1e4aab66a90 <col:17> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   | |   | `-IntegerLiteral 0x1e4aab66af8 <col:33> 'int' 0
|   |   | |   `-CompoundStmt 0x1e4aab66eb8 <col:36, line:502:13>
|   |   | |     |-BinaryOperator 0x1e4aab66dd0 <line:499:17, col:32> 'int' '='
|   |   | |     | |-MemberExpr 0x1e4aab66d78 <col:17, col:22> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   | |     | | `-ImplicitCastExpr 0x1e4aab66d60 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     | |   `-DeclRefExpr 0x1e4aab66d40 <col:17> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   | |     | `-IntegerLiteral 0x1e4aab66da8 <col:32> 'int' 0
|   |   | |     |-BinaryOperator 0x1e4aab66e80 <line:500:17, col:32> 'int' '='
|   |   | |     | |-MemberExpr 0x1e4aab66e28 <col:17, col:22> 'int' lvalue ->tmp_len 0x1e4aab5a018
|   |   | |     | | `-ImplicitCastExpr 0x1e4aab66e10 <col:17> 'BIO_B64_CTX *' <LValueToRValue>
|   |   | |     | |   `-DeclRefExpr 0x1e4aab66df0 <col:17> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   | |     | `-IntegerLiteral 0x1e4aab66e58 <col:32> 'int' 0
|   |   | |     `-GotoStmt 0x1e4aab66ea0 <line:501:17, col:22> 'again' 0x1e4aab66a08
|   |   | `-IfStmt 0x1e4aab67408 <line:503:16, line:510:9>
|   |   |   |-OpaqueValueExpr 0x1e4aab673f0 <<invalid sloc>> '_Bool'
|   |   |   `-CompoundStmt 0x1e4aab673d0 <line:504:61, line:510:9>
|   |   |     |-BinaryOperator 0x1e4aab670e8 <line:505:13, col:28> 'int' '='
|   |   |     | |-MemberExpr 0x1e4aab67090 <col:13, col:18> 'int' lvalue ->buf_off 0x1e4aab59fa8
|   |   |     | | `-ImplicitCastExpr 0x1e4aab67078 <col:13> 'BIO_B64_CTX *' <LValueToRValue>
|   |   |     | |   `-DeclRefExpr 0x1e4aab67058 <col:13> 'BIO_B64_CTX *' lvalue Var 0x1e4aab6dfc0 'ctx' 'BIO_B64_CTX *'
|   |   |     | `-IntegerLiteral 0x1e4aab670c0 <col:28> 'int' 0
|   |   |     `-GotoStmt 0x1e4aab673b8 <line:509:13, col:18> 'again' 0x1e4aab66a08
|   |   |-BreakStmt 0x1e4aab67500 <line:513:9>
|   |   |-BreakStmt 0x1e4aab675e8 <line:519:9>
|   |   |-BreakStmt 0x1e4aab675f0 <line:522:9>
|   |   |-DefaultStmt 0x1e4aab676a0 <line:526:5, col:12>
|   |   | `-NullStmt 0x1e4aab67698 <col:12>
|   |   `-BreakStmt 0x1e4aab676c0 <line:528:9>
|   `-ReturnStmt 0x1e4aab677b0 <line:530:5, col:12>
|     `-ImplicitCastExpr 0x1e4aab67798 <col:12> 'long' <LValueToRValue>
|       `-DeclRefExpr 0x1e4aab67778 <col:12> 'long' lvalue Var 0x1e4aab6e058 'ret' 'long'
|-FunctionDecl 0x1e4aab679c0 <line:533:1, line:546:1> line:533:13 invalid b64_callback_ctrl 'long (int *, int, int *)' static
| |-ParmVarDecl 0x1e4aab67818 <col:31, col:36> col:36 invalid b 'int *'
| |-ParmVarDecl 0x1e4aab67898 <col:39, col:43> col:43 used cmd 'int'
| |-ParmVarDecl 0x1e4aab67918 <col:48, col:61> col:61 invalid fp 'int *'
| `-CompoundStmt 0x1e4aab67f20 <line:534:1, line:546:1>
|   |-DeclStmt 0x1e4aab67b50 <line:535:5, col:17>
|   | `-VarDecl 0x1e4aab67aa8 <col:5, col:16> col:10 used ret 'long' cinit
|   |   `-ImplicitCastExpr 0x1e4aab67b38 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1e4aab67b10 <col:16> 'int' 1
|   |-IfStmt 0x1e4aab67c78 <line:538:5, line:539:16>
|   | |-OpaqueValueExpr 0x1e4aab67c60 <<invalid sloc>> '_Bool'
|   | `-ReturnStmt 0x1e4aab67c50 <col:9, col:16>
|   |   `-ImplicitCastExpr 0x1e4aab67c38 <col:16> 'long' <IntegralCast>
|   |     `-IntegerLiteral 0x1e4aab67c10 <col:16> 'int' 0
|   |-SwitchStmt 0x1e4aab67ce0 <line:540:5, line:544:5>
|   | |-ImplicitCastExpr 0x1e4aab67cc8 <line:540:13> 'int' <LValueToRValue>
|   | | `-DeclRefExpr 0x1e4aab67c90 <col:13> 'int' lvalue ParmVar 0x1e4aab67898 'cmd' 'int'
|   | `-CompoundStmt 0x1e4aab67e98 <col:18, line:544:5>
|   |   |-DefaultStmt 0x1e4aab67e70 <line:541:5, col:12>
|   |   | `-NullStmt 0x1e4aab67e68 <col:12>
|   |   `-BreakStmt 0x1e4aab67e90 <line:543:9>
|   `-ReturnStmt 0x1e4aab67f10 <line:545:5, col:16>
|     `-ImplicitCastExpr 0x1e4aab67ef8 <col:12, col:16> 'long' <LValueToRValue>
|       `-ParenExpr 0x1e4aab67ed8 <col:12, col:16> 'long' lvalue
|         `-DeclRefExpr 0x1e4aab67eb8 <col:13> 'long' lvalue Var 0x1e4aab67aa8 'ret' 'long'
|-FunctionDecl 0x1e4aab68088 <line:548:1, line:551:1> line:548:12 invalid b64_puts 'int (int *, const char *)' static
| |-ParmVarDecl 0x1e4aab67f68 <col:21, col:26> col:26 invalid b 'int *'
| |-ParmVarDecl 0x1e4aab67fe8 <col:29, col:41> col:41 used str 'const char *'
| `-CompoundStmt 0x1e4aab6f440 <line:549:1, line:551:1>
`-FunctionDecl 0x1e4aab6f240 <line:550:30> col:30 implicit used strlen 'unsigned long long (const char *)' extern
  `-ParmVarDecl 0x1e4aab6f2e0 <<invalid sloc>> <invalid sloc> 'const char *'
